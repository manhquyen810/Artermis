import{d as b}from"./chunk-CK7FH6VF.js";import{a as l}from"./chunk-G3JOQOSD.js";import{b as c}from"./chunk-CT44YL7Q.js";import{L as p,O as h}from"./chunk-IOA4DPXY.js";import{Ea as m,ya as a,z as o}from"./chunk-5LC5EQRR.js";var F=(()=>{class u{http=m(h);submissionService=m(b);resourceUrl="api/modeling";create(i,e){let s=this.submissionService.convert(i);return this.http.post(`${this.resourceUrl}/exercises/${e}/modeling-submissions`,c(s),{headers:{"Content-Type":"application/json"},observe:"response"}).pipe(o(r=>this.submissionService.convertResponse(r)))}update(i,e){let s=this.submissionService.convert(i);return this.http.put(`${this.resourceUrl}/exercises/${e}/modeling-submissions`,c(s),{headers:{"Content-Type":"application/json"},observe:"response"}).pipe(o(r=>this.submissionService.convertResponse(r)))}getSubmissions(i,e,s=0){let r=`${this.resourceUrl}/exercises/${i}/modeling-submissions`,t=l(e);return s!==0&&(t=t.set("correction-round",s.toString())),this.http.get(r,{params:t,observe:"response"}).pipe(o(n=>this.submissionService.convertArrayResponse(n)))}getSubmissionWithoutAssessment(i,e,s=0){let r=`${this.resourceUrl}/exercises/${i}/modeling-submission-without-assessment`,t=new p;return s!==0&&(t=t.set("correction-round",s.toString())),e&&(t=t.set("lock","true")),this.http.get(r,{params:t}).pipe(o(n=>{if(n)return this.submissionService.convertSubmissionFromServer(n)}))}getSubmission(i,e=0,s){let r=`${this.resourceUrl}/modeling-submissions/${i}`,t=new p;return e!==0&&(t=t.set("correction-round",e.toString())),s&&s>0&&(t=t.set("resultId",s.toString())),this.http.get(r,{params:t}).pipe(o(n=>this.submissionService.convertSubmissionFromServer(n)))}getSubmissionWithoutLock(i){let e=`${this.resourceUrl}/modeling-submissions/${i}`,s=new p;return s=s.set("withoutResults","true"),this.http.get(e,{params:s}).pipe(o(r=>this.submissionService.convertSubmissionFromServer(r)))}getLatestSubmissionForModelingEditor(i){return this.http.get(`${this.resourceUrl}/participations/${i}/latest-modeling-submission`,{responseType:"json"}).pipe(o(e=>this.submissionService.convertSubmissionFromServer(e)))}getSubmissionsWithResultsForParticipation(i){let e=`${this.resourceUrl}/participations/${i}/submissions-with-results`;return this.http.get(e).pipe(o(s=>s.map(r=>this.submissionService.convertSubmissionFromServer(r))))}static \u0275fac=function(e){return new(e||u)};static \u0275prov=a({token:u,factory:u.\u0275fac,providedIn:"root"})}return u})();export{F as a};
//# sourceMappingURL=chunk-LXDP326M.js.map
