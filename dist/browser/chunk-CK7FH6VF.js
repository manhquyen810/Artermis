import{b as R,e as F}from"./chunk-PUNMJFMR.js";import{a as $}from"./chunk-R75LTV62.js";import{a as O,b as N}from"./chunk-XBLNBTXN.js";import{a as y}from"./chunk-G3JOQOSD.js";import{a as A,b as v,c as U}from"./chunk-G4I63THF.js";import{a as p,b as a}from"./chunk-EELXLOHY.js";import{b as d}from"./chunk-R5BZWVRQ.js";import{p as u}from"./chunk-DID2YGL7.js";import{c as b,f}from"./chunk-CXQURQM5.js";import{c as I}from"./chunk-E2KBL4LX.js";import{O as m}from"./chunk-IOA4DPXY.js";import{Ea as c,L as C,ra as g,ya as l,z as i}from"./chunk-5LC5EQRR.js";var D=class extends U{student;team;testRun;constructor(B){super(B??v.STUDENT)}};function z(s){return s?.testRun}var P=class extends D{repositoryUri;buildPlanId;branch;locked;buildPlanUrl;userIndependentRepositoryUri;vcsAccessToken;constructor(){super(v.PROGRAMMING)}};var L=(()=>{class s{http=c(m);accountService=c(d);resourceUrl="api/assessment/complaints";isComplaintResponseLockedForLoggedInUser(e,t){return!this.accountService.isAtLeastInstructorForExercise(t)&&this.isComplaintResponseLockedByOtherUser(e)}isComplaintResponseLockedByOtherUser(e){return!!e.isCurrentlyLocked&&e.submittedTime===void 0&&e.reviewer?.login!==this.accountService.userIdentity?.login}isComplaintResponseLockedByLoggedInUser(e){return!!e.isCurrentlyLocked&&e.submittedTime===void 0&&e.reviewer?.login===this.accountService.userIdentity?.login}removeLock(e){return this.http.delete(`${this.resourceUrl}/${e}/response`,{observe:"response"})}createLock(e){return this.http.post(`${this.resourceUrl}/${e}/response`,{},{observe:"response"}).pipe(i(t=>this.convertComplaintResponseEntityResponseDatesFromServer(t)))}refreshLockOrResolveComplaint(e,t){return this.http.patch(`${this.resourceUrl}/${t}/response`,e,{observe:"response"})}convertComplaintResponseEntityResponseDatesFromServer(e){return e.body&&this.convertComplaintResponseDatesFromServer(e.body),e}convertComplaintResponseDatesFromServer(e){return e&&(e.submittedTime=a(e.submittedTime),e.lockEndDate=a(e.lockEndDate)),e}static \u0275fac=function(t){return new(t||s)};static \u0275prov=l({token:s,factory:s.\u0275fac,providedIn:"root"})}return s})();var j=(()=>{class s{http=c(m);complaintResponseService=c(L);accountService=c(d);resourceUrl="api/exercise/submissions";resourceUrlParticipation="api/exercise/participations";delete(e,t){let r=y(t);return this.http.delete(`${this.resourceUrl}/${e}`,{params:r,observe:"response"})}findAllSubmissionsOfParticipation(e){return this.http.get(`${this.resourceUrlParticipation}/${e}/submissions`,{observe:"response"}).pipe(i(t=>this.convertSubmissionArrayResponseDatesFromServer(t)),C(t=>!!t.body),g(t=>t.body.forEach(r=>{s.reconnectSubmissionAndResult(r),this.setSubmissionAccessRights(r)})))}getSubmissionsWithComplaintsForTutor(e){return this.http.get(`api/exercise/exercises/${e}/submissions-with-complaints`,{observe:"response"}).pipe(i(t=>this.convertDTOsFromServer(t)))}getSubmissionsWithMoreFeedbackRequestsForTutor(e){return this.http.get(`api/exercise/exercises/${e}/more-feedback-requests-with-complaints`,{observe:"response"}).pipe(i(t=>this.convertDTOsFromServer(t)))}convertDTOsFromServer(e){return e.body&&e.body.forEach(t=>{t.submission=s.convertSubmissionDateFromServer(t.submission),t.complaint=this.convertComplaintDatesFromServer(t.complaint),this.setSubmissionAccessRights(t.submission)}),e}static convertSubmissionDateFromServer(e){return e&&(e.submissionDate=a(e.submissionDate),this.reconnectSubmissionAndResult(e)),e}convertComplaintDatesFromServer(e){return e.submittedTime=a(e.submittedTime),e.complaintResponse&&this.complaintResponseService.convertComplaintResponseDatesFromServer(e.complaintResponse),e}static reconnectSubmissionAndResult(e){let t=R(e);t&&(F(e,t),t.submission=e)}convertResultArrayDatesFromServer(e){let t=[];return e!=null&&e.length>0&&e.forEach(r=>{r.completionDate=a(r.completionDate),t.push(r)}),t}convertSubmissionArrayDatesFromServer(e){let t=[];return e!=null&&e.length>0&&e.forEach(r=>{r!==null&&(r.submissionDate=a(r.submissionDate),s.reconnectSubmissionAndResult(r),t.push(r))}),t}convertSubmissionArrayResponseDatesFromServer(e){return e.body&&this.convertSubmissionArrayDatesFromServer(e.body),e}getTestRunSubmissionsForExercise(e){return this.http.get(`api/exercise/exercises/${e}/test-run-submissions`,{observe:"response"}).pipe(i(t=>this.convertArrayResponse(t)))}convertResponse(e){let t=this.convertSubmissionFromServer(e.body);return e.clone({body:t})}convertArrayResponse(e){let t=e.body,r=[];for(let o=0;o<t.length;o++)r.push(this.convertSubmissionFromServer(t[o]));return e.clone({body:r})}convertSubmissionResponseFromServer(e){let t=e.body;return F(t,R(t)),this.setSubmissionAccessRights(t),s.convertConnectedParticipationFromServer(t),e}convertSubmissionFromServer(e){let t=this.convert(e);return F(t,R(t)),this.setSubmissionAccessRights(t),s.convertConnectedParticipationFromServer(t),t}convert(e){return Object.assign({},e)}setSubmissionAccessRights(e){return e.participation?.exercise&&this.accountService.setAccessRightsForExerciseAndReferencedCourse(e.participation.exercise),e}static convertConnectedParticipationFromServer(e){return e.participation&&(e.participation=E.convertParticipationDatesFromServer(e.participation),S.convertExerciseDatesFromServer(e.participation?.exercise)),e}handleFeedbackCorrectionRoundTag(e,t){if(e>0&&t?.results&&t.results.length>1){let r=t.results[0];t.results[1].feedbacks.forEach(n=>{r.feedbacks.forEach(h=>{n.copiedFeedbackId===void 0&&this.areFeedbacksCopies(h,n)?n.copiedFeedbackId=h.id:n.copiedFeedbackId===h.id&&!this.areFeedbacksCopies(h,n)&&(n.copiedFeedbackId=void 0)})})}}areFeedbacksCopies(e,t){return t.type===e.type&&t.credits===e.credits&&t.detailText===e.detailText&&t.reference===e.reference&&t.text===e.text}static \u0275fac=function(t){return new(t||s)};static \u0275prov=l({token:s,factory:s.\u0275fac,providedIn:"root"})}return s})();var E=(()=>{class s{http=c(m);submissionService=c(j);accountService=c(d);resourceUrl="api/exercise/participations";update(e,t){let r=this.convertParticipationForServer(t,e);return this.http.put(`api/exercise/exercises/${e.id}/participations`,r,{observe:"response"}).pipe(i(o=>this.processParticipationEntityResponseType(o)))}updateIndividualDueDates(e,t){let r=t.map(o=>this.convertParticipationForServer(o,e));return this.http.put(`api/exercise/exercises/${e.id}/participations/update-individual-due-date`,r,{observe:"response"}).pipe(i(o=>this.processParticipationEntityArrayResponseType(o)))}convertParticipationForServer(e,t){return e.exercise=S.convertExerciseFromClient(t),this.convertParticipationDatesFromClient(e)}find(e){return this.http.get(`${this.resourceUrl}/${e}`,{observe:"response"}).pipe(i(t=>this.processParticipationEntityResponseType(t)))}findParticipationForCurrentUser(e){return this.http.get(`api/exercise/exercises/${e}/participation`,{observe:"response"}).pipe(i(t=>this.processParticipationEntityResponseType(t)))}startQuizParticipation(e){return this.http.post(`api/quiz/quiz-exercises/${e}/start-participation`,{},{observe:"response"}).pipe(i(t=>this.processParticipationEntityResponseType(t)))}findAllParticipationsByExercise(e,t=!1){let r=y({withLatestResults:t});return this.http.get(`api/exercise/exercises/${e}/participations`,{params:r,observe:"response"}).pipe(i(o=>this.processParticipationEntityArrayResponseType(o)))}delete(e,t){let r=y(t);return this.http.delete(`${this.resourceUrl}/${e}`,{params:r,observe:"response"})}deleteForGuidedTour(e,t){let r=y(t);return this.http.delete(`api/exercise/guided-tour/participations/${e}`,{params:r,observe:"response"})}cleanupBuildPlan(e){let t=this.convertParticipationDatesFromClient(e);return this.http.put(`${this.resourceUrl}/${e.id}/cleanup-build-plan`,t,{observe:"response"}).pipe(i(r=>this.convertParticipationResponseDatesFromServer(r)))}downloadArtifact(e){return this.http.get(`${this.resourceUrl}/${e}/build-artifact`,{observe:"response",responseType:"blob"}).pipe(i(t=>{let r=(t.headers.get("content-disposition")||"").split("filename=")[1];return{fileName:r?r.replace(/"/g,""):"artifact",fileContent:t.body}}))}shouldPreferPractice(e){return!!e?.dueDate&&u().isAfter(e.dueDate)}getBuildJobIdsForResultsOfParticipation(e){return this.http.get(`api/assessment/participations/${e}/results/build-job-ids`)}convertParticipationDatesFromClient(e){return Object.assign({},e,{initializationDate:p(e.initializationDate),individualDueDate:p(e.individualDueDate)})}convertParticipationResponseDatesFromServer(e){return e.body&&(s.convertParticipationDatesFromServer(e.body),e.body.results=this.submissionService.convertResultArrayDatesFromServer(e.body.results),e.body.submissions=this.submissionService.convertSubmissionArrayDatesFromServer(e.body.submissions),e.body.exercise=S.convertExerciseDatesFromServer(e.body.exercise)),e}convertParticipationResponseArrayDatesFromServer(e){return e.body&&e.body.forEach(t=>{s.convertParticipationDatesFromServer(t)}),e}static convertParticipationDatesFromServer(e){return e&&(e.initializationDate=a(e.initializationDate),e.individualDueDate=a(e.individualDueDate),e.exercise&&(e.exercise=S.convertExerciseDatesFromServer(e.exercise))),e}static convertParticipationArrayDatesFromServer(e){let t=[];return e?.length&&e.forEach(r=>{t.push(s.convertParticipationDatesFromServer(r))}),t}mergeStudentParticipations(e){let t=[];if(e?.length){let r=e.filter(n=>!n.testRun),o=e.filter(n=>n.testRun);if(e[0].type===v.STUDENT){if(r.length){let n=new D;this.mergeResultsAndSubmissions(n,r),t.push(n)}if(o.length){let n=new D;this.mergeResultsAndSubmissions(n,o),t.push(n)}}else if(e[0].type===v.PROGRAMMING){if(r.length){let n=this.mergeProgrammingParticipations(r);t.push(n)}if(o.length){let n=this.mergeProgrammingParticipations(o);t.push(n)}}}return t}mergeProgrammingParticipations(e){let t=new P;return e?.length&&(t.repositoryUri=e[0].repositoryUri,t.buildPlanId=e[0].buildPlanId,t.buildPlanUrl=e[0].buildPlanUrl,this.mergeResultsAndSubmissions(t,e)),t}mergeResultsAndSubmissions(e,t){e.id=t[0].id,e.initializationState=t[0].initializationState,e.initializationDate=t[0].initializationDate,e.individualDueDate=t[0].individualDueDate,e.presentationScore=t[0].presentationScore,e.exercise=t[0].exercise,e.type=t[0].type,e.testRun=t[0].testRun,t[0].student&&(e.student=t[0].student),t[0].team&&(e.team=t[0].team),t[0].participantIdentifier&&(e.participantIdentifier=t[0].participantIdentifier),t[0].participantName&&(e.participantName=t[0].participantName),t.forEach(r=>{r.results&&(e.results=e.results?e.results.concat(r.results):r.results),r.submissions&&(e.submissions=e.submissions?e.submissions.concat(r.submissions):r.submissions)}),e.results?.length&&e.results.forEach(r=>{r.participation=e}),e.submissions?.length&&e.submissions.forEach(r=>{r.participation=e})}getSpecificStudentParticipation(e,t){return e.filter(r=>!!r.testRun===t).first()}processParticipationEntityArrayResponseType(e){return this.convertParticipationResponseArrayDatesFromServer(e),this.setAccessRightsParticipationEntityArrayResponseType(e),e}processParticipationEntityResponseType(e){return this.convertParticipationResponseDatesFromServer(e),this.setAccessRightsParticipationEntityResponseType(e),e}setAccessRightsParticipationEntityResponseType(e){return e.body?.exercise&&this.accountService.setAccessRightsForExercise(e.body.exercise),e}setAccessRightsParticipationEntityArrayResponseType(e){return e.body&&e.body.forEach(t=>{t.exercise&&this.accountService.setAccessRightsForExercise(t.exercise)}),e}static \u0275fac=function(t){return new(t||s)};static \u0275prov=l({token:s,factory:s.\u0275fac,providedIn:"root"})}return s})();var S=(()=>{class s{http=c(m);accountService=c(d);translateService=c(I);entityTitleService=c(N);resourceUrl="api/exercise/exercises";adminResourceUrl="api/exercise/admin/exercises";courseResourceUrl="api/core/courses";create(e){let t=s.convertExerciseDatesFromClient(e);return t.categories=s.stringifyExerciseCategories(t),this.http.post(this.resourceUrl,t,{observe:"response"}).pipe(i(r=>this.processExerciseEntityResponse(r)))}update(e){let t=s.convertExerciseDatesFromClient(e);return t.categories=s.stringifyExerciseCategories(t),this.http.put(this.resourceUrl,t,{observe:"response"}).pipe(i(r=>this.processExerciseEntityResponse(r)))}validateDate(e){e.dueDateError=this.hasDueDateError(e),e.startDateError=this.hasStartDateError(e),e.assessmentDueDateError=this.hasAssessmentDueDateError(e),e.exampleSolutionPublicationDateError=this.hasExampleSolutionPublicationDateError(e),e.exampleSolutionPublicationDateWarning=this.hasExampleSolutionPublicationDateWarning(e)}hasStartDateError(e){return e.startDate&&e.releaseDate&&u(e.startDate).isBefore(e.releaseDate)}hasDueDateError(e){let t=e.startDate??e.releaseDate;return t&&e.dueDate&&u(e.dueDate).isBefore(t)}hasAssessmentDueDateError(e){return e.releaseDate&&e.assessmentDueDate?e.dueDate?u(e.assessmentDueDate).isBefore(e.dueDate)||u(e.assessmentDueDate).isBefore(e.releaseDate):!0:e.assessmentDueDate?e.dueDate?u(e.assessmentDueDate).isBefore(e.dueDate):!0:!1}hasExampleSolutionPublicationDateError(e){return e.exampleSolutionPublicationDate?u(e.exampleSolutionPublicationDate).isBefore(e.startDate??e.releaseDate)||u(e.exampleSolutionPublicationDate).isBefore(e.dueDate)&&e.includedInOverallScore!==f.NOT_INCLUDED:!1}hasExampleSolutionPublicationDateWarning(e){return!!(e.exampleSolutionPublicationDate&&!u(e.exampleSolutionPublicationDate).isSameOrAfter(e.dueDate||null)&&(!e.dueDate||e.includedInOverallScore===f.NOT_INCLUDED))}find(e){return this.http.get(`${this.resourceUrl}/${e}`,{observe:"response"}).pipe(i(t=>this.processExerciseEntityResponse(t)))}getExerciseDetails(e){return this.http.get(`${this.resourceUrl}/${e}/details`,{observe:"response"}).pipe(i(t=>(t.body&&(t.body.exercise=s.convertExerciseDatesFromServer(t.body.exercise),s.parseExerciseCategories(t.body.exercise),this.accountService.setAccessRightsForExerciseAndReferencedCourse(t.body.exercise),t.body.exercise.posts===void 0&&(t.body.exercise.posts=[])),t)))}getExerciseForExampleSolution(e){return this.http.get(`${this.resourceUrl}/${e}/example-solution`,{observe:"response"}).pipe(g(t=>{this.processExerciseEntityResponse(t)}))}reset(e){return this.http.delete(`${this.resourceUrl}/${e}/reset`,{observe:"response"})}evaluateQuizExercise(e){return this.http.post(`api/quiz/quiz-exercises/${e}/evaluate`,{},{observe:"response"})}getUpcomingExercises(){return this.http.get(`${this.adminResourceUrl}/upcoming`,{observe:"response"}).pipe(i(e=>this.processExerciseEntityArrayResponse(e)))}getNextExercisesForDays(e,t=7){return e.filter(r=>{if(!r.dueDate)return!0;let o=r.dueDate;return u().isBefore(o)&&u().add(t,"day").isSameOrAfter(o)}).sort((r,o)=>r.dueDate?o.dueDate?r.dueDate.isBefore(o.dueDate)?-1:1:-1:1)}getExistingExerciseDetailsInCourse(e,t){return this.http.get(`${this.courseResourceUrl}/${e}/existing-exercise-details?exerciseType=${t}`,{observe:"response"}).pipe(i(r=>{let o=r.body;return{exerciseTitles:new Set(o.exerciseTitles??[]),shortNames:new Set(o.shortNames??[])}}))}isActiveQuiz(e){return e?.quizBatches?.some(t=>t.started)||e.studentParticipations?.[0]?.initializationState===A.INITIALIZED||e.studentParticipations?.[0]?.initializationState===A.FINISHED}static convertExerciseDatesFromServer(e){return e&&(e.releaseDate=a(e.releaseDate),e.startDate=a(e.startDate),e.dueDate=a(e.dueDate),e.assessmentDueDate=a(e.assessmentDueDate),e.studentParticipations=E.convertParticipationArrayDatesFromServer(e.studentParticipations)),e}static convertExercisesDateFromServer(e){let t=[];return e&&e.length>0&&e.forEach(r=>{let o=s.convertExerciseDatesFromServer(r);o&&t.push(o)}),t}static convertExerciseDatesFromClient(e){return Object.assign({},e,{releaseDate:p(e.releaseDate),startDate:p(e.startDate),dueDate:p(e.dueDate),assessmentDueDate:p(e.assessmentDueDate),exampleSolutionPublicationDate:p(e.exampleSolutionPublicationDate)})}static convertExerciseResponseDatesFromServer(e){return e.body&&(e.body.releaseDate=a(e.body.releaseDate),e.body.startDate=a(e.body.startDate),e.body.dueDate=a(e.body.dueDate),e.body.assessmentDueDate=a(e.body.assessmentDueDate),e.body.exampleSolutionPublicationDate=a(e.body.exampleSolutionPublicationDate),e.body.studentParticipations=E.convertParticipationArrayDatesFromServer(e.body.studentParticipations)),e}static convertExerciseArrayDatesFromServer(e){return e.body&&e.body.forEach(t=>{s.convertExerciseDatesFromServer(t)}),e}static convertExerciseCategoriesFromServer(e){return e.body&&e.body.categories&&s.parseExerciseCategories(e.body),e}static stringifyExerciseCategories(e){return e.categories?.map(t=>JSON.stringify(t))}static convertExerciseCategoryArrayFromServer(e){return e.body&&e.body.forEach(t=>s.parseExerciseCategories(t)),e}static parseExerciseCategories(e){e?.categories&&(e.categories=e.categories.map(t=>{let r=JSON.parse(t);return new $(r.category,r.color)}))}convertExerciseCategoriesAsStringFromServer(e){return e.map(t=>JSON.parse(t))}static convertExerciseFromClient(e){let t=Object.assign(e,{});return t=s.convertExerciseDatesFromClient(t),t.categories=s.stringifyExerciseCategories(t),t.course&&(t.course.exercises=[],t.course.lectures=[]),t.studentParticipations=[],t}getForTutors(e){return this.http.get(`${this.resourceUrl}/${e}/for-assessment-dashboard`,{observe:"response"}).pipe(i(t=>this.processExerciseEntityResponse(t)))}getStatsForTutors(e){return this.http.get(`${this.resourceUrl}/${e}/stats-for-assessment-dashboard`,{observe:"response"})}static setBonusPointsConstrainedByIncludedInOverallScore(e){return(e.bonusPoints===void 0||e.includedInOverallScore!==f.INCLUDED_COMPLETELY)&&(e.bonusPoints=0),e}isIncludedInScore(e){if(!e?.includedInOverallScore)return"";switch(e.includedInOverallScore){case f.INCLUDED_AS_BONUS:return this.translateService.instant("artemisApp.exercise.bonus");case f.INCLUDED_COMPLETELY:return this.translateService.instant("artemisApp.exercise.yes");case f.NOT_INCLUDED:return this.translateService.instant("artemisApp.exercise.no")}}toggleSecondCorrection(e){return this.http.put(`${this.resourceUrl}/${e}/toggle-second-correction`,{observe:"response"})}processExerciseEntityResponse(e){return s.convertExerciseResponseDatesFromServer(e),s.convertExerciseCategoriesFromServer(e),this.setAccessRightsExerciseEntityResponseType(e),this.sendExerciseTitleToTitleService(e?.body??void 0),e}processExerciseEntityArrayResponse(e){return s.convertExerciseArrayDatesFromServer(e),s.convertExerciseCategoryArrayFromServer(e),this.setAccessRightsExerciseEntityArrayResponseType(e),e?.body?.forEach(t=>{this.sendExerciseTitleToTitleService(t)}),e}setAccessRightsExerciseEntityArrayResponseType(e){return e.body&&e.body.forEach(t=>{this.accountService.setAccessRightsForExerciseAndReferencedCourse(t)}),e}setAccessRightsExerciseEntityResponseType(e){return e.body&&this.accountService.setAccessRightsForExerciseAndReferencedCourse(e.body),e}sendExerciseTitleToTitleService(e){e&&this.entityTitleService.setExerciseTitle(e),e?.course&&this.entityTitleService.setTitle(O.COURSE,[e.course.id],e.course.title)}getLatestDueDate(e){return this.http.get(`${this.resourceUrl}/${e}/latest-due-date`,{observe:"response"}).pipe(i(t=>t.body?u(t.body):void 0))}static isExampleSolutionPublished(e){let t;return e.exerciseGroup?t=e.exerciseGroup.exam?.exampleSolutionPublicationDate:t=e.exampleSolutionPublicationDate,t&&!u().isBefore(t)}static extractExampleSolutionInfo(e,t){if(!s.isExampleSolutionPublished(e))return{exampleSolutionPublished:!1};let r,o,n,h;switch(e.type){case b.MODELING:r=e,r.exampleSolutionModel&&(n=JSON.parse(r.exampleSolutionModel));break;case b.TEXT:case b.FILE_UPLOAD:let T=e;T.exampleSolution&&(o=t.safeHtmlForMarkdown(T.exampleSolution));break;case b.PROGRAMMING:h=e;break}return{modelingExercise:r,exampleSolution:o,exampleSolutionUML:n,programmingExercise:h,exampleSolutionPublished:!0}}static \u0275fac=function(t){return new(t||s)};static \u0275prov=l({token:s,factory:s.\u0275fac,providedIn:"root"})}return s})();export{z as a,L as b,S as c,j as d,E as e};
//# sourceMappingURL=chunk-CK7FH6VF.js.map
