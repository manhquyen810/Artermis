{
  "version": 3,
  "sources": ["src/main/webapp/app/exercises/quiz/manage/re-evaluate/quiz-re-evaluate.service.ts", "src/main/webapp/app/exercises/quiz/manage/re-evaluate/quiz-re-evaluate-warning.component.ts", "src/main/webapp/app/exercises/quiz/manage/re-evaluate/quiz-re-evaluate-warning.component.html", "src/main/webapp/app/exercises/quiz/manage/quiz-exercise-popup.service.ts", "src/main/webapp/app/exercises/quiz/manage/re-evaluate/drag-and-drop-question/re-evaluate-drag-and-drop-question.component.ts", "src/main/webapp/app/exercises/quiz/manage/re-evaluate/multiple-choice-question/re-evaluate-multiple-choice-question.component.ts", "src/main/webapp/app/exercises/quiz/manage/re-evaluate/multiple-choice-question/re-evaluate-multiple-choice-question.component.html", "src/main/webapp/app/exercises/quiz/manage/re-evaluate/short-answer-question/re-evaluate-short-answer-question.component.ts", "src/main/webapp/app/exercises/quiz/manage/re-evaluate/quiz-re-evaluate.component.ts", "src/main/webapp/app/exercises/quiz/manage/re-evaluate/quiz-re-evaluate.component.html"],
  "sourcesContent": ["import { Injectable, inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { QuizExercise } from 'app/entities/quiz/quiz-exercise.model';\r\nimport { ExerciseService } from 'app/exercises/shared/exercise/exercise.service';\r\nimport { objectToJsonBlob } from 'app/utils/blob-util';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class QuizReEvaluateService {\r\n    private http = inject(HttpClient);\r\n\r\n    private resourceUrl = 'api/quiz/quiz-exercises/';\r\n\r\n    reevaluate(quizExercise: QuizExercise, files: Map<string, Blob>) {\r\n        const copy = this.convert(quizExercise);\r\n        const formData = new FormData();\r\n        formData.append('exercise', objectToJsonBlob(copy));\r\n        files.forEach((file, fileName) => {\r\n            formData.append('files', file, fileName);\r\n        });\r\n        return this.http.put<QuizExercise>(this.resourceUrl + quizExercise.id + '/re-evaluate', formData, { observe: 'response' });\r\n    }\r\n\r\n    /**\r\n     * Copy the QuizExercise object\r\n     */\r\n    private convert(quizExercise: QuizExercise): QuizExercise {\r\n        const copy: QuizExercise = Object.assign({}, quizExercise);\r\n        copy.categories = ExerciseService.stringifyExerciseCategories(copy);\r\n        return copy;\r\n    }\r\n}\r\n", "import { Component, OnInit, inject } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { QuizReEvaluateService } from './quiz-re-evaluate.service';\r\nimport { ShortAnswerQuestion } from 'app/entities/quiz/short-answer-question.model';\r\nimport { QuizExerciseService } from 'app/exercises/quiz/manage/quiz-exercise.service';\r\nimport { QuizQuestion, QuizQuestionType } from 'app/entities/quiz/quiz-question.model';\r\nimport { DragAndDropQuestion } from 'app/entities/quiz/drag-and-drop-question.model';\r\nimport { MultipleChoiceQuestion } from 'app/entities/quiz/multiple-choice-question.model';\r\nimport { QuizExercise } from 'app/entities/quiz/quiz-exercise.model';\r\nimport { faBan, faCheck, faCheckCircle, faSpinner, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { ArtemisNavigationUtilService } from 'app/utils/navigation.utils';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\n\r\n@Component({\r\n    selector: 'jhi-quiz-re-evaluate-warning',\r\n    templateUrl: './quiz-re-evaluate-warning.component.html',\r\n    styleUrls: ['../../shared/quiz.scss'],\r\n    imports: [TranslateDirective, FaIconComponent],\r\n})\r\nexport class QuizReEvaluateWarningComponent implements OnInit {\r\n    private activeModal = inject(NgbActiveModal);\r\n    private quizExerciseService = inject(QuizExerciseService);\r\n    private quizReEvaluateService = inject(QuizReEvaluateService);\r\n    private navigationUtilService = inject(ArtemisNavigationUtilService);\r\n\r\n    isSaving: boolean;\r\n\r\n    successful = false;\r\n    failed = false;\r\n    busy = false;\r\n\r\n    questionElementDeleted = false;\r\n    questionElementInvalid = false;\r\n    questionCorrectness = false;\r\n    questionDeleted = false;\r\n    questionInvalid = false;\r\n    scoringChanged = false;\r\n    solutionAdded = false;\r\n\r\n    quizExercise: QuizExercise;\r\n    backUpQuiz: QuizExercise;\r\n\r\n    files: Map<string, File>;\r\n\r\n    // Icons\r\n    faBan = faBan;\r\n    faSpinner = faSpinner;\r\n    faTimes = faTimes;\r\n    faCheck = faCheck;\r\n    faCheckCircle = faCheckCircle;\r\n\r\n    /**\r\n     * Reset saving status, load the quiz by id and back it up.\r\n     */\r\n    ngOnInit(): void {\r\n        this.isSaving = false;\r\n        this.quizExerciseService.find(this.quizExercise.id!).subscribe((res) => {\r\n            this.backUpQuiz = res.body!;\r\n            this.loadQuizSuccess();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Closes the modal\r\n     */\r\n    clear(): void {\r\n        this.activeModal.dismiss('cancel');\r\n    }\r\n\r\n    /**\r\n     * check if the changes affect the existing results\r\n     *  1. check if a question is deleted\r\n     *  2. check for each question if:\r\n     *          - it is set invalid\r\n     *          - it has another scoringType\r\n     *          - an answer was deleted\r\n     *  3. check for each question-element if:\r\n     *          - it is set invalid\r\n     *          - the correctness was changed\r\n     */\r\n    loadQuizSuccess(): void {\r\n        // question deleted?\r\n        this.questionDeleted = this.backUpQuiz.quizQuestions!.length !== this.quizExercise.quizQuestions!.length;\r\n\r\n        // check each question\r\n        this.quizExercise.quizQuestions!.forEach((question) => {\r\n            // find same question in backUp (necessary if the order has been changed)\r\n            const backUpQuestion = this.backUpQuiz.quizQuestions?.find((questionBackUp) => question.id === questionBackUp.id);\r\n            if (backUpQuestion) {\r\n                this.checkQuestion(question, backUpQuestion);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 1. compare backUpQuestion and question\r\n     * 2. set flags based on detected changes\r\n     *\r\n     * @param question changed question\r\n     * @param backUpQuestion original not changed question\r\n     */\r\n    checkQuestion(question: QuizQuestion, backUpQuestion: QuizQuestion): void {\r\n        if (backUpQuestion) {\r\n            // question set invalid?\r\n            if (question.invalid !== backUpQuestion.invalid) {\r\n                this.questionInvalid = true;\r\n            }\r\n            // question scoring changed?\r\n            if (question.scoringType !== backUpQuestion.scoringType) {\r\n                this.scoringChanged = true;\r\n            }\r\n            // check MultipleChoiceQuestions\r\n            if (question.type === QuizQuestionType.MULTIPLE_CHOICE) {\r\n                this.checkMultipleChoiceQuestion(question as MultipleChoiceQuestion, backUpQuestion as MultipleChoiceQuestion);\r\n            }\r\n            // check DragAndDropQuestions\r\n            if (question.type === QuizQuestionType.DRAG_AND_DROP) {\r\n                this.checkDragAndDropQuestion(question as DragAndDropQuestion, backUpQuestion as DragAndDropQuestion);\r\n            }\r\n            // check ShortAnswerQuestions\r\n            if (question.type === QuizQuestionType.SHORT_ANSWER) {\r\n                this.checkShortAnswerQuestion(question as ShortAnswerQuestion, backUpQuestion as ShortAnswerQuestion);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 1. check MultipleChoiceQuestion-Elements\r\n     * 2. set flags based on detected changes\r\n     *\r\n     * @param question changed Multiple-Choice-Question\r\n     * @param backUpQuestion original not changed Multiple-Choice-Question\r\n     */\r\n    checkMultipleChoiceQuestion(question: MultipleChoiceQuestion, backUpQuestion: MultipleChoiceQuestion): void {\r\n        // question-Element deleted?\r\n        if (question.answerOptions!.length !== backUpQuestion.answerOptions!.length) {\r\n            this.questionElementDeleted = true;\r\n        }\r\n        // check each answer\r\n        question.answerOptions!.forEach((answer) => {\r\n            // only check if there are no changes on the question-elements yet\r\n            if (!this.questionCorrectness || !this.questionElementInvalid) {\r\n                const backUpAnswer = backUpQuestion.answerOptions!.find((answerBackUp) => answerBackUp.id === answer.id);\r\n                if (backUpAnswer) {\r\n                    // answer set invalid?\r\n                    if (answer.invalid !== backUpAnswer.invalid) {\r\n                        this.questionElementInvalid = true;\r\n                    }\r\n                    // answer correctness changed?\r\n                    if (answer.isCorrect !== backUpAnswer.isCorrect) {\r\n                        this.questionCorrectness = true;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 1. check DragAndDrop-Question-Elements\r\n     * 2. set flags based on detected changes\r\n     *\r\n     * @param question changed DragAndDrop-Question\r\n     * @param backUpQuestion original not changed DragAndDrop-Question\r\n     */\r\n    checkDragAndDropQuestion(question: DragAndDropQuestion, backUpQuestion: DragAndDropQuestion): void {\r\n        // check if a dropLocation or dragItem was deleted\r\n        if (question.dragItems!.length !== backUpQuestion.dragItems!.length || question.dropLocations!.length !== backUpQuestion.dropLocations!.length) {\r\n            this.questionElementDeleted = true;\r\n        }\r\n        // check if the correct Mappings has changed\r\n        if (JSON.stringify(question.correctMappings).toLowerCase() !== JSON.stringify(backUpQuestion.correctMappings).toLowerCase()) {\r\n            this.questionCorrectness = true;\r\n        }\r\n        // only check if there are no changes on the question-elements yet\r\n        if (!this.questionElementInvalid) {\r\n            // check each dragItem\r\n            question.dragItems!.forEach((dragItem) => {\r\n                const backUpDragItem = backUpQuestion.dragItems?.find((dragItemBackUp) => dragItemBackUp.id === dragItem.id);\r\n                // dragItem set invalid?\r\n                if (backUpDragItem && dragItem.invalid !== backUpDragItem.invalid) {\r\n                    this.questionElementInvalid = true;\r\n                }\r\n            });\r\n            // check each dropLocation\r\n            question.dropLocations!.forEach((dropLocation) => {\r\n                const backUpDropLocation = backUpQuestion.dropLocations?.find((dropLocationBackUp) => dropLocationBackUp.id === dropLocation.id);\r\n                // dropLocation set invalid?\r\n                if (backUpDropLocation && dropLocation.invalid !== backUpDropLocation.invalid) {\r\n                    this.questionElementInvalid = true;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 1. We check all ShortAnswer-Question-Elements in case a spot, solution or mapping has changed/was deleted\r\n     * 2. Set flags based on detected changes to inform the instructor in the UI what his changes have for consequences.\r\n     *\r\n     * @param question\r\n     * @param backUpQuestion\r\n     */\r\n    checkShortAnswerQuestion(question: ShortAnswerQuestion, backUpQuestion: ShortAnswerQuestion): void {\r\n        // check if a spot or solution was deleted\r\n        if (question.solutions!.length < backUpQuestion.solutions!.length || question.spots!.length < backUpQuestion.spots!.length) {\r\n            this.questionElementDeleted = true;\r\n        }\r\n        // check if a spot or solution was added\r\n        if (question.solutions!.length > backUpQuestion.solutions!.length || question.spots!.length > backUpQuestion.spots!.length) {\r\n            this.solutionAdded = true;\r\n        }\r\n\r\n        // check if the correct Mappings has changed\r\n        if (JSON.stringify(question.correctMappings).toLowerCase() !== JSON.stringify(backUpQuestion.correctMappings).toLowerCase()) {\r\n            this.questionCorrectness = true;\r\n        }\r\n        // only check if there are no changes on the question-elements yet\r\n        if (!this.questionElementInvalid) {\r\n            // check each solution\r\n            question.solutions!.forEach((solution) => {\r\n                const backUpSolution = backUpQuestion.solutions?.find((solutionBackUp) => {\r\n                    return solutionBackUp.id === solution.id;\r\n                });\r\n                // check if a solution was added\r\n                if (this.solutionAdded && backUpSolution === undefined) {\r\n                    return;\r\n                }\r\n                // solution set invalid?\r\n                if (backUpSolution && solution.invalid !== backUpSolution.invalid) {\r\n                    this.questionElementInvalid = true;\r\n                }\r\n            });\r\n            // check each spot\r\n            question.spots!.forEach((spot) => {\r\n                const backUpSpot = backUpQuestion.spots?.find((spotBackUp) => {\r\n                    return spotBackUp.id === spot.id;\r\n                });\r\n                // spot set invalid?\r\n                if (backUpSpot && spot.invalid !== backUpSpot.invalid) {\r\n                    this.questionElementInvalid = true;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Confirm changes\r\n     *  => send changes to server and wait for result\r\n     *  if saving failed -> show failed message\r\n     */\r\n    confirmChange(): void {\r\n        this.busy = true;\r\n\r\n        this.quizReEvaluateService.reevaluate(this.quizExercise, this.files).subscribe({\r\n            next: () => {\r\n                this.busy = false;\r\n                this.successful = true;\r\n            },\r\n            error: () => {\r\n                this.busy = false;\r\n                this.failed = true;\r\n            },\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Close modal and navigate to the overview page\r\n     */\r\n    closeAndNavigate(): void {\r\n        this.activeModal.close();\r\n        // It doesn't navigate without the timeout...\r\n        setTimeout(() => this.navigationUtilService.navigateBackFromExerciseUpdate(this.quizExercise));\r\n    }\r\n}\r\n", "<div style=\"padding: 20px\">\r\n    <h2><span jhiTranslate=\"artemisApp.quizExercise.re-evaluate.warning.warning\"></span></h2>\r\n    <div style=\"padding: 10px\">\r\n        <h4><span jhiTranslate=\"artemisApp.quizExercise.re-evaluate.warning.problems\"></span></h4>\r\n        <ul>\r\n            @if (questionElementDeleted) {\r\n                <li style=\"padding-top: 5px\">\r\n                    <span jhiTranslate=\"artemisApp.quizExercise.re-evaluate.warning.element_deleted\"></span>\r\n                    <ul style=\"padding-left: 15px\">\r\n                        <li style=\"margin-bottom: -10px\">\r\n                            <span jhiTranslate=\"artemisApp.quizExercise.re-evaluate.warning.results\"></span>\r\n                            <p style=\"margin-left: 10px\" jhiTranslate=\"artemisApp.quizExercise.re-evaluate.warning.resulttext.element_deleted\"></p>\r\n                        </li>\r\n                        <li><span jhiTranslate=\"artemisApp.quizExercise.re-evaluate.warning.quizStatistic\"></span></li>\r\n                    </ul>\r\n                </li>\r\n            }\r\n            @if (questionElementInvalid) {\r\n                <li style=\"padding-top: 5px\">\r\n                    <span jhiTranslate=\"artemisApp.quizExercise.re-evaluate.warning.element_invalid\"></span>\r\n                    <ul style=\"padding-left: 15px\">\r\n                        <li style=\"margin-bottom: -10px\">\r\n                            <span jhiTranslate=\"artemisApp.quizExercise.re-evaluate.warning.results\"></span>\r\n                            <p style=\"margin-left: 10px\" jhiTranslate=\"artemisApp.quizExercise.re-evaluate.warning.resulttext.element_invalid\"></p>\r\n                        </li>\r\n                        <li><span jhiTranslate=\"artemisApp.quizExercise.re-evaluate.warning.quizStatistic\"></span></li>\r\n                    </ul>\r\n                </li>\r\n            }\r\n            @if (questionCorrectness) {\r\n                <li style=\"padding-top: 5px\">\r\n                    <span jhiTranslate=\"artemisApp.quizExercise.re-evaluate.warning.element_correctness\"></span>\r\n                    <ul style=\"padding-left: 15px\">\r\n                        <li style=\"margin-bottom: -10px\">\r\n                            <span jhiTranslate=\"artemisApp.quizExercise.re-evaluate.warning.results\"></span>\r\n                            <p style=\"margin-left: 10px; color: red\" jhiTranslate=\"artemisApp.quizExercise.re-evaluate.warning.resulttext.scoring_change\"></p>\r\n                        </li>\r\n                    </ul>\r\n                </li>\r\n            }\r\n            @if (questionDeleted) {\r\n                <li style=\"padding-top: 5px\">\r\n                    <span jhiTranslate=\"artemisApp.quizExercise.re-evaluate.warning.question_deleted\"></span>\r\n                    <ul style=\"padding-left: 15px\">\r\n                        <li style=\"margin-bottom: -10px\">\r\n                            <span jhiTranslate=\"artemisApp.quizExercise.re-evaluate.warning.results\"></span>\r\n                            <p style=\"margin-left: 10px\" jhiTranslate=\"artemisApp.quizExercise.re-evaluate.warning.resulttext.question_deleted\"></p>\r\n                        </li>\r\n                        <li><span jhiTranslate=\"artemisApp.quizExercise.re-evaluate.warning.quizStatistic\"></span></li>\r\n                    </ul>\r\n                </li>\r\n            }\r\n            @if (questionInvalid) {\r\n                <li style=\"padding-top: 5px\">\r\n                    <span jhiTranslate=\"artemisApp.quizExercise.re-evaluate.warning.question_invalid\"></span>\r\n                    <ul style=\"padding-left: 15px\">\r\n                        <li style=\"margin-bottom: -10px\">\r\n                            <span jhiTranslate=\"artemisApp.quizExercise.re-evaluate.warning.results\"></span>\r\n                            <p style=\"margin-left: 10px\" jhiTranslate=\"artemisApp.quizExercise.re-evaluate.warning.resulttext.question_invalid\"></p>\r\n                        </li>\r\n                        <li><span jhiTranslate=\"artemisApp.quizExercise.re-evaluate.warning.quizStatistic\"></span></li>\r\n                    </ul>\r\n                </li>\r\n            }\r\n            @if (scoringChanged) {\r\n                <li style=\"padding-top: 5px\">\r\n                    <span jhiTranslate=\"artemisApp.quizExercise.re-evaluate.warning.scoring_change\"></span>\r\n                    <ul style=\"padding-left: 15px\">\r\n                        <li style=\"margin-bottom: -10px\">\r\n                            <span jhiTranslate=\"artemisApp.quizExercise.re-evaluate.warning.results\"></span>\r\n                            <p style=\"color: red; margin-left: 10px\" jhiTranslate=\"artemisApp.quizExercise.re-evaluate.warning.resulttext.scoring_change\"></p>\r\n                        </li>\r\n                    </ul>\r\n                </li>\r\n            }\r\n            @if (!(questionElementInvalid || questionElementDeleted || questionCorrectness || questionInvalid || questionDeleted || scoringChanged)) {\r\n                <li style=\"padding-top: 5px\">\r\n                    <span jhiTranslate=\"artemisApp.quizExercise.re-evaluate.warning.no_changes\"></span>\r\n                </li>\r\n            }\r\n        </ul>\r\n    </div>\r\n    <div class=\"edit-quiz-footer-content\">\r\n        <h4>\r\n            @if (!successful && !failed && !busy) {\r\n                <span jhiTranslate=\"artemisApp.quizExercise.re-evaluate.warning.confirmtext\"></span>\r\n            }\r\n            @if (successful && !busy) {\r\n                <span style=\"color: green\"><fa-icon [icon]=\"faCheck\" />&nbsp;<span jhiTranslate=\"artemisApp.quizExercise.re-evaluate.warning.succesfully_confirm\"></span></span>\r\n            }\r\n            @if (failed && !busy) {\r\n                <span style=\"color: red\"><fa-icon [icon]=\"faTimes\" />&nbsp;<span>Saving Quiz Failed! Please try again later.</span></span>\r\n            }\r\n            @if (busy) {\r\n                <span style=\"color: grey\"><fa-icon [icon]=\"faSpinner\" animation=\"spin\" />&nbsp;<span>Please wait, conducting changes!</span></span>\r\n            }\r\n        </h4>\r\n        &nbsp;\r\n        <div class=\"form-group\">\r\n            @if (!successful) {\r\n                <button [disabled]=\"busy\" type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"clear()\">\r\n                    <fa-icon [icon]=\"faBan\" />&nbsp;<span jhiTranslate=\"entity.action.cancel\"></span>\r\n                </button>\r\n            }\r\n            @if (!successful && !failed) {\r\n                <button [disabled]=\"busy\" type=\"submit\" (click)=\"confirmChange()\" class=\"btn btn-primary\">\r\n                    <fa-icon [icon]=\"faCheckCircle\" />&nbsp;<span jhiTranslate=\"artemisApp.quizExercise.re-evaluate.warning.confirm\"></span>\r\n                </button>\r\n            }\r\n            @if (successful && !failed) {\r\n                <button type=\"submit\" (click)=\"closeAndNavigate()\" class=\"btn btn-primary\">\r\n                    <fa-icon [icon]=\"faCheckCircle\" />&nbsp;<span jhiTranslate=\"entity.action.close\"></span>\r\n                </button>\r\n            }\r\n        </div>\r\n    </div>\r\n</div>\r\n", "import { Component, Injectable, inject } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { QuizExercise } from 'app/entities/quiz/quiz-exercise.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class QuizExercisePopupService {\r\n    private modalService = inject(NgbModal);\r\n    private router = inject(Router);\r\n\r\n    private ngbModalRef: NgbModalRef | null;\r\n\r\n    constructor() {\r\n        this.ngbModalRef = null;\r\n    }\r\n\r\n    /**\r\n     * Open the modal with the given content for the given exercise.\r\n     * @param component the content that should be shown\r\n     * @param quizExercise the quiz exercise for which the modal should be shown\r\n     * @param files required for the form data upload\r\n     */\r\n    open(component: Component, quizExercise: QuizExercise, files: Map<string, File>): Promise<NgbModalRef> {\r\n        return new Promise<NgbModalRef>((resolve) => {\r\n            if (this.ngbModalRef == undefined) {\r\n                this.ngbModalRef = this.quizExerciseModalRef(component, quizExercise, files);\r\n            }\r\n            resolve(this.ngbModalRef);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Open the modal with the given content for the given exercise.\r\n     * @param component the content that should be shown\r\n     * @param quizExercise the quiz exercise for which the modal should be shown\r\n     * @param files required for the form data upload\r\n     */\r\n    quizExerciseModalRef(component: Component, quizExercise: QuizExercise, files: Map<string, File>): NgbModalRef {\r\n        const modalRef: NgbModalRef = this.modalService.open(component, { size: 'lg', backdrop: 'static' });\r\n        modalRef.componentInstance.quizExercise = quizExercise;\r\n        modalRef.componentInstance.files = files;\r\n        modalRef.result.then(\r\n            (result) => {\r\n                if (result === 're-evaluate') {\r\n                    this.router.navigate(['/course-management/' + quizExercise.course!.id + '/quiz-exercises']);\r\n                } else {\r\n                    this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true, queryParamsHandling: 'merge' });\r\n                    this.ngbModalRef = null;\r\n                }\r\n            },\r\n            () => {\r\n                this.router.navigate([{ outlets: { popup: null } }], { replaceUrl: true, queryParamsHandling: 'merge' });\r\n                this.ngbModalRef = null;\r\n            },\r\n        );\r\n        return modalRef;\r\n    }\r\n}\r\n", "import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\nimport { DragAndDropQuestion } from 'app/entities/quiz/drag-and-drop-question.model';\r\nimport { DragAndDropQuestionEditComponent } from 'app/exercises/quiz/manage/drag-and-drop-question/drag-and-drop-question-edit.component';\r\n\r\n@Component({\r\n    selector: 'jhi-re-evaluate-drag-and-drop-question',\r\n    template: `\r\n        <jhi-drag-and-drop-question-edit\r\n            [question]=\"question\"\r\n            [questionIndex]=\"questionIndex\"\r\n            [reEvaluationInProgress]=\"true\"\r\n            [filePool]=\"fileMap\"\r\n            (questionUpdated)=\"questionUpdated.emit()\"\r\n            (questionDeleted)=\"questionDeleted.emit()\"\r\n            (questionMoveUp)=\"questionMoveUp.emit()\"\r\n            (questionMoveDown)=\"questionMoveDown.emit()\"\r\n            (addNewFile)=\"handleAddFile($event)\"\r\n            (removeFile)=\"handleRemoveFile($event)\"\r\n        />\r\n    `,\r\n    providers: [],\r\n    imports: [DragAndDropQuestionEditComponent],\r\n})\r\nexport class ReEvaluateDragAndDropQuestionComponent {\r\n    /**\r\n     question: '=',\r\n     onDelete: '&',\r\n     onUpdated: '&',\r\n     questionIndex: '<',\r\n     onMoveUp: '&',\r\n     onMoveDown: '&'\r\n     */\r\n\r\n    @ViewChild(DragAndDropQuestionEditComponent)\r\n    dragAndDropQuestionEditComponent: DragAndDropQuestionEditComponent;\r\n\r\n    @Input()\r\n    question: DragAndDropQuestion;\r\n    @Input()\r\n    questionIndex: number;\r\n\r\n    @Output()\r\n    questionUpdated = new EventEmitter<void>();\r\n    @Output()\r\n    questionDeleted = new EventEmitter<void>();\r\n    @Output()\r\n    questionMoveUp = new EventEmitter<void>();\r\n    @Output()\r\n    questionMoveDown = new EventEmitter<void>();\r\n\r\n    fileMap = new Map<string, { path?: string; file: File }>();\r\n\r\n    /**\r\n     * Add the given file to the fileMap for later upload.\r\n     * @param event the event containing the file and its name. The name provided may be different from the actual file name but has to correspond to the name set in the entity object.\r\n     */\r\n    handleAddFile(event: { fileName: string; path?: string; file: File }): void {\r\n        this.fileMap.set(event.fileName, { path: event.path, file: event.file });\r\n    }\r\n\r\n    /**\r\n     * Remove the given file from the fileMap.\r\n     * @param fileName the name of the file to be removed\r\n     */\r\n    handleRemoveFile(fileName: string): void {\r\n        this.fileMap.delete(fileName);\r\n    }\r\n}\r\n", "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { AnswerOption } from 'app/entities/quiz/answer-option.model';\r\nimport { MultipleChoiceQuestion } from 'app/entities/quiz/multiple-choice-question.model';\r\nimport { escapeStringForUseInRegex } from 'app/shared/util/global.utils';\r\nimport { cloneDeep } from 'lodash-es';\r\nimport { generateExerciseHintExplanation, parseExerciseHintExplanation } from 'app/shared/util/markdown.util';\r\nimport { faAngleDown, faAngleRight, faArrowsAltV, faChevronDown, faChevronUp, faTrash, faUndo } from '@fortawesome/free-solid-svg-icons';\r\nimport { CdkDrag, CdkDragDrop, CdkDragHandle, CdkDropList, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { CorrectMultipleChoiceAnswerAction } from 'app/shared/monaco-editor/model/actions/quiz/correct-multiple-choice-answer.action';\r\nimport { WrongMultipleChoiceAnswerAction } from 'app/shared/monaco-editor/model/actions/quiz/wrong-multiple-choice-answer.action';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgbCollapse, NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { MarkdownEditorMonacoComponent } from 'app/shared/markdown-editor/monaco/markdown-editor-monaco.component';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-re-evaluate-multiple-choice-question',\r\n    templateUrl: './re-evaluate-multiple-choice-question.component.html',\r\n    styleUrls: ['./re-evaluate-multiple-choice-question.component.scss', '../../../shared/quiz.scss'],\r\n    imports: [FaIconComponent, FormsModule, NgbTooltip, NgbCollapse, TranslateDirective, MarkdownEditorMonacoComponent, CdkDropList, CdkDrag, CdkDragHandle, ArtemisTranslatePipe],\r\n})\r\nexport class ReEvaluateMultipleChoiceQuestionComponent implements OnInit {\r\n    @Input() question: MultipleChoiceQuestion;\r\n    @Input() questionIndex: number;\r\n\r\n    @Output() questionDeleted = new EventEmitter<object>();\r\n    @Output() questionUpdated = new EventEmitter<object>();\r\n    @Output() questionMoveUp = new EventEmitter<object>();\r\n    @Output() questionMoveDown = new EventEmitter<object>();\r\n\r\n    markdownMap: Map<number, string>;\r\n    questionText: string;\r\n\r\n    // Create Backup Question for resets\r\n    @Input() backupQuestion: MultipleChoiceQuestion;\r\n\r\n    isQuestionCollapsed: boolean;\r\n\r\n    // Icons\r\n    faTrash = faTrash;\r\n    faUndo = faUndo;\r\n    faChevronUp = faChevronUp;\r\n    faChevronDown = faChevronDown;\r\n    faArrowsAltV = faArrowsAltV;\r\n    faAngleRight = faAngleRight;\r\n    faAngleDown = faAngleDown;\r\n\r\n    ngOnInit(): void {\r\n        this.markdownMap = new Map<number, string>();\r\n        for (const answer of this.question.answerOptions!) {\r\n            this.markdownMap.set(\r\n                answer.id!,\r\n                (answer.isCorrect ? CorrectMultipleChoiceAnswerAction.IDENTIFIER : WrongMultipleChoiceAnswerAction.IDENTIFIER) + ' ' + generateExerciseHintExplanation(answer),\r\n            );\r\n        }\r\n        this.questionText = this.getQuestionText(this.question);\r\n    }\r\n\r\n    /**\r\n     * generate the question using the markdown service\r\n     * @param {MultipleChoiceQuestion} question\r\n     * @return string\r\n     */\r\n    getQuestionText(question: MultipleChoiceQuestion): string {\r\n        const questionToSet = { text: question.text, hint: question.hint, explanation: question.explanation };\r\n        return generateExerciseHintExplanation(questionToSet);\r\n    }\r\n\r\n    /**\r\n     * parse the new question text, hint and explanation using the markdown service\r\n     * @param {string} text\r\n     */\r\n    onQuestionChange(text: string): void {\r\n        parseExerciseHintExplanation(text, this.question);\r\n        this.questionUpdated.emit();\r\n    }\r\n\r\n    /**\r\n     * parse the new text, hint and explanation using the markdown service and assign it to the passed answer\r\n     * @param {string} text\r\n     * @param {AnswerOption} answer\r\n     */\r\n    onAnswerOptionChange(text: string, answer: AnswerOption): void {\r\n        const answerIndex = this.question.answerOptions!.findIndex((answerOption) => {\r\n            return answerOption.id === answer.id;\r\n        });\r\n        this.parseAnswerMarkdown(text, this.question.answerOptions![answerIndex!]);\r\n        this.questionUpdated.emit();\r\n    }\r\n\r\n    /**\r\n     * Parse the answer Markdown and apply the result to the question's data\r\n     *\r\n     * The markdown rules are as follows:\r\n     *\r\n     * 1. Text starts with [correct] or [wrong]\r\n     *    => Answer options are marked as isCorrect depending on [wrong] or [correct]\r\n     * 2. The answer text is parsed with ArtemisMarkdown\r\n     *\r\n     * @param text {string} the Markdown text to parse\r\n     * @param answer {AnswerOption} the answer, where to save the result\r\n     */\r\n    parseAnswerMarkdown(text: string, answer: AnswerOption) {\r\n        const answerParts = ReEvaluateMultipleChoiceQuestionComponent.splitByCorrectIncorrectTag(text);\r\n        // Find the box (text in-between the parts)\r\n        const answerOptionText = answerParts[1];\r\n        const startOfThisPart = text.indexOf(answerOptionText);\r\n        const box = text.substring(0, startOfThisPart);\r\n        // Check if box says this answer option is correct or not\r\n        if (box === CorrectMultipleChoiceAnswerAction.IDENTIFIER) {\r\n            answer.isCorrect = true;\r\n        } else if (box === WrongMultipleChoiceAnswerAction.IDENTIFIER) {\r\n            answer.isCorrect = false;\r\n        } else {\r\n            answer.isCorrect = undefined;\r\n        }\r\n        parseExerciseHintExplanation(answerOptionText, answer);\r\n    }\r\n\r\n    /**\r\n     * Split text by [correct] and [wrong]\r\n     * @param text\r\n     */\r\n    private static splitByCorrectIncorrectTag(text: string): string[] {\r\n        const stringForSplit =\r\n            escapeStringForUseInRegex(`${CorrectMultipleChoiceAnswerAction.IDENTIFIER}`) + '|' + escapeStringForUseInRegex(`${WrongMultipleChoiceAnswerAction.IDENTIFIER}`);\r\n        const splitRegExp = new RegExp(stringForSplit, 'g');\r\n        return text.split(splitRegExp);\r\n    }\r\n\r\n    /**\r\n     * Delete this question from the quiz\r\n     */\r\n    delete() {\r\n        this.questionDeleted.emit();\r\n    }\r\n\r\n    /**\r\n     * Move this question one position up\r\n     */\r\n    moveUp() {\r\n        this.questionMoveUp.emit();\r\n    }\r\n\r\n    /**\r\n     * Move this question one position down\r\n     */\r\n    moveDown() {\r\n        this.questionMoveDown.emit();\r\n    }\r\n\r\n    /**\r\n     * Resets the question title\r\n     */\r\n    resetQuestionTitle() {\r\n        this.question.title = this.backupQuestion.title;\r\n    }\r\n\r\n    /**\r\n     * Resets the question text\r\n     */\r\n    resetQuestionText() {\r\n        this.question.text = this.backupQuestion.text;\r\n        this.question.explanation = this.backupQuestion.explanation;\r\n        this.question.hint = this.backupQuestion.hint;\r\n    }\r\n\r\n    /**\r\n     * Resets the whole question\r\n     */\r\n    resetQuestion() {\r\n        this.resetQuestionTitle();\r\n        this.resetQuestionText();\r\n        this.question.answerOptions = cloneDeep(this.backupQuestion.answerOptions);\r\n    }\r\n\r\n    /**\r\n     * Resets the whole answer\r\n     * @param answer {AnswerOption} the answer, which will be reset\r\n     */\r\n    resetAnswer(answer: AnswerOption) {\r\n        // Find correct answer if they have another order\r\n        const answerIndex = this.question.answerOptions!.findIndex((answerOption) => {\r\n            return answerOption.id === answer.id;\r\n        });\r\n        // Find correct backup answer\r\n        const backupAnswerIndex = this.backupQuestion.answerOptions!.findIndex((answerBackup) => {\r\n            return answer.id === answerBackup.id;\r\n        });\r\n        // Overwrite current answerOption at given index with the backup\r\n        this.question.answerOptions![answerIndex] = cloneDeep(this.backupQuestion.answerOptions![backupAnswerIndex]);\r\n    }\r\n\r\n    /**\r\n     * Delete the answer\r\n     * @param answer {AnswerOption} the Answer which should be deleted\r\n     */\r\n    deleteAnswer(answer: AnswerOption) {\r\n        const index = this.question.answerOptions!.indexOf(answer);\r\n        this.question.answerOptions!.splice(index, 1);\r\n    }\r\n\r\n    /**\r\n     * Set the answer invalid\r\n     * @param  answer {AnswerOption} the Answer which should be deleted\r\n     */\r\n    setAnswerInvalid(answer: AnswerOption) {\r\n        const answerIndex = this.question.answerOptions!.indexOf(answer);\r\n        this.question.answerOptions![answerIndex].invalid = true;\r\n        this.questionUpdated.emit();\r\n    }\r\n\r\n    /**\r\n     * Checks if the given answer is invalid\r\n     * @param  answer {AnswerOption} the Answer which should be checked\r\n     * @return {boolean} true if the answer is invalid\r\n     */\r\n    isAnswerInvalid(answer: AnswerOption) {\r\n        return answer.invalid;\r\n    }\r\n\r\n    onReorderAnswerOptionDrop(event: CdkDragDrop<AnswerOption[]>) {\r\n        moveItemInArray(this.question.answerOptions || [], event.previousIndex, event.currentIndex);\r\n    }\r\n}\r\n", "<!-- TODO for a follow-up: This template relies on method calls to ensure the drag/drop of answer options works. We should avoid this for performance reasons -->\r\n<div class=\"edit-mc-question\">\r\n    <div class=\"card-header\">\r\n        <div class=\"row\">\r\n            <div class=\"col-3 col-lg-1 mt-1\">\r\n                <button\r\n                    class=\"btn question-collapse\"\r\n                    (click)=\"isQuestionCollapsed = !isQuestionCollapsed\"\r\n                    [attr.aria-expanded]=\"!isQuestionCollapsed\"\r\n                    [attr.aria-controls]=\"'collapseQuestion' + questionIndex\"\r\n                >\r\n                    <fa-icon size=\"3x\" [icon]=\"isQuestionCollapsed ? faAngleRight : faAngleDown\" />\r\n                </button>\r\n            </div>\r\n            <div class=\"col-9 col-lg-8 text-start mt-3\">\r\n                <div class=\"input-group row\">\r\n                    <div class=\"col-10 col-lg-11\">\r\n                        <input\r\n                            class=\"form-control\"\r\n                            [(ngModel)]=\"question.title\"\r\n                            placeholder=\"{{ 'artemisApp.quizExercise.placeholder.shortQuestionTitle' | artemisTranslate }}\"\r\n                            attr.aria-label=\"{{ 'artemisApp.quizExercise.placeholder.shortQuestionTitle' | artemisTranslate }}\"\r\n                        />\r\n                    </div>\r\n                    <div class=\"col-2 col-lg-1\">\r\n                        <span class=\"input-group-btn\">\r\n                            <button\r\n                                class=\"btn btn-outline-secondary\"\r\n                                type=\"button\"\r\n                                (click)=\"resetQuestionTitle()\"\r\n                                [ngbTooltip]=\"'artemisApp.quizExercise.re-evaluate.resetQuestionTitle' | artemisTranslate\"\r\n                            >\r\n                                <fa-icon [icon]=\"faUndo\" />\r\n                            </button>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-3 col-lg-1 mt-lg-3\">\r\n                <div class=\"question-type form-group\">\r\n                    <h3 class=\"mb-0\"><span class=\"badge bg-info align-text-top\">MC</span></h3>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-9 col-lg-2 text-end mt-lg-3\">\r\n                <div class=\"form-group\">\r\n                    <button\r\n                        id=\"move-up-button\"\r\n                        class=\"btn btn-outline-secondary\"\r\n                        type=\"button\"\r\n                        (click)=\"moveUp()\"\r\n                        [ngbTooltip]=\"'artemisApp.quizExercise.re-evaluate.moveUp' | artemisTranslate\"\r\n                    >\r\n                        <fa-icon [icon]=\"faChevronUp\" />\r\n                    </button>\r\n                    <button\r\n                        id=\"move-down-button\"\r\n                        class=\"btn btn-outline-secondary\"\r\n                        type=\"button\"\r\n                        (click)=\"moveDown()\"\r\n                        [ngbTooltip]=\"'artemisApp.quizExercise.re-evaluate.moveDown' | artemisTranslate\"\r\n                    >\r\n                        <fa-icon [icon]=\"faChevronDown\" />\r\n                    </button>\r\n                    <button\r\n                        id=\"reset-button\"\r\n                        class=\"btn btn-outline-secondary\"\r\n                        type=\"button\"\r\n                        (click)=\"resetQuestion()\"\r\n                        [ngbTooltip]=\"'artemisApp.quizExercise.re-evaluate.resetQuestion' | artemisTranslate\"\r\n                    >\r\n                        <fa-icon [icon]=\"faUndo\" />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"card-body\" [ngbCollapse]=\"isQuestionCollapsed\">\r\n        <div class=\"question-options row\">\r\n            <div class=\"col-12 col-lg-4\">\r\n                <div class=\"form-group\">\r\n                    <span jhiTranslate=\"artemisApp.quizQuestion.scoringType\" class=\"colon-suffix no-flex-shrink\"></span>\r\n                    <select class=\"form-select\" [(ngModel)]=\"question.scoringType\" title=\"scoring type\">\r\n                        <option value=\"ALL_OR_NOTHING\" jhiTranslate=\"artemisApp.quizExercise.scoringType.all_or_nothing\"></option>\r\n                        <option value=\"PROPORTIONAL_WITH_PENALTY\" jhiTranslate=\"artemisApp.quizExercise.scoringType.proportional_with_penalty\"></option>\r\n                        <option value=\"PROPORTIONAL_WITHOUT_PENALTY\" jhiTranslate=\"artemisApp.quizExercise.scoringType.proportional_without_penalty\"></option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12 col-lg-2\">\r\n                <div class=\"form-group\">\r\n                    <span jhiTranslate=\"artemisApp.quizQuestion.score\" class=\"colon-suffix\"></span>\r\n                    <input class=\"form-control point-input\" title=\"score\" type=\"number\" [value]=\"question.points\" disabled />\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12 col-lg-3\">\r\n                <div class=\"form-group\">\r\n                    <div class=\"form-check custom-control custom-checkbox\">\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            id=\"{{ 'cbRandomizeOrderMC' + questionIndex }}\"\r\n                            [(ngModel)]=\"question.randomizeOrder\"\r\n                            class=\"form-check-input custom-control-input\"\r\n                        />\r\n                        <label\r\n                            class=\"form-check-label custom-control-label\"\r\n                            for=\"{{ 'cbRandomizeOrderMC' + questionIndex }}\"\r\n                            jhiTranslate=\"artemisApp.multipleChoiceQuestion.randomizeOrder\"\r\n                        ></label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12 col-lg-3 row justify-content-lg-end\">\r\n                <div class=\"col-8 form-group\">\r\n                    <button\r\n                        class=\"btn btn-outline-secondary question-invalid\"\r\n                        [hidden]=\"question.invalid\"\r\n                        (click)=\"question.invalid = true\"\r\n                        jhiTranslate=\"artemisApp.quizExercise.re-evaluate.setQuestionInvalid\"\r\n                    ></button>\r\n                    <button\r\n                        class=\"btn btn-outline-secondary question-invalid\"\r\n                        [hidden]=\"!question.invalid\"\r\n                        [disabled]=\"question.invalid\"\r\n                        jhiTranslate=\"artemisApp.quizExercise.re-evaluate.questionIsInvalid\"\r\n                    ></button>\r\n                </div>\r\n                <div class=\"col-2\">\r\n                    <div class=\"re-evaluate-button\" id=\"delete-button\" class=\"delete-button\" (click)=\"delete()\">\r\n                        <fa-icon [icon]=\"faTrash\" size=\"2x\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"markupEditorArea\">\r\n            <div class=\"question-content\" style=\"padding-bottom: 12px\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-10 col-lg-11\">\r\n                        <!-- TODO: Fix file upload    -->\r\n                        <jhi-markdown-editor-monaco\r\n                            [markdown]=\"questionText\"\r\n                            [metaActions]=\"[]\"\r\n                            [defaultActions]=\"[]\"\r\n                            [headerActions]=\"undefined\"\r\n                            [domainActions]=\"[]\"\r\n                            [colorAction]=\"undefined\"\r\n                            [showEditButton]=\"false\"\r\n                            [showPreviewButton]=\"false\"\r\n                            (markdownChange)=\"onQuestionChange($event)\"\r\n                            (onBlurEditor)=\"questionText = getQuestionText(question)\"\r\n                            [enableFileUpload]=\"false\"\r\n                            class=\"editor col\"\r\n                            style=\"width: 90%\"\r\n                        />\r\n                    </div>\r\n                    <div class=\"col-2 col-lg-1\">\r\n                        <span class=\"reset-question-group col-auto input-group-btn d-flex align-items-start\">\r\n                            <button\r\n                                class=\"btn btn-outline-secondary\"\r\n                                type=\"button\"\r\n                                (click)=\"resetQuestionText()\"\r\n                                [ngbTooltip]=\"'artemisApp.quizExercise.re-evaluate.resetQuestionText' | artemisTranslate\"\r\n                            >\r\n                                <fa-icon [icon]=\"faUndo\" />\r\n                            </button>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div cdkDropList (cdkDropListDropped)=\"onReorderAnswerOptionDrop($event)\">\r\n            @for (answer of question.answerOptions; track answer) {\r\n                <div class=\"answer-border\" cdkDrag>\r\n                    <div class=\"question-options row align-items-start\">\r\n                        <div class=\"col-3 col-lg-1 drag-handle\">\r\n                            <div class=\"answer-handle re-evaluate-order-button text-center\" cdkDragHandle style=\"width: 100%\">\r\n                                <fa-icon [icon]=\"faArrowsAltV\" size=\"2x\" />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-9 col-lg-7 option-text\">\r\n                            <!-- TODO: Fix file upload -->\r\n                            <jhi-markdown-editor-monaco\r\n                                [markdown]=\"markdownMap.get(answer.id!)\"\r\n                                [metaActions]=\"[]\"\r\n                                [defaultActions]=\"[]\"\r\n                                [headerActions]=\"undefined\"\r\n                                [domainActions]=\"[]\"\r\n                                [colorAction]=\"undefined\"\r\n                                [showEditButton]=\"false\"\r\n                                [showPreviewButton]=\"false\"\r\n                                (markdownChange)=\"onAnswerOptionChange($event, answer)\"\r\n                                [enableFileUpload]=\"false\"\r\n                                [enableResize]=\"false\"\r\n                                class=\"editor\"\r\n                                style=\"width: 65%\"\r\n                            />\r\n                        </div>\r\n                        <div class=\"col-12 col-lg-4\">\r\n                            <div class=\"form-group question-options-actions text-center d-flex flex-wrap\">\r\n                                <button\r\n                                    class=\"btn btn-outline-secondary\"\r\n                                    [hidden]=\"isAnswerInvalid(answer)\"\r\n                                    (click)=\"setAnswerInvalid(answer)\"\r\n                                    jhiTranslate=\"artemisApp.quizExercise.re-evaluate.setAnswerInvalid\"\r\n                                ></button>\r\n                                <button\r\n                                    class=\"btn btn-outline-secondary\"\r\n                                    [hidden]=\"!isAnswerInvalid(answer)\"\r\n                                    [disabled]=\"isAnswerInvalid(answer)\"\r\n                                    jhiTranslate=\"artemisApp.quizExercise.re-evaluate.answerIsInvalid\"\r\n                                ></button>\r\n                                <button\r\n                                    class=\"btn btn-outline-secondary\"\r\n                                    type=\"button\"\r\n                                    (click)=\"resetAnswer(answer)\"\r\n                                    [ngbTooltip]=\"'artemisApp.quizExercise.re-evaluate.resetAnswer' | artemisTranslate\"\r\n                                >\r\n                                    <fa-icon [icon]=\"faUndo\" />\r\n                                </button>\r\n                                <button\r\n                                    class=\"btn btn-outline-secondary\"\r\n                                    type=\"button\"\r\n                                    (click)=\"deleteAnswer(answer)\"\r\n                                    [ngbTooltip]=\"'artemisApp.quizExercise.re-evaluate.deleteAnswer' | artemisTranslate\"\r\n                                >\r\n                                    <fa-icon [icon]=\"faTrash\" />\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    </div>\r\n</div>\r\n", "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { QuizQuestion } from 'app/entities/quiz/quiz-question.model';\r\nimport { ShortAnswerQuestion } from 'app/entities/quiz/short-answer-question.model';\r\nimport { ShortAnswerQuestionEditComponent } from '../../short-answer-question/short-answer-question-edit.component';\r\n\r\n@Component({\r\n    selector: 'jhi-re-evaluate-short-answer-question',\r\n    template: `\r\n        <jhi-short-answer-question-edit\r\n            [question]=\"shortAnswerQuestion\"\r\n            [questionIndex]=\"questionIndex\"\r\n            [reEvaluationInProgress]=\"true\"\r\n            (questionUpdated)=\"questionUpdated.emit()\"\r\n            (questionDeleted)=\"questionDeleted.emit()\"\r\n            (questionMoveUp)=\"questionMoveUp.emit()\"\r\n            (questionMoveDown)=\"questionMoveDown.emit()\"\r\n        />\r\n    `,\r\n    providers: [],\r\n    imports: [ShortAnswerQuestionEditComponent],\r\n})\r\nexport class ReEvaluateShortAnswerQuestionComponent {\r\n    shortAnswerQuestion: ShortAnswerQuestion;\r\n\r\n    @Input() set question(question: QuizQuestion) {\r\n        this.shortAnswerQuestion = question as ShortAnswerQuestion;\r\n    }\r\n    @Input()\r\n    questionIndex: number;\r\n\r\n    @Output()\r\n    questionUpdated = new EventEmitter();\r\n    @Output()\r\n    questionDeleted = new EventEmitter();\r\n    @Output()\r\n    questionMoveUp = new EventEmitter();\r\n    @Output()\r\n    questionMoveDown = new EventEmitter();\r\n}\r\n", "import { ChangeDetectorRef, Component, OnChanges, OnDestroy, OnInit, SimpleChanges, ViewChildren, ViewEncapsulation, inject } from '@angular/core';\r\nimport { IncludedInOverallScorePickerComponent } from 'app/exercises/shared/included-in-overall-score-picker/included-in-overall-score-picker.component';\r\nimport { Subscription } from 'rxjs';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgbModal, NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { QuizReEvaluateWarningComponent } from './quiz-re-evaluate-warning.component';\r\nimport { DragAndDropQuestionUtil } from 'app/exercises/quiz/shared/drag-and-drop-question-util.service';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport dayjs from 'dayjs/esm';\r\nimport { QuizQuestion } from 'app/entities/quiz/quiz-question.model';\r\nimport { QuizExerciseService } from 'app/exercises/quiz/manage/quiz-exercise.service';\r\nimport { QuizExercise } from 'app/entities/quiz/quiz-exercise.model';\r\nimport { QuizExercisePopupService } from 'app/exercises/quiz/manage/quiz-exercise-popup.service';\r\nimport { Duration } from 'app/exercises/quiz/manage/quiz-exercise-interfaces';\r\nimport { cloneDeep } from 'lodash-es';\r\nimport { ArtemisNavigationUtilService } from 'app/utils/navigation.utils';\r\nimport { IncludedInOverallScore } from 'app/entities/exercise.model';\r\nimport { QuizExerciseValidationDirective } from 'app/exercises/quiz/manage/quiz-exercise-validation.directive';\r\nimport { ShortAnswerQuestionUtil } from 'app/exercises/quiz/shared/short-answer-question-util.service';\r\nimport { faExclamationCircle, faExclamationTriangle, faUndo } from '@fortawesome/free-solid-svg-icons';\r\nimport { ReEvaluateDragAndDropQuestionComponent } from 'app/exercises/quiz/manage/re-evaluate/drag-and-drop-question/re-evaluate-drag-and-drop-question.component';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FormDateTimePickerComponent } from 'app/shared/date-time-picker/date-time-picker.component';\r\nimport { ReEvaluateMultipleChoiceQuestionComponent } from './multiple-choice-question/re-evaluate-multiple-choice-question.component';\r\nimport { ReEvaluateShortAnswerQuestionComponent } from './short-answer-question/re-evaluate-short-answer-question.component';\r\nimport { JsonPipe } from '@angular/common';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-quiz-re-evaluate',\r\n    templateUrl: './quiz-re-evaluate.component.html',\r\n    styleUrls: ['./quiz-re-evaluate.component.scss', '../../shared/quiz.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    providers: [DragAndDropQuestionUtil, ShortAnswerQuestionUtil],\r\n    imports: [\r\n        TranslateDirective,\r\n        FaIconComponent,\r\n        FormsModule,\r\n        NgbTooltip,\r\n        FormDateTimePickerComponent,\r\n        IncludedInOverallScorePickerComponent,\r\n        ReEvaluateMultipleChoiceQuestionComponent,\r\n        ReEvaluateDragAndDropQuestionComponent,\r\n        ReEvaluateShortAnswerQuestionComponent,\r\n        JsonPipe,\r\n        ArtemisTranslatePipe,\r\n    ],\r\n})\r\nexport class QuizReEvaluateComponent extends QuizExerciseValidationDirective implements OnInit, OnChanges, OnDestroy {\r\n    private quizExerciseService = inject(QuizExerciseService);\r\n    private route = inject(ActivatedRoute);\r\n    private modalServiceC = inject(NgbModal);\r\n    private quizExercisePopupService = inject(QuizExercisePopupService);\r\n    private changeDetector = inject(ChangeDetectorRef);\r\n    private navigationUtilService = inject(ArtemisNavigationUtilService);\r\n\r\n    private subscription: Subscription;\r\n\r\n    @ViewChildren(ReEvaluateDragAndDropQuestionComponent)\r\n    reEvaluateDragAndDropQuestionComponents: ReEvaluateDragAndDropQuestionComponent[];\r\n\r\n    modalService: NgbModal;\r\n    popupService: QuizExercisePopupService;\r\n\r\n    isSaving: boolean;\r\n    duration: Duration;\r\n\r\n    // Icons\r\n    faUndo = faUndo;\r\n    faExclamationCircle = faExclamationCircle;\r\n    faExclamationTriangle = faExclamationTriangle;\r\n\r\n    ngOnInit(): void {\r\n        this.subscription = this.route.params.subscribe((params) => {\r\n            this.quizExerciseService.find(params['exerciseId']).subscribe((response: HttpResponse<QuizExercise>) => {\r\n                this.quizExercise = response.body!;\r\n                this.prepareEntity(this.quizExercise);\r\n                this.savedEntity = cloneDeep(this.quizExercise);\r\n                this.updateDuration();\r\n            });\r\n        });\r\n        this.quizIsValid = true;\r\n        this.modalService = this.modalServiceC;\r\n        this.popupService = this.quizExercisePopupService;\r\n\r\n        /** Initialize constants **/\r\n        this.isSaving = false;\r\n        this.duration = new Duration(0, 0);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes.quizExercise && changes.quizExercise.currentValue !== null) {\r\n            this.prepareEntity(this.quizExercise);\r\n            this.savedEntity = cloneDeep(this.quizExercise);\r\n            this.cacheValidation(this.changeDetector);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @function deleteQuestion\r\n     * @desc Remove question from the quiz\r\n     * @param questionToBeDeleted {QuizQuestion} the question to remove\r\n     */\r\n    deleteQuestion(questionToBeDeleted: QuizQuestion): void {\r\n        this.quizExercise.quizQuestions = this.quizExercise.quizQuestions?.filter((question) => question !== questionToBeDeleted);\r\n        this.cacheValidation(this.changeDetector);\r\n    }\r\n\r\n    /**\r\n     * @function onQuestionUpdated\r\n     * @desc Handles the change of a question by replacing the array with a copy\r\n     *                                      (allows for shallow comparison)\r\n     */\r\n    onQuestionUpdated(): void {\r\n        this.cacheValidation(this.changeDetector);\r\n        this.quizExercise.quizQuestions = Array.from(this.quizExercise.quizQuestions!);\r\n    }\r\n\r\n    /**\r\n     * @function save\r\n     * @desc Open Warning-Modal\r\n     *  -> if confirmed: send changed quiz to server (in Modal-controller)\r\n     *                              and go back to parent-template\r\n     *  -> if canceled: close Modal\r\n     */\r\n    save(): void {\r\n        const files = new Map<string, File>();\r\n        for (const component of this.reEvaluateDragAndDropQuestionComponents) {\r\n            component.fileMap.forEach((value, filename) => {\r\n                files.set(filename, value.file);\r\n            });\r\n        }\r\n        this.popupService.open(QuizReEvaluateWarningComponent as Component, this.quizExercise, files).then((res) => {\r\n            res.result.then(() => {\r\n                this.savedEntity = cloneDeep(this.quizExercise);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Return to the exercise overview page\r\n     */\r\n    back(): void {\r\n        this.navigationUtilService.navigateBackFromExerciseUpdate(this.quizExercise);\r\n    }\r\n\r\n    /**\r\n     * @function prepareEntity\r\n     * @desc Makes sure the quizExercise is well-formed and its fields are of the correct types\r\n     * @param quizExercise\r\n     */\r\n    prepareEntity(quizExercise: QuizExercise) {\r\n        quizExercise.releaseDate = quizExercise.releaseDate ? quizExercise.releaseDate : dayjs();\r\n        quizExercise.duration = Number(quizExercise.duration);\r\n        quizExercise.duration = isNaN(quizExercise.duration) ? 10 : quizExercise.duration;\r\n    }\r\n\r\n    /**\r\n     * @function resetAll\r\n     * @desc Resets the whole Quiz\r\n     */\r\n    resetAll(): void {\r\n        this.quizExercise = cloneDeep(this.savedEntity);\r\n    }\r\n\r\n    /**\r\n     * @function resetQuizTitle\r\n     * @desc Resets the quiz title\r\n     */\r\n    resetQuizTitle() {\r\n        this.quizExercise.title = this.savedEntity.title;\r\n    }\r\n\r\n    /**\r\n     * @function moveUp\r\n     * @desc Move the question one position up\r\n     * @param question {QuizQuestion} the question to move\r\n     */\r\n    moveUp(question: QuizQuestion): void {\r\n        const index = this.quizExercise.quizQuestions!.indexOf(question);\r\n        if (index === 0) {\r\n            return;\r\n        }\r\n        const questionToMove: QuizQuestion = Object.assign({}, this.quizExercise.quizQuestions![index]);\r\n        /**\r\n         * The splice() method adds/removes items to/from an array, and returns the removed item(s).\r\n         * We create a copy of the question we want to move and remove it from the questions array.\r\n         * Then we reinsert it at index - 1 => move up by 1 position\r\n         */\r\n        this.quizExercise.quizQuestions!.splice(index, 1);\r\n        this.quizExercise.quizQuestions!.splice(index - 1, 0, questionToMove);\r\n    }\r\n\r\n    /**\r\n     * @function moveDown\r\n     * @desc Move the question one position down\r\n     * @param question {QuizQuestion} the question to move\r\n     */\r\n    moveDown(question: QuizQuestion): void {\r\n        const index = this.quizExercise.quizQuestions!.indexOf(question);\r\n        if (index === this.quizExercise.quizQuestions!.length - 1) {\r\n            return;\r\n        }\r\n        const questionToMove: QuizQuestion = Object.assign({}, this.quizExercise.quizQuestions![index]);\r\n        /**\r\n         * The splice() method adds/removes items to/from an array, and returns the removed item(s).\r\n         * We create a copy of the question we want to move and remove it from the questions array.\r\n         * Then we reinsert it at index + 1 => move down by 1 position\r\n         */\r\n        this.quizExercise.quizQuestions!.splice(index, 1);\r\n        this.quizExercise.quizQuestions!.splice(index + 1, 0, questionToMove);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * handles how the exercise is calculated into the course/ exam score\r\n     */\r\n    includedInOverallScoreChange(includedInOverallScore: IncludedInOverallScore) {\r\n        this.quizExercise.includedInOverallScore = includedInOverallScore;\r\n        this.cacheValidation(this.changeDetector);\r\n    }\r\n\r\n    /**\r\n     @function updateDuration\r\n     @desc Set duration according quiz exercise duration\r\n    */\r\n    updateDuration(): void {\r\n        const duration = dayjs.duration(this.quizExercise.duration ?? 0, 'seconds');\r\n        this.duration.minutes = 60 * duration.hours() + duration.minutes();\r\n        this.duration.seconds = duration.seconds();\r\n    }\r\n}\r\n", "@if (quizExercise) {\r\n    <div>\r\n        <h1>\r\n            <span\r\n                jhiTranslate=\"artemisApp.quizExercise.re-evaluate.title\"\r\n                [translateValues]=\"{ param: quizExercise.course?.title || quizExercise.exerciseGroup?.exam?.title }\"\r\n            ></span>\r\n        </h1>\r\n        @if (!quizExercise.course) {\r\n            <h5>\r\n                <fa-icon class=\"text-warning\" [icon]=\"faExclamationTriangle\" />\r\n                <span jhiTranslate=\"artemisApp.quizExercise.re-evaluate.warning.exam\"></span>\r\n            </h5>\r\n        }\r\n        <hr />\r\n        <div class=\"edit-quiz-re-evaluate\">\r\n            <div class=\"quiz-options\">\r\n                <div class=\"row form-group\" style=\"width: 100%\">\r\n                    <div class=\"row\">\r\n                        <label for=\"quiz-title\" jhiTranslate=\"artemisApp.exercise.title\"></label>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-11\">\r\n                            <input\r\n                                id=\"quiz-title\"\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                [(ngModel)]=\"quizExercise.title\"\r\n                                placeholder=\"{{ 'artemisApp.quizExercise.placeholder.title' | artemisTranslate }}\"\r\n                            />\r\n                        </div>\r\n                        <div class=\"col-1\">\r\n                            <span class=\"input-group-btn\">\r\n                                <button\r\n                                    class=\"btn btn-outline-secondary\"\r\n                                    type=\"button\"\r\n                                    (click)=\"resetQuizTitle()\"\r\n                                    [ngbTooltip]=\"'artemisApp.quizExercise.re-evaluate.resetQuizTitle' | artemisTranslate\"\r\n                                >\r\n                                    <fa-icon [icon]=\"faUndo\" />\r\n                                </button>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\" style=\"width: 100%\">\r\n                    <div class=\"col-12 col-lg-7\">\r\n                        <div class=\"row\">\r\n                            <div class=\"form-group\">\r\n                                <jhi-date-time-picker\r\n                                    class=\"start-time\"\r\n                                    labelName=\"{{ 'artemisApp.quizExercise.startTime' | artemisTranslate }}\"\r\n                                    [(ngModel)]=\"quizExercise.releaseDate\"\r\n                                    [disabled]=\"true\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"form-group quiz-duration\">\r\n                                <label for=\"quiz-duration-minutes\" jhiTranslate=\"artemisApp.quizExercise.duration\"></label>\r\n                                <div class=\"d-flex align-items-center\">\r\n                                    <input id=\"quiz-duration-minutes\" class=\"form-control me-2\" title=\"Duration\" [value]=\"duration.minutes\" type=\"number\" disabled />\r\n                                    <span jhiTranslate=\"artemisApp.quizExercise.minutes\"></span>\r\n                                    <input id=\"quiz-duration-seconds\" class=\"form-control me-2 ms-2\" title=\"Duration\" type=\"number\" [value]=\"duration.seconds\" disabled />\r\n                                    <span jhiTranslate=\"artemisApp.quizExercise.seconds\"></span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-12 col-lg-5\">\r\n                        <div class=\"row form-group\">\r\n                            <label class=\"form-control-label\" jhiTranslate=\"artemisApp.exercise.includedInOverallScore{{ quizExercise.course ? 'Course' : 'Exam' }}Label\"></label>\r\n                            <div>\r\n                                @if (quizExercise.includedInOverallScore) {\r\n                                    <jhi-included-in-overall-score-picker\r\n                                        [includedInOverallScore]=\"quizExercise.includedInOverallScore!\"\r\n                                        (includedInOverallScoreChange)=\"includedInOverallScoreChange($event)\"\r\n                                        [allowNotIncluded]=\"!!quizExercise.course\"\r\n                                    />\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"form-group custom-control custom-checkbox\">\r\n                                <input type=\"checkbox\" id=\"cbRandomizeOrder\" class=\"form-check-input custom-control-input\" [(ngModel)]=\"quizExercise.randomizeQuestionOrder\" />\r\n                                <label class=\"form-check-label custom-control-label\" for=\"cbRandomizeOrder\" jhiTranslate=\"artemisApp.quizExercise.randomizeQuestionOrder\"></label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"text-start mt-1 mb-1\" style=\"width: 100%\">\r\n                <h4>\r\n                    <span jhiTranslate=\"artemisApp.quizExercise.questions\"></span>\r\n                </h4>\r\n            </div>\r\n            @for (question of quizExercise.quizQuestions; track question; let i = $index) {\r\n                <div class=\"card mb-3\" style=\"width: 100%\">\r\n                    @if (question.type === MULTIPLE_CHOICE) {\r\n                        <div>\r\n                            <jhi-re-evaluate-multiple-choice-question\r\n                                [question]=\"question\"\r\n                                [questionIndex]=\"i + 1\"\r\n                                [backupQuestion]=\"savedEntity.quizQuestions![i]\"\r\n                                (questionUpdated)=\"onQuestionUpdated()\"\r\n                                (questionDeleted)=\"deleteQuestion(question)\"\r\n                                (questionMoveUp)=\"moveUp(question)\"\r\n                                (questionMoveDown)=\"moveDown(question)\"\r\n                            />\r\n                        </div>\r\n                    }\r\n                    @if (question.type === DRAG_AND_DROP) {\r\n                        <div>\r\n                            <jhi-re-evaluate-drag-and-drop-question\r\n                                [question]=\"question\"\r\n                                [questionIndex]=\"i + 1\"\r\n                                (questionUpdated)=\"onQuestionUpdated()\"\r\n                                (questionDeleted)=\"deleteQuestion(question)\"\r\n                                (questionMoveUp)=\"moveUp(question)\"\r\n                                (questionMoveDown)=\"moveDown(question)\"\r\n                            />\r\n                        </div>\r\n                    }\r\n                    @if (question.type === SHORT_ANSWER) {\r\n                        <div>\r\n                            <jhi-re-evaluate-short-answer-question\r\n                                [question]=\"question\"\r\n                                [questionIndex]=\"i + 1\"\r\n                                (questionUpdated)=\"onQuestionUpdated()\"\r\n                                (questionDeleted)=\"deleteQuestion(question)\"\r\n                                (questionMoveUp)=\"moveUp(question)\"\r\n                                (questionMoveDown)=\"moveDown(question)\"\r\n                            />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n        <div class=\"edit-quiz-footer\">\r\n            <div class=\"container\">\r\n                <div class=\"edit-quiz-footer-content\">\r\n                    <div></div>\r\n                    <div class=\"form-group\">\r\n                        @if (!pendingChanges() && !isSaving) {\r\n                            <span jhiTranslate=\"artemisApp.quizExercise.edit.saved\" class=\"badge bg-success\"></span>\r\n                        }\r\n                        @if (pendingChanges() && isValidQuiz() && !isSaving) {\r\n                            <span jhiTranslate=\"artemisApp.quizExercise.edit.pendingChanges\" class=\"badge bg-primary\"></span>\r\n                        }\r\n                        @if (isSaving) {\r\n                            <span jhiTranslate=\"artemisApp.quizExercise.edit.saving\" class=\"badge bg-primary\"></span>\r\n                        }\r\n                        <ng-template #tooltipTranslate>\r\n                            @for (reason of invalidReasons; track reason) {\r\n                                <div>\r\n                                    @if ((reason.translateValues | json) !== '{}') {\r\n                                        <p\r\n                                            jhiTranslate=\"{{ reason.translateKey }}\"\r\n                                            [translateValues]=\"{ index: reason.translateValues.index, threshold: reason.translateValues.threshold }\"\r\n                                        ></p>\r\n                                    }\r\n                                    @if ((reason.translateValues | json) === '{}') {\r\n                                        <p jhiTranslate=\"{{ reason.translateKey }}\"></p>\r\n                                    }\r\n                                </div>\r\n                            }\r\n                        </ng-template>\r\n                        <ng-template #warningTranslate>\r\n                            @for (warning of computeInvalidWarnings(); track warning) {\r\n                                <div>\r\n                                    @if ((warning.translateValues | json) !== '{}') {\r\n                                        <p jhiTranslate=\"{{ warning.translateKey }}\" [translateValues]=\"{ index: warning.translateValues.index }\"></p>\r\n                                    }\r\n                                    @if ((warning.translateValues | json) === '{}') {\r\n                                        <p jhiTranslate=\"{{ warning.translateKey }}\"></p>\r\n                                    }\r\n                                </div>\r\n                            }\r\n                        </ng-template>\r\n                        @if (!quizIsValid) {\r\n                            <span class=\"badge bg-danger\" [ngbTooltip]=\"tooltipTranslate\" tooltip-placement=\"top-right auto\">\r\n                                <fa-icon [icon]=\"faExclamationCircle\" />\r\n                                <span jhiTranslate=\"artemisApp.quizExercise.edit.invalidInput\"></span>\r\n                                <span>({{ invalidReasons.length }})</span>\r\n                            </span>\r\n                        }\r\n                        @if (warningQuizCache) {\r\n                            <span class=\"badge bg-warning\" [ngbTooltip]=\"warningTranslate\" tooltip-placement=\"top-right auto\">\r\n                                <span jhiTranslate=\"artemisApp.quizExercise.edit.warning\"></span>\r\n                                <span>({{ invalidWarnings.length }})</span>\r\n                            </span>\r\n                        }\r\n                        <button\r\n                            class=\"btn btn-warning\"\r\n                            (click)=\"resetAll()\"\r\n                            [disabled]=\"!pendingChanges() || !isValidQuiz() || isSaving\"\r\n                            jhiTranslate=\"artemisApp.quizExercise.re-evaluate.resetQuiz\"\r\n                        ></button>\r\n                        <button class=\"btn btn-secondary\" (click)=\"back()\" jhiTranslate=\"{{ pendingChanges() ? 'entity.action.cancel' : 'entity.action.back' }}\"></button>\r\n                        <button class=\"btn btn-success\" (click)=\"save()\" [disabled]=\"!pendingChanges() || !isValidQuiz() || isSaving\" jhiTranslate=\"entity.action.save\"></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n"],
  "mappings": "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",
  "names": ["QuizReEvaluateService", "http", "inject", "HttpClient", "resourceUrl", "reevaluate", "quizExercise", "files", "copy", "convert", "formData", "FormData", "append", "objectToJsonBlob", "forEach", "file", "fileName", "put", "id", "observe", "Object", "assign", "categories", "ExerciseService", "stringifyExerciseCategories", "factory", "\u0275fac", "providedIn", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "ctx_r0", "faCheck", "faTimes", "faSpinner", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r2", "\u0275\u0275nextContext", "\u0275\u0275resetView", "clear", "busy", "faBan", "_r3", "confirmChange", "faCheckCircle", "_r4", "closeAndNavigate", "QuizReEvaluateWarningComponent", "activeModal", "inject", "NgbActiveModal", "quizExerciseService", "QuizExerciseService", "quizReEvaluateService", "QuizReEvaluateService", "navigationUtilService", "ArtemisNavigationUtilService", "isSaving", "successful", "failed", "questionElementDeleted", "questionElementInvalid", "questionCorrectness", "questionDeleted", "questionInvalid", "scoringChanged", "solutionAdded", "quizExercise", "backUpQuiz", "files", "ngOnInit", "find", "id", "subscribe", "res", "body", "loadQuizSuccess", "dismiss", "quizQuestions", "length", "forEach", "question", "backUpQuestion", "questionBackUp", "checkQuestion", "invalid", "scoringType", "type", "QuizQuestionType", "MULTIPLE_CHOICE", "checkMultipleChoiceQuestion", "DRAG_AND_DROP", "checkDragAndDropQuestion", "SHORT_ANSWER", "checkShortAnswerQuestion", "answerOptions", "answer", "backUpAnswer", "answerBackUp", "isCorrect", "dragItems", "dropLocations", "JSON", "stringify", "correctMappings", "toLowerCase", "dragItem", "backUpDragItem", "dragItemBackUp", "dropLocation", "backUpDropLocation", "dropLocationBackUp", "solutions", "spots", "solution", "backUpSolution", "solutionBackUp", "undefined", "spot", "backUpSpot", "spotBackUp", "reevaluate", "next", "error", "close", "setTimeout", "navigateBackFromExerciseUpdate", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275template", "QuizReEvaluateWarningComponent_Conditional_12_Template", "QuizReEvaluateWarningComponent_Conditional_13_Template", "QuizReEvaluateWarningComponent_Conditional_14_Template", "QuizReEvaluateWarningComponent_Conditional_15_Template", "QuizReEvaluateWarningComponent_Conditional_16_Template", "QuizReEvaluateWarningComponent_Conditional_17_Template", "QuizReEvaluateWarningComponent_Conditional_18_Template", "QuizReEvaluateWarningComponent_Conditional_25_Template", "QuizReEvaluateWarningComponent_Conditional_26_Template", "QuizReEvaluateWarningComponent_Conditional_27_Template", "QuizReEvaluateWarningComponent_Conditional_28_Template", "QuizReEvaluateWarningComponent_Conditional_32_Template", "QuizReEvaluateWarningComponent_Conditional_33_Template", "QuizReEvaluateWarningComponent_Conditional_34_Template", "\u0275\u0275conditional", "TranslateDirective", "FaIconComponent", "styles", "QuizExercisePopupService", "modalService", "inject", "NgbModal", "router", "Router", "ngbModalRef", "constructor", "open", "component", "quizExercise", "files", "Promise", "resolve", "undefined", "quizExerciseModalRef", "modalRef", "size", "backdrop", "componentInstance", "result", "then", "navigate", "course", "id", "outlets", "popup", "replaceUrl", "queryParamsHandling", "factory", "\u0275fac", "providedIn", "ReEvaluateDragAndDropQuestionComponent", "dragAndDropQuestionEditComponent", "question", "questionIndex", "questionUpdated", "EventEmitter", "questionDeleted", "questionMoveUp", "questionMoveDown", "fileMap", "Map", "handleAddFile", "event", "set", "fileName", "path", "file", "handleRemoveFile", "delete", "selectors", "viewQuery", "rf", "ctx", "DragAndDropQuestionEditComponent", "decls", "vars", "consts", "template", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275listener", "emit", "$event", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "encapsulation", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275listener", "$event", "answer_r2", "\u0275\u0275restoreView", "_r1", "$implicit", "ctx_r2", "\u0275\u0275nextContext", "\u0275\u0275resetView", "onAnswerOptionChange", "setAnswerInvalid", "resetAnswer", "deleteAnswer", "\u0275\u0275advance", "\u0275\u0275property", "faArrowsAltV", "markdownMap", "get", "id", "\u0275\u0275pureFunction0", "_c0", "undefined", "isAnswerInvalid", "\u0275\u0275pipeBind1", "faUndo", "faTrash", "ReEvaluateMultipleChoiceQuestionComponent", "question", "questionIndex", "questionDeleted", "EventEmitter", "questionUpdated", "questionMoveUp", "questionMoveDown", "questionText", "backupQuestion", "isQuestionCollapsed", "faChevronUp", "faChevronDown", "faAngleRight", "faAngleDown", "ngOnInit", "Map", "answer", "answerOptions", "set", "isCorrect", "CorrectMultipleChoiceAnswerAction", "IDENTIFIER", "WrongMultipleChoiceAnswerAction", "generateExerciseHintExplanation", "getQuestionText", "questionToSet", "text", "hint", "explanation", "onQuestionChange", "parseExerciseHintExplanation", "emit", "answerIndex", "findIndex", "answerOption", "parseAnswerMarkdown", "answerOptionText", "splitByCorrectIncorrectTag", "startOfThisPart", "indexOf", "box", "substring", "stringForSplit", "escapeStringForUseInRegex", "splitRegExp", "RegExp", "split", "delete", "moveUp", "moveDown", "resetQuestionTitle", "title", "resetQuestionText", "resetQuestion", "cloneDeep", "backupAnswerIndex", "answerBackup", "index", "splice", "invalid", "onReorderAnswerOptionDrop", "event", "moveItemInArray", "previousIndex", "currentIndex", "selectors", "inputs", "outputs", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275twoWayListener", "i0", "\u0275\u0275twoWayBindingSet", "scoringType", "randomizeOrder", "\u0275\u0275repeaterCreate", "ReEvaluateMultipleChoiceQuestionComponent_For_169_Template", "\u0275\u0275repeaterTrackByIdentity", "\u0275\u0275propertyInterpolate", "\u0275\u0275twoWayProperty", "points", "\u0275\u0275repeater", "FaIconComponent", "FormsModule", "NgSelectOption", "\u0275NgSelectMultipleOption", "DefaultValueAccessor", "CheckboxControlValueAccessor", "SelectControlValueAccessor", "NgControlStatus", "NgModel", "NgbTooltip", "NgbCollapse", "TranslateDirective", "MarkdownEditorMonacoComponent", "CdkDropList", "CdkDrag", "CdkDragHandle", "ArtemisTranslatePipe", "styles", "ReEvaluateShortAnswerQuestionComponent", "shortAnswerQuestion", "question", "questionIndex", "questionUpdated", "EventEmitter", "questionDeleted", "questionMoveUp", "questionMoveDown", "selectors", "inputs", "outputs", "features", "\u0275\u0275ProvidersFeature", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275listener", "emit", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "ShortAnswerQuestionEditComponent", "encapsulation", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "ctx_r1", "faExclamationTriangle", "\u0275\u0275listener", "$event", "\u0275\u0275restoreView", "_r3", "\u0275\u0275nextContext", "\u0275\u0275resetView", "includedInOverallScoreChange", "quizExercise", "includedInOverallScore", "course", "_r4", "onQuestionUpdated", "question_r5", "$implicit", "deleteQuestion", "moveUp", "moveDown", "\u0275$index_166_r7", "savedEntity", "quizQuestions", "_r8", "_r9", "\u0275\u0275template", "QuizReEvaluateComponent_Conditional_0_For_110_Conditional_3_Template", "QuizReEvaluateComponent_Conditional_0_For_110_Conditional_4_Template", "QuizReEvaluateComponent_Conditional_0_For_110_Conditional_5_Template", "\u0275\u0275conditional", "type", "MULTIPLE_CHOICE", "DRAG_AND_DROP", "SHORT_ANSWER", "\u0275\u0275propertyInterpolate", "reason_r10", "translateKey", "\u0275\u0275pureFunction2", "_c1", "translateValues", "index", "threshold", "QuizReEvaluateComponent_Conditional_0_ng_template_125_For_2_Conditional_3_Template", "QuizReEvaluateComponent_Conditional_0_ng_template_125_For_2_Conditional_5_Template", "\u0275\u0275pipeBind1", "\u0275\u0275repeaterCreate", "QuizReEvaluateComponent_Conditional_0_ng_template_125_For_2_Template", "\u0275\u0275repeaterTrackByIdentity", "\u0275\u0275repeater", "invalidReasons", "warning_r11", "\u0275\u0275pureFunction1", "_c2", "QuizReEvaluateComponent_Conditional_0_ng_template_128_For_2_Conditional_3_Template", "QuizReEvaluateComponent_Conditional_0_ng_template_128_For_2_Conditional_5_Template", "QuizReEvaluateComponent_Conditional_0_ng_template_128_For_2_Template", "computeInvalidWarnings", "tooltipTranslate_r12", "faExclamationCircle", "\u0275\u0275textInterpolate1", "length", "warningTranslate_r13", "invalidWarnings", "QuizReEvaluateComponent_Conditional_0_Conditional_8_Template", "\u0275\u0275twoWayListener", "_r1", "i0", "\u0275\u0275twoWayBindingSet", "title", "resetQuizTitle", "releaseDate", "QuizReEvaluateComponent_Conditional_0_Conditional_85_Template", "randomizeQuestionOrder", "QuizReEvaluateComponent_Conditional_0_For_110_Template", "QuizReEvaluateComponent_Conditional_0_Conditional_122_Template", "QuizReEvaluateComponent_Conditional_0_Conditional_123_Template", "QuizReEvaluateComponent_Conditional_0_Conditional_124_Template", "QuizReEvaluateComponent_Conditional_0_ng_template_125_Template", "\u0275\u0275templateRefExtractor", "QuizReEvaluateComponent_Conditional_0_ng_template_128_Template", "QuizReEvaluateComponent_Conditional_0_Conditional_131_Template", "QuizReEvaluateComponent_Conditional_0_Conditional_132_Template", "resetAll", "back", "save", "_c0", "exerciseGroup", "exam", "\u0275\u0275twoWayProperty", "faUndo", "duration", "minutes", "seconds", "\u0275\u0275propertyInterpolate1", "pendingChanges", "isSaving", "isValidQuiz", "quizIsValid", "warningQuizCache", "QuizReEvaluateComponent", "QuizExerciseValidationDirective", "quizExerciseService", "inject", "QuizExerciseService", "route", "ActivatedRoute", "modalServiceC", "NgbModal", "quizExercisePopupService", "QuizExercisePopupService", "changeDetector", "ChangeDetectorRef", "navigationUtilService", "ArtemisNavigationUtilService", "subscription", "reEvaluateDragAndDropQuestionComponents", "modalService", "popupService", "ngOnInit", "params", "subscribe", "find", "response", "body", "prepareEntity", "cloneDeep", "updateDuration", "Duration", "ngOnChanges", "changes", "currentValue", "cacheValidation", "questionToBeDeleted", "filter", "question", "Array", "from", "files", "Map", "component", "fileMap", "forEach", "value", "filename", "set", "file", "open", "QuizReEvaluateWarningComponent", "then", "res", "result", "navigateBackFromExerciseUpdate", "dayjs", "Number", "isNaN", "indexOf", "questionToMove", "Object", "assign", "splice", "ngOnDestroy", "unsubscribe", "hours", "__ngFactoryType__", "selectors", "viewQuery", "rf", "ctx", "ReEvaluateDragAndDropQuestionComponent", "DragAndDropQuestionUtil", "ShortAnswerQuestionUtil", "\u0275\u0275InheritDefinitionFeature", "\u0275\u0275NgOnChangesFeature", "decls", "vars", "consts", "template", "QuizReEvaluateComponent_Conditional_0_Template", "TranslateDirective", "FaIconComponent", "FormsModule", "DefaultValueAccessor", "CheckboxControlValueAccessor", "NgControlStatus", "NgModel", "NgbTooltip", "FormDateTimePickerComponent", "IncludedInOverallScorePickerComponent", "ReEvaluateMultipleChoiceQuestionComponent", "ReEvaluateShortAnswerQuestionComponent", "JsonPipe", "ArtemisTranslatePipe", "styles", "encapsulation"]
}
