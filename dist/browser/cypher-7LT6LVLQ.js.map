{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/cypher/cypher.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.2(404545bded1df6ffa41ea0af4e8ddb219018c6c1)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/cypher/cypher.ts\nvar conf = {\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]],\n  autoClosingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }, {\n    open: \"`\",\n    close: \"`\"\n  }],\n  surroundingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }, {\n    open: \"`\",\n    close: \"`\"\n  }]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: `.cypher`,\n  ignoreCase: true,\n  brackets: [{\n    open: \"{\",\n    close: \"}\",\n    token: \"delimiter.curly\"\n  }, {\n    open: \"[\",\n    close: \"]\",\n    token: \"delimiter.bracket\"\n  }, {\n    open: \"(\",\n    close: \")\",\n    token: \"delimiter.parenthesis\"\n  }],\n  keywords: [\"ALL\", \"AND\", \"AS\", \"ASC\", \"ASCENDING\", \"BY\", \"CALL\", \"CASE\", \"CONTAINS\", \"CREATE\", \"DELETE\", \"DESC\", \"DESCENDING\", \"DETACH\", \"DISTINCT\", \"ELSE\", \"END\", \"ENDS\", \"EXISTS\", \"IN\", \"IS\", \"LIMIT\", \"MANDATORY\", \"MATCH\", \"MERGE\", \"NOT\", \"ON\", \"ON\", \"OPTIONAL\", \"OR\", \"ORDER\", \"REMOVE\", \"RETURN\", \"SET\", \"SKIP\", \"STARTS\", \"THEN\", \"UNION\", \"UNWIND\", \"WHEN\", \"WHERE\", \"WITH\", \"XOR\", \"YIELD\"],\n  builtinLiterals: [\"true\", \"TRUE\", \"false\", \"FALSE\", \"null\", \"NULL\"],\n  builtinFunctions: [\"abs\", \"acos\", \"asin\", \"atan\", \"atan2\", \"avg\", \"ceil\", \"coalesce\", \"collect\", \"cos\", \"cot\", \"count\", \"degrees\", \"e\", \"endNode\", \"exists\", \"exp\", \"floor\", \"head\", \"id\", \"keys\", \"labels\", \"last\", \"left\", \"length\", \"log\", \"log10\", \"lTrim\", \"max\", \"min\", \"nodes\", \"percentileCont\", \"percentileDisc\", \"pi\", \"properties\", \"radians\", \"rand\", \"range\", \"relationships\", \"replace\", \"reverse\", \"right\", \"round\", \"rTrim\", \"sign\", \"sin\", \"size\", \"split\", \"sqrt\", \"startNode\", \"stDev\", \"stDevP\", \"substring\", \"sum\", \"tail\", \"tan\", \"timestamp\", \"toBoolean\", \"toFloat\", \"toInteger\", \"toLower\", \"toString\", \"toUpper\", \"trim\", \"type\"],\n  operators: [\n  // Math operators\n  \"+\", \"-\", \"*\", \"/\", \"%\", \"^\",\n  // Comparison operators\n  \"=\", \"<>\", \"<\", \">\", \"<=\", \">=\",\n  // Pattern operators\n  \"->\", \"<-\", \"-->\", \"<--\"],\n  escapes: /\\\\(?:[tbnrf\\\\\"'`]|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  digits: /\\d+/,\n  octaldigits: /[0-7]+/,\n  hexdigits: /[0-9a-fA-F]+/,\n  tokenizer: {\n    root: [[/[{}[\\]()]/, \"@brackets\"], {\n      include: \"common\"\n    }],\n    common: [{\n      include: \"@whitespace\"\n    }, {\n      include: \"@numbers\"\n    }, {\n      include: \"@strings\"\n    },\n    // Cypher labels on nodes/relationships, e.g. (n:NodeLabel)-[e:RelationshipLabel]\n    [/:[a-zA-Z_][\\w]*/, \"type.identifier\"], [/[a-zA-Z_][\\w]*(?=\\()/, {\n      cases: {\n        \"@builtinFunctions\": \"predefined.function\"\n      }\n    }], [/[a-zA-Z_$][\\w$]*/, {\n      cases: {\n        \"@keywords\": \"keyword\",\n        \"@builtinLiterals\": \"predefined.literal\",\n        \"@default\": \"identifier\"\n      }\n    }], [/`/, \"identifier.escape\", \"@identifierBacktick\"],\n    // delimiter and operator after number because of `.\\d` floats and `:` in labels\n    [/[;,.:|]/, \"delimiter\"], [/[<>=%+\\-*/^]+/, {\n      cases: {\n        \"@operators\": \"delimiter\",\n        \"@default\": \"\"\n      }\n    }]],\n    numbers: [[/-?(@digits)[eE](-?(@digits))?/, \"number.float\"], [/-?(@digits)?\\.(@digits)([eE]-?(@digits))?/, \"number.float\"], [/-?0x(@hexdigits)/, \"number.hex\"], [/-?0(@octaldigits)/, \"number.octal\"], [/-?(@digits)/, \"number\"]],\n    strings: [[/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"],\n    // non-teminated string\n    [/'([^'\\\\]|\\\\.)*$/, \"string.invalid\"],\n    // non-teminated string\n    [/\"/, \"string\", \"@stringDouble\"], [/'/, \"string\", \"@stringSingle\"]],\n    whitespace: [[/[ \\t\\r\\n]+/, \"white\"], [/\\/\\*/, \"comment\", \"@comment\"], [/\\/\\/.*$/, \"comment\"]],\n    comment: [[/\\/\\/.*/, \"comment\"], [/[^/*]+/, \"comment\"], [/\\*\\//, \"comment\", \"@pop\"], [/[/*]/, \"comment\"]],\n    stringDouble: [[/[^\\\\\"]+/, \"string\"], [/@escapes/, \"string\"], [/\\\\./, \"string.invalid\"], [/\"/, \"string\", \"@pop\"]],\n    stringSingle: [[/[^\\\\']+/, \"string\"], [/@escapes/, \"string\"], [/\\\\./, \"string.invalid\"], [/'/, \"string\", \"@pop\"]],\n    identifierBacktick: [[/[^\\\\`]+/, \"identifier.escape\"], [/@escapes/, \"identifier.escape\"], [/\\\\./, \"identifier.escape.invalid\"], [/`/, \"identifier.escape\", \"@pop\"]]\n  }\n};\nexport { conf, language };"],"mappings":"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","names":["conf","language"],"x_google_ignoreList":[0]}