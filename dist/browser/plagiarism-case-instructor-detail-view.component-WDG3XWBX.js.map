{
  "version": 3,
  "sources": ["src/main/webapp/app/course/plagiarism-cases/instructor-view/detail-view/plagiarism-case-instructor-detail-view.component.ts", "src/main/webapp/app/course/plagiarism-cases/instructor-view/detail-view/plagiarism-case-instructor-detail-view.component.html"],
  "sourcesContent": ["import { Component, OnDestroy, OnInit, inject } from '@angular/core';\r\nimport { PlagiarismCaseReviewComponent } from 'app/course/plagiarism-cases/shared/review/plagiarism-case-review.component';\r\nimport { PlagiarismCaseVerdictComponent } from 'app/course/plagiarism-cases/shared/verdict/plagiarism-case-verdict.component';\r\nimport { PlagiarismCase } from 'app/exercises/shared/plagiarism/types/PlagiarismCase';\r\nimport { PlagiarismCasesService } from 'app/course/plagiarism-cases/shared/plagiarism-cases.service';\r\nimport { ActivatedRoute, RouterLink } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { getCourseFromExercise, getExerciseUrlSegment, getIcon } from 'app/entities/exercise.model';\r\nimport { PlagiarismVerdict } from 'app/exercises/shared/plagiarism/types/PlagiarismVerdict';\r\nimport { MetisService } from 'app/shared/metis/metis.service';\r\nimport { PageType } from 'app/shared/metis/metis.util';\r\nimport { Post } from 'app/entities/metis/post.model';\r\nimport { Subscription } from 'rxjs';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { faCheck, faInfo, faPrint, faUser } from '@fortawesome/free-solid-svg-icons';\r\nimport { ThemeService } from 'app/core/theme/theme.service';\r\nimport { abbreviateString } from 'app/utils/text.utils';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\nimport { User } from 'app/core/user/user.model';\r\nimport dayjs from 'dayjs/esm';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport {\r\n    NgbDropdown,\r\n    NgbDropdownItem,\r\n    NgbDropdownMenu,\r\n    NgbDropdownToggle,\r\n    NgbNav,\r\n    NgbNavContent,\r\n    NgbNavItem,\r\n    NgbNavItemRole,\r\n    NgbNavLink,\r\n    NgbNavLinkBase,\r\n    NgbNavOutlet,\r\n} from '@ng-bootstrap/ng-bootstrap';\r\nimport { PostingThreadComponent } from 'app/shared/metis/posting-thread/posting-thread.component';\r\nimport { PostCreateEditModalComponent } from 'app/shared/metis/posting-create-edit-modal/post-create-edit-modal/post-create-edit-modal.component';\r\nimport { ConfirmAutofocusButtonComponent } from 'app/shared/components/confirm-autofocus-button.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MetisConversationService } from 'app/shared/metis/metis-conversation.service';\r\nimport { LinkPreviewService } from 'app/shared/link-preview/services/link-preview.service';\r\nimport { LinkifyService } from 'app/shared/link-preview/services/linkify.service';\r\n\r\n@Component({\r\n    selector: 'jhi-plagiarism-case-instructor-detail-view',\r\n    templateUrl: './plagiarism-case-instructor-detail-view.component.html',\r\n    styleUrls: ['./plagiarism-case-instructor-detail-view.component.scss'],\r\n    providers: [MetisService, MetisConversationService, LinkPreviewService, LinkifyService],\r\n    imports: [\r\n        TranslateDirective,\r\n        PlagiarismCaseVerdictComponent,\r\n        FaIconComponent,\r\n        RouterLink,\r\n        NgbDropdown,\r\n        NgbDropdownToggle,\r\n        NgbDropdownMenu,\r\n        NgbDropdownItem,\r\n        PostingThreadComponent,\r\n        PostCreateEditModalComponent,\r\n        NgbNav,\r\n        NgbNavItem,\r\n        NgbNavItemRole,\r\n        NgbNavLink,\r\n        NgbNavLinkBase,\r\n        NgbNavContent,\r\n        ConfirmAutofocusButtonComponent,\r\n        FormsModule,\r\n        NgbNavOutlet,\r\n        PlagiarismCaseReviewComponent,\r\n    ],\r\n})\r\nexport class PlagiarismCaseInstructorDetailViewComponent implements OnInit, OnDestroy {\r\n    private metisService = inject(MetisService);\r\n    private plagiarismCasesService = inject(PlagiarismCasesService);\r\n    private route = inject(ActivatedRoute);\r\n    private alertService = inject(AlertService);\r\n    private translateService = inject(TranslateService);\r\n    private themeService = inject(ThemeService);\r\n    private accountService = inject(AccountService);\r\n\r\n    courseId: number;\r\n    plagiarismCaseId: number;\r\n    plagiarismCase: PlagiarismCase;\r\n\r\n    verdictPointDeduction = 0;\r\n    verdictMessage = '';\r\n    createdPost: Post;\r\n    currentAccount?: User;\r\n\r\n    activeTab = 1;\r\n\r\n    getExerciseUrlSegment = getExerciseUrlSegment;\r\n    getIcon = getIcon;\r\n    faUser = faUser;\r\n    faPrint = faPrint;\r\n    faInfo = faInfo;\r\n    faCheck = faCheck;\r\n\r\n    readonly pageType = PageType.PLAGIARISM_CASE_INSTRUCTOR;\r\n    private postsSubscription: Subscription;\r\n    posts: Post[];\r\n\r\n    ngOnInit(): void {\r\n        this.courseId = Number(this.route.snapshot.paramMap.get('courseId'));\r\n        this.plagiarismCaseId = Number(this.route.snapshot.paramMap.get('plagiarismCaseId'));\r\n        this.plagiarismCasesService.getPlagiarismCaseDetailForInstructor(this.courseId, this.plagiarismCaseId).subscribe({\r\n            next: (res: HttpResponse<PlagiarismCase>) => {\r\n                this.plagiarismCase = res.body!;\r\n\r\n                this.verdictMessage = this.plagiarismCase.verdictMessage ?? '';\r\n                this.verdictPointDeduction = this.plagiarismCase.verdictPointDeduction ?? 0;\r\n                this.metisService.setCourse(getCourseFromExercise(this.plagiarismCase.exercise!)!);\r\n                this.metisService.setPageType(this.pageType);\r\n                this.metisService.getFilteredPosts({\r\n                    plagiarismCaseId: this.plagiarismCase!.id,\r\n                });\r\n                this.accountService.identity().then((user) => {\r\n                    this.currentAccount = user;\r\n                    this.createEmptyPost();\r\n                });\r\n            },\r\n        });\r\n        this.postsSubscription = this.metisService.posts.subscribe((posts: Post[]) => {\r\n            const filteredPosts = posts.filter((post) => post.plagiarismCase?.id === this.plagiarismCaseId);\r\n\r\n            // Handle post deletion case by checking if unfiltered posts are empty.\r\n            if (filteredPosts.length > 0 || posts.length === 0) {\r\n                // Note: \"filteredPosts.length > 0 || posts.length === 0\" behaves differently than filteredPosts.length >= 0\r\n                // when \"posts.length > 0 && filteredPosts.length === 0\".\r\n                this.posts = filteredPosts;\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.postsSubscription?.unsubscribe();\r\n    }\r\n\r\n    /**\r\n     * saves the verdict of the plagiarism case as POINT_DEDUCTION\r\n     * and saves the point deduction in percent\r\n     */\r\n    savePointDeductionVerdict(): void {\r\n        if (!this.isStudentNotified()) {\r\n            throw new Error('Cannot call savePointDeductionVerdict before student is notified');\r\n        }\r\n        this.plagiarismCasesService\r\n            .saveVerdict(this.courseId, this.plagiarismCaseId, {\r\n                verdict: PlagiarismVerdict.POINT_DEDUCTION,\r\n                verdictPointDeduction: this.verdictPointDeduction,\r\n            })\r\n            .subscribe({\r\n                next: (res: HttpResponse<PlagiarismCase>) => {\r\n                    this.plagiarismCase.verdict = res.body!.verdict;\r\n                    this.plagiarismCase.verdictPointDeduction = res.body!.verdictPointDeduction!;\r\n                    this.plagiarismCase.verdictBy = res.body!.verdictBy;\r\n                    this.plagiarismCase.verdictDate = res.body!.verdictDate;\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * saves the verdict of the plagiarism case as WARNING\r\n     * and saves the warning message\r\n     */\r\n    saveWarningVerdict(): void {\r\n        if (!this.isStudentNotified()) {\r\n            throw new Error('Cannot call saveWarningVerdict before student is notified');\r\n        }\r\n        this.plagiarismCasesService\r\n            .saveVerdict(this.courseId, this.plagiarismCaseId, {\r\n                verdict: PlagiarismVerdict.WARNING,\r\n                verdictMessage: this.verdictMessage,\r\n            })\r\n            .subscribe({\r\n                next: (res: HttpResponse<PlagiarismCase>) => {\r\n                    this.plagiarismCase.verdict = res.body!.verdict;\r\n                    this.plagiarismCase.verdictMessage = res.body!.verdictMessage!;\r\n                    this.plagiarismCase.verdictBy = res.body!.verdictBy;\r\n                    this.plagiarismCase.verdictDate = res.body!.verdictDate;\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * saves the verdict of the plagiarism case as PLAGIARISM\r\n     */\r\n    saveVerdict(): void {\r\n        if (!this.isStudentNotified()) {\r\n            throw new Error('Cannot call saveVerdict before student is notified');\r\n        }\r\n        this.plagiarismCasesService.saveVerdict(this.courseId, this.plagiarismCaseId, { verdict: PlagiarismVerdict.PLAGIARISM }).subscribe({\r\n            next: (res: HttpResponse<PlagiarismCase>) => {\r\n                this.plagiarismCase.verdict = res.body!.verdict;\r\n                this.plagiarismCase.verdictBy = res.body!.verdictBy;\r\n                this.plagiarismCase.verdictDate = res.body!.verdictDate;\r\n            },\r\n        });\r\n    }\r\n\r\n    /**\r\n     * saves the verdict of the plagiarism case as NO_PLAGIARISM\r\n     */\r\n    saveNoPlagiarismVerdict(): void {\r\n        if (!this.isStudentNotified()) {\r\n            throw new Error('Cannot call saveNoPlagiarismVerdict before student is notified');\r\n        }\r\n        this.plagiarismCasesService.saveVerdict(this.courseId, this.plagiarismCaseId, { verdict: PlagiarismVerdict.NO_PLAGIARISM }).subscribe({\r\n            next: (res: HttpResponse<PlagiarismCase>) => {\r\n                this.plagiarismCase.verdict = res.body!.verdict;\r\n                this.plagiarismCase.verdictBy = res.body!.verdictBy;\r\n                this.plagiarismCase.verdictDate = res.body!.verdictDate;\r\n            },\r\n        });\r\n    }\r\n\r\n    isStudentNotified() {\r\n        return this.posts?.length > 0;\r\n    }\r\n\r\n    onStudentNotified(post: Post) {\r\n        if (!this.posts) {\r\n            this.posts = [];\r\n        }\r\n        this.posts.push(post);\r\n        this.alertService.success('artemisApp.plagiarism.plagiarismCases.studentNotified');\r\n    }\r\n\r\n    /**\r\n     * Creates a post for the student notification.\r\n     * This method invokes the metis service to create an empty default post (without course-wide context) that is needed for initialization of the modal.\r\n     * The plagiarism case is set as context and an example title and body for the instructor is generated.\r\n     **/\r\n    createEmptyPost(): void {\r\n        const studentName = abbreviateString(this.plagiarismCase.student?.name ?? '', 70);\r\n        const instructorName = abbreviateString(this.currentAccount?.name ?? '', 70);\r\n        const exerciseTitle = abbreviateString(this.plagiarismCase.exercise?.title ?? '', 70);\r\n        const belongsToExam = !!this.plagiarismCase.exercise?.exerciseGroup;\r\n        const courseOrExamTitle = abbreviateString(\r\n            (belongsToExam ? this.plagiarismCase.exercise?.exerciseGroup?.exam?.title : this.plagiarismCase.exercise?.course?.title) ?? '',\r\n            70,\r\n        );\r\n\r\n        this.createdPost = this.metisService.createEmptyPostForContext(undefined, this.plagiarismCase);\r\n        // Note the limit of 1.000 characters for the post's content\r\n        this.createdPost.title = this.translateService.instant('artemisApp.plagiarism.plagiarismCases.notification.title', {\r\n            exercise: exerciseTitle,\r\n        });\r\n        this.createdPost.content = this.translateService.instant('artemisApp.plagiarism.plagiarismCases.notification.body', {\r\n            student: studentName,\r\n            instructor: instructorName,\r\n            exercise: exerciseTitle,\r\n            inCourseOrExam: this.translateService.instant('artemisApp.plagiarism.plagiarismCases.notification.' + (belongsToExam ? 'inExam' : 'inCourse')),\r\n            courseOrExam: courseOrExamTitle,\r\n            cocLink: '/public/documents/student-code-of-conduct.pdf',\r\n            apsoLink: '/public/documents/apso.pdf',\r\n            dueDate: dayjs().add(7, 'day').format('DD.MM.YYYY'),\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Prints the whole page using the theme service\r\n     */\r\n    async printPlagiarismCase() {\r\n        return await this.themeService.print();\r\n    }\r\n}\r\n", "@if (plagiarismCase) {\r\n    <div class=\"plagiarism-case\">\r\n        <div class=\"case-header\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-lg-6 col-xl-3 d-flex align-items-center\">\r\n                    <h1 class=\"h2\" jhiTranslate=\"artemisApp.plagiarism.plagiarismCases.plagiarismCase\"></h1>\r\n                </div>\r\n                <div class=\"col-12 col-lg-6 col-xl-3 d-flex align-items-center\">\r\n                    <jhi-plagiarism-case-verdict [plagiarismCase]=\"plagiarismCase\" class=\"my-2\" />\r\n                </div>\r\n                <div class=\"col-12 col-lg-6 col-xl-3 d-flex flex-column\">\r\n                    <p class=\"mb-1 text-truncate\">\r\n                        <fa-icon [icon]=\"faUser\" />\r\n                        {{ plagiarismCase.student!.name }} ({{ plagiarismCase.student!.login }})\r\n                    </p>\r\n                    @if (plagiarismCase?.exercise) {\r\n                        <p class=\"mb-0 text-truncate\">\r\n                            @if (plagiarismCase.exercise!.type!) {\r\n                                <fa-icon [icon]=\"getIcon(plagiarismCase.exercise!.type!)\" />\r\n                            }\r\n                            {{ plagiarismCase.exercise!.title! }}\r\n                        </p>\r\n                    }\r\n                </div>\r\n                <div class=\"col-12 col-lg-6 col-xl-3 d-flex align-items-center justify-content-xl-end\">\r\n                    <button class=\"btn btn-secondary my-1\" (click)=\"printPlagiarismCase()\">\r\n                        <fa-icon [icon]=\"faPrint\" />\r\n                    </button>\r\n                    <div class=\"btn-group m-1\">\r\n                        <a\r\n                            class=\"btn btn-primary d-print-none\"\r\n                            [routerLink]=\"['/course-management', courseId, getExerciseUrlSegment(plagiarismCase.exercise!.type), plagiarismCase.exercise!.id]\"\r\n                        >\r\n                            <span jhiTranslate=\"artemisApp.plagiarism.plagiarismCases.exercise\"></span>\r\n                        </a>\r\n                        <div class=\"btn-group\" ngbDropdown role=\"group\" aria-label=\"Button group with nested dropdown\">\r\n                            <button type=\"button\" class=\"btn btn-primary d-print-none dropdown-toggle-split\" ngbDropdownToggle></button>\r\n                            <div class=\"dropdown-menu\" ngbDropdownMenu>\r\n                                <a\r\n                                    ngbDropdownItem\r\n                                    [routerLink]=\"['/course-management', courseId, getExerciseUrlSegment(plagiarismCase.exercise!.type), plagiarismCase.exercise!.id, 'plagiarism']\"\r\n                                >\r\n                                    <span jhiTranslate=\"artemisApp.plagiarism.plagiarismDetection\"></span>\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"case-body\">\r\n            <section>\r\n                <h3 jhiTranslate=\"artemisApp.plagiarism.plagiarismCases.conversation\"></h3>\r\n                @if (posts && posts.length > 0) {\r\n                    <jhi-posting-thread [post]=\"posts[0]\" [showAnswers]=\"true\" />\r\n                }\r\n                @if ((!posts || posts.length === 0) && createdPost) {\r\n                    <div>\r\n                        <button class=\"btn btn-md btn-primary\" (click)=\"createEditModal.open()\" jhiTranslate=\"artemisApp.plagiarism.plagiarismCases.notifyStudent\"></button>\r\n                        <jhi-post-create-edit-modal #createEditModal [posting]=\"createdPost\" (onCreate)=\"onStudentNotified($event)\" />\r\n                    </div>\r\n                }\r\n            </section>\r\n            <section class=\"d-print-none\">\r\n                <h2 class=\"mt-5\" jhiTranslate=\"artemisApp.plagiarism.plagiarismCases.verdict.verdict\"></h2>\r\n                <p jhiTranslate=\"artemisApp.plagiarism.plagiarismCases.verdict.text\"></p>\r\n                <div class=\"verdict-container\">\r\n                    <ul ngbNav #nav=\"ngbNav\" [(activeId)]=\"activeTab\" [destroyOnHide]=\"false\" class=\"nav-tabs\">\r\n                        <li [ngbNavItem]=\"1\">\r\n                            <a ngbNavLink jhiTranslate=\"artemisApp.plagiarism.plagiarismCases.verdict.plagiarism\"></a>\r\n                            <ng-template ngbNavContent>\r\n                                <p jhiTranslate=\"artemisApp.plagiarism.plagiarismCases.verdict.plagiarismDescription\"></p>\r\n                                <div class=\"form-inline\">\r\n                                    <jhi-confirm-button\r\n                                        title=\"artemisApp.plagiarism.plagiarismCases.verdict.plagiarism\"\r\n                                        confirmationText=\"artemisApp.plagiarism.plagiarismCases.verdict.confirmationText\"\r\n                                        confirmationTitle=\"artemisApp.plagiarism.plagiarismCases.verdict.confirmationTitle\"\r\n                                        [translateText]=\"true\"\r\n                                        [disabled]=\"!!plagiarismCase.verdict || !isStudentNotified()\"\r\n                                        (onConfirm)=\"saveVerdict()\"\r\n                                    />\r\n                                    <jhi-confirm-button\r\n                                        title=\"artemisApp.plagiarism.plagiarismCases.verdict.noPlagiarism\"\r\n                                        confirmationText=\"artemisApp.plagiarism.plagiarismCases.verdict.confirmationText\"\r\n                                        confirmationTitle=\"artemisApp.plagiarism.plagiarismCases.verdict.confirmationTitle\"\r\n                                        class=\"mx-1\"\r\n                                        [translateText]=\"true\"\r\n                                        [disabled]=\"!!plagiarismCase.verdict || !isStudentNotified()\"\r\n                                        (onConfirm)=\"saveNoPlagiarismVerdict()\"\r\n                                    />\r\n                                </div>\r\n                            </ng-template>\r\n                        </li>\r\n                        <li [ngbNavItem]=\"2\">\r\n                            <a ngbNavLink jhiTranslate=\"artemisApp.plagiarism.plagiarismCases.verdict.pointDeduction\"></a>\r\n                            <ng-template ngbNavContent>\r\n                                <p jhiTranslate=\"artemisApp.plagiarism.plagiarismCases.verdict.pointDeductionDescription\"></p>\r\n                                <div class=\"form-inline\">\r\n                                    <div class=\"input-group w-auto\">\r\n                                        <input\r\n                                            class=\"form-control\"\r\n                                            type=\"number\"\r\n                                            [(ngModel)]=\"verdictPointDeduction\"\r\n                                            min=\"0\"\r\n                                            max=\"100\"\r\n                                            [readonly]=\"!!plagiarismCase.verdict\"\r\n                                            [disabled]=\"!!plagiarismCase.verdict\"\r\n                                        />\r\n                                        <span class=\"input-group-text\">%</span>\r\n                                    </div>\r\n                                    <jhi-confirm-button\r\n                                        title=\"artemisApp.plagiarism.plagiarismCases.verdict.pointDeduction\"\r\n                                        confirmationText=\"artemisApp.plagiarism.plagiarismCases.verdict.confirmationText\"\r\n                                        confirmationTitle=\"artemisApp.plagiarism.plagiarismCases.verdict.confirmationTitle\"\r\n                                        tooltip=\"artemisApp.plagiarism.plagiarismCases.verdict.tooltip\"\r\n                                        class=\"mx-1\"\r\n                                        [translateText]=\"true\"\r\n                                        [disabled]=\"!!plagiarismCase.verdict || verdictPointDeduction < 0 || verdictPointDeduction > 100 || !isStudentNotified()\"\r\n                                        (onConfirm)=\"savePointDeductionVerdict()\"\r\n                                    />\r\n                                </div>\r\n                            </ng-template>\r\n                        </li>\r\n                        <li [ngbNavItem]=\"3\">\r\n                            <a ngbNavLink jhiTranslate=\"artemisApp.plagiarism.plagiarismCases.verdict.warning\"></a>\r\n                            <ng-template ngbNavContent>\r\n                                <p jhiTranslate=\"artemisApp.plagiarism.plagiarismCases.verdict.warningDescription\"></p>\r\n                                <div class=\"form\">\r\n                                    <div class=\"form-group\">\r\n                                        <textarea\r\n                                            rows=\"5\"\r\n                                            cols=\"80\"\r\n                                            maxlength=\"1000\"\r\n                                            class=\"form-control\"\r\n                                            [(ngModel)]=\"verdictMessage\"\r\n                                            [disabled]=\"!!plagiarismCase.verdict\"\r\n                                            [readonly]=\"!!plagiarismCase.verdict\"\r\n                                        >\r\n                                        </textarea>\r\n                                    </div>\r\n                                    <jhi-confirm-button\r\n                                        title=\"artemisApp.plagiarism.plagiarismCases.verdict.warning\"\r\n                                        confirmationText=\"artemisApp.plagiarism.plagiarismCases.verdict.confirmationText\"\r\n                                        confirmationTitle=\"artemisApp.plagiarism.plagiarismCases.verdict.confirmationTitle\"\r\n                                        tooltip=\"artemisApp.plagiarism.plagiarismCases.verdict.tooltip\"\r\n                                        [translateText]=\"true\"\r\n                                        [disabled]=\"!!plagiarismCase.verdict || !isStudentNotified()\"\r\n                                        (onConfirm)=\"saveWarningVerdict()\"\r\n                                    />\r\n                                </div>\r\n                            </ng-template>\r\n                        </li>\r\n                    </ul>\r\n                    <div class=\"mt-4\" [ngbNavOutlet]=\"nav\"></div>\r\n                    @if (!isStudentNotified()) {\r\n                        <div class=\"disabled-overlay\">\r\n                            <fa-icon [icon]=\"faInfo\" [fixedWidth]=\"true\" />\r\n                            <span jhiTranslate=\"artemisApp.plagiarism.plagiarismCases.verdict.studentNotNotified\"></span>\r\n                        </div>\r\n                    }\r\n                    @if (isStudentNotified() && plagiarismCase.verdict) {\r\n                        <div class=\"disabled-overlay\">\r\n                            <fa-icon [icon]=\"faCheck\" [fixedWidth]=\"true\" />\r\n                            <span jhiTranslate=\"artemisApp.plagiarism.plagiarismCases.verdict.alreadyDecided\"></span>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </section>\r\n            <section>\r\n                <h3 class=\"mt-5\" jhiTranslate=\"artemisApp.plagiarism.plagiarismCases.comparisons\"></h3>\r\n                <div class=\"container-fluid\">\r\n                    <jhi-plagiarism-case-review [plagiarismCase]=\"plagiarismCase\" [forStudent]=\"false\" />\r\n                </div>\r\n            </section>\r\n        </div>\r\n    </div>\r\n}\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275property", "ctx_r1", "getIcon", "plagiarismCase", "exercise", "type", "\u0275\u0275elementStart", "\u0275\u0275template", "PlagiarismCaseInstructorDetailViewComponent_Conditional_0_Conditional_24_Conditional_3_Template", "\u0275\u0275elementEnd", "\u0275\u0275conditional", "\u0275\u0275textInterpolate1", "title", "posts", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r3", "createEditModal_r4", "\u0275\u0275reference", "\u0275\u0275resetView", "open", "$event", "\u0275\u0275nextContext", "onStudentNotified", "createdPost", "_r5", "saveVerdict", "saveNoPlagiarismVerdict", "verdict", "isStudentNotified", "\u0275\u0275twoWayListener", "_r6", "i0", "\u0275\u0275twoWayBindingSet", "verdictPointDeduction", "savePointDeductionVerdict", "\u0275\u0275twoWayProperty", "_r7", "verdictMessage", "saveWarningVerdict", "faInfo", "faCheck", "PlagiarismCaseInstructorDetailViewComponent_Conditional_0_Conditional_24_Template", "_r1", "printPlagiarismCase", "PlagiarismCaseInstructorDetailViewComponent_Conditional_0_Conditional_63_Template", "PlagiarismCaseInstructorDetailViewComponent_Conditional_0_Conditional_64_Template", "activeTab", "PlagiarismCaseInstructorDetailViewComponent_Conditional_0_ng_template_81_Template", "PlagiarismCaseInstructorDetailViewComponent_Conditional_0_ng_template_88_Template", "PlagiarismCaseInstructorDetailViewComponent_Conditional_0_ng_template_95_Template", "PlagiarismCaseInstructorDetailViewComponent_Conditional_0_Conditional_101_Template", "PlagiarismCaseInstructorDetailViewComponent_Conditional_0_Conditional_102_Template", "faUser", "\u0275\u0275textInterpolate2", "student", "name", "login", "faPrint", "\u0275\u0275pureFunction3", "_c0", "courseId", "getExerciseUrlSegment", "id", "_c1", "length", "nav_r8", "PlagiarismCaseInstructorDetailViewComponent", "metisService", "inject", "MetisService", "plagiarismCasesService", "PlagiarismCasesService", "route", "ActivatedRoute", "alertService", "AlertService", "translateService", "TranslateService", "themeService", "ThemeService", "accountService", "AccountService", "plagiarismCaseId", "currentAccount", "pageType", "PageType", "PLAGIARISM_CASE_INSTRUCTOR", "postsSubscription", "ngOnInit", "Number", "snapshot", "paramMap", "get", "getPlagiarismCaseDetailForInstructor", "subscribe", "next", "res", "body", "setCourse", "getCourseFromExercise", "setPageType", "getFilteredPosts", "identity", "then", "user", "createEmptyPost", "filteredPosts", "filter", "post", "ngOnDestroy", "unsubscribe", "Error", "PlagiarismVerdict", "POINT_DEDUCTION", "verdictBy", "verdictDate", "WARNING", "PLAGIARISM", "NO_PLAGIARISM", "push", "success", "studentName", "abbreviateString", "instructorName", "exerciseTitle", "belongsToExam", "exerciseGroup", "courseOrExamTitle", "exam", "course", "createEmptyPostForContext", "undefined", "instant", "content", "instructor", "inCourseOrExam", "courseOrExam", "cocLink", "apsoLink", "dueDate", "dayjs", "add", "format", "__async", "print", "selectors", "features", "\u0275\u0275ProvidersFeature", "MetisConversationService", "LinkPreviewService", "LinkifyService", "decls", "vars", "consts", "template", "rf", "ctx", "PlagiarismCaseInstructorDetailViewComponent_Conditional_0_Template", "TranslateDirective", "PlagiarismCaseVerdictComponent", "FaIconComponent", "RouterLink", "NgbDropdown", "NgbDropdownToggle", "NgbDropdownMenu", "NgbDropdownItem", "PostingThreadComponent", "PostCreateEditModalComponent", "NgbNav", "NgbNavItem", "NgbNavItemRole", "NgbNavLink", "NgbNavLinkBase", "NgbNavContent", "ConfirmAutofocusButtonComponent", "FormsModule", "DefaultValueAccessor", "NumberValueAccessor", "NgControlStatus", "MaxLengthValidator", "MinValidator", "MaxValidator", "NgModel", "NgbNavOutlet", "PlagiarismCaseReviewComponent", "styles"]
}
