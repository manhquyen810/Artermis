{
  "version": 3,
  "sources": ["src/main/webapp/app/exercises/shared/team/team-participate/team-students-list.component.ts", "src/main/webapp/app/exercises/shared/team/team-participate/team-students-list.component.html"],
  "sourcesContent": ["import { Component, Input } from '@angular/core';\r\nimport { User } from 'app/core/user/user.model';\r\nimport { RouterLink } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'jhi-team-students-list',\r\n    templateUrl: './team-students-list.component.html',\r\n    styleUrls: ['./team-students-list.component.scss'],\r\n    imports: [RouterLink],\r\n})\r\nexport class TeamStudentsListComponent {\r\n    @Input() students: User[];\r\n    @Input() errorStudentLogins: string[] = [];\r\n    @Input() renderLinks = false;\r\n    @Input() withRegistrationNumber = false;\r\n    @Input() errorStudentRegistrationNumbers: string[] = [];\r\n\r\n    hasError(student: User) {\r\n        return (\r\n            (student.login && this.errorStudentLogins.includes(student.login)) ||\r\n            (this.withRegistrationNumber && student.visibleRegistrationNumber && this.errorStudentRegistrationNumbers.includes(student.visibleRegistrationNumber))\r\n        );\r\n    }\r\n}\r\n", "<ul class=\"list-group list-group-horizontal student-group\">\r\n    @for (student of students; track student) {\r\n        <li class=\"list-group-item student-group-item\" [class.has-error]=\"hasError(student)\">\r\n            @if (renderLinks) {\r\n                <a [routerLink]=\"['/admin', 'user-management', student.login]\">{{ student.name }} </a>\r\n            }\r\n            @if (!renderLinks) {\r\n                <span\r\n                    >{{ student.name }}\r\n                    @if (student.login) {\r\n                        <span>({{ student.login }})</span>\r\n                    }\r\n                    @if (withRegistrationNumber && student.visibleRegistrationNumber) {\r\n                        <span>({{ student.visibleRegistrationNumber }})</span>\r\n                    }\r\n                </span>\r\n            }\r\n        </li>\r\n    }\r\n</ul>\r\n"],
  "mappings": "kQCIgBA,EAAA,EAAA;iBAAA,EAAAC,EAAA,EAAA,IAAA,CAAA,EAA+DD,EAAA,CAAA,EAAmBE,EAAA,EACtFF,EAAA,EAAA;aAAA,4BADOG,EAAA,EAAAC,EAAA,aAAAC,EAAA,EAAAC,EAAAC,EAAAC,KAAA,CAAA,EAA4DL,EAAA,EAAAM,EAAA,GAAAF,EAAAG,KAAA,GAAA,4BAMvDV,EAAA,EAAA;yBAAA,EAAAC,EAAA,EAAA,MAAA,EAAMD,EAAA,CAAA,EAAqBE,EAAA,EAC/BF,EAAA,EAAA;qBAAA,6BADUG,EAAA,CAAA,EAAAM,EAAA,IAAAF,EAAAC,MAAA,GAAA,4BAGNR,EAAA,EAAA;yBAAA,EAAAC,EAAA,EAAA,MAAA,EAAMD,EAAA,CAAA,EAAyCE,EAAA,EACnDF,EAAA,EAAA;qBAAA,6BADUG,EAAA,CAAA,EAAAM,EAAA,IAAAF,EAAAI,0BAAA,GAAA,4BANdX,EAAA,EAAA;iBAAA,EAAAC,EAAA,EAAA,MAAA,EACKD,EAAA,CAAA,EACDY,EAAA,EAAAC,EAAA,EAAA,CAAA,EAAqB,EAAAC,EAAA,EAAA,CAAA,EAMzBZ,EAAA,EACJF,EAAA,EAAA;aAAA,kCARSG,EAAA,CAAA,EAAAM,EAAA,GAAAF,EAAAG,KAAA;qBAAA,EACDP,EAAA,EAAAY,EAAAR,EAAAC,MAAA,EAAA,EAAA,EAGAL,EAAA,EAAAY,EAAAC,EAAAC,wBAAAV,EAAAI,0BAAA,EAAA,EAAA,4BAVZX,EAAA,EAAA;SAAA,EAAAC,EAAA,EAAA,KAAA,CAAA,EACID,EAAA,EAAA;aAAA,EAAAY,EAAA,EAAAM,EAAA,EAAA,CAAA,EAAmB,EAAAC,EAAA,EAAA,CAAA,EAcvBjB,EAAA,EACJF,EAAA,EAAA;KAAA,gCAhBmDG,EAAA,EAAAiB,EAAA,YAAAJ,EAAAK,SAAAd,CAAA,CAAA,EAC3CJ,EAAA,CAAA,EAAAY,EAAAC,EAAAM,YAAA,EAAA,EAAA,EAGAnB,EAAA,EAAAY,EAAAC,EAAAM,YAAA,GAAA,CAAA,GDIZ,IAAaC,GAAyB,IAAA,CAAhC,MAAOA,CAAyB,CACzBC,SACAC,mBAA+B,CAAA,EAC/BH,YAAc,GACdL,uBAAyB,GACzBS,gCAA4C,CAAA,EAErDL,SAASM,EAAa,CAClB,OACKA,EAAQnB,OAAS,KAAKiB,mBAAmBG,SAASD,EAAQnB,KAAK,GAC/D,KAAKS,wBAA0BU,EAAQhB,2BAA6B,KAAKe,gCAAgCE,SAASD,EAAQhB,yBAAyB,CAE5J,4CAZSY,EAAyB,2BAAzBA,EAAyBM,UAAA,CAAA,CAAA,wBAAA,CAAA,EAAAC,OAAA,CAAAN,SAAA,WAAAC,mBAAA,qBAAAH,YAAA,cAAAL,uBAAA,yBAAAS,gCAAA,iCAAA,EAAAK,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,aAAA,wBAAA,eAAA,EAAA,CAAA,EAAA,kBAAA,oBAAA,EAAA,CAAA,EAAA,YAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,ICVtClC,EAAA,EAAA,KAAA,CAAA,EACID,EAAA,EAAA;KAAA,EAAAqC,EAAA,EAAAC,EAAA,EAAA,EAAA,KAAA,KAAAC,CAAA,EAkBJrC,EAAA,EACAF,EAAA,EAAA;CAAA,SAnBIG,EAAA,CAAA,EAAAqC,EAAAJ,EAAAZ,QAAA,kBDOUiB,CAAU,EAAAC,OAAA,CAAA,4uBAAA,CAAA,CAAA,SAEXnB,CAAyB,GAAA",
  "names": ["\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "\u0275\u0275pureFunction1", "_c0", "student_r1", "login", "\u0275\u0275textInterpolate1", "name", "visibleRegistrationNumber", "\u0275\u0275template", "TeamStudentsListComponent_For_3_Conditional_4_Conditional_3_Template", "TeamStudentsListComponent_For_3_Conditional_4_Conditional_4_Template", "\u0275\u0275conditional", "ctx_r1", "withRegistrationNumber", "TeamStudentsListComponent_For_3_Conditional_3_Template", "TeamStudentsListComponent_For_3_Conditional_4_Template", "\u0275\u0275classProp", "hasError", "renderLinks", "TeamStudentsListComponent", "students", "errorStudentLogins", "errorStudentRegistrationNumbers", "student", "includes", "selectors", "inputs", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275repeaterCreate", "TeamStudentsListComponent_For_3_Template", "\u0275\u0275repeaterTrackByIdentity", "\u0275\u0275repeater", "RouterLink", "styles"]
}
