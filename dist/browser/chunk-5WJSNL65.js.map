{
  "version": 3,
  "sources": ["src/main/webapp/app/shared/score-display/score-display.component.ts", "src/main/webapp/app/shared/score-display/score-display.component.html"],
  "sourcesContent": ["import { Component, Input, OnChanges } from '@angular/core';\r\nimport { roundScorePercentSpecifiedByCourseSettings, roundValueSpecifiedByCourseSettings } from 'app/shared/util/utils';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { TranslateDirective } from '../language/translate.directive';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ArtemisTranslatePipe } from '../pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-score-display',\r\n    templateUrl: './score-display.component.html',\r\n    styleUrls: ['./score-display.component.scss'],\r\n    imports: [TranslateDirective, FaIconComponent, NgbTooltip, ArtemisTranslatePipe],\r\n})\r\nexport class ScoreDisplayComponent implements OnChanges {\r\n    @Input() maxBonusPoints = 0;\r\n    @Input() maxPoints: number;\r\n    @Input() score: number;\r\n    @Input() course?: Course;\r\n    bonusPoints?: number;\r\n    maxPointsWithBonus?: number;\r\n    maxPercentage?: number;\r\n\r\n    // Icons\r\n    faQuestionCircle = faQuestionCircle;\r\n\r\n    /**\r\n     * Calculate the bonus points just for display reasons\r\n     */\r\n    ngOnChanges() {\r\n        if (this.maxPoints != undefined && this.maxBonusPoints > 0) {\r\n            if (this.score > this.maxPoints) {\r\n                this.bonusPoints = roundValueSpecifiedByCourseSettings(this.score - this.maxPoints, this.course);\r\n            } else {\r\n                this.bonusPoints = undefined;\r\n            }\r\n            this.maxPointsWithBonus = this.maxPoints + this.maxBonusPoints;\r\n            this.maxPercentage = roundScorePercentSpecifiedByCourseSettings(this.maxPointsWithBonus / this.maxPoints, this.course);\r\n        } else {\r\n            this.bonusPoints = undefined;\r\n            this.maxPointsWithBonus = undefined;\r\n            this.maxPercentage = undefined;\r\n        }\r\n        this.score = roundValueSpecifiedByCourseSettings(this.score, this.course);\r\n    }\r\n}\r\n", "<div class=\"display-container\">\r\n    <span>{{ score || 0 }}&nbsp;</span>\r\n    @if (maxPoints) {\r\n        <span>/&nbsp;{{ maxPoints }}&nbsp;</span>\r\n    }\r\n    <span jhiTranslate=\"artemisApp.modelingAssessment.points\"></span>\r\n    @if (bonusPoints) {\r\n        <span>(Bonus:&nbsp;{{ bonusPoints }})&nbsp;</span>\r\n    }\r\n    @if (maxBonusPoints) {\r\n        <fa-icon\r\n            [icon]=\"faQuestionCircle\"\r\n            placement=\"bottom auto\"\r\n            ngbTooltip=\"{{\r\n                'artemisApp.assessment.dashboard.bonusPointExplanation'\r\n                    | artemisTranslate: { maxPoints: maxPoints, maxBonusPoints: maxBonusPoints, maxPointsWithBonus: maxPointsWithBonus, maxPercentage: maxPercentage }\r\n            }}\"\r\n        />\r\n    }\r\n</div>\r\n"],
  "mappings": "ygBCGQA,EAAA,EAAA;SAAA,EAAAC,EAAA,EAAA,MAAA,EAAMD,EAAA,CAAA,EAA4BE,EAAA,EACtCF,EAAA,EAAA;KAAA,kBADUG,EAAA,CAAA,EAAAC,EAAA,QAAAC,EAAAC,UAAA,MAAA,4BAINN,EAAA,EAAA;SAAA,EAAAC,EAAA,EAAA,MAAA,EAAMD,EAAA,CAAA,EAAqCE,EAAA,EAC/CF,EAAA,EAAA;KAAA,kBADUG,EAAA,CAAA,EAAAC,EAAA,cAAAC,EAAAE,YAAA,OAAA,4BAGNP,EAAA,EAAA;SAAA,EAAAQ,EAAA,EAAA,UAAA,CAAA,0BAQJR,EAAA,EAAA;KAAA,kBALQG,EAAA,EAAAM,EAAA,aAAAC,EAAA,EAAA,EAAA,wDAAAC,EAAA,EAAAC,EAAAP,EAAAC,UAAAD,EAAAQ,eAAAR,EAAAS,mBAAAT,EAAAU,aAAA,CAAA,CAAA,EAFAC,EAAA,OAAAX,EAAAY,gBAAA,GDIZ,IAAaC,GAAqB,IAAA,CAA5B,MAAOA,CAAqB,CACrBL,eAAiB,EACjBP,UACAa,MACAC,OACTb,YACAO,mBACAC,cAGAE,iBAAmBA,EAKnBI,aAAW,CACH,KAAKf,WAAagB,MAAa,KAAKT,eAAiB,GACjD,KAAKM,MAAQ,KAAKb,UAClB,KAAKC,YAAcgB,EAAoC,KAAKJ,MAAQ,KAAKb,UAAW,KAAKc,MAAM,EAE/F,KAAKb,YAAce,OAEvB,KAAKR,mBAAqB,KAAKR,UAAY,KAAKO,eAChD,KAAKE,cAAgBS,EAA2C,KAAKV,mBAAqB,KAAKR,UAAW,KAAKc,MAAM,IAErH,KAAKb,YAAce,OACnB,KAAKR,mBAAqBQ,OAC1B,KAAKP,cAAgBO,QAEzB,KAAKH,MAAQI,EAAoC,KAAKJ,MAAO,KAAKC,MAAM,CAC5E,4CA9BSF,EAAqB,2BAArBA,EAAqBO,UAAA,CAAA,CAAA,mBAAA,CAAA,EAAAC,OAAA,CAAAb,eAAA,iBAAAP,UAAA,YAAAa,MAAA,QAAAC,OAAA,QAAA,EAAAO,SAAA,CAAAC,CAAA,EAAAC,MAAA,GAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,mBAAA,EAAA,CAAA,eAAA,sCAAA,EAAA,CAAA,YAAA,cAAA,EAAA,OAAA,YAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,ICflChC,EAAA,EAAA,MAAA,CAAA,EACID,EAAA,EAAA;KAAA,EAAAC,EAAA,EAAA,MAAA,EAAMD,EAAA,CAAA,EAAsBE,EAAA,EAC5BF,EAAA,EAAA;KAAA,EAAAmC,EAAA,EAAAC,EAAA,EAAA,CAAA,EAGA5B,EAAA,EAAA,OAAA,CAAA,EACAR,EAAA,EAAA;KAAA,EAAAmC,EAAA,EAAAE,EAAA,EAAA,CAAA,EAAmB,EAAAC,EAAA,EAAA,EAAA,EAavBpC,EAAA,EACAF,EAAA,GAAA;CAAA,SAnBUG,EAAA,CAAA,EAAAC,EAAA,GAAA8B,EAAAf,OAAA,EAAA,MAAA,EACNhB,EAAA,CAAA,EAAAoC,EAAAL,EAAA5B,UAAA,EAAA,EAAA,EAIAH,EAAA,CAAA,EAAAoC,EAAAL,EAAA3B,YAAA,EAAA,EAAA,EAGAJ,EAAA,EAAAoC,EAAAL,EAAArB,eAAA,EAAA,EAAA,kBDIU2B,EAAoBC,EAAiBC,EAAYC,CAAoB,EAAAC,OAAA,CAAA,qDAAA,CAAA,CAAA,SAEtE1B,CAAqB,GAAA",
  "names": ["\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275textInterpolate1", "ctx_r0", "maxPoints", "bonusPoints", "\u0275\u0275element", "\u0275\u0275propertyInterpolate", "\u0275\u0275pipeBind2", "\u0275\u0275pureFunction4", "_c0", "maxBonusPoints", "maxPointsWithBonus", "maxPercentage", "\u0275\u0275property", "faQuestionCircle", "ScoreDisplayComponent", "score", "course", "ngOnChanges", "undefined", "roundValueSpecifiedByCourseSettings", "roundScorePercentSpecifiedByCourseSettings", "selectors", "inputs", "features", "\u0275\u0275NgOnChangesFeature", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275template", "ScoreDisplayComponent_Conditional_5_Template", "ScoreDisplayComponent_Conditional_8_Template", "ScoreDisplayComponent_Conditional_9_Template", "\u0275\u0275conditional", "TranslateDirective", "FaIconComponent", "NgbTooltip", "ArtemisTranslatePipe", "styles"]
}
