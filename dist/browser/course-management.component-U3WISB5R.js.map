{
  "version": 3,
  "sources": ["src/main/webapp/app/course/manage/overview/course-management-exercise-row.component.ts", "src/main/webapp/app/course/manage/overview/course-management-exercise-row.component.html", "src/main/webapp/app/course/manage/overview/course-management-overview-statistics.component.ts", "src/main/webapp/app/course/manage/overview/course-management-overview-statistics.component.html", "src/main/webapp/app/course/manage/overview/course-management-card.component.ts", "src/main/webapp/app/course/manage/overview/course-management-card.component.html", "src/main/webapp/app/course/manage/course-management.component.ts", "src/main/webapp/app/course/manage/course-management.component.html"],
  "sourcesContent": ["import { ChangeDetectionStrategy, Component, Input, OnChanges } from '@angular/core';\r\nimport { Exercise, ExerciseType, getIcon, getIconTooltip } from 'app/entities/exercise.model';\r\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { CourseManagementOverviewExerciseStatisticsDTO } from 'app/course/manage/overview/course-management-overview-exercise-statistics-dto.model';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { roundValueSpecifiedByCourseSettings } from 'app/shared/util/utils';\r\nimport { faBook, faExclamationTriangle, faFileSignature, faTable, faTimes, faUsers, faWrench } from '@fortawesome/free-solid-svg-icons';\r\nimport { faCalendarAlt } from '@fortawesome/free-regular-svg-icons';\r\nimport { RouterLink } from '@angular/router';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ExerciseCategoriesComponent } from 'app/shared/exercise-categories/exercise-categories.component';\r\nimport { NgClass } from '@angular/common';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { ProgressBarComponent } from 'app/shared/dashboards/tutor-participation-graph/progress-bar/progress-bar.component';\r\nimport { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\nimport { ArtemisTimeAgoPipe } from 'app/shared/pipes/artemis-time-ago.pipe';\r\n\r\nexport enum ExerciseRowType {\r\n    FUTURE = 'future',\r\n    CURRENT = 'current',\r\n    ASSESSING = 'assessment',\r\n    PAST = 'past',\r\n}\r\n\r\n@Component({\r\n    selector: 'jhi-course-management-exercise-row',\r\n    templateUrl: './course-management-exercise-row.component.html',\r\n    styleUrls: ['course-management-exercise-row.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    imports: [\r\n        RouterLink,\r\n        FaIconComponent,\r\n        NgbTooltip,\r\n        ExerciseCategoriesComponent,\r\n        NgClass,\r\n        TranslateDirective,\r\n        ProgressBarComponent,\r\n        ArtemisDatePipe,\r\n        ArtemisTranslatePipe,\r\n        ArtemisTimeAgoPipe,\r\n    ],\r\n})\r\nexport class CourseManagementExerciseRowComponent implements OnChanges {\r\n    @Input() course: Course;\r\n    @Input() details: Exercise;\r\n    @Input() statistic?: CourseManagementOverviewExerciseStatisticsDTO;\r\n    @Input() rowType: ExerciseRowType;\r\n\r\n    // Expose enums to the template\r\n    exerciseType = ExerciseType;\r\n    exerciseRowType = ExerciseRowType;\r\n    quizStatus = {\r\n        CLOSED: 'CLOSED',\r\n        OPEN_FOR_PRACTICE: 'OPEN_FOR_PRACTICE',\r\n        ACTIVE: 'ACTIVE',\r\n        VISIBLE: 'VISIBLE',\r\n        HIDDEN: 'HIDDEN',\r\n    };\r\n\r\n    JSON = JSON;\r\n\r\n    hasLeftoverAssessments = false;\r\n    averageScoreNumerator: number;\r\n    icon: IconProp;\r\n    iconTooltip: string;\r\n\r\n    private detailsLoaded = false;\r\n    private statisticsLoaded = false;\r\n\r\n    // Icons\r\n    faTimes = faTimes;\r\n    faCalendarAlt = faCalendarAlt;\r\n    faBook = faBook;\r\n    faWrench = faWrench;\r\n    faUsers = faUsers;\r\n    faTable = faTable;\r\n    faExclamationTriangle = faExclamationTriangle;\r\n    faFileSignature = faFileSignature;\r\n\r\n    ngOnChanges() {\r\n        if (this.details && !this.detailsLoaded) {\r\n            this.detailsLoaded = true;\r\n            this.iconTooltip = getIconTooltip(this.details.type);\r\n            this.setIcon(this.details.type);\r\n        }\r\n\r\n        if (!this.statistic || this.statisticsLoaded) {\r\n            return;\r\n        }\r\n\r\n        this.statisticsLoaded = true;\r\n        this.averageScoreNumerator = roundValueSpecifiedByCourseSettings((this.statistic.averageScoreInPercent! * this.statistic.exerciseMaxPoints!) / 100, this.course);\r\n    }\r\n\r\n    setIcon(exerciseType?: ExerciseType) {\r\n        if (exerciseType) {\r\n            this.icon = getIcon(exerciseType);\r\n        }\r\n    }\r\n}\r\n", "<div class=\"course-item\">\r\n    <div class=\"container\">\r\n        <div class=\"exercise-row\">\r\n            <div class=\"details-container\">\r\n                <a class=\"stretched-link\" [routerLink]=\"['/course-management', course.id, details.type + '-exercises', details.id]\"></a>\r\n                <div class=\"row-flex exercise-details-container\">\r\n                    @if (hasLeftoverAssessments) {\r\n                        <div class=\"ms-2 me-1 exercise-details-item\">\r\n                            <fa-icon [icon]=\"faExclamationTriangle\" class=\"text-warning\" placement=\"right auto\" [ngbTooltip]=\"iconTooltip | artemisTranslate\" />\r\n                        </div>\r\n                    }\r\n                    @if (details.teamMode) {\r\n                        <div class=\"ms-2 exercise-details-item\">\r\n                            <fa-icon [icon]=\"faUsers\" placement=\"right auto\" [ngbTooltip]=\"'artemisApp.exercise.isTeamExercise' | artemisTranslate\" />\r\n                        </div>\r\n                    }\r\n                    <div class=\"ms-2 exercise-details-item\">\r\n                        <fa-icon [icon]=\"icon\" placement=\"right auto\" [ngbTooltip]=\"iconTooltip | artemisTranslate\" />\r\n                    </div>\r\n                    <div class=\"item-title-container\">\r\n                        <span class=\"item-title\">{{ details.title }}</span>\r\n                    </div>\r\n                    <jhi-exercise-categories [exercise]=\"details\" [ngClass]=\"'item-category d-flex hide-categories'\" />\r\n                </div>\r\n                <div class=\"row-flex exercise-date-container\">\r\n                    <div [ngClass]=\"!!details.releaseDate ? 'exercise-date' : 'exercise-date exercise-no-date'\">\r\n                        <div class=\"exercise-date-timeline\"></div>\r\n                        <span jhiTranslate=\"artemisApp.course.releaseDate\"></span>\r\n                        @if (!details.releaseDate) {\r\n                            <div>\r\n                                <div class=\"calender-icon-container\">\r\n                                    <div class=\"calender-icon-circle\">\r\n                                        <fa-icon class=\"calender-icon\" [icon]=\"faTimes\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        @if (details.releaseDate) {\r\n                            <div [ngbTooltip]=\"details.releaseDate | artemisDate\">\r\n                                <div class=\"calender-icon-container\">\r\n                                    <div class=\"calender-icon-circle\">\r\n                                        <fa-icon class=\"calender-icon\" [icon]=\"faCalendarAlt\" />\r\n                                    </div>\r\n                                </div>\r\n                                <span>{{ details.releaseDate! | artemisTimeAgo }}</span>\r\n                            </div>\r\n                        }\r\n                        @if (!details.releaseDate) {\r\n                            <div><p></p></div>\r\n                        }\r\n                    </div>\r\n                    <div [ngClass]=\"!!details.dueDate ? 'exercise-date' : 'exercise-date exercise-no-date'\">\r\n                        <div class=\"exercise-date-timeline\"></div>\r\n                        <span jhiTranslate=\"artemisApp.course.dueDate\"></span>\r\n                        @if (!details.dueDate) {\r\n                            <div>\r\n                                <div class=\"calender-icon-container\">\r\n                                    <div class=\"calender-icon-circle\">\r\n                                        <fa-icon class=\"calender-icon\" [icon]=\"faTimes\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        @if (details.dueDate) {\r\n                            <div [ngbTooltip]=\"details.dueDate | artemisDate\">\r\n                                <div class=\"calender-icon-container\">\r\n                                    <div class=\"calender-icon-circle\">\r\n                                        <fa-icon class=\"calender-icon\" [icon]=\"faCalendarAlt\" />\r\n                                    </div>\r\n                                </div>\r\n                                <span>{{ details.dueDate! | artemisTimeAgo }}</span>\r\n                            </div>\r\n                        }\r\n                        @if (!details.dueDate) {\r\n                            <div><p></p></div>\r\n                        }\r\n                    </div>\r\n                    <div [ngClass]=\"!!details.assessmentDueDate ? 'exercise-date' : 'exercise-date exercise-no-date'\">\r\n                        <div class=\"exercise-date-timeline\"></div>\r\n                        <span jhiTranslate=\"artemisApp.course.assessmentDueDate\"></span>\r\n                        @if (!details.assessmentDueDate) {\r\n                            <div>\r\n                                <div class=\"calender-icon-container\">\r\n                                    <div class=\"calender-icon-circle\">\r\n                                        <fa-icon class=\"calender-icon\" [icon]=\"faTimes\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        @if (details.assessmentDueDate) {\r\n                            <div [ngbTooltip]=\"details.assessmentDueDate | artemisDate\">\r\n                                <div class=\"calender-icon-container\">\r\n                                    <div class=\"calender-icon-circle\">\r\n                                        <fa-icon class=\"calender-icon\" [icon]=\"faCalendarAlt\" />\r\n                                    </div>\r\n                                </div>\r\n                                <span>{{ details.assessmentDueDate! | artemisTimeAgo }}</span>\r\n                            </div>\r\n                        }\r\n                        @if (!details.assessmentDueDate) {\r\n                            <div><p></p></div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div class=\"row-flex exercise-score-container\">\r\n                    @if (statistic && rowType === exerciseRowType.CURRENT) {\r\n                        <div class=\"exercise-score\">\r\n                            <span jhiTranslate=\"artemisApp.course.participations\"></span>\r\n                            <jhi-progress-bar\r\n                                [tooltip]=\"'artemisApp.course.participations' | artemisTranslate\"\r\n                                [percentage]=\"statistic.participationRateInPercent || 0\"\r\n                                [numerator]=\"statistic.noOfParticipatingStudentsOrTeams || 0\"\r\n                                [denominator]=\"(details.teamMode ? statistic.noOfTeamsInCourse : statistic.noOfStudentsInCourse) || 0\"\r\n                            />\r\n                        </div>\r\n                    }\r\n                    @if (statistic && rowType === exerciseRowType.ASSESSING) {\r\n                        <div class=\"exercise-score\">\r\n                            <span jhiTranslate=\"artemisApp.course.assessmentProgress\"></span>\r\n                            <jhi-progress-bar\r\n                                [tooltip]=\"'artemisApp.course.assessmentProgress' | artemisTranslate\"\r\n                                [percentage]=\"statistic.noOfAssessmentsDoneInPercent || 0\"\r\n                                [numerator]=\"statistic.noOfRatedAssessments || 0\"\r\n                                [denominator]=\"statistic.noOfSubmissionsInTime || 0\"\r\n                            />\r\n                        </div>\r\n                    }\r\n                    @if (statistic && rowType === exerciseRowType.PAST) {\r\n                        <div class=\"exercise-score\">\r\n                            <span jhiTranslate=\"artemisApp.course.averageScore\"></span>\r\n                            <jhi-progress-bar\r\n                                [tooltip]=\"'artemisApp.course.averageScore' | artemisTranslate\"\r\n                                [percentage]=\"statistic.averageScoreInPercent || 0\"\r\n                                [numerator]=\"averageScoreNumerator\"\r\n                                [denominator]=\"statistic.exerciseMaxPoints || 0\"\r\n                            />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div class=\"row-flex button-row\">\r\n                @if (course.isAtLeastEditor && (details.type !== exerciseType.QUIZ || rowType === exerciseRowType.FUTURE)) {\r\n                    <a\r\n                        [routerLink]=\"['/course-management', course.id, details.type + '-exercises', details.id, 'edit']\"\r\n                        class=\"btn btn-warning me-1 mb-1\"\r\n                        [ngbTooltip]=\"'entity.action.edit' | artemisTranslate\"\r\n                        ><fa-icon [icon]=\"faWrench\"\r\n                    /></a>\r\n                }\r\n                @if (course.isAtLeastInstructor && details.type === exerciseType.QUIZ && rowType === exerciseRowType.PAST) {\r\n                    <a\r\n                        [routerLink]=\"['/course-management', course.id, details.type + '-exercises', details.id, 're-evaluate']\"\r\n                        class=\"btn btn-warning me-1 mb-1\"\r\n                        [ngbTooltip]=\"'entity.action.re-evaluate' | artemisTranslate\"\r\n                        ><fa-icon [icon]=\"faWrench\"\r\n                    /></a>\r\n                }\r\n                @if (course.isAtLeastTutor) {\r\n                    <a\r\n                        [routerLink]=\"['/course-management', course.id, details.type + '-exercises', details.id, 'scores']\"\r\n                        class=\"btn btn-info me-1 mb-1\"\r\n                        [ngbTooltip]=\"'entity.action.scores' | artemisTranslate\"\r\n                        ><fa-icon [icon]=\"faTable\"\r\n                    /></a>\r\n                }\r\n                @if (course.isAtLeastEditor && details.type === exerciseType.PROGRAMMING) {\r\n                    <a\r\n                        [routerLink]=\"['/course-management', course.id, 'programming-exercises', details.id, 'grading', 'test-cases']\"\r\n                        class=\"btn btn-warning me-1 mb-1\"\r\n                        [ngbTooltip]=\"'artemisApp.programmingExercise.configureGrading.shortTitle' | artemisTranslate\"\r\n                        ><fa-icon class=\"grading-icon\" [icon]=\"faFileSignature\"\r\n                    /></a>\r\n                }\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n", "import { Component, Input, OnChanges, OnInit, inject } from '@angular/core';\r\nimport { GraphColors, Graphs } from 'app/entities/statistics.model';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Color, LineChartModule, ScaleType } from '@swimlane/ngx-charts';\r\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\r\nimport { Course } from 'app/entities/course.model';\r\nimport * as shape from 'd3-shape';\r\nimport { ActiveStudentsChart } from 'app/shared/chart/active-students-chart';\r\nimport { RouterLink } from '@angular/router';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { HelpIconComponent } from 'app/shared/components/help-icon.component';\r\nimport { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-course-management-overview-statistics',\r\n    templateUrl: './course-management-overview-statistics.component.html',\r\n    styleUrls: ['./course-management-overview-statistics.component.scss', '../detail/course-detail-line-chart.component.scss'],\r\n    imports: [RouterLink, TranslateDirective, HelpIconComponent, LineChartModule, ArtemisDatePipe],\r\n})\r\nexport class CourseManagementOverviewStatisticsComponent extends ActiveStudentsChart implements OnInit, OnChanges {\r\n    private translateService = inject(TranslateService);\r\n\r\n    @Input()\r\n    amountOfStudentsInCourse: number;\r\n\r\n    @Input()\r\n    initialStats: number[] | undefined;\r\n    @Input()\r\n    course: Course;\r\n\r\n    graphType: Graphs = Graphs.ACTIVE_STUDENTS;\r\n\r\n    // Data\r\n    lineChartLabels: string[] = [];\r\n\r\n    // ngx-data\r\n    ngxData: any[] = [];\r\n    chartColor: Color = {\r\n        name: 'vivid',\r\n        selectable: true,\r\n        group: ScaleType.Ordinal,\r\n        domain: [GraphColors.BLACK],\r\n    };\r\n    curve: any = shape.curveMonotoneX;\r\n\r\n    // Icons\r\n    faSpinner = faSpinner;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.translateService.onLangChange.subscribe(() => {\r\n            this.updateTranslation();\r\n        });\r\n        this.determineDisplayedPeriod(this.course, 4);\r\n        this.createChartLabels(this.currentOffsetToEndDate);\r\n        this.createChartData();\r\n    }\r\n\r\n    ngOnChanges() {\r\n        if (this.initialStats) {\r\n            this.createChartData();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates chart in order to visualize data provided by the inputs\r\n     */\r\n    private createChartData(): void {\r\n        const set: any[] = [];\r\n        this.ngxData = [];\r\n        if (this.amountOfStudentsInCourse > 0 && !!this.initialStats) {\r\n            this.initialStats.forEach((absoluteValue, index) => {\r\n                set.push({\r\n                    name: this.lineChartLabels[index],\r\n                    value: (absoluteValue * 100) / this.amountOfStudentsInCourse,\r\n                    absoluteValue,\r\n                });\r\n            });\r\n        } else {\r\n            this.lineChartLabels.forEach((label) => {\r\n                set.push({ name: label, value: 0, absoluteValue: 0 });\r\n            });\r\n        }\r\n        this.ngxData.push({ name: 'active students', series: set });\r\n    }\r\n\r\n    /**\r\n     * Appends a percentage sign to every tick on the y-axis\r\n     * @param value the default tick\r\n     */\r\n    formatYAxis(value: any): string {\r\n        return value.toLocaleString() + ' %';\r\n    }\r\n\r\n    private createChartLabels(weekOffset: number): void {\r\n        for (let i = 0; i < this.currentSpanSize; i++) {\r\n            let translatePath: string;\r\n            const week = Math.min(this.currentSpanSize - 1, 3) - i + weekOffset;\r\n            switch (week) {\r\n                case 0: {\r\n                    translatePath = 'overview.currentWeek';\r\n                    break;\r\n                }\r\n                case 1: {\r\n                    translatePath = 'overview.weekAgo';\r\n                    break;\r\n                }\r\n                default: {\r\n                    translatePath = 'overview.weeksAgo';\r\n                }\r\n            }\r\n            this.lineChartLabels[i] = this.translateService.instant(translatePath, { amount: week });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Auxiliary method that ensures that the chart is translated directly when user selects a new language\r\n     */\r\n    private updateTranslation(): void {\r\n        this.createChartLabels(this.currentOffsetToEndDate);\r\n        this.createChartData();\r\n    }\r\n}\r\n", "<div class=\"row justify-content-center chart-title-line\">\r\n    <div class=\"d-inline-flex flex-nowrap justify-content-center align-items-center\">\r\n        <a [routerLink]=\"['/course-management', course.id, 'course-statistics']\" class=\"text-center\">\r\n            <h4 jhiTranslate=\"artemisApp.courseStatistics.activeStudents\"></h4>\r\n        </a>\r\n        <jhi-help-icon class=\"chart-explanation-tooltip headline-margin\" placement=\"right auto\" text=\"artemisApp.courseStatistics.activeStudentsExplanation\" />\r\n    </div>\r\n</div>\r\n@if (startDateAlreadyPassed) {\r\n    <div #containerRef class=\"col-md-12 text-center\">\r\n        <ngx-charts-line-chart\r\n            [view]=\"[containerRef.offsetWidth, 250]\"\r\n            [results]=\"ngxData\"\r\n            [scheme]=\"chartColor\"\r\n            [xAxis]=\"true\"\r\n            [yAxis]=\"true\"\r\n            [yScaleMin]=\"0\"\r\n            [yScaleMax]=\"100\"\r\n            [yAxisTickFormatting]=\"formatYAxis\"\r\n            [rotateXAxisTicks]=\"false\"\r\n            [curve]=\"curve\"\r\n        >\r\n            <ng-template #tooltipTemplate let-model=\"model\">\r\n                <b jhiTranslate=\"artemisApp.course.activeStudents\" [translateValues]=\"{ students: model.absoluteValue }\"></b>\r\n                <br />\r\n                <span>{{ model.name }}</span>\r\n            </ng-template>\r\n            <ng-template #seriesTooltipTemplate let-model=\"model\">\r\n                @if (model.length) {\r\n                    <span> {{ model[0].name }}: {{ model[0].absoluteValue }} </span>\r\n                }\r\n            </ng-template>\r\n        </ngx-charts-line-chart>\r\n    </div>\r\n} @else {\r\n    <div class=\"col-md-12 mt-2 text-center\">\r\n        <h4 jhiTranslate=\"artemisApp.course.notStartedYet\"></h4>\r\n        <h3>{{ course.startDate | artemisDate }}</h3>\r\n    </div>\r\n}\r\n", "import { ChangeDetectionStrategy, Component, Input, OnChanges, OnInit, inject } from '@angular/core';\r\nimport { ARTEMIS_DEFAULT_COLOR, PROFILE_ATLAS } from 'app/app.constants';\r\nimport { Exercise, ExerciseType } from 'app/entities/exercise.model';\r\nimport dayjs from 'dayjs/esm';\r\nimport { ExerciseRowType } from 'app/course/manage/overview/course-management-exercise-row.component';\r\nimport { CourseManagementOverviewExerciseStatisticsDTO } from 'app/course/manage/overview/course-management-overview-exercise-statistics-dto.model';\r\nimport { CourseManagementOverviewStatisticsDto } from 'app/course/manage/overview/course-management-overview-statistics-dto.model';\r\nimport { Course, isCommunicationEnabled, isMessagingEnabled } from 'app/entities/course.model';\r\nimport { CachingStrategy } from 'app/shared/image/secured-image.component';\r\nimport {\r\n    faAngleDown,\r\n    faAngleUp,\r\n    faChartBar,\r\n    faClipboard,\r\n    faComments,\r\n    faFilePdf,\r\n    faFlag,\r\n    faGraduationCap,\r\n    faListAlt,\r\n    faNetworkWired,\r\n    faPersonChalkboard,\r\n    faQuestion,\r\n    faSpinner,\r\n    faTable,\r\n    faUserCheck,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { FeatureToggle } from 'app/shared/feature-toggle/feature-toggle.service';\r\nimport { ProfileService } from 'app/shared/layouts/profiles/profile.service';\r\nimport { NgStyle } from '@angular/common';\r\nimport { RouterLink } from '@angular/router';\r\nimport { SecuredImageComponent } from 'app/shared/image/secured-image.component';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { CourseManagementExerciseRowComponent } from './course-management-exercise-row.component';\r\nimport { CourseManagementOverviewStatisticsComponent } from './course-management-overview-statistics.component';\r\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FeatureToggleLinkDirective } from 'app/shared/feature-toggle/feature-toggle-link.directive';\r\nimport { FeatureToggleHideDirective } from 'app/shared/feature-toggle/feature-toggle-hide.directive';\r\nimport { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\nimport { FeatureOverlayComponent } from 'app/shared/components/feature-overlay/feature-overlay.component';\r\nimport { getContrastingTextColor } from 'app/utils/color.utils';\r\n\r\n@Component({\r\n    selector: 'jhi-course-management-card',\r\n    templateUrl: './course-management-card.component.html',\r\n    styleUrls: ['course-management-card.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    imports: [\r\n        NgStyle,\r\n        RouterLink,\r\n        SecuredImageComponent,\r\n        TranslateDirective,\r\n        FaIconComponent,\r\n        CourseManagementExerciseRowComponent,\r\n        CourseManagementOverviewStatisticsComponent,\r\n        NgbTooltip,\r\n        FeatureToggleLinkDirective,\r\n        FeatureToggleHideDirective,\r\n        ArtemisDatePipe,\r\n        ArtemisTranslatePipe,\r\n        FeatureOverlayComponent,\r\n    ],\r\n})\r\nexport class CourseManagementCardComponent implements OnInit, OnChanges {\r\n    readonly ARTEMIS_DEFAULT_COLOR = ARTEMIS_DEFAULT_COLOR;\r\n\r\n    private readonly profileService = inject(ProfileService);\r\n\r\n    CachingStrategy = CachingStrategy;\r\n    // TODO: can we merge the 3 courses here?\r\n    @Input() course: Course;\r\n    @Input() courseStatistics?: CourseManagementOverviewStatisticsDto;\r\n    @Input() courseWithExercises: Course | undefined;\r\n    @Input() courseWithUsers: Course | undefined;\r\n    @Input() isGuidedTour: boolean;\r\n\r\n    atlasEnabled = false;\r\n\r\n    statisticsPerExercise = new Map<number, CourseManagementOverviewExerciseStatisticsDTO>();\r\n\r\n    futureExercises: Exercise[];\r\n    currentExercises: Exercise[];\r\n    exercisesInAssessment: Exercise[];\r\n    pastExercises: Exercise[];\r\n    pastExerciseCount: number;\r\n\r\n    showFutureExercises = false;\r\n    showCurrentExercises = true;\r\n    showExercisesInAssessment = true;\r\n    showPastExercises = false;\r\n\r\n    // Expose enums to the template\r\n    exerciseType = ExerciseType;\r\n    exerciseRowType = ExerciseRowType;\r\n\r\n    private statisticsSorted = false;\r\n    private exercisesSorted = false;\r\n\r\n    // Icons\r\n    faTable = faTable;\r\n    faUserCheck = faUserCheck;\r\n    faFlag = faFlag;\r\n    faNetworkWired = faNetworkWired;\r\n    faListAlt = faListAlt;\r\n    faChartBar = faChartBar;\r\n    faFilePdf = faFilePdf;\r\n    faComments = faComments;\r\n    faClipboard = faClipboard;\r\n    faGraduationCap = faGraduationCap;\r\n    faAngleDown = faAngleDown;\r\n    faAngleUp = faAngleUp;\r\n    faPersonChalkboard = faPersonChalkboard;\r\n    faSpinner = faSpinner;\r\n    faQuestion = faQuestion;\r\n\r\n    courseColor: string;\r\n    contentColor: string;\r\n\r\n    readonly FeatureToggle = FeatureToggle;\r\n\r\n    readonly isCommunicationEnabled = isCommunicationEnabled;\r\n    readonly isMessagingEnabled = isMessagingEnabled;\r\n\r\n    ngOnInit() {\r\n        this.profileService.getProfileInfo().subscribe((profileInfo) => (this.atlasEnabled = profileInfo.activeProfiles.includes(PROFILE_ATLAS)));\r\n    }\r\n\r\n    ngOnChanges() {\r\n        const targetCourseColor = this.course.color || this.ARTEMIS_DEFAULT_COLOR;\r\n        if (this.courseColor !== targetCourseColor) {\r\n            this.courseColor = targetCourseColor;\r\n            this.contentColor = getContrastingTextColor(this.courseColor);\r\n        }\r\n\r\n        // Only sort one time once loaded\r\n        if (!this.statisticsSorted && this.courseStatistics && this.courseStatistics.exerciseDTOS?.length > 0) {\r\n            this.statisticsSorted = true;\r\n            this.courseStatistics.exerciseDTOS.forEach((dto) => {\r\n                if (dto.exerciseId !== undefined) {\r\n                    this.statisticsPerExercise.set(dto.exerciseId, dto);\r\n                }\r\n            });\r\n        }\r\n\r\n        // Only sort one time once loaded\r\n        if (this.exercisesSorted || !this.courseWithExercises || !this.courseWithExercises.exercises) {\r\n            return;\r\n        }\r\n\r\n        this.sortExercises(this.courseWithExercises.exercises);\r\n\r\n        // Directly show future exercises if there are no current exercises for the students or to assess\r\n        this.showFutureExercises = this.currentExercises?.length === 0 && this.exercisesInAssessment?.length === 0;\r\n\r\n        // If there are no future exercises either, show the past exercises by default\r\n        this.showPastExercises = this.futureExercises?.length === 0 && this.currentExercises?.length === 0 && this.exercisesInAssessment?.length === 0;\r\n    }\r\n\r\n    /**\r\n     * Sorts the given exercises into the future, current, in assessment and past exercise categories\r\n     * - Future exercises are the first five exercises to be released soon which have a release date not longer than seven days in the future\r\n     * - Current exercises are all exercises with a past release date and a due date in the future\r\n     * - Exercises in assessment are all exercises with a due date in the past and an assessment due date in the future\r\n     * - Past exercises are all exercises with an assessment due date (or due date if there is no assessment due date) not longer than seven days in the past\r\n     *\r\n     * @param exercises the exercises to sort into future, current, in assessment and past exercise categories\r\n     */\r\n    private sortExercises(exercises: Exercise[]): void {\r\n        this.exercisesSorted = true;\r\n\r\n        const inSevenDays = dayjs().add(7, 'days').endOf('day');\r\n\r\n        this.futureExercises = exercises\r\n            .filter((exercise) => exercise.releaseDate && exercise.releaseDate > dayjs() && exercise.releaseDate <= inSevenDays)\r\n            .sort((exerciseA, exerciseB) => {\r\n                return exerciseA.releaseDate!.valueOf() - exerciseB.releaseDate!.valueOf();\r\n            })\r\n            .slice(0, 5);\r\n\r\n        this.currentExercises = exercises.filter(\r\n            (exercise) =>\r\n                (exercise.releaseDate && exercise.releaseDate <= dayjs() && (!exercise.dueDate || exercise.dueDate > dayjs())) ||\r\n                (!exercise.releaseDate && exercise.dueDate && exercise.dueDate > dayjs()),\r\n        );\r\n\r\n        this.exercisesInAssessment = exercises.filter(\r\n            (exercise) => exercise.dueDate && exercise.dueDate <= dayjs() && exercise.assessmentDueDate && exercise.assessmentDueDate > dayjs(),\r\n        );\r\n\r\n        const allPastExercises = exercises\r\n            .filter(\r\n                (exercise) =>\r\n                    (!exercise.assessmentDueDate && exercise.dueDate && exercise.dueDate <= dayjs()) || (exercise.assessmentDueDate && exercise.assessmentDueDate <= dayjs()),\r\n            )\r\n            .sort((exerciseA, exerciseB) => {\r\n                // Sort by assessment due date (or due date if there is no assessment due date) descending\r\n                // Note: The server side statistic generation uses the same sorting\r\n                return (exerciseB.assessmentDueDate ?? exerciseB.dueDate)!.valueOf() - (exerciseA.assessmentDueDate ?? exerciseA.dueDate)!.valueOf();\r\n            });\r\n\r\n        this.pastExerciseCount = allPastExercises.length;\r\n        this.pastExercises = allPastExercises.slice(0, 5);\r\n    }\r\n}\r\n", "<div class=\"card mb-4 hover-effect\" id=\"course-{{ course.id }}\">\r\n    <div id=\"course-card-header\" class=\"card-heading\" [ngStyle]=\"{ '--background-color-for-hover': courseColor, '--content-color': contentColor }\">\r\n        <a class=\"stretched-link\" [routerLink]=\"['/course-management', course.id]\"></a>\r\n        <div class=\"card-header-left\">\r\n            @if (course.courseIcon) {\r\n                <jhi-secured-image class=\"header-item\" [cachingStrategy]=\"CachingStrategy.LOCAL_STORAGE\" [src]=\"course.courseIcon\" />\r\n            }\r\n            <div class=\"card-date\">\r\n                @if (course.startDate && course.endDate) {\r\n                    <div>{{ course.startDate | artemisDate: 'long-date' }} - {{ course.endDate | artemisDate: 'long-date' }}</div>\r\n                }\r\n                @if (course.startDate && !course.endDate) {\r\n                    <div><span jhiTranslate=\"artemisApp.course.startDate\"></span>: {{ course.startDate | artemisDate: 'long-date' }}</div>\r\n                }\r\n                @if (!course.startDate && course.endDate) {\r\n                    <div><span jhiTranslate=\"artemisApp.course.endDate\"></span>: {{ course.endDate | artemisDate: 'long-date' }}</div>\r\n                }\r\n            </div>\r\n        </div>\r\n        <div class=\"container container-padding title-container\" [routerLink]=\"['/course-management', course.id]\">\r\n            <h3 class=\"card-title text-center fw-medium course-title\">{{ course.title }} ({{ course.shortName }})</h3>\r\n            @if (course.description && course.description !== '') {\r\n                <div class=\"text-center course-description\">\r\n                    {{ course.description }}\r\n                </div>\r\n            }\r\n        </div>\r\n        @if (courseWithUsers && course.isAtLeastInstructor) {\r\n            <div class=\"float-end card-groups\">\r\n                <div>\r\n                    <div id=\"open-student-management-{{ course.id }}\">\r\n                        @if (courseWithUsers.numberOfStudents !== undefined && courseWithUsers.numberOfStudents === 1) {\r\n                            <a [routerLink]=\"['/course-management', course.id, 'groups', 'students']\">\r\n                                {{ courseWithUsers.numberOfStudents }} {{ 'artemisApp.course.student' | artemisTranslate }}\r\n                            </a>\r\n                        }\r\n                        @if (courseWithUsers.numberOfStudents !== undefined && courseWithUsers.numberOfStudents !== 1) {\r\n                            <a [routerLink]=\"['/course-management', course.id, 'groups', 'students']\">\r\n                                {{ courseWithUsers.numberOfStudents }} {{ 'artemisApp.course.students' | artemisTranslate }}\r\n                            </a>\r\n                        }\r\n                        @if (courseWithUsers.numberOfStudents === undefined) {\r\n                            <a [routerLink]=\"['/course-management', course.id, 'groups', 'students']\" jhiTranslate=\"artemisApp.course.students\"></a>\r\n                        }\r\n                    </div>\r\n                    <div>\r\n                        @if (courseWithUsers.numberOfTeachingAssistants !== undefined && courseWithUsers.numberOfTeachingAssistants === 1) {\r\n                            <a [routerLink]=\"['/course-management', course.id, 'groups', 'tutors']\">\r\n                                {{ courseWithUsers.numberOfTeachingAssistants }} {{ 'artemisApp.course.tutor' | artemisTranslate }}\r\n                            </a>\r\n                        }\r\n                        @if (courseWithUsers.numberOfTeachingAssistants !== undefined && courseWithUsers.numberOfTeachingAssistants !== 1) {\r\n                            <a [routerLink]=\"['/course-management', course.id, 'groups', 'tutors']\">\r\n                                {{ courseWithUsers.numberOfTeachingAssistants }} {{ 'artemisApp.course.tutors' | artemisTranslate }}\r\n                            </a>\r\n                        }\r\n                        @if (courseWithUsers.numberOfTeachingAssistants === undefined) {\r\n                            <a [routerLink]=\"['/course-management', course.id, 'groups', 'tutors']\" jhiTranslate=\"artemisApp.course.tutors\"></a>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div>\r\n                        @if (courseWithUsers.numberOfEditors !== undefined && courseWithUsers.numberOfEditors === 1) {\r\n                            <a [routerLink]=\"['/course-management', course.id, 'groups', 'editors']\">\r\n                                {{ courseWithUsers.numberOfEditors }} {{ 'artemisApp.course.editor' | artemisTranslate }}\r\n                            </a>\r\n                        }\r\n                        @if (courseWithUsers.numberOfEditors !== undefined && courseWithUsers.numberOfEditors !== 1) {\r\n                            <a [routerLink]=\"['/course-management', course.id, 'groups', 'editors']\">\r\n                                {{ courseWithUsers.numberOfEditors }} {{ 'artemisApp.course.editors' | artemisTranslate }}\r\n                            </a>\r\n                        }\r\n                        @if (courseWithUsers.numberOfEditors === undefined) {\r\n                            <a [routerLink]=\"['/course-management', course.id, 'groups', 'editors']\" jhiTranslate=\"artemisApp.course.editors\"></a>\r\n                        }\r\n                    </div>\r\n                    <div>\r\n                        @if (courseWithUsers.numberOfInstructors !== undefined && courseWithUsers.numberOfInstructors === 1) {\r\n                            <a [routerLink]=\"['/course-management', course.id, 'groups', 'instructors']\">\r\n                                {{ courseWithUsers.numberOfInstructors }} {{ 'artemisApp.course.instructor' | artemisTranslate }}\r\n                            </a>\r\n                        }\r\n                        @if (courseWithUsers.numberOfInstructors !== undefined && courseWithUsers.numberOfInstructors !== 1) {\r\n                            <a [routerLink]=\"['/course-management', course.id, 'groups', 'instructors']\">\r\n                                {{ courseWithUsers.numberOfInstructors }} {{ 'artemisApp.course.instructors' | artemisTranslate }}\r\n                            </a>\r\n                        }\r\n                        @if (courseWithUsers.numberOfInstructors === undefined) {\r\n                            <a [routerLink]=\"['/course-management', course.id, 'groups', 'instructors']\" jhiTranslate=\"artemisApp.course.instructors\"></a>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        }\r\n    </div>\r\n    <div class=\"container flex-container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-8 section-card p-0\">\r\n                @if (!courseWithExercises) {\r\n                    <div class=\"loading-spinner\">\r\n                        <fa-icon [icon]=\"faSpinner\" animation=\"spin\" />\r\n                    </div>\r\n                }\r\n                @if (courseWithExercises) {\r\n                    <div class=\"section-content px-3 py-1\">\r\n                        @if (futureExercises && futureExercises.length > 0) {\r\n                            <div>\r\n                                <div class=\"control-label\" (click)=\"showFutureExercises = !showFutureExercises\">\r\n                                    <fa-icon class=\"control-icon\" [icon]=\"showFutureExercises ? faAngleDown : faAngleUp\" />\r\n                                    <strong jhiTranslate=\"artemisApp.course.releasedSoon\"></strong>\r\n                                </div>\r\n                                @if (showFutureExercises) {\r\n                                    <div>\r\n                                        @for (exercise of futureExercises; track exercise) {\r\n                                            <jhi-course-management-exercise-row\r\n                                                [course]=\"course\"\r\n                                                [rowType]=\"exerciseRowType.FUTURE\"\r\n                                                [details]=\"exercise\"\r\n                                                [statistic]=\"statisticsPerExercise.get(exercise.id!)\"\r\n                                            />\r\n                                        }\r\n                                    </div>\r\n                                }\r\n                                @if (!showFutureExercises) {\r\n                                    <div class=\"collapsed\"></div>\r\n                                }\r\n                            </div>\r\n                        }\r\n                        @if (currentExercises && currentExercises.length > 0) {\r\n                            <div>\r\n                                <div class=\"control-label\" (click)=\"showCurrentExercises = !showCurrentExercises\">\r\n                                    <fa-icon class=\"control-icon\" [icon]=\"showCurrentExercises ? faAngleDown : faAngleUp\" />\r\n                                    <strong jhiTranslate=\"artemisApp.course.currentWorking\"></strong>\r\n                                </div>\r\n                                @if (showCurrentExercises) {\r\n                                    <div>\r\n                                        @for (exercise of currentExercises; track exercise) {\r\n                                            <jhi-course-management-exercise-row\r\n                                                [course]=\"course\"\r\n                                                [rowType]=\"exerciseRowType.CURRENT\"\r\n                                                [details]=\"exercise\"\r\n                                                [statistic]=\"statisticsPerExercise.get(exercise.id!)\"\r\n                                            />\r\n                                        }\r\n                                    </div>\r\n                                }\r\n                                @if (!showCurrentExercises) {\r\n                                    <div class=\"collapsed\"></div>\r\n                                }\r\n                            </div>\r\n                        }\r\n                        @if (exercisesInAssessment && exercisesInAssessment.length > 0) {\r\n                            <div>\r\n                                <div class=\"control-label\" (click)=\"showExercisesInAssessment = !showExercisesInAssessment\">\r\n                                    <fa-icon class=\"control-icon\" [icon]=\"showExercisesInAssessment ? faAngleDown : faAngleUp\" />\r\n                                    <strong jhiTranslate=\"artemisApp.course.inAssessment\"></strong>\r\n                                </div>\r\n                                @if (showExercisesInAssessment) {\r\n                                    <div>\r\n                                        @for (exercise of exercisesInAssessment; track exercise) {\r\n                                            <jhi-course-management-exercise-row\r\n                                                [course]=\"course\"\r\n                                                [rowType]=\"exerciseRowType.ASSESSING\"\r\n                                                [details]=\"exercise\"\r\n                                                [statistic]=\"statisticsPerExercise.get(exercise.id!)\"\r\n                                            />\r\n                                        }\r\n                                    </div>\r\n                                }\r\n                                @if (!showExercisesInAssessment) {\r\n                                    <div class=\"collapsed\"></div>\r\n                                }\r\n                            </div>\r\n                        }\r\n                        @if (pastExercises && pastExercises.length > 0) {\r\n                            <div>\r\n                                <div class=\"control-label\" (click)=\"showPastExercises = !showPastExercises\">\r\n                                    <fa-icon class=\"control-icon\" [icon]=\"showPastExercises ? faAngleDown : faAngleUp\" />\r\n                                    <strong jhiTranslate=\"artemisApp.course.pastExercises\" [translateValues]=\"{ amount: pastExercises.length, total: pastExerciseCount }\"></strong>\r\n                                </div>\r\n                                @if (showPastExercises) {\r\n                                    <div>\r\n                                        @for (exercise of pastExercises; track exercise) {\r\n                                            <jhi-course-management-exercise-row\r\n                                                [course]=\"course\"\r\n                                                [rowType]=\"exerciseRowType.PAST\"\r\n                                                [details]=\"exercise\"\r\n                                                [statistic]=\"statisticsPerExercise.get(exercise.id!)\"\r\n                                            />\r\n                                        }\r\n                                    </div>\r\n                                }\r\n                                @if (!showPastExercises) {\r\n                                    <div class=\"collapsed\"></div>\r\n                                }\r\n                            </div>\r\n                        }\r\n                        @if ((futureExercises?.length || 0) + (currentExercises?.length || 0) + (exercisesInAssessment?.length || 0) + (pastExercises?.length || 0) === 0) {\r\n                            <div>\r\n                                <h4 class=\"text-center no-exercises mt-3 fw-medium\" jhiTranslate=\"artemisApp.course.noExercises\"></h4>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div class=\"col-4 statistics-card align-center\">\r\n                <div class=\"align-center w-100 h-100\">\r\n                    @if (courseStatistics) {\r\n                        <jhi-course-management-overview-statistics\r\n                            class=\"statistics-chart\"\r\n                            [initialStats]=\"courseStatistics?.activeStudents\"\r\n                            [amountOfStudentsInCourse]=\"!!courseWithUsers && courseWithUsers.numberOfStudents ? courseWithUsers.numberOfStudents : 0\"\r\n                            [course]=\"course\"\r\n                        />\r\n                    }\r\n                    @if (!courseStatistics) {\r\n                        <div class=\"loading-spinner\">\r\n                            <fa-icon [icon]=\"faSpinner\" animation=\"spin\" />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"card-footer\">\r\n        @if (course.isAtLeastTutor) {\r\n            <a\r\n                [routerLink]=\"['/course-management', course.id, 'exams']\"\r\n                class=\"btn btn-primary me-1 mb-1\"\r\n                [ngbTooltip]=\"'entity.action.exams' | artemisTranslate\"\r\n                id=\"course-card-open-exams\"\r\n            >\r\n                <fa-icon [icon]=\"faGraduationCap\" />\r\n                <span class=\"d-none d-xl-inline\" jhiTranslate=\"entity.action.exams\"></span>\r\n            </a>\r\n        }\r\n        @if (course.isAtLeastTutor) {\r\n            <a\r\n                [routerLink]=\"['/course-management', course.id, 'exercises']\"\r\n                [class.guided-tour]=\"isGuidedTour\"\r\n                class=\"btn btn-primary me-1 mb-1\"\r\n                [ngbTooltip]=\"'entity.action.exercise' | artemisTranslate\"\r\n                id=\"course-card-open-exercises\"\r\n            >\r\n                <fa-icon [icon]=\"faListAlt\" />\r\n                <span class=\"d-none d-xl-inline\" jhiTranslate=\"entity.action.exercise\"></span>\r\n            </a>\r\n        }\r\n        @if (course.isAtLeastEditor) {\r\n            <a\r\n                [routerLink]=\"['/course-management', course.id, 'lectures']\"\r\n                class=\"btn btn-primary me-1 mb-1\"\r\n                [ngbTooltip]=\"'entity.action.lecture' | artemisTranslate\"\r\n                id=\"course-card-open-lectures\"\r\n            >\r\n                <fa-icon [icon]=\"faFilePdf\" />\r\n                <span class=\"d-none d-xl-inline\" jhiTranslate=\"entity.action.lecture\"></span>\r\n            </a>\r\n        }\r\n        @if (course.isAtLeastTutor) {\r\n            <a\r\n                [routerLink]=\"['/course-management', course.id, 'course-statistics']\"\r\n                class=\"btn btn-info me-1 mb-1 hidden-if-mobile\"\r\n                [ngbTooltip]=\"'artemisApp.courseStatistics.statistics' | artemisTranslate\"\r\n                id=\"course-card-open-open-statistics\"\r\n            >\r\n                <fa-icon [icon]=\"faChartBar\" />\r\n                <span class=\"d-none d-xl-inline\" jhiTranslate=\"artemisApp.courseStatistics.statistics\"></span>\r\n            </a>\r\n        }\r\n        @if (isCommunicationEnabled(course) && course.isAtLeastTutor) {\r\n            <a\r\n                [routerLink]=\"['/courses', course.id, 'communication']\"\r\n                class=\"btn btn-primary me-1 mb-1\"\r\n                [ngbTooltip]=\"'artemisApp.courseOverview.menu.communication' | artemisTranslate\"\r\n            >\r\n                <fa-icon [icon]=\"faComments\" />\r\n                <span class=\"d-none d-xl-inline\" jhiTranslate=\"artemisApp.metis.communication.label\"></span>\r\n            </a>\r\n        }\r\n        @if (course.timeZone || course.isAtLeastInstructor) {\r\n            <a\r\n                [routerLink]=\"['/course-management', course.id, 'tutorial-groups']\"\r\n                [jhiFeatureToggleLink]=\"FeatureToggle.TutorialGroups\"\r\n                class=\"btn btn-primary me-1 mb-1 hidden-if-mobile\"\r\n                [ngbTooltip]=\"'artemisApp.entities.tutorialGroup.plural' | artemisTranslate\"\r\n                id=\"course-card-open-tutorial-groups\"\r\n            >\r\n                <fa-icon [icon]=\"faPersonChalkboard\" />\r\n                <span [innerHTML]=\"'artemisApp.entities.tutorialGroup.plural' | artemisTranslate\" class=\"d-none d-xl-inline\"></span>\r\n            </a>\r\n        }\r\n        @if (course.isAtLeastInstructor) {\r\n            <jhi-feature-overlay [enabled]=\"atlasEnabled\">\r\n                <a\r\n                    [routerLink]=\"['/course-management', course.id, 'competency-management']\"\r\n                    class=\"btn btn-primary me-1 mb-1 hidden-if-mobile\"\r\n                    [ngbTooltip]=\"'artemisApp.competency.competencyButton' | artemisTranslate\"\r\n                    id=\"course-card-open-competencies\"\r\n                >\r\n                    <fa-icon [icon]=\"faFlag\" />\r\n                    <span [innerHTML]=\"'artemisApp.competency.competencyButton' | artemisTranslate\" class=\"d-none d-xl-inline\"></span>\r\n                </a>\r\n            </jhi-feature-overlay>\r\n        }\r\n        @if (course.isAtLeastInstructor) {\r\n            <jhi-feature-overlay [enabled]=\"atlasEnabled\">\r\n                <a\r\n                    [jhiFeatureToggleHide]=\"FeatureToggle.LearningPaths\"\r\n                    [routerLink]=\"['/course-management', course.id, 'learning-path-management']\"\r\n                    class=\"btn btn-primary me-1 mb-1 hidden-if-mobile\"\r\n                    [ngbTooltip]=\"'artemisApp.learningPath.learningPathButton' | artemisTranslate\"\r\n                    id=\"course-card-open-learning-paths\"\r\n                >\r\n                    <fa-icon [icon]=\"faNetworkWired\" />\r\n                    <span [innerHTML]=\"'artemisApp.learningPath.learningPathButton' | artemisTranslate\" class=\"d-none d-xl-inline\"></span>\r\n                </a>\r\n            </jhi-feature-overlay>\r\n        }\r\n        @if (course.isAtLeastTutor) {\r\n            <a\r\n                [routerLink]=\"['/course-management', course.id, 'assessment-dashboard']\"\r\n                class=\"btn btn-info me-1 mb-1\"\r\n                [class]=\"isGuidedTour ? 'guided-tour-assessment-dashboard-btn' : ''\"\r\n                [ngbTooltip]=\"'entity.action.assessmentDashboard' | artemisTranslate\"\r\n                [class.guided-tour]=\"isGuidedTour\"\r\n                id=\"course-card-open-assessment-dashboard\"\r\n            >\r\n                <fa-icon [icon]=\"faUserCheck\" />\r\n                <span class=\"d-none d-xl-inline\" jhiTranslate=\"entity.action.assessmentDashboard\"></span>\r\n            </a>\r\n        }\r\n        @if (course.isAtLeastInstructor) {\r\n            <a\r\n                [routerLink]=\"['/course-management', course.id, 'scores']\"\r\n                class=\"btn btn-info me-1 mb-1\"\r\n                [ngbTooltip]=\"'entity.action.scores' | artemisTranslate\"\r\n                id=\"course-card-open-scores\"\r\n            >\r\n                <fa-icon [icon]=\"faTable\" />\r\n                <span class=\"d-none d-xl-inline\" jhiTranslate=\"entity.action.scores\"></span>\r\n            </a>\r\n        }\r\n\r\n        @if (course.isAtLeastTutor && course.faqEnabled) {\r\n            <a\r\n                [routerLink]=\"['/course-management', course.id, 'faqs']\"\r\n                class=\"btn btn-info me-1 mb-1\"\r\n                [ngbTooltip]=\"'entity.action.faq' | artemisTranslate\"\r\n                id=\"course-card-open-faq\"\r\n            >\r\n                <fa-icon [icon]=\"faQuestion\" />\r\n                <span class=\"d-none d-xl-inline\" jhiTranslate=\"entity.action.faq\"></span>\r\n            </a>\r\n        }\r\n    </div>\r\n</div>\r\n", "import { AfterViewInit, Component, OnDestroy, OnInit, inject } from '@angular/core';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { CourseManagementService } from './course-management.service';\r\nimport { onError } from 'app/shared/util/global.utils';\r\nimport { GuidedTourService } from 'app/guided-tour/guided-tour.service';\r\nimport { tutorAssessmentTour } from 'app/guided-tour/tours/tutor-assessment-tour';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { CourseManagementOverviewStatisticsDto } from 'app/course/manage/overview/course-management-overview-statistics-dto.model';\r\nimport { EventManager } from 'app/core/util/event-manager.service';\r\nimport { faAngleDown, faAngleUp, faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { DocumentationType } from 'app/shared/components/documentation-button/documentation-button.component';\r\nimport { CourseAccessStorageService } from 'app/course/course-access-storage.service';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { DocumentationButtonComponent } from 'app/shared/components/documentation-button/documentation-button.component';\r\nimport { HasAnyAuthorityDirective } from 'app/shared/auth/has-any-authority.directive';\r\nimport { OrionFilterDirective } from 'app/shared/orion/orion-filter.directive';\r\nimport { RouterLink } from '@angular/router';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { CourseManagementCardComponent } from './overview/course-management-card.component';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-course',\r\n    templateUrl: './course-management.component.html',\r\n    styles: ['.course-table {padding-bottom: 5rem}'],\r\n    styleUrls: ['./course-management.component.scss'],\r\n    imports: [\r\n        TranslateDirective,\r\n        DocumentationButtonComponent,\r\n        // NOTE: this is actually used in the html template, otherwise *jhiHasAnyAuthority would not work\r\n        HasAnyAuthorityDirective,\r\n        OrionFilterDirective,\r\n        RouterLink,\r\n        FaIconComponent,\r\n        CourseManagementCardComponent,\r\n        ArtemisTranslatePipe,\r\n    ],\r\n})\r\nexport class CourseManagementComponent implements OnInit, OnDestroy, AfterViewInit {\r\n    private courseManagementService = inject(CourseManagementService);\r\n    private alertService = inject(AlertService);\r\n    private eventManager = inject(EventManager);\r\n    private guidedTourService = inject(GuidedTourService);\r\n    private courseAccessStorageService = inject(CourseAccessStorageService);\r\n\r\n    showOnlyActive = true;\r\n\r\n    courses: Course[];\r\n    statistics = new Map<number, CourseManagementOverviewStatisticsDto>();\r\n    coursesWithExercises = new Map<number, Course>();\r\n    coursesWithUsers = new Map<number, Course>();\r\n    courseSemesters: string[];\r\n    semesterCollapsed: { [key: string]: boolean };\r\n    coursesBySemester: { [key: string]: Course[] };\r\n    eventSubscriber: Subscription;\r\n\r\n    private dialogErrorSource = new Subject<string>();\r\n    dialogError$ = this.dialogErrorSource.asObservable();\r\n\r\n    courseForGuidedTour?: Course;\r\n\r\n    readonly documentationType: DocumentationType = 'Course';\r\n    // Icons\r\n    faPlus = faPlus;\r\n    faAngleDown = faAngleDown;\r\n    faAngleUp = faAngleUp;\r\n\r\n    /**\r\n     * loads all courses and subscribes to courseListModification\r\n     */\r\n    ngOnInit() {\r\n        this.loadAll();\r\n        this.registerChangeInCourses();\r\n    }\r\n\r\n    /**\r\n     * notifies the guided-tour service that the current component has\r\n     * been fully loaded\r\n     */\r\n    ngAfterViewInit(): void {\r\n        this.guidedTourService.componentPageLoaded();\r\n    }\r\n\r\n    /**\r\n     * unsubscribe on component destruction\r\n     */\r\n    ngOnDestroy() {\r\n        this.eventManager.destroy(this.eventSubscriber);\r\n        this.dialogErrorSource.unsubscribe();\r\n    }\r\n\r\n    /**\r\n     * loads all courses from courseService\r\n     */\r\n    loadAll() {\r\n        this.courseManagementService.getCourseOverview({ onlyActive: this.showOnlyActive }).subscribe({\r\n            next: (res: HttpResponse<Course[]>) => {\r\n                this.courses = res.body!.sort((a, b) => (a.title ?? '').localeCompare(b.title ?? ''));\r\n                this.courseForGuidedTour = this.guidedTourService.enableTourForCourseOverview(this.courses, tutorAssessmentTour, true);\r\n\r\n                this.courseSemesters = this.getUniqueSemesterNamesSorted(this.courses);\r\n                this.sortCoursesIntoSemesters();\r\n\r\n                // First fetch important data like title for each exercise\r\n                this.fetchExercises();\r\n\r\n                // Once the important part is loaded we can fetch the statistics\r\n                this.fetchExerciseStats();\r\n\r\n                // Load the user group numbers lastly\r\n                this.fetchUserStats();\r\n            },\r\n            error: (error: HttpErrorResponse) => onError(this.alertService, error),\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Sorts and returns the semesters by year descending\r\n     * WS is sorted above SS\r\n     *\r\n     * @param coursesWithSemesters the courses to sort the semesters of\r\n     * @return An array of sorted semester names\r\n     */\r\n    private getUniqueSemesterNamesSorted(coursesWithSemesters: Course[]): string[] {\r\n        return (\r\n            coursesWithSemesters\r\n                // Test courses get their own section later\r\n                .filter((course) => !course.testCourse)\r\n                .map((course) => course.semester ?? '')\r\n                // Filter down to unique values\r\n                .filter((course, index, courses) => courses.indexOf(course) === index)\r\n                .sort((semesterA, semesterB) => {\r\n                    // Sort last if the semester is unset\r\n                    if (semesterA === '') {\r\n                        return 1;\r\n                    }\r\n                    if (semesterB === '') {\r\n                        return -1;\r\n                    }\r\n\r\n                    // Parse years in base 10 by extracting the two digits after the WS or SS prefix\r\n                    const yearsCompared = parseInt(semesterB.slice(2, 4), 10) - parseInt(semesterA.slice(2, 4), 10);\r\n                    if (yearsCompared !== 0) {\r\n                        return yearsCompared;\r\n                    }\r\n\r\n                    // If years are the same, sort WS over SS\r\n                    return semesterA.slice(0, 2) === 'WS' ? -1 : 1;\r\n                })\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Sorts the courses into the coursesBySemester map.\r\n     * Fills the semesterCollapsed map depending on if the semester should be expanded by default.\r\n     * The first semester group, the test courses and the recently accessed courses are expanded by default.\r\n     */\r\n    private sortCoursesIntoSemesters(): void {\r\n        this.semesterCollapsed = {};\r\n        this.coursesBySemester = {};\r\n\r\n        // Get last accessed courses\r\n        const lastAccessedCourseIds = this.courseAccessStorageService.getLastAccessedCourses(CourseAccessStorageService.STORAGE_KEY);\r\n        const recentlyAccessedCourses = this.courses.filter((course) => lastAccessedCourseIds.includes(course.id!));\r\n\r\n        let firstExpanded = false;\r\n        for (const semester of this.courseSemesters) {\r\n            this.semesterCollapsed[semester] = firstExpanded;\r\n            firstExpanded = true;\r\n            this.coursesBySemester[semester] = this.courses.filter(\r\n                (course) => !course.testCourse && !lastAccessedCourseIds.includes(course.id!) && (course.semester ?? '') === semester,\r\n            );\r\n        }\r\n\r\n        // Add a new category \"recent\"\r\n        this.courseSemesters.unshift('recent');\r\n        this.semesterCollapsed['recent'] = false;\r\n        this.coursesBySemester['recent'] = recentlyAccessedCourses;\r\n\r\n        // Add an extra category for test courses\r\n        const testCourses = this.courses.filter((course) => course.testCourse && !lastAccessedCourseIds.includes(course.id!));\r\n        if (testCourses.length > 0) {\r\n            this.courseSemesters[this.courseSemesters.length] = 'test';\r\n            this.semesterCollapsed['test'] = false;\r\n            this.coursesBySemester['test'] = testCourses;\r\n        }\r\n\r\n        // Remove all semesters that have no courses\r\n        this.courseSemesters = this.courseSemesters.filter((semester) => this.coursesBySemester[semester].length > 0);\r\n    }\r\n\r\n    /**\r\n     * Gets the exercises to display from the server and sorts them into coursesWithExercises by course id\r\n     */\r\n    private fetchExercises(): void {\r\n        this.courseManagementService.getExercisesForManagementOverview(this.showOnlyActive).subscribe({\r\n            next: (result: HttpResponse<Course[]>) => {\r\n                // We use this extra map of courses to improve performance by allowing us to use OnPush change detection\r\n                result.body!.forEach((course) => {\r\n                    if (course.id) {\r\n                        this.coursesWithExercises.set(course.id, course);\r\n                    }\r\n                });\r\n            },\r\n            error: (error: HttpErrorResponse) => onError(this.alertService, error),\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Gets the exercise statistics to display from the server and sorts them into the statistics map by course id\r\n     */\r\n    private fetchExerciseStats(): void {\r\n        this.courseManagementService.getStatsForManagementOverview(this.showOnlyActive).subscribe({\r\n            next: (result: HttpResponse<CourseManagementOverviewStatisticsDto[]>) => {\r\n                result.body!.forEach((statisticsDTO) => {\r\n                    if (statisticsDTO.courseId) {\r\n                        this.statistics.set(statisticsDTO.courseId, statisticsDTO);\r\n                    }\r\n                });\r\n            },\r\n            error: (error: HttpErrorResponse) => onError(this.alertService, error),\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Gets the amount of users in the user groups to display and sorts them into coursesWithUsers by course id\r\n     */\r\n    private fetchUserStats(): void {\r\n        this.courseManagementService.getWithUserStats({ onlyActive: this.showOnlyActive }).subscribe({\r\n            next: (result: HttpResponse<Course[]>) => {\r\n                // We use this extra map of courses to improve performance by allowing us to use OnPush change detection\r\n                result.body!.forEach((course) => {\r\n                    if (course.id) {\r\n                        this.coursesWithUsers.set(course.id, course);\r\n                    }\r\n                });\r\n            },\r\n            error: (error: HttpErrorResponse) => onError(this.alertService, error),\r\n        });\r\n    }\r\n\r\n    /**\r\n     * subscribes to courseListModification event\r\n     */\r\n    registerChangeInCourses() {\r\n        this.eventSubscriber = this.eventManager.subscribe('courseListModification', () => this.loadAll());\r\n    }\r\n\r\n    /**\r\n     * toggles the attribute showOnlyActive and reloads all courses\r\n     */\r\n    toggleShowOnlyActive() {\r\n        this.showOnlyActive = !this.showOnlyActive;\r\n        this.loadAll();\r\n    }\r\n}\r\n", "<div>\r\n    <div class=\"row\">\r\n        <div class=\"col-sm d-flex align-items-center\">\r\n            <h4 class=\"fw-medium\" id=\"course-page-heading\" jhiTranslate=\"artemisApp.course.home.title\"></h4>\r\n            <jhi-documentation-button [type]=\"documentationType\" />\r\n        </div>\r\n        <div class=\"col-12 col-sm-auto d-flex align-items-center gap-2\">\r\n            <div class=\"form-check\">\r\n                <input id=\"showOnlyActive\" class=\"form-check-input\" type=\"checkbox\" [checked]=\"showOnlyActive\" (change)=\"toggleShowOnlyActive()\" />\r\n                <label for=\"showOnlyActive\" class=\"form-check-label\" jhiTranslate=\"artemisApp.course.showActive\"></label>\r\n            </div>\r\n            <a\r\n                jhiOrionFilter\r\n                [showInOrionWindow]=\"false\"\r\n                *jhiHasAnyAuthority=\"'ROLE_ADMIN'\"\r\n                class=\"btn btn-primary jh-create-entity create-course\"\r\n                id=\"create-course\"\r\n                [routerLink]=\"['/course-management/new']\"\r\n            >\r\n                <fa-icon [icon]=\"faPlus\" />\r\n                <span class=\"hidden-sm-down\" jhiTranslate=\"artemisApp.course.home.createLabel\"></span>\r\n            </a>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\"></div>\r\n    <br />\r\n    @if (courses) {\r\n        <div class=\"table-responsive\">\r\n            @for (semester of courseSemesters; track semester) {\r\n                <div class=\"course-table-container mb-3\">\r\n                    <div class=\"control-label my-3\" (click)=\"semesterCollapsed[semester] = !semesterCollapsed[semester]\">\r\n                        <fa-icon size=\"2x\" class=\"pe-3\" [icon]=\"semesterCollapsed[semester] ? faAngleDown : faAngleUp\" />\r\n                        @if (semester !== '' && semester !== 'test' && semester !== 'recent') {\r\n                            <span style=\"font-size: 24px\"> {{ 'artemisApp.course.semester' | artemisTranslate }}: {{ semester }} </span>\r\n                        }\r\n                        @if (semester === '') {\r\n                            <span style=\"font-size: 24px\"> {{ 'artemisApp.course.semester' | artemisTranslate }}: {{ 'global.generic.unset' | artemisTranslate }} </span>\r\n                        }\r\n                        @if (semester === 'test') {\r\n                            <span style=\"font-size: 24px\" jhiTranslate=\"artemisApp.course.testCourse.plural\"></span>\r\n                        }\r\n                        @if (semester === 'recent') {\r\n                            <span style=\"font-size: 24px\" jhiTranslate=\"artemisApp.course.recentlyAccessed\"></span>\r\n                        }\r\n                    </div>\r\n                    @if (!semesterCollapsed[semester]) {\r\n                        <div>\r\n                            @for (course of coursesBySemester[semester]; track course) {\r\n                                <jhi-course-management-card\r\n                                    class=\"col-md-8\"\r\n                                    [course]=\"course\"\r\n                                    [courseStatistics]=\"statistics.get(course.id!)\"\r\n                                    [courseWithExercises]=\"coursesWithExercises.get(course.id!)\"\r\n                                    [courseWithUsers]=\"coursesWithUsers.get(course.id!)\"\r\n                                    [isGuidedTour]=\"course === courseForGuidedTour\"\r\n                                />\r\n                            }\r\n                        </div>\r\n                    }\r\n                    <div class=\"collapsed\"></div>\r\n                </div>\r\n            }\r\n        </div>\r\n    }\r\n</div>\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "ctx_r0", "faExclamationTriangle", "\u0275\u0275pipeBind1", "iconTooltip", "faUsers", "faTimes", "details", "releaseDate", "faCalendarAlt", "\u0275\u0275textInterpolate", "dueDate", "assessmentDueDate", "statistic", "participationRateInPercent", "noOfParticipatingStudentsOrTeams", "teamMode", "noOfTeamsInCourse", "noOfStudentsInCourse", "noOfAssessmentsDoneInPercent", "noOfRatedAssessments", "noOfSubmissionsInTime", "averageScoreInPercent", "averageScoreNumerator", "exerciseMaxPoints", "\u0275\u0275pureFunction3", "_c1", "course", "id", "type", "faWrench", "_c2", "_c3", "faTable", "\u0275\u0275pureFunction2", "_c4", "faFileSignature", "ExerciseRowType", "CourseManagementExerciseRowComponent", "rowType", "exerciseType", "ExerciseType", "exerciseRowType", "quizStatus", "CLOSED", "OPEN_FOR_PRACTICE", "ACTIVE", "VISIBLE", "HIDDEN", "JSON", "hasLeftoverAssessments", "icon", "detailsLoaded", "statisticsLoaded", "faBook", "ngOnChanges", "getIconTooltip", "setIcon", "roundValueSpecifiedByCourseSettings", "getIcon", "selectors", "inputs", "features", "\u0275\u0275NgOnChangesFeature", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275template", "CourseManagementExerciseRowComponent_Conditional_12_Template", "CourseManagementExerciseRowComponent_Conditional_13_Template", "CourseManagementExerciseRowComponent_Conditional_37_Template", "CourseManagementExerciseRowComponent_Conditional_38_Template", "CourseManagementExerciseRowComponent_Conditional_39_Template", "CourseManagementExerciseRowComponent_Conditional_47_Template", "CourseManagementExerciseRowComponent_Conditional_48_Template", "CourseManagementExerciseRowComponent_Conditional_49_Template", "CourseManagementExerciseRowComponent_Conditional_57_Template", "CourseManagementExerciseRowComponent_Conditional_58_Template", "CourseManagementExerciseRowComponent_Conditional_59_Template", "CourseManagementExerciseRowComponent_Conditional_64_Template", "CourseManagementExerciseRowComponent_Conditional_65_Template", "CourseManagementExerciseRowComponent_Conditional_66_Template", "CourseManagementExerciseRowComponent_Conditional_71_Template", "CourseManagementExerciseRowComponent_Conditional_72_Template", "CourseManagementExerciseRowComponent_Conditional_73_Template", "CourseManagementExerciseRowComponent_Conditional_74_Template", "_c0", "\u0275\u0275conditional", "title", "CURRENT", "ASSESSING", "PAST", "isAtLeastEditor", "QUIZ", "FUTURE", "isAtLeastInstructor", "isAtLeastTutor", "PROGRAMMING", "RouterLink", "FaIconComponent", "NgbTooltip", "ExerciseCategoriesComponent", "NgClass", "TranslateDirective", "ProgressBarComponent", "ArtemisDatePipe", "ArtemisTranslatePipe", "ArtemisTimeAgoPipe", "styles", "changeDetection", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "\u0275\u0275pureFunction1", "_c2", "model_r1", "absoluteValue", "\u0275\u0275textInterpolate", "name", "\u0275\u0275textInterpolate2", "model_r2", "\u0275\u0275template", "CourseManagementOverviewStatisticsComponent_Conditional_13_ng_template_9_Conditional_1_Template", "\u0275\u0275conditional", "length", "CourseManagementOverviewStatisticsComponent_Conditional_13_ng_template_6_Template", "\u0275\u0275templateRefExtractor", "CourseManagementOverviewStatisticsComponent_Conditional_13_ng_template_9_Template", "_c1", "containerRef_r3", "offsetWidth", "ctx_r3", "ngxData", "chartColor", "formatYAxis", "curve", "\u0275\u0275pipeBind1", "course", "startDate", "CourseManagementOverviewStatisticsComponent", "ActiveStudentsChart", "translateService", "inject", "TranslateService", "amountOfStudentsInCourse", "initialStats", "graphType", "Graphs", "ACTIVE_STUDENTS", "lineChartLabels", "selectable", "group", "ScaleType", "Ordinal", "domain", "GraphColors", "BLACK", "curveMonotoneX", "faSpinner", "constructor", "ngOnInit", "onLangChange", "subscribe", "updateTranslation", "determineDisplayedPeriod", "createChartLabels", "currentOffsetToEndDate", "createChartData", "ngOnChanges", "set", "forEach", "index", "push", "value", "label", "series", "toLocaleString", "weekOffset", "i", "currentSpanSize", "translatePath", "week", "Math", "min", "instant", "amount", "selectors", "inputs", "features", "\u0275\u0275InheritDefinitionFeature", "\u0275\u0275NgOnChangesFeature", "decls", "vars", "consts", "template", "rf", "ctx", "CourseManagementOverviewStatisticsComponent_Conditional_13_Template", "CourseManagementOverviewStatisticsComponent_Conditional_14_Template", "_c0", "id", "startDateAlreadyPassed", "RouterLink", "TranslateDirective", "HelpIconComponent", "LineChartModule", "LineChartComponent", "ArtemisDatePipe", "styles", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275property", "ctx_r0", "CachingStrategy", "LOCAL_STORAGE", "course", "courseIcon", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275textInterpolate2", "\u0275\u0275pipeBind2", "startDate", "endDate", "\u0275\u0275textInterpolate1", "description", "\u0275\u0275pureFunction1", "_c2", "id", "courseWithUsers", "numberOfStudents", "\u0275\u0275pipeBind1", "_c3", "numberOfTeachingAssistants", "_c4", "numberOfEditors", "_c5", "numberOfInstructors", "\u0275\u0275template", "CourseManagementCardComponent_Conditional_23_Conditional_7_Template", "CourseManagementCardComponent_Conditional_23_Conditional_8_Template", "CourseManagementCardComponent_Conditional_23_Conditional_9_Template", "CourseManagementCardComponent_Conditional_23_Conditional_13_Template", "CourseManagementCardComponent_Conditional_23_Conditional_14_Template", "CourseManagementCardComponent_Conditional_23_Conditional_15_Template", "CourseManagementCardComponent_Conditional_23_Conditional_22_Template", "CourseManagementCardComponent_Conditional_23_Conditional_23_Template", "CourseManagementCardComponent_Conditional_23_Conditional_24_Template", "CourseManagementCardComponent_Conditional_23_Conditional_28_Template", "CourseManagementCardComponent_Conditional_23_Conditional_29_Template", "CourseManagementCardComponent_Conditional_23_Conditional_30_Template", "\u0275\u0275propertyInterpolate1", "\u0275\u0275conditional", "undefined", "faSpinner", "exerciseRowType", "FUTURE", "exercise_r3", "statisticsPerExercise", "get", "\u0275\u0275repeaterCreate", "CourseManagementCardComponent_Conditional_32_Conditional_3_Conditional_10_For_4_Template", "\u0275\u0275repeaterTrackByIdentity", "\u0275\u0275repeater", "futureExercises", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r2", "\u0275\u0275nextContext", "\u0275\u0275resetView", "showFutureExercises", "CourseManagementCardComponent_Conditional_32_Conditional_3_Conditional_10_Template", "CourseManagementCardComponent_Conditional_32_Conditional_3_Conditional_11_Template", "faAngleDown", "faAngleUp", "CURRENT", "exercise_r5", "CourseManagementCardComponent_Conditional_32_Conditional_4_Conditional_10_For_4_Template", "currentExercises", "_r4", "showCurrentExercises", "CourseManagementCardComponent_Conditional_32_Conditional_4_Conditional_10_Template", "CourseManagementCardComponent_Conditional_32_Conditional_4_Conditional_11_Template", "ASSESSING", "exercise_r7", "CourseManagementCardComponent_Conditional_32_Conditional_5_Conditional_10_For_4_Template", "exercisesInAssessment", "_r6", "showExercisesInAssessment", "CourseManagementCardComponent_Conditional_32_Conditional_5_Conditional_10_Template", "CourseManagementCardComponent_Conditional_32_Conditional_5_Conditional_11_Template", "PAST", "exercise_r9", "CourseManagementCardComponent_Conditional_32_Conditional_6_Conditional_10_For_4_Template", "pastExercises", "_r8", "showPastExercises", "CourseManagementCardComponent_Conditional_32_Conditional_6_Conditional_10_Template", "CourseManagementCardComponent_Conditional_32_Conditional_6_Conditional_11_Template", "\u0275\u0275pureFunction2", "_c6", "length", "pastExerciseCount", "CourseManagementCardComponent_Conditional_32_Conditional_3_Template", "CourseManagementCardComponent_Conditional_32_Conditional_4_Template", "CourseManagementCardComponent_Conditional_32_Conditional_5_Template", "CourseManagementCardComponent_Conditional_32_Conditional_6_Template", "CourseManagementCardComponent_Conditional_32_Conditional_7_Template", "courseStatistics", "activeStudents", "_c7", "faGraduationCap", "\u0275\u0275classProp", "isGuidedTour", "_c8", "faListAlt", "_c9", "faFilePdf", "_c10", "faChartBar", "_c11", "faComments", "_c12", "FeatureToggle", "TutorialGroups", "faPersonChalkboard", "\u0275\u0275sanitizeHtml", "atlasEnabled", "_c13", "faFlag", "LearningPaths", "_c14", "faNetworkWired", "\u0275\u0275classMap", "_c15", "faUserCheck", "_c16", "faTable", "_c17", "faQuestion", "CourseManagementCardComponent", "ARTEMIS_DEFAULT_COLOR", "profileService", "inject", "ProfileService", "courseWithExercises", "Map", "exerciseType", "ExerciseType", "ExerciseRowType", "statisticsSorted", "exercisesSorted", "faClipboard", "courseColor", "contentColor", "isCommunicationEnabled", "isMessagingEnabled", "ngOnInit", "getProfileInfo", "subscribe", "profileInfo", "activeProfiles", "includes", "PROFILE_ATLAS", "ngOnChanges", "targetCourseColor", "color", "getContrastingTextColor", "exerciseDTOS", "forEach", "dto", "exerciseId", "set", "exercises", "sortExercises", "inSevenDays", "dayjs", "add", "endOf", "filter", "exercise", "releaseDate", "sort", "exerciseA", "exerciseB", "valueOf", "slice", "dueDate", "assessmentDueDate", "allPastExercises", "selectors", "inputs", "features", "\u0275\u0275NgOnChangesFeature", "decls", "vars", "consts", "template", "rf", "ctx", "CourseManagementCardComponent_Conditional_8_Template", "CourseManagementCardComponent_Conditional_11_Template", "CourseManagementCardComponent_Conditional_12_Template", "CourseManagementCardComponent_Conditional_13_Template", "CourseManagementCardComponent_Conditional_21_Template", "CourseManagementCardComponent_Conditional_23_Template", "CourseManagementCardComponent_Conditional_31_Template", "CourseManagementCardComponent_Conditional_32_Template", "CourseManagementCardComponent_Conditional_38_Template", "CourseManagementCardComponent_Conditional_39_Template", "CourseManagementCardComponent_Conditional_46_Template", "CourseManagementCardComponent_Conditional_47_Template", "CourseManagementCardComponent_Conditional_48_Template", "CourseManagementCardComponent_Conditional_49_Template", "CourseManagementCardComponent_Conditional_50_Template", "CourseManagementCardComponent_Conditional_51_Template", "CourseManagementCardComponent_Conditional_52_Template", "CourseManagementCardComponent_Conditional_53_Template", "CourseManagementCardComponent_Conditional_54_Template", "CourseManagementCardComponent_Conditional_55_Template", "CourseManagementCardComponent_Conditional_56_Template", "_c0", "_c1", "title", "shortName", "isAtLeastInstructor", "isAtLeastTutor", "isAtLeastEditor", "timeZone", "faqEnabled", "NgStyle", "RouterLink", "SecuredImageComponent", "TranslateDirective", "FaIconComponent", "CourseManagementExerciseRowComponent", "CourseManagementOverviewStatisticsComponent", "NgbTooltip", "FeatureToggleLinkDirective", "FeatureToggleHideDirective", "ArtemisDatePipe", "ArtemisTranslatePipe", "FeatureOverlayComponent", "styles", "changeDetection", "\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275property", "\u0275\u0275pureFunction0", "_c0", "\u0275\u0275advance", "ctx_r0", "faPlus", "\u0275\u0275textInterpolate2", "\u0275\u0275pipeBind1", "semester_r3", "course_r4", "statistics", "get", "id", "coursesWithExercises", "coursesWithUsers", "courseForGuidedTour", "\u0275\u0275repeaterCreate", "CourseManagementComponent_Conditional_28_For_4_Conditional_12_For_4_Template", "\u0275\u0275repeaterTrackByIdentity", "\u0275\u0275repeater", "coursesBySemester", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r2", "$implicit", "\u0275\u0275nextContext", "\u0275\u0275resetView", "semesterCollapsed", "\u0275\u0275template", "CourseManagementComponent_Conditional_28_For_4_Conditional_7_Template", "CourseManagementComponent_Conditional_28_For_4_Conditional_8_Template", "CourseManagementComponent_Conditional_28_For_4_Conditional_9_Template", "CourseManagementComponent_Conditional_28_For_4_Conditional_10_Template", "CourseManagementComponent_Conditional_28_For_4_Conditional_12_Template", "faAngleDown", "faAngleUp", "\u0275\u0275conditional", "CourseManagementComponent_Conditional_28_For_4_Template", "courseSemesters", "CourseManagementComponent", "courseManagementService", "inject", "CourseManagementService", "alertService", "AlertService", "eventManager", "EventManager", "guidedTourService", "GuidedTourService", "courseAccessStorageService", "CourseAccessStorageService", "showOnlyActive", "courses", "Map", "eventSubscriber", "dialogErrorSource", "Subject", "dialogError$", "asObservable", "documentationType", "ngOnInit", "loadAll", "registerChangeInCourses", "ngAfterViewInit", "componentPageLoaded", "ngOnDestroy", "destroy", "unsubscribe", "getCourseOverview", "onlyActive", "subscribe", "next", "res", "body", "sort", "a", "b", "title", "localeCompare", "enableTourForCourseOverview", "tutorAssessmentTour", "getUniqueSemesterNamesSorted", "sortCoursesIntoSemesters", "fetchExercises", "fetchExerciseStats", "fetchUserStats", "error", "onError", "coursesWithSemesters", "filter", "course", "testCourse", "map", "semester", "index", "indexOf", "semesterA", "semesterB", "yearsCompared", "parseInt", "slice", "lastAccessedCourseIds", "getLastAccessedCourses", "STORAGE_KEY", "recentlyAccessedCourses", "includes", "firstExpanded", "unshift", "testCourses", "length", "getExercisesForManagementOverview", "result", "forEach", "set", "getStatsForManagementOverview", "statisticsDTO", "courseId", "getWithUserStats", "toggleShowOnlyActive", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "CourseManagementComponent_a_20_Template", "CourseManagementComponent_Conditional_28_Template", "TranslateDirective", "DocumentationButtonComponent", "HasAnyAuthorityDirective", "OrionFilterDirective", "RouterLink", "FaIconComponent", "CourseManagementCardComponent", "ArtemisTranslatePipe", "styles"]
}
