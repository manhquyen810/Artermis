{
  "version": 3,
  "sources": ["src/main/webapp/app/lti/lti13-select-content.component.ts", "src/main/webapp/app/lti/lti13-select-content.component.html"],
  "sourcesContent": ["import { Component, ElementRef, NgZone, OnInit, SecurityContext, ViewChild, inject } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { TranslateDirective } from '../shared/language/translate.directive';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SafeResourceUrlPipe } from 'app/shared/pipes/safe-resource-url.pipe';\r\n\r\n/**\r\n * Component responsible for sending deep linking content.\r\n * It reads the necessary parameters from the route, sanitizes return URL,\r\n * and automatically submits a form with the relevant data.\r\n * According to LTI documentation auto submit form must be used.\r\n */\r\n\r\n@Component({\r\n    selector: 'jhi-select-exercise',\r\n    templateUrl: './lti13-select-content.component.html',\r\n    imports: [TranslateDirective, FormsModule, SafeResourceUrlPipe],\r\n})\r\nexport class Lti13SelectContentComponent implements OnInit {\r\n    private route = inject(ActivatedRoute);\r\n    private sanitizer = inject(DomSanitizer);\r\n    private zone = inject(NgZone);\r\n\r\n    jwt: string;\r\n    id: string;\r\n    actionLink: string;\r\n    isLinking = true;\r\n\r\n    @ViewChild('deepLinkingForm', { static: false })\r\n    deepLinkingForm?: ElementRef;\r\n\r\n    /**\r\n     * Initializes the component.\r\n     * - Retrieves query parameters from the route snapshot.\r\n     * - Sets the action link for the form.\r\n     * - Automatically submits the form.\r\n     */\r\n    ngOnInit(): void {\r\n        this.route.params.subscribe(() => {\r\n            this.updateFormValues();\r\n\r\n            // postpone auto-submit until after view updates are completed\r\n            // if not jwt and id is not submitted correctly\r\n            if (this.jwt && this.id) {\r\n                this.zone.runOutsideAngular(() => {\r\n                    setTimeout(() => this.autoSubmitForm());\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Updates the form values with query parameters\r\n     * - Retrieves query parameters from the route snapshot.\r\n     */\r\n    updateFormValues(): void {\r\n        const deepLinkUri = this.route.snapshot.queryParamMap.get('deepLinkUri') ?? '';\r\n        this.actionLink = this.sanitizer.sanitize(SecurityContext.URL, deepLinkUri) || '';\r\n        this.jwt = this.route.snapshot.queryParamMap.get('jwt') ?? '';\r\n        this.id = this.route.snapshot.queryParamMap.get('id') ?? '';\r\n        if (this.actionLink === '' || this.jwt === '' || this.id === '') {\r\n            this.isLinking = false;\r\n            return;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Automatically submits the form.\r\n     * - Sets the action link for the form.\r\n     * - Submits the form.\r\n     */\r\n    autoSubmitForm(): void {\r\n        const form = this.deepLinkingForm?.nativeElement;\r\n        if (form) {\r\n            form.action = this.actionLink;\r\n            form.submit();\r\n        }\r\n    }\r\n}\r\n", "<h1 [hidden]=\"isLinking\" jhiTranslate=\"artemisApp.lti13.deepLinking.linking\"></h1>\r\n<div>\r\n    <form #deepLinkingForm id=\"deepLinkingForm\" method=\"post\" [attr.action]=\"actionLink | safeResourceUrl\">\r\n        <input [(ngModel)]=\"jwt\" hidden=\"true\" id=\"JWT\" name=\"JWT\" />\r\n        <input [(ngModel)]=\"id\" hidden=\"true\" id=\"id\" name=\"id\" />\r\n    </form>\r\n</div>\r\n<h2 [hidden]=\"!isLinking\" jhiTranslate=\"artemisApp.lti13.deepLinking.linkedFailed\"></h2>\r\n"],
  "mappings": "qlBAmBaA,GAA2B,IAAA,CAAlC,MAAOA,CAA2B,CAC5BC,MAAQC,EAAOC,CAAc,EAC7BC,UAAYF,EAAOG,CAAY,EAC/BC,KAAOJ,EAAOK,CAAM,EAE5BC,IACAC,GACAC,WACAC,UAAY,GAGZC,gBAQAC,UAAQ,CACJ,KAAKZ,MAAMa,OAAOC,UAAU,IAAK,CAC7B,KAAKC,iBAAgB,EAIjB,KAAKR,KAAO,KAAKC,IACjB,KAAKH,KAAKW,kBAAkB,IAAK,CAC7BC,WAAW,IAAM,KAAKC,eAAc,CAAE,CAC1C,CAAC,CAET,CAAC,CACL,CAMAH,kBAAgB,CACZ,IAAMI,EAAc,KAAKnB,MAAMoB,SAASC,cAAcC,IAAI,aAAa,GAAK,GAI5E,GAHA,KAAKb,WAAa,KAAKN,UAAUoB,SAASC,EAAgBC,IAAKN,CAAW,GAAK,GAC/E,KAAKZ,IAAM,KAAKP,MAAMoB,SAASC,cAAcC,IAAI,KAAK,GAAK,GAC3D,KAAKd,GAAK,KAAKR,MAAMoB,SAASC,cAAcC,IAAI,IAAI,GAAK,GACrD,KAAKb,aAAe,IAAM,KAAKF,MAAQ,IAAM,KAAKC,KAAO,GAAI,CAC7D,KAAKE,UAAY,GACjB,MACJ,CACJ,CAOAQ,gBAAc,CACV,IAAMQ,EAAO,KAAKf,iBAAiBgB,cAC/BD,IACAA,EAAKE,OAAS,KAAKnB,WACnBiB,EAAKG,OAAM,EAEnB,4CA3DS9B,EAA2B,2BAA3BA,EAA2B+B,UAAA,CAAA,CAAA,qBAAA,CAAA,EAAAC,UAAA,SAAAC,EAAAC,EAAA,IAAAD,EAAA,odCnBxCE,EAAA,EAAA,KAAA,CAAA,EACAC,EAAA,EAAA;CAAA,EAAAC,EAAA,EAAA,KAAA,EACID,EAAA,EAAA;KAAA,EAAAC,EAAA,EAAA,OAAA,EAAA,CAAA,yBACID,EAAA,EAAA;SAAA,EAAAC,EAAA,EAAA,QAAA,CAAA,EAAOC,EAAA,gBAAA,SAAAC,EAAA,CAAAC,OAAAC,EAAAC,CAAA,EAAAC,EAAAT,EAAA1B,IAAA+B,CAAA,IAAAL,EAAA1B,IAAA+B,GAAAK,EAAAL,CAAA,CAAA,CAAA,EAAPM,EAAA,EACAT,EAAA,EAAA;SAAA,EAAAC,EAAA,GAAA,QAAA,CAAA,EAAOC,EAAA,gBAAA,SAAAC,EAAA,CAAAC,OAAAC,EAAAC,CAAA,EAAAC,EAAAT,EAAAzB,GAAA8B,CAAA,IAAAL,EAAAzB,GAAA8B,GAAAK,EAAAL,CAAA,CAAA,CAAA,EAAPM,EAAA,EACJT,EAAA,GAAA;KAAA,EAAAS,EAAA,EACJT,EAAA,GAAA;CAAA,EAAAS,EAAA,EACAT,EAAA,GAAA;CAAA,EAAAD,EAAA,GAAA,KAAA,CAAA,EACAC,EAAA,GAAA;CAAA,QARIU,EAAA,SAAAZ,EAAAvB,SAAA,EAE0DoC,EAAA,CAAA,oCAC/CA,EAAA,CAAA,EAAAC,EAAA,UAAAd,EAAA1B,GAAA,EACAuC,EAAA,CAAA,EAAAC,EAAA,UAAAd,EAAAzB,EAAA,EAGXsC,EAAA,CAAA,EAAAD,EAAA,SAAA,CAAAZ,EAAAvB,SAAA,kBDUUsC,EAAoBC,EAAWC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAEC,CAAmB,EAAAC,cAAA,CAAA,CAAA,SAErD1D,CAA2B,GAAA",
  "names": ["Lti13SelectContentComponent", "route", "inject", "ActivatedRoute", "sanitizer", "DomSanitizer", "zone", "NgZone", "jwt", "id", "actionLink", "isLinking", "deepLinkingForm", "ngOnInit", "params", "subscribe", "updateFormValues", "runOutsideAngular", "setTimeout", "autoSubmitForm", "deepLinkUri", "snapshot", "queryParamMap", "get", "sanitize", "SecurityContext", "URL", "form", "nativeElement", "action", "submit", "selectors", "viewQuery", "rf", "ctx", "\u0275\u0275element", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275twoWayListener", "$event", "i0", "\u0275\u0275restoreView", "_r1", "\u0275\u0275twoWayBindingSet", "\u0275\u0275resetView", "\u0275\u0275elementEnd", "\u0275\u0275property", "\u0275\u0275advance", "\u0275\u0275twoWayProperty", "TranslateDirective", "FormsModule", "\u0275NgNoValidate", "DefaultValueAccessor", "NgControlStatus", "NgControlStatusGroup", "NgModel", "NgForm", "SafeResourceUrlPipe", "encapsulation"]
}
