{"version":3,"sources":["node_modules/d3-drag/src/noevent.js","node_modules/d3-drag/src/nodrag.js","node_modules/d3-brush/src/constant.js","node_modules/d3-brush/src/event.js","node_modules/d3-brush/src/noevent.js","node_modules/d3-brush/src/brush.js","node_modules/@swimlane/ngx-charts/fesm2022/swimlane-ngx-charts.mjs"],"sourcesContent":["// These are typically used in conjunction with noevent to ensure that we can\n// preventDefault on the event.\nexport const nonpassive = {\n  passive: false\n};\nexport const nonpassivecapture = {\n  capture: true,\n  passive: false\n};\nexport function nopropagation(event) {\n  event.stopImmediatePropagation();\n}\nexport default function (event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}","import { select } from \"d3-selection\";\nimport noevent, { nonpassivecapture } from \"./noevent.js\";\nexport default function (view) {\n  var root = view.document.documentElement,\n    selection = select(view).on(\"dragstart.drag\", noevent, nonpassivecapture);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, nonpassivecapture);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n    selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, nonpassivecapture);\n    setTimeout(function () {\n      selection.on(\"click.drag\", null);\n    }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}","export default x => () => x;","export default function BrushEvent(type, {\n  sourceEvent,\n  target,\n  selection,\n  mode,\n  dispatch\n}) {\n  Object.defineProperties(this, {\n    type: {\n      value: type,\n      enumerable: true,\n      configurable: true\n    },\n    sourceEvent: {\n      value: sourceEvent,\n      enumerable: true,\n      configurable: true\n    },\n    target: {\n      value: target,\n      enumerable: true,\n      configurable: true\n    },\n    selection: {\n      value: selection,\n      enumerable: true,\n      configurable: true\n    },\n    mode: {\n      value: mode,\n      enumerable: true,\n      configurable: true\n    },\n    _: {\n      value: dispatch\n    }\n  });\n}","export function nopropagation(event) {\n  event.stopImmediatePropagation();\n}\nexport default function (event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}","import { dispatch } from \"d3-dispatch\";\nimport { dragDisable, dragEnable } from \"d3-drag\";\nimport { interpolate } from \"d3-interpolate\";\nimport { pointer, select } from \"d3-selection\";\nimport { interrupt } from \"d3-transition\";\nimport constant from \"./constant.js\";\nimport BrushEvent from \"./event.js\";\nimport noevent, { nopropagation } from \"./noevent.js\";\nvar MODE_DRAG = {\n    name: \"drag\"\n  },\n  MODE_SPACE = {\n    name: \"space\"\n  },\n  MODE_HANDLE = {\n    name: \"handle\"\n  },\n  MODE_CENTER = {\n    name: \"center\"\n  };\nconst {\n  abs,\n  max,\n  min\n} = Math;\nfunction number1(e) {\n  return [+e[0], +e[1]];\n}\nfunction number2(e) {\n  return [number1(e[0]), number1(e[1])];\n}\nvar X = {\n  name: \"x\",\n  handles: [\"w\", \"e\"].map(type),\n  input: function (x, e) {\n    return x == null ? null : [[+x[0], e[0][1]], [+x[1], e[1][1]]];\n  },\n  output: function (xy) {\n    return xy && [xy[0][0], xy[1][0]];\n  }\n};\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function (y, e) {\n    return y == null ? null : [[e[0][0], +y[0]], [e[1][0], +y[1]]];\n  },\n  output: function (xy) {\n    return xy && [xy[0][1], xy[1][1]];\n  }\n};\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"w\", \"e\", \"s\", \"nw\", \"ne\", \"sw\", \"se\"].map(type),\n  input: function (xy) {\n    return xy == null ? null : number2(xy);\n  },\n  output: function (xy) {\n    return xy;\n  }\n};\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\nfunction type(t) {\n  return {\n    type: t\n  };\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter(event) {\n  return !event.ctrlKey && !event.button;\n}\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  if (svg.hasAttribute(\"viewBox\")) {\n    svg = svg.viewBox.baseVal;\n    return [[svg.x, svg.y], [svg.x + svg.width, svg.y + svg.height]];\n  }\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || \"ontouchstart\" in this;\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0] || extent[0][1] === extent[1][1];\n}\nexport function brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\nexport function brushX() {\n  return brush(X);\n}\nexport function brushY() {\n  return brush(Y);\n}\nexport default function () {\n  return brush(XY);\n}\nfunction brush(dim) {\n  var extent = defaultExtent,\n    filter = defaultFilter,\n    touchable = defaultTouchable,\n    keys = true,\n    listeners = dispatch(\"start\", \"brush\", \"end\"),\n    handleSize = 6,\n    touchending;\n  function brush(group) {\n    var overlay = group.property(\"__brush\", initialize).selectAll(\".overlay\").data([type(\"overlay\")]);\n    overlay.enter().append(\"rect\").attr(\"class\", \"overlay\").attr(\"pointer-events\", \"all\").attr(\"cursor\", cursors.overlay).merge(overlay).each(function () {\n      var extent = local(this).extent;\n      select(this).attr(\"x\", extent[0][0]).attr(\"y\", extent[0][1]).attr(\"width\", extent[1][0] - extent[0][0]).attr(\"height\", extent[1][1] - extent[0][1]);\n    });\n    group.selectAll(\".selection\").data([type(\"selection\")]).enter().append(\"rect\").attr(\"class\", \"selection\").attr(\"cursor\", cursors.selection).attr(\"fill\", \"#777\").attr(\"fill-opacity\", 0.3).attr(\"stroke\", \"#fff\").attr(\"shape-rendering\", \"crispEdges\");\n    var handle = group.selectAll(\".handle\").data(dim.handles, function (d) {\n      return d.type;\n    });\n    handle.exit().remove();\n    handle.enter().append(\"rect\").attr(\"class\", function (d) {\n      return \"handle handle--\" + d.type;\n    }).attr(\"cursor\", function (d) {\n      return cursors[d.type];\n    });\n    group.each(redraw).attr(\"fill\", \"none\").attr(\"pointer-events\", \"all\").on(\"mousedown.brush\", started).filter(touchable).on(\"touchstart.brush\", started).on(\"touchmove.brush\", touchmoved).on(\"touchend.brush touchcancel.brush\", touchended).style(\"touch-action\", \"none\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n  brush.move = function (group, selection, event) {\n    if (group.tween) {\n      group.on(\"start.brush\", function (event) {\n        emitter(this, arguments).beforestart().start(event);\n      }).on(\"interrupt.brush end.brush\", function (event) {\n        emitter(this, arguments).end(event);\n      }).tween(\"brush\", function () {\n        var that = this,\n          state = that.__brush,\n          emit = emitter(that, arguments),\n          selection0 = state.selection,\n          selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n          i = interpolate(selection0, selection1);\n        function tween(t) {\n          state.selection = t === 1 && selection1 === null ? null : i(t);\n          redraw.call(that);\n          emit.brush();\n        }\n        return selection0 !== null && selection1 !== null ? tween : tween(1);\n      });\n    } else {\n      group.each(function () {\n        var that = this,\n          args = arguments,\n          state = that.__brush,\n          selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n          emit = emitter(that, args).beforestart();\n        interrupt(that);\n        state.selection = selection1 === null ? null : selection1;\n        redraw.call(that);\n        emit.start(event).brush(event).end(event);\n      });\n    }\n  };\n  brush.clear = function (group, event) {\n    brush.move(group, null, event);\n  };\n  function redraw() {\n    var group = select(this),\n      selection = local(this).selection;\n    if (selection) {\n      group.selectAll(\".selection\").style(\"display\", null).attr(\"x\", selection[0][0]).attr(\"y\", selection[0][1]).attr(\"width\", selection[1][0] - selection[0][0]).attr(\"height\", selection[1][1] - selection[0][1]);\n      group.selectAll(\".handle\").style(\"display\", null).attr(\"x\", function (d) {\n        return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2;\n      }).attr(\"y\", function (d) {\n        return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2;\n      }).attr(\"width\", function (d) {\n        return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize;\n      }).attr(\"height\", function (d) {\n        return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize;\n      });\n    } else {\n      group.selectAll(\".selection,.handle\").style(\"display\", \"none\").attr(\"x\", null).attr(\"y\", null).attr(\"width\", null).attr(\"height\", null);\n    }\n  }\n  function emitter(that, args, clean) {\n    var emit = that.__brush.emitter;\n    return emit && (!clean || !emit.clean) ? emit : new Emitter(that, args, clean);\n  }\n  function Emitter(that, args, clean) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n    this.clean = clean;\n  }\n  Emitter.prototype = {\n    beforestart: function () {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function (event, mode) {\n      if (this.starting) this.starting = false, this.emit(\"start\", event, mode);else this.emit(\"brush\", event);\n      return this;\n    },\n    brush: function (event, mode) {\n      this.emit(\"brush\", event, mode);\n      return this;\n    },\n    end: function (event, mode) {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\", event, mode);\n      return this;\n    },\n    emit: function (type, event, mode) {\n      var d = select(this.that).datum();\n      listeners.call(type, this.that, new BrushEvent(type, {\n        sourceEvent: event,\n        target: brush,\n        selection: dim.output(this.state.selection),\n        mode,\n        dispatch: listeners\n      }), d);\n    }\n  };\n  function started(event) {\n    if (touchending && !event.touches) return;\n    if (!filter.apply(this, arguments)) return;\n    var that = this,\n      type = event.target.__data__.type,\n      mode = (keys && event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : keys && event.altKey ? MODE_CENTER : MODE_HANDLE,\n      signX = dim === Y ? null : signsX[type],\n      signY = dim === X ? null : signsY[type],\n      state = local(that),\n      extent = state.extent,\n      selection = state.selection,\n      W = extent[0][0],\n      w0,\n      w1,\n      N = extent[0][1],\n      n0,\n      n1,\n      E = extent[1][0],\n      e0,\n      e1,\n      S = extent[1][1],\n      s0,\n      s1,\n      dx = 0,\n      dy = 0,\n      moving,\n      shifting = signX && signY && keys && event.shiftKey,\n      lockX,\n      lockY,\n      points = Array.from(event.touches || [event], t => {\n        const i = t.identifier;\n        t = pointer(t, that);\n        t.point0 = t.slice();\n        t.identifier = i;\n        return t;\n      });\n    interrupt(that);\n    var emit = emitter(that, arguments, true).beforestart();\n    if (type === \"overlay\") {\n      if (selection) moving = true;\n      const pts = [points[0], points[1] || points[0]];\n      state.selection = selection = [[w0 = dim === Y ? W : min(pts[0][0], pts[1][0]), n0 = dim === X ? N : min(pts[0][1], pts[1][1])], [e0 = dim === Y ? E : max(pts[0][0], pts[1][0]), s0 = dim === X ? S : max(pts[0][1], pts[1][1])]];\n      if (points.length > 1) move(event);\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n    var group = select(that).attr(\"pointer-events\", \"none\");\n    var overlay = group.selectAll(\".overlay\").attr(\"cursor\", cursors[type]);\n    if (event.touches) {\n      emit.moved = moved;\n      emit.ended = ended;\n    } else {\n      var view = select(event.view).on(\"mousemove.brush\", moved, true).on(\"mouseup.brush\", ended, true);\n      if (keys) view.on(\"keydown.brush\", keydowned, true).on(\"keyup.brush\", keyupped, true);\n      dragDisable(event.view);\n    }\n    redraw.call(that);\n    emit.start(event, mode.name);\n    function moved(event) {\n      for (const p of event.changedTouches || [event]) {\n        for (const d of points) if (d.identifier === p.identifier) d.cur = pointer(p, that);\n      }\n      if (shifting && !lockX && !lockY && points.length === 1) {\n        const point = points[0];\n        if (abs(point.cur[0] - point[0]) > abs(point.cur[1] - point[1])) lockY = true;else lockX = true;\n      }\n      for (const point of points) if (point.cur) point[0] = point.cur[0], point[1] = point.cur[1];\n      moving = true;\n      noevent(event);\n      move(event);\n    }\n    function move(event) {\n      const point = points[0],\n        point0 = point.point0;\n      var t;\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG:\n          {\n            if (signX) dx = max(W - w0, min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n            if (signY) dy = max(N - n0, min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n            break;\n          }\n        case MODE_HANDLE:\n          {\n            if (points[1]) {\n              if (signX) w1 = max(W, min(E, points[0][0])), e1 = max(W, min(E, points[1][0])), signX = 1;\n              if (signY) n1 = max(N, min(S, points[0][1])), s1 = max(N, min(S, points[1][1])), signY = 1;\n            } else {\n              if (signX < 0) dx = max(W - w0, min(E - w0, dx)), w1 = w0 + dx, e1 = e0;else if (signX > 0) dx = max(W - e0, min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n              if (signY < 0) dy = max(N - n0, min(S - n0, dy)), n1 = n0 + dy, s1 = s0;else if (signY > 0) dy = max(N - s0, min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n            }\n            break;\n          }\n        case MODE_CENTER:\n          {\n            if (signX) w1 = max(W, min(E, w0 - dx * signX)), e1 = max(W, min(E, e0 + dx * signX));\n            if (signY) n1 = max(N, min(S, n0 - dy * signY)), s1 = max(N, min(S, s0 + dy * signY));\n            break;\n          }\n      }\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n      if (selection[0][0] !== w1 || selection[0][1] !== n1 || selection[1][0] !== e1 || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush(event, mode.name);\n      }\n    }\n    function ended(event) {\n      nopropagation(event);\n      if (event.touches) {\n        if (event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function () {\n          touchending = null;\n        }, 500); // Ghost clicks are delayed!\n      } else {\n        dragEnable(event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end(event, mode.name);\n    }\n    function keydowned(event) {\n      switch (event.keyCode) {\n        case 16:\n          {\n            // SHIFT\n            shifting = signX && signY;\n            break;\n          }\n        case 18:\n          {\n            // ALT\n            if (mode === MODE_HANDLE) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n              move(event);\n            }\n            break;\n          }\n        case 32:\n          {\n            // SPACE; takes priority over ALT\n            if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n              if (signX < 0) e0 = e1 - dx;else if (signX > 0) w0 = w1 - dx;\n              if (signY < 0) s0 = s1 - dy;else if (signY > 0) n0 = n1 - dy;\n              mode = MODE_SPACE;\n              overlay.attr(\"cursor\", cursors.selection);\n              move(event);\n            }\n            break;\n          }\n        default:\n          return;\n      }\n      noevent(event);\n    }\n    function keyupped(event) {\n      switch (event.keyCode) {\n        case 16:\n          {\n            // SHIFT\n            if (shifting) {\n              lockX = lockY = shifting = false;\n              move(event);\n            }\n            break;\n          }\n        case 18:\n          {\n            // ALT\n            if (mode === MODE_CENTER) {\n              if (signX < 0) e0 = e1;else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1;else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n              move(event);\n            }\n            break;\n          }\n        case 32:\n          {\n            // SPACE\n            if (mode === MODE_SPACE) {\n              if (event.altKey) {\n                if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n                if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n                mode = MODE_CENTER;\n              } else {\n                if (signX < 0) e0 = e1;else if (signX > 0) w0 = w1;\n                if (signY < 0) s0 = s1;else if (signY > 0) n0 = n1;\n                mode = MODE_HANDLE;\n              }\n              overlay.attr(\"cursor\", cursors[type]);\n              move(event);\n            }\n            break;\n          }\n        default:\n          return;\n      }\n      noevent(event);\n    }\n  }\n  function touchmoved(event) {\n    emitter(this, arguments).moved(event);\n  }\n  function touchended(event) {\n    emitter(this, arguments).ended(event);\n  }\n  function initialize() {\n    var state = this.__brush || {\n      selection: null\n    };\n    state.extent = number2(extent.apply(this, arguments));\n    state.dim = dim;\n    return state;\n  }\n  brush.extent = function (_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant(number2(_)), brush) : extent;\n  };\n  brush.filter = function (_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n  brush.touchable = function (_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), brush) : touchable;\n  };\n  brush.handleSize = function (_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n  brush.keyModifiers = function (_) {\n    return arguments.length ? (keys = !!_, brush) : keys;\n  };\n  brush.on = function () {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n  return brush;\n}","import * as i0 from '@angular/core';\nimport { PLATFORM_ID, Component, ViewEncapsulation, Inject, Input, ViewChild, HostBinding, HostListener, Injectable, EventEmitter, ChangeDetectionStrategy, Output, Directive, NgModule, ContentChild } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { isPlatformBrowser, isPlatformServer, CommonModule } from '@angular/common';\nimport { __decorate } from 'tslib';\nimport { DomPortalOutlet, ComponentPortal } from '@angular/cdk/portal';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { select } from 'd3-selection';\nimport { brushX } from 'd3-brush';\nimport { scaleTime, scaleLinear, scalePoint, scaleOrdinal, scaleQuantile, scaleBand } from 'd3-scale';\nimport { area, curveLinear, line, arc, lineRadial, curveCardinalClosed, pie } from 'd3-shape';\nimport { range, min, max, quantile } from 'd3-array';\nimport { interpolate } from 'd3-interpolate';\nimport { easeSinInOut } from 'd3-ease';\nimport { format } from 'd3-format';\nimport * as d3_color from 'd3-color';\nimport { treemap, stratify } from 'd3-hierarchy';\nimport { sankey, sankeyLeft, sankeyLinkHorizontal } from 'd3-sankey';\nimport { timeFormat } from 'd3-time-format';\n\n/**\n * Throttle a function\n *\n */\nconst _c0 = [\"caretElm\"];\nconst _c1 = a0 => ({\n  model: a0\n});\nfunction TooltipContentComponent_span_4_ng_template_1_Template(rf, ctx) {}\nfunction TooltipContentComponent_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtemplate(1, TooltipContentComponent_span_4_ng_template_1_Template, 0, 0, \"ng-template\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.template)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c1, ctx_r0.context));\n  }\n}\nfunction TooltipContentComponent_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 6);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerHTML\", ctx_r0.title, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction LegendComponent_header_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"header\", 4)(1, \"span\", 5);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.title);\n  }\n}\nfunction LegendComponent_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 6)(1, \"ngx-charts-legend-entry\", 7);\n    i0.ɵɵlistener(\"select\", function LegendComponent_li_4_Template_ngx_charts_legend_entry_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.labelClick.emit($event));\n    })(\"activate\", function LegendComponent_li_4_Template_ngx_charts_legend_entry_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.activate($event));\n    })(\"deactivate\", function LegendComponent_li_4_Template_ngx_charts_legend_entry_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.deactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const entry_r3 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"label\", entry_r3.label)(\"formattedLabel\", entry_r3.formattedLabel)(\"color\", entry_r3.color)(\"isActive\", ctx_r0.isActive(entry_r3));\n  }\n}\nconst _c2 = [\"*\"];\nfunction ChartComponent_ngx_charts_scale_legend_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngx-charts-scale-legend\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"horizontal\", ctx_r0.legendOptions && ctx_r0.legendOptions.position === ctx_r0.LegendPosition.Below)(\"valueRange\", ctx_r0.legendOptions.domain)(\"colors\", ctx_r0.legendOptions.colors)(\"height\", ctx_r0.view[1])(\"width\", ctx_r0.legendWidth);\n  }\n}\nfunction ChartComponent_ngx_charts_legend_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ngx-charts-legend\", 5);\n    i0.ɵɵlistener(\"labelClick\", function ChartComponent_ngx_charts_legend_4_Template_ngx_charts_legend_labelClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.legendLabelClick.emit($event));\n    })(\"labelActivate\", function ChartComponent_ngx_charts_legend_4_Template_ngx_charts_legend_labelActivate_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.legendLabelActivate.emit($event));\n    })(\"labelDeactivate\", function ChartComponent_ngx_charts_legend_4_Template_ngx_charts_legend_labelDeactivate_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.legendLabelDeactivate.emit($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"horizontal\", ctx_r0.legendOptions && ctx_r0.legendOptions.position === ctx_r0.LegendPosition.Below)(\"data\", ctx_r0.legendOptions.domain)(\"title\", ctx_r0.legendOptions.title)(\"colors\", ctx_r0.legendOptions.colors)(\"height\", ctx_r0.view[1])(\"width\", ctx_r0.legendWidth)(\"activeEntries\", ctx_r0.activeEntries);\n  }\n}\nconst _c3 = [\"ngx-charts-axis-label\", \"\"];\nconst _c4 = [\"ticksel\"];\nconst _c5 = [\"ngx-charts-x-axis-ticks\", \"\"];\nfunction XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0__svg_tspan_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"tspan\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tickLine_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    i0.ɵɵattribute(\"y\", i_r2 * 12);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", tickLine_r1, \" \");\n  }\n}\nfunction XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0__svg_tspan_1_Template, 2, 2, \"tspan\", 9);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const tickLines_r3 = ctx.ngIf;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", tickLines_r3);\n  }\n}\nfunction XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0_Template, 2, 1, \"ng-container\", 6);\n  }\n  if (rf & 2) {\n    const tick_r4 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.tickChunks(tick_r4));\n  }\n}\nfunction XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const tickFormatted_r6 = i0.ɵɵnextContext().ngIf;\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.tickTrim(tickFormatted_r6), \" \");\n  }\n}\nfunction XAxisTicksComponent__svg_g_2__svg_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"title\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"text\", 7);\n    i0.ɵɵtemplate(4, XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_container_4_Template, 1, 0, \"ng-container\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5_Template, 1, 1, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor)(7, XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_7_Template, 1, 1, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const tickFormatted_r6 = ctx.ngIf;\n    const tmplMultilineTick_r7 = i0.ɵɵreference(6);\n    const tmplSinglelineTick_r8 = i0.ɵɵreference(8);\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(tickFormatted_r6);\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"text-anchor\", ctx_r4.textAnchor)(\"transform\", ctx_r4.textTransform);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.isWrapTicksSupported)(\"ngIfThen\", tmplMultilineTick_r7)(\"ngIfElse\", tmplSinglelineTick_r8);\n  }\n}\nfunction XAxisTicksComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵtemplate(1, XAxisTicksComponent__svg_g_2__svg_ng_container_1_Template, 9, 6, \"ng-container\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tick_r4 = ctx.$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r4.tickTransform(tick_r4));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.tickFormat(tick_r4));\n  }\n}\nfunction XAxisTicksComponent__svg_g_3__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"line\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r4.gridLineTransform());\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"y1\", -ctx_r4.gridLineHeight);\n  }\n}\nfunction XAxisTicksComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, XAxisTicksComponent__svg_g_3__svg_g_1_Template, 2, 2, \"g\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tick_r9 = ctx.$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r4.tickTransform(tick_r9));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.showGridLines);\n  }\n}\nconst _c6 = [\"ngx-charts-x-axis\", \"\"];\nfunction XAxisComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"dimensionsChanged\", function XAxisComponent__svg_g_1_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.emitTicksHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"trimTicks\", ctx_r1.trimTicks)(\"rotateTicks\", ctx_r1.rotateTicks)(\"maxTickLength\", ctx_r1.maxTickLength)(\"tickFormatting\", ctx_r1.tickFormatting)(\"tickArguments\", ctx_r1.tickArguments)(\"tickStroke\", ctx_r1.tickStroke)(\"scale\", ctx_r1.xScale)(\"orient\", ctx_r1.xOrient)(\"showGridLines\", ctx_r1.showGridLines)(\"gridLineHeight\", ctx_r1.dims.height)(\"width\", ctx_r1.dims.width)(\"tickValues\", ctx_r1.ticks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction XAxisComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"label\", ctx_r1.labelText)(\"offset\", ctx_r1.labelOffset)(\"orient\", ctx_r1.orientation.Bottom)(\"height\", ctx_r1.dims.height)(\"width\", ctx_r1.dims.width);\n  }\n}\nconst _c7 = [\"ngx-charts-y-axis-ticks\", \"\"];\nfunction YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0__svg_ng_container_1__svg_tspan_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"tspan\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tickLine_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext(6);\n    i0.ɵɵattribute(\"y\", i_r2 * (8 + ctx_r2.tickSpacing));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", tickLine_r1, \" \");\n  }\n}\nfunction YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0__svg_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0__svg_ng_container_1__svg_tspan_1_Template, 2, 2, \"tspan\", 11);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const tickLines_r4 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", tickLines_r4);\n  }\n}\nfunction YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0__svg_ng_container_1_Template, 2, 1, \"ng-container\", 10);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const tickLines_r4 = ctx.ngIf;\n    i0.ɵɵnextContext(2);\n    const tmplSinglelineTick_r5 = i0.ɵɵreference(8);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", tickLines_r4.length > 1)(\"ngIfElse\", tmplSinglelineTick_r5);\n  }\n}\nfunction YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0_Template, 2, 2, \"ng-container\", 7);\n  }\n  if (rf & 2) {\n    const tick_r6 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.tickChunks(tick_r6));\n  }\n}\nfunction YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const tickFormatted_r7 = i0.ɵɵnextContext().ngIf;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.tickTrim(tickFormatted_r7), \" \");\n  }\n}\nfunction YAxisTicksComponent__svg_g_2__svg_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"title\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"text\", 8);\n    i0.ɵɵtemplate(4, YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_container_4_Template, 1, 0, \"ng-container\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5_Template, 1, 1, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor)(7, YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_7_Template, 1, 1, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const tickFormatted_r7 = ctx.ngIf;\n    const tmplMultilineTick_r8 = i0.ɵɵreference(6);\n    const tmplSinglelineTick_r5 = i0.ɵɵreference(8);\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(tickFormatted_r7);\n    i0.ɵɵadvance();\n    i0.ɵɵstyleProp(\"font-size\", \"12px\");\n    i0.ɵɵattribute(\"dy\", ctx_r2.dy)(\"x\", ctx_r2.x1)(\"y\", ctx_r2.y1)(\"text-anchor\", ctx_r2.textAnchor);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.wrapTicks)(\"ngIfThen\", tmplMultilineTick_r8)(\"ngIfElse\", tmplSinglelineTick_r5);\n  }\n}\nfunction YAxisTicksComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵtemplate(1, YAxisTicksComponent__svg_g_2__svg_ng_container_1_Template, 9, 10, \"ng-container\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tick_r6 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r2.transform(tick_r6));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.tickFormat(tick_r6));\n  }\n}\nfunction YAxisTicksComponent__svg_path_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"path\", 13);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"d\", ctx_r2.referenceAreaPath)(\"transform\", ctx_r2.gridLineTransform());\n  }\n}\nfunction YAxisTicksComponent__svg_g_4__svg_g_1__svg_line_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"line\", 15);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(3);\n    i0.ɵɵattribute(\"x2\", ctx_r2.gridLineWidth);\n  }\n}\nfunction YAxisTicksComponent__svg_g_4__svg_g_1__svg_line_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"line\", 15);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(3);\n    i0.ɵɵattribute(\"x2\", -ctx_r2.gridLineWidth);\n  }\n}\nfunction YAxisTicksComponent__svg_g_4__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, YAxisTicksComponent__svg_g_4__svg_g_1__svg_line_1_Template, 1, 1, \"line\", 14)(2, YAxisTicksComponent__svg_g_4__svg_g_1__svg_line_2_Template, 1, 1, \"line\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r2.gridLineTransform());\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.orient === ctx_r2.Orientation.Left);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.orient === ctx_r2.Orientation.Right);\n  }\n}\nfunction YAxisTicksComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, YAxisTicksComponent__svg_g_4__svg_g_1_Template, 3, 3, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tick_r9 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r2.transform(tick_r9));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.showGridLines);\n  }\n}\nfunction YAxisTicksComponent__svg_g_5__svg_g_1__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"title\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"text\", 17);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const refLine_r10 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.tickTrim(ctx_r2.tickFormat(refLine_r10.value)));\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"dy\", ctx_r2.dy)(\"y\", -6)(\"x\", ctx_r2.gridLineWidth)(\"text-anchor\", ctx_r2.textAnchor);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", refLine_r10.name, \" \");\n  }\n}\nfunction YAxisTicksComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"line\", 16);\n    i0.ɵɵtemplate(2, YAxisTicksComponent__svg_g_5__svg_g_1__svg_g_2_Template, 5, 6, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const refLine_r10 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r2.transform(refLine_r10.value));\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"x2\", ctx_r2.gridLineWidth)(\"transform\", ctx_r2.gridLineTransform());\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.showRefLabels);\n  }\n}\nfunction YAxisTicksComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, YAxisTicksComponent__svg_g_5__svg_g_1_Template, 3, 4, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.showRefLines);\n  }\n}\nconst _c8 = [\"ngx-charts-y-axis\", \"\"];\nfunction YAxisComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"dimensionsChanged\", function YAxisComponent__svg_g_1_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.emitTicksWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"trimTicks\", ctx_r1.trimTicks)(\"maxTickLength\", ctx_r1.maxTickLength)(\"tickFormatting\", ctx_r1.tickFormatting)(\"tickArguments\", ctx_r1.tickArguments)(\"tickValues\", ctx_r1.ticks)(\"tickStroke\", ctx_r1.tickStroke)(\"scale\", ctx_r1.yScale)(\"orient\", ctx_r1.yOrient)(\"showGridLines\", ctx_r1.showGridLines)(\"gridLineWidth\", ctx_r1.dims.width)(\"referenceLines\", ctx_r1.referenceLines)(\"showRefLines\", ctx_r1.showRefLines)(\"showRefLabels\", ctx_r1.showRefLabels)(\"height\", ctx_r1.dims.height)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction YAxisComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"label\", ctx_r1.labelText)(\"offset\", ctx_r1.labelOffset)(\"orient\", ctx_r1.yOrient)(\"height\", ctx_r1.dims.height)(\"width\", ctx_r1.dims.width);\n  }\n}\nconst _c9 = [\"ngx-charts-circle\", \"\"];\nconst _c10 = [\"ngx-charts-svg-linear-gradient\", \"\"];\nfunction SvgLinearGradientComponent__svg_stop_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"stop\");\n  }\n  if (rf & 2) {\n    const stop_r1 = ctx.$implicit;\n    i0.ɵɵstyleProp(\"stop-color\", stop_r1.color)(\"stop-opacity\", stop_r1.opacity);\n    i0.ɵɵattribute(\"offset\", stop_r1.offset + \"%\");\n  }\n}\nconst _c11 = [\"ngx-charts-circle-series\", \"\"];\nconst _c12 = a0 => ({\n  name: a0\n});\nfunction CircleSeriesComponent__svg_g_0__svg_rect_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"rect\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"x\", ctx_r1.circle.cx - ctx_r1.circle.radius)(\"y\", ctx_r1.circle.cy)(\"width\", ctx_r1.circle.radius * 2)(\"height\", ctx_r1.circle.height)(\"fill\", ctx_r1.gradientFill);\n  }\n}\nfunction CircleSeriesComponent__svg_g_0__svg_rect_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"rect\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"x\", ctx_r1.circle.cx - ctx_r1.circle.radius)(\"y\", ctx_r1.circle.cy)(\"width\", ctx_r1.circle.radius * 2)(\"height\", ctx_r1.circle.height)(\"fill\", ctx_r1.gradientFill);\n  }\n}\nfunction CircleSeriesComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"defs\");\n    i0.ɵɵelement(2, \"g\", 1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, CircleSeriesComponent__svg_g_0__svg_rect_3_Template, 1, 6, \"rect\", 2)(4, CircleSeriesComponent__svg_g_0__svg_rect_4_Template, 1, 5, \"rect\", 2);\n    i0.ɵɵelementStart(5, \"g\", 3);\n    i0.ɵɵlistener(\"select\", function CircleSeriesComponent__svg_g_0_Template_g_select_5_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onClick(ctx_r1.circle.data));\n    })(\"activate\", function CircleSeriesComponent__svg_g_0_Template_g_activate_5_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.activateCircle());\n    })(\"deactivate\", function CircleSeriesComponent__svg_g_0_Template_g_deactivate_5_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.deactivateCircle());\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"orientation\", ctx_r1.barOrientation.Vertical)(\"name\", ctx_r1.gradientId)(\"stops\", ctx_r1.circle.gradientStops);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.isSSR && ctx_r1.barVisible && ctx_r1.type === \"standard\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isSSR && ctx_r1.barVisible && ctx_r1.type === \"standard\");\n    i0.ɵɵadvance();\n    i0.ɵɵclassProp(\"active\", ctx_r1.isActive(i0.ɵɵpureFunction1(20, _c12, ctx_r1.circle.seriesName)));\n    i0.ɵɵproperty(\"cx\", ctx_r1.circle.cx)(\"cy\", ctx_r1.circle.cy)(\"r\", ctx_r1.circle.radius)(\"fill\", ctx_r1.circle.color)(\"pointerEvents\", ctx_r1.circle.value === 0 ? \"none\" : \"all\")(\"data\", ctx_r1.circle.value)(\"classNames\", ctx_r1.circle.classNames)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipPlacement\", ctx_r1.placementTypes.Top)(\"tooltipType\", ctx_r1.styleTypes.tooltip)(\"tooltipTitle\", ctx_r1.tooltipTemplate ? undefined : ctx_r1.getTooltipText(ctx_r1.circle))(\"tooltipTemplate\", ctx_r1.tooltipTemplate)(\"tooltipContext\", ctx_r1.circle.data);\n  }\n}\nconst _c13 = [\"ngx-charts-grid-panel\", \"\"];\nconst _c14 = [\"ngx-charts-grid-panel-series\", \"\"];\nfunction GridPanelSeriesComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 1);\n  }\n  if (rf & 2) {\n    const gridPanel_r1 = ctx.$implicit;\n    i0.ɵɵclassProp(\"grid-panel\", true)(\"odd\", gridPanel_r1.class === \"odd\")(\"even\", gridPanel_r1.class === \"even\");\n    i0.ɵɵproperty(\"height\", gridPanel_r1.height)(\"width\", gridPanel_r1.width)(\"x\", gridPanel_r1.x)(\"y\", gridPanel_r1.y);\n  }\n}\nconst _c15 = [\"ngx-charts-svg-radial-gradient\", \"\"];\nfunction SvgRadialGradientComponent__svg_stop_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"stop\");\n  }\n  if (rf & 2) {\n    const stop_r1 = ctx.$implicit;\n    i0.ɵɵstyleProp(\"stop-color\", stop_r1.color)(\"stop-opacity\", stop_r1.opacity);\n    i0.ɵɵattribute(\"offset\", stop_r1.offset + \"%\");\n  }\n}\nconst _c16 = [\"ngx-charts-area\", \"\"];\nfunction AreaComponent__svg_defs_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"defs\");\n    i0.ɵɵelement(1, \"g\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"orientation\", ctx_r0.barOrientation.Vertical)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.gradientStops);\n  }\n}\nconst _c17 = [\"ngx-charts-count-up\", \"\"];\nconst _c18 = [\"tooltipAnchor\"];\nconst _c19 = [\"ngx-charts-tooltip-area\", \"\"];\nfunction TooltipArea__svg_ng_template_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵelement(1, \"span\", 7);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tooltipItem_r2 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵstyleProp(\"background-color\", tooltipItem_r2.color);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.getToolTipText(tooltipItem_r2), \" \");\n  }\n}\nfunction TooltipArea__svg_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtemplate(1, TooltipArea__svg_ng_template_2_div_1_Template, 3, 3, \"div\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const model_r4 = ctx.model;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", model_r4);\n  }\n}\nconst _c20 = [\"ngx-charts-timeline\", \"\"];\nfunction AdvancedLegendComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"countTo\", ctx_r0.roundedTotal)(\"valueFormatting\", ctx_r0.valueFormatting);\n  }\n}\nfunction AdvancedLegendComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.valueFormatting ? ctx_r0.valueFormatting(ctx_r0.roundedTotal) : ctx_r0.defaultValueFormatting(ctx_r0.roundedTotal), \" \");\n  }\n}\nfunction AdvancedLegendComponent_div_7_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 16);\n  }\n  if (rf & 2) {\n    const legendItem_r3 = i0.ɵɵnextContext().$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"countTo\", legendItem_r3._value)(\"valueFormatting\", ctx_r0.valueFormatting);\n  }\n}\nfunction AdvancedLegendComponent_div_7_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const legendItem_r3 = i0.ɵɵnextContext().$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.valueFormatting ? ctx_r0.valueFormatting(legendItem_r3.value) : ctx_r0.defaultValueFormatting(legendItem_r3.value), \" \");\n  }\n}\nfunction AdvancedLegendComponent_div_7_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 18);\n  }\n  if (rf & 2) {\n    const legendItem_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"countTo\", legendItem_r3.percentage)(\"countSuffix\", \"%\");\n  }\n}\nfunction AdvancedLegendComponent_div_7_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const legendItem_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\"\", legendItem_r3.percentage.toLocaleString(), \"%\");\n  }\n}\nfunction AdvancedLegendComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵlistener(\"mouseenter\", function AdvancedLegendComponent_div_7_Template_div_mouseenter_0_listener() {\n      const legendItem_r3 = i0.ɵɵrestoreView(_r2).$implicit;\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.activate.emit(legendItem_r3.data));\n    })(\"mouseleave\", function AdvancedLegendComponent_div_7_Template_div_mouseleave_0_listener() {\n      const legendItem_r3 = i0.ɵɵrestoreView(_r2).$implicit;\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.deactivate.emit(legendItem_r3.data));\n    })(\"click\", function AdvancedLegendComponent_div_7_Template_div_click_0_listener() {\n      const legendItem_r3 = i0.ɵɵrestoreView(_r2).$implicit;\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.select.emit(legendItem_r3.data));\n    });\n    i0.ɵɵelement(1, \"div\", 10);\n    i0.ɵɵtemplate(2, AdvancedLegendComponent_div_7_div_2_Template, 1, 2, \"div\", 11)(3, AdvancedLegendComponent_div_7_div_3_Template, 2, 1, \"div\", 12);\n    i0.ɵɵelementStart(4, \"div\", 13);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, AdvancedLegendComponent_div_7_div_6_Template, 1, 2, \"div\", 14)(7, AdvancedLegendComponent_div_7_div_7_Template, 2, 1, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const legendItem_r3 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵstyleProp(\"border-left-color\", legendItem_r3.color);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.animations);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.animations);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(legendItem_r3.displayLabel);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.animations);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.animations);\n  }\n}\nconst _c21 = [\"ngx-charts-area-series\", \"\"];\nconst _c22 = [\"tooltipTemplate\"];\nconst _c23 = [\"seriesTooltipTemplate\"];\nconst _c24 = (a0, a1) => [a0, a1];\nfunction AreaChartComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function AreaChartComponent__svg_g_5_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.xScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showXAxisLabel)(\"labelText\", ctx_r1.xAxisLabel)(\"trimTicks\", ctx_r1.trimXAxisTicks)(\"rotateTicks\", ctx_r1.rotateXAxisTicks)(\"maxTickLength\", ctx_r1.maxXAxisTickLength)(\"tickFormatting\", ctx_r1.xAxisTickFormatting)(\"ticks\", ctx_r1.xAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction AreaChartComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 8);\n    i0.ɵɵlistener(\"dimensionsChanged\", function AreaChartComponent__svg_g_6_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction AreaChartComponent__svg_g_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r4 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"baseValue\", ctx_r1.baseValue)(\"colors\", ctx_r1.colors)(\"data\", series_r4)(\"activeEntries\", ctx_r1.activeEntries)(\"scaleType\", ctx_r1.scaleType)(\"gradient\", ctx_r1.gradient)(\"curve\", ctx_r1.curve)(\"animations\", ctx_r1.animations);\n  }\n}\nfunction AreaChartComponent__svg_g_9__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 13);\n    i0.ɵɵlistener(\"select\", function AreaChartComponent__svg_g_9__svg_g_2_Template_g_select_1_listener($event) {\n      const series_r7 = i0.ɵɵrestoreView(_r6).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onClick($event, series_r7));\n    })(\"activate\", function AreaChartComponent__svg_g_9__svg_g_2_Template_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onActivate($event));\n    })(\"deactivate\", function AreaChartComponent__svg_g_9__svg_g_2_Template_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const series_r7 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"colors\", ctx_r1.colors)(\"activeEntries\", ctx_r1.activeEntries)(\"data\", series_r7)(\"scaleType\", ctx_r1.scaleType)(\"visibleValue\", ctx_r1.hoveredVertical)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.tooltipTemplate);\n  }\n}\nfunction AreaChartComponent__svg_g_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 10);\n    i0.ɵɵlistener(\"mouseleave\", function AreaChartComponent__svg_g_9_Template_g_mouseleave_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.hideCircles());\n    });\n    i0.ɵɵelementStart(1, \"g\", 11);\n    i0.ɵɵlistener(\"hover\", function AreaChartComponent__svg_g_9_Template_g_hover_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateHoveredVertical($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, AreaChartComponent__svg_g_9__svg_g_2_Template, 2, 9, \"g\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"dims\", ctx_r1.dims)(\"xSet\", ctx_r1.xSet)(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"results\", ctx_r1.results)(\"colors\", ctx_r1.colors)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.seriesTooltipTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results);\n  }\n}\nfunction AreaChartComponent__svg_g_10__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r9 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.timelineXScale)(\"yScale\", ctx_r1.timelineYScale)(\"baseValue\", ctx_r1.baseValue)(\"colors\", ctx_r1.colors)(\"data\", series_r9)(\"scaleType\", ctx_r1.scaleType)(\"gradient\", ctx_r1.gradient)(\"curve\", ctx_r1.curve)(\"animations\", ctx_r1.animations);\n  }\n}\nfunction AreaChartComponent__svg_g_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 14);\n    i0.ɵɵlistener(\"onDomainChange\", function AreaChartComponent__svg_g_10_Template_g_onDomainChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateDomain($event));\n    });\n    i0.ɵɵtemplate(1, AreaChartComponent__svg_g_10__svg_g_1_Template, 2, 9, \"g\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"results\", ctx_r1.results)(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx_r1.timelineWidth, ctx_r1.height))(\"height\", ctx_r1.timelineHeight)(\"scheme\", ctx_r1.scheme)(\"customColors\", ctx_r1.customColors)(\"legend\", ctx_r1.legend)(\"scaleType\", ctx_r1.scaleType);\n    i0.ɵɵattribute(\"transform\", ctx_r1.timelineTransform);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nfunction AreaChartNormalizedComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function AreaChartNormalizedComponent__svg_g_5_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.xScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showXAxisLabel)(\"labelText\", ctx_r1.xAxisLabel)(\"trimTicks\", ctx_r1.trimXAxisTicks)(\"rotateTicks\", ctx_r1.rotateXAxisTicks)(\"maxTickLength\", ctx_r1.maxXAxisTickLength)(\"tickFormatting\", ctx_r1.xAxisTickFormatting)(\"ticks\", ctx_r1.xAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction AreaChartNormalizedComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 8);\n    i0.ɵɵlistener(\"dimensionsChanged\", function AreaChartNormalizedComponent__svg_g_6_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction AreaChartNormalizedComponent__svg_g_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r4 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"colors\", ctx_r1.colors)(\"data\", series_r4)(\"scaleType\", ctx_r1.scaleType)(\"activeEntries\", ctx_r1.activeEntries)(\"gradient\", ctx_r1.gradient)(\"normalized\", true)(\"curve\", ctx_r1.curve)(\"animations\", ctx_r1.animations);\n  }\n}\nfunction AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 13);\n    i0.ɵɵlistener(\"select\", function AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template_g_select_1_listener($event) {\n      const series_r7 = i0.ɵɵrestoreView(_r6).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onClick($event, series_r7));\n    })(\"activate\", function AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onActivate($event));\n    })(\"deactivate\", function AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const series_r7 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"type\", ctx_r1.seriesType.Stacked)(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"colors\", ctx_r1.colors)(\"activeEntries\", ctx_r1.activeEntries)(\"data\", series_r7)(\"scaleType\", ctx_r1.scaleType)(\"visibleValue\", ctx_r1.hoveredVertical)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.tooltipTemplate);\n  }\n}\nfunction AreaChartNormalizedComponent__svg_g_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 10);\n    i0.ɵɵlistener(\"mouseleave\", function AreaChartNormalizedComponent__svg_g_9_Template_g_mouseleave_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.hideCircles());\n    });\n    i0.ɵɵelementStart(1, \"g\", 11);\n    i0.ɵɵlistener(\"hover\", function AreaChartNormalizedComponent__svg_g_9_Template_g_hover_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateHoveredVertical($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template, 2, 10, \"g\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"dims\", ctx_r1.dims)(\"xSet\", ctx_r1.xSet)(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"results\", ctx_r1.results)(\"colors\", ctx_r1.colors)(\"showPercentage\", true)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.seriesTooltipTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results);\n  }\n}\nfunction AreaChartNormalizedComponent__svg_g_10__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r9 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.timelineXScale)(\"yScale\", ctx_r1.timelineYScale)(\"colors\", ctx_r1.colors)(\"data\", series_r9)(\"scaleType\", ctx_r1.scaleType)(\"gradient\", ctx_r1.gradient)(\"normalized\", true)(\"curve\", ctx_r1.curve)(\"animations\", ctx_r1.animations);\n  }\n}\nfunction AreaChartNormalizedComponent__svg_g_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 14);\n    i0.ɵɵlistener(\"onDomainChange\", function AreaChartNormalizedComponent__svg_g_10_Template_g_onDomainChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateDomain($event));\n    });\n    i0.ɵɵtemplate(1, AreaChartNormalizedComponent__svg_g_10__svg_g_1_Template, 2, 9, \"g\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"results\", ctx_r1.results)(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx_r1.timelineWidth, ctx_r1.height))(\"height\", ctx_r1.timelineHeight)(\"scheme\", ctx_r1.scheme)(\"customColors\", ctx_r1.customColors)(\"legend\", ctx_r1.legend)(\"scaleType\", ctx_r1.scaleType);\n    i0.ɵɵattribute(\"transform\", ctx_r1.timelineTransform);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nconst _c25 = \".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\";\nfunction AreaChartStackedComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function AreaChartStackedComponent__svg_g_5_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.xScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showXAxisLabel)(\"labelText\", ctx_r1.xAxisLabel)(\"trimTicks\", ctx_r1.trimXAxisTicks)(\"rotateTicks\", ctx_r1.rotateXAxisTicks)(\"maxTickLength\", ctx_r1.maxXAxisTickLength)(\"tickFormatting\", ctx_r1.xAxisTickFormatting)(\"ticks\", ctx_r1.xAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction AreaChartStackedComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 8);\n    i0.ɵɵlistener(\"dimensionsChanged\", function AreaChartStackedComponent__svg_g_6_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction AreaChartStackedComponent__svg_g_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r4 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"colors\", ctx_r1.colors)(\"data\", series_r4)(\"scaleType\", ctx_r1.scaleType)(\"gradient\", ctx_r1.gradient)(\"activeEntries\", ctx_r1.activeEntries)(\"stacked\", true)(\"curve\", ctx_r1.curve)(\"animations\", ctx_r1.animations);\n  }\n}\nfunction AreaChartStackedComponent__svg_g_9__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 12);\n    i0.ɵɵlistener(\"select\", function AreaChartStackedComponent__svg_g_9__svg_g_2_Template_g_select_1_listener($event) {\n      const series_r7 = i0.ɵɵrestoreView(_r6).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onClick($event, series_r7));\n    })(\"activate\", function AreaChartStackedComponent__svg_g_9__svg_g_2_Template_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onActivate($event));\n    })(\"deactivate\", function AreaChartStackedComponent__svg_g_9__svg_g_2_Template_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const series_r7 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"type\", ctx_r1.seriesType.Stacked)(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"colors\", ctx_r1.colors)(\"activeEntries\", ctx_r1.activeEntries)(\"data\", series_r7)(\"scaleType\", ctx_r1.scaleType)(\"visibleValue\", ctx_r1.hoveredVertical)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.tooltipTemplate);\n  }\n}\nfunction AreaChartStackedComponent__svg_g_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 10);\n    i0.ɵɵlistener(\"mouseleave\", function AreaChartStackedComponent__svg_g_9_Template_g_mouseleave_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.hideCircles());\n    });\n    i0.ɵɵelementStart(1, \"g\", 11);\n    i0.ɵɵlistener(\"hover\", function AreaChartStackedComponent__svg_g_9_Template_g_hover_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateHoveredVertical($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, AreaChartStackedComponent__svg_g_9__svg_g_2_Template, 2, 10, \"g\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"dims\", ctx_r1.dims)(\"xSet\", ctx_r1.xSet)(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"results\", ctx_r1.results)(\"colors\", ctx_r1.colors)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.seriesTooltipTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nfunction AreaChartStackedComponent__svg_g_10__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r9 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.timelineXScale)(\"yScale\", ctx_r1.timelineYScale)(\"colors\", ctx_r1.colors)(\"data\", series_r9)(\"scaleType\", ctx_r1.scaleType)(\"gradient\", ctx_r1.gradient)(\"stacked\", true)(\"curve\", ctx_r1.curve)(\"animations\", ctx_r1.animations);\n  }\n}\nfunction AreaChartStackedComponent__svg_g_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 13);\n    i0.ɵɵlistener(\"onDomainChange\", function AreaChartStackedComponent__svg_g_10_Template_g_onDomainChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateDomain($event));\n    });\n    i0.ɵɵtemplate(1, AreaChartStackedComponent__svg_g_10__svg_g_1_Template, 2, 9, \"g\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"results\", ctx_r1.results)(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx_r1.timelineWidth, ctx_r1.height))(\"height\", ctx_r1.timelineHeight)(\"scheme\", ctx_r1.scheme)(\"customColors\", ctx_r1.customColors)(\"legend\", ctx_r1.legend)(\"scaleType\", ctx_r1.scaleType);\n    i0.ɵɵattribute(\"transform\", ctx_r1.timelineTransform);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nconst _c26 = [\"ngx-charts-bar\", \"\"];\nfunction BarComponent__svg_defs_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"defs\");\n    i0.ɵɵelement(1, \"g\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"orientation\", ctx_r0.orientation)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.gradientStops);\n  }\n}\nconst _c27 = [\"ngx-charts-bar-label\", \"\"];\nconst _c28 = [\"ngx-charts-series-horizontal\", \"\"];\nfunction SeriesHorizontal__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function SeriesHorizontal__svg_g_0_Template_g_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.click($event));\n    })(\"activate\", function SeriesHorizontal__svg_g_0_Template_g_activate_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.activate.emit($event));\n    })(\"deactivate\", function SeriesHorizontal__svg_g_0_Template_g_deactivate_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.deactivate.emit($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const bar_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"@animationState\", \"active\")(\"width\", bar_r3.width)(\"height\", bar_r3.height)(\"x\", bar_r3.x)(\"y\", bar_r3.y)(\"fill\", bar_r3.color)(\"stops\", bar_r3.gradientStops)(\"data\", bar_r3.data)(\"orientation\", ctx_r1.barOrientation.Horizontal)(\"roundEdges\", bar_r3.roundEdges)(\"gradient\", ctx_r1.gradient)(\"isActive\", ctx_r1.isActive(bar_r3.data))(\"ariaLabel\", bar_r3.ariaLabel)(\"animations\", ctx_r1.animations)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipPlacement\", ctx_r1.tooltipPlacement)(\"tooltipType\", ctx_r1.tooltipType)(\"tooltipTitle\", ctx_r1.tooltipTemplate ? undefined : bar_r3.tooltipText)(\"tooltipTemplate\", ctx_r1.tooltipTemplate)(\"tooltipContext\", bar_r3.data)(\"noBarWhenZero\", ctx_r1.noBarWhenZero);\n  }\n}\nfunction SeriesHorizontal__svg_g_1__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 4);\n    i0.ɵɵlistener(\"dimensionsChanged\", function SeriesHorizontal__svg_g_1__svg_g_1_Template_g_dimensionsChanged_0_listener($event) {\n      const i_r5 = i0.ɵɵrestoreView(_r4).index;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.dataLabelWidthChanged.emit({\n        size: $event,\n        index: i_r5\n      }));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const b_r6 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"barX\", b_r6.x)(\"barY\", b_r6.y)(\"barWidth\", b_r6.width)(\"barHeight\", b_r6.height)(\"value\", b_r6.total)(\"valueFormatting\", ctx_r1.dataLabelFormatting)(\"orientation\", ctx_r1.barOrientation.Horizontal);\n  }\n}\nfunction SeriesHorizontal__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, SeriesHorizontal__svg_g_1__svg_g_1_Template, 1, 7, \"g\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.barsForDataLabels)(\"ngForTrackBy\", ctx_r1.trackDataLabelBy);\n  }\n}\nfunction BarHorizontalComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontalComponent__svg_g_2_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.xScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showXAxisLabel)(\"labelText\", ctx_r1.xAxisLabel)(\"trimTicks\", ctx_r1.trimXAxisTicks)(\"rotateTicks\", ctx_r1.rotateXAxisTicks)(\"maxTickLength\", ctx_r1.maxXAxisTickLength)(\"tickFormatting\", ctx_r1.xAxisTickFormatting)(\"ticks\", ctx_r1.xAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarHorizontalComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontalComponent__svg_g_3_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"yAxisOffset\", ctx_r1.dataLabelMaxWidth.negative)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarHorizontal2DComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontal2DComponent__svg_g_3_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.valueScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showXAxisLabel)(\"labelText\", ctx_r1.xAxisLabel)(\"trimTicks\", ctx_r1.trimXAxisTicks)(\"rotateTicks\", ctx_r1.rotateXAxisTicks)(\"maxTickLength\", ctx_r1.maxXAxisTickLength)(\"tickFormatting\", ctx_r1.xAxisTickFormatting)(\"ticks\", ctx_r1.xAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarHorizontal2DComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontal2DComponent__svg_g_4_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.groupScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"yAxisOffset\", ctx_r1.dataLabelMaxWidth.negative)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarHorizontal2DComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 9);\n    i0.ɵɵlistener(\"select\", function BarHorizontal2DComponent__svg_g_5__svg_g_1_Template_g_select_1_listener($event) {\n      const group_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onClick($event, group_r5));\n    })(\"activate\", function BarHorizontal2DComponent__svg_g_5__svg_g_1_Template_g_activate_1_listener($event) {\n      const group_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onActivate($event, group_r5));\n    })(\"deactivate\", function BarHorizontal2DComponent__svg_g_5__svg_g_1_Template_g_deactivate_1_listener($event) {\n      const group_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDeactivate($event, group_r5));\n    })(\"dataLabelWidthChanged\", function BarHorizontal2DComponent__svg_g_5__svg_g_1_Template_g_dataLabelWidthChanged_1_listener($event) {\n      const index_r6 = i0.ɵɵrestoreView(_r4).index;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDataLabelMaxWidthChanged($event, index_r6));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const group_r5 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"transform\", ctx_r1.groupTransform(group_r5));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.valueScale)(\"activeEntries\", ctx_r1.activeEntries)(\"yScale\", ctx_r1.innerScale)(\"colors\", ctx_r1.colors)(\"series\", group_r5.series)(\"dims\", ctx_r1.dims)(\"gradient\", ctx_r1.gradient)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.tooltipTemplate)(\"seriesName\", group_r5.name)(\"roundEdges\", ctx_r1.roundEdges)(\"animations\", ctx_r1.animations)(\"showDataLabel\", ctx_r1.showDataLabel)(\"dataLabelFormatting\", ctx_r1.dataLabelFormatting)(\"noBarWhenZero\", ctx_r1.noBarWhenZero);\n  }\n}\nfunction BarHorizontal2DComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarHorizontal2DComponent__svg_g_5__svg_g_1_Template, 2, 17, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nfunction BarHorizontal2DComponent__svg_g_6__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 9);\n    i0.ɵɵlistener(\"select\", function BarHorizontal2DComponent__svg_g_6__svg_g_1_Template_g_select_1_listener($event) {\n      const group_r8 = i0.ɵɵrestoreView(_r7).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onClick($event, group_r8));\n    })(\"activate\", function BarHorizontal2DComponent__svg_g_6__svg_g_1_Template_g_activate_1_listener($event) {\n      const group_r8 = i0.ɵɵrestoreView(_r7).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onActivate($event, group_r8));\n    })(\"deactivate\", function BarHorizontal2DComponent__svg_g_6__svg_g_1_Template_g_deactivate_1_listener($event) {\n      const group_r8 = i0.ɵɵrestoreView(_r7).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDeactivate($event, group_r8));\n    })(\"dataLabelWidthChanged\", function BarHorizontal2DComponent__svg_g_6__svg_g_1_Template_g_dataLabelWidthChanged_1_listener($event) {\n      const index_r9 = i0.ɵɵrestoreView(_r7).index;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDataLabelMaxWidthChanged($event, index_r9));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const group_r8 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r1.groupTransform(group_r8));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.valueScale)(\"activeEntries\", ctx_r1.activeEntries)(\"yScale\", ctx_r1.innerScale)(\"colors\", ctx_r1.colors)(\"series\", group_r8.series)(\"dims\", ctx_r1.dims)(\"gradient\", ctx_r1.gradient)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.tooltipTemplate)(\"seriesName\", group_r8.name)(\"roundEdges\", ctx_r1.roundEdges)(\"animations\", ctx_r1.animations)(\"showDataLabel\", ctx_r1.showDataLabel)(\"dataLabelFormatting\", ctx_r1.dataLabelFormatting)(\"noBarWhenZero\", ctx_r1.noBarWhenZero);\n  }\n}\nfunction BarHorizontal2DComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarHorizontal2DComponent__svg_g_6__svg_g_1_Template, 2, 16, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nfunction BarHorizontalNormalizedComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontalNormalizedComponent__svg_g_2_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.xScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showXAxisLabel)(\"labelText\", ctx_r1.xAxisLabel)(\"trimTicks\", ctx_r1.trimXAxisTicks)(\"rotateTicks\", ctx_r1.rotateXAxisTicks)(\"maxTickLength\", ctx_r1.maxXAxisTickLength)(\"tickFormatting\", ctx_r1.xAxisTickFormatting)(\"ticks\", ctx_r1.xAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarHorizontalNormalizedComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontalNormalizedComponent__svg_g_3_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template_g_select_1_listener($event) {\n      const group_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onClick($event, group_r5));\n    })(\"activate\", function BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template_g_activate_1_listener($event) {\n      const group_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onActivate($event, group_r5));\n    })(\"deactivate\", function BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template_g_deactivate_1_listener($event) {\n      const group_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDeactivate($event, group_r5));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const group_r5 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"transform\", ctx_r1.groupTransform(group_r5));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"type\", ctx_r1.barChartType.Normalized)(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"activeEntries\", ctx_r1.activeEntries)(\"colors\", ctx_r1.colors)(\"series\", group_r5.series)(\"dims\", ctx_r1.dims)(\"gradient\", ctx_r1.gradient)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.tooltipTemplate)(\"seriesName\", group_r5.name)(\"animations\", ctx_r1.animations)(\"noBarWhenZero\", ctx_r1.noBarWhenZero);\n  }\n}\nfunction BarHorizontalNormalizedComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template, 2, 15, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nfunction BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template_g_select_1_listener($event) {\n      const group_r7 = i0.ɵɵrestoreView(_r6).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onClick($event, group_r7));\n    })(\"activate\", function BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template_g_activate_1_listener($event) {\n      const group_r7 = i0.ɵɵrestoreView(_r6).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onActivate($event, group_r7));\n    })(\"deactivate\", function BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template_g_deactivate_1_listener($event) {\n      const group_r7 = i0.ɵɵrestoreView(_r6).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDeactivate($event, group_r7));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const group_r7 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r1.groupTransform(group_r7));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"type\", ctx_r1.barChartType.Normalized)(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"activeEntries\", ctx_r1.activeEntries)(\"colors\", ctx_r1.colors)(\"series\", group_r7.series)(\"dims\", ctx_r1.dims)(\"gradient\", ctx_r1.gradient)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.tooltipTemplate)(\"seriesName\", group_r7.name)(\"animations\", ctx_r1.animations)(\"noBarWhenZero\", ctx_r1.noBarWhenZero);\n  }\n}\nfunction BarHorizontalNormalizedComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template, 2, 14, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nfunction BarHorizontalStackedComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontalStackedComponent__svg_g_2_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.xScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showXAxisLabel)(\"labelText\", ctx_r1.xAxisLabel)(\"trimTicks\", ctx_r1.trimXAxisTicks)(\"rotateTicks\", ctx_r1.rotateXAxisTicks)(\"maxTickLength\", ctx_r1.maxXAxisTickLength)(\"tickFormatting\", ctx_r1.xAxisTickFormatting)(\"ticks\", ctx_r1.xAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarHorizontalStackedComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontalStackedComponent__svg_g_3_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"yAxisOffset\", ctx_r1.dataLabelMaxWidth.negative)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template_g_select_1_listener($event) {\n      const group_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onClick($event, group_r5));\n    })(\"activate\", function BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template_g_activate_1_listener($event) {\n      const group_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onActivate($event, group_r5));\n    })(\"deactivate\", function BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template_g_deactivate_1_listener($event) {\n      const group_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDeactivate($event, group_r5));\n    })(\"dataLabelWidthChanged\", function BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template_g_dataLabelWidthChanged_1_listener($event) {\n      const index_r6 = i0.ɵɵrestoreView(_r4).index;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDataLabelMaxWidthChanged($event, index_r6));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const group_r5 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"transform\", ctx_r1.groupTransform(group_r5));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"type\", ctx_r1.barChartType.Stacked)(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"colors\", ctx_r1.colors)(\"series\", group_r5.series)(\"activeEntries\", ctx_r1.activeEntries)(\"dims\", ctx_r1.dims)(\"gradient\", ctx_r1.gradient)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.tooltipTemplate)(\"seriesName\", group_r5.name)(\"animations\", ctx_r1.animations)(\"showDataLabel\", ctx_r1.showDataLabel)(\"dataLabelFormatting\", ctx_r1.dataLabelFormatting)(\"noBarWhenZero\", ctx_r1.noBarWhenZero);\n  }\n}\nfunction BarHorizontalStackedComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template, 2, 17, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nfunction BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template_g_select_1_listener($event) {\n      const group_r8 = i0.ɵɵrestoreView(_r7).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onClick($event, group_r8));\n    })(\"activate\", function BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template_g_activate_1_listener($event) {\n      const group_r8 = i0.ɵɵrestoreView(_r7).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onActivate($event, group_r8));\n    })(\"deactivate\", function BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template_g_deactivate_1_listener($event) {\n      const group_r8 = i0.ɵɵrestoreView(_r7).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDeactivate($event, group_r8));\n    })(\"dataLabelWidthChanged\", function BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template_g_dataLabelWidthChanged_1_listener($event) {\n      const index_r9 = i0.ɵɵrestoreView(_r7).index;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDataLabelMaxWidthChanged($event, index_r9));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const group_r8 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r1.groupTransform(group_r8));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"type\", ctx_r1.barChartType.Stacked)(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"colors\", ctx_r1.colors)(\"series\", group_r8.series)(\"activeEntries\", ctx_r1.activeEntries)(\"dims\", ctx_r1.dims)(\"gradient\", ctx_r1.gradient)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.tooltipTemplate)(\"seriesName\", group_r8.name)(\"animations\", ctx_r1.animations)(\"showDataLabel\", ctx_r1.showDataLabel)(\"dataLabelFormatting\", ctx_r1.dataLabelFormatting)(\"noBarWhenZero\", ctx_r1.noBarWhenZero);\n  }\n}\nfunction BarHorizontalStackedComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template, 2, 16, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nconst _c29 = [\"ngx-charts-series-vertical\", \"\"];\nfunction SeriesVerticalComponent__svg_g_0__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function SeriesVerticalComponent__svg_g_0__svg_g_1_Template_g_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onClick($event));\n    })(\"activate\", function SeriesVerticalComponent__svg_g_0__svg_g_1_Template_g_activate_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.activate.emit($event));\n    })(\"deactivate\", function SeriesVerticalComponent__svg_g_0__svg_g_1_Template_g_deactivate_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.deactivate.emit($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const bar_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\")(\"@.disabled\", !ctx_r1.animations)(\"width\", bar_r3.width)(\"height\", bar_r3.height)(\"x\", bar_r3.x)(\"y\", bar_r3.y)(\"fill\", bar_r3.color)(\"stops\", bar_r3.gradientStops)(\"data\", bar_r3.data)(\"orientation\", ctx_r1.barOrientation.Vertical)(\"roundEdges\", bar_r3.roundEdges)(\"gradient\", ctx_r1.gradient)(\"ariaLabel\", bar_r3.ariaLabel)(\"isActive\", ctx_r1.isActive(bar_r3.data))(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipPlacement\", ctx_r1.tooltipPlacement)(\"tooltipType\", ctx_r1.tooltipType)(\"tooltipTitle\", ctx_r1.tooltipTemplate ? undefined : bar_r3.tooltipText)(\"tooltipTemplate\", ctx_r1.tooltipTemplate)(\"tooltipContext\", bar_r3.data)(\"noBarWhenZero\", ctx_r1.noBarWhenZero)(\"animations\", ctx_r1.animations);\n  }\n}\nfunction SeriesVerticalComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, SeriesVerticalComponent__svg_g_0__svg_g_1_Template, 1, 22, \"g\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.bars)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nfunction SeriesVerticalComponent__svg_g_1__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function SeriesVerticalComponent__svg_g_1__svg_g_1_Template_g_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onClick($event));\n    })(\"activate\", function SeriesVerticalComponent__svg_g_1__svg_g_1_Template_g_activate_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.activate.emit($event));\n    })(\"deactivate\", function SeriesVerticalComponent__svg_g_1__svg_g_1_Template_g_deactivate_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.deactivate.emit($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const bar_r5 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"width\", bar_r5.width)(\"height\", bar_r5.height)(\"x\", bar_r5.x)(\"y\", bar_r5.y)(\"fill\", bar_r5.color)(\"stops\", bar_r5.gradientStops)(\"data\", bar_r5.data)(\"orientation\", ctx_r1.barOrientation.Vertical)(\"roundEdges\", bar_r5.roundEdges)(\"gradient\", ctx_r1.gradient)(\"ariaLabel\", bar_r5.ariaLabel)(\"isActive\", ctx_r1.isActive(bar_r5.data))(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipPlacement\", ctx_r1.tooltipPlacement)(\"tooltipType\", ctx_r1.tooltipType)(\"tooltipTitle\", ctx_r1.tooltipTemplate ? undefined : bar_r5.tooltipText)(\"tooltipTemplate\", ctx_r1.tooltipTemplate)(\"tooltipContext\", bar_r5.data)(\"noBarWhenZero\", ctx_r1.noBarWhenZero)(\"animations\", ctx_r1.animations);\n  }\n}\nfunction SeriesVerticalComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, SeriesVerticalComponent__svg_g_1__svg_g_1_Template, 1, 20, \"g\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.bars)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nfunction SeriesVerticalComponent__svg_g_2__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 4);\n    i0.ɵɵlistener(\"dimensionsChanged\", function SeriesVerticalComponent__svg_g_2__svg_g_1_Template_g_dimensionsChanged_0_listener($event) {\n      const i_r7 = i0.ɵɵrestoreView(_r6).index;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.dataLabelHeightChanged.emit({\n        size: $event,\n        index: i_r7\n      }));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const b_r8 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"barX\", b_r8.x)(\"barY\", b_r8.y)(\"barWidth\", b_r8.width)(\"barHeight\", b_r8.height)(\"value\", b_r8.total)(\"valueFormatting\", ctx_r1.dataLabelFormatting)(\"orientation\", ctx_r1.barOrientation.Vertical);\n  }\n}\nfunction SeriesVerticalComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, SeriesVerticalComponent__svg_g_2__svg_g_1_Template, 1, 7, \"g\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.barsForDataLabels)(\"ngForTrackBy\", ctx_r1.trackDataLabelBy);\n  }\n}\nfunction BarVerticalComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVerticalComponent__svg_g_2_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.xScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showXAxisLabel)(\"labelText\", ctx_r1.xAxisLabel)(\"trimTicks\", ctx_r1.trimXAxisTicks)(\"rotateTicks\", ctx_r1.rotateXAxisTicks)(\"maxTickLength\", ctx_r1.maxXAxisTickLength)(\"tickFormatting\", ctx_r1.xAxisTickFormatting)(\"ticks\", ctx_r1.xAxisTicks)(\"xAxisOffset\", ctx_r1.dataLabelMaxHeight.negative)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarVerticalComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVerticalComponent__svg_g_3_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarVertical2DComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVertical2DComponent__svg_g_3_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.groupScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showXAxisLabel)(\"labelText\", ctx_r1.xAxisLabel)(\"trimTicks\", ctx_r1.trimXAxisTicks)(\"rotateTicks\", ctx_r1.rotateXAxisTicks)(\"maxTickLength\", ctx_r1.maxXAxisTickLength)(\"tickFormatting\", ctx_r1.xAxisTickFormatting)(\"ticks\", ctx_r1.xAxisTicks)(\"xAxisOffset\", ctx_r1.dataLabelMaxHeight.negative)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarVertical2DComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVertical2DComponent__svg_g_4_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.valueScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarVertical2DComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 9);\n    i0.ɵɵlistener(\"select\", function BarVertical2DComponent__svg_g_5__svg_g_1_Template_g_select_0_listener($event) {\n      const group_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onClick($event, group_r5));\n    })(\"activate\", function BarVertical2DComponent__svg_g_5__svg_g_1_Template_g_activate_0_listener($event) {\n      const group_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onActivate($event, group_r5));\n    })(\"deactivate\", function BarVertical2DComponent__svg_g_5__svg_g_1_Template_g_deactivate_0_listener($event) {\n      const group_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDeactivate($event, group_r5));\n    })(\"dataLabelHeightChanged\", function BarVertical2DComponent__svg_g_5__svg_g_1_Template_g_dataLabelHeightChanged_0_listener($event) {\n      const index_r6 = i0.ɵɵrestoreView(_r4).index;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDataLabelMaxHeightChanged($event, index_r6));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const group_r5 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\")(\"activeEntries\", ctx_r1.activeEntries)(\"xScale\", ctx_r1.innerScale)(\"yScale\", ctx_r1.valueScale)(\"colors\", ctx_r1.colors)(\"series\", group_r5.series)(\"dims\", ctx_r1.dims)(\"gradient\", ctx_r1.gradient)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.tooltipTemplate)(\"showDataLabel\", ctx_r1.showDataLabel)(\"dataLabelFormatting\", ctx_r1.dataLabelFormatting)(\"seriesName\", group_r5.name)(\"roundEdges\", ctx_r1.roundEdges)(\"animations\", ctx_r1.animations)(\"noBarWhenZero\", ctx_r1.noBarWhenZero);\n    i0.ɵɵattribute(\"transform\", ctx_r1.groupTransform(group_r5));\n  }\n}\nfunction BarVertical2DComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarVertical2DComponent__svg_g_5__svg_g_1_Template, 1, 17, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nfunction BarVertical2DComponent__svg_g_6__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 9);\n    i0.ɵɵlistener(\"select\", function BarVertical2DComponent__svg_g_6__svg_g_1_Template_g_select_0_listener($event) {\n      const group_r8 = i0.ɵɵrestoreView(_r7).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onClick($event, group_r8));\n    })(\"activate\", function BarVertical2DComponent__svg_g_6__svg_g_1_Template_g_activate_0_listener($event) {\n      const group_r8 = i0.ɵɵrestoreView(_r7).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onActivate($event, group_r8));\n    })(\"deactivate\", function BarVertical2DComponent__svg_g_6__svg_g_1_Template_g_deactivate_0_listener($event) {\n      const group_r8 = i0.ɵɵrestoreView(_r7).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDeactivate($event, group_r8));\n    })(\"dataLabelHeightChanged\", function BarVertical2DComponent__svg_g_6__svg_g_1_Template_g_dataLabelHeightChanged_0_listener($event) {\n      const index_r9 = i0.ɵɵrestoreView(_r7).index;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDataLabelMaxHeightChanged($event, index_r9));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const group_r8 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"activeEntries\", ctx_r1.activeEntries)(\"xScale\", ctx_r1.innerScale)(\"yScale\", ctx_r1.valueScale)(\"colors\", ctx_r1.colors)(\"series\", group_r8.series)(\"dims\", ctx_r1.dims)(\"gradient\", ctx_r1.gradient)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.tooltipTemplate)(\"showDataLabel\", ctx_r1.showDataLabel)(\"dataLabelFormatting\", ctx_r1.dataLabelFormatting)(\"seriesName\", group_r8.name)(\"roundEdges\", ctx_r1.roundEdges)(\"animations\", ctx_r1.animations)(\"noBarWhenZero\", ctx_r1.noBarWhenZero);\n    i0.ɵɵattribute(\"transform\", ctx_r1.groupTransform(group_r8));\n  }\n}\nfunction BarVertical2DComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarVertical2DComponent__svg_g_6__svg_g_1_Template, 1, 16, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nfunction BarVerticalNormalizedComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVerticalNormalizedComponent__svg_g_2_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.xScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showXAxisLabel)(\"labelText\", ctx_r1.xAxisLabel)(\"trimTicks\", ctx_r1.trimXAxisTicks)(\"rotateTicks\", ctx_r1.rotateXAxisTicks)(\"maxTickLength\", ctx_r1.maxXAxisTickLength)(\"tickFormatting\", ctx_r1.xAxisTickFormatting)(\"ticks\", ctx_r1.xAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarVerticalNormalizedComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVerticalNormalizedComponent__svg_g_3_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template_g_select_1_listener($event) {\n      const group_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onClick($event, group_r5));\n    })(\"activate\", function BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template_g_activate_1_listener($event) {\n      const group_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onActivate($event, group_r5));\n    })(\"deactivate\", function BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template_g_deactivate_1_listener($event) {\n      const group_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDeactivate($event, group_r5));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const group_r5 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"transform\", ctx_r1.groupTransform(group_r5));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"type\", ctx_r1.barChartType.Normalized)(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"activeEntries\", ctx_r1.activeEntries)(\"colors\", ctx_r1.colors)(\"series\", group_r5.series)(\"dims\", ctx_r1.dims)(\"gradient\", ctx_r1.gradient)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.tooltipTemplate)(\"seriesName\", group_r5.name)(\"animations\", ctx_r1.animations)(\"noBarWhenZero\", ctx_r1.noBarWhenZero);\n  }\n}\nfunction BarVerticalNormalizedComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template, 2, 15, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nfunction BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template_g_select_1_listener($event) {\n      const group_r7 = i0.ɵɵrestoreView(_r6).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onClick($event, group_r7));\n    })(\"activate\", function BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template_g_activate_1_listener($event) {\n      const group_r7 = i0.ɵɵrestoreView(_r6).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onActivate($event, group_r7));\n    })(\"deactivate\", function BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template_g_deactivate_1_listener($event) {\n      const group_r7 = i0.ɵɵrestoreView(_r6).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDeactivate($event, group_r7));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const group_r7 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r1.groupTransform(group_r7));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"type\", ctx_r1.barChartType.Normalized)(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"activeEntries\", ctx_r1.activeEntries)(\"colors\", ctx_r1.colors)(\"series\", group_r7.series)(\"dims\", ctx_r1.dims)(\"gradient\", ctx_r1.gradient)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.tooltipTemplate)(\"seriesName\", group_r7.name)(\"animations\", ctx_r1.animations)(\"noBarWhenZero\", ctx_r1.noBarWhenZero);\n  }\n}\nfunction BarVerticalNormalizedComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template, 2, 14, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nfunction BarVerticalStackedComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVerticalStackedComponent__svg_g_2_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.xScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showXAxisLabel)(\"labelText\", ctx_r1.xAxisLabel)(\"trimTicks\", ctx_r1.trimXAxisTicks)(\"rotateTicks\", ctx_r1.rotateXAxisTicks)(\"maxTickLength\", ctx_r1.maxXAxisTickLength)(\"tickFormatting\", ctx_r1.xAxisTickFormatting)(\"ticks\", ctx_r1.xAxisTicks)(\"xAxisOffset\", ctx_r1.dataLabelMaxHeight.negative)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarVerticalStackedComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVerticalStackedComponent__svg_g_3_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarVerticalStackedComponent__svg_g_4__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarVerticalStackedComponent__svg_g_4__svg_g_1_Template_g_select_1_listener($event) {\n      const group_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onClick($event, group_r5));\n    })(\"activate\", function BarVerticalStackedComponent__svg_g_4__svg_g_1_Template_g_activate_1_listener($event) {\n      const group_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onActivate($event, group_r5));\n    })(\"deactivate\", function BarVerticalStackedComponent__svg_g_4__svg_g_1_Template_g_deactivate_1_listener($event) {\n      const group_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDeactivate($event, group_r5));\n    })(\"dataLabelHeightChanged\", function BarVerticalStackedComponent__svg_g_4__svg_g_1_Template_g_dataLabelHeightChanged_1_listener($event) {\n      const index_r6 = i0.ɵɵrestoreView(_r4).index;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDataLabelMaxHeightChanged($event, index_r6));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const group_r5 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"transform\", ctx_r1.groupTransform(group_r5));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"type\", ctx_r1.barChartType.Stacked)(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"activeEntries\", ctx_r1.activeEntries)(\"colors\", ctx_r1.colors)(\"series\", group_r5.series)(\"dims\", ctx_r1.dims)(\"gradient\", ctx_r1.gradient)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.tooltipTemplate)(\"showDataLabel\", ctx_r1.showDataLabel)(\"dataLabelFormatting\", ctx_r1.dataLabelFormatting)(\"seriesName\", group_r5.name)(\"animations\", ctx_r1.animations)(\"noBarWhenZero\", ctx_r1.noBarWhenZero);\n  }\n}\nfunction BarVerticalStackedComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarVerticalStackedComponent__svg_g_4__svg_g_1_Template, 2, 17, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nfunction BarVerticalStackedComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarVerticalStackedComponent__svg_g_5__svg_g_1_Template_g_select_1_listener($event) {\n      const group_r8 = i0.ɵɵrestoreView(_r7).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onClick($event, group_r8));\n    })(\"activate\", function BarVerticalStackedComponent__svg_g_5__svg_g_1_Template_g_activate_1_listener($event) {\n      const group_r8 = i0.ɵɵrestoreView(_r7).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onActivate($event, group_r8));\n    })(\"deactivate\", function BarVerticalStackedComponent__svg_g_5__svg_g_1_Template_g_deactivate_1_listener($event) {\n      const group_r8 = i0.ɵɵrestoreView(_r7).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDeactivate($event, group_r8));\n    })(\"dataLabelHeightChanged\", function BarVerticalStackedComponent__svg_g_5__svg_g_1_Template_g_dataLabelHeightChanged_1_listener($event) {\n      const index_r9 = i0.ɵɵrestoreView(_r7).index;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDataLabelMaxHeightChanged($event, index_r9));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const group_r8 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r1.groupTransform(group_r8));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"type\", ctx_r1.barChartType.Stacked)(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"activeEntries\", ctx_r1.activeEntries)(\"colors\", ctx_r1.colors)(\"series\", group_r8.series)(\"dims\", ctx_r1.dims)(\"gradient\", ctx_r1.gradient)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.tooltipTemplate)(\"showDataLabel\", ctx_r1.showDataLabel)(\"dataLabelFormatting\", ctx_r1.dataLabelFormatting)(\"seriesName\", group_r8.name)(\"animations\", ctx_r1.animations)(\"noBarWhenZero\", ctx_r1.noBarWhenZero);\n  }\n}\nfunction BarVerticalStackedComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarVerticalStackedComponent__svg_g_5__svg_g_1_Template, 2, 16, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nconst _c30 = [\"ngx-charts-box\", \"\"];\nfunction BoxComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 5);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"orientation\", ctx_r0.BarOrientation.Vertical)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.gradientStops);\n  }\n}\nfunction BoxComponent__svg_line_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"line\", 6);\n  }\n  if (rf & 2) {\n    const line_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"hidden\", ctx_r0.hideBar);\n    i0.ɵɵattribute(\"x1\", line_r2.v1.x)(\"y1\", line_r2.v1.y)(\"x2\", line_r2.v2.x)(\"y2\", line_r2.v2.y)(\"stroke\", ctx_r0.strokeColor)(\"stroke-width\", i_r3 === 2 ? ctx_r0.medianLineWidth : ctx_r0.whiskerStrokeWidth)(\"mask\", i_r3 ? undefined : ctx_r0.maskLine);\n  }\n}\nconst _c31 = [\"ngx-charts-box-series\", \"\"];\nfunction BoxChartComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 5);\n    i0.ɵɵlistener(\"activate\", function BoxChartComponent__svg_g_5_Template_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onActivate($event));\n    })(\"deactivate\", function BoxChartComponent__svg_g_5_Template_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onDeactivate($event));\n    })(\"select\", function BoxChartComponent__svg_g_5_Template_g_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onClick($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const result_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"colors\", ctx_r1.colors)(\"roundEdges\", ctx_r1.roundEdges)(\"strokeColor\", ctx_r1.strokeColor)(\"strokeWidth\", ctx_r1.strokeWidth)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.tooltipTemplate)(\"series\", result_r3)(\"dims\", ctx_r1.dims)(\"animations\", ctx_r1.animations)(\"gradient\", ctx_r1.gradient);\n  }\n}\nconst _c32 = [\"ngx-charts-bubble-series\", \"\"];\nfunction BubbleSeriesComponent__svg_g_0__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function BubbleSeriesComponent__svg_g_0__svg_g_2_Template_g_select_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const circle_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onClick(circle_r2.data));\n    })(\"activate\", function BubbleSeriesComponent__svg_g_0__svg_g_2_Template_g_activate_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const circle_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.activateCircle(circle_r2));\n    })(\"deactivate\", function BubbleSeriesComponent__svg_g_0__svg_g_2_Template_g_deactivate_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const circle_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deactivateCircle(circle_r2));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const circle_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"opacity\", circle_r2.opacity);\n    i0.ɵɵclassProp(\"active\", circle_r2.isActive);\n    i0.ɵɵproperty(\"@animationState\", \"active\")(\"cx\", 0)(\"cy\", 0)(\"r\", circle_r2.radius)(\"fill\", circle_r2.color)(\"pointerEvents\", \"all\")(\"data\", circle_r2.value)(\"classNames\", circle_r2.classNames)(\"tooltipDisabled\", ctx_r2.tooltipDisabled)(\"tooltipPlacement\", ctx_r2.placementTypes.Top)(\"tooltipType\", ctx_r2.styleTypes.tooltip)(\"tooltipTitle\", ctx_r2.tooltipTemplate ? undefined : ctx_r2.getTooltipText(circle_r2))(\"tooltipTemplate\", ctx_r2.tooltipTemplate)(\"tooltipContext\", circle_r2.data);\n  }\n}\nfunction BubbleSeriesComponent__svg_g_0__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function BubbleSeriesComponent__svg_g_0__svg_g_3_Template_g_select_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const circle_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onClick(circle_r2.data));\n    })(\"activate\", function BubbleSeriesComponent__svg_g_0__svg_g_3_Template_g_activate_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const circle_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.activateCircle(circle_r2));\n    })(\"deactivate\", function BubbleSeriesComponent__svg_g_0__svg_g_3_Template_g_deactivate_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const circle_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deactivateCircle(circle_r2));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const circle_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"opacity\", circle_r2.opacity);\n    i0.ɵɵclassProp(\"active\", circle_r2.isActive);\n    i0.ɵɵproperty(\"cx\", 0)(\"cy\", 0)(\"r\", circle_r2.radius)(\"fill\", circle_r2.color)(\"pointerEvents\", \"all\")(\"data\", circle_r2.value)(\"classNames\", circle_r2.classNames)(\"tooltipDisabled\", ctx_r2.tooltipDisabled)(\"tooltipPlacement\", ctx_r2.placementTypes.Top)(\"tooltipType\", ctx_r2.styleTypes.tooltip)(\"tooltipTitle\", ctx_r2.tooltipTemplate ? undefined : ctx_r2.getTooltipText(circle_r2))(\"tooltipTemplate\", ctx_r2.tooltipTemplate)(\"tooltipContext\", circle_r2.data);\n  }\n}\nfunction BubbleSeriesComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\");\n    i0.ɵɵtemplate(2, BubbleSeriesComponent__svg_g_0__svg_g_2_Template, 1, 18, \"g\", 1)(3, BubbleSeriesComponent__svg_g_0__svg_g_3_Template, 1, 17, \"g\", 1);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const circle_r2 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"transform\", circle_r2.transform);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.isSSR);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isSSR);\n  }\n}\nfunction BubbleChartComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BubbleChartComponent__svg_g_5_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"showGridLines\", ctx_r1.showGridLines)(\"dims\", ctx_r1.dims)(\"xScale\", ctx_r1.xScale)(\"showLabel\", ctx_r1.showXAxisLabel)(\"labelText\", ctx_r1.xAxisLabel)(\"trimTicks\", ctx_r1.trimXAxisTicks)(\"rotateTicks\", ctx_r1.rotateXAxisTicks)(\"maxTickLength\", ctx_r1.maxXAxisTickLength)(\"tickFormatting\", ctx_r1.xAxisTickFormatting)(\"ticks\", ctx_r1.xAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BubbleChartComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BubbleChartComponent__svg_g_6_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"showGridLines\", ctx_r1.showGridLines)(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BubbleChartComponent__svg_g_8__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 9);\n    i0.ɵɵlistener(\"select\", function BubbleChartComponent__svg_g_8__svg_g_1_Template_g_select_1_listener($event) {\n      const series_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onClick($event, series_r5));\n    })(\"activate\", function BubbleChartComponent__svg_g_8__svg_g_1_Template_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onActivate($event));\n    })(\"deactivate\", function BubbleChartComponent__svg_g_8__svg_g_1_Template_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const series_r5 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"rScale\", ctx_r1.rScale)(\"xScaleType\", ctx_r1.xScaleType)(\"yScaleType\", ctx_r1.yScaleType)(\"xAxisLabel\", ctx_r1.xAxisLabel)(\"yAxisLabel\", ctx_r1.yAxisLabel)(\"colors\", ctx_r1.colors)(\"data\", series_r5)(\"activeEntries\", ctx_r1.activeEntries)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.tooltipTemplate);\n  }\n}\nfunction BubbleChartComponent__svg_g_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BubbleChartComponent__svg_g_8__svg_g_1_Template, 2, 13, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"clip-path\", ctx_r1.clipPath);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.data)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nfunction BubbleChartComponent__svg_g_9__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 9);\n    i0.ɵɵlistener(\"select\", function BubbleChartComponent__svg_g_9__svg_g_1_Template_g_select_1_listener($event) {\n      const series_r7 = i0.ɵɵrestoreView(_r6).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onClick($event, series_r7));\n    })(\"activate\", function BubbleChartComponent__svg_g_9__svg_g_1_Template_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onActivate($event));\n    })(\"deactivate\", function BubbleChartComponent__svg_g_9__svg_g_1_Template_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const series_r7 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"rScale\", ctx_r1.rScale)(\"xScaleType\", ctx_r1.xScaleType)(\"yScaleType\", ctx_r1.yScaleType)(\"xAxisLabel\", ctx_r1.xAxisLabel)(\"yAxisLabel\", ctx_r1.yAxisLabel)(\"colors\", ctx_r1.colors)(\"data\", series_r7)(\"activeEntries\", ctx_r1.activeEntries)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.tooltipTemplate);\n  }\n}\nfunction BubbleChartComponent__svg_g_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BubbleChartComponent__svg_g_9__svg_g_1_Template, 2, 12, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"clip-path\", ctx_r1.clipPath);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.data)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nconst _c33 = [\"ngx-charts-heat-map-cell\", \"\"];\nfunction HeatMapCellComponent__svg_defs_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"defs\");\n    i0.ɵɵelement(1, \"g\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"orientation\", ctx_r0.barOrientation.Vertical)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.gradientStops);\n  }\n}\nconst _c34 = [\"ngx-charts-heat-map-cell-series\", \"\"];\nconst _c35 = (a0, a1, a2) => ({\n  series: a0,\n  name: a1,\n  value: a2\n});\nfunction HeatCellSeriesComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 1);\n    i0.ɵɵlistener(\"select\", function HeatCellSeriesComponent__svg_g_0_Template_g_select_0_listener() {\n      const c_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onClick(c_r2.cell));\n    })(\"activate\", function HeatCellSeriesComponent__svg_g_0_Template_g_activate_0_listener() {\n      const c_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.activate.emit(c_r2.cell));\n    })(\"deactivate\", function HeatCellSeriesComponent__svg_g_0_Template_g_deactivate_0_listener() {\n      const c_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deactivate.emit(c_r2.cell));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const c_r2 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"x\", c_r2.x)(\"y\", c_r2.y)(\"width\", c_r2.width)(\"height\", c_r2.height)(\"fill\", c_r2.fill)(\"data\", c_r2.data)(\"gradient\", ctx_r2.gradient)(\"animations\", ctx_r2.animations)(\"tooltipDisabled\", ctx_r2.tooltipDisabled)(\"tooltipPlacement\", ctx_r2.placementTypes.Top)(\"tooltipType\", ctx_r2.styleTypes.tooltip)(\"tooltipTitle\", ctx_r2.tooltipTemplate ? undefined : ctx_r2.tooltipText(c_r2))(\"tooltipTemplate\", ctx_r2.tooltipTemplate)(\"tooltipContext\", i0.ɵɵpureFunction3(14, _c35, c_r2.series, c_r2.label, c_r2.data));\n  }\n}\nfunction HeatMapComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function HeatMapComponent__svg_g_2_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.xScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showXAxisLabel)(\"labelText\", ctx_r1.xAxisLabel)(\"trimTicks\", ctx_r1.trimXAxisTicks)(\"rotateTicks\", ctx_r1.rotateXAxisTicks)(\"maxTickLength\", ctx_r1.maxXAxisTickLength)(\"tickFormatting\", ctx_r1.xAxisTickFormatting)(\"ticks\", ctx_r1.xAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction HeatMapComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function HeatMapComponent__svg_g_3_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction HeatMapComponent__svg_rect_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"rect\");\n  }\n  if (rf & 2) {\n    const rect_r4 = ctx.$implicit;\n    i0.ɵɵattribute(\"x\", rect_r4.x)(\"y\", rect_r4.y)(\"rx\", rect_r4.rx)(\"width\", rect_r4.width)(\"height\", rect_r4.height)(\"fill\", rect_r4.fill);\n  }\n}\nconst _c36 = [\"ngx-charts-line\", \"\"];\nfunction LineComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"path\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"d\", ctx_r0.initialPath)(\"fill\", ctx_r0.fill)(\"stroke\", ctx_r0.stroke);\n  }\n}\nfunction LineComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"path\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"d\", ctx_r0.initialPath)(\"fill\", ctx_r0.fill)(\"stroke\", ctx_r0.stroke);\n  }\n}\nconst _c37 = [\"ngx-charts-line-series\", \"\"];\nfunction LineSeriesComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"orientation\", ctx_r0.barOrientation.Vertical)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.gradientStops);\n  }\n}\nfunction LineSeriesComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 5);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"active\", ctx_r0.isActive(ctx_r0.data))(\"inactive\", ctx_r0.isInactive(ctx_r0.data));\n    i0.ɵɵproperty(\"data\", ctx_r0.data)(\"path\", ctx_r0.outerPath)(\"fill\", ctx_r0.hasGradient ? ctx_r0.gradientUrl : ctx_r0.colors.getColor(ctx_r0.data.name))(\"opacity\", ctx_r0.rangeFillOpacity)(\"animations\", ctx_r0.animations);\n  }\n}\nfunction LineChartComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function LineChartComponent__svg_g_5_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.xScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showXAxisLabel)(\"labelText\", ctx_r1.xAxisLabel)(\"trimTicks\", ctx_r1.trimXAxisTicks)(\"rotateTicks\", ctx_r1.rotateXAxisTicks)(\"maxTickLength\", ctx_r1.maxXAxisTickLength)(\"tickFormatting\", ctx_r1.xAxisTickFormatting)(\"ticks\", ctx_r1.xAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction LineChartComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 8);\n    i0.ɵɵlistener(\"dimensionsChanged\", function LineChartComponent__svg_g_6_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"referenceLines\", ctx_r1.referenceLines)(\"showRefLines\", ctx_r1.showRefLines)(\"showRefLabels\", ctx_r1.showRefLabels)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction LineChartComponent__svg_g_8__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r4 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"colors\", ctx_r1.colors)(\"data\", series_r4)(\"activeEntries\", ctx_r1.activeEntries)(\"scaleType\", ctx_r1.scaleType)(\"curve\", ctx_r1.curve)(\"rangeFillOpacity\", ctx_r1.rangeFillOpacity)(\"hasRange\", ctx_r1.hasRange)(\"animations\", ctx_r1.animations);\n  }\n}\nfunction LineChartComponent__svg_g_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, LineChartComponent__svg_g_8__svg_g_1_Template, 2, 11, \"g\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nfunction LineChartComponent__svg_g_9__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r5 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"colors\", ctx_r1.colors)(\"data\", series_r5)(\"activeEntries\", ctx_r1.activeEntries)(\"scaleType\", ctx_r1.scaleType)(\"curve\", ctx_r1.curve)(\"rangeFillOpacity\", ctx_r1.rangeFillOpacity)(\"hasRange\", ctx_r1.hasRange)(\"animations\", ctx_r1.animations);\n  }\n}\nfunction LineChartComponent__svg_g_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, LineChartComponent__svg_g_9__svg_g_1_Template, 2, 10, \"g\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nfunction LineChartComponent__svg_g_10__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 14);\n    i0.ɵɵlistener(\"select\", function LineChartComponent__svg_g_10__svg_g_2_Template_g_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onClick($event));\n    })(\"activate\", function LineChartComponent__svg_g_10__svg_g_2_Template_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onActivate($event));\n    })(\"deactivate\", function LineChartComponent__svg_g_10__svg_g_2_Template_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const series_r8 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"colors\", ctx_r1.colors)(\"data\", series_r8)(\"scaleType\", ctx_r1.scaleType)(\"visibleValue\", ctx_r1.hoveredVertical)(\"activeEntries\", ctx_r1.activeEntries)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.tooltipTemplate);\n  }\n}\nfunction LineChartComponent__svg_g_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 11);\n    i0.ɵɵlistener(\"mouseleave\", function LineChartComponent__svg_g_10_Template_g_mouseleave_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.hideCircles());\n    });\n    i0.ɵɵelementStart(1, \"g\", 12);\n    i0.ɵɵlistener(\"hover\", function LineChartComponent__svg_g_10_Template_g_hover_1_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateHoveredVertical($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, LineChartComponent__svg_g_10__svg_g_2_Template, 2, 9, \"g\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"dims\", ctx_r1.dims)(\"xSet\", ctx_r1.xSet)(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"results\", ctx_r1.results)(\"colors\", ctx_r1.colors)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.seriesTooltipTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results);\n  }\n}\nfunction LineChartComponent__svg_g_11__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r10 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.timelineXScale)(\"yScale\", ctx_r1.timelineYScale)(\"colors\", ctx_r1.colors)(\"data\", series_r10)(\"scaleType\", ctx_r1.scaleType)(\"curve\", ctx_r1.curve)(\"hasRange\", ctx_r1.hasRange)(\"animations\", ctx_r1.animations);\n  }\n}\nfunction LineChartComponent__svg_g_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 15);\n    i0.ɵɵlistener(\"onDomainChange\", function LineChartComponent__svg_g_11_Template_g_onDomainChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateDomain($event));\n    });\n    i0.ɵɵtemplate(1, LineChartComponent__svg_g_11__svg_g_1_Template, 2, 8, \"g\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"results\", ctx_r1.results)(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx_r1.timelineWidth, ctx_r1.height))(\"height\", ctx_r1.timelineHeight)(\"scheme\", ctx_r1.scheme)(\"customColors\", ctx_r1.customColors)(\"scaleType\", ctx_r1.scaleType)(\"legend\", ctx_r1.legend);\n    i0.ɵɵattribute(\"transform\", ctx_r1.timelineTransform);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nconst _c38 = [\"ngx-charts-pie-label\", \"\"];\nconst _c39 = [\"ngx-charts-polar-series\", \"\"];\nfunction PolarSeriesComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"color\", ctx_r0.seriesColor)(\"name\", ctx_r0.gradientId)(\"startOpacity\", 0.25)(\"endOpacity\", 1)(\"stops\", ctx_r0.gradientStops);\n  }\n}\nfunction PolarSeriesComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"select\", function PolarSeriesComponent__svg_g_4_Template_g_select_0_listener() {\n      const circle_r3 = i0.ɵɵrestoreView(_r2).$implicit;\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.select.emit(circle_r3.data));\n    })(\"activate\", function PolarSeriesComponent__svg_g_4_Template_g_activate_0_listener() {\n      const circle_r3 = i0.ɵɵrestoreView(_r2).$implicit;\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.activate.emit({\n        name: circle_r3.data.series\n      }));\n    })(\"deactivate\", function PolarSeriesComponent__svg_g_4_Template_g_deactivate_0_listener() {\n      const circle_r3 = i0.ɵɵrestoreView(_r2).$implicit;\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.deactivate.emit({\n        name: circle_r3.data.series\n      }));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const circle_r3 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"opacity\", ctx_r0.inactive ? 0.2 : 1);\n    i0.ɵɵproperty(\"cx\", circle_r3.cx)(\"cy\", circle_r3.cy)(\"r\", ctx_r0.circleRadius)(\"fill\", circle_r3.color)(\"tooltipDisabled\", ctx_r0.tooltipDisabled)(\"tooltipPlacement\", ctx_r0.placementTypes.Top)(\"tooltipType\", ctx_r0.styleTypes.tooltip)(\"tooltipTitle\", ctx_r0.tooltipTemplate ? undefined : ctx_r0.tooltipText(circle_r3))(\"tooltipTemplate\", ctx_r0.tooltipTemplate)(\"tooltipContext\", circle_r3.data);\n  }\n}\nfunction PolarChartComponent__svg_g_4__svg_circle_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"circle\", 7);\n  }\n  if (rf & 2) {\n    const r_r1 = ctx.$implicit;\n    i0.ɵɵattribute(\"r\", r_r1);\n  }\n}\nfunction PolarChartComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, PolarChartComponent__svg_g_4__svg_circle_1_Template, 1, 1, \"circle\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.radiusTicks);\n  }\n}\nfunction PolarChartComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 9);\n  }\n  if (rf & 2) {\n    const tick_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"data\", tick_r3)(\"radius\", ctx_r1.outerRadius)(\"label\", tick_r3.label)(\"max\", ctx_r1.outerRadius)(\"value\", ctx_r1.showGridLines ? 1 : ctx_r1.outerRadius)(\"explodeSlices\", true)(\"animations\", ctx_r1.animations)(\"labelTrim\", ctx_r1.labelTrim)(\"labelTrimSize\", ctx_r1.labelTrimSize);\n  }\n}\nfunction PolarChartComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, PolarChartComponent__svg_g_5__svg_g_1_Template, 1, 9, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.thetaTicks);\n  }\n}\nfunction PolarChartComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 10);\n    i0.ɵɵlistener(\"dimensionsChanged\", function PolarChartComponent__svg_g_6_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yAxisScale)(\"dims\", ctx_r1.yAxisDims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"wrapTicks\", ctx_r1.wrapTicks);\n    i0.ɵɵattribute(\"transform\", ctx_r1.transformYAxis);\n  }\n}\nfunction PolarChartComponent__svg_g_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 11);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"label\", ctx_r1.xAxisLabel)(\"offset\", ctx_r1.labelOffset)(\"orient\", ctx_r1.orientation.Bottom)(\"height\", ctx_r1.dims.height)(\"width\", ctx_r1.dims.width);\n  }\n}\nfunction PolarChartComponent__svg_g_8__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 13);\n    i0.ɵɵlistener(\"select\", function PolarChartComponent__svg_g_8__svg_g_1_Template_g_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onClick($event));\n    })(\"activate\", function PolarChartComponent__svg_g_8__svg_g_1_Template_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onActivate($event));\n    })(\"deactivate\", function PolarChartComponent__svg_g_8__svg_g_1_Template_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const series_r6 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"gradient\", ctx_r1.gradient)(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"colors\", ctx_r1.colors)(\"data\", series_r6)(\"activeEntries\", ctx_r1.activeEntries)(\"scaleType\", ctx_r1.scaleType)(\"curve\", ctx_r1.curve)(\"rangeFillOpacity\", ctx_r1.rangeFillOpacity)(\"animations\", ctx_r1.animations)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.tooltipTemplate);\n  }\n}\nfunction PolarChartComponent__svg_g_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, PolarChartComponent__svg_g_8__svg_g_1_Template, 2, 13, \"g\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r1.transformPlot);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nfunction PolarChartComponent__svg_g_9__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 13);\n    i0.ɵɵlistener(\"select\", function PolarChartComponent__svg_g_9__svg_g_1_Template_g_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onClick($event));\n    })(\"activate\", function PolarChartComponent__svg_g_9__svg_g_1_Template_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onActivate($event));\n    })(\"deactivate\", function PolarChartComponent__svg_g_9__svg_g_1_Template_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const series_r8 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"gradient\", ctx_r1.gradient)(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"colors\", ctx_r1.colors)(\"data\", series_r8)(\"activeEntries\", ctx_r1.activeEntries)(\"scaleType\", ctx_r1.scaleType)(\"curve\", ctx_r1.curve)(\"rangeFillOpacity\", ctx_r1.rangeFillOpacity)(\"animations\", ctx_r1.animations)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.tooltipTemplate);\n  }\n}\nfunction PolarChartComponent__svg_g_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, PolarChartComponent__svg_g_9__svg_g_1_Template, 2, 12, \"g\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r1.transformPlot);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nconst _c40 = [\"ngx-charts-pie-arc\", \"\"];\nfunction PieArcComponent__svg_defs_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"defs\");\n    i0.ɵɵelement(1, \"g\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"color\", ctx_r0.fill)(\"name\", ctx_r0.radialGradientId)(\"startOpacity\", ctx_r0.startOpacity);\n  }\n}\nconst _c41 = [\"ngx-charts-pie-series\", \"\"];\nfunction PieSeriesComponent__svg_g_0__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 3);\n  }\n  if (rf & 2) {\n    const arc_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"data\", arc_r2)(\"radius\", ctx_r2.outerRadius)(\"color\", ctx_r2.color(arc_r2))(\"label\", ctx_r2.labelText(arc_r2))(\"labelTrim\", ctx_r2.trimLabels)(\"labelTrimSize\", ctx_r2.maxLabelLength)(\"max\", ctx_r2.max)(\"value\", arc_r2.value)(\"explodeSlices\", ctx_r2.explodeSlices)(\"animations\", ctx_r2.animations);\n  }\n}\nfunction PieSeriesComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, PieSeriesComponent__svg_g_0__svg_g_1_Template, 1, 10, \"g\", 1);\n    i0.ɵɵelementStart(2, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function PieSeriesComponent__svg_g_0_Template_g_select_2_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onClick($event));\n    })(\"activate\", function PieSeriesComponent__svg_g_0_Template_g_activate_2_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.activate.emit($event));\n    })(\"deactivate\", function PieSeriesComponent__svg_g_0_Template_g_deactivate_2_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deactivate.emit($event));\n    })(\"dblclick\", function PieSeriesComponent__svg_g_0_Template_g_dblclick_2_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.dblclick.emit($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const arc_r2 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.labelVisible(arc_r2));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"startAngle\", arc_r2.startAngle)(\"endAngle\", arc_r2.endAngle)(\"innerRadius\", ctx_r2.innerRadius)(\"outerRadius\", ctx_r2.outerRadius)(\"fill\", ctx_r2.color(arc_r2))(\"value\", arc_r2.data.value)(\"gradient\", ctx_r2.gradient)(\"data\", arc_r2.data)(\"max\", ctx_r2.max)(\"explodeSlices\", ctx_r2.explodeSlices)(\"isActive\", ctx_r2.isActive(arc_r2.data))(\"animate\", ctx_r2.animations)(\"tooltipDisabled\", ctx_r2.tooltipDisabled)(\"tooltipPlacement\", ctx_r2.placementTypes.Top)(\"tooltipType\", ctx_r2.styleTypes.tooltip)(\"tooltipTitle\", ctx_r2.getTooltipTitle(arc_r2))(\"tooltipTemplate\", ctx_r2.tooltipTemplate)(\"tooltipContext\", arc_r2.data);\n  }\n}\nconst _c42 = \".pie-label{font-size:11px}.pie-label.animation{animation:.75s ease-in fadeIn}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{animation:3s linear drawOut;transition:d .75s}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\";\nconst _c43 = [\"ngx-charts-pie-grid-series\", \"\"];\nfunction PieGridSeriesComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function PieGridSeriesComponent__svg_g_1_Template_g_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onClick($event));\n    })(\"activate\", function PieGridSeriesComponent__svg_g_1_Template_g_activate_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.activate.emit($event));\n    })(\"deactivate\", function PieGridSeriesComponent__svg_g_1_Template_g_deactivate_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.deactivate.emit($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const arc_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"startAngle\", arc_r3.startAngle)(\"endAngle\", arc_r3.endAngle)(\"innerRadius\", ctx_r1.innerRadius)(\"outerRadius\", ctx_r1.outerRadius)(\"fill\", ctx_r1.color(arc_r3))(\"value\", arc_r3.data.value)(\"data\", arc_r3.data)(\"gradient\", false)(\"pointerEvents\", arc_r3.pointerEvents)(\"animate\", arc_r3.animate);\n    i0.ɵɵattribute(\"class\", arc_r3.class);\n  }\n}\nconst _c44 = a0 => ({\n  data: a0\n});\nfunction PieGridComponent__svg_g_2__svg_text_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"text\", 10);\n  }\n  if (rf & 2) {\n    const series_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"countTo\", series_r3.percent)(\"countSuffix\", \"%\");\n  }\n}\nfunction PieGridComponent__svg_g_2__svg_text_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"text\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", series_r3.percent.toLocaleString(), \" \");\n  }\n}\nfunction PieGridComponent__svg_g_2__svg_text_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"text\", 12);\n  }\n  if (rf & 2) {\n    const series_r3 = i0.ɵɵnextContext().$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"countTo\", series_r3.total)(\"countPrefix\", ctx_r1.label + \": \");\n    i0.ɵɵattribute(\"y\", series_r3.outerRadius);\n  }\n}\nfunction PieGridComponent__svg_g_2__svg_text_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"text\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r3 = i0.ɵɵnextContext().$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"y\", series_r3.outerRadius);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\" \", ctx_r1.label, \": \", series_r3.total.toLocaleString(), \" \");\n  }\n}\nfunction PieGridComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 3)(1, \"g\", 4);\n    i0.ɵɵlistener(\"select\", function PieGridComponent__svg_g_2_Template_g_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onClick($event));\n    })(\"activate\", function PieGridComponent__svg_g_2_Template_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onActivate($event));\n    })(\"deactivate\", function PieGridComponent__svg_g_2_Template_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, PieGridComponent__svg_g_2__svg_text_2_Template, 1, 2, \"text\", 5)(3, PieGridComponent__svg_g_2__svg_text_3_Template, 2, 1, \"text\", 6);\n    i0.ɵɵelementStart(4, \"text\", 7);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, PieGridComponent__svg_g_2__svg_text_6_Template, 1, 3, \"text\", 8)(7, PieGridComponent__svg_g_2__svg_text_7_Template, 2, 3, \"text\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", series_r3.transform);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"colors\", series_r3.colors)(\"data\", series_r3.data)(\"innerRadius\", series_r3.innerRadius)(\"outerRadius\", series_r3.outerRadius)(\"animations\", ctx_r1.animations)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipPlacement\", ctx_r1.placementTypes.Top)(\"tooltipType\", ctx_r1.styleTypes.tooltip)(\"tooltipTitle\", ctx_r1.tooltipTemplate ? undefined : ctx_r1.tooltipText(i0.ɵɵpureFunction1(17, _c44, series_r3)))(\"tooltipTemplate\", ctx_r1.tooltipTemplate)(\"tooltipContext\", series_r3.data[0].data);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.animations);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.animations);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", series_r3.label, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.animations);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.animations);\n  }\n}\nconst _c45 = [\"textEl\"];\nconst _c46 = [\"ngx-charts-card\", \"\"];\nfunction CardComponent__svg_path_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"path\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"fill\", ctx_r1.bandColor)(\"transform\", ctx_r1.transformBand)(\"d\", ctx_r1.bandPath);\n  }\n}\nconst _c47 = [\"ngx-charts-card-series\", \"\"];\nfunction CardSeriesComponent__svg_rect_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"rect\", 2);\n  }\n  if (rf & 2) {\n    const c_r1 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"fill\", ctx_r1.emptyColor);\n    i0.ɵɵattribute(\"x\", c_r1.x)(\"y\", c_r1.y)(\"width\", c_r1.width)(\"height\", c_r1.height);\n  }\n}\nfunction CardSeriesComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 3);\n    i0.ɵɵlistener(\"select\", function CardSeriesComponent__svg_g_1_Template_g_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onClick($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const c_r4 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"x\", c_r4.x)(\"y\", c_r4.y)(\"width\", c_r4.width)(\"height\", c_r4.height)(\"color\", c_r4.color)(\"bandColor\", c_r4.bandColor)(\"textColor\", c_r4.textColor)(\"data\", c_r4.data)(\"label\", c_r4.label)(\"medianSize\", ctx_r1.medianSize)(\"valueFormatting\", ctx_r1.valueFormatting)(\"labelFormatting\", ctx_r1.labelFormatting)(\"animations\", ctx_r1.animations);\n  }\n}\nconst _c48 = [\"ngx-charts-tree-map-cell\", \"\"];\nfunction TreeMapCellComponent__svg_defs_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"defs\");\n    i0.ɵɵelement(1, \"g\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"orientation\", ctx_r0.orientation.Vertical)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.gradientStops);\n  }\n}\nfunction TreeMapCellComponent__svg_foreignObject_3_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 8);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"countTo\", ctx_r0.value)(\"valueFormatting\", ctx_r0.valueFormatting);\n  }\n}\nfunction TreeMapCellComponent__svg_foreignObject_3_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.formattedValue, \" \");\n  }\n}\nfunction TreeMapCellComponent__svg_foreignObject_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"foreignObject\", 4);\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(1, \"p\");\n    i0.ɵɵelement(2, \"span\", 5)(3, \"br\");\n    i0.ɵɵtemplate(4, TreeMapCellComponent__svg_foreignObject_3_span_4_Template, 1, 2, \"span\", 6)(5, TreeMapCellComponent__svg_foreignObject_3_span_5_Template, 2, 1, \"span\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"pointer-events\", \"none\");\n    i0.ɵɵattribute(\"x\", ctx_r0.x)(\"y\", ctx_r0.y)(\"width\", ctx_r0.width)(\"height\", ctx_r0.height);\n    i0.ɵɵadvance();\n    i0.ɵɵstyleProp(\"color\", ctx_r0.getTextColor())(\"height\", ctx_r0.height + \"px\")(\"width\", ctx_r0.width + \"px\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"innerHTML\", ctx_r0.formattedLabel, i0.ɵɵsanitizeHtml);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.animations);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.animations);\n  }\n}\nconst _c49 = [\"ngx-charts-tree-map-cell-series\", \"\"];\nfunction TreeMapCellSeriesComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 1);\n    i0.ɵɵlistener(\"select\", function TreeMapCellSeriesComponent__svg_g_0_Template_g_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onClick($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const c_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"data\", c_r3.data)(\"x\", c_r3.x)(\"y\", c_r3.y)(\"width\", c_r3.width)(\"height\", c_r3.height)(\"fill\", c_r3.fill)(\"label\", c_r3.label)(\"value\", c_r3.value)(\"valueFormatting\", ctx_r1.valueFormatting)(\"labelFormatting\", ctx_r1.labelFormatting)(\"gradient\", ctx_r1.gradient)(\"animations\", ctx_r1.animations)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipPlacement\", ctx_r1.placementTypes.Top)(\"tooltipType\", ctx_r1.styleTypes.tooltip)(\"tooltipTitle\", ctx_r1.tooltipTemplate ? undefined : ctx_r1.getTooltipText(c_r3))(\"tooltipTemplate\", ctx_r1.tooltipTemplate)(\"tooltipContext\", c_r3.data);\n  }\n}\nconst _c50 = [\"valueTextEl\"];\nconst _c51 = [\"unitsTextEl\"];\nconst _c52 = () => ({});\nfunction LinearGaugeComponent__svg_line_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"line\", 10);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r1.transformLine)(\"stroke\", ctx_r1.colors.getColor(ctx_r1.units));\n  }\n}\nfunction LinearGaugeComponent__svg_line_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"line\", 11);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r1.transformLine)(\"stroke\", ctx_r1.colors.getColor(ctx_r1.units));\n  }\n}\nconst _c53 = [\"ngx-charts-gauge-arc\", \"\"];\nconst _c54 = [\"ngx-charts-gauge-axis\", \"\"];\nfunction GaugeAxisComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵelement(1, \"path\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tick_r1 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"d\", tick_r1.line);\n  }\n}\nfunction GaugeAxisComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2)(1, \"text\", 3);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const tick_r2 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵstyleProp(\"text-anchor\", tick_r2.textAnchor);\n    i0.ɵɵattribute(\"transform\", tick_r2.textTransform);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", tick_r2.text, \" \");\n  }\n}\nfunction GaugeAxisComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 4);\n    i0.ɵɵelement(1, \"path\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tick_r3 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"d\", tick_r3.line);\n  }\n}\nfunction GaugeComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 6);\n    i0.ɵɵlistener(\"select\", function GaugeComponent__svg_g_2_Template_g_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onClick($event));\n    })(\"activate\", function GaugeComponent__svg_g_2_Template_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onActivate($event));\n    })(\"deactivate\", function GaugeComponent__svg_g_2_Template_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const arc_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r1.rotation);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"backgroundArc\", arc_r3.backgroundArc)(\"valueArc\", arc_r3.valueArc)(\"cornerRadius\", ctx_r1.cornerRadius)(\"colors\", ctx_r1.colors)(\"isActive\", ctx_r1.isActive(arc_r3.valueArc.data))(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.tooltipTemplate)(\"valueFormatting\", ctx_r1.valueFormatting)(\"animations\", ctx_r1.animations);\n  }\n}\nfunction GaugeComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"bigSegments\", ctx_r1.bigSegments)(\"smallSegments\", ctx_r1.smallSegments)(\"min\", ctx_r1.min)(\"max\", ctx_r1.max)(\"radius\", ctx_r1.outerRadius)(\"angleSpan\", ctx_r1.angleSpan)(\"valueScale\", ctx_r1.valueScale)(\"startAngle\", ctx_r1.startAngle)(\"tickFormatting\", ctx_r1.axisTickFormatting);\n  }\n}\nfunction GaugeComponent__svg_text_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"text\", 8, 0)(2, \"tspan\", 9);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"tspan\", 10);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"text-anchor\", \"middle\");\n    i0.ɵɵattribute(\"transform\", ctx_r1.textTransform);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r1.displayValue);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.units);\n  }\n}\nfunction PercentGaugeComponent__svg_g_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"rect\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tic_r1 = ctx.$implicit;\n    i0.ɵɵattribute(\"transform\", tic_r1.transform);\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"y\", -tic_r1.height / 2)(\"x\", -tic_r1.width)(\"width\", tic_r1.width)(\"height\", tic_r1.height)(\"fill\", tic_r1.fill);\n  }\n}\nfunction PercentGaugeComponent__svg_circle_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"circle\", 11);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"stroke-width\", ctx_r1.targetRadius / 10);\n    i0.ɵɵattribute(\"r\", ctx_r1.targetRadius)(\"stroke\", ctx_r1.targetColor)(\"cx\", -ctx_r1.targetRadius / 2)(\"cy\", -ctx_r1.targetRadius / 2);\n  }\n}\nfunction PercentGaugeComponent__svg_g_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"text\", 12);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r1.labelTransform);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.label, \" \");\n  }\n}\nfunction SankeyComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5)(1, \"defs\")(2, \"linearGradient\", 6);\n    i0.ɵɵelement(3, \"stop\", 7)(4, \"stop\", 8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"path\", 9);\n    i0.ɵɵlistener(\"click\", function SankeyComponent__svg_g_2_Template_path_click_5_listener() {\n      const link_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.select.emit(link_r2.data));\n    })(\"mouseenter\", function SankeyComponent__svg_g_2_Template_path_mouseenter_5_listener() {\n      const link_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.activate.emit(link_r2.data));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const link_r2 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"tooltipDisabled\", ctx_r2.tooltipDisabled)(\"tooltipType\", ctx_r2.styleTypes.tooltip)(\"tooltipPlacement\", \"top\")(\"tooltipTitle\", ctx_r2.tooltipTemplate ? undefined : link_r2.tooltip)(\"tooltipTemplate\", ctx_r2.tooltipTemplate)(\"tooltipContext\", link_r2.data);\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"id\", link_r2.id)(\"x1\", link_r2.source.x1)(\"x2\", link_r2.target.x0);\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"stop-color\", link_r2.startColor);\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"stop-color\", link_r2.endColor);\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"d\", link_r2.path)(\"stroke\", link_r2.gradientFill)(\"stroke-width\", link_r2.strokeWidth);\n  }\n}\nfunction SankeyComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 10)(1, \"rect\", 11);\n    i0.ɵɵlistener(\"click\", function SankeyComponent__svg_g_3_Template_rect_click_1_listener() {\n      const rect_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.select.emit(rect_r5.data));\n    })(\"mouseenter\", function SankeyComponent__svg_g_3_Template_rect_mouseenter_1_listener() {\n      const rect_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.activate.emit(rect_r5.data));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const rect_r5 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", rect_r5.transform);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"tooltipDisabled\", ctx_r2.tooltipDisabled)(\"tooltipType\", ctx_r2.styleTypes.tooltip)(\"tooltipPlacement\", \"top\")(\"tooltipTitle\", ctx_r2.tooltipTemplate ? undefined : rect_r5.tooltip)(\"tooltipTemplate\", ctx_r2.tooltipTemplate)(\"tooltipContext\", rect_r5.data);\n    i0.ɵɵattribute(\"x\", 0)(\"y\", 0)(\"width\", rect_r5.width)(\"height\", rect_r5.height)(\"fill\", rect_r5.fill);\n  }\n}\nfunction SankeyComponent__svg_g_4__svg_text_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"text\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const rect_r6 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵattribute(\"x\", rect_r6.width + 5)(\"y\", rect_r6.height / 2)(\"text-anchor\", rect_r6.labelAnchor)(\"dx\", rect_r6.labelAnchor === \"end\" ? -25 : 0);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", rect_r6.label, \" \");\n  }\n}\nfunction SankeyComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, SankeyComponent__svg_g_4__svg_text_1_Template, 2, 5, \"text\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const rect_r6 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", rect_r6.transform);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.showLabels && rect_r6.height > 15);\n  }\n}\nfunction throttle(func, wait, options) {\n  options = options || {};\n  let context;\n  let args;\n  let result;\n  let timeout = null;\n  let previous = 0;\n  function later() {\n    previous = options.leading === false ? 0 : +new Date();\n    timeout = null;\n    result = func.apply(context, args);\n  }\n  return function () {\n    const now = +new Date();\n    if (!previous && options.leading === false) {\n      previous = now;\n    }\n    const remaining = wait - (now - previous);\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    context = this;\n    // eslint-disable-next-line prefer-rest-params\n    args = arguments;\n    if (remaining <= 0) {\n      clearTimeout(timeout);\n      timeout = null;\n      previous = now;\n      result = func.apply(context, args);\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n    return result;\n  };\n}\n/**\n * Throttle decorator\n *\n *  class MyClass {\n *    throttleable(10)\n *    myFn() { ... }\n *  }\n */\nfunction throttleable(duration, options) {\n  return function innerDecorator(target, key, descriptor) {\n    return {\n      configurable: true,\n      enumerable: descriptor.enumerable,\n      get: function getter() {\n        Object.defineProperty(this, key, {\n          configurable: true,\n          enumerable: descriptor.enumerable,\n          value: throttle(descriptor.value, duration, options)\n        });\n        return this[key];\n      }\n    };\n  };\n}\nvar PlacementTypes = /*#__PURE__*/function (PlacementTypes) {\n  PlacementTypes[\"Top\"] = \"top\";\n  PlacementTypes[\"Bottom\"] = \"bottom\";\n  PlacementTypes[\"Left\"] = \"left\";\n  PlacementTypes[\"Right\"] = \"right\";\n  PlacementTypes[\"Center\"] = \"center\";\n  return PlacementTypes;\n}(PlacementTypes || {});\nconst caretOffset = 7;\nfunction verticalPosition(elDimensions, popoverDimensions, alignment) {\n  if (alignment === PlacementTypes.Top) {\n    return elDimensions.top - caretOffset;\n  }\n  if (alignment === PlacementTypes.Bottom) {\n    return elDimensions.top + elDimensions.height - popoverDimensions.height + caretOffset;\n  }\n  if (alignment === PlacementTypes.Center) {\n    return elDimensions.top + elDimensions.height / 2 - popoverDimensions.height / 2;\n  }\n  return undefined;\n}\nfunction horizontalPosition(elDimensions, popoverDimensions, alignment) {\n  if (alignment === PlacementTypes.Left) {\n    return elDimensions.left - caretOffset;\n  }\n  if (alignment === PlacementTypes.Right) {\n    return elDimensions.left + elDimensions.width - popoverDimensions.width + caretOffset;\n  }\n  if (alignment === PlacementTypes.Center) {\n    return elDimensions.left + elDimensions.width / 2 - popoverDimensions.width / 2;\n  }\n  return undefined;\n}\n/**\n * Position helper for the popover directive.\n *\n * @export\n */\nclass PositionHelper {\n  /**\n   * Calculate vertical alignment position\n   *\n   * @memberOf PositionHelper\n   */\n  static calculateVerticalAlignment(elDimensions, popoverDimensions, alignment) {\n    let result = verticalPosition(elDimensions, popoverDimensions, alignment);\n    if (result + popoverDimensions.height > window.innerHeight) {\n      result = window.innerHeight - popoverDimensions.height;\n    }\n    return result;\n  }\n  /**\n   * Calculate vertical caret position\n   *\n   * @memberOf PositionHelper\n   */\n  static calculateVerticalCaret(elDimensions, popoverDimensions, caretDimensions, alignment) {\n    let result;\n    if (alignment === PlacementTypes.Top) {\n      result = elDimensions.height / 2 - caretDimensions.height / 2 + caretOffset;\n    }\n    if (alignment === PlacementTypes.Bottom) {\n      result = popoverDimensions.height - elDimensions.height / 2 - caretDimensions.height / 2 - caretOffset;\n    }\n    if (alignment === PlacementTypes.Center) {\n      result = popoverDimensions.height / 2 - caretDimensions.height / 2;\n    }\n    const popoverPosition = verticalPosition(elDimensions, popoverDimensions, alignment);\n    if (popoverPosition + popoverDimensions.height > window.innerHeight) {\n      result += popoverPosition + popoverDimensions.height - window.innerHeight;\n    }\n    return result;\n  }\n  /**\n   * Calculate horz alignment position\n   *\n   * @memberOf PositionHelper\n   */\n  static calculateHorizontalAlignment(elDimensions, popoverDimensions, alignment) {\n    let result = horizontalPosition(elDimensions, popoverDimensions, alignment);\n    if (result + popoverDimensions.width > window.innerWidth) {\n      result = window.innerWidth - popoverDimensions.width;\n    }\n    return result;\n  }\n  /**\n   * Calculate horz caret position\n   *\n   * @memberOf PositionHelper\n   */\n  static calculateHorizontalCaret(elDimensions, popoverDimensions, caretDimensions, alignment) {\n    let result;\n    if (alignment === PlacementTypes.Left) {\n      result = elDimensions.width / 2 - caretDimensions.width / 2 + caretOffset;\n    }\n    if (alignment === PlacementTypes.Right) {\n      result = popoverDimensions.width - elDimensions.width / 2 - caretDimensions.width / 2 - caretOffset;\n    }\n    if (alignment === PlacementTypes.Center) {\n      result = popoverDimensions.width / 2 - caretDimensions.width / 2;\n    }\n    const popoverPosition = horizontalPosition(elDimensions, popoverDimensions, alignment);\n    if (popoverPosition + popoverDimensions.width > window.innerWidth) {\n      result += popoverPosition + popoverDimensions.width - window.innerWidth;\n    }\n    return result;\n  }\n  /**\n   * Checks if the element's position should be flipped\n   *\n   * @memberOf PositionHelper\n   */\n  static shouldFlip(elDimensions, popoverDimensions, placement, spacing) {\n    let flip = false;\n    if (placement === PlacementTypes.Right) {\n      if (elDimensions.left + elDimensions.width + popoverDimensions.width + spacing > window.innerWidth) {\n        flip = true;\n      }\n    }\n    if (placement === PlacementTypes.Left) {\n      if (elDimensions.left - popoverDimensions.width - spacing < 0) {\n        flip = true;\n      }\n    }\n    if (placement === PlacementTypes.Top) {\n      if (elDimensions.top - popoverDimensions.height - spacing < 0) {\n        flip = true;\n      }\n    }\n    if (placement === PlacementTypes.Bottom) {\n      if (elDimensions.top + elDimensions.height + popoverDimensions.height + spacing > window.innerHeight) {\n        flip = true;\n      }\n    }\n    return flip;\n  }\n  /**\n   * Position caret\n   *\n   * @memberOf PositionHelper\n   */\n  static positionCaret(placement, elmDim, hostDim, caretDimensions, alignment) {\n    let top = 0;\n    let left = 0;\n    if (placement === PlacementTypes.Right) {\n      left = -7;\n      top = PositionHelper.calculateVerticalCaret(hostDim, elmDim, caretDimensions, alignment);\n    } else if (placement === PlacementTypes.Left) {\n      left = elmDim.width;\n      top = PositionHelper.calculateVerticalCaret(hostDim, elmDim, caretDimensions, alignment);\n    } else if (placement === PlacementTypes.Top) {\n      top = elmDim.height;\n      left = PositionHelper.calculateHorizontalCaret(hostDim, elmDim, caretDimensions, alignment);\n    } else if (placement === PlacementTypes.Bottom) {\n      top = -7;\n      left = PositionHelper.calculateHorizontalCaret(hostDim, elmDim, caretDimensions, alignment);\n    }\n    return {\n      top,\n      left\n    };\n  }\n  /**\n   * Position content\n   *\n   * @memberOf PositionHelper\n   */\n  static positionContent(placement, elmDim, hostDim, spacing, alignment) {\n    let top = 0;\n    let left = 0;\n    if (placement === PlacementTypes.Right) {\n      left = hostDim.left + hostDim.width + spacing;\n      top = PositionHelper.calculateVerticalAlignment(hostDim, elmDim, alignment);\n    } else if (placement === PlacementTypes.Left) {\n      left = hostDim.left - elmDim.width - spacing;\n      top = PositionHelper.calculateVerticalAlignment(hostDim, elmDim, alignment);\n    } else if (placement === PlacementTypes.Top) {\n      top = hostDim.top - elmDim.height - spacing;\n      left = PositionHelper.calculateHorizontalAlignment(hostDim, elmDim, alignment);\n    } else if (placement === PlacementTypes.Bottom) {\n      top = hostDim.top + hostDim.height + spacing;\n      left = PositionHelper.calculateHorizontalAlignment(hostDim, elmDim, alignment);\n    }\n    return {\n      top,\n      left\n    };\n  }\n  /**\n   * Determine placement based on flip\n   *\n   * @memberOf PositionHelper\n   */\n  static determinePlacement(placement, elmDim, hostDim, spacing) {\n    const shouldFlip = PositionHelper.shouldFlip(hostDim, elmDim, placement, spacing);\n    if (shouldFlip) {\n      if (placement === PlacementTypes.Right) {\n        return PlacementTypes.Left;\n      } else if (placement === PlacementTypes.Left) {\n        return PlacementTypes.Right;\n      } else if (placement === PlacementTypes.Top) {\n        return PlacementTypes.Bottom;\n      } else if (placement === PlacementTypes.Bottom) {\n        return PlacementTypes.Top;\n      }\n    }\n    return placement;\n  }\n}\nlet TooltipContentComponent = /*#__PURE__*/(() => {\n  class TooltipContentComponent {\n    get cssClasses() {\n      let clz = 'ngx-charts-tooltip-content';\n      clz += ` position-${this.placement}`;\n      clz += ` type-${this.type}`;\n      clz += ` ${this.cssClass}`;\n      return clz;\n    }\n    constructor(element, renderer, platformId) {\n      this.element = element;\n      this.renderer = renderer;\n      this.platformId = platformId;\n    }\n    ngAfterViewInit() {\n      setTimeout(this.position.bind(this));\n    }\n    position() {\n      if (!isPlatformBrowser(this.platformId)) {\n        return;\n      }\n      const nativeElm = this.element.nativeElement;\n      const hostDim = this.host.nativeElement.getBoundingClientRect();\n      // if no dims were found, never show\n      if (!hostDim.height && !hostDim.width) return;\n      const elmDim = nativeElm.getBoundingClientRect();\n      this.checkFlip(hostDim, elmDim);\n      this.positionContent(nativeElm, hostDim, elmDim);\n      if (this.showCaret) {\n        this.positionCaret(hostDim, elmDim);\n      }\n      // animate its entry\n      setTimeout(() => this.renderer.addClass(nativeElm, 'animate'), 1);\n    }\n    positionContent(nativeElm, hostDim, elmDim) {\n      const {\n        top,\n        left\n      } = PositionHelper.positionContent(this.placement, elmDim, hostDim, this.spacing, this.alignment);\n      this.renderer.setStyle(nativeElm, 'top', `${top}px`);\n      this.renderer.setStyle(nativeElm, 'left', `${left}px`);\n    }\n    positionCaret(hostDim, elmDim) {\n      const caretElm = this.caretElm.nativeElement;\n      const caretDimensions = caretElm.getBoundingClientRect();\n      const {\n        top,\n        left\n      } = PositionHelper.positionCaret(this.placement, elmDim, hostDim, caretDimensions, this.alignment);\n      this.renderer.setStyle(caretElm, 'top', `${top}px`);\n      this.renderer.setStyle(caretElm, 'left', `${left}px`);\n    }\n    checkFlip(hostDim, elmDim) {\n      this.placement = PositionHelper.determinePlacement(this.placement, elmDim, hostDim, this.spacing);\n    }\n    onWindowResize() {\n      this.position();\n    }\n    static {\n      this.ɵfac = function TooltipContentComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || TooltipContentComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(PLATFORM_ID));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: TooltipContentComponent,\n        selectors: [[\"ngx-tooltip-content\"]],\n        viewQuery: function TooltipContentComponent_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c0, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.caretElm = _t.first);\n          }\n        },\n        hostVars: 2,\n        hostBindings: function TooltipContentComponent_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"resize\", function TooltipContentComponent_resize_HostBindingHandler() {\n              return ctx.onWindowResize();\n            }, false, i0.ɵɵresolveWindow);\n          }\n          if (rf & 2) {\n            i0.ɵɵclassMap(ctx.cssClasses);\n          }\n        },\n        inputs: {\n          host: \"host\",\n          showCaret: \"showCaret\",\n          type: \"type\",\n          placement: \"placement\",\n          alignment: \"alignment\",\n          spacing: \"spacing\",\n          cssClass: \"cssClass\",\n          title: \"title\",\n          template: \"template\",\n          context: \"context\"\n        },\n        standalone: false,\n        decls: 6,\n        vars: 6,\n        consts: [[\"caretElm\", \"\"], [3, \"hidden\"], [1, \"tooltip-content\"], [4, \"ngIf\"], [3, \"innerHTML\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"innerHTML\"]],\n        template: function TooltipContentComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\");\n            i0.ɵɵelement(1, \"span\", 1, 0);\n            i0.ɵɵelementStart(3, \"div\", 2);\n            i0.ɵɵtemplate(4, TooltipContentComponent_span_4_Template, 2, 4, \"span\", 3)(5, TooltipContentComponent_span_5_Template, 1, 1, \"span\", 4);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance();\n            i0.ɵɵclassMapInterpolate1(\"tooltip-caret position-\", ctx.placement, \"\");\n            i0.ɵɵproperty(\"hidden\", !ctx.showCaret);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngIf\", !ctx.title);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.title);\n          }\n        },\n        dependencies: [i1.NgIf, i1.NgTemplateOutlet],\n        styles: [\".ngx-charts-tooltip-content{position:fixed;border-radius:3px;z-index:5000;display:block;font-weight:400;opacity:0;pointer-events:none!important}.ngx-charts-tooltip-content.type-popover{background:#fff;color:#060709;border:1px solid #72809b;box-shadow:0 1px 3px #0003,0 1px 1px #00000024,0 2px 1px -1px #0000001f;font-size:13px;padding:4px}.ngx-charts-tooltip-content.type-popover .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid #fff}.ngx-charts-tooltip-content.type-tooltip{color:#fff;background:#000000bf;font-size:12px;padding:0 10px;text-align:center;pointer-events:auto}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content .tooltip-label{display:block;line-height:1em;padding:8px 5px 5px;font-size:1em}.ngx-charts-tooltip-content .tooltip-val{display:block;font-size:1.3em;line-height:1em;padding:0 5px 8px}.ngx-charts-tooltip-content .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.position-right{transform:translate3d(10px,0,0)}.ngx-charts-tooltip-content.position-left{transform:translate3d(-10px,0,0)}.ngx-charts-tooltip-content.position-top{transform:translate3d(0,-10px,0)}.ngx-charts-tooltip-content.position-bottom{transform:translate3d(0,10px,0)}.ngx-charts-tooltip-content.animate{opacity:1;transition:opacity .3s,transform .3s;transform:translateZ(0);pointer-events:auto}.area-tooltip-container{padding:5px 0;pointer-events:none}.tooltip-item{text-align:left;line-height:1.2em;padding:5px 0}.tooltip-item .tooltip-item-color{display:inline-block;height:12px;width:12px;margin-right:5px;color:#5b646b;border-radius:3px}\\n\"],\n        encapsulation: 2\n      });\n    }\n  }\n  __decorate([throttleable(100)], TooltipContentComponent.prototype, \"onWindowResize\", null);\n  return TooltipContentComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nclass InjectionRegisteryService {\n  constructor(injectionService) {\n    this.injectionService = injectionService;\n    this.defaults = {};\n    this.components = new Map();\n  }\n  getByType(type = this.type) {\n    return this.components.get(type);\n  }\n  create(bindings) {\n    return this.createByType(this.type, bindings);\n  }\n  createByType(type, bindings) {\n    bindings = this.assignDefaults(bindings);\n    const component = this.injectComponent(type, bindings);\n    this.register(type, component);\n    return component;\n  }\n  destroy(instance) {\n    const compsByType = this.components.get(instance.componentType);\n    if (compsByType && compsByType.length) {\n      const idx = compsByType.indexOf(instance);\n      if (idx > -1) {\n        const component = compsByType[idx];\n        component.destroy();\n        compsByType.splice(idx, 1);\n      }\n    }\n  }\n  destroyAll() {\n    this.destroyByType(this.type);\n  }\n  destroyByType(type) {\n    const comps = this.components.get(type);\n    if (comps && comps.length) {\n      let i = comps.length - 1;\n      while (i >= 0) {\n        this.destroy(comps[i--]);\n      }\n    }\n  }\n  injectComponent(type, bindings) {\n    return this.injectionService.appendComponent(type, bindings);\n  }\n  assignDefaults(bindings) {\n    const inputs = {\n      ...this.defaults.inputs\n    };\n    const outputs = {\n      ...this.defaults.outputs\n    };\n    if (!bindings.inputs && !bindings.outputs) {\n      bindings = {\n        inputs: bindings\n      };\n    }\n    if (inputs) {\n      bindings.inputs = {\n        ...inputs,\n        ...bindings.inputs\n      };\n    }\n    if (outputs) {\n      bindings.outputs = {\n        ...outputs,\n        ...bindings.outputs\n      };\n    }\n    return bindings;\n  }\n  register(type, component) {\n    if (!this.components.has(type)) {\n      this.components.set(type, []);\n    }\n    const types = this.components.get(type);\n    types.push(component);\n  }\n}\nfunction isViewContainerRef(x) {\n  return x.element;\n}\n/**\n * Injection service is a helper to append components\n * dynamically to a known location in the DOM, most\n * noteably for dialogs/tooltips appending to body.\n *\n * @export\n */\nlet InjectionService = /*#__PURE__*/(() => {\n  class InjectionService {\n    static {\n      this.globalRootViewContainer = null;\n    }\n    /**\n     * Sets a default global root view container. This is useful for\n     * things like ngUpgrade that doesn't have a ApplicationRef root.\n     *\n     * @param container\n     */\n    static setGlobalRootViewContainer(container) {\n      InjectionService.globalRootViewContainer = container;\n    }\n    constructor(applicationRef, componentFactoryResolver, injector) {\n      this.applicationRef = applicationRef;\n      this.componentFactoryResolver = componentFactoryResolver;\n      this.injector = injector;\n    }\n    /**\n     * Gets the root view container to inject the component to.\n     *\n     * @memberOf InjectionService\n     */\n    getRootViewContainer() {\n      if (this._container) return this._container;\n      if (InjectionService.globalRootViewContainer) return InjectionService.globalRootViewContainer;\n      if (this.applicationRef.components.length) return this.applicationRef.components[0];\n      throw new Error('View Container not found! ngUpgrade needs to manually set this via setRootViewContainer or setGlobalRootViewContainer.');\n    }\n    /**\n     * Overrides the default root view container. This is useful for\n     * things like ngUpgrade that doesn't have a ApplicationRef root.\n     *\n     * @param container\n     *\n     * @memberOf InjectionService\n     */\n    setRootViewContainer(container) {\n      this._container = container;\n    }\n    /**\n     * Gets the html element for a component ref.\n     *\n     * @param componentRef\n     *\n     * @memberOf InjectionService\n     */\n    getComponentRootNode(component) {\n      if (isViewContainerRef(component)) {\n        return component.element.nativeElement;\n      }\n      if (component.hostView && component.hostView.rootNodes.length > 0) {\n        return component.hostView.rootNodes[0];\n      }\n      // the top most component root node has no `hostView`\n      return component.location.nativeElement;\n    }\n    /**\n     * Gets the root component container html element.\n     *\n     * @memberOf InjectionService\n     */\n    getRootViewContainerNode(component) {\n      return this.getComponentRootNode(component);\n    }\n    /**\n     * Projects the bindings onto the component\n     *\n     * @param component\n     * @param options\n     *\n     * @memberOf InjectionService\n     */\n    projectComponentBindings(component, bindings) {\n      if (bindings) {\n        if (bindings.inputs !== undefined) {\n          const bindingKeys = Object.getOwnPropertyNames(bindings.inputs);\n          for (const bindingName of bindingKeys) {\n            component.instance[bindingName] = bindings.inputs[bindingName];\n          }\n        }\n        if (bindings.outputs !== undefined) {\n          const eventKeys = Object.getOwnPropertyNames(bindings.outputs);\n          for (const eventName of eventKeys) {\n            component.instance[eventName] = bindings.outputs[eventName];\n          }\n        }\n      }\n      return component;\n    }\n    /**\n     * Appends a component to a adjacent location\n     *\n     * @param componentClass\n     * @param [options={}]\n     * @param [location]\n     *\n     * @memberOf InjectionService\n     */\n    appendComponent(componentClass, bindings = {}, location) {\n      if (!location) location = this.getRootViewContainer();\n      const appendLocation = this.getComponentRootNode(location);\n      const portalHost = new DomPortalOutlet(appendLocation, this.componentFactoryResolver, this.applicationRef, this.injector);\n      const portal = new ComponentPortal(componentClass);\n      const componentRef = portalHost.attach(portal);\n      this.projectComponentBindings(componentRef, bindings);\n      return componentRef;\n    }\n    static {\n      this.ɵfac = function InjectionService_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || InjectionService)(i0.ɵɵinject(i0.ApplicationRef), i0.ɵɵinject(i0.ComponentFactoryResolver), i0.ɵɵinject(i0.Injector));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: InjectionService,\n        factory: InjectionService.ɵfac\n      });\n    }\n  }\n  return InjectionService;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TooltipService = /*#__PURE__*/(() => {\n  class TooltipService extends InjectionRegisteryService {\n    constructor(injectionService) {\n      super(injectionService);\n      this.type = TooltipContentComponent;\n    }\n    static {\n      this.ɵfac = function TooltipService_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || TooltipService)(i0.ɵɵinject(InjectionService));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: TooltipService,\n        factory: TooltipService.ɵfac\n      });\n    }\n  }\n  return TooltipService;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nvar LegendPosition = /*#__PURE__*/function (LegendPosition) {\n  LegendPosition[\"Right\"] = \"right\";\n  LegendPosition[\"Below\"] = \"below\";\n  return LegendPosition;\n}(LegendPosition || {});\nvar LegendType = /*#__PURE__*/function (LegendType) {\n  LegendType[\"ScaleLegend\"] = \"scaleLegend\";\n  LegendType[\"Legend\"] = \"legend\";\n  return LegendType;\n}(LegendType || {});\nvar ScaleType = /*#__PURE__*/function (ScaleType) {\n  ScaleType[\"Time\"] = \"time\";\n  ScaleType[\"Linear\"] = \"linear\";\n  ScaleType[\"Ordinal\"] = \"ordinal\";\n  ScaleType[\"Quantile\"] = \"quantile\";\n  return ScaleType;\n}(ScaleType || {});\n/**\n * Formats a label given a date, number or string.\n *\n * @export\n */\nfunction formatLabel(label) {\n  if (label instanceof Date) {\n    label = label.toLocaleDateString();\n  } else {\n    label = label.toLocaleString();\n  }\n  return label;\n}\n/**\n * Escapes a label.\n *\n * @export\n */\nfunction escapeLabel(label) {\n  return label.toLocaleString().replace(/[&'`\"<>]/g, match => {\n    return {\n      '&': '&amp;',\n      // tslint:disable-next-line: quotemark\n      \"'\": '&#x27;',\n      '`': '&#x60;',\n      '\"': '&quot;',\n      '<': '&lt;',\n      '>': '&gt;'\n    }[match];\n  });\n}\nlet LegendEntryComponent = /*#__PURE__*/(() => {\n  class LegendEntryComponent {\n    constructor() {\n      this.isActive = false;\n      this.select = new EventEmitter();\n      this.activate = new EventEmitter();\n      this.deactivate = new EventEmitter();\n      this.toggle = new EventEmitter();\n    }\n    get trimmedLabel() {\n      return this.formattedLabel || '(empty)';\n    }\n    onMouseEnter() {\n      this.activate.emit({\n        name: this.label\n      });\n    }\n    onMouseLeave() {\n      this.deactivate.emit({\n        name: this.label\n      });\n    }\n    static {\n      this.ɵfac = function LegendEntryComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || LegendEntryComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: LegendEntryComponent,\n        selectors: [[\"ngx-charts-legend-entry\"]],\n        hostBindings: function LegendEntryComponent_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"mouseenter\", function LegendEntryComponent_mouseenter_HostBindingHandler() {\n              return ctx.onMouseEnter();\n            })(\"mouseleave\", function LegendEntryComponent_mouseleave_HostBindingHandler() {\n              return ctx.onMouseLeave();\n            });\n          }\n        },\n        inputs: {\n          color: \"color\",\n          label: \"label\",\n          formattedLabel: \"formattedLabel\",\n          isActive: \"isActive\"\n        },\n        outputs: {\n          select: \"select\",\n          activate: \"activate\",\n          deactivate: \"deactivate\",\n          toggle: \"toggle\"\n        },\n        standalone: false,\n        decls: 4,\n        vars: 6,\n        consts: [[\"tabindex\", \"-1\", 3, \"click\", \"title\"], [1, \"legend-label-color\", 3, \"click\"], [1, \"legend-label-text\"]],\n        template: function LegendEntryComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"span\", 0);\n            i0.ɵɵlistener(\"click\", function LegendEntryComponent_Template_span_click_0_listener() {\n              return ctx.select.emit(ctx.formattedLabel);\n            });\n            i0.ɵɵelementStart(1, \"span\", 1);\n            i0.ɵɵlistener(\"click\", function LegendEntryComponent_Template_span_click_1_listener() {\n              return ctx.toggle.emit(ctx.formattedLabel);\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(2, \"span\", 2);\n            i0.ɵɵtext(3);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"active\", ctx.isActive);\n            i0.ɵɵproperty(\"title\", ctx.formattedLabel);\n            i0.ɵɵadvance();\n            i0.ɵɵstyleProp(\"background-color\", ctx.color);\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate1(\" \", ctx.trimmedLabel, \" \");\n          }\n        },\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return LegendEntryComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet LegendComponent = /*#__PURE__*/(() => {\n  class LegendComponent {\n    constructor(cd) {\n      this.cd = cd;\n      this.horizontal = false;\n      this.labelClick = new EventEmitter();\n      this.labelActivate = new EventEmitter();\n      this.labelDeactivate = new EventEmitter();\n      this.legendEntries = [];\n    }\n    ngOnChanges(changes) {\n      this.update();\n    }\n    update() {\n      this.cd.markForCheck();\n      this.legendEntries = this.getLegendEntries();\n    }\n    getLegendEntries() {\n      const items = [];\n      for (const label of this.data) {\n        const formattedLabel = formatLabel(label);\n        const idx = items.findIndex(i => {\n          return i.label === formattedLabel;\n        });\n        if (idx === -1) {\n          items.push({\n            label,\n            formattedLabel,\n            color: this.colors.getColor(label)\n          });\n        }\n      }\n      return items;\n    }\n    isActive(entry) {\n      if (!this.activeEntries) return false;\n      const item = this.activeEntries.find(d => {\n        return entry.label === d.name;\n      });\n      return item !== undefined;\n    }\n    activate(item) {\n      this.labelActivate.emit(item);\n    }\n    deactivate(item) {\n      this.labelDeactivate.emit(item);\n    }\n    trackBy(index, item) {\n      return item.label;\n    }\n    static {\n      this.ɵfac = function LegendComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || LegendComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: LegendComponent,\n        selectors: [[\"ngx-charts-legend\"]],\n        inputs: {\n          data: \"data\",\n          title: \"title\",\n          colors: \"colors\",\n          height: \"height\",\n          width: \"width\",\n          activeEntries: \"activeEntries\",\n          horizontal: \"horizontal\"\n        },\n        outputs: {\n          labelClick: \"labelClick\",\n          labelActivate: \"labelActivate\",\n          labelDeactivate: \"labelDeactivate\"\n        },\n        standalone: false,\n        features: [i0.ɵɵNgOnChangesFeature],\n        decls: 5,\n        vars: 9,\n        consts: [[\"class\", \"legend-title\", 4, \"ngIf\"], [1, \"legend-wrap\"], [1, \"legend-labels\"], [\"class\", \"legend-label\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"legend-title\"], [1, \"legend-title-text\"], [1, \"legend-label\"], [3, \"select\", \"activate\", \"deactivate\", \"label\", \"formattedLabel\", \"color\", \"isActive\"]],\n        template: function LegendComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\");\n            i0.ɵɵtemplate(1, LegendComponent_header_1_Template, 3, 1, \"header\", 0);\n            i0.ɵɵelementStart(2, \"div\", 1)(3, \"ul\", 2);\n            i0.ɵɵtemplate(4, LegendComponent_li_4_Template, 2, 4, \"li\", 3);\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵstyleProp(\"width\", ctx.width, \"px\");\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", (ctx.title == null ? null : ctx.title.length) > 0);\n            i0.ɵɵadvance(2);\n            i0.ɵɵstyleProp(\"max-height\", ctx.height - 45, \"px\");\n            i0.ɵɵclassProp(\"horizontal-legend\", ctx.horizontal);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngForOf\", ctx.legendEntries)(\"ngForTrackBy\", ctx.trackBy);\n          }\n        },\n        dependencies: [i1.NgForOf, i1.NgIf, LegendEntryComponent],\n        styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .legend-title{white-space:nowrap;overflow:hidden;margin-left:10px;margin-bottom:5px;font-size:14px;font-weight:700}.chart-legend ul,.chart-legend li{padding:0;margin:0;list-style:none}.chart-legend .horizontal-legend li{display:inline-block}.chart-legend .legend-wrap{width:calc(100% - 10px)}.chart-legend .legend-labels{line-height:85%;list-style:none;text-align:left;float:left;width:100%;border-radius:3px;overflow-y:auto;overflow-x:hidden;white-space:nowrap;background:#0000000d}.chart-legend .legend-label{cursor:pointer;font-size:90%;margin:8px;color:#afb7c8}.chart-legend .legend-label:hover{color:#000;-webkit-transition:.2s;-moz-transition:.2s;transition:.2s}.chart-legend .legend-label .active .legend-label-text{color:#000}.chart-legend .legend-label-color{display:inline-block;height:15px;width:15px;margin-right:5px;color:#5b646b;border-radius:3px}.chart-legend .legend-label-text{display:inline-block;vertical-align:top;line-height:15px;font-size:12px;width:calc(100% - 20px);text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.chart-legend .legend-title-text{vertical-align:bottom;display:inline-block;line-height:16px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}\\n\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return LegendComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet ScaleLegendComponent = /*#__PURE__*/(() => {\n  class ScaleLegendComponent {\n    constructor() {\n      this.horizontal = false;\n    }\n    ngOnChanges(changes) {\n      const gradientValues = this.gradientString(this.colors.range(), this.colors.domain());\n      const direction = this.horizontal ? 'right' : 'bottom';\n      this.gradient = `linear-gradient(to ${direction}, ${gradientValues})`;\n    }\n    /**\n     * Generates the string used in the gradient stylesheet properties\n     * @param colors array of colors\n     * @param splits array of splits on a scale of (0, 1)\n     */\n    gradientString(colors, splits) {\n      // add the 100%\n      splits.push(1);\n      const pairs = [];\n      colors.reverse().forEach((c, i) => {\n        pairs.push(`${c} ${Math.round(splits[i] * 100)}%`);\n      });\n      return pairs.join(', ');\n    }\n    static {\n      this.ɵfac = function ScaleLegendComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || ScaleLegendComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: ScaleLegendComponent,\n        selectors: [[\"ngx-charts-scale-legend\"]],\n        inputs: {\n          valueRange: \"valueRange\",\n          colors: \"colors\",\n          height: \"height\",\n          width: \"width\",\n          horizontal: \"horizontal\"\n        },\n        standalone: false,\n        features: [i0.ɵɵNgOnChangesFeature],\n        decls: 8,\n        vars: 10,\n        consts: [[1, \"scale-legend\"], [1, \"scale-legend-label\"], [1, \"scale-legend-wrap\"]],\n        template: function ScaleLegendComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"span\");\n            i0.ɵɵtext(3);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelement(4, \"div\", 2);\n            i0.ɵɵelementStart(5, \"div\", 1)(6, \"span\");\n            i0.ɵɵtext(7);\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵstyleProp(\"height\", ctx.horizontal ? undefined : ctx.height, \"px\")(\"width\", ctx.width, \"px\");\n            i0.ɵɵclassProp(\"horizontal-legend\", ctx.horizontal);\n            i0.ɵɵadvance(3);\n            i0.ɵɵtextInterpolate(ctx.valueRange[1].toLocaleString());\n            i0.ɵɵadvance();\n            i0.ɵɵstyleProp(\"background\", ctx.gradient);\n            i0.ɵɵadvance(3);\n            i0.ɵɵtextInterpolate(ctx.valueRange[0].toLocaleString());\n          }\n        },\n        styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .scale-legend{text-align:center;display:flex;flex-direction:column}.chart-legend .scale-legend-wrap{display:inline-block;flex:1;width:30px;border-radius:5px;margin:0 auto}.chart-legend .scale-legend-label{font-size:12px}.chart-legend .horizontal-legend.scale-legend{flex-direction:row}.chart-legend .horizontal-legend .scale-legend-wrap{width:auto;height:30px;margin:0 16px}\\n\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return ScaleLegendComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet ChartComponent = /*#__PURE__*/(() => {\n  class ChartComponent {\n    constructor() {\n      this.showLegend = false;\n      this.animations = true;\n      this.legendLabelClick = new EventEmitter();\n      this.legendLabelActivate = new EventEmitter();\n      this.legendLabelDeactivate = new EventEmitter();\n      this.LegendPosition = LegendPosition;\n      this.LegendType = LegendType;\n    }\n    ngOnChanges(changes) {\n      this.update();\n    }\n    update() {\n      let legendColumns = 0;\n      if (this.showLegend) {\n        this.legendType = this.getLegendType();\n        if (!this.legendOptions || this.legendOptions.position === LegendPosition.Right) {\n          if (this.legendType === LegendType.ScaleLegend) {\n            legendColumns = 1;\n          } else {\n            legendColumns = 2;\n          }\n        }\n      }\n      const chartColumns = 12 - legendColumns;\n      this.chartWidth = Math.floor(this.view[0] * chartColumns / 12.0);\n      this.legendWidth = !this.legendOptions || this.legendOptions.position === LegendPosition.Right ? Math.floor(this.view[0] * legendColumns / 12.0) : this.chartWidth;\n    }\n    getLegendType() {\n      return this.legendOptions.scaleType === ScaleType.Linear ? LegendType.ScaleLegend : LegendType.Legend;\n    }\n    static {\n      this.ɵfac = function ChartComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || ChartComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: ChartComponent,\n        selectors: [[\"ngx-charts-chart\"]],\n        inputs: {\n          view: \"view\",\n          showLegend: \"showLegend\",\n          legendOptions: \"legendOptions\",\n          legendType: \"legendType\",\n          activeEntries: \"activeEntries\",\n          animations: \"animations\"\n        },\n        outputs: {\n          legendLabelClick: \"legendLabelClick\",\n          legendLabelActivate: \"legendLabelActivate\",\n          legendLabelDeactivate: \"legendLabelDeactivate\"\n        },\n        standalone: false,\n        features: [i0.ɵɵProvidersFeature([TooltipService]), i0.ɵɵNgOnChangesFeature],\n        ngContentSelectors: _c2,\n        decls: 5,\n        vars: 8,\n        consts: [[1, \"ngx-charts-outer\"], [1, \"ngx-charts\"], [\"class\", \"chart-legend\", 3, \"horizontal\", \"valueRange\", \"colors\", \"height\", \"width\", 4, \"ngIf\"], [\"class\", \"chart-legend\", 3, \"horizontal\", \"data\", \"title\", \"colors\", \"height\", \"width\", \"activeEntries\", \"labelClick\", \"labelActivate\", \"labelDeactivate\", 4, \"ngIf\"], [1, \"chart-legend\", 3, \"horizontal\", \"valueRange\", \"colors\", \"height\", \"width\"], [1, \"chart-legend\", 3, \"labelClick\", \"labelActivate\", \"labelDeactivate\", \"horizontal\", \"data\", \"title\", \"colors\", \"height\", \"width\", \"activeEntries\"]],\n        template: function ChartComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵelementStart(0, \"div\", 0);\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(1, \"svg\", 1);\n            i0.ɵɵprojection(2);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(3, ChartComponent_ngx_charts_scale_legend_3_Template, 1, 5, \"ngx-charts-scale-legend\", 2)(4, ChartComponent_ngx_charts_legend_4_Template, 1, 7, \"ngx-charts-legend\", 3);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵstyleProp(\"width\", ctx.view[0], \"px\")(\"height\", ctx.view[1], \"px\");\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"width\", ctx.chartWidth)(\"height\", ctx.view[1]);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngIf\", ctx.showLegend && ctx.legendType === ctx.LegendType.ScaleLegend);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.showLegend && ctx.legendType === ctx.LegendType.Legend);\n          }\n        },\n        dependencies: [i1.NgIf, LegendComponent, ScaleLegendComponent],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return ChartComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Visibility Observer\n */\nlet VisibilityObserver = /*#__PURE__*/(() => {\n  class VisibilityObserver {\n    constructor(element, zone) {\n      this.element = element;\n      this.zone = zone;\n      this.visible = new EventEmitter();\n      this.isVisible = false;\n      this.runCheck();\n    }\n    destroy() {\n      clearTimeout(this.timeout);\n    }\n    onVisibilityChange() {\n      // trigger zone recalc for columns\n      this.zone.run(() => {\n        this.isVisible = true;\n        this.visible.emit(true);\n      });\n    }\n    runCheck() {\n      const check = () => {\n        if (!this.element) {\n          return;\n        }\n        // https://davidwalsh.name/offsetheight-visibility\n        const {\n          offsetHeight,\n          offsetWidth\n        } = this.element.nativeElement;\n        if (offsetHeight && offsetWidth) {\n          clearTimeout(this.timeout);\n          this.onVisibilityChange();\n        } else {\n          clearTimeout(this.timeout);\n          this.zone.runOutsideAngular(() => {\n            this.timeout = setTimeout(() => check(), 100);\n          });\n        }\n      };\n      this.zone.runOutsideAngular(() => {\n        this.timeout = setTimeout(() => check());\n      });\n    }\n    static {\n      this.ɵfac = function VisibilityObserver_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || VisibilityObserver)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: VisibilityObserver,\n        selectors: [[\"visibility-observer\"]],\n        outputs: {\n          visible: \"visible\"\n        },\n        standalone: false\n      });\n    }\n  }\n  return VisibilityObserver;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction isDate(value) {\n  return toString.call(value) === '[object Date]';\n}\nfunction isNumber(value) {\n  return typeof value === 'number';\n}\nlet BaseChartComponent = /*#__PURE__*/(() => {\n  class BaseChartComponent {\n    constructor(chartElement, zone, cd, platformId) {\n      this.chartElement = chartElement;\n      this.zone = zone;\n      this.cd = cd;\n      this.platformId = platformId;\n      this.scheme = 'cool';\n      this.schemeType = ScaleType.Ordinal;\n      this.animations = true;\n      this.select = new EventEmitter();\n    }\n    ngOnInit() {\n      if (isPlatformServer(this.platformId)) {\n        this.animations = false;\n      }\n    }\n    ngAfterViewInit() {\n      this.bindWindowResizeEvent();\n      // listen for visibility of the element for hidden by default scenario\n      this.visibilityObserver = new VisibilityObserver(this.chartElement, this.zone);\n      this.visibilityObserver.visible.subscribe(this.update.bind(this));\n    }\n    ngOnDestroy() {\n      this.unbindEvents();\n      if (this.visibilityObserver) {\n        this.visibilityObserver.visible.unsubscribe();\n        this.visibilityObserver.destroy();\n      }\n    }\n    ngOnChanges(changes) {\n      this.update();\n    }\n    update() {\n      if (this.results) {\n        this.results = this.cloneData(this.results);\n      } else {\n        this.results = [];\n      }\n      if (this.view) {\n        this.width = this.view[0];\n        this.height = this.view[1];\n      } else {\n        const dims = this.getContainerDims();\n        if (dims) {\n          this.width = dims.width;\n          this.height = dims.height;\n        }\n      }\n      // default values if width or height are 0 or undefined\n      if (!this.width) {\n        this.width = 600;\n      }\n      if (!this.height) {\n        this.height = 400;\n      }\n      this.width = Math.floor(this.width);\n      this.height = Math.floor(this.height);\n      if (this.cd) {\n        this.cd.markForCheck();\n      }\n    }\n    getContainerDims() {\n      let width;\n      let height;\n      const hostElem = this.chartElement.nativeElement;\n      if (isPlatformBrowser(this.platformId) && hostElem.parentNode !== null) {\n        // Get the container dimensions\n        const dims = hostElem.parentNode.getBoundingClientRect();\n        width = dims.width;\n        height = dims.height;\n      }\n      if (width && height) {\n        return {\n          width,\n          height\n        };\n      }\n      return null;\n    }\n    /**\n     * Converts all date objects that appear as name\n     * into formatted date strings\n     */\n    formatDates() {\n      for (let i = 0; i < this.results.length; i++) {\n        const g = this.results[i];\n        g.label = g.name;\n        if (isDate(g.label)) {\n          g.label = g.label.toLocaleDateString();\n        }\n        if (g.series) {\n          for (let j = 0; j < g.series.length; j++) {\n            const d = g.series[j];\n            d.label = d.name;\n            if (isDate(d.label)) {\n              d.label = d.label.toLocaleDateString();\n            }\n          }\n        }\n      }\n    }\n    unbindEvents() {\n      if (this.resizeSubscription) {\n        this.resizeSubscription.unsubscribe();\n      }\n    }\n    bindWindowResizeEvent() {\n      if (!isPlatformBrowser(this.platformId)) {\n        return;\n      }\n      const source = fromEvent(window, 'resize');\n      const subscription = source.pipe(debounceTime(200)).subscribe(e => {\n        this.update();\n        if (this.cd) {\n          this.cd.markForCheck();\n        }\n      });\n      this.resizeSubscription = subscription;\n    }\n    /**\n     * Clones the data into a new object\n     *\n     * @memberOf BaseChart\n     */\n    cloneData(data) {\n      const results = [];\n      for (const item of data) {\n        const copy = {};\n        if (item['name'] !== undefined) {\n          copy['name'] = item['name'];\n        }\n        if (item['value'] !== undefined) {\n          copy['value'] = item['value'];\n        }\n        if (item['series'] !== undefined) {\n          copy['series'] = [];\n          for (const seriesItem of item['series']) {\n            const seriesItemCopy = Object.assign({}, seriesItem);\n            copy['series'].push(seriesItemCopy);\n          }\n        }\n        if (item['extra'] !== undefined) {\n          copy['extra'] = JSON.parse(JSON.stringify(item['extra']));\n        }\n        if (item['source'] !== undefined) {\n          copy['source'] = item['source'];\n        }\n        if (item['target'] !== undefined) {\n          copy['target'] = item['target'];\n        }\n        results.push(copy);\n      }\n      return results;\n    }\n    static {\n      this.ɵfac = function BaseChartComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || BaseChartComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(PLATFORM_ID));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: BaseChartComponent,\n        selectors: [[\"base-chart\"]],\n        inputs: {\n          results: \"results\",\n          view: \"view\",\n          scheme: \"scheme\",\n          schemeType: \"schemeType\",\n          customColors: \"customColors\",\n          animations: \"animations\"\n        },\n        outputs: {\n          select: \"select\"\n        },\n        standalone: false,\n        features: [i0.ɵɵNgOnChangesFeature],\n        decls: 1,\n        vars: 0,\n        template: function BaseChartComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelement(0, \"div\");\n          }\n        },\n        encapsulation: 2\n      });\n    }\n  }\n  return BaseChartComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nvar Orientation = /*#__PURE__*/function (Orientation) {\n  Orientation[\"Top\"] = \"top\";\n  Orientation[\"Bottom\"] = \"bottom\";\n  Orientation[\"Left\"] = \"left\";\n  Orientation[\"Right\"] = \"right\";\n  return Orientation;\n}(Orientation || {});\nlet AxisLabelComponent = /*#__PURE__*/(() => {\n  class AxisLabelComponent {\n    constructor(element) {\n      this.textHeight = 25;\n      this.margin = 5;\n      this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n      this.update();\n    }\n    update() {\n      this.strokeWidth = '0.01';\n      this.textAnchor = 'middle';\n      this.transform = '';\n      switch (this.orient) {\n        case Orientation.Top:\n          this.y = this.offset;\n          this.x = this.width / 2;\n          break;\n        case Orientation.Bottom:\n          this.y = this.offset;\n          this.x = this.width / 2;\n          break;\n        case Orientation.Left:\n          this.y = -(this.offset + this.textHeight + this.margin);\n          this.x = -this.height / 2;\n          this.transform = 'rotate(270)';\n          break;\n        case Orientation.Right:\n          this.y = this.offset + this.margin;\n          this.x = -this.height / 2;\n          this.transform = 'rotate(270)';\n          break;\n        default:\n      }\n    }\n    static {\n      this.ɵfac = function AxisLabelComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || AxisLabelComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: AxisLabelComponent,\n        selectors: [[\"g\", \"ngx-charts-axis-label\", \"\"]],\n        inputs: {\n          orient: \"orient\",\n          label: \"label\",\n          offset: \"offset\",\n          width: \"width\",\n          height: \"height\"\n        },\n        standalone: false,\n        features: [i0.ɵɵNgOnChangesFeature],\n        attrs: _c3,\n        decls: 2,\n        vars: 6,\n        template: function AxisLabelComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(0, \"text\");\n            i0.ɵɵtext(1);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵattribute(\"stroke-width\", ctx.strokeWidth)(\"x\", ctx.x)(\"y\", ctx.y)(\"text-anchor\", ctx.textAnchor)(\"transform\", ctx.transform);\n            i0.ɵɵadvance();\n            i0.ɵɵtextInterpolate1(\" \", ctx.label, \" \");\n          }\n        },\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return AxisLabelComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction trimLabel(s, max = 16) {\n  if (typeof s !== 'string') {\n    if (typeof s === 'number') {\n      return s + '';\n    } else {\n      return '';\n    }\n  }\n  s = s.trim();\n  if (s.length <= max) {\n    return s;\n  } else {\n    return `${s.slice(0, max)}...`;\n  }\n}\nfunction reduceTicks(ticks, maxTicks) {\n  if (ticks.length > maxTicks) {\n    const reduced = [];\n    const modulus = Math.floor(ticks.length / maxTicks);\n    for (let i = 0; i < ticks.length; i++) {\n      if (i % modulus === 0) {\n        reduced.push(ticks[i]);\n      }\n    }\n    ticks = reduced;\n  }\n  return ticks;\n}\nfunction getTickLines(label, maxLength, maxLines) {\n  const labelString = (label || '').toString();\n  let totalLines = [];\n  if (/\\s/.test(labelString)) {\n    totalLines = labelString.split(/\\s+/).reduce((lines, line) => {\n      const last = (lines.pop() || '') + ' ';\n      return last.length + line.length > maxLength ? [...lines, last.trim(), line.trim()] : [...lines, last + line];\n    }, []);\n  } else {\n    let startIndex = 0;\n    while (startIndex < labelString.length) {\n      totalLines.push(labelString.substring(startIndex, startIndex + maxLength));\n      startIndex += maxLength;\n    }\n  }\n  if (totalLines.length > maxLines) {\n    totalLines = totalLines.splice(0, maxLines);\n    totalLines[totalLines.length - 1] += '...';\n  }\n  return totalLines;\n}\nvar TextAnchor = /*#__PURE__*/function (TextAnchor) {\n  TextAnchor[\"Start\"] = \"start\";\n  TextAnchor[\"Middle\"] = \"middle\";\n  TextAnchor[\"End\"] = \"end\";\n  return TextAnchor;\n}(TextAnchor || {});\nlet XAxisTicksComponent = /*#__PURE__*/(() => {\n  class XAxisTicksComponent {\n    get isWrapTicksSupported() {\n      return this.wrapTicks && this.scale.step;\n    }\n    constructor(platformId) {\n      this.platformId = platformId;\n      this.tickArguments = [5];\n      this.tickStroke = '#ccc';\n      this.trimTicks = true;\n      this.maxTickLength = 16;\n      this.showGridLines = false;\n      this.rotateTicks = true;\n      this.wrapTicks = false;\n      this.dimensionsChanged = new EventEmitter();\n      this.verticalSpacing = 20;\n      this.rotateLabels = false;\n      this.innerTickSize = 6;\n      this.outerTickSize = 6;\n      this.tickPadding = 3;\n      this.textAnchor = TextAnchor.Middle;\n      this.maxTicksLength = 0;\n      this.maxAllowedLength = 16;\n      this.height = 0;\n      this.approxHeight = 10;\n      this.maxPossibleLengthForTickIfWrapped = 16;\n    }\n    ngOnChanges(changes) {\n      this.update();\n    }\n    ngAfterViewInit() {\n      setTimeout(() => this.updateDims());\n    }\n    updateDims() {\n      if (!isPlatformBrowser(this.platformId)) {\n        // for SSR, use approximate value instead of measured\n        this.dimensionsChanged.emit({\n          height: this.approxHeight\n        });\n        return;\n      }\n      const height = parseInt(this.ticksElement.nativeElement.getBoundingClientRect().height, 10);\n      if (height !== this.height) {\n        this.height = height;\n        this.dimensionsChanged.emit({\n          height: this.height\n        });\n        setTimeout(() => this.updateDims());\n      }\n    }\n    update() {\n      const scale = this.scale;\n      this.ticks = this.getTicks();\n      if (this.tickFormatting) {\n        this.tickFormat = this.tickFormatting;\n      } else if (scale.tickFormat) {\n        // eslint-disable-next-line prefer-spread\n        this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\n      } else {\n        this.tickFormat = function (d) {\n          if (d.constructor.name === 'Date') {\n            return d.toLocaleDateString();\n          }\n          return d.toLocaleString();\n        };\n      }\n      const angle = this.rotateTicks ? this.getRotationAngle(this.ticks) : null;\n      this.adjustedScale = this.scale.bandwidth ? function (d) {\n        return this.scale(d) + this.scale.bandwidth() * 0.5;\n      } : this.scale;\n      this.textTransform = '';\n      if (angle && angle !== 0) {\n        this.textTransform = `rotate(${angle})`;\n        this.textAnchor = TextAnchor.End;\n        this.verticalSpacing = 10;\n      } else {\n        this.textAnchor = TextAnchor.Middle;\n      }\n      setTimeout(() => this.updateDims());\n    }\n    getRotationAngle(ticks) {\n      let angle = 0;\n      this.maxTicksLength = 0;\n      for (let i = 0; i < ticks.length; i++) {\n        const tick = this.tickFormat(ticks[i]).toString();\n        let tickLength = tick.length;\n        if (this.trimTicks) {\n          tickLength = this.tickTrim(tick).length;\n        }\n        if (tickLength > this.maxTicksLength) {\n          this.maxTicksLength = tickLength;\n        }\n      }\n      const len = Math.min(this.maxTicksLength, this.maxAllowedLength);\n      const charWidth = 7; // need to measure this\n      const wordWidth = len * charWidth;\n      let baseWidth = wordWidth;\n      const maxBaseWidth = Math.floor(this.width / ticks.length);\n      // calculate optimal angle\n      while (baseWidth > maxBaseWidth && angle > -90) {\n        angle -= 30;\n        baseWidth = Math.cos(angle * (Math.PI / 180)) * wordWidth;\n      }\n      let labelHeight = 14;\n      if (this.isWrapTicksSupported) {\n        const longestTick = this.ticks.reduce((earlier, current) => current.length > earlier.length ? current : earlier, '');\n        const tickLines = this.tickChunks(longestTick);\n        labelHeight = 14 * (tickLines.length || 1);\n        this.maxPossibleLengthForTickIfWrapped = this.getMaxPossibleLengthForTick(longestTick);\n      }\n      const requiredHeight = angle !== 0 ? Math.max(Math.abs(Math.sin(angle * Math.PI / 180)) * this.maxTickLength * charWidth, 10) : labelHeight;\n      this.approxHeight = Math.min(requiredHeight, 200);\n      return angle;\n    }\n    getTicks() {\n      let ticks;\n      const maxTicks = this.getMaxTicks(20);\n      const maxScaleTicks = this.getMaxTicks(100);\n      if (this.tickValues) {\n        ticks = this.tickValues;\n      } else if (this.scale.ticks) {\n        ticks = this.scale.ticks.apply(this.scale, [maxScaleTicks]);\n      } else {\n        ticks = this.scale.domain();\n        ticks = reduceTicks(ticks, maxTicks);\n      }\n      return ticks;\n    }\n    getMaxTicks(tickWidth) {\n      return Math.floor(this.width / tickWidth);\n    }\n    tickTransform(tick) {\n      return 'translate(' + this.adjustedScale(tick) + ',' + this.verticalSpacing + ')';\n    }\n    gridLineTransform() {\n      return `translate(0,${-this.verticalSpacing - 5})`;\n    }\n    tickTrim(label) {\n      return this.trimTicks ? trimLabel(label, this.maxTickLength) : label;\n    }\n    getMaxPossibleLengthForTick(longestLabel) {\n      if (this.scale.bandwidth) {\n        const averageCharacterWidth = 7; // approximate char width\n        const maxCharacters = Math.floor(this.scale.bandwidth() / averageCharacterWidth);\n        const truncatedText = longestLabel.slice(0, maxCharacters);\n        return Math.max(truncatedText.length, this.maxTickLength);\n      }\n      return this.maxTickLength;\n    }\n    tickChunks(label) {\n      if (label.toString().length > this.maxTickLength && this.scale.bandwidth) {\n        const maxAllowedLines = 5;\n        let maxLines = this.rotateTicks ? Math.floor(this.scale.step() / 14) : maxAllowedLines;\n        if (maxLines <= 1) {\n          return [this.tickTrim(label)];\n        }\n        let possibleStringLength = Math.max(this.maxPossibleLengthForTickIfWrapped, this.maxTickLength);\n        if (!isPlatformBrowser(this.platformId)) {\n          possibleStringLength = Math.floor(Math.min(this.approxHeight / maxAllowedLines, Math.max(this.maxPossibleLengthForTickIfWrapped, this.maxTickLength)));\n        }\n        maxLines = Math.min(maxLines, maxAllowedLines);\n        const lines = getTickLines(label, possibleStringLength, maxLines < 1 ? 1 : maxLines);\n        return lines;\n      }\n      return [this.tickTrim(label)];\n    }\n    static {\n      this.ɵfac = function XAxisTicksComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || XAxisTicksComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: XAxisTicksComponent,\n        selectors: [[\"g\", \"ngx-charts-x-axis-ticks\", \"\"]],\n        viewQuery: function XAxisTicksComponent_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c4, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ticksElement = _t.first);\n          }\n        },\n        inputs: {\n          scale: \"scale\",\n          orient: \"orient\",\n          tickArguments: \"tickArguments\",\n          tickValues: \"tickValues\",\n          tickStroke: \"tickStroke\",\n          trimTicks: \"trimTicks\",\n          maxTickLength: \"maxTickLength\",\n          tickFormatting: \"tickFormatting\",\n          showGridLines: \"showGridLines\",\n          gridLineHeight: \"gridLineHeight\",\n          width: \"width\",\n          rotateTicks: \"rotateTicks\",\n          wrapTicks: \"wrapTicks\"\n        },\n        outputs: {\n          dimensionsChanged: \"dimensionsChanged\"\n        },\n        standalone: false,\n        features: [i0.ɵɵNgOnChangesFeature],\n        attrs: _c5,\n        decls: 4,\n        vars: 2,\n        consts: [[\"ticksel\", \"\"], [\"tmplMultilineTick\", \"\"], [\"tmplSinglelineTick\", \"\"], [\"class\", \"tick\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"tick\"], [4, \"ngIf\"], [\"stroke-width\", \"0.01\", \"font-size\", \"12px\"], [4, \"ngIf\", \"ngIfThen\", \"ngIfElse\"], [\"x\", \"0\", 4, \"ngFor\", \"ngForOf\"], [\"x\", \"0\"], [\"y2\", \"0\", 1, \"gridline-path\", \"gridline-path-vertical\"]],\n        template: function XAxisTicksComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(0, \"g\", null, 0);\n            i0.ɵɵtemplate(2, XAxisTicksComponent__svg_g_2_Template, 2, 2, \"g\", 3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(3, XAxisTicksComponent__svg_g_3_Template, 2, 2, \"g\", 4);\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngForOf\", ctx.ticks);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngForOf\", ctx.ticks);\n          }\n        },\n        dependencies: [i1.NgForOf, i1.NgIf],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return XAxisTicksComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet XAxisComponent = /*#__PURE__*/(() => {\n  class XAxisComponent {\n    constructor() {\n      this.rotateTicks = true;\n      this.showGridLines = false;\n      this.xOrient = Orientation.Bottom;\n      this.xAxisOffset = 0;\n      this.wrapTicks = false;\n      this.dimensionsChanged = new EventEmitter();\n      this.xAxisClassName = 'x axis';\n      this.labelOffset = 0;\n      this.fill = 'none';\n      this.stroke = 'stroke';\n      this.tickStroke = '#ccc';\n      this.strokeWidth = 'none';\n      this.padding = 5;\n      this.orientation = Orientation;\n    }\n    ngOnChanges(changes) {\n      this.update();\n    }\n    update() {\n      this.transform = `translate(0,${this.xAxisOffset + this.padding + this.dims.height})`;\n      if (typeof this.xAxisTickCount !== 'undefined') {\n        this.tickArguments = [this.xAxisTickCount];\n      }\n    }\n    emitTicksHeight({\n      height\n    }) {\n      const newLabelOffset = height + 25 + 5;\n      if (newLabelOffset !== this.labelOffset) {\n        this.labelOffset = newLabelOffset;\n        setTimeout(() => {\n          this.dimensionsChanged.emit({\n            height\n          });\n        }, 0);\n      }\n    }\n    static {\n      this.ɵfac = function XAxisComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || XAxisComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: XAxisComponent,\n        selectors: [[\"g\", \"ngx-charts-x-axis\", \"\"]],\n        viewQuery: function XAxisComponent_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(XAxisTicksComponent, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ticksComponent = _t.first);\n          }\n        },\n        inputs: {\n          xScale: \"xScale\",\n          dims: \"dims\",\n          trimTicks: \"trimTicks\",\n          rotateTicks: \"rotateTicks\",\n          maxTickLength: \"maxTickLength\",\n          tickFormatting: \"tickFormatting\",\n          showGridLines: \"showGridLines\",\n          showLabel: \"showLabel\",\n          labelText: \"labelText\",\n          ticks: \"ticks\",\n          xAxisTickCount: \"xAxisTickCount\",\n          xOrient: \"xOrient\",\n          xAxisOffset: \"xAxisOffset\",\n          wrapTicks: \"wrapTicks\"\n        },\n        outputs: {\n          dimensionsChanged: \"dimensionsChanged\"\n        },\n        standalone: false,\n        features: [i0.ɵɵNgOnChangesFeature],\n        attrs: _c6,\n        decls: 3,\n        vars: 4,\n        consts: [[\"ngx-charts-x-axis-ticks\", \"\", 3, \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"tickArguments\", \"tickStroke\", \"scale\", \"orient\", \"showGridLines\", \"gridLineHeight\", \"width\", \"tickValues\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-axis-label\", \"\", 3, \"label\", \"offset\", \"orient\", \"height\", \"width\", 4, \"ngIf\"], [\"ngx-charts-x-axis-ticks\", \"\", 3, \"dimensionsChanged\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"tickArguments\", \"tickStroke\", \"scale\", \"orient\", \"showGridLines\", \"gridLineHeight\", \"width\", \"tickValues\", \"wrapTicks\"], [\"ngx-charts-axis-label\", \"\", 3, \"label\", \"offset\", \"orient\", \"height\", \"width\"]],\n        template: function XAxisComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(0, \"g\");\n            i0.ɵɵtemplate(1, XAxisComponent__svg_g_1_Template, 1, 13, \"g\", 0)(2, XAxisComponent__svg_g_2_Template, 1, 5, \"g\", 1);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵattribute(\"class\", ctx.xAxisClassName)(\"transform\", ctx.transform);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.xScale);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.showLabel);\n          }\n        },\n        dependencies: [i1.NgIf, AxisLabelComponent, XAxisTicksComponent],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return XAxisComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generates a rounded rectanglar path\n *\n * @export\n * @param x, y, w, h, r, tl, tr, bl, br\n */\nfunction roundedRect(x, y, w, h, r, [tl, tr, bl, br]) {\n  let retval = '';\n  w = Math.floor(w);\n  h = Math.floor(h);\n  w = w === 0 ? 1 : w;\n  h = h === 0 ? 1 : h;\n  retval = `M${[x + r, y]}`;\n  retval += `h${w - 2 * r}`;\n  if (tr) {\n    retval += `a${[r, r]} 0 0 1 ${[r, r]}`;\n  } else {\n    retval += `h${r}v${r}`;\n  }\n  retval += `v${h - 2 * r}`;\n  if (br) {\n    retval += `a${[r, r]} 0 0 1 ${[-r, r]}`;\n  } else {\n    retval += `v${r}h${-r}`;\n  }\n  retval += `h${2 * r - w}`;\n  if (bl) {\n    retval += `a${[r, r]} 0 0 1 ${[-r, -r]}`;\n  } else {\n    retval += `h${-r}v${-r}`;\n  }\n  retval += `v${2 * r - h}`;\n  if (tl) {\n    retval += `a${[r, r]} 0 0 1 ${[r, -r]}`;\n  } else {\n    retval += `v${-r}h${r}`;\n  }\n  retval += `z`;\n  return retval;\n}\nlet YAxisTicksComponent = /*#__PURE__*/(() => {\n  class YAxisTicksComponent {\n    constructor(platformId) {\n      this.platformId = platformId;\n      this.tickArguments = [5];\n      this.tickStroke = '#ccc';\n      this.trimTicks = true;\n      this.maxTickLength = 16;\n      this.showGridLines = false;\n      this.showRefLabels = false;\n      this.showRefLines = false;\n      this.wrapTicks = false;\n      this.dimensionsChanged = new EventEmitter();\n      this.innerTickSize = 6;\n      this.tickPadding = 3;\n      this.verticalSpacing = 20;\n      this.textAnchor = TextAnchor.Middle;\n      this.width = 0;\n      this.outerTickSize = 6;\n      this.rotateLabels = false;\n      this.referenceLineLength = 0;\n      this.Orientation = Orientation;\n    }\n    ngOnChanges(changes) {\n      this.update();\n    }\n    ngAfterViewInit() {\n      setTimeout(() => this.updateDims());\n    }\n    updateDims() {\n      if (!isPlatformBrowser(this.platformId)) {\n        // for SSR, use approximate value instead of measured\n        this.width = this.getApproximateAxisWidth();\n        this.dimensionsChanged.emit({\n          width: this.width\n        });\n        return;\n      }\n      const width = parseInt(this.ticksElement.nativeElement.getBoundingClientRect().width, 10);\n      if (width !== this.width) {\n        this.width = width;\n        this.dimensionsChanged.emit({\n          width\n        });\n        setTimeout(() => this.updateDims());\n      }\n    }\n    update() {\n      const scale = this.scale;\n      const sign = this.orient === Orientation.Top || this.orient === Orientation.Right ? -1 : 1;\n      this.tickSpacing = Math.max(this.innerTickSize, 0) + this.tickPadding;\n      this.ticks = this.getTicks();\n      if (this.tickFormatting) {\n        this.tickFormat = this.tickFormatting;\n      } else if (scale.tickFormat) {\n        // eslint-disable-next-line prefer-spread\n        this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\n      } else {\n        this.tickFormat = function (d) {\n          if (d.constructor.name === 'Date') {\n            return d.toLocaleDateString();\n          }\n          return d.toLocaleString();\n        };\n      }\n      this.adjustedScale = scale.bandwidth ? d => {\n        // position the tick to middle considering number of lines of the tick\n        const positionMiddle = scale(d) + scale.bandwidth() * 0.5;\n        if (this.wrapTicks && d.toString().length > this.maxTickLength) {\n          const chunksLength = this.tickChunks(d).length;\n          if (chunksLength === 1) {\n            return positionMiddle;\n          }\n          const bandWidth = scale.bandwidth();\n          const heightOfLines = chunksLength * 8;\n          const availableFreeSpace = bandWidth * 0.5 - heightOfLines * 0.5;\n          return scale(d) + availableFreeSpace;\n        }\n        return positionMiddle;\n      } : scale;\n      if (this.showRefLines && this.referenceLines) {\n        this.setReferencelines();\n      }\n      switch (this.orient) {\n        case Orientation.Top:\n          this.transform = function (tick) {\n            return 'translate(' + this.adjustedScale(tick) + ',0)';\n          };\n          this.textAnchor = TextAnchor.Middle;\n          this.y2 = this.innerTickSize * sign;\n          this.y1 = this.tickSpacing * sign;\n          this.dy = sign < 0 ? '0em' : '.71em';\n          break;\n        case Orientation.Bottom:\n          this.transform = function (tick) {\n            return 'translate(' + this.adjustedScale(tick) + ',0)';\n          };\n          this.textAnchor = TextAnchor.Middle;\n          this.y2 = this.innerTickSize * sign;\n          this.y1 = this.tickSpacing * sign;\n          this.dy = sign < 0 ? '0em' : '.71em';\n          break;\n        case Orientation.Left:\n          this.transform = function (tick) {\n            return 'translate(0,' + this.adjustedScale(tick) + ')';\n          };\n          this.textAnchor = TextAnchor.End;\n          this.x2 = this.innerTickSize * -sign;\n          this.x1 = this.tickSpacing * -sign;\n          this.dy = '.32em';\n          break;\n        case Orientation.Right:\n          this.transform = function (tick) {\n            return 'translate(0,' + this.adjustedScale(tick) + ')';\n          };\n          this.textAnchor = TextAnchor.Start;\n          this.x2 = this.innerTickSize * -sign;\n          this.x1 = this.tickSpacing * -sign;\n          this.dy = '.32em';\n          break;\n        default:\n      }\n      setTimeout(() => this.updateDims());\n    }\n    setReferencelines() {\n      this.refMin = this.adjustedScale(Math.min.apply(null, this.referenceLines.map(item => item.value)));\n      this.refMax = this.adjustedScale(Math.max.apply(null, this.referenceLines.map(item => item.value)));\n      this.referenceLineLength = this.referenceLines.length;\n      this.referenceAreaPath = roundedRect(0, this.refMax, this.gridLineWidth, this.refMin - this.refMax, 0, [false, false, false, false]);\n    }\n    getTicks() {\n      let ticks;\n      const maxTicks = this.getMaxTicks(20);\n      const maxScaleTicks = this.getMaxTicks(50);\n      if (this.tickValues) {\n        ticks = this.tickValues;\n      } else if (this.scale.ticks) {\n        ticks = this.scale.ticks.apply(this.scale, [maxScaleTicks]);\n      } else {\n        ticks = this.scale.domain();\n        ticks = reduceTicks(ticks, maxTicks);\n      }\n      return ticks;\n    }\n    getMaxTicks(tickHeight) {\n      return Math.floor(this.height / tickHeight);\n    }\n    tickTransform(tick) {\n      return `translate(${this.adjustedScale(tick)},${this.verticalSpacing})`;\n    }\n    gridLineTransform() {\n      return `translate(5,0)`;\n    }\n    tickTrim(label) {\n      return this.trimTicks ? trimLabel(label, this.maxTickLength) : label;\n    }\n    getApproximateAxisWidth() {\n      const maxChars = Math.max(...this.ticks.map(t => this.tickTrim(this.tickFormat(t)).length));\n      const charWidth = 7;\n      return maxChars * charWidth;\n    }\n    tickChunks(label) {\n      if (label.toString().length > this.maxTickLength && this.scale.bandwidth) {\n        // for y-axis the width of the tick is fixed\n        const preferredWidth = this.maxTickLength;\n        const maxLines = Math.floor(this.scale.bandwidth() / 15);\n        if (maxLines <= 1) {\n          return [this.tickTrim(label)];\n        }\n        return getTickLines(label, preferredWidth, Math.min(maxLines, 5));\n      }\n      return [this.tickFormat(label)];\n    }\n    static {\n      this.ɵfac = function YAxisTicksComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || YAxisTicksComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: YAxisTicksComponent,\n        selectors: [[\"g\", \"ngx-charts-y-axis-ticks\", \"\"]],\n        viewQuery: function YAxisTicksComponent_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c4, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ticksElement = _t.first);\n          }\n        },\n        inputs: {\n          scale: \"scale\",\n          orient: \"orient\",\n          tickArguments: \"tickArguments\",\n          tickValues: \"tickValues\",\n          tickStroke: \"tickStroke\",\n          trimTicks: \"trimTicks\",\n          maxTickLength: \"maxTickLength\",\n          tickFormatting: \"tickFormatting\",\n          showGridLines: \"showGridLines\",\n          gridLineWidth: \"gridLineWidth\",\n          height: \"height\",\n          referenceLines: \"referenceLines\",\n          showRefLabels: \"showRefLabels\",\n          showRefLines: \"showRefLines\",\n          wrapTicks: \"wrapTicks\"\n        },\n        outputs: {\n          dimensionsChanged: \"dimensionsChanged\"\n        },\n        standalone: false,\n        features: [i0.ɵɵNgOnChangesFeature],\n        attrs: _c7,\n        decls: 6,\n        vars: 4,\n        consts: [[\"ticksel\", \"\"], [\"tmplMultilineTick\", \"\"], [\"tmplSinglelineTick\", \"\"], [\"class\", \"tick\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"reference-area\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"tick\"], [4, \"ngIf\"], [\"stroke-width\", \"0.01\"], [4, \"ngIf\", \"ngIfThen\", \"ngIfElse\"], [4, \"ngIf\", \"ngIfElse\"], [\"x\", \"0\", 4, \"ngFor\", \"ngForOf\"], [\"x\", \"0\"], [1, \"reference-area\"], [\"class\", \"gridline-path gridline-path-horizontal\", \"x1\", \"0\", 4, \"ngIf\"], [\"x1\", \"0\", 1, \"gridline-path\", \"gridline-path-horizontal\"], [\"x1\", \"0\", 1, \"refline-path\", \"gridline-path-horizontal\"], [1, \"refline-label\"]],\n        template: function YAxisTicksComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(0, \"g\", null, 0);\n            i0.ɵɵtemplate(2, YAxisTicksComponent__svg_g_2_Template, 2, 2, \"g\", 3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(3, YAxisTicksComponent__svg_path_3_Template, 1, 2, \"path\", 4)(4, YAxisTicksComponent__svg_g_4_Template, 2, 2, \"g\", 5)(5, YAxisTicksComponent__svg_g_5_Template, 2, 1, \"g\", 5);\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngForOf\", ctx.ticks);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.referenceLineLength > 1 && ctx.refMax && ctx.refMin && ctx.showRefLines);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngForOf\", ctx.ticks);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngForOf\", ctx.referenceLines);\n          }\n        },\n        dependencies: [i1.NgForOf, i1.NgIf],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return YAxisTicksComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet YAxisComponent = /*#__PURE__*/(() => {\n  class YAxisComponent {\n    constructor() {\n      this.showGridLines = false;\n      this.yOrient = Orientation.Left;\n      this.yAxisOffset = 0;\n      this.wrapTicks = false;\n      this.dimensionsChanged = new EventEmitter();\n      this.yAxisClassName = 'y axis';\n      this.labelOffset = 15;\n      this.fill = 'none';\n      this.stroke = '#CCC';\n      this.tickStroke = '#CCC';\n      this.strokeWidth = 1;\n      this.padding = 5;\n    }\n    ngOnChanges(changes) {\n      this.update();\n    }\n    update() {\n      this.offset = -(this.yAxisOffset + this.padding);\n      if (this.yOrient === Orientation.Right) {\n        this.labelOffset = 65;\n        this.transform = `translate(${this.offset + this.dims.width} , 0)`;\n      } else {\n        this.transform = `translate(${this.offset} , 0)`;\n      }\n      if (this.yAxisTickCount !== undefined) {\n        this.tickArguments = [this.yAxisTickCount];\n      }\n    }\n    emitTicksWidth({\n      width\n    }) {\n      if (width !== this.labelOffset && this.yOrient === Orientation.Right) {\n        this.labelOffset = width + this.labelOffset;\n        setTimeout(() => {\n          this.dimensionsChanged.emit({\n            width\n          });\n        }, 0);\n      } else if (width !== this.labelOffset) {\n        this.labelOffset = width;\n        setTimeout(() => {\n          this.dimensionsChanged.emit({\n            width\n          });\n        }, 0);\n      }\n    }\n    static {\n      this.ɵfac = function YAxisComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || YAxisComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: YAxisComponent,\n        selectors: [[\"g\", \"ngx-charts-y-axis\", \"\"]],\n        viewQuery: function YAxisComponent_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(YAxisTicksComponent, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ticksComponent = _t.first);\n          }\n        },\n        inputs: {\n          yScale: \"yScale\",\n          dims: \"dims\",\n          trimTicks: \"trimTicks\",\n          maxTickLength: \"maxTickLength\",\n          tickFormatting: \"tickFormatting\",\n          ticks: \"ticks\",\n          showGridLines: \"showGridLines\",\n          showLabel: \"showLabel\",\n          labelText: \"labelText\",\n          yAxisTickCount: \"yAxisTickCount\",\n          yOrient: \"yOrient\",\n          referenceLines: \"referenceLines\",\n          showRefLines: \"showRefLines\",\n          showRefLabels: \"showRefLabels\",\n          yAxisOffset: \"yAxisOffset\",\n          wrapTicks: \"wrapTicks\"\n        },\n        outputs: {\n          dimensionsChanged: \"dimensionsChanged\"\n        },\n        standalone: false,\n        features: [i0.ɵɵNgOnChangesFeature],\n        attrs: _c8,\n        decls: 3,\n        vars: 4,\n        consts: [[\"ngx-charts-y-axis-ticks\", \"\", 3, \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"tickArguments\", \"tickValues\", \"tickStroke\", \"scale\", \"orient\", \"showGridLines\", \"gridLineWidth\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"height\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-axis-label\", \"\", 3, \"label\", \"offset\", \"orient\", \"height\", \"width\", 4, \"ngIf\"], [\"ngx-charts-y-axis-ticks\", \"\", 3, \"dimensionsChanged\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"tickArguments\", \"tickValues\", \"tickStroke\", \"scale\", \"orient\", \"showGridLines\", \"gridLineWidth\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"height\", \"wrapTicks\"], [\"ngx-charts-axis-label\", \"\", 3, \"label\", \"offset\", \"orient\", \"height\", \"width\"]],\n        template: function YAxisComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(0, \"g\");\n            i0.ɵɵtemplate(1, YAxisComponent__svg_g_1_Template, 1, 15, \"g\", 0)(2, YAxisComponent__svg_g_2_Template, 1, 5, \"g\", 1);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵattribute(\"class\", ctx.yAxisClassName)(\"transform\", ctx.transform);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.yScale);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.showLabel);\n          }\n        },\n        dependencies: [i1.NgIf, AxisLabelComponent, YAxisTicksComponent],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return YAxisComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet AxesModule = /*#__PURE__*/(() => {\n  class AxesModule {\n    static {\n      this.ɵfac = function AxesModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || AxesModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: AxesModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [CommonModule]\n      });\n    }\n  }\n  return AxesModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nvar StyleTypes = /*#__PURE__*/function (StyleTypes) {\n  StyleTypes[\"popover\"] = \"popover\";\n  StyleTypes[\"tooltip\"] = \"tooltip\";\n  return StyleTypes;\n}(StyleTypes || {});\nvar ShowTypes = /*#__PURE__*/function (ShowTypes) {\n  ShowTypes[ShowTypes[\"all\"] = 'all'] = \"all\";\n  ShowTypes[ShowTypes[\"focus\"] = 'focus'] = \"focus\";\n  ShowTypes[ShowTypes[\"mouseover\"] = 'mouseover'] = \"mouseover\";\n  return ShowTypes;\n}(ShowTypes || {});\nlet TooltipDirective = /*#__PURE__*/(() => {\n  class TooltipDirective {\n    get listensForFocus() {\n      return this.tooltipShowEvent === ShowTypes.all || this.tooltipShowEvent === ShowTypes.focus;\n    }\n    get listensForHover() {\n      return this.tooltipShowEvent === ShowTypes.all || this.tooltipShowEvent === ShowTypes.mouseover;\n    }\n    constructor(tooltipService, viewContainerRef, renderer) {\n      this.tooltipService = tooltipService;\n      this.viewContainerRef = viewContainerRef;\n      this.renderer = renderer;\n      this.tooltipCssClass = '';\n      this.tooltipAppendToBody = true;\n      this.tooltipSpacing = 10;\n      this.tooltipDisabled = false;\n      this.tooltipShowCaret = true;\n      this.tooltipPlacement = PlacementTypes.Top;\n      this.tooltipAlignment = PlacementTypes.Center;\n      this.tooltipType = StyleTypes.popover;\n      this.tooltipCloseOnClickOutside = true;\n      this.tooltipCloseOnMouseLeave = true;\n      this.tooltipHideTimeout = 300;\n      this.tooltipShowTimeout = 100;\n      this.tooltipShowEvent = ShowTypes.all;\n      this.tooltipImmediateExit = false;\n      this.show = new EventEmitter();\n      this.hide = new EventEmitter();\n    }\n    ngOnDestroy() {\n      this.hideTooltip(true);\n    }\n    onFocus() {\n      if (this.listensForFocus) {\n        this.showTooltip();\n      }\n    }\n    onBlur() {\n      if (this.listensForFocus) {\n        this.hideTooltip(true);\n      }\n    }\n    onMouseEnter() {\n      if (this.listensForHover) {\n        this.showTooltip();\n      }\n    }\n    onMouseLeave(target) {\n      if (this.listensForHover && this.tooltipCloseOnMouseLeave) {\n        clearTimeout(this.timeout);\n        if (this.component) {\n          const contentDom = this.component.instance.element.nativeElement;\n          const contains = contentDom.contains(target);\n          if (contains) return;\n        }\n        this.hideTooltip(this.tooltipImmediateExit);\n      }\n    }\n    onMouseClick() {\n      if (this.listensForHover) {\n        this.hideTooltip(true);\n      }\n    }\n    showTooltip(immediate) {\n      if (this.component || this.tooltipDisabled) return;\n      const time = immediate ? 0 : this.tooltipShowTimeout + (navigator.userAgent.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/) ? 400 : 0);\n      clearTimeout(this.timeout);\n      this.timeout = setTimeout(() => {\n        this.tooltipService.destroyAll();\n        const options = this.createBoundOptions();\n        this.component = this.tooltipService.create(options);\n        // add a tiny timeout to avoid event re-triggers\n        setTimeout(() => {\n          if (this.component) {\n            this.addHideListeners(this.component.instance.element.nativeElement);\n          }\n        }, 10);\n        this.show.emit(true);\n      }, time);\n    }\n    addHideListeners(tooltip) {\n      // on mouse enter, cancel the hide triggered by the leave\n      this.mouseEnterContentEvent = this.renderer.listen(tooltip, 'mouseenter', () => {\n        clearTimeout(this.timeout);\n      });\n      // content mouse leave listener\n      if (this.tooltipCloseOnMouseLeave) {\n        this.mouseLeaveContentEvent = this.renderer.listen(tooltip, 'mouseleave', () => {\n          this.hideTooltip(this.tooltipImmediateExit);\n        });\n      }\n      // content close on click outside\n      if (this.tooltipCloseOnClickOutside) {\n        this.documentClickEvent = this.renderer.listen('window', 'click', event => {\n          const contains = tooltip.contains(event.target);\n          if (!contains) this.hideTooltip();\n        });\n      }\n    }\n    hideTooltip(immediate = false) {\n      if (!this.component) return;\n      const destroyFn = () => {\n        // remove events\n        if (this.mouseLeaveContentEvent) this.mouseLeaveContentEvent();\n        if (this.mouseEnterContentEvent) this.mouseEnterContentEvent();\n        if (this.documentClickEvent) this.documentClickEvent();\n        // emit events\n        this.hide.emit(true);\n        // destroy component\n        this.tooltipService.destroy(this.component);\n        this.component = undefined;\n      };\n      clearTimeout(this.timeout);\n      if (!immediate) {\n        this.timeout = setTimeout(destroyFn, this.tooltipHideTimeout);\n      } else {\n        destroyFn();\n      }\n    }\n    createBoundOptions() {\n      return {\n        title: this.tooltipTitle,\n        template: this.tooltipTemplate,\n        host: this.viewContainerRef.element,\n        placement: this.tooltipPlacement,\n        alignment: this.tooltipAlignment,\n        type: this.tooltipType,\n        showCaret: this.tooltipShowCaret,\n        cssClass: this.tooltipCssClass,\n        spacing: this.tooltipSpacing,\n        context: this.tooltipContext\n      };\n    }\n    static {\n      this.ɵfac = function TooltipDirective_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || TooltipDirective)(i0.ɵɵdirectiveInject(TooltipService), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: TooltipDirective,\n        selectors: [[\"\", \"ngx-tooltip\", \"\"]],\n        hostBindings: function TooltipDirective_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"focusin\", function TooltipDirective_focusin_HostBindingHandler() {\n              return ctx.onFocus();\n            })(\"blur\", function TooltipDirective_blur_HostBindingHandler() {\n              return ctx.onBlur();\n            })(\"mouseenter\", function TooltipDirective_mouseenter_HostBindingHandler() {\n              return ctx.onMouseEnter();\n            })(\"mouseleave\", function TooltipDirective_mouseleave_HostBindingHandler($event) {\n              return ctx.onMouseLeave($event.target);\n            })(\"click\", function TooltipDirective_click_HostBindingHandler() {\n              return ctx.onMouseClick();\n            });\n          }\n        },\n        inputs: {\n          tooltipCssClass: \"tooltipCssClass\",\n          tooltipTitle: \"tooltipTitle\",\n          tooltipAppendToBody: \"tooltipAppendToBody\",\n          tooltipSpacing: \"tooltipSpacing\",\n          tooltipDisabled: \"tooltipDisabled\",\n          tooltipShowCaret: \"tooltipShowCaret\",\n          tooltipPlacement: \"tooltipPlacement\",\n          tooltipAlignment: \"tooltipAlignment\",\n          tooltipType: \"tooltipType\",\n          tooltipCloseOnClickOutside: \"tooltipCloseOnClickOutside\",\n          tooltipCloseOnMouseLeave: \"tooltipCloseOnMouseLeave\",\n          tooltipHideTimeout: \"tooltipHideTimeout\",\n          tooltipShowTimeout: \"tooltipShowTimeout\",\n          tooltipTemplate: \"tooltipTemplate\",\n          tooltipShowEvent: \"tooltipShowEvent\",\n          tooltipContext: \"tooltipContext\",\n          tooltipImmediateExit: \"tooltipImmediateExit\"\n        },\n        outputs: {\n          show: \"show\",\n          hide: \"hide\"\n        },\n        standalone: false\n      });\n    }\n  }\n  return TooltipDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TooltipModule = /*#__PURE__*/(() => {\n  class TooltipModule {\n    static {\n      this.ɵfac = function TooltipModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || TooltipModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: TooltipModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        providers: [InjectionService, TooltipService],\n        imports: [CommonModule]\n      });\n    }\n  }\n  return TooltipModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst cache = {};\n/**\n * Generates a short id.\n *\n * Description:\n *   A 4-character alphanumeric sequence (364 = 1.6 million)\n *   This should only be used for JavaScript specific models.\n *   http://stackoverflow.com/questions/6248666/how-to-generate-short-uid-like-ax4j9z-in-js\n *\n *   Example: `ebgf`\n */\nfunction id() {\n  let newId = ('0000' + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4);\n  // append a 'a' because neo gets mad\n  newId = `a${newId}`;\n  // ensure not already used\n  if (!cache[newId]) {\n    cache[newId] = true;\n    return newId;\n  }\n  return id();\n}\nvar BarOrientation = /*#__PURE__*/function (BarOrientation) {\n  BarOrientation[\"Vertical\"] = \"vertical\";\n  BarOrientation[\"Horizontal\"] = \"horizontal\";\n  return BarOrientation;\n}(BarOrientation || {});\nlet CircleComponent = /*#__PURE__*/(() => {\n  class CircleComponent {\n    constructor() {\n      this.select = new EventEmitter();\n      this.activate = new EventEmitter();\n      this.deactivate = new EventEmitter();\n    }\n    onClick() {\n      this.select.emit(this.data);\n    }\n    onMouseEnter() {\n      this.activate.emit(this.data);\n    }\n    onMouseLeave() {\n      this.deactivate.emit(this.data);\n    }\n    ngOnChanges(changes) {\n      this.classNames = Array.isArray(this.classNames) ? this.classNames.join(' ') : '';\n      this.classNames += 'circle';\n    }\n    static {\n      this.ɵfac = function CircleComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || CircleComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: CircleComponent,\n        selectors: [[\"g\", \"ngx-charts-circle\", \"\"]],\n        hostBindings: function CircleComponent_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"click\", function CircleComponent_click_HostBindingHandler() {\n              return ctx.onClick();\n            })(\"mouseenter\", function CircleComponent_mouseenter_HostBindingHandler() {\n              return ctx.onMouseEnter();\n            })(\"mouseleave\", function CircleComponent_mouseleave_HostBindingHandler() {\n              return ctx.onMouseLeave();\n            });\n          }\n        },\n        inputs: {\n          cx: \"cx\",\n          cy: \"cy\",\n          r: \"r\",\n          fill: \"fill\",\n          stroke: \"stroke\",\n          data: \"data\",\n          classNames: \"classNames\",\n          circleOpacity: \"circleOpacity\",\n          pointerEvents: \"pointerEvents\"\n        },\n        outputs: {\n          select: \"select\",\n          activate: \"activate\",\n          deactivate: \"deactivate\"\n        },\n        standalone: false,\n        features: [i0.ɵɵNgOnChangesFeature],\n        attrs: _c9,\n        decls: 1,\n        vars: 8,\n        template: function CircleComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelement(0, \"circle\");\n          }\n          if (rf & 2) {\n            i0.ɵɵattribute(\"cx\", ctx.cx)(\"cy\", ctx.cy)(\"r\", ctx.r)(\"fill\", ctx.fill)(\"stroke\", ctx.stroke)(\"opacity\", ctx.circleOpacity)(\"class\", ctx.classNames)(\"pointer-events\", ctx.pointerEvents);\n          }\n        },\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return CircleComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet SvgLinearGradientComponent = /*#__PURE__*/(() => {\n  class SvgLinearGradientComponent {\n    constructor() {\n      this.orientation = BarOrientation.Vertical;\n    }\n    ngOnChanges(changes) {\n      this.x1 = '0%';\n      this.x2 = '0%';\n      this.y1 = '0%';\n      this.y2 = '0%';\n      if (this.orientation === BarOrientation.Horizontal) {\n        this.x2 = '100%';\n      } else if (this.orientation === BarOrientation.Vertical) {\n        this.y1 = '100%';\n      }\n    }\n    static {\n      this.ɵfac = function SvgLinearGradientComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || SvgLinearGradientComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: SvgLinearGradientComponent,\n        selectors: [[\"g\", \"ngx-charts-svg-linear-gradient\", \"\"]],\n        inputs: {\n          orientation: \"orientation\",\n          name: \"name\",\n          stops: \"stops\"\n        },\n        standalone: false,\n        features: [i0.ɵɵNgOnChangesFeature],\n        attrs: _c10,\n        decls: 2,\n        vars: 6,\n        consts: [[3, \"id\"], [3, \"stop-color\", \"stop-opacity\", 4, \"ngFor\", \"ngForOf\"]],\n        template: function SvgLinearGradientComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(0, \"linearGradient\", 0);\n            i0.ɵɵtemplate(1, SvgLinearGradientComponent__svg_stop_1_Template, 1, 5, \"stop\", 1);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"id\", ctx.name);\n            i0.ɵɵattribute(\"x1\", ctx.x1)(\"y1\", ctx.y1)(\"x2\", ctx.x2)(\"y2\", ctx.y2);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngForOf\", ctx.stops);\n          }\n        },\n        dependencies: [i1.NgForOf],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return SvgLinearGradientComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nvar SeriesType = /*#__PURE__*/function (SeriesType) {\n  SeriesType[\"Standard\"] = \"standard\";\n  SeriesType[\"Stacked\"] = \"stacked\";\n  return SeriesType;\n}(SeriesType || {});\nlet CircleSeriesComponent = /*#__PURE__*/(() => {\n  class CircleSeriesComponent {\n    constructor(platformId) {\n      this.platformId = platformId;\n      this.type = SeriesType.Standard;\n      this.tooltipDisabled = false;\n      this.select = new EventEmitter();\n      this.activate = new EventEmitter();\n      this.deactivate = new EventEmitter();\n      this.barVisible = false;\n      this.barOrientation = BarOrientation;\n      this.placementTypes = PlacementTypes;\n      this.styleTypes = StyleTypes;\n      this.isSSR = false;\n    }\n    ngOnInit() {\n      this.gradientId = 'grad' + id().toString();\n      this.gradientFill = `url(#${this.gradientId})`;\n      if (isPlatformServer(this.platformId)) {\n        this.isSSR = true;\n      }\n    }\n    ngOnChanges() {\n      this.update();\n    }\n    update() {\n      this.circle = this.getActiveCircle();\n    }\n    getActiveCircle() {\n      const indexActiveDataPoint = this.data.series.findIndex(d => {\n        const label = d.name;\n        return label && this.visibleValue && label.toString() === this.visibleValue.toString() && d.value !== undefined;\n      });\n      if (indexActiveDataPoint === -1) {\n        // No valid point is 'active/hovered over' at this moment.\n        return undefined;\n      }\n      return this.mapDataPointToCircle(this.data.series[indexActiveDataPoint], indexActiveDataPoint);\n    }\n    mapDataPointToCircle(d, i) {\n      const seriesName = this.data.name;\n      const value = d.value;\n      const label = d.name;\n      const tooltipLabel = formatLabel(label);\n      let cx;\n      if (this.scaleType === ScaleType.Time) {\n        cx = this.xScale(label);\n      } else if (this.scaleType === ScaleType.Linear) {\n        cx = this.xScale(Number(label));\n      } else {\n        cx = this.xScale(label);\n      }\n      const cy = this.yScale(this.type === SeriesType.Standard ? value : d.d1);\n      const radius = 5;\n      const height = this.yScale.range()[0] - cy;\n      const opacity = 1;\n      let color;\n      if (this.colors.scaleType === ScaleType.Linear) {\n        if (this.type === SeriesType.Standard) {\n          color = this.colors.getColor(value);\n        } else {\n          color = this.colors.getColor(d.d1);\n        }\n      } else {\n        color = this.colors.getColor(seriesName);\n      }\n      const data = Object.assign({}, d, {\n        series: seriesName,\n        value,\n        name: label\n      });\n      return {\n        classNames: [`circle-data-${i}`],\n        value,\n        label,\n        data,\n        cx,\n        cy,\n        radius,\n        height,\n        tooltipLabel,\n        color,\n        opacity,\n        seriesName,\n        gradientStops: this.getGradientStops(color),\n        min: d.min,\n        max: d.max\n      };\n    }\n    getTooltipText({\n      tooltipLabel,\n      value,\n      seriesName,\n      min,\n      max\n    }) {\n      return `\n      <span class=\"tooltip-label\">${escapeLabel(seriesName)} • ${escapeLabel(tooltipLabel)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}${this.getTooltipMinMaxText(min, max)}</span>\n    `;\n    }\n    getTooltipMinMaxText(min, max) {\n      if (min !== undefined || max !== undefined) {\n        let result = ' (';\n        if (min !== undefined) {\n          if (max === undefined) {\n            result += '≥';\n          }\n          result += min.toLocaleString();\n          if (max !== undefined) {\n            result += ' - ';\n          }\n        } else if (max !== undefined) {\n          result += '≤';\n        }\n        if (max !== undefined) {\n          result += max.toLocaleString();\n        }\n        result += ')';\n        return result;\n      } else {\n        return '';\n      }\n    }\n    getGradientStops(color) {\n      return [{\n        offset: 0,\n        color,\n        opacity: 0.2\n      }, {\n        offset: 100,\n        color,\n        opacity: 1\n      }];\n    }\n    onClick(data) {\n      this.select.emit(data);\n    }\n    isActive(entry) {\n      if (!this.activeEntries) return false;\n      const item = this.activeEntries.find(d => {\n        return entry.name === d.name;\n      });\n      return item !== undefined;\n    }\n    activateCircle() {\n      this.barVisible = true;\n      this.activate.emit({\n        name: this.data.name\n      });\n    }\n    deactivateCircle() {\n      this.barVisible = false;\n      this.circle.opacity = 0;\n      this.deactivate.emit({\n        name: this.data.name\n      });\n    }\n    static {\n      this.ɵfac = function CircleSeriesComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || CircleSeriesComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: CircleSeriesComponent,\n        selectors: [[\"g\", \"ngx-charts-circle-series\", \"\"]],\n        inputs: {\n          data: \"data\",\n          type: \"type\",\n          xScale: \"xScale\",\n          yScale: \"yScale\",\n          colors: \"colors\",\n          scaleType: \"scaleType\",\n          visibleValue: \"visibleValue\",\n          activeEntries: \"activeEntries\",\n          tooltipDisabled: \"tooltipDisabled\",\n          tooltipTemplate: \"tooltipTemplate\"\n        },\n        outputs: {\n          select: \"select\",\n          activate: \"activate\",\n          deactivate: \"deactivate\"\n        },\n        standalone: false,\n        features: [i0.ɵɵNgOnChangesFeature],\n        attrs: _c11,\n        decls: 1,\n        vars: 1,\n        consts: [[4, \"ngIf\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"], [\"class\", \"tooltip-bar\", 4, \"ngIf\"], [\"ngx-charts-circle\", \"\", \"ngx-tooltip\", \"\", 1, \"circle\", 3, \"select\", \"activate\", \"deactivate\", \"cx\", \"cy\", \"r\", \"fill\", \"pointerEvents\", \"data\", \"classNames\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\"], [1, \"tooltip-bar\"]],\n        template: function CircleSeriesComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵtemplate(0, CircleSeriesComponent__svg_g_0_Template, 6, 22, \"g\", 0);\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"ngIf\", ctx.circle);\n          }\n        },\n        dependencies: [i1.NgIf, TooltipDirective, CircleComponent, SvgLinearGradientComponent],\n        encapsulation: 2,\n        data: {\n          animation: [trigger('animationState', [transition(':enter', [style({\n            opacity: 0\n          }), animate(250, style({\n            opacity: 1\n          }))])])]\n        },\n        changeDetection: 0\n      });\n    }\n  }\n  return CircleSeriesComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet GridPanelComponent = /*#__PURE__*/(() => {\n  class GridPanelComponent {\n    static {\n      this.ɵfac = function GridPanelComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || GridPanelComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: GridPanelComponent,\n        selectors: [[\"g\", \"ngx-charts-grid-panel\", \"\"]],\n        inputs: {\n          width: \"width\",\n          height: \"height\",\n          x: \"x\",\n          y: \"y\"\n        },\n        standalone: false,\n        attrs: _c13,\n        decls: 1,\n        vars: 4,\n        consts: [[\"stroke\", \"none\", 1, \"gridpanel\"]],\n        template: function GridPanelComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelement(0, \"rect\", 0);\n          }\n          if (rf & 2) {\n            i0.ɵɵattribute(\"height\", ctx.height)(\"width\", ctx.width)(\"x\", ctx.x)(\"y\", ctx.y);\n          }\n        },\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return GridPanelComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nvar ClassEnum = /*#__PURE__*/function (ClassEnum) {\n  ClassEnum[\"Odd\"] = \"odd\";\n  ClassEnum[\"Even\"] = \"even\";\n  return ClassEnum;\n}(ClassEnum || {});\nlet GridPanelSeriesComponent = /*#__PURE__*/(() => {\n  class GridPanelSeriesComponent {\n    ngOnChanges(changes) {\n      this.update();\n    }\n    update() {\n      this.gridPanels = this.getGridPanels();\n    }\n    getGridPanels() {\n      return this.data.map(d => {\n        let offset;\n        let width;\n        let height;\n        let x;\n        let y;\n        let className = ClassEnum.Odd;\n        if (this.orient === BarOrientation.Vertical) {\n          const position = this.xScale(d.name);\n          const positionIndex = Number.parseInt((position / this.xScale.step()).toString(), 10);\n          if (positionIndex % 2 === 1) {\n            className = ClassEnum.Even;\n          }\n          offset = this.xScale.bandwidth() * this.xScale.paddingInner();\n          width = this.xScale.bandwidth() + offset;\n          height = this.dims.height;\n          x = this.xScale(d.name) - offset / 2;\n          y = 0;\n        } else if (this.orient === BarOrientation.Horizontal) {\n          const position = this.yScale(d.name);\n          const positionIndex = Number.parseInt((position / this.yScale.step()).toString(), 10);\n          if (positionIndex % 2 === 1) {\n            className = ClassEnum.Even;\n          }\n          offset = this.yScale.bandwidth() * this.yScale.paddingInner();\n          width = this.dims.width;\n          height = this.yScale.bandwidth() + offset;\n          x = 0;\n          y = this.yScale(d.name) - offset / 2;\n        }\n        return {\n          name: d.name,\n          class: className,\n          height,\n          width,\n          x,\n          y\n        };\n      });\n    }\n    static {\n      this.ɵfac = function GridPanelSeriesComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || GridPanelSeriesComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: GridPanelSeriesComponent,\n        selectors: [[\"g\", \"ngx-charts-grid-panel-series\", \"\"]],\n        inputs: {\n          data: \"data\",\n          dims: \"dims\",\n          xScale: \"xScale\",\n          yScale: \"yScale\",\n          orient: \"orient\"\n        },\n        standalone: false,\n        features: [i0.ɵɵNgOnChangesFeature],\n        attrs: _c14,\n        decls: 1,\n        vars: 1,\n        consts: [[\"ngx-charts-grid-panel\", \"\", 3, \"height\", \"width\", \"x\", \"y\", \"grid-panel\", \"odd\", \"even\", 4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-grid-panel\", \"\", 3, \"height\", \"width\", \"x\", \"y\"]],\n        template: function GridPanelSeriesComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵtemplate(0, GridPanelSeriesComponent__svg_g_0_Template, 1, 10, \"g\", 0);\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"ngForOf\", ctx.gridPanels);\n          }\n        },\n        dependencies: [i1.NgForOf, GridPanelComponent],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return GridPanelSeriesComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet SvgRadialGradientComponent = /*#__PURE__*/(() => {\n  class SvgRadialGradientComponent {\n    constructor() {\n      this.endOpacity = 1;\n      this.cx = 0;\n      this.cy = 0;\n    }\n    get stops() {\n      return this.stopsInput || this.stopsDefault;\n    }\n    set stops(value) {\n      this.stopsInput = value;\n    }\n    ngOnChanges(changes) {\n      this.r = '30%';\n      if ('color' in changes || 'startOpacity' in changes || 'endOpacity' in changes) {\n        this.stopsDefault = [{\n          offset: 0,\n          color: this.color,\n          opacity: this.startOpacity\n        }, {\n          offset: 100,\n          color: this.color,\n          opacity: this.endOpacity\n        }];\n      }\n    }\n    static {\n      this.ɵfac = function SvgRadialGradientComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || SvgRadialGradientComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: SvgRadialGradientComponent,\n        selectors: [[\"g\", \"ngx-charts-svg-radial-gradient\", \"\"]],\n        inputs: {\n          color: \"color\",\n          name: \"name\",\n          startOpacity: \"startOpacity\",\n          endOpacity: \"endOpacity\",\n          cx: \"cx\",\n          cy: \"cy\",\n          stops: \"stops\"\n        },\n        standalone: false,\n        features: [i0.ɵɵNgOnChangesFeature],\n        attrs: _c15,\n        decls: 2,\n        vars: 5,\n        consts: [[\"gradientUnits\", \"userSpaceOnUse\", 3, \"id\"], [3, \"stop-color\", \"stop-opacity\", 4, \"ngFor\", \"ngForOf\"]],\n        template: function SvgRadialGradientComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(0, \"radialGradient\", 0);\n            i0.ɵɵtemplate(1, SvgRadialGradientComponent__svg_stop_1_Template, 1, 5, \"stop\", 1);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"id\", ctx.name);\n            i0.ɵɵattribute(\"cx\", ctx.cx)(\"cy\", ctx.cy)(\"r\", ctx.r);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngForOf\", ctx.stops);\n          }\n        },\n        dependencies: [i1.NgForOf],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return SvgRadialGradientComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet AreaComponent = /*#__PURE__*/(() => {\n  class AreaComponent {\n    constructor(element) {\n      this.opacity = 1;\n      this.startOpacity = 0.5;\n      this.endOpacity = 1;\n      this.gradient = false;\n      this.animations = true;\n      this.select = new EventEmitter();\n      this.animationsLoaded = false;\n      this.hasGradient = false;\n      this.barOrientation = BarOrientation;\n      this.element = element.nativeElement;\n    }\n    ngOnChanges() {\n      this.update();\n      if (!this.animationsLoaded) {\n        this.loadAnimation();\n        this.animationsLoaded = true;\n      }\n    }\n    update() {\n      this.gradientId = 'grad' + id().toString();\n      this.gradientFill = `url(#${this.gradientId})`;\n      if (this.gradient || this.stops) {\n        this.gradientStops = this.getGradient();\n        this.hasGradient = true;\n      } else {\n        this.hasGradient = false;\n      }\n      this.updatePathEl();\n    }\n    loadAnimation() {\n      this.areaPath = this.startingPath;\n      setTimeout(this.updatePathEl.bind(this), 100);\n    }\n    updatePathEl() {\n      const node = select(this.element).select('.area');\n      if (this.animations) {\n        node.transition().duration(750).attr('d', this.path);\n      } else {\n        node.attr('d', this.path);\n      }\n    }\n    getGradient() {\n      if (this.stops) {\n        return this.stops;\n      }\n      return [{\n        offset: 0,\n        color: this.fill,\n        opacity: this.startOpacity\n      }, {\n        offset: 100,\n        color: this.fill,\n        opacity: this.endOpacity\n      }];\n    }\n    static {\n      this.ɵfac = function AreaComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || AreaComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: AreaComponent,\n        selectors: [[\"g\", \"ngx-charts-area\", \"\"]],\n        inputs: {\n          data: \"data\",\n          path: \"path\",\n          startingPath: \"startingPath\",\n          fill: \"fill\",\n          opacity: \"opacity\",\n          startOpacity: \"startOpacity\",\n          endOpacity: \"endOpacity\",\n          gradient: \"gradient\",\n          stops: \"stops\",\n          animations: \"animations\"\n        },\n        outputs: {\n          select: \"select\"\n        },\n        standalone: false,\n        features: [i0.ɵɵNgOnChangesFeature],\n        attrs: _c16,\n        decls: 2,\n        vars: 5,\n        consts: [[4, \"ngIf\"], [1, \"area\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"]],\n        template: function AreaComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵtemplate(0, AreaComponent__svg_defs_0_Template, 2, 3, \"defs\", 0);\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelement(1, \"path\", 1);\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"ngIf\", ctx.gradient);\n            i0.ɵɵadvance();\n            i0.ɵɵstyleProp(\"opacity\", ctx.opacity);\n            i0.ɵɵattribute(\"d\", ctx.areaPath)(\"fill\", ctx.gradient ? ctx.gradientFill : ctx.fill);\n          }\n        },\n        dependencies: [i1.NgIf, SvgLinearGradientComponent],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return AreaComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// Robert Penner's easeOutExpo\nfunction easeOutExpo(t, b, c, d) {\n  return c * (-Math.pow(2, -10 * t / d) + 1) * 1024 / 1023 + b;\n}\n/**\n * Counts from a number to the end incrementally.\n */\nfunction count(countFrom, countTo, countDecimals, countDuration, callback) {\n  const startVal = Number(countFrom);\n  const endVal = Number(countTo);\n  const countDown = startVal > endVal;\n  const decimals = Math.max(0, countDecimals);\n  const dec = Math.pow(10, decimals);\n  const duration = Number(countDuration) * 1000;\n  let startTime;\n  function runCount(timestamp) {\n    let frameVal;\n    const progress = timestamp - startTime;\n    if (countDown) {\n      frameVal = startVal - easeOutExpo(progress, 0, startVal - endVal, duration);\n    } else {\n      frameVal = easeOutExpo(progress, startVal, endVal - startVal, duration);\n    }\n    if (countDown) {\n      frameVal = frameVal < endVal ? endVal : frameVal;\n    } else {\n      frameVal = frameVal > endVal ? endVal : frameVal;\n    }\n    frameVal = Math.round(frameVal * dec) / dec;\n    const tick = progress < duration;\n    callback({\n      value: frameVal,\n      progress,\n      timestamp,\n      finished: !tick\n    });\n    if (tick) {\n      return requestAnimationFrame(val => runCount(val));\n    }\n  }\n  return requestAnimationFrame(timestamp => {\n    startTime = timestamp;\n    return runCount(timestamp);\n  });\n}\n/**\n * Determine decimals places\n *\n * @export\n */\nfunction decimalChecker(countTo) {\n  const endVal = Number(countTo);\n  if (endVal % 1 !== 0 && Math.abs(endVal) <= 10) {\n    return 2;\n  }\n  return 0;\n}\n\n/**\n * Count up component\n *\n * Loosely inspired by:\n *  - https://github.com/izupet/angular2-counto\n *  - https://inorganik.github.io/countUp.js/\n *\n * @export\n */\nlet CountUpDirective = /*#__PURE__*/(() => {\n  class CountUpDirective {\n    set countDecimals(val) {\n      this._countDecimals = val;\n    }\n    get countDecimals() {\n      if (this._countDecimals) return this._countDecimals;\n      return decimalChecker(this.countTo);\n    }\n    set countTo(val) {\n      this._countTo = parseFloat(val);\n      this.start();\n    }\n    get countTo() {\n      return this._countTo;\n    }\n    set countFrom(val) {\n      this._countFrom = parseFloat(val);\n      this.start();\n    }\n    get countFrom() {\n      return this._countFrom;\n    }\n    constructor(cd, element) {\n      this.cd = cd;\n      this.countDuration = 1;\n      this.countPrefix = '';\n      this.countSuffix = '';\n      this.countChange = new EventEmitter();\n      this.countFinish = new EventEmitter();\n      this.value = '';\n      this._countDecimals = 0;\n      this._countTo = 0;\n      this._countFrom = 0;\n      this.nativeElement = element.nativeElement;\n    }\n    ngOnDestroy() {\n      cancelAnimationFrame(this.animationReq);\n    }\n    start() {\n      cancelAnimationFrame(this.animationReq);\n      const valueFormatting = this.valueFormatting || (value => `${this.countPrefix}${value.toLocaleString()}${this.countSuffix}`);\n      const callback = ({\n        value,\n        progress,\n        finished\n      }) => {\n        this.value = valueFormatting(value);\n        this.cd.markForCheck();\n        if (!finished) this.countChange.emit({\n          value: this.value,\n          progress\n        });\n        if (finished) this.countFinish.emit({\n          value: this.value,\n          progress\n        });\n      };\n      this.animationReq = count(this.countFrom, this.countTo, this.countDecimals, this.countDuration, callback);\n    }\n    static {\n      this.ɵfac = function CountUpDirective_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || CountUpDirective)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: CountUpDirective,\n        selectors: [[\"\", \"ngx-charts-count-up\", \"\"]],\n        inputs: {\n          countDuration: \"countDuration\",\n          countPrefix: \"countPrefix\",\n          countSuffix: \"countSuffix\",\n          valueFormatting: \"valueFormatting\",\n          countDecimals: \"countDecimals\",\n          countTo: \"countTo\",\n          countFrom: \"countFrom\"\n        },\n        outputs: {\n          countChange: \"countChange\",\n          countFinish: \"countFinish\"\n        },\n        standalone: false,\n        attrs: _c17,\n        decls: 1,\n        vars: 1,\n        template: function CountUpDirective_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵtext(0);\n          }\n          if (rf & 2) {\n            i0.ɵɵtextInterpolate1(\" \", ctx.value, \" \");\n          }\n        },\n        encapsulation: 2\n      });\n    }\n  }\n  return CountUpDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// If we don't check whether 'window' and 'global' variables are defined,\n// code will fail in browser/node with 'variable is undefined' error.\nlet root;\nif (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n}\n// tslint:disable-next-line:variable-name\nconst MouseEvent = root.MouseEvent;\nfunction createMouseEvent(name, bubbles = false, cancelable = true) {\n  // Calling new of an event does not work correctly on IE. The following is a tested workaround\n  // See https://stackoverflow.com/questions/27176983/dispatchevent-not-working-in-ie11\n  if (typeof MouseEvent === 'function') {\n    // Sane browsers\n    return new MouseEvent(name, {\n      bubbles,\n      cancelable\n    });\n  } else {\n    // IE\n    const event = document.createEvent('MouseEvent');\n    event.initEvent(name, bubbles, cancelable);\n    return event;\n  }\n}\nlet TooltipArea = /*#__PURE__*/(() => {\n  class TooltipArea {\n    constructor(platformId) {\n      this.platformId = platformId;\n      this.anchorOpacity = 0;\n      this.anchorPos = -1;\n      this.anchorValues = [];\n      this.placementTypes = PlacementTypes;\n      this.styleTypes = StyleTypes;\n      this.showPercentage = false;\n      this.tooltipDisabled = false;\n      this.hover = new EventEmitter();\n    }\n    getValues(xVal) {\n      const results = [];\n      for (const group of this.results) {\n        const item = group.series.find(d => d.name.toString() === xVal.toString());\n        let groupName = group.name;\n        if (groupName instanceof Date) {\n          groupName = groupName.toLocaleDateString();\n        }\n        if (item) {\n          const label = item.name;\n          let val = item.value;\n          if (this.showPercentage) {\n            val = (item.d1 - item.d0).toFixed(2) + '%';\n          }\n          let color;\n          if (this.colors.scaleType === ScaleType.Linear) {\n            let v = val;\n            if (item.d1) {\n              v = item.d1;\n            }\n            color = this.colors.getColor(v);\n          } else {\n            color = this.colors.getColor(group.name);\n          }\n          const data = Object.assign({}, item, {\n            value: val,\n            name: label,\n            series: groupName,\n            min: item.min,\n            max: item.max,\n            color\n          });\n          results.push(data);\n        }\n      }\n      return results;\n    }\n    mouseMove(event) {\n      if (!isPlatformBrowser(this.platformId)) {\n        return;\n      }\n      const xPos = event.pageX - event.target.getBoundingClientRect().left;\n      const closestIndex = this.findClosestPointIndex(xPos);\n      const closestPoint = this.xSet[closestIndex];\n      this.anchorPos = this.xScale(closestPoint);\n      this.anchorPos = Math.max(0, this.anchorPos);\n      this.anchorPos = Math.min(this.dims.width, this.anchorPos);\n      this.anchorValues = this.getValues(closestPoint);\n      if (this.anchorPos !== this.lastAnchorPos) {\n        const ev = createMouseEvent('mouseleave');\n        this.tooltipAnchor.nativeElement.dispatchEvent(ev);\n        this.anchorOpacity = 0.7;\n        this.hover.emit({\n          value: closestPoint\n        });\n        this.showTooltip();\n        this.lastAnchorPos = this.anchorPos;\n      }\n    }\n    findClosestPointIndex(xPos) {\n      let minIndex = 0;\n      let maxIndex = this.xSet.length - 1;\n      let minDiff = Number.MAX_VALUE;\n      let closestIndex = 0;\n      while (minIndex <= maxIndex) {\n        const currentIndex = (minIndex + maxIndex) / 2 | 0;\n        const currentElement = this.xScale(this.xSet[currentIndex]);\n        const curDiff = Math.abs(currentElement - xPos);\n        if (curDiff < minDiff) {\n          minDiff = curDiff;\n          closestIndex = currentIndex;\n        }\n        if (currentElement < xPos) {\n          minIndex = currentIndex + 1;\n        } else if (currentElement > xPos) {\n          maxIndex = currentIndex - 1;\n        } else {\n          minDiff = 0;\n          closestIndex = currentIndex;\n          break;\n        }\n      }\n      return closestIndex;\n    }\n    showTooltip() {\n      const event = createMouseEvent('mouseenter');\n      this.tooltipAnchor.nativeElement.dispatchEvent(event);\n    }\n    hideTooltip() {\n      const event = createMouseEvent('mouseleave');\n      this.tooltipAnchor.nativeElement.dispatchEvent(event);\n      this.anchorOpacity = 0;\n      this.lastAnchorPos = -1;\n    }\n    getToolTipText(tooltipItem) {\n      let result = '';\n      if (tooltipItem.series !== undefined) {\n        result += tooltipItem.series;\n      } else {\n        result += '???';\n      }\n      result += ': ';\n      if (tooltipItem.value !== undefined) {\n        result += tooltipItem.value.toLocaleString();\n      }\n      if (tooltipItem.min !== undefined || tooltipItem.max !== undefined) {\n        result += ' (';\n        if (tooltipItem.min !== undefined) {\n          if (tooltipItem.max === undefined) {\n            result += '≥';\n          }\n          result += tooltipItem.min.toLocaleString();\n          if (tooltipItem.max !== undefined) {\n            result += ' - ';\n          }\n        } else if (tooltipItem.max !== undefined) {\n          result += '≤';\n        }\n        if (tooltipItem.max !== undefined) {\n          result += tooltipItem.max.toLocaleString();\n        }\n        result += ')';\n      }\n      return result;\n    }\n    static {\n      this.ɵfac = function TooltipArea_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || TooltipArea)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: TooltipArea,\n        selectors: [[\"g\", \"ngx-charts-tooltip-area\", \"\"]],\n        viewQuery: function TooltipArea_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c18, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipAnchor = _t.first);\n          }\n        },\n        inputs: {\n          dims: \"dims\",\n          xSet: \"xSet\",\n          xScale: \"xScale\",\n          yScale: \"yScale\",\n          results: \"results\",\n          colors: \"colors\",\n          showPercentage: \"showPercentage\",\n          tooltipDisabled: \"tooltipDisabled\",\n          tooltipTemplate: \"tooltipTemplate\"\n        },\n        outputs: {\n          hover: \"hover\"\n        },\n        standalone: false,\n        attrs: _c19,\n        decls: 6,\n        vars: 18,\n        consts: [[\"defaultTooltipTemplate\", \"\"], [\"tooltipAnchor\", \"\"], [\"y\", \"0\", 1, \"tooltip-area\", 2, \"opacity\", \"0\", \"cursor\", \"'auto'\", 3, \"mousemove\", \"mouseleave\"], [\"y\", \"0\", \"ngx-tooltip\", \"\", 1, \"tooltip-anchor\", 3, \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipSpacing\", \"tooltipTemplate\", \"tooltipContext\", \"tooltipImmediateExit\"], [1, \"area-tooltip-container\"], [\"class\", \"tooltip-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"tooltip-item\"], [1, \"tooltip-item-color\"]],\n        template: function TooltipArea_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(0, \"g\")(1, \"rect\", 2);\n            i0.ɵɵlistener(\"mousemove\", function TooltipArea_Template_rect_mousemove_1_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx.mouseMove($event));\n            })(\"mouseleave\", function TooltipArea_Template_rect_mouseleave_1_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx.hideTooltip());\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(2, TooltipArea__svg_ng_template_2_Template, 2, 1, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n            i0.ɵɵelement(4, \"rect\", 3, 1);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            const defaultTooltipTemplate_r5 = i0.ɵɵreference(3);\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"x\", 0)(\"width\", ctx.dims.width)(\"height\", ctx.dims.height);\n            i0.ɵɵadvance(3);\n            i0.ɵɵstyleProp(\"opacity\", ctx.anchorOpacity)(\"pointer-events\", \"none\");\n            i0.ɵɵproperty(\"@animationState\", ctx.anchorOpacity !== 0 ? \"active\" : \"inactive\")(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipPlacement\", ctx.placementTypes.Right)(\"tooltipType\", ctx.styleTypes.tooltip)(\"tooltipSpacing\", 15)(\"tooltipTemplate\", ctx.tooltipTemplate ? ctx.tooltipTemplate : defaultTooltipTemplate_r5)(\"tooltipContext\", ctx.anchorValues)(\"tooltipImmediateExit\", true);\n            i0.ɵɵattribute(\"x\", ctx.anchorPos)(\"width\", 1)(\"height\", ctx.dims.height);\n          }\n        },\n        dependencies: [i1.NgForOf, TooltipDirective],\n        encapsulation: 2,\n        data: {\n          animation: [trigger('animationState', [transition('inactive => active', [style({\n            opacity: 0\n          }), animate(250, style({\n            opacity: 0.7\n          }))]), transition('active => inactive', [style({\n            opacity: 0.7\n          }), animate(250, style({\n            opacity: 0\n          }))])])]\n        },\n        changeDetection: 0\n      });\n    }\n  }\n  return TooltipArea;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet Timeline = /*#__PURE__*/(() => {\n  class Timeline {\n    constructor(element, cd) {\n      this.cd = cd;\n      this.height = 50;\n      this.select = new EventEmitter();\n      this.onDomainChange = new EventEmitter();\n      this.initialized = false;\n      this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n      this.update();\n      if (!this.initialized) {\n        this.addBrush();\n        this.initialized = true;\n      }\n    }\n    update() {\n      this.dims = this.getDims();\n      this.height = this.dims.height;\n      const offsetY = this.view[1] - this.height;\n      this.xDomain = this.getXDomain();\n      this.xScale = this.getXScale();\n      if (this.brush) {\n        this.updateBrush();\n      }\n      this.transform = `translate(0 , ${offsetY})`;\n      this.filterId = 'filter' + id().toString();\n      this.filter = `url(#${this.filterId})`;\n      this.cd.markForCheck();\n    }\n    getXDomain() {\n      let values = [];\n      for (const results of this.results) {\n        for (const d of results.series) {\n          if (!values.includes(d.name)) {\n            values.push(d.name);\n          }\n        }\n      }\n      let domain = [];\n      if (this.scaleType === ScaleType.Time) {\n        const min = Math.min(...values);\n        const max = Math.max(...values);\n        domain = [min, max];\n      } else if (this.scaleType === ScaleType.Linear) {\n        values = values.map(v => Number(v));\n        const min = Math.min(...values);\n        const max = Math.max(...values);\n        domain = [min, max];\n      } else {\n        domain = values;\n      }\n      return domain;\n    }\n    getXScale() {\n      let scale;\n      if (this.scaleType === ScaleType.Time) {\n        scale = scaleTime().range([0, this.dims.width]).domain(this.xDomain);\n      } else if (this.scaleType === ScaleType.Linear) {\n        scale = scaleLinear().range([0, this.dims.width]).domain(this.xDomain);\n      } else if (this.scaleType === ScaleType.Ordinal) {\n        scale = scalePoint().range([0, this.dims.width]).padding(0.1).domain(this.xDomain);\n      }\n      return scale;\n    }\n    addBrush() {\n      if (this.brush) return;\n      const height = this.height;\n      const width = this.view[0];\n      this.brush = brushX().extent([[0, 0], [width, height]]).on('brush end', ({\n        selection\n      }) => {\n        const newSelection = selection || this.xScale.range();\n        const newDomain = newSelection.map(this.xScale.invert);\n        this.onDomainChange.emit(newDomain);\n        this.cd.markForCheck();\n      });\n      select(this.element).select('.brush').call(this.brush);\n    }\n    updateBrush() {\n      if (!this.brush) return;\n      const height = this.height;\n      const width = this.view[0];\n      this.brush.extent([[0, 0], [width, height]]);\n      select(this.element).select('.brush').call(this.brush);\n      // clear hardcoded properties so they can be defined by CSS\n      select(this.element).select('.selection').attr('fill', undefined).attr('stroke', undefined).attr('fill-opacity', undefined);\n      this.cd.markForCheck();\n    }\n    getDims() {\n      const width = this.view[0];\n      const dims = {\n        width,\n        height: this.height\n      };\n      return dims;\n    }\n    static {\n      this.ɵfac = function Timeline_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || Timeline)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: Timeline,\n        selectors: [[\"g\", \"ngx-charts-timeline\", \"\"]],\n        inputs: {\n          view: \"view\",\n          results: \"results\",\n          scheme: \"scheme\",\n          customColors: \"customColors\",\n          legend: \"legend\",\n          autoScale: \"autoScale\",\n          scaleType: \"scaleType\",\n          height: \"height\"\n        },\n        outputs: {\n          select: \"select\",\n          onDomainChange: \"onDomainChange\"\n        },\n        standalone: false,\n        features: [i0.ɵɵNgOnChangesFeature],\n        attrs: _c20,\n        ngContentSelectors: _c2,\n        decls: 7,\n        vars: 4,\n        consts: [[1, \"timeline\"], [\"in\", \"SourceGraphic\", \"type\", \"matrix\", \"values\", \"0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\"], [1, \"embedded-chart\"], [\"x\", \"0\", \"y\", \"0\", 1, \"brush-background\"], [1, \"brush\"]],\n        template: function Timeline_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(0, \"g\", 0)(1, \"filter\");\n            i0.ɵɵelement(2, \"feColorMatrix\", 1);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"g\", 2);\n            i0.ɵɵprojection(4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(5, \"rect\", 3)(6, \"g\", 4);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵattribute(\"transform\", ctx.transform);\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"id\", ctx.filterId);\n            i0.ɵɵadvance(4);\n            i0.ɵɵattribute(\"width\", ctx.view[0])(\"height\", ctx.height);\n          }\n        },\n        styles: [\".timeline .brush-background{fill:#0000000d}.timeline .brush .selection{fill:#0000001a;stroke-width:1px;stroke:#888}.timeline .brush .handle{fill-opacity:0}.timeline .embedded-chart{opacity:.6}\\n\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return Timeline;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet AdvancedLegendComponent = /*#__PURE__*/(() => {\n  class AdvancedLegendComponent {\n    constructor() {\n      this.label = 'Total';\n      this.animations = true;\n      this.select = new EventEmitter();\n      this.activate = new EventEmitter();\n      this.deactivate = new EventEmitter();\n      this.legendItems = [];\n      this.labelFormatting = label => label;\n      this.percentageFormatting = percentage => percentage;\n      this.defaultValueFormatting = value => value.toLocaleString();\n    }\n    ngOnChanges(changes) {\n      this.update();\n    }\n    getTotal() {\n      return this.data.map(d => Number(d.value)).reduce((sum, d) => sum + d, 0);\n    }\n    update() {\n      this.total = this.getTotal();\n      this.roundedTotal = this.total;\n      this.legendItems = this.getLegendItems();\n    }\n    getLegendItems() {\n      return this.data.map(d => {\n        const label = formatLabel(d.name);\n        const value = d.value;\n        const color = this.colors.getColor(label);\n        const percentage = this.total > 0 ? value / this.total * 100 : 0;\n        const formattedLabel = typeof this.labelFormatting === 'function' ? this.labelFormatting(label) : label;\n        return {\n          _value: value,\n          data: d,\n          value,\n          color,\n          label: formattedLabel,\n          displayLabel: trimLabel(formattedLabel, 20),\n          origialLabel: d.name,\n          percentage: this.percentageFormatting ? this.percentageFormatting(percentage) : percentage.toLocaleString()\n        };\n      });\n    }\n    trackBy(index, item) {\n      return item.label;\n    }\n    static {\n      this.ɵfac = function AdvancedLegendComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || AdvancedLegendComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: AdvancedLegendComponent,\n        selectors: [[\"ngx-charts-advanced-legend\"]],\n        inputs: {\n          width: \"width\",\n          data: \"data\",\n          colors: \"colors\",\n          label: \"label\",\n          animations: \"animations\",\n          valueFormatting: \"valueFormatting\",\n          labelFormatting: \"labelFormatting\",\n          percentageFormatting: \"percentageFormatting\"\n        },\n        outputs: {\n          select: \"select\",\n          activate: \"activate\",\n          deactivate: \"deactivate\"\n        },\n        standalone: false,\n        features: [i0.ɵɵNgOnChangesFeature],\n        decls: 8,\n        vars: 7,\n        consts: [[1, \"advanced-pie-legend\"], [\"class\", \"total-value\", \"ngx-charts-count-up\", \"\", 3, \"countTo\", \"valueFormatting\", 4, \"ngIf\"], [\"class\", \"total-value\", 4, \"ngIf\"], [1, \"total-label\"], [1, \"legend-items-container\"], [1, \"legend-items\"], [\"tabindex\", \"-1\", \"class\", \"legend-item\", 3, \"mouseenter\", \"mouseleave\", \"click\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-count-up\", \"\", 1, \"total-value\", 3, \"countTo\", \"valueFormatting\"], [1, \"total-value\"], [\"tabindex\", \"-1\", 1, \"legend-item\", 3, \"mouseenter\", \"mouseleave\", \"click\"], [1, \"item-color\"], [\"class\", \"item-value\", \"ngx-charts-count-up\", \"\", 3, \"countTo\", \"valueFormatting\", 4, \"ngIf\"], [\"class\", \"item-value\", 4, \"ngIf\"], [1, \"item-label\"], [\"class\", \"item-percent\", \"ngx-charts-count-up\", \"\", 3, \"countTo\", \"countSuffix\", 4, \"ngIf\"], [\"class\", \"item-percent\", 4, \"ngIf\"], [\"ngx-charts-count-up\", \"\", 1, \"item-value\", 3, \"countTo\", \"valueFormatting\"], [1, \"item-value\"], [\"ngx-charts-count-up\", \"\", 1, \"item-percent\", 3, \"countTo\", \"countSuffix\"], [1, \"item-percent\"]],\n        template: function AdvancedLegendComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0);\n            i0.ɵɵtemplate(1, AdvancedLegendComponent_div_1_Template, 1, 2, \"div\", 1)(2, AdvancedLegendComponent_div_2_Template, 2, 1, \"div\", 2);\n            i0.ɵɵelementStart(3, \"div\", 3);\n            i0.ɵɵtext(4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"div\", 4)(6, \"div\", 5);\n            i0.ɵɵtemplate(7, AdvancedLegendComponent_div_7_Template, 8, 7, \"div\", 6);\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵstyleProp(\"width\", ctx.width, \"px\");\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.animations);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", !ctx.animations);\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate1(\" \", ctx.label, \" \");\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngForOf\", ctx.legendItems)(\"ngForTrackBy\", ctx.trackBy);\n          }\n        },\n        dependencies: [i1.NgForOf, i1.NgIf, CountUpDirective],\n        styles: [\".advanced-pie-legend{float:left;position:relative;top:50%;transform:translateY(-50%)}.advanced-pie-legend .total-value{font-size:36px}.advanced-pie-legend .total-label{font-size:24px;margin-bottom:19px}.advanced-pie-legend .legend-items-container{width:100%}.advanced-pie-legend .legend-items-container .legend-items{white-space:nowrap;overflow:auto}.advanced-pie-legend .legend-items-container .legend-items .legend-item{margin-right:20px;display:inline-block;cursor:pointer}.advanced-pie-legend .legend-items-container .legend-items .legend-item:focus{outline:none}.advanced-pie-legend .legend-items-container .legend-items .legend-item:hover{color:#000;-webkit-transition:.2s;-moz-transition:.2s;transition:.2s}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-value{font-size:24px;margin-top:-6px;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-label{font-size:14px;opacity:.7;margin-left:11px;margin-top:-6px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-percent{font-size:24px;opacity:.7;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-color{border-left:4px solid;width:4px;height:42px;float:left;margin-right:7px}\\n\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return AdvancedLegendComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst COMPONENTS = [AreaComponent, BaseChartComponent, CountUpDirective, TooltipArea, ChartComponent, LegendComponent, LegendEntryComponent, ScaleLegendComponent, CircleComponent, CircleSeriesComponent, GridPanelComponent, GridPanelSeriesComponent, SvgLinearGradientComponent, SvgRadialGradientComponent, Timeline, AdvancedLegendComponent];\nlet ChartCommonModule = /*#__PURE__*/(() => {\n  class ChartCommonModule {\n    static {\n      this.ɵfac = function ChartCommonModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || ChartCommonModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: ChartCommonModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [CommonModule, AxesModule, TooltipModule, CommonModule, AxesModule, TooltipModule]\n      });\n    }\n  }\n  return ChartCommonModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction calculateViewDimensions({\n  width,\n  height,\n  margins,\n  showXAxis = false,\n  showYAxis = false,\n  xAxisHeight = 0,\n  yAxisWidth = 0,\n  showXLabel = false,\n  showYLabel = false,\n  showLegend = false,\n  legendType = ScaleType.Ordinal,\n  legendPosition = LegendPosition.Right,\n  columns = 12\n}) {\n  let xOffset = margins[3];\n  let chartWidth = width;\n  let chartHeight = height - margins[0] - margins[2];\n  if (showLegend && legendPosition === LegendPosition.Right) {\n    if (legendType === ScaleType.Ordinal) {\n      columns -= 2;\n    } else {\n      columns -= 1;\n    }\n  }\n  chartWidth = chartWidth * columns / 12;\n  chartWidth = chartWidth - margins[1] - margins[3];\n  if (showXAxis) {\n    chartHeight -= 5;\n    chartHeight -= xAxisHeight;\n    if (showXLabel) {\n      // text height + spacing between axis label and tick labels\n      const offset = 25 + 5;\n      chartHeight -= offset;\n    }\n  }\n  if (showYAxis) {\n    chartWidth -= 5;\n    chartWidth -= yAxisWidth;\n    xOffset += yAxisWidth;\n    xOffset += 10;\n    if (showYLabel) {\n      // text height + spacing between axis label and tick labels\n      const offset = 25 + 5;\n      chartWidth -= offset;\n      xOffset += offset;\n    }\n  }\n  chartWidth = Math.max(0, chartWidth);\n  chartHeight = Math.max(0, chartHeight);\n  return {\n    width: Math.floor(chartWidth),\n    height: Math.floor(chartHeight),\n    xOffset: Math.floor(xOffset)\n  };\n}\nconst colorSets = [{\n  name: 'vivid',\n  selectable: true,\n  group: ScaleType.Ordinal,\n  domain: ['#647c8a', '#3f51b5', '#2196f3', '#00b862', '#afdf0a', '#a7b61a', '#f3e562', '#ff9800', '#ff5722', '#ff4514']\n}, {\n  name: 'natural',\n  selectable: true,\n  group: ScaleType.Ordinal,\n  domain: ['#bf9d76', '#e99450', '#d89f59', '#f2dfa7', '#a5d7c6', '#7794b1', '#afafaf', '#707160', '#ba9383', '#d9d5c3']\n}, {\n  name: 'cool',\n  selectable: true,\n  group: ScaleType.Ordinal,\n  domain: ['#a8385d', '#7aa3e5', '#a27ea8', '#aae3f5', '#adcded', '#a95963', '#8796c0', '#7ed3ed', '#50abcc', '#ad6886']\n}, {\n  name: 'fire',\n  selectable: true,\n  group: ScaleType.Ordinal,\n  domain: ['#ff3d00', '#bf360c', '#ff8f00', '#ff6f00', '#ff5722', '#e65100', '#ffca28', '#ffab00']\n}, {\n  name: 'solar',\n  selectable: true,\n  group: ScaleType.Linear,\n  domain: ['#fff8e1', '#ffecb3', '#ffe082', '#ffd54f', '#ffca28', '#ffc107', '#ffb300', '#ffa000', '#ff8f00', '#ff6f00']\n}, {\n  name: 'air',\n  selectable: true,\n  group: ScaleType.Linear,\n  domain: ['#e1f5fe', '#b3e5fc', '#81d4fa', '#4fc3f7', '#29b6f6', '#03a9f4', '#039be5', '#0288d1', '#0277bd', '#01579b']\n}, {\n  name: 'aqua',\n  selectable: true,\n  group: ScaleType.Linear,\n  domain: ['#e0f7fa', '#b2ebf2', '#80deea', '#4dd0e1', '#26c6da', '#00bcd4', '#00acc1', '#0097a7', '#00838f', '#006064']\n}, {\n  name: 'flame',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#A10A28', '#D3342D', '#EF6D49', '#FAAD67', '#FDDE90', '#DBED91', '#A9D770', '#6CBA67', '#2C9653', '#146738']\n}, {\n  name: 'ocean',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#1D68FB', '#33C0FC', '#4AFFFE', '#AFFFFF', '#FFFC63', '#FDBD2D', '#FC8A25', '#FA4F1E', '#FA141B', '#BA38D1']\n}, {\n  name: 'forest',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#55C22D', '#C1F33D', '#3CC099', '#AFFFFF', '#8CFC9D', '#76CFFA', '#BA60FB', '#EE6490', '#C42A1C', '#FC9F32']\n}, {\n  name: 'horizon',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#2597FB', '#65EBFD', '#99FDD0', '#FCEE4B', '#FEFCFA', '#FDD6E3', '#FCB1A8', '#EF6F7B', '#CB96E8', '#EFDEE0']\n}, {\n  name: 'neons',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#FF3333', '#FF33FF', '#CC33FF', '#0000FF', '#33CCFF', '#33FFFF', '#33FF66', '#CCFF33', '#FFCC00', '#FF6600']\n}, {\n  name: 'picnic',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#FAC51D', '#66BD6D', '#FAA026', '#29BB9C', '#E96B56', '#55ACD2', '#B7332F', '#2C83C9', '#9166B8', '#92E7E8']\n}, {\n  name: 'night',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#2B1B5A', '#501356', '#183356', '#28203F', '#391B3C', '#1E2B3C', '#120634', '#2D0432', '#051932', '#453080', '#75267D', '#2C507D', '#4B3880', '#752F7D', '#35547D']\n}, {\n  name: 'nightLights',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#4e31a5', '#9c25a7', '#3065ab', '#57468b', '#904497', '#46648b', '#32118d', '#a00fb3', '#1052a2', '#6e51bd', '#b63cc3', '#6c97cb', '#8671c1', '#b455be', '#7496c3']\n}];\nclass ColorHelper {\n  constructor(scheme, type, domain, customColors) {\n    if (typeof scheme === 'string') {\n      scheme = colorSets.find(cs => {\n        return cs.name === scheme;\n      });\n    }\n    this.colorDomain = scheme.domain;\n    this.scaleType = type;\n    this.domain = domain;\n    this.customColors = customColors;\n    this.scale = this.generateColorScheme(scheme, type, this.domain);\n  }\n  generateColorScheme(scheme, type, domain) {\n    if (typeof scheme === 'string') {\n      scheme = colorSets.find(cs => {\n        return cs.name === scheme;\n      });\n    }\n    let colorScale;\n    switch (type) {\n      case ScaleType.Quantile:\n        colorScale = scaleQuantile().range(scheme.domain).domain(domain);\n        break;\n      case ScaleType.Ordinal:\n        colorScale = scaleOrdinal().range(scheme.domain).domain(domain);\n        break;\n      case ScaleType.Linear:\n        {\n          const colorDomain = [...scheme.domain];\n          if (colorDomain.length === 1) {\n            colorDomain.push(colorDomain[0]);\n            this.colorDomain = colorDomain;\n          }\n          const points = range(0, 1, 1.0 / colorDomain.length);\n          colorScale = scaleLinear().range(colorDomain).domain(points);\n        }\n        break;\n      default:\n        break;\n    }\n    return colorScale;\n  }\n  getColor(value) {\n    if (value === undefined || value === null) {\n      throw new Error('Value can not be null');\n    }\n    if (this.scaleType === ScaleType.Linear) {\n      const valueScale = scaleLinear().domain(this.domain).range([0, 1]);\n      return this.scale(valueScale(value));\n    } else {\n      if (typeof this.customColors === 'function') {\n        return this.customColors(value);\n      }\n      const formattedValue = value.toString();\n      let found; // todo type customColors\n      if (this.customColors && this.customColors.length > 0) {\n        found = this.customColors.find(mapping => {\n          return mapping.name.toLowerCase() === formattedValue.toLowerCase();\n        });\n      }\n      if (found) {\n        return found.value;\n      } else {\n        return this.scale(value);\n      }\n    }\n  }\n  getLinearGradientStops(value, start) {\n    if (start === undefined) {\n      start = this.domain[0];\n    }\n    const valueScale = scaleLinear().domain(this.domain).range([0, 1]);\n    const colorValueScale = scaleBand().domain(this.colorDomain).range([0, 1]);\n    const endColor = this.getColor(value);\n    // generate the stops\n    const startVal = valueScale(start);\n    const startColor = this.getColor(start);\n    const endVal = valueScale(value);\n    let i = 1;\n    let currentVal = startVal;\n    const stops = [];\n    stops.push({\n      color: startColor,\n      offset: startVal,\n      originalOffset: startVal,\n      opacity: 1\n    });\n    while (currentVal < endVal && i < this.colorDomain.length) {\n      const color = this.colorDomain[i];\n      const offset = colorValueScale(color);\n      if (offset <= startVal) {\n        i++;\n        continue;\n      }\n      if (offset.toFixed(4) >= (endVal - colorValueScale.bandwidth()).toFixed(4)) {\n        break;\n      }\n      stops.push({\n        color,\n        offset,\n        opacity: 1\n      });\n      currentVal = offset;\n      i++;\n    }\n    if (stops[stops.length - 1].offset < 100) {\n      stops.push({\n        color: endColor,\n        offset: endVal,\n        opacity: 1\n      });\n    }\n    if (endVal === startVal) {\n      stops[0].offset = 0;\n      stops[1].offset = 100;\n    } else {\n      // normalize the offsets into percentages\n      if (stops[stops.length - 1].offset !== 100) {\n        for (const s of stops) {\n          s.offset = (s.offset - startVal) / (endVal - startVal) * 100;\n        }\n      }\n    }\n    return stops;\n  }\n}\n\n/**\n * Based on the data, return an array with unique values.\n *\n * @export\n * @returns array\n */\nfunction getUniqueXDomainValues(results) {\n  const valueSet = new Set();\n  for (const result of results) {\n    for (const d of result.series) {\n      valueSet.add(d.name);\n    }\n  }\n  return Array.from(valueSet);\n}\n/**\n * Get the scaleType of enumerable of values.\n * @returns  'time', 'linear' or 'ordinal'\n */\nfunction getScaleType(values, checkDateType = true) {\n  if (checkDateType) {\n    const allDates = values.every(value => value instanceof Date);\n    if (allDates) {\n      return ScaleType.Time;\n    }\n  }\n  const allNumbers = values.every(value => typeof value === 'number');\n  if (allNumbers) {\n    return ScaleType.Linear;\n  }\n  return ScaleType.Ordinal;\n}\nfunction getXDomainArray(values, xScaleMin, xScaleMax) {\n  const scaleType = getScaleType(values);\n  let xSet = [];\n  let domain = [];\n  if (scaleType === ScaleType.Linear) {\n    values = values.map(v => Number(v));\n  }\n  let min;\n  let max;\n  if (scaleType === ScaleType.Time || scaleType === ScaleType.Linear) {\n    const mappedValues = values.map(v => Number(v));\n    min = xScaleMin ? xScaleMin : Math.min(...mappedValues);\n    max = xScaleMax ? xScaleMax : Math.max(...mappedValues);\n  }\n  if (scaleType === ScaleType.Time) {\n    domain = [new Date(min), new Date(max)];\n    xSet = [...values].sort((a, b) => {\n      const aDate = a.getTime();\n      const bDate = b.getTime();\n      if (aDate > bDate) return 1;\n      if (bDate > aDate) return -1;\n      return 0;\n    });\n  } else if (scaleType === ScaleType.Linear) {\n    domain = [min, max];\n    // Use compare function to sort numbers numerically\n    xSet = [...values].sort((a, b) => a - b);\n  } else {\n    domain = values;\n    xSet = values;\n  }\n  return {\n    domain,\n    xSet,\n    scaleType\n  };\n}\nfunction sortLinear(data, property, direction = 'asc') {\n  return data.sort((a, b) => {\n    if (direction === 'asc') {\n      return a[property] - b[property];\n    } else {\n      return b[property] - a[property];\n    }\n  });\n}\nfunction sortByDomain(data, property, direction = 'asc', domain) {\n  return data.sort((a, b) => {\n    const aVal = a[property];\n    const bVal = b[property];\n    const aIdx = domain.indexOf(aVal);\n    const bIdx = domain.indexOf(bVal);\n    if (direction === 'asc') {\n      return aIdx - bIdx;\n    } else {\n      return bIdx - aIdx;\n    }\n  });\n}\nfunction sortByTime(data, property, direction = 'asc') {\n  return data.sort((a, b) => {\n    const aDate = a[property].getTime();\n    const bDate = b[property].getTime();\n    if (direction === 'asc') {\n      if (aDate > bDate) return 1;\n      if (bDate > aDate) return -1;\n      return 0;\n    } else {\n      if (aDate > bDate) return -1;\n      if (bDate > aDate) return 1;\n      return 0;\n    }\n  });\n}\nlet AreaSeriesComponent = /*#__PURE__*/(() => {\n  class AreaSeriesComponent {\n    constructor() {\n      this.baseValue = 'auto';\n      this.stacked = false;\n      this.normalized = false;\n      this.animations = true;\n      this.select = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n      this.update();\n    }\n    update() {\n      this.updateGradient();\n      let currentArea;\n      let startingArea;\n      const xProperty = d => {\n        const label = d.name;\n        return this.xScale(label);\n      };\n      if (this.stacked || this.normalized) {\n        currentArea = area().x(xProperty).y0((d, i) => this.yScale(d.d0)).y1((d, i) => this.yScale(d.d1));\n        startingArea = area().x(xProperty).y0(d => this.yScale.range()[0]).y1(d => this.yScale.range()[0]);\n      } else {\n        currentArea = area().x(xProperty).y0(() => this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue)).y1(d => this.yScale(d.value));\n        startingArea = area().x(xProperty).y0(d => this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue)).y1(d => this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue));\n      }\n      currentArea.curve(this.curve);\n      startingArea.curve(this.curve);\n      this.opacity = 0.8;\n      let data = this.data.series;\n      if (this.scaleType === ScaleType.Linear) {\n        data = sortLinear(data, 'name');\n      } else if (this.scaleType === ScaleType.Time) {\n        data = sortByTime(data, 'name');\n      } else {\n        data = sortByDomain(data, 'name', 'asc', this.xScale.domain());\n      }\n      this.path = currentArea(data);\n      this.startingPath = startingArea(data);\n    }\n    updateGradient() {\n      if (this.colors.scaleType === ScaleType.Linear) {\n        this.hasGradient = true;\n        if (this.stacked || this.normalized) {\n          const d0values = this.data.series.map(d => d.d0);\n          const d1values = this.data.series.map(d => d.d1);\n          const max = Math.max(...d1values);\n          const min = Math.min(...d0values);\n          this.gradientStops = this.colors.getLinearGradientStops(max, min);\n        } else {\n          const values = this.data.series.map(d => d.value);\n          const max = Math.max(...values);\n          this.gradientStops = this.colors.getLinearGradientStops(max);\n        }\n      } else {\n        this.hasGradient = false;\n        this.gradientStops = undefined;\n      }\n    }\n    isActive(entry) {\n      if (!this.activeEntries) return false;\n      const item = this.activeEntries.find(d => {\n        return entry.name === d.name;\n      });\n      return item !== undefined;\n    }\n    isInactive(entry) {\n      if (!this.activeEntries || this.activeEntries.length === 0) return false;\n      const item = this.activeEntries.find(d => {\n        return entry.name === d.name;\n      });\n      return item === undefined;\n    }\n    static {\n      this.ɵfac = function AreaSeriesComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || AreaSeriesComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: AreaSeriesComponent,\n        selectors: [[\"g\", \"ngx-charts-area-series\", \"\"]],\n        inputs: {\n          data: \"data\",\n          xScale: \"xScale\",\n          yScale: \"yScale\",\n          baseValue: \"baseValue\",\n          colors: \"colors\",\n          scaleType: \"scaleType\",\n          stacked: \"stacked\",\n          normalized: \"normalized\",\n          gradient: \"gradient\",\n          curve: \"curve\",\n          activeEntries: \"activeEntries\",\n          animations: \"animations\"\n        },\n        outputs: {\n          select: \"select\"\n        },\n        standalone: false,\n        features: [i0.ɵɵNgOnChangesFeature],\n        attrs: _c21,\n        decls: 1,\n        vars: 12,\n        consts: [[\"ngx-charts-area\", \"\", 1, \"area-series\", 3, \"data\", \"path\", \"fill\", \"stops\", \"startingPath\", \"opacity\", \"gradient\", \"animations\"]],\n        template: function AreaSeriesComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelement(0, \"g\", 0);\n          }\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"active\", ctx.isActive(ctx.data))(\"inactive\", ctx.isInactive(ctx.data));\n            i0.ɵɵproperty(\"data\", ctx.data)(\"path\", ctx.path)(\"fill\", ctx.colors.getColor(ctx.data.name))(\"stops\", ctx.gradientStops)(\"startingPath\", ctx.startingPath)(\"opacity\", ctx.opacity)(\"gradient\", ctx.gradient || ctx.hasGradient)(\"animations\", ctx.animations);\n          }\n        },\n        dependencies: [AreaComponent],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return AreaSeriesComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet AreaChartComponent = /*#__PURE__*/(() => {\n  class AreaChartComponent extends BaseChartComponent {\n    constructor() {\n      super(...arguments);\n      this.legend = false;\n      this.legendTitle = 'Legend';\n      this.legendPosition = LegendPosition.Right;\n      this.xAxis = false;\n      this.yAxis = false;\n      this.baseValue = 'auto';\n      this.autoScale = false;\n      this.timeline = false;\n      this.showGridLines = true;\n      this.curve = curveLinear;\n      this.activeEntries = [];\n      this.trimXAxisTicks = true;\n      this.trimYAxisTicks = true;\n      this.rotateXAxisTicks = true;\n      this.maxXAxisTickLength = 16;\n      this.maxYAxisTickLength = 16;\n      this.roundDomains = false;\n      this.tooltipDisabled = false;\n      this.wrapTicks = false;\n      this.activate = new EventEmitter();\n      this.deactivate = new EventEmitter();\n      this.margin = [10, 20, 10, 20];\n      this.xAxisHeight = 0;\n      this.yAxisWidth = 0;\n      this.timelineHeight = 50;\n      this.timelinePadding = 10;\n      this.trackBy = (index, item) => {\n        return item.name;\n      };\n    }\n    update() {\n      super.update();\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin,\n        showXAxis: this.xAxis,\n        showYAxis: this.yAxis,\n        xAxisHeight: this.xAxisHeight,\n        yAxisWidth: this.yAxisWidth,\n        showXLabel: this.showXAxisLabel,\n        showYLabel: this.showYAxisLabel,\n        showLegend: this.legend,\n        legendType: this.schemeType,\n        legendPosition: this.legendPosition\n      });\n      if (this.timeline) {\n        this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n      }\n      this.xDomain = this.getXDomain();\n      if (this.filteredDomain) {\n        this.xDomain = this.filteredDomain;\n      }\n      this.yDomain = this.getYDomain();\n      this.seriesDomain = this.getSeriesDomain();\n      this.xScale = this.getXScale(this.xDomain, this.dims.width);\n      this.yScale = this.getYScale(this.yDomain, this.dims.height);\n      this.updateTimeline();\n      this.setColors();\n      this.legendOptions = this.getLegendOptions();\n      this.transform = `translate(${this.dims.xOffset}, ${this.margin[0]})`;\n      this.clipPathId = 'clip' + id().toString();\n      this.clipPath = `url(#${this.clipPathId})`;\n    }\n    updateTimeline() {\n      if (this.timeline) {\n        this.timelineWidth = this.dims.width;\n        this.timelineXDomain = this.getXDomain();\n        this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n        this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n        this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n      }\n    }\n    getXDomain() {\n      let values = getUniqueXDomainValues(this.results);\n      this.scaleType = getScaleType(values);\n      let domain = [];\n      if (this.scaleType === ScaleType.Linear) {\n        values = values.map(v => Number(v));\n      }\n      let min;\n      let max;\n      if (this.scaleType === ScaleType.Time || this.scaleType === ScaleType.Linear) {\n        min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\n        max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\n      }\n      if (this.scaleType === ScaleType.Time) {\n        domain = [new Date(min), new Date(max)];\n        this.xSet = [...values].sort((a, b) => {\n          const aDate = a.getTime();\n          const bDate = b.getTime();\n          if (aDate > bDate) return 1;\n          if (bDate > aDate) return -1;\n          return 0;\n        });\n      } else if (this.scaleType === ScaleType.Linear) {\n        domain = [min, max];\n        // Use compare function to sort numbers numerically\n        this.xSet = [...values].sort((a, b) => a - b);\n      } else {\n        domain = values;\n        this.xSet = values;\n      }\n      return domain;\n    }\n    getYDomain() {\n      const domain = [];\n      for (const results of this.results) {\n        for (const d of results.series) {\n          if (!domain.includes(d.value)) {\n            domain.push(d.value);\n          }\n        }\n      }\n      const values = [...domain];\n      if (!this.autoScale) {\n        values.push(0);\n      }\n      if (this.baseValue !== 'auto') {\n        values.push(this.baseValue);\n      }\n      const min = this.yScaleMin ? this.yScaleMin : Math.min(...values);\n      const max = this.yScaleMax ? this.yScaleMax : Math.max(...values);\n      return [min, max];\n    }\n    getSeriesDomain() {\n      return this.results.map(d => d.name);\n    }\n    getXScale(domain, width) {\n      let scale;\n      if (this.scaleType === ScaleType.Time) {\n        scale = scaleTime();\n      } else if (this.scaleType === ScaleType.Linear) {\n        scale = scaleLinear();\n      } else if (this.scaleType === ScaleType.Ordinal) {\n        scale = scalePoint().padding(0.1);\n      }\n      scale.range([0, width]).domain(domain);\n      return this.roundDomains ? scale.nice() : scale;\n    }\n    getYScale(domain, height) {\n      const scale = scaleLinear().range([height, 0]).domain(domain);\n      return this.roundDomains ? scale.nice() : scale;\n    }\n    getScaleType(values) {\n      let date = true;\n      let num = true;\n      for (const value of values) {\n        if (isDate(value)) {\n          date = false;\n        }\n        if (isNumber(value)) {\n          num = false;\n        }\n      }\n      if (date) {\n        return ScaleType.Time;\n      }\n      if (num) {\n        return ScaleType.Linear;\n      }\n      return ScaleType.Ordinal;\n    }\n    updateDomain(domain) {\n      this.filteredDomain = domain;\n      this.xDomain = this.filteredDomain;\n      this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    }\n    updateHoveredVertical(item) {\n      this.hoveredVertical = item.value;\n      this.deactivateAll();\n    }\n    hideCircles() {\n      this.hoveredVertical = null;\n      this.deactivateAll();\n    }\n    onClick(data, series) {\n      if (series) {\n        data.series = series.name;\n      }\n      this.select.emit(data);\n    }\n    setColors() {\n      let domain;\n      if (this.schemeType === ScaleType.Ordinal) {\n        domain = this.seriesDomain;\n      } else {\n        domain = this.yDomain;\n      }\n      this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n      const opts = {\n        scaleType: this.schemeType,\n        colors: undefined,\n        domain: [],\n        title: undefined,\n        position: this.legendPosition\n      };\n      if (opts.scaleType === ScaleType.Ordinal) {\n        opts.domain = this.seriesDomain;\n        opts.colors = this.colors;\n        opts.title = this.legendTitle;\n      } else {\n        opts.domain = this.yDomain;\n        opts.colors = this.colors.scale;\n      }\n      return opts;\n    }\n    updateYAxisWidth({\n      width\n    }) {\n      this.yAxisWidth = width;\n      this.update();\n    }\n    updateXAxisHeight({\n      height\n    }) {\n      this.xAxisHeight = height;\n      this.update();\n    }\n    onActivate(item) {\n      const idx = this.activeEntries.findIndex(d => {\n        return d.name === item.name && d.value === item.value;\n      });\n      if (idx > -1) {\n        return;\n      }\n      this.activeEntries = [item, ...this.activeEntries];\n      this.activate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n    onDeactivate(item) {\n      const idx = this.activeEntries.findIndex(d => {\n        return d.name === item.name && d.value === item.value;\n      });\n      this.activeEntries.splice(idx, 1);\n      this.activeEntries = [...this.activeEntries];\n      this.deactivate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n    deactivateAll() {\n      this.activeEntries = [...this.activeEntries];\n      for (const entry of this.activeEntries) {\n        this.deactivate.emit({\n          value: entry,\n          entries: []\n        });\n      }\n      this.activeEntries = [];\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵAreaChartComponent_BaseFactory;\n        return function AreaChartComponent_Factory(__ngFactoryType__) {\n          return (ɵAreaChartComponent_BaseFactory || (ɵAreaChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(AreaChartComponent)))(__ngFactoryType__ || AreaChartComponent);\n        };\n      })();\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: AreaChartComponent,\n        selectors: [[\"ngx-charts-area-chart\"]],\n        contentQueries: function AreaChartComponent_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n            i0.ɵɵcontentQuery(dirIndex, _c23, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.seriesTooltipTemplate = _t.first);\n          }\n        },\n        hostBindings: function AreaChartComponent_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"mouseleave\", function AreaChartComponent_mouseleave_HostBindingHandler() {\n              return ctx.hideCircles();\n            });\n          }\n        },\n        inputs: {\n          legend: \"legend\",\n          legendTitle: \"legendTitle\",\n          legendPosition: \"legendPosition\",\n          xAxis: \"xAxis\",\n          yAxis: \"yAxis\",\n          baseValue: \"baseValue\",\n          autoScale: \"autoScale\",\n          showXAxisLabel: \"showXAxisLabel\",\n          showYAxisLabel: \"showYAxisLabel\",\n          xAxisLabel: \"xAxisLabel\",\n          yAxisLabel: \"yAxisLabel\",\n          timeline: \"timeline\",\n          gradient: \"gradient\",\n          showGridLines: \"showGridLines\",\n          curve: \"curve\",\n          activeEntries: \"activeEntries\",\n          schemeType: \"schemeType\",\n          trimXAxisTicks: \"trimXAxisTicks\",\n          trimYAxisTicks: \"trimYAxisTicks\",\n          rotateXAxisTicks: \"rotateXAxisTicks\",\n          maxXAxisTickLength: \"maxXAxisTickLength\",\n          maxYAxisTickLength: \"maxYAxisTickLength\",\n          xAxisTickFormatting: \"xAxisTickFormatting\",\n          yAxisTickFormatting: \"yAxisTickFormatting\",\n          xAxisTicks: \"xAxisTicks\",\n          yAxisTicks: \"yAxisTicks\",\n          roundDomains: \"roundDomains\",\n          tooltipDisabled: \"tooltipDisabled\",\n          xScaleMin: \"xScaleMin\",\n          xScaleMax: \"xScaleMax\",\n          yScaleMin: \"yScaleMin\",\n          yScaleMax: \"yScaleMax\",\n          wrapTicks: \"wrapTicks\"\n        },\n        outputs: {\n          activate: \"activate\",\n          deactivate: \"deactivate\"\n        },\n        standalone: false,\n        features: [i0.ɵɵInheritDefinitionFeature],\n        decls: 11,\n        vars: 20,\n        consts: [[3, \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\"], [1, \"area-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"mouseleave\", 4, \"ngIf\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"legend\", \"scaleType\", \"onDomainChange\", 4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"dimensionsChanged\", \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\"], [\"ngx-charts-y-axis\", \"\", 3, \"dimensionsChanged\", \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\"], [\"ngx-charts-area-series\", \"\", 3, \"xScale\", \"yScale\", \"baseValue\", \"colors\", \"data\", \"activeEntries\", \"scaleType\", \"gradient\", \"curve\", \"animations\"], [3, \"mouseleave\"], [\"ngx-charts-tooltip-area\", \"\", 3, \"hover\", \"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"tooltipDisabled\", \"tooltipTemplate\"], [4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-circle-series\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"xScale\", \"yScale\", \"colors\", \"activeEntries\", \"data\", \"scaleType\", \"visibleValue\", \"tooltipDisabled\", \"tooltipTemplate\"], [\"ngx-charts-timeline\", \"\", 3, \"onDomainChange\", \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"legend\", \"scaleType\"], [\"ngx-charts-area-series\", \"\", 3, \"xScale\", \"yScale\", \"baseValue\", \"colors\", \"data\", \"scaleType\", \"gradient\", \"curve\", \"animations\"]],\n        template: function AreaChartComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n            i0.ɵɵlistener(\"legendLabelClick\", function AreaChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n              return ctx.onClick($event);\n            })(\"legendLabelActivate\", function AreaChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n              return ctx.onActivate($event);\n            })(\"legendLabelDeactivate\", function AreaChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n              return ctx.onDeactivate($event);\n            });\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(1, \"defs\")(2, \"clipPath\");\n            i0.ɵɵelement(3, \"rect\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(4, \"g\", 1);\n            i0.ɵɵtemplate(5, AreaChartComponent__svg_g_5_Template, 1, 11, \"g\", 2)(6, AreaChartComponent__svg_g_6_Template, 1, 10, \"g\", 3);\n            i0.ɵɵelementStart(7, \"g\");\n            i0.ɵɵtemplate(8, AreaChartComponent__svg_g_8_Template, 2, 10, \"g\", 4)(9, AreaChartComponent__svg_g_9_Template, 3, 9, \"g\", 5);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(10, AreaChartComponent__svg_g_10_Template, 2, 13, \"g\", 6);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(17, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n            i0.ɵɵadvance(2);\n            i0.ɵɵattribute(\"id\", ctx.clipPathId);\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"width\", ctx.dims.width + 10)(\"height\", ctx.dims.height + 10)(\"transform\", \"translate(-5, -5)\");\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"transform\", ctx.transform);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"clip-path\", ctx.clipPath);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngForOf\", ctx.results)(\"ngForTrackBy\", ctx.trackBy);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", !ctx.tooltipDisabled);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.timeline && ctx.scaleType != \"ordinal\");\n          }\n        },\n        dependencies: [i1.NgForOf, i1.NgIf, XAxisComponent, YAxisComponent, TooltipArea, ChartComponent, CircleSeriesComponent, Timeline, AreaSeriesComponent],\n        styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return AreaChartComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet AreaChartNormalizedComponent = /*#__PURE__*/(() => {\n  class AreaChartNormalizedComponent extends BaseChartComponent {\n    constructor() {\n      super(...arguments);\n      this.legend = false;\n      this.legendTitle = 'Legend';\n      this.legendPosition = LegendPosition.Right;\n      this.showXAxisLabel = false;\n      this.showYAxisLabel = false;\n      this.showGridLines = true;\n      this.curve = curveLinear;\n      this.activeEntries = [];\n      this.trimXAxisTicks = true;\n      this.trimYAxisTicks = true;\n      this.rotateXAxisTicks = true;\n      this.maxXAxisTickLength = 16;\n      this.maxYAxisTickLength = 16;\n      this.roundDomains = false;\n      this.tooltipDisabled = false;\n      this.wrapTicks = false;\n      this.activate = new EventEmitter();\n      this.deactivate = new EventEmitter();\n      this.yDomain = [0, 100];\n      this.margin = [10, 20, 10, 20];\n      this.xAxisHeight = 0;\n      this.yAxisWidth = 0;\n      this.seriesType = SeriesType;\n      this.timelineHeight = 50;\n      this.timelinePadding = 10;\n      this.trackBy = (index, item) => {\n        return item.name;\n      };\n    }\n    update() {\n      super.update();\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin,\n        showXAxis: this.xAxis,\n        showYAxis: this.yAxis,\n        xAxisHeight: this.xAxisHeight,\n        yAxisWidth: this.yAxisWidth,\n        showXLabel: this.showXAxisLabel,\n        showYLabel: this.showYAxisLabel,\n        showLegend: this.legend,\n        legendType: this.schemeType,\n        legendPosition: this.legendPosition\n      });\n      if (this.timeline) {\n        this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n      }\n      this.xDomain = this.getXDomain();\n      if (this.filteredDomain) {\n        this.xDomain = this.filteredDomain;\n      }\n      this.seriesDomain = this.getSeriesDomain();\n      this.xScale = this.getXScale(this.xDomain, this.dims.width);\n      this.yScale = this.getYScale(this.yDomain, this.dims.height);\n      for (let i = 0; i < this.xSet.length; i++) {\n        const val = this.xSet[i];\n        let d0 = 0;\n        let total = 0;\n        for (const group of this.results) {\n          const d = group.series.find(item => {\n            let a = item.name;\n            let b = val;\n            if (this.scaleType === ScaleType.Time) {\n              a = a.valueOf();\n              b = b.valueOf();\n            }\n            return a === b;\n          });\n          if (d) {\n            total += d.value;\n          }\n        }\n        for (const group of this.results) {\n          let d = group.series.find(item => {\n            let a = item.name;\n            let b = val;\n            if (this.scaleType === ScaleType.Time) {\n              a = a.valueOf();\n              b = b.valueOf();\n            }\n            return a === b;\n          });\n          if (d) {\n            d.d0 = d0;\n            d.d1 = d0 + d.value;\n            d0 += d.value;\n          } else {\n            d = {\n              name: val,\n              value: 0,\n              d0,\n              d1: d0\n            };\n            group.series.push(d);\n          }\n          if (total > 0) {\n            d.d0 = d.d0 * 100 / total;\n            d.d1 = d.d1 * 100 / total;\n          } else {\n            d.d0 = 0;\n            d.d1 = 0;\n          }\n        }\n      }\n      this.updateTimeline();\n      this.setColors();\n      this.legendOptions = this.getLegendOptions();\n      this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n      this.clipPathId = 'clip' + id().toString();\n      this.clipPath = `url(#${this.clipPathId})`;\n    }\n    updateTimeline() {\n      if (this.timeline) {\n        this.timelineWidth = this.dims.width;\n        this.timelineXDomain = this.getXDomain();\n        this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n        this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n        this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n      }\n    }\n    getXDomain() {\n      let values = getUniqueXDomainValues(this.results);\n      this.scaleType = getScaleType(values);\n      let domain = [];\n      if (this.scaleType === ScaleType.Time) {\n        const min = Math.min(...values);\n        const max = Math.max(...values);\n        domain = [new Date(min), new Date(max)];\n        this.xSet = [...values].sort((a, b) => {\n          const aDate = a.getTime();\n          const bDate = b.getTime();\n          if (aDate > bDate) return 1;\n          if (bDate > aDate) return -1;\n          return 0;\n        });\n      } else if (this.scaleType === ScaleType.Linear) {\n        values = values.map(v => Number(v));\n        const min = Math.min(...values);\n        const max = Math.max(...values);\n        domain = [min, max];\n        // Use compare function to sort numbers numerically\n        this.xSet = [...values].sort((a, b) => a - b);\n      } else {\n        domain = values;\n        this.xSet = values;\n      }\n      return domain;\n    }\n    getSeriesDomain() {\n      return this.results.map(d => d.name);\n    }\n    getXScale(domain, width) {\n      let scale;\n      if (this.scaleType === ScaleType.Time) {\n        scale = scaleTime();\n      } else if (this.scaleType === ScaleType.Linear) {\n        scale = scaleLinear();\n      } else if (this.scaleType === ScaleType.Ordinal) {\n        scale = scalePoint().padding(0.1);\n      }\n      scale.range([0, width]).domain(domain);\n      return this.roundDomains ? scale.nice() : scale;\n    }\n    getYScale(domain, height) {\n      const scale = scaleLinear().range([height, 0]).domain(domain);\n      return this.roundDomains ? scale.nice() : scale;\n    }\n    updateDomain(domain) {\n      this.filteredDomain = domain;\n      this.xDomain = this.filteredDomain;\n      this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    }\n    updateHoveredVertical(item) {\n      this.hoveredVertical = item.value;\n      this.deactivateAll();\n    }\n    hideCircles() {\n      this.hoveredVertical = null;\n      this.deactivateAll();\n    }\n    onClick(data, series) {\n      if (series) {\n        data.series = series.name;\n      }\n      this.select.emit(data);\n    }\n    setColors() {\n      let domain;\n      if (this.schemeType === ScaleType.Ordinal) {\n        domain = this.seriesDomain;\n      } else {\n        domain = this.yDomain;\n      }\n      this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n      const opts = {\n        scaleType: this.schemeType,\n        colors: undefined,\n        domain: [],\n        title: undefined,\n        position: this.legendPosition\n      };\n      if (opts.scaleType === ScaleType.Ordinal) {\n        opts.domain = this.seriesDomain;\n        opts.colors = this.colors;\n        opts.title = this.legendTitle;\n      } else {\n        opts.domain = this.yDomain;\n        opts.colors = this.colors.scale;\n      }\n      return opts;\n    }\n    updateYAxisWidth({\n      width\n    }) {\n      this.yAxisWidth = width;\n      this.update();\n    }\n    updateXAxisHeight({\n      height\n    }) {\n      this.xAxisHeight = height;\n      this.update();\n    }\n    onActivate(item) {\n      const idx = this.activeEntries.findIndex(d => {\n        return d.name === item.name && d.value === item.value;\n      });\n      if (idx > -1) {\n        return;\n      }\n      this.activeEntries = [item, ...this.activeEntries];\n      this.activate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n    onDeactivate(item) {\n      const idx = this.activeEntries.findIndex(d => {\n        return d.name === item.name && d.value === item.value;\n      });\n      this.activeEntries.splice(idx, 1);\n      this.activeEntries = [...this.activeEntries];\n      this.deactivate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n    deactivateAll() {\n      this.activeEntries = [...this.activeEntries];\n      for (const entry of this.activeEntries) {\n        this.deactivate.emit({\n          value: entry,\n          entries: []\n        });\n      }\n      this.activeEntries = [];\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵAreaChartNormalizedComponent_BaseFactory;\n        return function AreaChartNormalizedComponent_Factory(__ngFactoryType__) {\n          return (ɵAreaChartNormalizedComponent_BaseFactory || (ɵAreaChartNormalizedComponent_BaseFactory = i0.ɵɵgetInheritedFactory(AreaChartNormalizedComponent)))(__ngFactoryType__ || AreaChartNormalizedComponent);\n        };\n      })();\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: AreaChartNormalizedComponent,\n        selectors: [[\"ngx-charts-area-chart-normalized\"]],\n        contentQueries: function AreaChartNormalizedComponent_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n            i0.ɵɵcontentQuery(dirIndex, _c23, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.seriesTooltipTemplate = _t.first);\n          }\n        },\n        hostBindings: function AreaChartNormalizedComponent_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"mouseleave\", function AreaChartNormalizedComponent_mouseleave_HostBindingHandler() {\n              return ctx.hideCircles();\n            });\n          }\n        },\n        inputs: {\n          legend: \"legend\",\n          legendTitle: \"legendTitle\",\n          legendPosition: \"legendPosition\",\n          xAxis: \"xAxis\",\n          yAxis: \"yAxis\",\n          showXAxisLabel: \"showXAxisLabel\",\n          showYAxisLabel: \"showYAxisLabel\",\n          xAxisLabel: \"xAxisLabel\",\n          yAxisLabel: \"yAxisLabel\",\n          timeline: \"timeline\",\n          gradient: \"gradient\",\n          showGridLines: \"showGridLines\",\n          curve: \"curve\",\n          activeEntries: \"activeEntries\",\n          schemeType: \"schemeType\",\n          trimXAxisTicks: \"trimXAxisTicks\",\n          trimYAxisTicks: \"trimYAxisTicks\",\n          rotateXAxisTicks: \"rotateXAxisTicks\",\n          maxXAxisTickLength: \"maxXAxisTickLength\",\n          maxYAxisTickLength: \"maxYAxisTickLength\",\n          xAxisTickFormatting: \"xAxisTickFormatting\",\n          yAxisTickFormatting: \"yAxisTickFormatting\",\n          xAxisTicks: \"xAxisTicks\",\n          yAxisTicks: \"yAxisTicks\",\n          roundDomains: \"roundDomains\",\n          tooltipDisabled: \"tooltipDisabled\",\n          wrapTicks: \"wrapTicks\"\n        },\n        outputs: {\n          activate: \"activate\",\n          deactivate: \"deactivate\"\n        },\n        standalone: false,\n        features: [i0.ɵɵInheritDefinitionFeature],\n        decls: 11,\n        vars: 20,\n        consts: [[3, \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\"], [1, \"area-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"mouseleave\", 4, \"ngIf\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"legend\", \"scaleType\", \"onDomainChange\", 4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"dimensionsChanged\", \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\"], [\"ngx-charts-y-axis\", \"\", 3, \"dimensionsChanged\", \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\"], [\"ngx-charts-area-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"scaleType\", \"activeEntries\", \"gradient\", \"normalized\", \"curve\", \"animations\"], [3, \"mouseleave\"], [\"ngx-charts-tooltip-area\", \"\", 3, \"hover\", \"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"showPercentage\", \"tooltipDisabled\", \"tooltipTemplate\"], [4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-circle-series\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"type\", \"xScale\", \"yScale\", \"colors\", \"activeEntries\", \"data\", \"scaleType\", \"visibleValue\", \"tooltipDisabled\", \"tooltipTemplate\"], [\"ngx-charts-timeline\", \"\", 3, \"onDomainChange\", \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"legend\", \"scaleType\"], [\"ngx-charts-area-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"scaleType\", \"gradient\", \"normalized\", \"curve\", \"animations\"]],\n        template: function AreaChartNormalizedComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n            i0.ɵɵlistener(\"legendLabelClick\", function AreaChartNormalizedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n              return ctx.onClick($event);\n            })(\"legendLabelActivate\", function AreaChartNormalizedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n              return ctx.onActivate($event);\n            })(\"legendLabelDeactivate\", function AreaChartNormalizedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n              return ctx.onDeactivate($event);\n            });\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(1, \"defs\")(2, \"clipPath\");\n            i0.ɵɵelement(3, \"rect\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(4, \"g\", 1);\n            i0.ɵɵtemplate(5, AreaChartNormalizedComponent__svg_g_5_Template, 1, 11, \"g\", 2)(6, AreaChartNormalizedComponent__svg_g_6_Template, 1, 10, \"g\", 3);\n            i0.ɵɵelementStart(7, \"g\");\n            i0.ɵɵtemplate(8, AreaChartNormalizedComponent__svg_g_8_Template, 2, 10, \"g\", 4)(9, AreaChartNormalizedComponent__svg_g_9_Template, 3, 10, \"g\", 5);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(10, AreaChartNormalizedComponent__svg_g_10_Template, 2, 13, \"g\", 6);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(17, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n            i0.ɵɵadvance(2);\n            i0.ɵɵattribute(\"id\", ctx.clipPathId);\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"width\", ctx.dims.width + 10)(\"height\", ctx.dims.height + 10)(\"transform\", \"translate(-5, -5)\");\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"transform\", ctx.transform);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"clip-path\", ctx.clipPath);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngForOf\", ctx.results)(\"ngForTrackBy\", ctx.trackBy);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", !ctx.tooltipDisabled);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.timeline && ctx.scaleType != \"ordinal\");\n          }\n        },\n        dependencies: [i1.NgForOf, i1.NgIf, XAxisComponent, YAxisComponent, TooltipArea, ChartComponent, CircleSeriesComponent, Timeline, AreaSeriesComponent],\n        styles: [_c25],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return AreaChartNormalizedComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet AreaChartStackedComponent = /*#__PURE__*/(() => {\n  class AreaChartStackedComponent extends BaseChartComponent {\n    constructor() {\n      super(...arguments);\n      this.legend = false;\n      this.legendTitle = 'Legend';\n      this.legendPosition = LegendPosition.Right;\n      this.xAxis = false;\n      this.yAxis = false;\n      this.timeline = false;\n      this.showGridLines = true;\n      this.curve = curveLinear;\n      this.activeEntries = [];\n      this.trimXAxisTicks = true;\n      this.trimYAxisTicks = true;\n      this.rotateXAxisTicks = true;\n      this.maxXAxisTickLength = 16;\n      this.maxYAxisTickLength = 16;\n      this.roundDomains = false;\n      this.tooltipDisabled = false;\n      this.wrapTicks = false;\n      this.activate = new EventEmitter();\n      this.deactivate = new EventEmitter();\n      this.margin = [10, 20, 10, 20];\n      this.xAxisHeight = 0;\n      this.yAxisWidth = 0;\n      this.timelineHeight = 50;\n      this.timelinePadding = 10;\n      this.seriesType = SeriesType;\n    }\n    update() {\n      super.update();\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin,\n        showXAxis: this.xAxis,\n        showYAxis: this.yAxis,\n        xAxisHeight: this.xAxisHeight,\n        yAxisWidth: this.yAxisWidth,\n        showXLabel: this.showXAxisLabel,\n        showYLabel: this.showYAxisLabel,\n        showLegend: this.legend,\n        legendType: this.schemeType,\n        legendPosition: this.legendPosition\n      });\n      if (this.timeline) {\n        this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n      }\n      this.xDomain = this.getXDomain();\n      if (this.filteredDomain) {\n        this.xDomain = this.filteredDomain;\n      }\n      this.yDomain = this.getYDomain();\n      this.seriesDomain = this.getSeriesDomain();\n      this.xScale = this.getXScale(this.xDomain, this.dims.width);\n      this.yScale = this.getYScale(this.yDomain, this.dims.height);\n      for (let i = 0; i < this.xSet.length; i++) {\n        const val = this.xSet[i];\n        let d0 = 0;\n        for (const group of this.results) {\n          let d = group.series.find(item => {\n            let a = item.name;\n            let b = val;\n            if (this.scaleType === ScaleType.Time) {\n              a = a.valueOf();\n              b = b.valueOf();\n            }\n            return a === b;\n          });\n          if (d) {\n            d.d0 = d0;\n            d.d1 = d0 + d.value;\n            d0 += d.value;\n          } else {\n            d = {\n              name: val,\n              value: 0,\n              d0,\n              d1: d0\n            };\n            group.series.push(d);\n          }\n        }\n      }\n      this.updateTimeline();\n      this.setColors();\n      this.legendOptions = this.getLegendOptions();\n      this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n      this.clipPathId = 'clip' + id().toString();\n      this.clipPath = `url(#${this.clipPathId})`;\n    }\n    updateTimeline() {\n      if (this.timeline) {\n        this.timelineWidth = this.dims.width;\n        this.timelineXDomain = this.getXDomain();\n        this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n        this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n        this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n      }\n    }\n    getXDomain() {\n      let values = getUniqueXDomainValues(this.results);\n      this.scaleType = getScaleType(values);\n      let domain = [];\n      if (this.scaleType === ScaleType.Linear) {\n        values = values.map(v => Number(v));\n      }\n      let min;\n      let max;\n      if (this.scaleType === ScaleType.Time || this.scaleType === ScaleType.Linear) {\n        min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\n        max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\n      }\n      if (this.scaleType === ScaleType.Time) {\n        domain = [new Date(min), new Date(max)];\n        this.xSet = [...values].sort((a, b) => {\n          const aDate = a.getTime();\n          const bDate = b.getTime();\n          if (aDate > bDate) return 1;\n          if (bDate > aDate) return -1;\n          return 0;\n        });\n      } else if (this.scaleType === ScaleType.Linear) {\n        domain = [min, max];\n        // Use compare function to sort numbers numerically\n        this.xSet = [...values].sort((a, b) => a - b);\n      } else {\n        domain = values;\n        this.xSet = values;\n      }\n      return domain;\n    }\n    getYDomain() {\n      const domain = [];\n      for (let i = 0; i < this.xSet.length; i++) {\n        const val = this.xSet[i];\n        let sum = 0;\n        for (const group of this.results) {\n          const d = group.series.find(item => {\n            let a = item.name;\n            let b = val;\n            if (this.scaleType === ScaleType.Time) {\n              a = a.valueOf();\n              b = b.valueOf();\n            }\n            return a === b;\n          });\n          if (d) {\n            sum += d.value;\n          }\n        }\n        domain.push(sum);\n      }\n      const min = this.yScaleMin ? this.yScaleMin : Math.min(0, ...domain);\n      const max = this.yScaleMax ? this.yScaleMax : Math.max(...domain);\n      return [min, max];\n    }\n    getSeriesDomain() {\n      return this.results.map(d => d.name);\n    }\n    getXScale(domain, width) {\n      let scale;\n      if (this.scaleType === ScaleType.Time) {\n        scale = scaleTime();\n      } else if (this.scaleType === ScaleType.Linear) {\n        scale = scaleLinear();\n      } else if (this.scaleType === ScaleType.Ordinal) {\n        scale = scalePoint().padding(0.1);\n      }\n      scale.range([0, width]).domain(domain);\n      return this.roundDomains ? scale.nice() : scale;\n    }\n    getYScale(domain, height) {\n      const scale = scaleLinear().range([height, 0]).domain(domain);\n      return this.roundDomains ? scale.nice() : scale;\n    }\n    updateDomain(domain) {\n      this.filteredDomain = domain;\n      this.xDomain = this.filteredDomain;\n      this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    }\n    updateHoveredVertical(item) {\n      this.hoveredVertical = item.value;\n      this.deactivateAll();\n    }\n    hideCircles() {\n      this.hoveredVertical = null;\n      this.deactivateAll();\n    }\n    onClick(data, series) {\n      if (series) {\n        data.series = series.name;\n      }\n      this.select.emit(data);\n    }\n    trackBy(index, item) {\n      return `${item.name}`;\n    }\n    setColors() {\n      let domain;\n      if (this.schemeType === ScaleType.Ordinal) {\n        domain = this.seriesDomain;\n      } else {\n        domain = this.yDomain;\n      }\n      this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n      const opts = {\n        scaleType: this.schemeType,\n        colors: undefined,\n        domain: [],\n        title: undefined,\n        position: this.legendPosition\n      };\n      if (opts.scaleType === ScaleType.Ordinal) {\n        opts.domain = this.seriesDomain;\n        opts.colors = this.colors;\n        opts.title = this.legendTitle;\n      } else {\n        opts.domain = this.yDomain;\n        opts.colors = this.colors.scale;\n      }\n      return opts;\n    }\n    updateYAxisWidth({\n      width\n    }) {\n      this.yAxisWidth = width;\n      this.update();\n    }\n    updateXAxisHeight({\n      height\n    }) {\n      this.xAxisHeight = height;\n      this.update();\n    }\n    onActivate(item) {\n      const idx = this.activeEntries.findIndex(d => {\n        return d.name === item.name && d.value === item.value;\n      });\n      if (idx > -1) {\n        return;\n      }\n      this.activeEntries = [item, ...this.activeEntries];\n      this.activate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n    onDeactivate(item) {\n      const idx = this.activeEntries.findIndex(d => {\n        return d.name === item.name && d.value === item.value;\n      });\n      this.activeEntries.splice(idx, 1);\n      this.activeEntries = [...this.activeEntries];\n      this.deactivate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n    deactivateAll() {\n      this.activeEntries = [...this.activeEntries];\n      for (const entry of this.activeEntries) {\n        this.deactivate.emit({\n          value: entry,\n          entries: []\n        });\n      }\n      this.activeEntries = [];\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵAreaChartStackedComponent_BaseFactory;\n        return function AreaChartStackedComponent_Factory(__ngFactoryType__) {\n          return (ɵAreaChartStackedComponent_BaseFactory || (ɵAreaChartStackedComponent_BaseFactory = i0.ɵɵgetInheritedFactory(AreaChartStackedComponent)))(__ngFactoryType__ || AreaChartStackedComponent);\n        };\n      })();\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: AreaChartStackedComponent,\n        selectors: [[\"ngx-charts-area-chart-stacked\"]],\n        contentQueries: function AreaChartStackedComponent_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n            i0.ɵɵcontentQuery(dirIndex, _c23, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.seriesTooltipTemplate = _t.first);\n          }\n        },\n        hostBindings: function AreaChartStackedComponent_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"mouseleave\", function AreaChartStackedComponent_mouseleave_HostBindingHandler() {\n              return ctx.hideCircles();\n            });\n          }\n        },\n        inputs: {\n          legend: \"legend\",\n          legendTitle: \"legendTitle\",\n          legendPosition: \"legendPosition\",\n          xAxis: \"xAxis\",\n          yAxis: \"yAxis\",\n          showXAxisLabel: \"showXAxisLabel\",\n          showYAxisLabel: \"showYAxisLabel\",\n          xAxisLabel: \"xAxisLabel\",\n          yAxisLabel: \"yAxisLabel\",\n          timeline: \"timeline\",\n          gradient: \"gradient\",\n          showGridLines: \"showGridLines\",\n          curve: \"curve\",\n          activeEntries: \"activeEntries\",\n          schemeType: \"schemeType\",\n          trimXAxisTicks: \"trimXAxisTicks\",\n          trimYAxisTicks: \"trimYAxisTicks\",\n          rotateXAxisTicks: \"rotateXAxisTicks\",\n          maxXAxisTickLength: \"maxXAxisTickLength\",\n          maxYAxisTickLength: \"maxYAxisTickLength\",\n          xAxisTickFormatting: \"xAxisTickFormatting\",\n          yAxisTickFormatting: \"yAxisTickFormatting\",\n          xAxisTicks: \"xAxisTicks\",\n          yAxisTicks: \"yAxisTicks\",\n          roundDomains: \"roundDomains\",\n          tooltipDisabled: \"tooltipDisabled\",\n          xScaleMin: \"xScaleMin\",\n          xScaleMax: \"xScaleMax\",\n          yScaleMin: \"yScaleMin\",\n          yScaleMax: \"yScaleMax\",\n          wrapTicks: \"wrapTicks\"\n        },\n        outputs: {\n          activate: \"activate\",\n          deactivate: \"deactivate\"\n        },\n        standalone: false,\n        features: [i0.ɵɵInheritDefinitionFeature],\n        decls: 11,\n        vars: 20,\n        consts: [[3, \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\"], [1, \"area-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"mouseleave\", 4, \"ngIf\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"legend\", \"scaleType\", \"onDomainChange\", 4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"dimensionsChanged\", \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\"], [\"ngx-charts-y-axis\", \"\", 3, \"dimensionsChanged\", \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\"], [\"ngx-charts-area-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"scaleType\", \"gradient\", \"activeEntries\", \"stacked\", \"curve\", \"animations\"], [3, \"mouseleave\"], [\"ngx-charts-tooltip-area\", \"\", 3, \"hover\", \"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"tooltipDisabled\", \"tooltipTemplate\"], [\"ngx-charts-circle-series\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"type\", \"xScale\", \"yScale\", \"colors\", \"activeEntries\", \"data\", \"scaleType\", \"visibleValue\", \"tooltipDisabled\", \"tooltipTemplate\"], [\"ngx-charts-timeline\", \"\", 3, \"onDomainChange\", \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"legend\", \"scaleType\"], [\"ngx-charts-area-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"scaleType\", \"gradient\", \"stacked\", \"curve\", \"animations\"]],\n        template: function AreaChartStackedComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n            i0.ɵɵlistener(\"legendLabelClick\", function AreaChartStackedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n              return ctx.onClick($event);\n            })(\"legendLabelActivate\", function AreaChartStackedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n              return ctx.onActivate($event);\n            })(\"legendLabelDeactivate\", function AreaChartStackedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n              return ctx.onDeactivate($event);\n            });\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(1, \"defs\")(2, \"clipPath\");\n            i0.ɵɵelement(3, \"rect\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(4, \"g\", 1);\n            i0.ɵɵtemplate(5, AreaChartStackedComponent__svg_g_5_Template, 1, 11, \"g\", 2)(6, AreaChartStackedComponent__svg_g_6_Template, 1, 10, \"g\", 3);\n            i0.ɵɵelementStart(7, \"g\");\n            i0.ɵɵtemplate(8, AreaChartStackedComponent__svg_g_8_Template, 2, 10, \"g\", 4)(9, AreaChartStackedComponent__svg_g_9_Template, 3, 10, \"g\", 5);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(10, AreaChartStackedComponent__svg_g_10_Template, 2, 13, \"g\", 6);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(17, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n            i0.ɵɵadvance(2);\n            i0.ɵɵattribute(\"id\", ctx.clipPathId);\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"width\", ctx.dims.width + 10)(\"height\", ctx.dims.height + 10)(\"transform\", \"translate(-5, -5)\");\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"transform\", ctx.transform);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"clip-path\", ctx.clipPath);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngForOf\", ctx.results)(\"ngForTrackBy\", ctx.trackBy);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", !ctx.tooltipDisabled);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.timeline && ctx.scaleType != \"ordinal\");\n          }\n        },\n        dependencies: [i1.NgForOf, i1.NgIf, XAxisComponent, YAxisComponent, TooltipArea, ChartComponent, CircleSeriesComponent, Timeline, AreaSeriesComponent],\n        styles: [_c25],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return AreaChartStackedComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet AreaChartModule = /*#__PURE__*/(() => {\n  class AreaChartModule {\n    static {\n      this.ɵfac = function AreaChartModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || AreaChartModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: AreaChartModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [ChartCommonModule]\n      });\n    }\n  }\n  return AreaChartModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet BarComponent = /*#__PURE__*/(() => {\n  class BarComponent {\n    constructor(element) {\n      this.roundEdges = true;\n      this.gradient = false;\n      this.offset = 0;\n      this.isActive = false;\n      this.animations = true;\n      this.noBarWhenZero = true;\n      this.select = new EventEmitter();\n      this.activate = new EventEmitter();\n      this.deactivate = new EventEmitter();\n      this.hasGradient = false;\n      this.hideBar = false;\n      this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n      if (changes.roundEdges) {\n        this.loadAnimation();\n      }\n      this.update();\n    }\n    update() {\n      this.gradientId = 'grad' + id().toString();\n      this.gradientFill = `url(#${this.gradientId})`;\n      if (this.gradient || this.stops) {\n        this.gradientStops = this.getGradient();\n        this.hasGradient = true;\n      } else {\n        this.hasGradient = false;\n      }\n      this.updatePathEl();\n      this.checkToHideBar();\n    }\n    loadAnimation() {\n      this.path = this.getStartingPath();\n      setTimeout(this.update.bind(this), 100);\n    }\n    updatePathEl() {\n      const node = select(this.element).select('.bar');\n      const path = this.getPath();\n      if (this.animations) {\n        node.transition().duration(500).attr('d', path);\n      } else {\n        node.attr('d', path);\n      }\n    }\n    getGradient() {\n      if (this.stops) {\n        return this.stops;\n      }\n      return [{\n        offset: 0,\n        color: this.fill,\n        opacity: this.getStartOpacity()\n      }, {\n        offset: 100,\n        color: this.fill,\n        opacity: 1\n      }];\n    }\n    getStartingPath() {\n      if (!this.animations) {\n        return this.getPath();\n      }\n      let radius = this.getRadius();\n      let path;\n      if (this.roundEdges) {\n        if (this.orientation === BarOrientation.Vertical) {\n          radius = Math.min(this.height, radius);\n          path = roundedRect(this.x, this.y + this.height, this.width, 1, 0, this.edges);\n        } else if (this.orientation === BarOrientation.Horizontal) {\n          radius = Math.min(this.width, radius);\n          path = roundedRect(this.x, this.y, 1, this.height, 0, this.edges);\n        }\n      } else {\n        if (this.orientation === BarOrientation.Vertical) {\n          path = roundedRect(this.x, this.y + this.height, this.width, 1, 0, this.edges);\n        } else if (this.orientation === BarOrientation.Horizontal) {\n          path = roundedRect(this.x, this.y, 1, this.height, 0, this.edges);\n        }\n      }\n      return path;\n    }\n    getPath() {\n      let radius = this.getRadius();\n      let path;\n      if (this.roundEdges) {\n        if (this.orientation === BarOrientation.Vertical) {\n          radius = Math.min(this.height, radius);\n          path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n        } else if (this.orientation === BarOrientation.Horizontal) {\n          radius = Math.min(this.width, radius);\n          path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n        }\n      } else {\n        path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n      }\n      return path;\n    }\n    getRadius() {\n      let radius = 0;\n      if (this.roundEdges && this.height > 5 && this.width > 5) {\n        radius = Math.floor(Math.min(5, this.height / 2, this.width / 2));\n      }\n      return radius;\n    }\n    getStartOpacity() {\n      if (this.roundEdges) {\n        return 0.2;\n      } else {\n        return 0.5;\n      }\n    }\n    get edges() {\n      let edges = [false, false, false, false];\n      if (this.roundEdges) {\n        if (this.orientation === BarOrientation.Vertical) {\n          if (this.data.value > 0) {\n            edges = [true, true, false, false];\n          } else {\n            edges = [false, false, true, true];\n          }\n        } else if (this.orientation === BarOrientation.Horizontal) {\n          if (this.data.value > 0) {\n            edges = [false, true, false, true];\n          } else {\n            edges = [true, false, true, false];\n          }\n        }\n      }\n      return edges;\n    }\n    onMouseEnter() {\n      this.activate.emit(this.data);\n    }\n    onMouseLeave() {\n      this.deactivate.emit(this.data);\n    }\n    checkToHideBar() {\n      this.hideBar = this.noBarWhenZero && (this.orientation === BarOrientation.Vertical && this.height === 0 || this.orientation === BarOrientation.Horizontal && this.width === 0);\n    }\n    static {\n      this.ɵfac = function BarComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || BarComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: BarComponent,\n        selectors: [[\"g\", \"ngx-charts-bar\", \"\"]],\n        hostBindings: function BarComponent_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"mouseenter\", function BarComponent_mouseenter_HostBindingHandler() {\n              return ctx.onMouseEnter();\n            })(\"mouseleave\", function BarComponent_mouseleave_HostBindingHandler() {\n              return ctx.onMouseLeave();\n            });\n          }\n        },\n        inputs: {\n          fill: \"fill\",\n          data: \"data\",\n          width: \"width\",\n          height: \"height\",\n          x: \"x\",\n          y: \"y\",\n          orientation: \"orientation\",\n          roundEdges: \"roundEdges\",\n          gradient: \"gradient\",\n          offset: \"offset\",\n          isActive: \"isActive\",\n          stops: \"stops\",\n          animations: \"animations\",\n          ariaLabel: \"ariaLabel\",\n          noBarWhenZero: \"noBarWhenZero\"\n        },\n        outputs: {\n          select: \"select\",\n          activate: \"activate\",\n          deactivate: \"deactivate\"\n        },\n        standalone: false,\n        features: [i0.ɵɵNgOnChangesFeature],\n        attrs: _c26,\n        decls: 2,\n        vars: 8,\n        consts: [[4, \"ngIf\"], [\"stroke\", \"none\", \"role\", \"img\", \"tabIndex\", \"-1\", 1, \"bar\", 3, \"click\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"]],\n        template: function BarComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵtemplate(0, BarComponent__svg_defs_0_Template, 2, 3, \"defs\", 0);\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(1, \"path\", 1);\n            i0.ɵɵlistener(\"click\", function BarComponent_Template_path_click_1_listener() {\n              return ctx.select.emit(ctx.data);\n            });\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"ngIf\", ctx.hasGradient);\n            i0.ɵɵadvance();\n            i0.ɵɵclassProp(\"active\", ctx.isActive)(\"hidden\", ctx.hideBar);\n            i0.ɵɵattribute(\"d\", ctx.path)(\"aria-label\", ctx.ariaLabel)(\"fill\", ctx.hasGradient ? ctx.gradientFill : ctx.fill);\n          }\n        },\n        dependencies: [i1.NgIf, SvgLinearGradientComponent],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return BarComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nvar BarChartType = /*#__PURE__*/function (BarChartType) {\n  BarChartType[\"Standard\"] = \"standard\";\n  BarChartType[\"Normalized\"] = \"normalized\";\n  BarChartType[\"Stacked\"] = \"stacked\";\n  return BarChartType;\n}(BarChartType || {});\nvar D0Types = /*#__PURE__*/function (D0Types) {\n  D0Types[\"positive\"] = \"positive\";\n  D0Types[\"negative\"] = \"negative\";\n  return D0Types;\n}(D0Types || {});\nlet BarLabelComponent = /*#__PURE__*/(() => {\n  class BarLabelComponent {\n    constructor(element) {\n      this.dimensionsChanged = new EventEmitter();\n      this.horizontalPadding = 2;\n      this.verticalPadding = 5;\n      this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n      this.update();\n    }\n    getSize() {\n      const h = this.element.getBoundingClientRect().height;\n      const w = this.element.getBoundingClientRect().width;\n      return {\n        height: h,\n        width: w,\n        negative: this.value < 0\n      };\n    }\n    ngAfterViewInit() {\n      this.dimensionsChanged.emit(this.getSize());\n    }\n    update() {\n      if (this.valueFormatting) {\n        this.formatedValue = this.valueFormatting(this.value);\n      } else {\n        this.formatedValue = formatLabel(this.value);\n      }\n      if (this.orientation === 'horizontal') {\n        this.x = this.barX + this.barWidth;\n        // if the value is negative then it's on the left of the x0.\n        // we need to put the data label in front of the bar\n        if (this.value < 0) {\n          this.x = this.x - this.horizontalPadding;\n          this.textAnchor = 'end';\n        } else {\n          this.x = this.x + this.horizontalPadding;\n          this.textAnchor = 'start';\n        }\n        this.y = this.barY + this.barHeight / 2;\n      } else {\n        // orientation must be \"vertical\"\n        this.x = this.barX + this.barWidth / 2;\n        this.y = this.barY + this.barHeight;\n        if (this.value < 0) {\n          this.y = this.y + this.verticalPadding;\n          this.textAnchor = 'end';\n        } else {\n          this.y = this.y - this.verticalPadding;\n          this.textAnchor = 'start';\n        }\n        this.transform = `rotate(-45, ${this.x} , ${this.y})`;\n      }\n    }\n    static {\n      this.ɵfac = function BarLabelComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || BarLabelComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: BarLabelComponent,\n        selectors: [[\"g\", \"ngx-charts-bar-label\", \"\"]],\n        inputs: {\n          value: \"value\",\n          valueFormatting: \"valueFormatting\",\n          barX: \"barX\",\n          barY: \"barY\",\n          barWidth: \"barWidth\",\n          barHeight: \"barHeight\",\n          orientation: \"orientation\"\n        },\n        outputs: {\n          dimensionsChanged: \"dimensionsChanged\"\n        },\n        standalone: false,\n        features: [i0.ɵɵNgOnChangesFeature],\n        attrs: _c27,\n        decls: 2,\n        vars: 5,\n        consts: [[\"alignment-baseline\", \"middle\", 1, \"textDataLabel\"]],\n        template: function BarLabelComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(0, \"text\", 0);\n            i0.ɵɵtext(1);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵattribute(\"text-anchor\", ctx.textAnchor)(\"transform\", ctx.transform)(\"x\", ctx.x)(\"y\", ctx.y);\n            i0.ɵɵadvance();\n            i0.ɵɵtextInterpolate1(\" \", ctx.formatedValue, \" \");\n          }\n        },\n        styles: [\".textDataLabel[_ngcontent-%COMP%]{font-size:11px}\"],\n        changeDetection: 0\n      });\n    }\n  }\n  return BarLabelComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet SeriesHorizontal = /*#__PURE__*/(() => {\n  class SeriesHorizontal {\n    constructor() {\n      this.type = BarChartType.Standard;\n      this.tooltipDisabled = false;\n      this.animations = true;\n      this.showDataLabel = false;\n      this.noBarWhenZero = true;\n      this.select = new EventEmitter();\n      this.activate = new EventEmitter();\n      this.deactivate = new EventEmitter();\n      this.dataLabelWidthChanged = new EventEmitter();\n      this.barsForDataLabels = [];\n      this.barOrientation = BarOrientation;\n    }\n    ngOnChanges(changes) {\n      this.update();\n    }\n    update() {\n      this.updateTooltipSettings();\n      const d0 = {\n        [D0Types.positive]: 0,\n        [D0Types.negative]: 0\n      };\n      let d0Type;\n      d0Type = D0Types.positive;\n      let total;\n      if (this.type === BarChartType.Normalized) {\n        total = this.series.map(d => d.value).reduce((sum, d) => sum + d, 0);\n      }\n      const xScaleMin = Math.max(this.xScale.domain()[0], 0);\n      this.bars = this.series.map(d => {\n        let value = d.value;\n        const label = this.getLabel(d);\n        const formattedLabel = formatLabel(label);\n        const roundEdges = this.roundEdges;\n        d0Type = value > 0 ? D0Types.positive : D0Types.negative;\n        const bar = {\n          value,\n          label,\n          roundEdges,\n          data: d,\n          formattedLabel\n        };\n        bar.height = this.yScale.bandwidth();\n        if (this.type === BarChartType.Standard) {\n          bar.width = Math.abs(this.xScale(value) - this.xScale(xScaleMin));\n          if (value < 0) {\n            bar.x = this.xScale(value);\n          } else {\n            bar.x = this.xScale(xScaleMin);\n          }\n          bar.y = this.yScale(label);\n        } else if (this.type === BarChartType.Stacked) {\n          const offset0 = d0[d0Type];\n          const offset1 = offset0 + value;\n          d0[d0Type] += value;\n          bar.width = this.xScale(offset1) - this.xScale(offset0);\n          bar.x = this.xScale(offset0);\n          bar.y = 0;\n          bar.offset0 = offset0;\n          bar.offset1 = offset1;\n        } else if (this.type === BarChartType.Normalized) {\n          let offset0 = d0[d0Type];\n          let offset1 = offset0 + value;\n          d0[d0Type] += value;\n          if (total > 0) {\n            offset0 = offset0 * 100 / total;\n            offset1 = offset1 * 100 / total;\n          } else {\n            offset0 = 0;\n            offset1 = 0;\n          }\n          bar.width = this.xScale(offset1) - this.xScale(offset0);\n          bar.x = this.xScale(offset0);\n          bar.y = 0;\n          bar.offset0 = offset0;\n          bar.offset1 = offset1;\n          value = (offset1 - offset0).toFixed(2) + '%';\n        }\n        if (this.colors.scaleType === ScaleType.Ordinal) {\n          bar.color = this.colors.getColor(label);\n        } else {\n          if (this.type === BarChartType.Standard) {\n            bar.color = this.colors.getColor(value);\n            bar.gradientStops = this.colors.getLinearGradientStops(value);\n          } else {\n            bar.color = this.colors.getColor(bar.offset1);\n            bar.gradientStops = this.colors.getLinearGradientStops(bar.offset1, bar.offset0);\n          }\n        }\n        let tooltipLabel = formattedLabel;\n        bar.ariaLabel = formattedLabel + ' ' + value.toLocaleString();\n        if (this.seriesName !== null && this.seriesName !== undefined) {\n          tooltipLabel = `${this.seriesName} • ${formattedLabel}`;\n          bar.data.series = this.seriesName;\n          bar.ariaLabel = this.seriesName + ' ' + bar.ariaLabel;\n        }\n        bar.tooltipText = this.tooltipDisabled ? undefined : `\n        <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\n        <span class=\"tooltip-val\">${this.dataLabelFormatting ? this.dataLabelFormatting(value) : value.toLocaleString()}</span>\n      `;\n        return bar;\n      });\n      this.updateDataLabels();\n    }\n    updateDataLabels() {\n      if (this.type === BarChartType.Stacked) {\n        this.barsForDataLabels = [];\n        const section = {};\n        section.series = this.seriesName;\n        const totalPositive = this.series.map(d => d.value).reduce((sum, d) => d > 0 ? sum + d : sum, 0);\n        const totalNegative = this.series.map(d => d.value).reduce((sum, d) => d < 0 ? sum + d : sum, 0);\n        section.total = totalPositive + totalNegative;\n        section.x = 0;\n        section.y = 0;\n        // if total is positive then we show it on the right, otherwise on the left\n        if (section.total > 0) {\n          section.width = this.xScale(totalPositive);\n        } else {\n          section.width = this.xScale(totalNegative);\n        }\n        section.height = this.yScale.bandwidth();\n        this.barsForDataLabels.push(section);\n      } else {\n        this.barsForDataLabels = this.series.map(d => {\n          const section = {};\n          section.series = this.seriesName ?? d.label;\n          section.total = d.value;\n          section.x = this.xScale(0);\n          section.y = this.yScale(d.label);\n          section.width = this.xScale(section.total) - this.xScale(0);\n          section.height = this.yScale.bandwidth();\n          return section;\n        });\n      }\n    }\n    updateTooltipSettings() {\n      this.tooltipPlacement = this.tooltipDisabled ? undefined : PlacementTypes.Top;\n      this.tooltipType = this.tooltipDisabled ? undefined : StyleTypes.tooltip;\n    }\n    isActive(entry) {\n      if (!this.activeEntries) return false;\n      const item = this.activeEntries.find(active => {\n        return entry.name === active.name && entry.value === active.value;\n      });\n      return item !== undefined;\n    }\n    getLabel(dataItem) {\n      if (dataItem.label) {\n        return dataItem.label;\n      }\n      return dataItem.name;\n    }\n    trackBy(index, bar) {\n      return bar.label;\n    }\n    trackDataLabelBy(index, barLabel) {\n      return index + '#' + barLabel.series + '#' + barLabel.total;\n    }\n    click(data) {\n      this.select.emit(data);\n    }\n    static {\n      this.ɵfac = function SeriesHorizontal_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || SeriesHorizontal)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: SeriesHorizontal,\n        selectors: [[\"g\", \"ngx-charts-series-horizontal\", \"\"]],\n        inputs: {\n          dims: \"dims\",\n          type: \"type\",\n          series: \"series\",\n          xScale: \"xScale\",\n          yScale: \"yScale\",\n          colors: \"colors\",\n          tooltipDisabled: \"tooltipDisabled\",\n          gradient: \"gradient\",\n          activeEntries: \"activeEntries\",\n          seriesName: \"seriesName\",\n          tooltipTemplate: \"tooltipTemplate\",\n          roundEdges: \"roundEdges\",\n          animations: \"animations\",\n          showDataLabel: \"showDataLabel\",\n          dataLabelFormatting: \"dataLabelFormatting\",\n          noBarWhenZero: \"noBarWhenZero\"\n        },\n        outputs: {\n          select: \"select\",\n          activate: \"activate\",\n          deactivate: \"deactivate\",\n          dataLabelWidthChanged: \"dataLabelWidthChanged\"\n        },\n        standalone: false,\n        features: [i0.ɵɵNgOnChangesFeature],\n        attrs: _c28,\n        decls: 2,\n        vars: 3,\n        consts: [[\"ngx-charts-bar\", \"\", \"ngx-tooltip\", \"\", 3, \"width\", \"height\", \"x\", \"y\", \"fill\", \"stops\", \"data\", \"orientation\", \"roundEdges\", \"gradient\", \"isActive\", \"ariaLabel\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [4, \"ngIf\"], [\"ngx-charts-bar\", \"\", \"ngx-tooltip\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"width\", \"height\", \"x\", \"y\", \"fill\", \"stops\", \"data\", \"orientation\", \"roundEdges\", \"gradient\", \"isActive\", \"ariaLabel\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"noBarWhenZero\"], [\"ngx-charts-bar-label\", \"\", 3, \"barX\", \"barY\", \"barWidth\", \"barHeight\", \"value\", \"valueFormatting\", \"orientation\", \"dimensionsChanged\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-bar-label\", \"\", 3, \"dimensionsChanged\", \"barX\", \"barY\", \"barWidth\", \"barHeight\", \"value\", \"valueFormatting\", \"orientation\"]],\n        template: function SeriesHorizontal_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵtemplate(0, SeriesHorizontal__svg_g_0_Template, 1, 21, \"g\", 0)(1, SeriesHorizontal__svg_g_1_Template, 2, 2, \"g\", 1);\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"ngForOf\", ctx.bars)(\"ngForTrackBy\", ctx.trackBy);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.showDataLabel);\n          }\n        },\n        dependencies: [i1.NgForOf, i1.NgIf, TooltipDirective, BarComponent, BarLabelComponent],\n        encapsulation: 2,\n        data: {\n          animation: [trigger('animationState', [transition(':leave', [style({\n            opacity: 1\n          }), animate(500, style({\n            opacity: 0\n          }))])])]\n        },\n        changeDetection: 0\n      });\n    }\n  }\n  return SeriesHorizontal;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet BarHorizontalComponent = /*#__PURE__*/(() => {\n  class BarHorizontalComponent extends BaseChartComponent {\n    constructor() {\n      super(...arguments);\n      this.legend = false;\n      this.legendTitle = 'Legend';\n      this.legendPosition = LegendPosition.Right;\n      this.tooltipDisabled = false;\n      this.showGridLines = true;\n      this.activeEntries = [];\n      this.trimXAxisTicks = true;\n      this.trimYAxisTicks = true;\n      this.rotateXAxisTicks = true;\n      this.maxXAxisTickLength = 16;\n      this.maxYAxisTickLength = 16;\n      this.barPadding = 8;\n      this.roundDomains = false;\n      this.roundEdges = true;\n      this.showDataLabel = false;\n      this.noBarWhenZero = true;\n      this.wrapTicks = false;\n      this.activate = new EventEmitter();\n      this.deactivate = new EventEmitter();\n      this.margin = [10, 20, 10, 20];\n      this.xAxisHeight = 0;\n      this.yAxisWidth = 0;\n      this.dataLabelMaxWidth = {\n        negative: 0,\n        positive: 0\n      };\n    }\n    update() {\n      super.update();\n      if (!this.showDataLabel) {\n        this.dataLabelMaxWidth = {\n          negative: 0,\n          positive: 0\n        };\n      }\n      this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin,\n        showXAxis: this.xAxis,\n        showYAxis: this.yAxis,\n        xAxisHeight: this.xAxisHeight,\n        yAxisWidth: this.yAxisWidth,\n        showXLabel: this.showXAxisLabel,\n        showYLabel: this.showYAxisLabel,\n        showLegend: this.legend,\n        legendType: this.schemeType,\n        legendPosition: this.legendPosition\n      });\n      this.formatDates();\n      this.xScale = this.getXScale();\n      this.yScale = this.getYScale();\n      this.setColors();\n      this.legendOptions = this.getLegendOptions();\n      this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getXScale() {\n      this.xDomain = this.getXDomain();\n      const scale = scaleLinear().range([0, this.dims.width]).domain(this.xDomain);\n      return this.roundDomains ? scale.nice() : scale;\n    }\n    getYScale() {\n      this.yDomain = this.getYDomain();\n      const spacing = this.yDomain.length / (this.dims.height / this.barPadding + 1);\n      return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).domain(this.yDomain);\n    }\n    getXDomain() {\n      const values = this.results.map(d => d.value);\n      const min = this.xScaleMin ? Math.min(this.xScaleMin, ...values) : Math.min(0, ...values);\n      const max = this.xScaleMax ? Math.max(this.xScaleMax, ...values) : Math.max(0, ...values);\n      return [min, max];\n    }\n    getYDomain() {\n      return this.results.map(d => d.label);\n    }\n    onClick(data) {\n      this.select.emit(data);\n    }\n    setColors() {\n      let domain;\n      if (this.schemeType === ScaleType.Ordinal) {\n        domain = this.yDomain;\n      } else {\n        domain = this.xDomain;\n      }\n      this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n      const opts = {\n        scaleType: this.schemeType,\n        colors: undefined,\n        domain: [],\n        title: undefined,\n        position: this.legendPosition\n      };\n      if (opts.scaleType === 'ordinal') {\n        opts.domain = this.yDomain;\n        opts.colors = this.colors;\n        opts.title = this.legendTitle;\n      } else {\n        opts.domain = this.xDomain;\n        opts.colors = this.colors.scale;\n      }\n      return opts;\n    }\n    updateYAxisWidth({\n      width\n    }) {\n      this.yAxisWidth = width;\n      this.update();\n    }\n    updateXAxisHeight({\n      height\n    }) {\n      this.xAxisHeight = height;\n      this.update();\n    }\n    onDataLabelMaxWidthChanged(event) {\n      if (event.size.negative) {\n        this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n      } else {\n        this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n      }\n      if (event.index === this.results.length - 1) {\n        setTimeout(() => this.update());\n      }\n    }\n    onActivate(item, fromLegend = false) {\n      item = this.results.find(d => {\n        if (fromLegend) {\n          return d.label === item.name;\n        } else {\n          return d.name === item.name;\n        }\n      });\n      const idx = this.activeEntries.findIndex(d => {\n        return d.name === item.name && d.value === item.value && d.series === item.series;\n      });\n      if (idx > -1) {\n        return;\n      }\n      this.activeEntries = [item, ...this.activeEntries];\n      this.activate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n    onDeactivate(item, fromLegend = false) {\n      item = this.results.find(d => {\n        if (fromLegend) {\n          return d.label === item.name;\n        } else {\n          return d.name === item.name;\n        }\n      });\n      const idx = this.activeEntries.findIndex(d => {\n        return d.name === item.name && d.value === item.value && d.series === item.series;\n      });\n      this.activeEntries.splice(idx, 1);\n      this.activeEntries = [...this.activeEntries];\n      this.deactivate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵBarHorizontalComponent_BaseFactory;\n        return function BarHorizontalComponent_Factory(__ngFactoryType__) {\n          return (ɵBarHorizontalComponent_BaseFactory || (ɵBarHorizontalComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarHorizontalComponent)))(__ngFactoryType__ || BarHorizontalComponent);\n        };\n      })();\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: BarHorizontalComponent,\n        selectors: [[\"ngx-charts-bar-horizontal\"]],\n        contentQueries: function BarHorizontalComponent_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n          }\n        },\n        inputs: {\n          legend: \"legend\",\n          legendTitle: \"legendTitle\",\n          legendPosition: \"legendPosition\",\n          xAxis: \"xAxis\",\n          yAxis: \"yAxis\",\n          showXAxisLabel: \"showXAxisLabel\",\n          showYAxisLabel: \"showYAxisLabel\",\n          xAxisLabel: \"xAxisLabel\",\n          yAxisLabel: \"yAxisLabel\",\n          tooltipDisabled: \"tooltipDisabled\",\n          gradient: \"gradient\",\n          showGridLines: \"showGridLines\",\n          activeEntries: \"activeEntries\",\n          schemeType: \"schemeType\",\n          trimXAxisTicks: \"trimXAxisTicks\",\n          trimYAxisTicks: \"trimYAxisTicks\",\n          rotateXAxisTicks: \"rotateXAxisTicks\",\n          maxXAxisTickLength: \"maxXAxisTickLength\",\n          maxYAxisTickLength: \"maxYAxisTickLength\",\n          xAxisTickFormatting: \"xAxisTickFormatting\",\n          yAxisTickFormatting: \"yAxisTickFormatting\",\n          xAxisTicks: \"xAxisTicks\",\n          yAxisTicks: \"yAxisTicks\",\n          barPadding: \"barPadding\",\n          roundDomains: \"roundDomains\",\n          roundEdges: \"roundEdges\",\n          xScaleMax: \"xScaleMax\",\n          xScaleMin: \"xScaleMin\",\n          showDataLabel: \"showDataLabel\",\n          dataLabelFormatting: \"dataLabelFormatting\",\n          noBarWhenZero: \"noBarWhenZero\",\n          wrapTicks: \"wrapTicks\"\n        },\n        outputs: {\n          activate: \"activate\",\n          deactivate: \"deactivate\"\n        },\n        standalone: false,\n        features: [i0.ɵɵInheritDefinitionFeature],\n        decls: 5,\n        vars: 25,\n        consts: [[3, \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"yAxisOffset\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-series-horizontal\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\", \"xScale\", \"yScale\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"activeEntries\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], [\"ngx-charts-x-axis\", \"\", 3, \"dimensionsChanged\", \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\"], [\"ngx-charts-y-axis\", \"\", 3, \"dimensionsChanged\", \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"yAxisOffset\", \"wrapTicks\"]],\n        template: function BarHorizontalComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n            i0.ɵɵlistener(\"legendLabelClick\", function BarHorizontalComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n              return ctx.onClick($event);\n            })(\"legendLabelActivate\", function BarHorizontalComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n              return ctx.onActivate($event, true);\n            })(\"legendLabelDeactivate\", function BarHorizontalComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n              return ctx.onDeactivate($event, true);\n            });\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(1, \"g\", 1);\n            i0.ɵɵtemplate(2, BarHorizontalComponent__svg_g_2_Template, 1, 11, \"g\", 2)(3, BarHorizontalComponent__svg_g_3_Template, 1, 10, \"g\", 3);\n            i0.ɵɵelementStart(4, \"g\", 4);\n            i0.ɵɵlistener(\"select\", function BarHorizontalComponent_Template_g_select_4_listener($event) {\n              return ctx.onClick($event);\n            })(\"activate\", function BarHorizontalComponent_Template_g_activate_4_listener($event) {\n              return ctx.onActivate($event);\n            })(\"deactivate\", function BarHorizontalComponent_Template_g_deactivate_4_listener($event) {\n              return ctx.onDeactivate($event);\n            })(\"dataLabelWidthChanged\", function BarHorizontalComponent_Template_g_dataLabelWidthChanged_4_listener($event) {\n              return ctx.onDataLabelMaxWidthChanged($event);\n            });\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(22, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"transform\", ctx.transform);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"xScale\", ctx.xScale)(\"yScale\", ctx.yScale)(\"colors\", ctx.colors)(\"series\", ctx.results)(\"dims\", ctx.dims)(\"gradient\", ctx.gradient)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"activeEntries\", ctx.activeEntries)(\"roundEdges\", ctx.roundEdges)(\"animations\", ctx.animations)(\"showDataLabel\", ctx.showDataLabel)(\"dataLabelFormatting\", ctx.dataLabelFormatting)(\"noBarWhenZero\", ctx.noBarWhenZero);\n          }\n        },\n        dependencies: [i1.NgIf, XAxisComponent, YAxisComponent, ChartComponent, SeriesHorizontal],\n        styles: [_c25],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return BarHorizontalComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet BarHorizontal2DComponent = /*#__PURE__*/(() => {\n  class BarHorizontal2DComponent extends BaseChartComponent {\n    constructor() {\n      super(...arguments);\n      this.legend = false;\n      this.legendTitle = 'Legend';\n      this.legendPosition = LegendPosition.Right;\n      this.tooltipDisabled = false;\n      this.showGridLines = true;\n      this.activeEntries = [];\n      this.trimXAxisTicks = true;\n      this.trimYAxisTicks = true;\n      this.rotateXAxisTicks = true;\n      this.maxXAxisTickLength = 16;\n      this.maxYAxisTickLength = 16;\n      this.groupPadding = 16;\n      this.barPadding = 8;\n      this.roundDomains = false;\n      this.roundEdges = true;\n      this.showDataLabel = false;\n      this.noBarWhenZero = true;\n      this.wrapTicks = false;\n      this.activate = new EventEmitter();\n      this.deactivate = new EventEmitter();\n      this.margin = [10, 20, 10, 20];\n      this.xAxisHeight = 0;\n      this.yAxisWidth = 0;\n      this.dataLabelMaxWidth = {\n        negative: 0,\n        positive: 0\n      };\n      this.isSSR = false;\n      this.barOrientation = BarOrientation;\n      this.trackBy = (index, item) => {\n        return item.name;\n      };\n    }\n    ngOnInit() {\n      if (isPlatformServer(this.platformId)) {\n        this.isSSR = true;\n      }\n    }\n    update() {\n      super.update();\n      if (!this.showDataLabel) {\n        this.dataLabelMaxWidth = {\n          negative: 0,\n          positive: 0\n        };\n      }\n      this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin,\n        showXAxis: this.xAxis,\n        showYAxis: this.yAxis,\n        xAxisHeight: this.xAxisHeight,\n        yAxisWidth: this.yAxisWidth,\n        showXLabel: this.showXAxisLabel,\n        showYLabel: this.showYAxisLabel,\n        showLegend: this.legend,\n        legendType: this.schemeType,\n        legendPosition: this.legendPosition\n      });\n      this.formatDates();\n      this.groupDomain = this.getGroupDomain();\n      this.innerDomain = this.getInnerDomain();\n      this.valueDomain = this.getValueDomain();\n      this.groupScale = this.getGroupScale();\n      this.innerScale = this.getInnerScale();\n      this.valueScale = this.getValueScale();\n      this.setColors();\n      this.legendOptions = this.getLegendOptions();\n      this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getGroupScale() {\n      const spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);\n      return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).paddingOuter(spacing / 2).domain(this.groupDomain);\n    }\n    getInnerScale() {\n      const height = this.groupScale.bandwidth();\n      const spacing = this.innerDomain.length / (height / this.barPadding + 1);\n      return scaleBand().rangeRound([0, height]).paddingInner(spacing).domain(this.innerDomain);\n    }\n    getValueScale() {\n      const scale = scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n      return this.roundDomains ? scale.nice() : scale;\n    }\n    getGroupDomain() {\n      const domain = [];\n      for (const group of this.results) {\n        if (!domain.includes(group.label)) {\n          domain.push(group.label);\n        }\n      }\n      return domain;\n    }\n    getInnerDomain() {\n      const domain = [];\n      for (const group of this.results) {\n        for (const d of group.series) {\n          if (!domain.includes(d.label)) {\n            domain.push(d.label);\n          }\n        }\n      }\n      return domain;\n    }\n    getValueDomain() {\n      const domain = [];\n      for (const group of this.results) {\n        for (const d of group.series) {\n          if (!domain.includes(d.value)) {\n            domain.push(d.value);\n          }\n        }\n      }\n      const min = Math.min(0, ...domain);\n      const max = this.xScaleMax ? Math.max(this.xScaleMax, ...domain) : Math.max(0, ...domain);\n      return [min, max];\n    }\n    groupTransform(group) {\n      return `translate(0, ${this.groupScale(group.label)})`;\n    }\n    onClick(data, group) {\n      if (group) {\n        data.series = group.name;\n      }\n      this.select.emit(data);\n    }\n    setColors() {\n      let domain;\n      if (this.schemeType === ScaleType.Ordinal) {\n        domain = this.innerDomain;\n      } else {\n        domain = this.valueDomain;\n      }\n      this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n      const opts = {\n        scaleType: this.schemeType,\n        colors: undefined,\n        domain: [],\n        title: undefined,\n        position: this.legendPosition\n      };\n      if (opts.scaleType === ScaleType.Ordinal) {\n        opts.domain = this.innerDomain;\n        opts.colors = this.colors;\n        opts.title = this.legendTitle;\n      } else {\n        opts.domain = this.valueDomain;\n        opts.colors = this.colors.scale;\n      }\n      return opts;\n    }\n    updateYAxisWidth({\n      width\n    }) {\n      this.yAxisWidth = width;\n      this.update();\n    }\n    updateXAxisHeight({\n      height\n    }) {\n      this.xAxisHeight = height;\n      this.update();\n    }\n    onDataLabelMaxWidthChanged(event, groupIndex) {\n      if (event.size.negative) {\n        this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n      } else {\n        this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n      }\n      if (groupIndex === this.results.length - 1) {\n        setTimeout(() => this.update());\n      }\n    }\n    onActivate(event, group, fromLegend = false) {\n      const item = Object.assign({}, event);\n      if (group) {\n        item.series = group.name;\n      }\n      const items = this.results.map(g => g.series).flat().filter(i => {\n        if (fromLegend) {\n          return i.label === item.name;\n        } else {\n          return i.name === item.name && i.series === item.series;\n        }\n      });\n      this.activeEntries = [...items];\n      this.activate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n      const item = Object.assign({}, event);\n      if (group) {\n        item.series = group.name;\n      }\n      this.activeEntries = this.activeEntries.filter(i => {\n        if (fromLegend) {\n          return i.label !== item.name;\n        } else {\n          return !(i.name === item.name && i.series === item.series);\n        }\n      });\n      this.deactivate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵBarHorizontal2DComponent_BaseFactory;\n        return function BarHorizontal2DComponent_Factory(__ngFactoryType__) {\n          return (ɵBarHorizontal2DComponent_BaseFactory || (ɵBarHorizontal2DComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarHorizontal2DComponent)))(__ngFactoryType__ || BarHorizontal2DComponent);\n        };\n      })();\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: BarHorizontal2DComponent,\n        selectors: [[\"ngx-charts-bar-horizontal-2d\"]],\n        contentQueries: function BarHorizontal2DComponent_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n          }\n        },\n        inputs: {\n          legend: \"legend\",\n          legendTitle: \"legendTitle\",\n          legendPosition: \"legendPosition\",\n          xAxis: \"xAxis\",\n          yAxis: \"yAxis\",\n          showXAxisLabel: \"showXAxisLabel\",\n          showYAxisLabel: \"showYAxisLabel\",\n          xAxisLabel: \"xAxisLabel\",\n          yAxisLabel: \"yAxisLabel\",\n          tooltipDisabled: \"tooltipDisabled\",\n          gradient: \"gradient\",\n          showGridLines: \"showGridLines\",\n          activeEntries: \"activeEntries\",\n          schemeType: \"schemeType\",\n          trimXAxisTicks: \"trimXAxisTicks\",\n          trimYAxisTicks: \"trimYAxisTicks\",\n          rotateXAxisTicks: \"rotateXAxisTicks\",\n          maxXAxisTickLength: \"maxXAxisTickLength\",\n          maxYAxisTickLength: \"maxYAxisTickLength\",\n          xAxisTickFormatting: \"xAxisTickFormatting\",\n          yAxisTickFormatting: \"yAxisTickFormatting\",\n          xAxisTicks: \"xAxisTicks\",\n          yAxisTicks: \"yAxisTicks\",\n          groupPadding: \"groupPadding\",\n          barPadding: \"barPadding\",\n          roundDomains: \"roundDomains\",\n          roundEdges: \"roundEdges\",\n          xScaleMax: \"xScaleMax\",\n          showDataLabel: \"showDataLabel\",\n          dataLabelFormatting: \"dataLabelFormatting\",\n          noBarWhenZero: \"noBarWhenZero\",\n          wrapTicks: \"wrapTicks\"\n        },\n        outputs: {\n          activate: \"activate\",\n          deactivate: \"deactivate\"\n        },\n        standalone: false,\n        features: [i0.ɵɵInheritDefinitionFeature],\n        decls: 7,\n        vars: 18,\n        consts: [[3, \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\", \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-grid-panel-series\", \"\", 3, \"xScale\", \"yScale\", \"data\", \"dims\", \"orient\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"yAxisOffset\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"dimensionsChanged\", \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\"], [\"ngx-charts-y-axis\", \"\", 3, \"dimensionsChanged\", \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"yAxisOffset\", \"wrapTicks\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-series-horizontal\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\", \"xScale\", \"activeEntries\", \"yScale\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"seriesName\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"]],\n        template: function BarHorizontal2DComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n            i0.ɵɵlistener(\"legendLabelActivate\", function BarHorizontal2DComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n              return ctx.onActivate($event, undefined, true);\n            })(\"legendLabelDeactivate\", function BarHorizontal2DComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n              return ctx.onDeactivate($event, undefined, true);\n            })(\"legendLabelClick\", function BarHorizontal2DComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n              return ctx.onClick($event);\n            });\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(1, \"g\", 1);\n            i0.ɵɵelement(2, \"g\", 2);\n            i0.ɵɵtemplate(3, BarHorizontal2DComponent__svg_g_3_Template, 1, 11, \"g\", 3)(4, BarHorizontal2DComponent__svg_g_4_Template, 1, 10, \"g\", 4)(5, BarHorizontal2DComponent__svg_g_5_Template, 2, 2, \"g\", 5)(6, BarHorizontal2DComponent__svg_g_6_Template, 2, 2, \"g\", 5);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(15, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"transform\", ctx.transform);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"xScale\", ctx.valueScale)(\"yScale\", ctx.groupScale)(\"data\", ctx.results)(\"dims\", ctx.dims)(\"orient\", ctx.barOrientation.Horizontal);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n          }\n        },\n        dependencies: [i1.NgForOf, i1.NgIf, XAxisComponent, YAxisComponent, ChartComponent, GridPanelSeriesComponent, SeriesHorizontal],\n        styles: [_c25],\n        encapsulation: 2,\n        data: {\n          animation: [trigger('animationState', [transition(':leave', [style({\n            opacity: 1,\n            transform: '*'\n          }), animate(500, style({\n            opacity: 0,\n            transform: 'scale(0)'\n          }))])])]\n        },\n        changeDetection: 0\n      });\n    }\n  }\n  return BarHorizontal2DComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet BarHorizontalNormalizedComponent = /*#__PURE__*/(() => {\n  class BarHorizontalNormalizedComponent extends BaseChartComponent {\n    constructor() {\n      super(...arguments);\n      this.legend = false;\n      this.legendTitle = 'Legend';\n      this.legendPosition = LegendPosition.Right;\n      this.tooltipDisabled = false;\n      this.showGridLines = true;\n      this.activeEntries = [];\n      this.trimXAxisTicks = true;\n      this.trimYAxisTicks = true;\n      this.rotateXAxisTicks = true;\n      this.maxXAxisTickLength = 16;\n      this.maxYAxisTickLength = 16;\n      this.barPadding = 8;\n      this.roundDomains = false;\n      this.noBarWhenZero = true;\n      this.wrapTicks = false;\n      this.activate = new EventEmitter();\n      this.deactivate = new EventEmitter();\n      this.valueDomain = [0, 100];\n      this.margin = [10, 20, 10, 20];\n      this.xAxisHeight = 0;\n      this.yAxisWidth = 0;\n      this.barChartType = BarChartType;\n      this.isSSR = false;\n      this.trackBy = (index, item) => {\n        return item.name;\n      };\n    }\n    ngOnInit() {\n      if (isPlatformServer(this.platformId)) {\n        this.isSSR = true;\n      }\n    }\n    update() {\n      super.update();\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin,\n        showXAxis: this.xAxis,\n        showYAxis: this.yAxis,\n        xAxisHeight: this.xAxisHeight,\n        yAxisWidth: this.yAxisWidth,\n        showXLabel: this.showXAxisLabel,\n        showYLabel: this.showYAxisLabel,\n        showLegend: this.legend,\n        legendType: this.schemeType,\n        legendPosition: this.legendPosition\n      });\n      this.formatDates();\n      this.groupDomain = this.getGroupDomain();\n      this.innerDomain = this.getInnerDomain();\n      this.xScale = this.getXScale();\n      this.yScale = this.getYScale();\n      this.setColors();\n      this.legendOptions = this.getLegendOptions();\n      this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getGroupDomain() {\n      const domain = [];\n      for (const group of this.results) {\n        if (!domain.includes(group.label)) {\n          domain.push(group.label);\n        }\n      }\n      return domain;\n    }\n    getInnerDomain() {\n      const domain = [];\n      for (const group of this.results) {\n        for (const d of group.series) {\n          if (!domain.includes(d.label)) {\n            domain.push(d.label);\n          }\n        }\n      }\n      return domain;\n    }\n    getYScale() {\n      const spacing = this.groupDomain.length / (this.dims.height / this.barPadding + 1);\n      return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).domain(this.groupDomain);\n    }\n    getXScale() {\n      const scale = scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n      return this.roundDomains ? scale.nice() : scale;\n    }\n    groupTransform(group) {\n      return `translate(0, ${this.yScale(group.name)})`;\n    }\n    onClick(data, group) {\n      if (group) {\n        data.series = group.name;\n      }\n      this.select.emit(data);\n    }\n    setColors() {\n      let domain;\n      if (this.schemeType === ScaleType.Ordinal) {\n        domain = this.innerDomain;\n      } else {\n        domain = this.valueDomain;\n      }\n      this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n      const opts = {\n        scaleType: this.schemeType,\n        colors: undefined,\n        domain: [],\n        title: undefined,\n        position: this.legendPosition\n      };\n      if (opts.scaleType === ScaleType.Ordinal) {\n        opts.domain = this.innerDomain;\n        opts.colors = this.colors;\n        opts.title = this.legendTitle;\n      } else {\n        opts.domain = this.valueDomain;\n        opts.colors = this.colors.scale;\n      }\n      return opts;\n    }\n    updateYAxisWidth({\n      width\n    }) {\n      this.yAxisWidth = width;\n      this.update();\n    }\n    updateXAxisHeight({\n      height\n    }) {\n      this.xAxisHeight = height;\n      this.update();\n    }\n    onActivate(event, group, fromLegend = false) {\n      const item = Object.assign({}, event);\n      if (group) {\n        item.series = group.name;\n      }\n      const items = this.results.map(g => g.series).flat().filter(i => {\n        if (fromLegend) {\n          return i.label === item.name;\n        } else {\n          return i.name === item.name && i.series === item.series;\n        }\n      });\n      this.activeEntries = [...items];\n      this.activate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n      const item = Object.assign({}, event);\n      if (group) {\n        item.series = group.name;\n      }\n      this.activeEntries = this.activeEntries.filter(i => {\n        if (fromLegend) {\n          return i.label !== item.name;\n        } else {\n          return !(i.name === item.name && i.series === item.series);\n        }\n      });\n      this.deactivate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵBarHorizontalNormalizedComponent_BaseFactory;\n        return function BarHorizontalNormalizedComponent_Factory(__ngFactoryType__) {\n          return (ɵBarHorizontalNormalizedComponent_BaseFactory || (ɵBarHorizontalNormalizedComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarHorizontalNormalizedComponent)))(__ngFactoryType__ || BarHorizontalNormalizedComponent);\n        };\n      })();\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: BarHorizontalNormalizedComponent,\n        selectors: [[\"ngx-charts-bar-horizontal-normalized\"]],\n        contentQueries: function BarHorizontalNormalizedComponent_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n          }\n        },\n        inputs: {\n          legend: \"legend\",\n          legendTitle: \"legendTitle\",\n          legendPosition: \"legendPosition\",\n          xAxis: \"xAxis\",\n          yAxis: \"yAxis\",\n          showXAxisLabel: \"showXAxisLabel\",\n          showYAxisLabel: \"showYAxisLabel\",\n          xAxisLabel: \"xAxisLabel\",\n          yAxisLabel: \"yAxisLabel\",\n          tooltipDisabled: \"tooltipDisabled\",\n          gradient: \"gradient\",\n          showGridLines: \"showGridLines\",\n          activeEntries: \"activeEntries\",\n          schemeType: \"schemeType\",\n          trimXAxisTicks: \"trimXAxisTicks\",\n          trimYAxisTicks: \"trimYAxisTicks\",\n          rotateXAxisTicks: \"rotateXAxisTicks\",\n          maxXAxisTickLength: \"maxXAxisTickLength\",\n          maxYAxisTickLength: \"maxYAxisTickLength\",\n          xAxisTickFormatting: \"xAxisTickFormatting\",\n          yAxisTickFormatting: \"yAxisTickFormatting\",\n          xAxisTicks: \"xAxisTicks\",\n          yAxisTicks: \"yAxisTicks\",\n          barPadding: \"barPadding\",\n          roundDomains: \"roundDomains\",\n          noBarWhenZero: \"noBarWhenZero\",\n          wrapTicks: \"wrapTicks\"\n        },\n        outputs: {\n          activate: \"activate\",\n          deactivate: \"deactivate\"\n        },\n        standalone: false,\n        features: [i0.ɵɵInheritDefinitionFeature],\n        decls: 6,\n        vars: 13,\n        consts: [[3, \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\", \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"dimensionsChanged\", \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\"], [\"ngx-charts-y-axis\", \"\", 3, \"dimensionsChanged\", \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-series-horizontal\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"type\", \"xScale\", \"yScale\", \"activeEntries\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"seriesName\", \"animations\", \"noBarWhenZero\"]],\n        template: function BarHorizontalNormalizedComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n            i0.ɵɵlistener(\"legendLabelActivate\", function BarHorizontalNormalizedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n              return ctx.onActivate($event, undefined, true);\n            })(\"legendLabelDeactivate\", function BarHorizontalNormalizedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n              return ctx.onDeactivate($event, undefined, true);\n            })(\"legendLabelClick\", function BarHorizontalNormalizedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n              return ctx.onClick($event);\n            });\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(1, \"g\", 1);\n            i0.ɵɵtemplate(2, BarHorizontalNormalizedComponent__svg_g_2_Template, 1, 11, \"g\", 2)(3, BarHorizontalNormalizedComponent__svg_g_3_Template, 1, 9, \"g\", 3)(4, BarHorizontalNormalizedComponent__svg_g_4_Template, 2, 2, \"g\", 4)(5, BarHorizontalNormalizedComponent__svg_g_5_Template, 2, 2, \"g\", 4);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"transform\", ctx.transform);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n          }\n        },\n        dependencies: [i1.NgForOf, i1.NgIf, XAxisComponent, YAxisComponent, ChartComponent, SeriesHorizontal],\n        styles: [_c25],\n        encapsulation: 2,\n        data: {\n          animation: [trigger('animationState', [transition(':leave', [style({\n            opacity: 1,\n            transform: '*'\n          }), animate(500, style({\n            opacity: 0,\n            transform: 'scale(0)'\n          }))])])]\n        },\n        changeDetection: 0\n      });\n    }\n  }\n  return BarHorizontalNormalizedComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet BarHorizontalStackedComponent = /*#__PURE__*/(() => {\n  class BarHorizontalStackedComponent extends BaseChartComponent {\n    constructor() {\n      super(...arguments);\n      this.legend = false;\n      this.legendTitle = 'Legend';\n      this.legendPosition = LegendPosition.Right;\n      this.tooltipDisabled = false;\n      this.showGridLines = true;\n      this.activeEntries = [];\n      this.trimXAxisTicks = true;\n      this.trimYAxisTicks = true;\n      this.rotateXAxisTicks = true;\n      this.maxXAxisTickLength = 16;\n      this.maxYAxisTickLength = 16;\n      this.barPadding = 8;\n      this.roundDomains = false;\n      this.showDataLabel = false;\n      this.noBarWhenZero = true;\n      this.wrapTicks = false;\n      this.activate = new EventEmitter();\n      this.deactivate = new EventEmitter();\n      this.margin = [10, 20, 10, 20];\n      this.xAxisHeight = 0;\n      this.yAxisWidth = 0;\n      this.dataLabelMaxWidth = {\n        negative: 0,\n        positive: 0\n      };\n      this.barChartType = BarChartType;\n      this.isSSR = false;\n      this.trackBy = (index, item) => {\n        return item.name;\n      };\n    }\n    ngOnInit() {\n      if (isPlatformServer(this.platformId)) {\n        this.isSSR = true;\n      }\n    }\n    update() {\n      super.update();\n      if (!this.showDataLabel) {\n        this.dataLabelMaxWidth = {\n          negative: 0,\n          positive: 0\n        };\n      }\n      this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin,\n        showXAxis: this.xAxis,\n        showYAxis: this.yAxis,\n        xAxisHeight: this.xAxisHeight,\n        yAxisWidth: this.yAxisWidth,\n        showXLabel: this.showXAxisLabel,\n        showYLabel: this.showYAxisLabel,\n        showLegend: this.legend,\n        legendType: this.schemeType,\n        legendPosition: this.legendPosition\n      });\n      this.formatDates();\n      this.groupDomain = this.getGroupDomain();\n      this.innerDomain = this.getInnerDomain();\n      this.valueDomain = this.getValueDomain();\n      this.xScale = this.getXScale();\n      this.yScale = this.getYScale();\n      this.setColors();\n      this.legendOptions = this.getLegendOptions();\n      this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getGroupDomain() {\n      const domain = [];\n      for (const group of this.results) {\n        if (!domain.includes(group.label)) {\n          domain.push(group.label);\n        }\n      }\n      return domain;\n    }\n    getInnerDomain() {\n      const domain = [];\n      for (const group of this.results) {\n        for (const d of group.series) {\n          if (!domain.includes(d.label)) {\n            domain.push(d.label);\n          }\n        }\n      }\n      return domain;\n    }\n    getValueDomain() {\n      const domain = [];\n      let smallest = 0;\n      let biggest = 0;\n      for (const group of this.results) {\n        let smallestSum = 0;\n        let biggestSum = 0;\n        for (const d of group.series) {\n          if (d.value < 0) {\n            smallestSum += d.value;\n          } else {\n            biggestSum += d.value;\n          }\n          smallest = d.value < smallest ? d.value : smallest;\n          biggest = d.value > biggest ? d.value : biggest;\n        }\n        domain.push(smallestSum);\n        domain.push(biggestSum);\n      }\n      domain.push(smallest);\n      domain.push(biggest);\n      const min = Math.min(0, ...domain);\n      const max = this.xScaleMax ? Math.max(this.xScaleMax, ...domain) : Math.max(...domain);\n      return [min, max];\n    }\n    getYScale() {\n      const spacing = this.groupDomain.length / (this.dims.height / this.barPadding + 1);\n      return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).domain(this.groupDomain);\n    }\n    getXScale() {\n      const scale = scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n      return this.roundDomains ? scale.nice() : scale;\n    }\n    groupTransform(group) {\n      return `translate(0, ${this.yScale(group.name)})`;\n    }\n    onClick(data, group) {\n      if (group) {\n        data.series = group.name;\n      }\n      this.select.emit(data);\n    }\n    setColors() {\n      let domain;\n      if (this.schemeType === ScaleType.Ordinal) {\n        domain = this.innerDomain;\n      } else {\n        domain = this.valueDomain;\n      }\n      this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n      const opts = {\n        scaleType: this.schemeType,\n        colors: undefined,\n        domain: [],\n        title: undefined,\n        position: this.legendPosition\n      };\n      if (opts.scaleType === ScaleType.Ordinal) {\n        opts.domain = this.innerDomain;\n        opts.colors = this.colors;\n        opts.title = this.legendTitle;\n      } else {\n        opts.domain = this.valueDomain;\n        opts.colors = this.colors.scale;\n      }\n      return opts;\n    }\n    updateYAxisWidth({\n      width\n    }) {\n      this.yAxisWidth = width;\n      this.update();\n    }\n    updateXAxisHeight({\n      height\n    }) {\n      this.xAxisHeight = height;\n      this.update();\n    }\n    onDataLabelMaxWidthChanged(event, groupIndex) {\n      if (event.size.negative) {\n        this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n      } else {\n        this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n      }\n      if (groupIndex === this.results.length - 1) {\n        setTimeout(() => this.update());\n      }\n    }\n    onActivate(event, group, fromLegend = false) {\n      const item = Object.assign({}, event);\n      if (group) {\n        item.series = group.name;\n      }\n      const items = this.results.map(g => g.series).flat().filter(i => {\n        if (fromLegend) {\n          return i.label === item.name;\n        } else {\n          return i.name === item.name && i.series === item.series;\n        }\n      });\n      this.activeEntries = [...items];\n      this.activate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n      const item = Object.assign({}, event);\n      if (group) {\n        item.series = group.name;\n      }\n      this.activeEntries = this.activeEntries.filter(i => {\n        if (fromLegend) {\n          return i.label !== item.name;\n        } else {\n          return !(i.name === item.name && i.series === item.series);\n        }\n      });\n      this.deactivate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵBarHorizontalStackedComponent_BaseFactory;\n        return function BarHorizontalStackedComponent_Factory(__ngFactoryType__) {\n          return (ɵBarHorizontalStackedComponent_BaseFactory || (ɵBarHorizontalStackedComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarHorizontalStackedComponent)))(__ngFactoryType__ || BarHorizontalStackedComponent);\n        };\n      })();\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: BarHorizontalStackedComponent,\n        selectors: [[\"ngx-charts-bar-horizontal-stacked\"]],\n        contentQueries: function BarHorizontalStackedComponent_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n          }\n        },\n        inputs: {\n          legend: \"legend\",\n          legendTitle: \"legendTitle\",\n          legendPosition: \"legendPosition\",\n          xAxis: \"xAxis\",\n          yAxis: \"yAxis\",\n          showXAxisLabel: \"showXAxisLabel\",\n          showYAxisLabel: \"showYAxisLabel\",\n          xAxisLabel: \"xAxisLabel\",\n          yAxisLabel: \"yAxisLabel\",\n          tooltipDisabled: \"tooltipDisabled\",\n          gradient: \"gradient\",\n          showGridLines: \"showGridLines\",\n          activeEntries: \"activeEntries\",\n          schemeType: \"schemeType\",\n          trimXAxisTicks: \"trimXAxisTicks\",\n          trimYAxisTicks: \"trimYAxisTicks\",\n          rotateXAxisTicks: \"rotateXAxisTicks\",\n          maxXAxisTickLength: \"maxXAxisTickLength\",\n          maxYAxisTickLength: \"maxYAxisTickLength\",\n          xAxisTickFormatting: \"xAxisTickFormatting\",\n          yAxisTickFormatting: \"yAxisTickFormatting\",\n          xAxisTicks: \"xAxisTicks\",\n          yAxisTicks: \"yAxisTicks\",\n          barPadding: \"barPadding\",\n          roundDomains: \"roundDomains\",\n          xScaleMax: \"xScaleMax\",\n          showDataLabel: \"showDataLabel\",\n          dataLabelFormatting: \"dataLabelFormatting\",\n          noBarWhenZero: \"noBarWhenZero\",\n          wrapTicks: \"wrapTicks\"\n        },\n        outputs: {\n          activate: \"activate\",\n          deactivate: \"deactivate\"\n        },\n        standalone: false,\n        features: [i0.ɵɵInheritDefinitionFeature],\n        decls: 6,\n        vars: 13,\n        consts: [[3, \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\", \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"yAxisOffset\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"dimensionsChanged\", \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\"], [\"ngx-charts-y-axis\", \"\", 3, \"dimensionsChanged\", \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"yAxisOffset\", \"wrapTicks\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-series-horizontal\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\", \"type\", \"xScale\", \"yScale\", \"colors\", \"series\", \"activeEntries\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"seriesName\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"]],\n        template: function BarHorizontalStackedComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n            i0.ɵɵlistener(\"legendLabelActivate\", function BarHorizontalStackedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n              return ctx.onActivate($event, undefined, true);\n            })(\"legendLabelDeactivate\", function BarHorizontalStackedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n              return ctx.onDeactivate($event, undefined, true);\n            })(\"legendLabelClick\", function BarHorizontalStackedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n              return ctx.onClick($event);\n            });\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(1, \"g\", 1);\n            i0.ɵɵtemplate(2, BarHorizontalStackedComponent__svg_g_2_Template, 1, 11, \"g\", 2)(3, BarHorizontalStackedComponent__svg_g_3_Template, 1, 10, \"g\", 3)(4, BarHorizontalStackedComponent__svg_g_4_Template, 2, 2, \"g\", 4)(5, BarHorizontalStackedComponent__svg_g_5_Template, 2, 2, \"g\", 4);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"transform\", ctx.transform);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n          }\n        },\n        dependencies: [i1.NgForOf, i1.NgIf, XAxisComponent, YAxisComponent, ChartComponent, SeriesHorizontal],\n        styles: [_c25],\n        encapsulation: 2,\n        data: {\n          animation: [trigger('animationState', [transition(':leave', [style({\n            opacity: 1,\n            transform: '*'\n          }), animate(500, style({\n            opacity: 0,\n            transform: 'scale(0)'\n          }))])])]\n        },\n        changeDetection: 0\n      });\n    }\n  }\n  return BarHorizontalStackedComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet SeriesVerticalComponent = /*#__PURE__*/(() => {\n  class SeriesVerticalComponent {\n    constructor(platformId) {\n      this.platformId = platformId;\n      this.type = BarChartType.Standard;\n      this.tooltipDisabled = false;\n      this.animations = true;\n      this.showDataLabel = false;\n      this.noBarWhenZero = true;\n      this.select = new EventEmitter();\n      this.activate = new EventEmitter();\n      this.deactivate = new EventEmitter();\n      this.dataLabelHeightChanged = new EventEmitter();\n      this.barsForDataLabels = [];\n      this.barOrientation = BarOrientation;\n      this.isSSR = false;\n    }\n    ngOnInit() {\n      if (isPlatformServer(this.platformId)) {\n        this.isSSR = true;\n      }\n    }\n    ngOnChanges(changes) {\n      this.update();\n    }\n    update() {\n      this.updateTooltipSettings();\n      let width;\n      if (this.series.length) {\n        width = this.xScale.bandwidth();\n      }\n      width = Math.round(width);\n      const yScaleMin = Math.max(this.yScale.domain()[0], 0);\n      const d0 = {\n        [D0Types.positive]: 0,\n        [D0Types.negative]: 0\n      };\n      let d0Type = D0Types.positive;\n      let total;\n      if (this.type === BarChartType.Normalized) {\n        total = this.series.map(d => d.value).reduce((sum, d) => sum + d, 0);\n      }\n      this.bars = this.series.map((d, index) => {\n        let value = d.value;\n        const label = this.getLabel(d);\n        const formattedLabel = formatLabel(label);\n        const roundEdges = this.roundEdges;\n        d0Type = value > 0 ? D0Types.positive : D0Types.negative;\n        const bar = {\n          value,\n          label,\n          roundEdges,\n          data: d,\n          width,\n          formattedLabel,\n          height: 0,\n          x: 0,\n          y: 0\n        };\n        if (this.type === BarChartType.Standard) {\n          bar.height = Math.abs(this.yScale(value) - this.yScale(yScaleMin));\n          bar.x = this.xScale(label);\n          if (value < 0) {\n            bar.y = this.yScale(0);\n          } else {\n            bar.y = this.yScale(value);\n          }\n        } else if (this.type === BarChartType.Stacked) {\n          const offset0 = d0[d0Type];\n          const offset1 = offset0 + value;\n          d0[d0Type] += value;\n          bar.height = this.yScale(offset0) - this.yScale(offset1);\n          bar.x = 0;\n          bar.y = this.yScale(offset1);\n          bar.offset0 = offset0;\n          bar.offset1 = offset1;\n        } else if (this.type === BarChartType.Normalized) {\n          let offset0 = d0[d0Type];\n          let offset1 = offset0 + value;\n          d0[d0Type] += value;\n          if (total > 0) {\n            offset0 = offset0 * 100 / total;\n            offset1 = offset1 * 100 / total;\n          } else {\n            offset0 = 0;\n            offset1 = 0;\n          }\n          bar.height = this.yScale(offset0) - this.yScale(offset1);\n          bar.x = 0;\n          bar.y = this.yScale(offset1);\n          bar.offset0 = offset0;\n          bar.offset1 = offset1;\n          value = (offset1 - offset0).toFixed(2) + '%';\n        }\n        if (this.colors.scaleType === ScaleType.Ordinal) {\n          bar.color = this.colors.getColor(label);\n        } else {\n          if (this.type === BarChartType.Standard) {\n            bar.color = this.colors.getColor(value);\n            bar.gradientStops = this.colors.getLinearGradientStops(value);\n          } else {\n            bar.color = this.colors.getColor(bar.offset1);\n            bar.gradientStops = this.colors.getLinearGradientStops(bar.offset1, bar.offset0);\n          }\n        }\n        let tooltipLabel = formattedLabel;\n        bar.ariaLabel = formattedLabel + ' ' + value.toLocaleString();\n        if (this.seriesName !== null && this.seriesName !== undefined) {\n          tooltipLabel = `${this.seriesName} • ${formattedLabel}`;\n          bar.data.series = this.seriesName;\n          bar.ariaLabel = this.seriesName + ' ' + bar.ariaLabel;\n        }\n        bar.tooltipText = this.tooltipDisabled ? undefined : `\n        <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\n        <span class=\"tooltip-val\">${this.dataLabelFormatting ? this.dataLabelFormatting(value) : value.toLocaleString()}</span>\n      `;\n        return bar;\n      });\n      this.updateDataLabels();\n    }\n    updateDataLabels() {\n      if (this.type === BarChartType.Stacked) {\n        this.barsForDataLabels = [];\n        const section = {};\n        section.series = this.seriesName;\n        const totalPositive = this.series.map(d => d.value).reduce((sum, d) => d > 0 ? sum + d : sum, 0);\n        const totalNegative = this.series.map(d => d.value).reduce((sum, d) => d < 0 ? sum + d : sum, 0);\n        section.total = totalPositive + totalNegative;\n        section.x = 0;\n        section.y = 0;\n        if (section.total > 0) {\n          section.height = this.yScale(totalPositive);\n        } else {\n          section.height = this.yScale(totalNegative);\n        }\n        section.width = this.xScale.bandwidth();\n        this.barsForDataLabels.push(section);\n      } else {\n        this.barsForDataLabels = this.series.map(d => {\n          const section = {};\n          section.series = this.seriesName ?? d.label;\n          section.total = d.value;\n          section.x = this.xScale(d.label);\n          section.y = this.yScale(0);\n          section.height = this.yScale(section.total) - this.yScale(0);\n          section.width = this.xScale.bandwidth();\n          return section;\n        });\n      }\n    }\n    updateTooltipSettings() {\n      this.tooltipPlacement = this.tooltipDisabled ? undefined : PlacementTypes.Top;\n      this.tooltipType = this.tooltipDisabled ? undefined : StyleTypes.tooltip;\n    }\n    isActive(entry) {\n      if (!this.activeEntries) return false;\n      const item = this.activeEntries.find(active => {\n        return entry.name === active.name && entry.value === active.value;\n      });\n      return item !== undefined;\n    }\n    onClick(data) {\n      this.select.emit(data);\n    }\n    getLabel(dataItem) {\n      if (dataItem.label) {\n        return dataItem.label;\n      }\n      return dataItem.name;\n    }\n    trackBy(index, bar) {\n      return bar.label;\n    }\n    trackDataLabelBy(index, barLabel) {\n      return index + '#' + barLabel.series + '#' + barLabel.total;\n    }\n    static {\n      this.ɵfac = function SeriesVerticalComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || SeriesVerticalComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: SeriesVerticalComponent,\n        selectors: [[\"g\", \"ngx-charts-series-vertical\", \"\"]],\n        inputs: {\n          dims: \"dims\",\n          type: \"type\",\n          series: \"series\",\n          xScale: \"xScale\",\n          yScale: \"yScale\",\n          colors: \"colors\",\n          gradient: \"gradient\",\n          activeEntries: \"activeEntries\",\n          seriesName: \"seriesName\",\n          tooltipDisabled: \"tooltipDisabled\",\n          tooltipTemplate: \"tooltipTemplate\",\n          roundEdges: \"roundEdges\",\n          animations: \"animations\",\n          showDataLabel: \"showDataLabel\",\n          dataLabelFormatting: \"dataLabelFormatting\",\n          noBarWhenZero: \"noBarWhenZero\"\n        },\n        outputs: {\n          select: \"select\",\n          activate: \"activate\",\n          deactivate: \"deactivate\",\n          dataLabelHeightChanged: \"dataLabelHeightChanged\"\n        },\n        standalone: false,\n        features: [i0.ɵɵNgOnChangesFeature],\n        attrs: _c29,\n        decls: 3,\n        vars: 3,\n        consts: [[4, \"ngIf\"], [\"ngx-charts-bar\", \"\", \"ngx-tooltip\", \"\", 3, \"width\", \"height\", \"x\", \"y\", \"fill\", \"stops\", \"data\", \"orientation\", \"roundEdges\", \"gradient\", \"ariaLabel\", \"isActive\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"noBarWhenZero\", \"animations\", \"select\", \"activate\", \"deactivate\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-bar\", \"\", \"ngx-tooltip\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"width\", \"height\", \"x\", \"y\", \"fill\", \"stops\", \"data\", \"orientation\", \"roundEdges\", \"gradient\", \"ariaLabel\", \"isActive\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"noBarWhenZero\", \"animations\"], [\"ngx-charts-bar-label\", \"\", 3, \"barX\", \"barY\", \"barWidth\", \"barHeight\", \"value\", \"valueFormatting\", \"orientation\", \"dimensionsChanged\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-bar-label\", \"\", 3, \"dimensionsChanged\", \"barX\", \"barY\", \"barWidth\", \"barHeight\", \"value\", \"valueFormatting\", \"orientation\"]],\n        template: function SeriesVerticalComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵtemplate(0, SeriesVerticalComponent__svg_g_0_Template, 2, 2, \"g\", 0)(1, SeriesVerticalComponent__svg_g_1_Template, 2, 2, \"g\", 0)(2, SeriesVerticalComponent__svg_g_2_Template, 2, 2, \"g\", 0);\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.showDataLabel);\n          }\n        },\n        dependencies: [i1.NgForOf, i1.NgIf, TooltipDirective, BarComponent, BarLabelComponent],\n        encapsulation: 2,\n        data: {\n          animation: [trigger('animationState', [transition(':leave', [style({\n            opacity: 1\n          }), animate(500, style({\n            opacity: 0\n          }))])])]\n        },\n        changeDetection: 0\n      });\n    }\n  }\n  return SeriesVerticalComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet BarVerticalComponent = /*#__PURE__*/(() => {\n  class BarVerticalComponent extends BaseChartComponent {\n    constructor() {\n      super(...arguments);\n      this.legend = false;\n      this.legendTitle = 'Legend';\n      this.legendPosition = LegendPosition.Right;\n      this.tooltipDisabled = false;\n      this.showGridLines = true;\n      this.activeEntries = [];\n      this.trimXAxisTicks = true;\n      this.trimYAxisTicks = true;\n      this.rotateXAxisTicks = true;\n      this.maxXAxisTickLength = 16;\n      this.maxYAxisTickLength = 16;\n      this.barPadding = 8;\n      this.roundDomains = false;\n      this.roundEdges = true;\n      this.showDataLabel = false;\n      this.noBarWhenZero = true;\n      this.wrapTicks = false;\n      this.activate = new EventEmitter();\n      this.deactivate = new EventEmitter();\n      this.margin = [10, 20, 10, 20];\n      this.xAxisHeight = 0;\n      this.yAxisWidth = 0;\n      this.dataLabelMaxHeight = {\n        negative: 0,\n        positive: 0\n      };\n    }\n    update() {\n      super.update();\n      if (!this.showDataLabel) {\n        this.dataLabelMaxHeight = {\n          negative: 0,\n          positive: 0\n        };\n      }\n      this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin,\n        showXAxis: this.xAxis,\n        showYAxis: this.yAxis,\n        xAxisHeight: this.xAxisHeight,\n        yAxisWidth: this.yAxisWidth,\n        showXLabel: this.showXAxisLabel,\n        showYLabel: this.showYAxisLabel,\n        showLegend: this.legend,\n        legendType: this.schemeType,\n        legendPosition: this.legendPosition\n      });\n      this.formatDates();\n      if (this.showDataLabel) {\n        this.dims.height -= this.dataLabelMaxHeight.negative;\n      }\n      this.xScale = this.getXScale();\n      this.yScale = this.getYScale();\n      this.setColors();\n      this.legendOptions = this.getLegendOptions();\n      this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n    }\n    getXScale() {\n      this.xDomain = this.getXDomain();\n      const spacing = this.xDomain.length / (this.dims.width / this.barPadding + 1);\n      return scaleBand().range([0, this.dims.width]).paddingInner(spacing).domain(this.xDomain);\n    }\n    getYScale() {\n      this.yDomain = this.getYDomain();\n      const scale = scaleLinear().range([this.dims.height, 0]).domain(this.yDomain);\n      return this.roundDomains ? scale.nice() : scale;\n    }\n    getXDomain() {\n      return this.results.map(d => d.label);\n    }\n    getYDomain() {\n      const values = this.results.map(d => d.value);\n      let min = this.yScaleMin ? Math.min(this.yScaleMin, ...values) : Math.min(0, ...values);\n      if (this.yAxisTicks && !this.yAxisTicks.some(isNaN)) {\n        min = Math.min(min, ...this.yAxisTicks);\n      }\n      let max = this.yScaleMax ? Math.max(this.yScaleMax, ...values) : Math.max(0, ...values);\n      if (this.yAxisTicks && !this.yAxisTicks.some(isNaN)) {\n        max = Math.max(max, ...this.yAxisTicks);\n      }\n      return [min, max];\n    }\n    onClick(data) {\n      this.select.emit(data);\n    }\n    setColors() {\n      let domain;\n      if (this.schemeType === ScaleType.Ordinal) {\n        domain = this.xDomain;\n      } else {\n        domain = this.yDomain;\n      }\n      this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n      const opts = {\n        scaleType: this.schemeType,\n        colors: undefined,\n        domain: [],\n        title: undefined,\n        position: this.legendPosition\n      };\n      if (opts.scaleType === ScaleType.Ordinal) {\n        opts.domain = this.xDomain;\n        opts.colors = this.colors;\n        opts.title = this.legendTitle;\n      } else {\n        opts.domain = this.yDomain;\n        opts.colors = this.colors.scale;\n      }\n      return opts;\n    }\n    updateYAxisWidth({\n      width\n    }) {\n      this.yAxisWidth = width;\n      this.update();\n    }\n    updateXAxisHeight({\n      height\n    }) {\n      this.xAxisHeight = height;\n      this.update();\n    }\n    onDataLabelMaxHeightChanged(event) {\n      if (event.size.negative) {\n        this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n      } else {\n        this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n      }\n      if (event.index === this.results.length - 1) {\n        setTimeout(() => this.update());\n      }\n    }\n    onActivate(item, fromLegend = false) {\n      item = this.results.find(d => {\n        if (fromLegend) {\n          return d.label === item.name;\n        } else {\n          return d.name === item.name;\n        }\n      });\n      const idx = this.activeEntries.findIndex(d => {\n        return d.name === item.name && d.value === item.value && d.series === item.series;\n      });\n      if (idx > -1) {\n        return;\n      }\n      this.activeEntries = [item, ...this.activeEntries];\n      this.activate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n    onDeactivate(item, fromLegend = false) {\n      item = this.results.find(d => {\n        if (fromLegend) {\n          return d.label === item.name;\n        } else {\n          return d.name === item.name;\n        }\n      });\n      const idx = this.activeEntries.findIndex(d => {\n        return d.name === item.name && d.value === item.value && d.series === item.series;\n      });\n      this.activeEntries.splice(idx, 1);\n      this.activeEntries = [...this.activeEntries];\n      this.deactivate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵBarVerticalComponent_BaseFactory;\n        return function BarVerticalComponent_Factory(__ngFactoryType__) {\n          return (ɵBarVerticalComponent_BaseFactory || (ɵBarVerticalComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarVerticalComponent)))(__ngFactoryType__ || BarVerticalComponent);\n        };\n      })();\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: BarVerticalComponent,\n        selectors: [[\"ngx-charts-bar-vertical\"]],\n        contentQueries: function BarVerticalComponent_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n          }\n        },\n        inputs: {\n          legend: \"legend\",\n          legendTitle: \"legendTitle\",\n          legendPosition: \"legendPosition\",\n          xAxis: \"xAxis\",\n          yAxis: \"yAxis\",\n          showXAxisLabel: \"showXAxisLabel\",\n          showYAxisLabel: \"showYAxisLabel\",\n          xAxisLabel: \"xAxisLabel\",\n          yAxisLabel: \"yAxisLabel\",\n          tooltipDisabled: \"tooltipDisabled\",\n          gradient: \"gradient\",\n          showGridLines: \"showGridLines\",\n          activeEntries: \"activeEntries\",\n          schemeType: \"schemeType\",\n          trimXAxisTicks: \"trimXAxisTicks\",\n          trimYAxisTicks: \"trimYAxisTicks\",\n          rotateXAxisTicks: \"rotateXAxisTicks\",\n          maxXAxisTickLength: \"maxXAxisTickLength\",\n          maxYAxisTickLength: \"maxYAxisTickLength\",\n          xAxisTickFormatting: \"xAxisTickFormatting\",\n          yAxisTickFormatting: \"yAxisTickFormatting\",\n          xAxisTicks: \"xAxisTicks\",\n          yAxisTicks: \"yAxisTicks\",\n          barPadding: \"barPadding\",\n          roundDomains: \"roundDomains\",\n          roundEdges: \"roundEdges\",\n          yScaleMax: \"yScaleMax\",\n          yScaleMin: \"yScaleMin\",\n          showDataLabel: \"showDataLabel\",\n          dataLabelFormatting: \"dataLabelFormatting\",\n          noBarWhenZero: \"noBarWhenZero\",\n          wrapTicks: \"wrapTicks\"\n        },\n        outputs: {\n          activate: \"activate\",\n          deactivate: \"deactivate\"\n        },\n        standalone: false,\n        features: [i0.ɵɵInheritDefinitionFeature],\n        decls: 5,\n        vars: 25,\n        consts: [[3, \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"xAxisOffset\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-series-vertical\", \"\", 3, \"activate\", \"deactivate\", \"select\", \"dataLabelHeightChanged\", \"xScale\", \"yScale\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"showDataLabel\", \"dataLabelFormatting\", \"activeEntries\", \"roundEdges\", \"animations\", \"noBarWhenZero\"], [\"ngx-charts-x-axis\", \"\", 3, \"dimensionsChanged\", \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"xAxisOffset\", \"wrapTicks\"], [\"ngx-charts-y-axis\", \"\", 3, \"dimensionsChanged\", \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\"]],\n        template: function BarVerticalComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n            i0.ɵɵlistener(\"legendLabelClick\", function BarVerticalComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n              return ctx.onClick($event);\n            })(\"legendLabelActivate\", function BarVerticalComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n              return ctx.onActivate($event, true);\n            })(\"legendLabelDeactivate\", function BarVerticalComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n              return ctx.onDeactivate($event, true);\n            });\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(1, \"g\", 1);\n            i0.ɵɵtemplate(2, BarVerticalComponent__svg_g_2_Template, 1, 12, \"g\", 2)(3, BarVerticalComponent__svg_g_3_Template, 1, 10, \"g\", 3);\n            i0.ɵɵelementStart(4, \"g\", 4);\n            i0.ɵɵlistener(\"activate\", function BarVerticalComponent_Template_g_activate_4_listener($event) {\n              return ctx.onActivate($event);\n            })(\"deactivate\", function BarVerticalComponent_Template_g_deactivate_4_listener($event) {\n              return ctx.onDeactivate($event);\n            })(\"select\", function BarVerticalComponent_Template_g_select_4_listener($event) {\n              return ctx.onClick($event);\n            })(\"dataLabelHeightChanged\", function BarVerticalComponent_Template_g_dataLabelHeightChanged_4_listener($event) {\n              return ctx.onDataLabelMaxHeightChanged($event);\n            });\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(22, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"transform\", ctx.transform);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"xScale\", ctx.xScale)(\"yScale\", ctx.yScale)(\"colors\", ctx.colors)(\"series\", ctx.results)(\"dims\", ctx.dims)(\"gradient\", ctx.gradient)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"showDataLabel\", ctx.showDataLabel)(\"dataLabelFormatting\", ctx.dataLabelFormatting)(\"activeEntries\", ctx.activeEntries)(\"roundEdges\", ctx.roundEdges)(\"animations\", ctx.animations)(\"noBarWhenZero\", ctx.noBarWhenZero);\n          }\n        },\n        dependencies: [i1.NgIf, XAxisComponent, YAxisComponent, ChartComponent, SeriesVerticalComponent],\n        styles: [_c25],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return BarVerticalComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet BarVertical2DComponent = /*#__PURE__*/(() => {\n  class BarVertical2DComponent extends BaseChartComponent {\n    constructor() {\n      super(...arguments);\n      this.legend = false;\n      this.legendTitle = 'Legend';\n      this.legendPosition = LegendPosition.Right;\n      this.tooltipDisabled = false;\n      this.scaleType = ScaleType.Ordinal;\n      this.showGridLines = true;\n      this.activeEntries = [];\n      this.schemeType = ScaleType.Ordinal;\n      this.trimXAxisTicks = true;\n      this.trimYAxisTicks = true;\n      this.rotateXAxisTicks = true;\n      this.maxXAxisTickLength = 16;\n      this.maxYAxisTickLength = 16;\n      this.groupPadding = 16;\n      this.barPadding = 8;\n      this.roundDomains = false;\n      this.roundEdges = true;\n      this.showDataLabel = false;\n      this.noBarWhenZero = true;\n      this.wrapTicks = false;\n      this.activate = new EventEmitter();\n      this.deactivate = new EventEmitter();\n      this.margin = [10, 20, 10, 20];\n      this.xAxisHeight = 0;\n      this.yAxisWidth = 0;\n      this.dataLabelMaxHeight = {\n        negative: 0,\n        positive: 0\n      };\n      this.isSSR = false;\n      this.barOrientation = BarOrientation;\n      this.trackBy = (index, item) => {\n        return item.name;\n      };\n    }\n    ngOnInit() {\n      if (isPlatformServer(this.platformId)) {\n        this.isSSR = true;\n      }\n    }\n    update() {\n      super.update();\n      if (!this.showDataLabel) {\n        this.dataLabelMaxHeight = {\n          negative: 0,\n          positive: 0\n        };\n      }\n      this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin,\n        showXAxis: this.xAxis,\n        showYAxis: this.yAxis,\n        xAxisHeight: this.xAxisHeight,\n        yAxisWidth: this.yAxisWidth,\n        showXLabel: this.showXAxisLabel,\n        showYLabel: this.showYAxisLabel,\n        showLegend: this.legend,\n        legendType: this.schemeType,\n        legendPosition: this.legendPosition\n      });\n      if (this.showDataLabel) {\n        this.dims.height -= this.dataLabelMaxHeight.negative;\n      }\n      this.formatDates();\n      this.groupDomain = this.getGroupDomain();\n      this.innerDomain = this.getInnerDomain();\n      this.valueDomain = this.getValueDomain();\n      this.groupScale = this.getGroupScale();\n      this.innerScale = this.getInnerScale();\n      this.valueScale = this.getValueScale();\n      this.setColors();\n      this.legendOptions = this.getLegendOptions();\n      this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n    }\n    onDataLabelMaxHeightChanged(event, groupIndex) {\n      if (event.size.negative) {\n        this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n      } else {\n        this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n      }\n      if (groupIndex === this.results.length - 1) {\n        setTimeout(() => this.update());\n      }\n    }\n    getGroupScale() {\n      const spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);\n      return scaleBand().rangeRound([0, this.dims.width]).paddingInner(spacing).paddingOuter(spacing / 2).domain(this.groupDomain);\n    }\n    getInnerScale() {\n      const width = this.groupScale.bandwidth();\n      const spacing = this.innerDomain.length / (width / this.barPadding + 1);\n      return scaleBand().rangeRound([0, width]).paddingInner(spacing).domain(this.innerDomain);\n    }\n    getValueScale() {\n      const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n      return this.roundDomains ? scale.nice() : scale;\n    }\n    getGroupDomain() {\n      const domain = [];\n      for (const group of this.results) {\n        if (!domain.includes(group.label)) {\n          domain.push(group.label);\n        }\n      }\n      return domain;\n    }\n    getInnerDomain() {\n      const domain = [];\n      for (const group of this.results) {\n        for (const d of group.series) {\n          if (!domain.includes(d.label)) {\n            domain.push(d.label);\n          }\n        }\n      }\n      return domain;\n    }\n    getValueDomain() {\n      const domain = [];\n      for (const group of this.results) {\n        for (const d of group.series) {\n          if (!domain.includes(d.value)) {\n            domain.push(d.value);\n          }\n        }\n      }\n      const min = Math.min(0, ...domain);\n      const max = this.yScaleMax ? Math.max(this.yScaleMax, ...domain) : Math.max(0, ...domain);\n      return [min, max];\n    }\n    groupTransform(group) {\n      return `translate(${this.groupScale(group.label)}, 0)`;\n    }\n    onClick(data, group) {\n      if (group) {\n        data.series = group.name;\n      }\n      this.select.emit(data);\n    }\n    setColors() {\n      let domain;\n      if (this.schemeType === ScaleType.Ordinal) {\n        domain = this.innerDomain;\n      } else {\n        domain = this.valueDomain;\n      }\n      this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n      const opts = {\n        scaleType: this.schemeType,\n        colors: undefined,\n        domain: [],\n        title: undefined,\n        position: this.legendPosition\n      };\n      if (opts.scaleType === ScaleType.Ordinal) {\n        opts.domain = this.innerDomain;\n        opts.colors = this.colors;\n        opts.title = this.legendTitle;\n      } else {\n        opts.domain = this.valueDomain;\n        opts.colors = this.colors.scale;\n      }\n      return opts;\n    }\n    updateYAxisWidth({\n      width\n    }) {\n      this.yAxisWidth = width;\n      this.update();\n    }\n    updateXAxisHeight({\n      height\n    }) {\n      this.xAxisHeight = height;\n      this.update();\n    }\n    onActivate(event, group, fromLegend = false) {\n      const item = Object.assign({}, event);\n      if (group) {\n        item.series = group.name;\n      }\n      const items = this.results.map(g => g.series).flat().filter(i => {\n        if (fromLegend) {\n          return i.label === item.name;\n        } else {\n          return i.name === item.name && i.series === item.series;\n        }\n      });\n      this.activeEntries = [...items];\n      this.activate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n      const item = Object.assign({}, event);\n      if (group) {\n        item.series = group.name;\n      }\n      this.activeEntries = this.activeEntries.filter(i => {\n        if (fromLegend) {\n          return i.label !== item.name;\n        } else {\n          return !(i.name === item.name && i.series === item.series);\n        }\n      });\n      this.deactivate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵBarVertical2DComponent_BaseFactory;\n        return function BarVertical2DComponent_Factory(__ngFactoryType__) {\n          return (ɵBarVertical2DComponent_BaseFactory || (ɵBarVertical2DComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarVertical2DComponent)))(__ngFactoryType__ || BarVertical2DComponent);\n        };\n      })();\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: BarVertical2DComponent,\n        selectors: [[\"ngx-charts-bar-vertical-2d\"]],\n        contentQueries: function BarVertical2DComponent_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n          }\n        },\n        inputs: {\n          legend: \"legend\",\n          legendTitle: \"legendTitle\",\n          legendPosition: \"legendPosition\",\n          xAxis: \"xAxis\",\n          yAxis: \"yAxis\",\n          showXAxisLabel: \"showXAxisLabel\",\n          showYAxisLabel: \"showYAxisLabel\",\n          xAxisLabel: \"xAxisLabel\",\n          yAxisLabel: \"yAxisLabel\",\n          tooltipDisabled: \"tooltipDisabled\",\n          scaleType: \"scaleType\",\n          gradient: \"gradient\",\n          showGridLines: \"showGridLines\",\n          activeEntries: \"activeEntries\",\n          schemeType: \"schemeType\",\n          trimXAxisTicks: \"trimXAxisTicks\",\n          trimYAxisTicks: \"trimYAxisTicks\",\n          rotateXAxisTicks: \"rotateXAxisTicks\",\n          maxXAxisTickLength: \"maxXAxisTickLength\",\n          maxYAxisTickLength: \"maxYAxisTickLength\",\n          xAxisTickFormatting: \"xAxisTickFormatting\",\n          yAxisTickFormatting: \"yAxisTickFormatting\",\n          xAxisTicks: \"xAxisTicks\",\n          yAxisTicks: \"yAxisTicks\",\n          groupPadding: \"groupPadding\",\n          barPadding: \"barPadding\",\n          roundDomains: \"roundDomains\",\n          roundEdges: \"roundEdges\",\n          yScaleMax: \"yScaleMax\",\n          showDataLabel: \"showDataLabel\",\n          dataLabelFormatting: \"dataLabelFormatting\",\n          noBarWhenZero: \"noBarWhenZero\",\n          wrapTicks: \"wrapTicks\"\n        },\n        outputs: {\n          activate: \"activate\",\n          deactivate: \"deactivate\"\n        },\n        standalone: false,\n        features: [i0.ɵɵInheritDefinitionFeature],\n        decls: 7,\n        vars: 18,\n        consts: [[3, \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\", \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-grid-panel-series\", \"\", 3, \"xScale\", \"yScale\", \"data\", \"dims\", \"orient\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"xAxisOffset\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"dimensionsChanged\", \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"xAxisOffset\", \"wrapTicks\"], [\"ngx-charts-y-axis\", \"\", 3, \"dimensionsChanged\", \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\"], [\"ngx-charts-series-vertical\", \"\", 3, \"activeEntries\", \"xScale\", \"yScale\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"showDataLabel\", \"dataLabelFormatting\", \"seriesName\", \"roundEdges\", \"animations\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-series-vertical\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\", \"activeEntries\", \"xScale\", \"yScale\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"showDataLabel\", \"dataLabelFormatting\", \"seriesName\", \"roundEdges\", \"animations\", \"noBarWhenZero\"]],\n        template: function BarVertical2DComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n            i0.ɵɵlistener(\"legendLabelActivate\", function BarVertical2DComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n              return ctx.onActivate($event, undefined, true);\n            })(\"legendLabelDeactivate\", function BarVertical2DComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n              return ctx.onDeactivate($event, undefined, true);\n            })(\"legendLabelClick\", function BarVertical2DComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n              return ctx.onClick($event);\n            });\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(1, \"g\", 1);\n            i0.ɵɵelement(2, \"g\", 2);\n            i0.ɵɵtemplate(3, BarVertical2DComponent__svg_g_3_Template, 1, 11, \"g\", 3)(4, BarVertical2DComponent__svg_g_4_Template, 1, 10, \"g\", 4)(5, BarVertical2DComponent__svg_g_5_Template, 2, 2, \"g\", 5)(6, BarVertical2DComponent__svg_g_6_Template, 2, 2, \"g\", 5);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(15, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"transform\", ctx.transform);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"xScale\", ctx.groupScale)(\"yScale\", ctx.valueScale)(\"data\", ctx.results)(\"dims\", ctx.dims)(\"orient\", ctx.barOrientation.Vertical);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n          }\n        },\n        dependencies: [i1.NgForOf, i1.NgIf, XAxisComponent, YAxisComponent, ChartComponent, GridPanelSeriesComponent, SeriesVerticalComponent],\n        styles: [_c25],\n        encapsulation: 2,\n        data: {\n          animation: [trigger('animationState', [transition(':leave', [style({\n            opacity: 1,\n            transform: '*'\n          }), animate(500, style({\n            opacity: 0,\n            transform: 'scale(0)'\n          }))])])]\n        },\n        changeDetection: 0\n      });\n    }\n  }\n  return BarVertical2DComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet BarVerticalNormalizedComponent = /*#__PURE__*/(() => {\n  class BarVerticalNormalizedComponent extends BaseChartComponent {\n    constructor() {\n      super(...arguments);\n      this.legend = false;\n      this.legendTitle = 'Legend';\n      this.legendPosition = LegendPosition.Right;\n      this.tooltipDisabled = false;\n      this.showGridLines = true;\n      this.activeEntries = [];\n      this.schemeType = ScaleType.Ordinal;\n      this.trimXAxisTicks = true;\n      this.trimYAxisTicks = true;\n      this.rotateXAxisTicks = true;\n      this.maxXAxisTickLength = 16;\n      this.maxYAxisTickLength = 16;\n      this.barPadding = 8;\n      this.roundDomains = false;\n      this.noBarWhenZero = true;\n      this.wrapTicks = false;\n      this.activate = new EventEmitter();\n      this.deactivate = new EventEmitter();\n      this.valueDomain = [0, 100];\n      this.margin = [10, 20, 10, 20];\n      this.xAxisHeight = 0;\n      this.yAxisWidth = 0;\n      this.isSSR = false;\n      this.barChartType = BarChartType;\n      this.trackBy = (index, item) => {\n        return item.name;\n      };\n    }\n    ngOnInit() {\n      if (isPlatformServer(this.platformId)) {\n        this.isSSR = true;\n      }\n    }\n    update() {\n      super.update();\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin,\n        showXAxis: this.xAxis,\n        showYAxis: this.yAxis,\n        xAxisHeight: this.xAxisHeight,\n        yAxisWidth: this.yAxisWidth,\n        showXLabel: this.showXAxisLabel,\n        showYLabel: this.showYAxisLabel,\n        showLegend: this.legend,\n        legendType: this.schemeType,\n        legendPosition: this.legendPosition\n      });\n      this.formatDates();\n      this.groupDomain = this.getGroupDomain();\n      this.innerDomain = this.getInnerDomain();\n      this.xScale = this.getXScale();\n      this.yScale = this.getYScale();\n      this.setColors();\n      this.legendOptions = this.getLegendOptions();\n      this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getGroupDomain() {\n      const domain = [];\n      for (const group of this.results) {\n        if (!domain.includes(group.label)) {\n          domain.push(group.label);\n        }\n      }\n      return domain;\n    }\n    getInnerDomain() {\n      const domain = [];\n      for (const group of this.results) {\n        for (const d of group.series) {\n          if (!domain.includes(d.label)) {\n            domain.push(d.label);\n          }\n        }\n      }\n      return domain;\n    }\n    getXScale() {\n      const spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);\n      return scaleBand().rangeRound([0, this.dims.width]).paddingInner(spacing).domain(this.groupDomain);\n    }\n    getYScale() {\n      const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n      return this.roundDomains ? scale.nice() : scale;\n    }\n    groupTransform(group) {\n      return `translate(${this.xScale(group.name)}, 0)`;\n    }\n    onClick(data, group) {\n      if (group) {\n        data.series = group.name;\n      }\n      this.select.emit(data);\n    }\n    setColors() {\n      let domain;\n      if (this.schemeType === ScaleType.Ordinal) {\n        domain = this.innerDomain;\n      } else {\n        domain = this.valueDomain;\n      }\n      this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n      const opts = {\n        scaleType: this.schemeType,\n        colors: undefined,\n        domain: [],\n        title: undefined,\n        position: this.legendPosition\n      };\n      if (opts.scaleType === ScaleType.Ordinal) {\n        opts.domain = this.innerDomain;\n        opts.colors = this.colors;\n        opts.title = this.legendTitle;\n      } else {\n        opts.domain = this.valueDomain;\n        opts.colors = this.colors.scale;\n      }\n      return opts;\n    }\n    updateYAxisWidth({\n      width\n    }) {\n      this.yAxisWidth = width;\n      this.update();\n    }\n    updateXAxisHeight({\n      height\n    }) {\n      this.xAxisHeight = height;\n      this.update();\n    }\n    onActivate(event, group, fromLegend = false) {\n      const item = Object.assign({}, event);\n      if (group) {\n        item.series = group.name;\n      }\n      const items = this.results.map(g => g.series).flat().filter(i => {\n        if (fromLegend) {\n          return i.label === item.name;\n        } else {\n          return i.name === item.name && i.series === item.series;\n        }\n      });\n      this.activeEntries = [...items];\n      this.activate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n      const item = Object.assign({}, event);\n      if (group) {\n        item.series = group.name;\n      }\n      this.activeEntries = this.activeEntries.filter(i => {\n        if (fromLegend) {\n          return i.label !== item.name;\n        } else {\n          return !(i.name === item.name && i.series === item.series);\n        }\n      });\n      this.deactivate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵBarVerticalNormalizedComponent_BaseFactory;\n        return function BarVerticalNormalizedComponent_Factory(__ngFactoryType__) {\n          return (ɵBarVerticalNormalizedComponent_BaseFactory || (ɵBarVerticalNormalizedComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarVerticalNormalizedComponent)))(__ngFactoryType__ || BarVerticalNormalizedComponent);\n        };\n      })();\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: BarVerticalNormalizedComponent,\n        selectors: [[\"ngx-charts-bar-vertical-normalized\"]],\n        contentQueries: function BarVerticalNormalizedComponent_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n          }\n        },\n        inputs: {\n          legend: \"legend\",\n          legendTitle: \"legendTitle\",\n          legendPosition: \"legendPosition\",\n          xAxis: \"xAxis\",\n          yAxis: \"yAxis\",\n          showXAxisLabel: \"showXAxisLabel\",\n          showYAxisLabel: \"showYAxisLabel\",\n          xAxisLabel: \"xAxisLabel\",\n          yAxisLabel: \"yAxisLabel\",\n          tooltipDisabled: \"tooltipDisabled\",\n          gradient: \"gradient\",\n          showGridLines: \"showGridLines\",\n          activeEntries: \"activeEntries\",\n          schemeType: \"schemeType\",\n          trimXAxisTicks: \"trimXAxisTicks\",\n          trimYAxisTicks: \"trimYAxisTicks\",\n          rotateXAxisTicks: \"rotateXAxisTicks\",\n          maxXAxisTickLength: \"maxXAxisTickLength\",\n          maxYAxisTickLength: \"maxYAxisTickLength\",\n          xAxisTickFormatting: \"xAxisTickFormatting\",\n          yAxisTickFormatting: \"yAxisTickFormatting\",\n          xAxisTicks: \"xAxisTicks\",\n          yAxisTicks: \"yAxisTicks\",\n          barPadding: \"barPadding\",\n          roundDomains: \"roundDomains\",\n          noBarWhenZero: \"noBarWhenZero\",\n          wrapTicks: \"wrapTicks\"\n        },\n        outputs: {\n          activate: \"activate\",\n          deactivate: \"deactivate\"\n        },\n        standalone: false,\n        features: [i0.ɵɵInheritDefinitionFeature],\n        decls: 6,\n        vars: 13,\n        consts: [[3, \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\", \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"dimensionsChanged\", \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\"], [\"ngx-charts-y-axis\", \"\", 3, \"dimensionsChanged\", \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-series-vertical\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"type\", \"xScale\", \"yScale\", \"activeEntries\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"seriesName\", \"animations\", \"noBarWhenZero\"]],\n        template: function BarVerticalNormalizedComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n            i0.ɵɵlistener(\"legendLabelActivate\", function BarVerticalNormalizedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n              return ctx.onActivate($event, undefined, true);\n            })(\"legendLabelDeactivate\", function BarVerticalNormalizedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n              return ctx.onDeactivate($event, undefined, true);\n            })(\"legendLabelClick\", function BarVerticalNormalizedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n              return ctx.onClick($event);\n            });\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(1, \"g\", 1);\n            i0.ɵɵtemplate(2, BarVerticalNormalizedComponent__svg_g_2_Template, 1, 10, \"g\", 2)(3, BarVerticalNormalizedComponent__svg_g_3_Template, 1, 10, \"g\", 3)(4, BarVerticalNormalizedComponent__svg_g_4_Template, 2, 2, \"g\", 4)(5, BarVerticalNormalizedComponent__svg_g_5_Template, 2, 2, \"g\", 4);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"transform\", ctx.transform);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n          }\n        },\n        dependencies: [i1.NgForOf, i1.NgIf, XAxisComponent, YAxisComponent, ChartComponent, SeriesVerticalComponent],\n        styles: [_c25],\n        encapsulation: 2,\n        data: {\n          animation: [trigger('animationState', [transition(':leave', [style({\n            opacity: 1,\n            transform: '*'\n          }), animate(500, style({\n            opacity: 0,\n            transform: 'scale(0)'\n          }))])])]\n        },\n        changeDetection: 0\n      });\n    }\n  }\n  return BarVerticalNormalizedComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet BarVerticalStackedComponent = /*#__PURE__*/(() => {\n  class BarVerticalStackedComponent extends BaseChartComponent {\n    constructor() {\n      super(...arguments);\n      this.legend = false;\n      this.legendTitle = 'Legend';\n      this.legendPosition = LegendPosition.Right;\n      this.tooltipDisabled = false;\n      this.showGridLines = true;\n      this.activeEntries = [];\n      this.trimXAxisTicks = true;\n      this.trimYAxisTicks = true;\n      this.rotateXAxisTicks = true;\n      this.maxXAxisTickLength = 16;\n      this.maxYAxisTickLength = 16;\n      this.barPadding = 8;\n      this.roundDomains = false;\n      this.showDataLabel = false;\n      this.noBarWhenZero = true;\n      this.wrapTicks = false;\n      this.activate = new EventEmitter();\n      this.deactivate = new EventEmitter();\n      this.margin = [10, 20, 10, 20];\n      this.xAxisHeight = 0;\n      this.yAxisWidth = 0;\n      this.dataLabelMaxHeight = {\n        negative: 0,\n        positive: 0\n      };\n      this.isSSR = false;\n      this.barChartType = BarChartType;\n      this.trackBy = (index, item) => {\n        return item.name;\n      };\n    }\n    ngOnInit() {\n      if (isPlatformServer(this.platformId)) {\n        this.isSSR = true;\n      }\n    }\n    update() {\n      super.update();\n      if (!this.showDataLabel) {\n        this.dataLabelMaxHeight = {\n          negative: 0,\n          positive: 0\n        };\n      }\n      this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin,\n        showXAxis: this.xAxis,\n        showYAxis: this.yAxis,\n        xAxisHeight: this.xAxisHeight,\n        yAxisWidth: this.yAxisWidth,\n        showXLabel: this.showXAxisLabel,\n        showYLabel: this.showYAxisLabel,\n        showLegend: this.legend,\n        legendType: this.schemeType,\n        legendPosition: this.legendPosition\n      });\n      if (this.showDataLabel) {\n        this.dims.height -= this.dataLabelMaxHeight.negative;\n      }\n      this.formatDates();\n      this.groupDomain = this.getGroupDomain();\n      this.innerDomain = this.getInnerDomain();\n      this.valueDomain = this.getValueDomain();\n      this.xScale = this.getXScale();\n      this.yScale = this.getYScale();\n      this.setColors();\n      this.legendOptions = this.getLegendOptions();\n      this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n    }\n    getGroupDomain() {\n      const domain = [];\n      for (const group of this.results) {\n        if (!domain.includes(group.label)) {\n          domain.push(group.label);\n        }\n      }\n      return domain;\n    }\n    getInnerDomain() {\n      const domain = [];\n      for (const group of this.results) {\n        for (const d of group.series) {\n          if (!domain.includes(d.label)) {\n            domain.push(d.label);\n          }\n        }\n      }\n      return domain;\n    }\n    getValueDomain() {\n      const domain = [];\n      let smallest = 0;\n      let biggest = 0;\n      for (const group of this.results) {\n        let smallestSum = 0;\n        let biggestSum = 0;\n        for (const d of group.series) {\n          if (d.value < 0) {\n            smallestSum += d.value;\n          } else {\n            biggestSum += d.value;\n          }\n          smallest = d.value < smallest ? d.value : smallest;\n          biggest = d.value > biggest ? d.value : biggest;\n        }\n        domain.push(smallestSum);\n        domain.push(biggestSum);\n      }\n      domain.push(smallest);\n      domain.push(biggest);\n      const min = Math.min(0, ...domain);\n      const max = this.yScaleMax ? Math.max(this.yScaleMax, ...domain) : Math.max(...domain);\n      return [min, max];\n    }\n    getXScale() {\n      const spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);\n      return scaleBand().rangeRound([0, this.dims.width]).paddingInner(spacing).domain(this.groupDomain);\n    }\n    getYScale() {\n      const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n      return this.roundDomains ? scale.nice() : scale;\n    }\n    onDataLabelMaxHeightChanged(event, groupIndex) {\n      if (event.size.negative) {\n        this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n      } else {\n        this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n      }\n      if (groupIndex === this.results.length - 1) {\n        setTimeout(() => this.update());\n      }\n    }\n    groupTransform(group) {\n      return `translate(${this.xScale(group.name) || 0}, 0)`;\n    }\n    onClick(data, group) {\n      if (group) {\n        data.series = group.name;\n      }\n      this.select.emit(data);\n    }\n    setColors() {\n      let domain;\n      if (this.schemeType === ScaleType.Ordinal) {\n        domain = this.innerDomain;\n      } else {\n        domain = this.valueDomain;\n      }\n      this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n      const opts = {\n        scaleType: this.schemeType,\n        colors: undefined,\n        domain: [],\n        title: undefined,\n        position: this.legendPosition\n      };\n      if (opts.scaleType === ScaleType.Ordinal) {\n        opts.domain = this.innerDomain;\n        opts.colors = this.colors;\n        opts.title = this.legendTitle;\n      } else {\n        opts.domain = this.valueDomain;\n        opts.colors = this.colors.scale;\n      }\n      return opts;\n    }\n    updateYAxisWidth({\n      width\n    }) {\n      this.yAxisWidth = width;\n      this.update();\n    }\n    updateXAxisHeight({\n      height\n    }) {\n      this.xAxisHeight = height;\n      this.update();\n    }\n    onActivate(event, group, fromLegend = false) {\n      const item = Object.assign({}, event);\n      if (group) {\n        item.series = group.name;\n      }\n      const items = this.results.map(g => g.series).flat().filter(i => {\n        if (fromLegend) {\n          return i.label === item.name;\n        } else {\n          return i.name === item.name && i.series === item.series;\n        }\n      });\n      this.activeEntries = [...items];\n      this.activate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n      const item = Object.assign({}, event);\n      if (group) {\n        item.series = group.name;\n      }\n      this.activeEntries = this.activeEntries.filter(i => {\n        if (fromLegend) {\n          return i.label !== item.name;\n        } else {\n          return !(i.name === item.name && i.series === item.series);\n        }\n      });\n      this.deactivate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵBarVerticalStackedComponent_BaseFactory;\n        return function BarVerticalStackedComponent_Factory(__ngFactoryType__) {\n          return (ɵBarVerticalStackedComponent_BaseFactory || (ɵBarVerticalStackedComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarVerticalStackedComponent)))(__ngFactoryType__ || BarVerticalStackedComponent);\n        };\n      })();\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: BarVerticalStackedComponent,\n        selectors: [[\"ngx-charts-bar-vertical-stacked\"]],\n        contentQueries: function BarVerticalStackedComponent_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n          }\n        },\n        inputs: {\n          legend: \"legend\",\n          legendTitle: \"legendTitle\",\n          legendPosition: \"legendPosition\",\n          xAxis: \"xAxis\",\n          yAxis: \"yAxis\",\n          showXAxisLabel: \"showXAxisLabel\",\n          showYAxisLabel: \"showYAxisLabel\",\n          xAxisLabel: \"xAxisLabel\",\n          yAxisLabel: \"yAxisLabel\",\n          tooltipDisabled: \"tooltipDisabled\",\n          gradient: \"gradient\",\n          showGridLines: \"showGridLines\",\n          activeEntries: \"activeEntries\",\n          schemeType: \"schemeType\",\n          trimXAxisTicks: \"trimXAxisTicks\",\n          trimYAxisTicks: \"trimYAxisTicks\",\n          rotateXAxisTicks: \"rotateXAxisTicks\",\n          maxXAxisTickLength: \"maxXAxisTickLength\",\n          maxYAxisTickLength: \"maxYAxisTickLength\",\n          xAxisTickFormatting: \"xAxisTickFormatting\",\n          yAxisTickFormatting: \"yAxisTickFormatting\",\n          xAxisTicks: \"xAxisTicks\",\n          yAxisTicks: \"yAxisTicks\",\n          barPadding: \"barPadding\",\n          roundDomains: \"roundDomains\",\n          yScaleMax: \"yScaleMax\",\n          showDataLabel: \"showDataLabel\",\n          dataLabelFormatting: \"dataLabelFormatting\",\n          noBarWhenZero: \"noBarWhenZero\",\n          wrapTicks: \"wrapTicks\"\n        },\n        outputs: {\n          activate: \"activate\",\n          deactivate: \"deactivate\"\n        },\n        standalone: false,\n        features: [i0.ɵɵInheritDefinitionFeature],\n        decls: 6,\n        vars: 13,\n        consts: [[3, \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\", \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"xAxisOffset\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"dimensionsChanged\", \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"xAxisOffset\", \"wrapTicks\"], [\"ngx-charts-y-axis\", \"\", 3, \"dimensionsChanged\", \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-series-vertical\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\", \"type\", \"xScale\", \"yScale\", \"activeEntries\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"showDataLabel\", \"dataLabelFormatting\", \"seriesName\", \"animations\", \"noBarWhenZero\"]],\n        template: function BarVerticalStackedComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n            i0.ɵɵlistener(\"legendLabelActivate\", function BarVerticalStackedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n              return ctx.onActivate($event, undefined, true);\n            })(\"legendLabelDeactivate\", function BarVerticalStackedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n              return ctx.onDeactivate($event, undefined, true);\n            })(\"legendLabelClick\", function BarVerticalStackedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n              return ctx.onClick($event);\n            });\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(1, \"g\", 1);\n            i0.ɵɵtemplate(2, BarVerticalStackedComponent__svg_g_2_Template, 1, 11, \"g\", 2)(3, BarVerticalStackedComponent__svg_g_3_Template, 1, 10, \"g\", 3)(4, BarVerticalStackedComponent__svg_g_4_Template, 2, 2, \"g\", 4)(5, BarVerticalStackedComponent__svg_g_5_Template, 2, 2, \"g\", 4);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"transform\", ctx.transform);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n          }\n        },\n        dependencies: [i1.NgForOf, i1.NgIf, XAxisComponent, YAxisComponent, ChartComponent, SeriesVerticalComponent],\n        styles: [_c25],\n        encapsulation: 2,\n        data: {\n          animation: [trigger('animationState', [transition(':leave', [style({\n            opacity: 1,\n            transform: '*'\n          }), animate(500, style({\n            opacity: 0,\n            transform: 'scale(0)'\n          }))])])]\n        },\n        changeDetection: 0\n      });\n    }\n  }\n  return BarVerticalStackedComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet BarChartModule = /*#__PURE__*/(() => {\n  class BarChartModule {\n    static {\n      this.ɵfac = function BarChartModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || BarChartModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: BarChartModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [ChartCommonModule]\n      });\n    }\n  }\n  return BarChartModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction clonePoint(original) {\n  if (!original) {\n    return original;\n  }\n  return {\n    x: original.x,\n    y: original.y\n  };\n}\nfunction cloneVector2d(original) {\n  if (!original) {\n    return original;\n  }\n  return {\n    v1: clonePoint(original.v1),\n    v2: clonePoint(original.v2)\n  };\n}\nfunction cloneLineCoordinates(original) {\n  if (!original) {\n    return original;\n  }\n  return [cloneVector2d(original[0]), cloneVector2d(original[1]), cloneVector2d(original[2]), cloneVector2d(original[3])];\n}\nlet BoxComponent = /*#__PURE__*/(() => {\n  class BoxComponent {\n    constructor(element, cd) {\n      this.cd = cd;\n      this.roundEdges = true;\n      this.gradient = false;\n      this.offset = 0;\n      this.isActive = false;\n      this.animations = true;\n      this.noBarWhenZero = true;\n      this.select = new EventEmitter();\n      this.activate = new EventEmitter();\n      this.deactivate = new EventEmitter();\n      this.BarOrientation = BarOrientation;\n      this.initialized = false;\n      this.hasGradient = false;\n      this.hideBar = false;\n      this.nativeElm = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n      if (!this.initialized) {\n        this.loadAnimation();\n        this.initialized = true;\n      } else {\n        this.update();\n      }\n    }\n    update() {\n      this.boxStrokeWidth = Math.max(this.strokeWidth, 1);\n      this.whiskerStrokeWidth = Math.max(this.strokeWidth / 2, 1);\n      this.medianLineWidth = 1.5 * this.strokeWidth;\n      this.gradientId = 'grad' + id().toString();\n      this.gradientFill = `url(#${this.gradientId})`;\n      if (this.gradient) {\n        this.gradientStops = this.getGradient();\n        this.hasGradient = true;\n      } else {\n        this.hasGradient = false;\n      }\n      this.updateLineEl();\n      this.updatePathEl();\n      this.checkToHideBar();\n      this.maskLineId = 'mask' + id().toString();\n      this.maskLine = `url(#${this.maskLineId})`;\n      if (this.cd) {\n        this.cd.markForCheck();\n      }\n    }\n    loadAnimation() {\n      this.boxPath = this.oldPath = this.getStartingPath();\n      this.oldLineCoordinates = this.getStartingLineCoordinates();\n      setTimeout(this.update.bind(this), 100);\n    }\n    updatePathEl() {\n      const nodeBar = select(this.nativeElm).selectAll('.bar');\n      const path = this.getPath();\n      if (this.animations) {\n        nodeBar.attr('d', this.oldPath).transition().ease(easeSinInOut).duration(500).attrTween('d', this.pathTween(path, 4));\n      } else {\n        nodeBar.attr('d', path);\n      }\n      this.oldPath = path;\n    }\n    updateLineEl() {\n      const lineEl = select(this.nativeElm).selectAll('.bar-line');\n      const lineCoordinates = this.lineCoordinates;\n      const oldLineCoordinates = this.oldLineCoordinates;\n      if (this.animations) {\n        lineEl.attr('x1', (_, index) => oldLineCoordinates[index].v1.x).attr('y1', (_, index) => oldLineCoordinates[index].v1.y).attr('x2', (_, index) => oldLineCoordinates[index].v2.x).attr('y2', (_, index) => oldLineCoordinates[index].v2.y).transition().ease(easeSinInOut).duration(500).attr('x1', (_, index) => lineCoordinates[index].v1.x).attr('y1', (_, index) => lineCoordinates[index].v1.y).attr('x2', (_, index) => lineCoordinates[index].v2.x).attr('y2', (_, index) => lineCoordinates[index].v2.y);\n      } else {\n        lineEl.attr('x1', (_, index) => lineCoordinates[index].v1.x).attr('y1', (_, index) => lineCoordinates[index].v1.y).attr('x2', (_, index) => lineCoordinates[index].v2.x).attr('y2', (_, index) => lineCoordinates[index].v2.y);\n      }\n      this.oldLineCoordinates = [...lineCoordinates];\n    }\n    /**\n     * See [D3 Selections](https://www.d3indepth.com/selections/)\n     * @param d The joined data.\n     * @param index The index of the element within the selection\n     * @param node The node element (Line).\n     */\n    lineTween(attr, d, index, node) {\n      const nodeLineEl = node[index];\n      return nodeLineEl[attr].baseVal.value;\n    }\n    // TODO: Refactor into another .ts file if https://github.com/swimlane/ngx-charts/pull/1179 gets merged.\n    pathTween(d1, precision) {\n      return function () {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const path0 = this;\n        const path1 = this.cloneNode();\n        path1.setAttribute('d', d1);\n        const n0 = path0?.getTotalLength();\n        const n1 = path1?.getTotalLength();\n        // Uniform sampling of distance based on specified precision.\n        const distances = [0];\n        let i = 0;\n        const dt = precision / Math.max(n0, n1);\n        while (i < 1) {\n          distances.push(i);\n          i += dt;\n        }\n        distances.push(1);\n        // Compute point-interpolators at each distance.\n        const points = distances.map(t => {\n          const p0 = path0.getPointAtLength(t * n0);\n          const p1 = path1.getPointAtLength(t * n1);\n          return interpolate([p0.x, p0.y], [p1.x, p1.y]);\n        });\n        // 't': T is the fraction of time (between 0 and 1) since the transition began.\n        return t => {\n          return t < 1 ? 'M' + points.map(p => p(t)).join('L') : d1;\n        };\n      };\n    }\n    getStartingPath() {\n      if (!this.animations) {\n        return this.getPath();\n      }\n      const radius = this.roundEdges ? 1 : 0;\n      const {\n        x,\n        y\n      } = this.lineCoordinates[2].v1;\n      return roundedRect(x - this.width, y - 1, this.width, 2, radius, this.edges);\n    }\n    getPath() {\n      const radius = this.getRadius();\n      let path = '';\n      path = roundedRect(this.x, this.y, this.width, this.height, Math.min(this.height, radius), this.edges);\n      return path;\n    }\n    getStartingLineCoordinates() {\n      if (!this.animations) {\n        return [...this.lineCoordinates];\n      }\n      const lineCoordinates = cloneLineCoordinates(this.lineCoordinates);\n      lineCoordinates[1].v1.y = lineCoordinates[1].v2.y = lineCoordinates[3].v1.y = lineCoordinates[3].v2.y = lineCoordinates[0].v1.y = lineCoordinates[0].v2.y = lineCoordinates[2].v1.y;\n      return lineCoordinates;\n    }\n    getRadius() {\n      let radius = 0;\n      if (this.roundEdges && this.height > 5 && this.width > 5) {\n        radius = Math.floor(Math.min(5, this.height / 2, this.width / 2));\n      }\n      return radius;\n    }\n    getGradient() {\n      return [{\n        offset: 0,\n        color: this.fill,\n        opacity: this.getStartOpacity()\n      }, {\n        offset: 100,\n        color: this.fill,\n        opacity: 1\n      }];\n    }\n    getStartOpacity() {\n      if (this.roundEdges) {\n        return 0.2;\n      } else {\n        return 0.5;\n      }\n    }\n    get edges() {\n      let edges = [false, false, false, false];\n      if (this.roundEdges) {\n        edges = [true, true, true, true];\n      }\n      return edges;\n    }\n    onMouseEnter() {\n      this.activate.emit(this.data);\n    }\n    onMouseLeave() {\n      this.deactivate.emit(this.data);\n    }\n    checkToHideBar() {\n      this.hideBar = this.noBarWhenZero && this.height === 0;\n    }\n    static {\n      this.ɵfac = function BoxComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || BoxComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: BoxComponent,\n        selectors: [[\"g\", \"ngx-charts-box\", \"\"]],\n        hostBindings: function BoxComponent_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"mouseenter\", function BoxComponent_mouseenter_HostBindingHandler() {\n              return ctx.onMouseEnter();\n            })(\"mouseleave\", function BoxComponent_mouseleave_HostBindingHandler() {\n              return ctx.onMouseLeave();\n            });\n          }\n        },\n        inputs: {\n          strokeColor: \"strokeColor\",\n          strokeWidth: \"strokeWidth\",\n          fill: \"fill\",\n          data: \"data\",\n          width: \"width\",\n          height: \"height\",\n          x: \"x\",\n          y: \"y\",\n          lineCoordinates: \"lineCoordinates\",\n          roundEdges: \"roundEdges\",\n          gradient: \"gradient\",\n          gradientStops: \"gradientStops\",\n          offset: \"offset\",\n          isActive: \"isActive\",\n          animations: \"animations\",\n          ariaLabel: \"ariaLabel\",\n          noBarWhenZero: \"noBarWhenZero\"\n        },\n        outputs: {\n          select: \"select\",\n          activate: \"activate\",\n          deactivate: \"deactivate\"\n        },\n        standalone: false,\n        features: [i0.ɵɵNgOnChangesFeature],\n        attrs: _c30,\n        decls: 9,\n        vars: 13,\n        consts: [[\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\", 4, \"ngIf\"], [\"height\", \"100%\", \"width\", \"100%\", \"fill\", \"white\", \"fill-opacity\", \"1\"], [\"fill\", \"black\", \"fill-opacity\", \"1\", 1, \"bar\"], [\"role\", \"img\", \"tabIndex\", \"-1\", 1, \"bar\", 3, \"click\"], [\"class\", \"bar-line\", \"fill\", \"none\", 3, \"hidden\", 4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"], [\"fill\", \"none\", 1, \"bar-line\"]],\n        template: function BoxComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(0, \"defs\");\n            i0.ɵɵtemplate(1, BoxComponent__svg_g_1_Template, 1, 3, \"g\", 0);\n            i0.ɵɵelementStart(2, \"mask\")(3, \"g\");\n            i0.ɵɵelement(4, \"rect\", 1)(5, \"path\", 2);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(6, \"g\")(7, \"path\", 3);\n            i0.ɵɵlistener(\"click\", function BoxComponent_Template_path_click_7_listener() {\n              return ctx.select.emit(ctx.data);\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(8, BoxComponent__svg_line_8_Template, 1, 9, \"line\", 4);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.hasGradient);\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"id\", ctx.maskLineId);\n            i0.ɵɵadvance(3);\n            i0.ɵɵattribute(\"d\", ctx.boxPath);\n            i0.ɵɵadvance(2);\n            i0.ɵɵclassProp(\"active\", ctx.isActive)(\"hidden\", ctx.hideBar);\n            i0.ɵɵattribute(\"d\", ctx.boxPath)(\"stroke\", ctx.strokeColor)(\"stroke-width\", ctx.boxStrokeWidth)(\"aria-label\", ctx.ariaLabel)(\"fill\", ctx.hasGradient ? ctx.gradientFill : ctx.fill);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngForOf\", ctx.lineCoordinates);\n          }\n        },\n        dependencies: [i1.NgForOf, i1.NgIf, SvgLinearGradientComponent],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return BoxComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet BoxSeriesComponent = /*#__PURE__*/(() => {\n  class BoxSeriesComponent {\n    constructor() {\n      this.animations = true;\n      this.tooltipDisabled = false;\n      this.gradient = false;\n      this.select = new EventEmitter();\n      this.activate = new EventEmitter();\n      this.deactivate = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n      this.update();\n    }\n    onClick(data) {\n      this.select.emit(data);\n    }\n    update() {\n      this.updateTooltipSettings();\n      const width = this.series && this.series.series.length ? Math.round(this.xScale.bandwidth()) : null;\n      const seriesName = this.series.name;\n      // Calculate Quantile and Whiskers for each box serie.\n      this.counts = this.series.series;\n      const mappedCounts = this.counts.map(serie => Number(serie.value));\n      this.whiskers = [min(mappedCounts), max(mappedCounts)];\n      // We get the group count and must sort it in order to retrieve quantiles.\n      const groupCounts = this.counts.map(item => item.value).sort((a, b) => Number(a) - Number(b));\n      this.quartiles = this.getBoxQuantiles(groupCounts);\n      this.lineCoordinates = this.getLinesCoordinates(seriesName.toString(), this.whiskers, this.quartiles, width);\n      const value = this.quartiles[1];\n      const formattedLabel = formatLabel(seriesName);\n      const box = {\n        value,\n        data: this.counts,\n        label: seriesName,\n        formattedLabel,\n        width,\n        height: 0,\n        x: 0,\n        y: 0,\n        roundEdges: this.roundEdges,\n        quartiles: this.quartiles,\n        lineCoordinates: this.lineCoordinates\n      };\n      box.height = Math.abs(this.yScale(this.quartiles[0]) - this.yScale(this.quartiles[2]));\n      box.x = this.xScale(seriesName.toString());\n      box.y = this.yScale(this.quartiles[2]);\n      box.ariaLabel = formattedLabel + ' - Median: ' + value.toLocaleString();\n      if (this.colors.scaleType === ScaleType.Ordinal) {\n        box.color = this.colors.getColor(seriesName);\n      } else {\n        box.color = this.colors.getColor(this.quartiles[1]);\n        box.gradientStops = this.colors.getLinearGradientStops(this.quartiles[0], this.quartiles[2]);\n      }\n      const tooltipLabel = formattedLabel;\n      const formattedTooltipLabel = `\n    <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\n    <span class=\"tooltip-val\">\n      • Q1: ${this.quartiles[0]} • Q2: ${this.quartiles[1]} • Q3: ${this.quartiles[2]}<br>\n      • Min: ${this.whiskers[0]} • Max: ${this.whiskers[1]}\n    </span>`;\n      box.tooltipText = this.tooltipDisabled ? undefined : formattedTooltipLabel;\n      this.tooltipTitle = this.tooltipDisabled ? undefined : box.tooltipText;\n      this.box = box;\n    }\n    getBoxQuantiles(inputData) {\n      return [quantile(inputData, 0.25), quantile(inputData, 0.5), quantile(inputData, 0.75)];\n    }\n    getLinesCoordinates(seriesName, whiskers, quartiles, barWidth) {\n      // The X value is not being centered, so had to sum half the width to align it.\n      const commonX = this.xScale(seriesName);\n      const offsetX = commonX + barWidth / 2;\n      const medianLineWidth = Math.max(barWidth + 4 * this.strokeWidth, 1);\n      const whiskerLineWidth = Math.max(barWidth / 3, 1);\n      const whiskerZero = this.yScale(whiskers[0]);\n      const whiskerOne = this.yScale(whiskers[1]);\n      const median = this.yScale(quartiles[1]);\n      const topLine = {\n        v1: {\n          x: offsetX + whiskerLineWidth / 2,\n          y: whiskerZero\n        },\n        v2: {\n          x: offsetX - whiskerLineWidth / 2,\n          y: whiskerZero\n        }\n      };\n      const medianLine = {\n        v1: {\n          x: offsetX + medianLineWidth / 2,\n          y: median\n        },\n        v2: {\n          x: offsetX - medianLineWidth / 2,\n          y: median\n        }\n      };\n      const bottomLine = {\n        v1: {\n          x: offsetX + whiskerLineWidth / 2,\n          y: whiskerOne\n        },\n        v2: {\n          x: offsetX - whiskerLineWidth / 2,\n          y: whiskerOne\n        }\n      };\n      const verticalLine = {\n        v1: {\n          x: offsetX,\n          y: whiskerZero\n        },\n        v2: {\n          x: offsetX,\n          y: whiskerOne\n        }\n      };\n      return [verticalLine, topLine, medianLine, bottomLine];\n    }\n    updateTooltipSettings() {\n      if (this.tooltipDisabled) {\n        this.tooltipPlacement = undefined;\n        this.tooltipType = undefined;\n      } else {\n        if (!this.tooltipPlacement) {\n          this.tooltipPlacement = PlacementTypes.Top;\n        }\n        if (!this.tooltipType) {\n          this.tooltipType = StyleTypes.tooltip;\n        }\n      }\n    }\n    static {\n      this.ɵfac = function BoxSeriesComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || BoxSeriesComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: BoxSeriesComponent,\n        selectors: [[\"g\", \"ngx-charts-box-series\", \"\"]],\n        inputs: {\n          dims: \"dims\",\n          series: \"series\",\n          xScale: \"xScale\",\n          yScale: \"yScale\",\n          colors: \"colors\",\n          animations: \"animations\",\n          strokeColor: \"strokeColor\",\n          strokeWidth: \"strokeWidth\",\n          tooltipDisabled: \"tooltipDisabled\",\n          tooltipTemplate: \"tooltipTemplate\",\n          tooltipPlacement: \"tooltipPlacement\",\n          tooltipType: \"tooltipType\",\n          roundEdges: \"roundEdges\",\n          gradient: \"gradient\"\n        },\n        outputs: {\n          select: \"select\",\n          activate: \"activate\",\n          deactivate: \"deactivate\"\n        },\n        standalone: false,\n        features: [i0.ɵɵNgOnChangesFeature],\n        attrs: _c31,\n        decls: 1,\n        vars: 22,\n        consts: [[\"ngx-charts-box\", \"\", \"ngx-tooltip\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"width\", \"height\", \"x\", \"y\", \"roundEdges\", \"fill\", \"gradientStops\", \"strokeColor\", \"strokeWidth\", \"data\", \"lineCoordinates\", \"gradient\", \"ariaLabel\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"animations\"]],\n        template: function BoxSeriesComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(0, \"g\", 0);\n            i0.ɵɵlistener(\"select\", function BoxSeriesComponent_Template_g_select_0_listener($event) {\n              return ctx.onClick($event);\n            })(\"activate\", function BoxSeriesComponent_Template_g_activate_0_listener($event) {\n              return ctx.activate.emit($event);\n            })(\"deactivate\", function BoxSeriesComponent_Template_g_deactivate_0_listener($event) {\n              return ctx.deactivate.emit($event);\n            });\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"@animationState\", \"active\")(\"@.disabled\", !ctx.animations)(\"width\", ctx.box.width)(\"height\", ctx.box.height)(\"x\", ctx.box.x)(\"y\", ctx.box.y)(\"roundEdges\", ctx.box.roundEdges)(\"fill\", ctx.box.color)(\"gradientStops\", ctx.box.gradientStops)(\"strokeColor\", ctx.strokeColor)(\"strokeWidth\", ctx.strokeWidth)(\"data\", ctx.box.data)(\"lineCoordinates\", ctx.box.lineCoordinates)(\"gradient\", ctx.gradient)(\"ariaLabel\", ctx.box.ariaLabel)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipPlacement\", ctx.tooltipPlacement)(\"tooltipType\", ctx.tooltipType)(\"tooltipTitle\", ctx.tooltipTitle)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"tooltipContext\", ctx.box.data)(\"animations\", ctx.animations);\n          }\n        },\n        dependencies: [TooltipDirective, BoxComponent],\n        encapsulation: 2,\n        data: {\n          animation: [trigger('animationState', [transition(':leave', [style({\n            opacity: 1\n          }), animate(500, style({\n            opacity: 0\n          }))])])]\n        },\n        changeDetection: 0\n      });\n    }\n  }\n  return BoxSeriesComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet BoxChartComponent = /*#__PURE__*/(() => {\n  class BoxChartComponent extends BaseChartComponent {\n    constructor() {\n      super(...arguments);\n      /** Show or hide the legend. */\n      this.legend = false;\n      this.legendPosition = LegendPosition.Right;\n      this.legendTitle = 'Legend';\n      this.showGridLines = true;\n      this.xAxis = true;\n      this.yAxis = true;\n      this.showXAxisLabel = true;\n      this.showYAxisLabel = true;\n      this.roundDomains = false;\n      this.roundEdges = true;\n      this.strokeColor = '#FFFFFF';\n      this.strokeWidth = 2;\n      this.tooltipDisabled = false;\n      this.wrapTicks = false;\n      this.select = new EventEmitter();\n      this.activate = new EventEmitter();\n      this.deactivate = new EventEmitter();\n      /** Chart Margins (For each side, counterclock wise). */\n      this.margin = [10, 20, 10, 20];\n      /** Chart X axis dimension. */\n      this.xAxisHeight = 0;\n      /** Chart Y axis dimension. */\n      this.yAxisWidth = 0;\n    }\n    trackBy(index, item) {\n      return item.name;\n    }\n    update() {\n      super.update();\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin,\n        showXAxis: this.xAxis,\n        showYAxis: this.yAxis,\n        xAxisHeight: this.xAxisHeight,\n        yAxisWidth: this.yAxisWidth,\n        showXLabel: this.showXAxisLabel,\n        showYLabel: this.showYAxisLabel,\n        showLegend: this.legend,\n        legendPosition: this.legendPosition\n      });\n      this.xDomain = this.getXDomain();\n      this.yDomain = this.getYDomain();\n      this.seriesDomain = this.getSeriesDomain();\n      this.setScales();\n      this.setColors();\n      this.legendOptions = this.getLegendOptions();\n      this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    setColors() {\n      let domain = [];\n      if (this.schemeType === ScaleType.Ordinal) {\n        domain = this.seriesDomain;\n      } else {\n        domain = this.yDomain;\n      }\n      this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    setScales() {\n      this.xScale = this.getXScale(this.xDomain, this.dims.width);\n      this.yScale = this.getYScale(this.yDomain, this.dims.height);\n    }\n    getXScale(domain, width) {\n      const scale = scaleBand().domain(domain.map(d => d.toString())).rangeRound([0, width]).padding(0.5);\n      return scale;\n    }\n    getYScale(domain, height) {\n      const scale = scaleLinear().domain(domain).range([height, 0]);\n      return this.roundDomains ? scale.nice() : scale;\n    }\n    getUniqueBoxChartXDomainValues(results) {\n      const valueSet = new Set();\n      for (const result of results) {\n        valueSet.add(result.name);\n      }\n      return Array.from(valueSet);\n    }\n    getXDomain() {\n      let domain = [];\n      const values = this.getUniqueBoxChartXDomainValues(this.results);\n      let min;\n      let max;\n      if (typeof values[0] === 'string') {\n        domain = values.map(val => val.toString());\n      } else if (typeof values[0] === 'number') {\n        const mappedValues = values.map(v => Number(v));\n        min = Math.min(...mappedValues);\n        max = Math.max(...mappedValues);\n        domain = [min, max];\n      } else {\n        const mappedValues = values.map(v => Number(new Date(v)));\n        min = Math.min(...mappedValues);\n        max = Math.max(...mappedValues);\n        domain = [new Date(min), new Date(max)];\n      }\n      return domain;\n    }\n    getYDomain() {\n      const domain = [];\n      for (const results of this.results) {\n        for (const d of results.series) {\n          if (domain.indexOf(d.value) < 0) {\n            domain.push(d.value);\n          }\n        }\n      }\n      const values = [...domain];\n      const mappedValues = values.map(v => Number(v));\n      const min = Math.min(...mappedValues);\n      const max = Math.max(...mappedValues);\n      return [min, max];\n    }\n    getSeriesDomain() {\n      return this.results.map(d => `${d.name}`);\n    }\n    updateYAxisWidth({\n      width\n    }) {\n      this.yAxisWidth = width;\n      this.update();\n    }\n    updateXAxisHeight({\n      height\n    }) {\n      this.xAxisHeight = height;\n      this.update();\n    }\n    onClick(data) {\n      this.select.emit(data);\n    }\n    onActivate(data) {\n      this.activate.emit(data);\n    }\n    onDeactivate(data) {\n      this.deactivate.emit(data);\n    }\n    getLegendOptions() {\n      const legendOpts = {\n        scaleType: this.schemeType,\n        colors: this.colors,\n        domain: [],\n        position: this.legendPosition,\n        title: this.legendTitle\n      };\n      if (this.schemeType === ScaleType.Ordinal) {\n        legendOpts.domain = this.xDomain;\n        legendOpts.colors = this.colors;\n      } else {\n        legendOpts.domain = this.yDomain;\n        legendOpts.colors = this.colors.scale;\n      }\n      return legendOpts;\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵBoxChartComponent_BaseFactory;\n        return function BoxChartComponent_Factory(__ngFactoryType__) {\n          return (ɵBoxChartComponent_BaseFactory || (ɵBoxChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BoxChartComponent)))(__ngFactoryType__ || BoxChartComponent);\n        };\n      })();\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: BoxChartComponent,\n        selectors: [[\"ngx-charts-box-chart\"]],\n        contentQueries: function BoxChartComponent_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n          }\n        },\n        inputs: {\n          legend: \"legend\",\n          legendPosition: \"legendPosition\",\n          legendTitle: \"legendTitle\",\n          legendOptionsConfig: \"legendOptionsConfig\",\n          showGridLines: \"showGridLines\",\n          xAxis: \"xAxis\",\n          yAxis: \"yAxis\",\n          showXAxisLabel: \"showXAxisLabel\",\n          showYAxisLabel: \"showYAxisLabel\",\n          roundDomains: \"roundDomains\",\n          xAxisLabel: \"xAxisLabel\",\n          yAxisLabel: \"yAxisLabel\",\n          roundEdges: \"roundEdges\",\n          strokeColor: \"strokeColor\",\n          strokeWidth: \"strokeWidth\",\n          tooltipDisabled: \"tooltipDisabled\",\n          gradient: \"gradient\",\n          wrapTicks: \"wrapTicks\"\n        },\n        outputs: {\n          select: \"select\",\n          activate: \"activate\",\n          deactivate: \"deactivate\"\n        },\n        standalone: false,\n        features: [i0.ɵɵInheritDefinitionFeature],\n        decls: 6,\n        vars: 23,\n        consts: [[3, \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"view\", \"showLegend\", \"legendOptions\", \"animations\"], [1, \"box-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"dimensionsChanged\", \"showGridLines\", \"dims\", \"xScale\", \"showLabel\", \"labelText\", \"wrapTicks\"], [\"ngx-charts-y-axis\", \"\", 3, \"dimensionsChanged\", \"showGridLines\", \"dims\", \"yScale\", \"showLabel\", \"labelText\", \"wrapTicks\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-box-series\", \"\", 3, \"activate\", \"deactivate\", \"select\", \"xScale\", \"yScale\", \"colors\", \"roundEdges\", \"strokeColor\", \"strokeWidth\", \"tooltipDisabled\", \"tooltipTemplate\", \"series\", \"dims\", \"animations\", \"gradient\"]],\n        template: function BoxChartComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n            i0.ɵɵlistener(\"legendLabelClick\", function BoxChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n              return ctx.onClick($event);\n            })(\"legendLabelActivate\", function BoxChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n              return ctx.onActivate($event);\n            })(\"legendLabelDeactivate\", function BoxChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n              return ctx.onDeactivate($event);\n            });\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(1, \"g\", 1)(2, \"g\", 2);\n            i0.ɵɵlistener(\"dimensionsChanged\", function BoxChartComponent_Template_g_dimensionsChanged_2_listener($event) {\n              return ctx.updateXAxisHeight($event);\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"g\", 3);\n            i0.ɵɵlistener(\"dimensionsChanged\", function BoxChartComponent_Template_g_dimensionsChanged_3_listener($event) {\n              return ctx.updateYAxisWidth($event);\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(4, \"g\");\n            i0.ɵɵtemplate(5, BoxChartComponent__svg_g_5_Template, 2, 12, \"g\", 4);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(20, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"animations\", ctx.animations);\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"transform\", ctx.transform);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"showGridLines\", ctx.showGridLines)(\"dims\", ctx.dims)(\"xScale\", ctx.xScale)(\"showLabel\", ctx.showXAxisLabel)(\"labelText\", ctx.xAxisLabel)(\"wrapTicks\", ctx.wrapTicks);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"showGridLines\", ctx.showGridLines)(\"dims\", ctx.dims)(\"yScale\", ctx.yScale)(\"showLabel\", ctx.showYAxisLabel)(\"labelText\", ctx.yAxisLabel)(\"wrapTicks\", ctx.wrapTicks);\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"transform\", ctx.transform);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngForOf\", ctx.results)(\"ngForTrackBy\", ctx.trackBy);\n          }\n        },\n        dependencies: [i1.NgForOf, XAxisComponent, YAxisComponent, ChartComponent, BoxSeriesComponent],\n        styles: [_c25],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return BoxChartComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet BoxChartModule = /*#__PURE__*/(() => {\n  class BoxChartModule {\n    static {\n      this.ɵfac = function BoxChartModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || BoxChartModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: BoxChartModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [ChartCommonModule]\n      });\n    }\n  }\n  return BoxChartModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction getDomain(values, scaleType, autoScale, minVal, maxVal) {\n  let domain = [];\n  if (scaleType === ScaleType.Linear) {\n    values = values.map(v => Number(v));\n    if (!autoScale) {\n      values.push(0);\n    }\n  }\n  if (scaleType === ScaleType.Time || scaleType === ScaleType.Linear) {\n    const min = minVal || minVal === 0 ? minVal : Math.min(...values);\n    const max = maxVal ? maxVal : Math.max(...values);\n    domain = [min, max];\n  } else {\n    domain = values;\n  }\n  return domain;\n}\nfunction getScale(domain, range, scaleType, roundDomains) {\n  switch (scaleType) {\n    case ScaleType.Time:\n      return scaleTime().range(range).domain(domain);\n    case ScaleType.Linear:\n      {\n        const scale = scaleLinear().range(range).domain(domain);\n        if (roundDomains) {\n          return scale.nice();\n        }\n        return scale;\n      }\n    case ScaleType.Ordinal:\n      return scalePoint().range([range[0], range[1]]).domain(domain.map(r => r.toString()));\n    default:\n      return undefined;\n  }\n}\nlet BubbleSeriesComponent = /*#__PURE__*/(() => {\n  class BubbleSeriesComponent {\n    constructor(platformId) {\n      this.platformId = platformId;\n      this.tooltipDisabled = false;\n      this.select = new EventEmitter();\n      this.activate = new EventEmitter();\n      this.deactivate = new EventEmitter();\n      this.placementTypes = PlacementTypes;\n      this.styleTypes = StyleTypes;\n      this.isSSR = false;\n    }\n    ngOnInit() {\n      if (isPlatformServer(this.platformId)) {\n        this.isSSR = true;\n      }\n    }\n    ngOnChanges(changes) {\n      this.update();\n    }\n    update() {\n      this.circles = this.getCircles();\n    }\n    getCircles() {\n      const seriesName = this.data.name;\n      return this.data.series.map((d, i) => {\n        if (typeof d.y !== 'undefined' && typeof d.x !== 'undefined') {\n          const y = d.y;\n          const x = d.x;\n          const r = d.r;\n          const radius = this.rScale(r || 1);\n          const tooltipLabel = formatLabel(d.name);\n          const cx = this.xScaleType === ScaleType.Linear ? this.xScale(Number(x)) : this.xScale(x);\n          const cy = this.yScaleType === ScaleType.Linear ? this.yScale(Number(y)) : this.yScale(y);\n          const color = this.colors.scaleType === ScaleType.Linear ? this.colors.getColor(r) : this.colors.getColor(seriesName);\n          const isActive = !this.activeEntries.length ? true : this.isActive({\n            name: seriesName\n          });\n          const opacity = isActive ? 1 : 0.3;\n          const data = Object.assign({}, d, {\n            series: seriesName,\n            name: d.name,\n            value: d.y,\n            x: d.x,\n            radius: d.r\n          });\n          return {\n            data,\n            x,\n            y,\n            r,\n            classNames: [`circle-data-${i}`],\n            value: y,\n            label: x,\n            cx,\n            cy,\n            radius,\n            tooltipLabel,\n            color,\n            opacity,\n            seriesName,\n            isActive,\n            transform: `translate(${cx},${cy})`\n          };\n        }\n      }).filter(circle => circle !== undefined);\n    }\n    getTooltipText(circle) {\n      const hasRadius = typeof circle.r !== 'undefined';\n      const hasTooltipLabel = circle.tooltipLabel && circle.tooltipLabel.length;\n      const hasSeriesName = circle.seriesName && circle.seriesName.length;\n      const radiusValue = hasRadius ? formatLabel(circle.r) : '';\n      const xAxisLabel = this.xAxisLabel && this.xAxisLabel !== '' ? `${this.xAxisLabel}:` : '';\n      const yAxisLabel = this.yAxisLabel && this.yAxisLabel !== '' ? `${this.yAxisLabel}:` : '';\n      const x = formatLabel(circle.x);\n      const y = formatLabel(circle.y);\n      const name = hasSeriesName && hasTooltipLabel ? `${circle.seriesName} • ${circle.tooltipLabel}` : circle.seriesName + circle.tooltipLabel;\n      const tooltipTitle = hasSeriesName || hasTooltipLabel ? `<span class=\"tooltip-label\">${escapeLabel(name)}</span>` : '';\n      return `\n      ${tooltipTitle}\n      <span class=\"tooltip-label\">\n        <label>${escapeLabel(xAxisLabel)}</label> ${escapeLabel(x)}<br />\n        <label>${escapeLabel(yAxisLabel)}</label> ${escapeLabel(y)}\n      </span>\n      <span class=\"tooltip-val\">\n        ${escapeLabel(radiusValue)}\n      </span>\n    `;\n    }\n    onClick(data) {\n      this.select.emit(data);\n    }\n    isActive(entry) {\n      if (!this.activeEntries) return false;\n      const item = this.activeEntries.find(d => {\n        return entry.name === d.name;\n      });\n      return item !== undefined;\n    }\n    isVisible(circle) {\n      if (this.activeEntries.length > 0) {\n        return this.isActive({\n          name: circle.seriesName\n        });\n      }\n      return circle.opacity !== 0;\n    }\n    activateCircle(circle) {\n      circle.barVisible = true;\n      this.activate.emit({\n        name: this.data.name\n      });\n    }\n    deactivateCircle(circle) {\n      circle.barVisible = false;\n      this.deactivate.emit({\n        name: this.data.name\n      });\n    }\n    trackBy(index, circle) {\n      return `${circle.data.series} ${circle.data.name}`;\n    }\n    static {\n      this.ɵfac = function BubbleSeriesComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || BubbleSeriesComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: BubbleSeriesComponent,\n        selectors: [[\"g\", \"ngx-charts-bubble-series\", \"\"]],\n        inputs: {\n          data: \"data\",\n          xScale: \"xScale\",\n          yScale: \"yScale\",\n          rScale: \"rScale\",\n          xScaleType: \"xScaleType\",\n          yScaleType: \"yScaleType\",\n          colors: \"colors\",\n          visibleValue: \"visibleValue\",\n          activeEntries: \"activeEntries\",\n          xAxisLabel: \"xAxisLabel\",\n          yAxisLabel: \"yAxisLabel\",\n          tooltipDisabled: \"tooltipDisabled\",\n          tooltipTemplate: \"tooltipTemplate\"\n        },\n        outputs: {\n          select: \"select\",\n          activate: \"activate\",\n          deactivate: \"deactivate\"\n        },\n        standalone: false,\n        features: [i0.ɵɵNgOnChangesFeature],\n        attrs: _c32,\n        decls: 1,\n        vars: 2,\n        consts: [[4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-circle\", \"\", \"class\", \"circle\", \"ngx-tooltip\", \"\", 3, \"cx\", \"cy\", \"r\", \"fill\", \"opacity\", \"active\", \"pointerEvents\", \"data\", \"classNames\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\", 4, \"ngIf\"], [\"ngx-charts-circle\", \"\", \"ngx-tooltip\", \"\", 1, \"circle\", 3, \"select\", \"activate\", \"deactivate\", \"cx\", \"cy\", \"r\", \"fill\", \"pointerEvents\", \"data\", \"classNames\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\"]],\n        template: function BubbleSeriesComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵtemplate(0, BubbleSeriesComponent__svg_g_0_Template, 4, 3, \"g\", 0);\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"ngForOf\", ctx.circles)(\"ngForTrackBy\", ctx.trackBy);\n          }\n        },\n        dependencies: [i1.NgForOf, i1.NgIf, TooltipDirective, CircleComponent],\n        encapsulation: 2,\n        data: {\n          animation: [trigger('animationState', [transition(':enter', [style({\n            opacity: 0,\n            transform: 'scale(0)'\n          }), animate(250, style({\n            opacity: 1,\n            transform: 'scale(1)'\n          }))])])]\n        },\n        changeDetection: 0\n      });\n    }\n  }\n  return BubbleSeriesComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet BubbleChartComponent = /*#__PURE__*/(() => {\n  class BubbleChartComponent extends BaseChartComponent {\n    constructor() {\n      super(...arguments);\n      this.showGridLines = true;\n      this.legend = false;\n      this.legendTitle = 'Legend';\n      this.legendPosition = LegendPosition.Right;\n      this.xAxis = true;\n      this.yAxis = true;\n      this.trimXAxisTicks = true;\n      this.trimYAxisTicks = true;\n      this.rotateXAxisTicks = true;\n      this.maxXAxisTickLength = 16;\n      this.maxYAxisTickLength = 16;\n      this.roundDomains = false;\n      this.maxRadius = 10;\n      this.minRadius = 3;\n      this.schemeType = ScaleType.Ordinal;\n      this.tooltipDisabled = false;\n      this.wrapTicks = false;\n      this.activate = new EventEmitter();\n      this.deactivate = new EventEmitter();\n      this.scaleType = ScaleType.Linear;\n      this.margin = [10, 20, 10, 20];\n      this.bubblePadding = [0, 0, 0, 0];\n      this.xAxisHeight = 0;\n      this.yAxisWidth = 0;\n      this.activeEntries = [];\n      this.isSSR = false;\n    }\n    ngOnInit() {\n      if (isPlatformServer(this.platformId)) {\n        this.isSSR = true;\n      }\n    }\n    update() {\n      super.update();\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin,\n        showXAxis: this.xAxis,\n        showYAxis: this.yAxis,\n        xAxisHeight: this.xAxisHeight,\n        yAxisWidth: this.yAxisWidth,\n        showXLabel: this.showXAxisLabel,\n        showYLabel: this.showYAxisLabel,\n        showLegend: this.legend,\n        legendType: this.schemeType,\n        legendPosition: this.legendPosition\n      });\n      this.seriesDomain = this.results.map(d => d.name);\n      this.rDomain = this.getRDomain();\n      this.xDomain = this.getXDomain();\n      this.yDomain = this.getYDomain();\n      this.transform = `translate(${this.dims.xOffset},${this.margin[0]})`;\n      const colorDomain = this.schemeType === ScaleType.Ordinal ? this.seriesDomain : this.rDomain;\n      this.colors = new ColorHelper(this.scheme, this.schemeType, colorDomain, this.customColors);\n      this.data = this.results;\n      this.minRadius = Math.max(this.minRadius, 1);\n      this.maxRadius = Math.max(this.maxRadius, 1);\n      this.rScale = this.getRScale(this.rDomain, [this.minRadius, this.maxRadius]);\n      this.bubblePadding = [0, 0, 0, 0];\n      this.setScales();\n      this.bubblePadding = this.getBubblePadding();\n      this.setScales();\n      this.legendOptions = this.getLegendOptions();\n      this.clipPathId = 'clip' + id().toString();\n      this.clipPath = `url(#${this.clipPathId})`;\n    }\n    hideCircles() {\n      this.deactivateAll();\n    }\n    onClick(data, series) {\n      if (series) {\n        data.series = series.name;\n      }\n      this.select.emit(data);\n    }\n    getBubblePadding() {\n      let yMin = 0;\n      let xMin = 0;\n      let yMax = this.dims.height;\n      let xMax = this.dims.width;\n      for (const s of this.data) {\n        for (const d of s.series) {\n          const r = this.rScale(d.r);\n          const cx = this.xScaleType === ScaleType.Linear ? this.xScale(Number(d.x)) : this.xScale(d.x);\n          const cy = this.yScaleType === ScaleType.Linear ? this.yScale(Number(d.y)) : this.yScale(d.y);\n          xMin = Math.max(r - cx, xMin);\n          yMin = Math.max(r - cy, yMin);\n          yMax = Math.max(cy + r, yMax);\n          xMax = Math.max(cx + r, xMax);\n        }\n      }\n      xMax = Math.max(xMax - this.dims.width, 0);\n      yMax = Math.max(yMax - this.dims.height, 0);\n      return [yMin, xMax, yMax, xMin];\n    }\n    setScales() {\n      let width = this.dims.width;\n      if (this.xScaleMin === undefined && this.xScaleMax === undefined) {\n        width = width - this.bubblePadding[1];\n      }\n      let height = this.dims.height;\n      if (this.yScaleMin === undefined && this.yScaleMax === undefined) {\n        height = height - this.bubblePadding[2];\n      }\n      this.xScale = this.getXScale(this.xDomain, width);\n      this.yScale = this.getYScale(this.yDomain, height);\n    }\n    getYScale(domain, height) {\n      return getScale(domain, [height, this.bubblePadding[0]], this.yScaleType, this.roundDomains);\n    }\n    getXScale(domain, width) {\n      return getScale(domain, [this.bubblePadding[3], width], this.xScaleType, this.roundDomains);\n    }\n    getRScale(domain, range) {\n      const scale = scaleLinear().range(range).domain(domain);\n      return this.roundDomains ? scale.nice() : scale;\n    }\n    getLegendOptions() {\n      const opts = {\n        scaleType: this.schemeType,\n        colors: undefined,\n        domain: [],\n        position: this.legendPosition,\n        title: undefined\n      };\n      if (opts.scaleType === ScaleType.Ordinal) {\n        opts.domain = this.seriesDomain;\n        opts.colors = this.colors;\n        opts.title = this.legendTitle;\n      } else {\n        opts.domain = this.rDomain;\n        opts.colors = this.colors.scale;\n      }\n      return opts;\n    }\n    getXDomain() {\n      const values = [];\n      for (const results of this.results) {\n        for (const d of results.series) {\n          if (!values.includes(d.x)) {\n            values.push(d.x);\n          }\n        }\n      }\n      this.xScaleType = getScaleType(values);\n      return getDomain(values, this.xScaleType, this.autoScale, this.xScaleMin, this.xScaleMax);\n    }\n    getYDomain() {\n      const values = [];\n      for (const results of this.results) {\n        for (const d of results.series) {\n          if (!values.includes(d.y)) {\n            values.push(d.y);\n          }\n        }\n      }\n      this.yScaleType = getScaleType(values);\n      return getDomain(values, this.yScaleType, this.autoScale, this.yScaleMin, this.yScaleMax);\n    }\n    getRDomain() {\n      let min = Infinity;\n      let max = -Infinity;\n      for (const results of this.results) {\n        for (const d of results.series) {\n          const value = Number(d.r) || 1;\n          min = Math.min(min, value);\n          max = Math.max(max, value);\n        }\n      }\n      return [min, max];\n    }\n    updateYAxisWidth({\n      width\n    }) {\n      this.yAxisWidth = width;\n      this.update();\n    }\n    updateXAxisHeight({\n      height\n    }) {\n      this.xAxisHeight = height;\n      this.update();\n    }\n    onActivate(item) {\n      const idx = this.activeEntries.findIndex(d => {\n        return d.name === item.name;\n      });\n      if (idx > -1) {\n        return;\n      }\n      this.activeEntries = [item, ...this.activeEntries];\n      this.activate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n    onDeactivate(item) {\n      const idx = this.activeEntries.findIndex(d => {\n        return d.name === item.name;\n      });\n      this.activeEntries.splice(idx, 1);\n      this.activeEntries = [...this.activeEntries];\n      this.deactivate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n    deactivateAll() {\n      this.activeEntries = [...this.activeEntries];\n      for (const entry of this.activeEntries) {\n        this.deactivate.emit({\n          value: entry,\n          entries: []\n        });\n      }\n      this.activeEntries = [];\n    }\n    trackBy(index, item) {\n      return `${item.name}`;\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵBubbleChartComponent_BaseFactory;\n        return function BubbleChartComponent_Factory(__ngFactoryType__) {\n          return (ɵBubbleChartComponent_BaseFactory || (ɵBubbleChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BubbleChartComponent)))(__ngFactoryType__ || BubbleChartComponent);\n        };\n      })();\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: BubbleChartComponent,\n        selectors: [[\"ngx-charts-bubble-chart\"]],\n        contentQueries: function BubbleChartComponent_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n          }\n        },\n        hostBindings: function BubbleChartComponent_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"mouseleave\", function BubbleChartComponent_mouseleave_HostBindingHandler() {\n              return ctx.hideCircles();\n            });\n          }\n        },\n        inputs: {\n          showGridLines: \"showGridLines\",\n          legend: \"legend\",\n          legendTitle: \"legendTitle\",\n          legendPosition: \"legendPosition\",\n          xAxis: \"xAxis\",\n          yAxis: \"yAxis\",\n          showXAxisLabel: \"showXAxisLabel\",\n          showYAxisLabel: \"showYAxisLabel\",\n          xAxisLabel: \"xAxisLabel\",\n          yAxisLabel: \"yAxisLabel\",\n          trimXAxisTicks: \"trimXAxisTicks\",\n          trimYAxisTicks: \"trimYAxisTicks\",\n          rotateXAxisTicks: \"rotateXAxisTicks\",\n          maxXAxisTickLength: \"maxXAxisTickLength\",\n          maxYAxisTickLength: \"maxYAxisTickLength\",\n          xAxisTickFormatting: \"xAxisTickFormatting\",\n          yAxisTickFormatting: \"yAxisTickFormatting\",\n          xAxisTicks: \"xAxisTicks\",\n          yAxisTicks: \"yAxisTicks\",\n          roundDomains: \"roundDomains\",\n          maxRadius: \"maxRadius\",\n          minRadius: \"minRadius\",\n          autoScale: \"autoScale\",\n          schemeType: \"schemeType\",\n          tooltipDisabled: \"tooltipDisabled\",\n          xScaleMin: \"xScaleMin\",\n          xScaleMax: \"xScaleMax\",\n          yScaleMin: \"yScaleMin\",\n          yScaleMax: \"yScaleMax\",\n          wrapTicks: \"wrapTicks\"\n        },\n        outputs: {\n          activate: \"activate\",\n          deactivate: \"deactivate\"\n        },\n        standalone: false,\n        features: [i0.ɵɵInheritDefinitionFeature],\n        decls: 10,\n        vars: 19,\n        consts: [[3, \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"view\", \"showLegend\", \"activeEntries\", \"legendOptions\", \"animations\"], [1, \"bubble-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"showGridLines\", \"dims\", \"xScale\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"showGridLines\", \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"x\", \"0\", \"y\", \"0\", 1, \"bubble-chart-area\", 2, \"fill\", \"rgb(255, 0, 0)\", \"opacity\", \"0\", \"cursor\", \"'auto'\", 3, \"mouseenter\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"dimensionsChanged\", \"showGridLines\", \"dims\", \"xScale\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\"], [\"ngx-charts-y-axis\", \"\", 3, \"dimensionsChanged\", \"showGridLines\", \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-bubble-series\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"xScale\", \"yScale\", \"rScale\", \"xScaleType\", \"yScaleType\", \"xAxisLabel\", \"yAxisLabel\", \"colors\", \"data\", \"activeEntries\", \"tooltipDisabled\", \"tooltipTemplate\"]],\n        template: function BubbleChartComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n            i0.ɵɵlistener(\"legendLabelClick\", function BubbleChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n              return ctx.onClick($event);\n            })(\"legendLabelActivate\", function BubbleChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n              return ctx.onActivate($event);\n            })(\"legendLabelDeactivate\", function BubbleChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n              return ctx.onDeactivate($event);\n            });\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(1, \"defs\")(2, \"clipPath\");\n            i0.ɵɵelement(3, \"rect\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(4, \"g\", 1);\n            i0.ɵɵtemplate(5, BubbleChartComponent__svg_g_5_Template, 1, 11, \"g\", 2)(6, BubbleChartComponent__svg_g_6_Template, 1, 10, \"g\", 3);\n            i0.ɵɵelementStart(7, \"rect\", 4);\n            i0.ɵɵlistener(\"mouseenter\", function BubbleChartComponent_Template_rect_mouseenter_7_listener() {\n              return ctx.deactivateAll();\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(8, BubbleChartComponent__svg_g_8_Template, 2, 3, \"g\", 5)(9, BubbleChartComponent__svg_g_9_Template, 2, 3, \"g\", 5);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(16, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"activeEntries\", ctx.activeEntries)(\"legendOptions\", ctx.legendOptions)(\"animations\", ctx.animations);\n            i0.ɵɵadvance(2);\n            i0.ɵɵattribute(\"id\", ctx.clipPathId);\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"width\", ctx.dims.width + 10)(\"height\", ctx.dims.height + 10)(\"transform\", \"translate(-5, -5)\");\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"transform\", ctx.transform);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"width\", ctx.dims.width)(\"height\", ctx.dims.height);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n          }\n        },\n        dependencies: [i1.NgForOf, i1.NgIf, XAxisComponent, YAxisComponent, ChartComponent, BubbleSeriesComponent],\n        styles: [_c25],\n        encapsulation: 2,\n        data: {\n          animation: [trigger('animationState', [transition(':leave', [style({\n            opacity: 1\n          }), animate(500, style({\n            opacity: 0\n          }))])])]\n        },\n        changeDetection: 0\n      });\n    }\n  }\n  return BubbleChartComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet BubbleChartModule = /*#__PURE__*/(() => {\n  class BubbleChartModule {\n    static {\n      this.ɵfac = function BubbleChartModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || BubbleChartModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: BubbleChartModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [ChartCommonModule]\n      });\n    }\n  }\n  return BubbleChartModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet HeatMapCellComponent = /*#__PURE__*/(() => {\n  class HeatMapCellComponent {\n    constructor(element) {\n      this.gradient = false;\n      this.animations = true;\n      this.select = new EventEmitter();\n      this.activate = new EventEmitter();\n      this.deactivate = new EventEmitter();\n      this.barOrientation = BarOrientation;\n      this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n      this.transform = `translate(${this.x} , ${this.y})`;\n      this.startOpacity = 0.3;\n      this.gradientId = 'grad' + id().toString();\n      this.gradientUrl = `url(#${this.gradientId})`;\n      this.gradientStops = this.getGradientStops();\n      if (this.animations) {\n        this.loadAnimation();\n      }\n    }\n    getGradientStops() {\n      return [{\n        offset: 0,\n        color: this.fill,\n        opacity: this.startOpacity\n      }, {\n        offset: 100,\n        color: this.fill,\n        opacity: 1\n      }];\n    }\n    loadAnimation() {\n      const node = select(this.element).select('.cell');\n      node.attr('opacity', 0);\n      this.animateToCurrentForm();\n    }\n    animateToCurrentForm() {\n      const node = select(this.element).select('.cell');\n      node.transition().duration(750).attr('opacity', 1);\n    }\n    onClick() {\n      this.select.emit(this.data);\n    }\n    onMouseEnter() {\n      this.activate.emit(this.data);\n    }\n    onMouseLeave() {\n      this.deactivate.emit(this.data);\n    }\n    static {\n      this.ɵfac = function HeatMapCellComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || HeatMapCellComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: HeatMapCellComponent,\n        selectors: [[\"g\", \"ngx-charts-heat-map-cell\", \"\"]],\n        hostBindings: function HeatMapCellComponent_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"mouseenter\", function HeatMapCellComponent_mouseenter_HostBindingHandler() {\n              return ctx.onMouseEnter();\n            })(\"mouseleave\", function HeatMapCellComponent_mouseleave_HostBindingHandler() {\n              return ctx.onMouseLeave();\n            });\n          }\n        },\n        inputs: {\n          fill: \"fill\",\n          x: \"x\",\n          y: \"y\",\n          width: \"width\",\n          height: \"height\",\n          data: \"data\",\n          gradient: \"gradient\",\n          animations: \"animations\"\n        },\n        outputs: {\n          select: \"select\",\n          activate: \"activate\",\n          deactivate: \"deactivate\"\n        },\n        standalone: false,\n        features: [i0.ɵɵNgOnChangesFeature],\n        attrs: _c33,\n        decls: 3,\n        vars: 5,\n        consts: [[1, \"cell\"], [4, \"ngIf\"], [\"rx\", \"3\", 1, \"cell\", 3, \"click\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"]],\n        template: function HeatMapCellComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(0, \"g\", 0);\n            i0.ɵɵtemplate(1, HeatMapCellComponent__svg_defs_1_Template, 2, 3, \"defs\", 1);\n            i0.ɵɵelementStart(2, \"rect\", 2);\n            i0.ɵɵlistener(\"click\", function HeatMapCellComponent_Template_rect_click_2_listener() {\n              return ctx.onClick();\n            });\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵattribute(\"transform\", ctx.transform);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.gradient);\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"fill\", ctx.gradient ? ctx.gradientUrl : ctx.fill)(\"width\", ctx.width)(\"height\", ctx.height);\n          }\n        },\n        dependencies: [i1.NgIf, SvgLinearGradientComponent],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return HeatMapCellComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet HeatCellSeriesComponent = /*#__PURE__*/(() => {\n  class HeatCellSeriesComponent {\n    constructor() {\n      this.tooltipDisabled = false;\n      this.animations = true;\n      this.select = new EventEmitter();\n      this.activate = new EventEmitter();\n      this.deactivate = new EventEmitter();\n      this.placementTypes = PlacementTypes;\n      this.styleTypes = StyleTypes;\n    }\n    ngOnInit() {\n      if (!this.tooltipText) {\n        this.tooltipText = this.getTooltipText;\n      }\n    }\n    ngOnChanges(changes) {\n      this.update();\n    }\n    update() {\n      this.cells = this.getCells();\n    }\n    getCells() {\n      const cells = [];\n      this.data.map(row => {\n        row.series.map(cell => {\n          const value = cell.value;\n          cell.series = row.name;\n          cells.push({\n            row,\n            cell,\n            x: this.xScale(row.name),\n            y: this.yScale(cell.name),\n            width: this.xScale.bandwidth(),\n            height: this.yScale.bandwidth(),\n            fill: this.colors.getColor(value),\n            data: value,\n            label: formatLabel(cell.name),\n            series: row.name\n          });\n        });\n      });\n      return cells;\n    }\n    getTooltipText({\n      label,\n      data,\n      series\n    }) {\n      return `\n      <span class=\"tooltip-label\">${escapeLabel(series)} • ${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${data.toLocaleString()}</span>\n    `;\n    }\n    trackBy(index, item) {\n      return item.label;\n    }\n    onClick(data) {\n      this.select.emit(data);\n    }\n    static {\n      this.ɵfac = function HeatCellSeriesComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || HeatCellSeriesComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: HeatCellSeriesComponent,\n        selectors: [[\"g\", \"ngx-charts-heat-map-cell-series\", \"\"]],\n        inputs: {\n          data: \"data\",\n          colors: \"colors\",\n          xScale: \"xScale\",\n          yScale: \"yScale\",\n          gradient: \"gradient\",\n          tooltipDisabled: \"tooltipDisabled\",\n          tooltipText: \"tooltipText\",\n          tooltipTemplate: \"tooltipTemplate\",\n          animations: \"animations\"\n        },\n        outputs: {\n          select: \"select\",\n          activate: \"activate\",\n          deactivate: \"deactivate\"\n        },\n        standalone: false,\n        features: [i0.ɵɵNgOnChangesFeature],\n        attrs: _c34,\n        decls: 1,\n        vars: 2,\n        consts: [[\"ngx-charts-heat-map-cell\", \"\", \"ngx-tooltip\", \"\", 3, \"x\", \"y\", \"width\", \"height\", \"fill\", \"data\", \"gradient\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-heat-map-cell\", \"\", \"ngx-tooltip\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"x\", \"y\", \"width\", \"height\", \"fill\", \"data\", \"gradient\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\"]],\n        template: function HeatCellSeriesComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵtemplate(0, HeatCellSeriesComponent__svg_g_0_Template, 1, 18, \"g\", 0);\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"ngForOf\", ctx.cells)(\"ngForTrackBy\", ctx.trackBy);\n          }\n        },\n        dependencies: [i1.NgForOf, TooltipDirective, HeatMapCellComponent],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return HeatCellSeriesComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet HeatMapComponent = /*#__PURE__*/(() => {\n  class HeatMapComponent extends BaseChartComponent {\n    constructor() {\n      super(...arguments);\n      this.legendTitle = 'Legend';\n      this.legendPosition = LegendPosition.Right;\n      this.innerPadding = 8;\n      this.trimXAxisTicks = true;\n      this.trimYAxisTicks = true;\n      this.rotateXAxisTicks = true;\n      this.maxXAxisTickLength = 16;\n      this.maxYAxisTickLength = 16;\n      this.tooltipDisabled = false;\n      this.activeEntries = [];\n      this.wrapTicks = false;\n      this.activate = new EventEmitter();\n      this.deactivate = new EventEmitter();\n      this.margin = [10, 20, 10, 20];\n      this.xAxisHeight = 0;\n      this.yAxisWidth = 0;\n      this.scaleType = ScaleType.Linear;\n    }\n    update() {\n      super.update();\n      this.formatDates();\n      this.xDomain = this.getXDomain();\n      this.yDomain = this.getYDomain();\n      this.valueDomain = this.getValueDomain();\n      this.scaleType = getScaleType(this.valueDomain, false);\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin,\n        showXAxis: this.xAxis,\n        showYAxis: this.yAxis,\n        xAxisHeight: this.xAxisHeight,\n        yAxisWidth: this.yAxisWidth,\n        showXLabel: this.showXAxisLabel,\n        showYLabel: this.showYAxisLabel,\n        showLegend: this.legend,\n        legendType: this.scaleType,\n        legendPosition: this.legendPosition\n      });\n      if (this.scaleType === ScaleType.Linear) {\n        let min = this.min;\n        let max = this.max;\n        if (!this.min) {\n          min = Math.min(0, ...this.valueDomain);\n        }\n        if (!this.max) {\n          max = Math.max(...this.valueDomain);\n        }\n        this.valueDomain = [min, max];\n      }\n      this.xScale = this.getXScale();\n      this.yScale = this.getYScale();\n      this.setColors();\n      this.legendOptions = this.getLegendOptions();\n      this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n      this.rects = this.getRects();\n    }\n    getXDomain() {\n      const domain = [];\n      for (const group of this.results) {\n        if (!domain.includes(group.name)) {\n          domain.push(group.name);\n        }\n      }\n      return domain;\n    }\n    getYDomain() {\n      const domain = [];\n      for (const group of this.results) {\n        for (const d of group.series) {\n          if (!domain.includes(d.name)) {\n            domain.push(d.name);\n          }\n        }\n      }\n      return domain;\n    }\n    getValueDomain() {\n      const domain = [];\n      for (const group of this.results) {\n        for (const d of group.series) {\n          if (!domain.includes(d.value)) {\n            domain.push(d.value);\n          }\n        }\n      }\n      return domain;\n    }\n    /**\n     * Converts the input to gap paddingInner in fraction\n     * Supports the following inputs:\n     *    Numbers: 8\n     *    Strings: \"8\", \"8px\", \"8%\"\n     *    Arrays: [8,2], \"8,2\", \"[8,2]\"\n     *    Mixed: [8,\"2%\"], [\"8px\",\"2%\"], \"8,2%\", \"[8,2%]\"\n     *\n     * @memberOf HeatMapComponent\n     */\n    getDimension(value, index = 0, N, L) {\n      if (typeof value === 'string') {\n        value = value.replace('[', '').replace(']', '').replace('px', '')\n        // tslint:disable-next-line: quotemark\n        .replace(\"'\", '');\n        if (value.includes(',')) {\n          value = value.split(',');\n        }\n      }\n      if (Array.isArray(value) && typeof index === 'number') {\n        return this.getDimension(value[index], null, N, L);\n      }\n      if (typeof value === 'string' && value.includes('%')) {\n        return +value.replace('%', '') / 100;\n      }\n      return N / (L / +value + 1);\n    }\n    getXScale() {\n      const f = this.getDimension(this.innerPadding, 0, this.xDomain.length, this.dims.width);\n      return scaleBand().rangeRound([0, this.dims.width]).domain(this.xDomain).paddingInner(f);\n    }\n    getYScale() {\n      const f = this.getDimension(this.innerPadding, 1, this.yDomain.length, this.dims.height);\n      return scaleBand().rangeRound([this.dims.height, 0]).domain(this.yDomain).paddingInner(f);\n    }\n    getRects() {\n      const rects = [];\n      this.xDomain.map(xVal => {\n        this.yDomain.map(yVal => {\n          rects.push({\n            x: this.xScale(xVal),\n            y: this.yScale(yVal),\n            rx: 3,\n            width: this.xScale.bandwidth(),\n            height: this.yScale.bandwidth(),\n            fill: 'rgba(200,200,200,0.03)'\n          });\n        });\n      });\n      return rects;\n    }\n    onClick(data) {\n      this.select.emit(data);\n    }\n    setColors() {\n      this.colors = new ColorHelper(this.scheme, this.scaleType, this.valueDomain);\n    }\n    getLegendOptions() {\n      return {\n        scaleType: this.scaleType,\n        domain: this.valueDomain,\n        colors: this.scaleType === ScaleType.Ordinal ? this.colors : this.colors.scale,\n        title: this.scaleType === ScaleType.Ordinal ? this.legendTitle : undefined,\n        position: this.legendPosition\n      };\n    }\n    updateYAxisWidth({\n      width\n    }) {\n      this.yAxisWidth = width;\n      this.update();\n    }\n    updateXAxisHeight({\n      height\n    }) {\n      this.xAxisHeight = height;\n      this.update();\n    }\n    onActivate(event, group, fromLegend = false) {\n      const item = Object.assign({}, event);\n      if (group) {\n        item.series = group.name;\n      }\n      const items = this.results.map(g => g.series).flat().filter(i => {\n        if (fromLegend) {\n          return i.label === item.name;\n        } else {\n          return i.name === item.name && i.series === item.series;\n        }\n      });\n      this.activeEntries = [...items];\n      this.activate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n      const item = Object.assign({}, event);\n      if (group) {\n        item.series = group.name;\n      }\n      this.activeEntries = this.activeEntries.filter(i => {\n        if (fromLegend) {\n          return i.label !== item.name;\n        } else {\n          return !(i.name === item.name && i.series === item.series);\n        }\n      });\n      this.deactivate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵHeatMapComponent_BaseFactory;\n        return function HeatMapComponent_Factory(__ngFactoryType__) {\n          return (ɵHeatMapComponent_BaseFactory || (ɵHeatMapComponent_BaseFactory = i0.ɵɵgetInheritedFactory(HeatMapComponent)))(__ngFactoryType__ || HeatMapComponent);\n        };\n      })();\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: HeatMapComponent,\n        selectors: [[\"ngx-charts-heat-map\"]],\n        contentQueries: function HeatMapComponent_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n          }\n        },\n        inputs: {\n          legend: \"legend\",\n          legendTitle: \"legendTitle\",\n          legendPosition: \"legendPosition\",\n          xAxis: \"xAxis\",\n          yAxis: \"yAxis\",\n          showXAxisLabel: \"showXAxisLabel\",\n          showYAxisLabel: \"showYAxisLabel\",\n          xAxisLabel: \"xAxisLabel\",\n          yAxisLabel: \"yAxisLabel\",\n          gradient: \"gradient\",\n          innerPadding: \"innerPadding\",\n          trimXAxisTicks: \"trimXAxisTicks\",\n          trimYAxisTicks: \"trimYAxisTicks\",\n          rotateXAxisTicks: \"rotateXAxisTicks\",\n          maxXAxisTickLength: \"maxXAxisTickLength\",\n          maxYAxisTickLength: \"maxYAxisTickLength\",\n          xAxisTickFormatting: \"xAxisTickFormatting\",\n          yAxisTickFormatting: \"yAxisTickFormatting\",\n          xAxisTicks: \"xAxisTicks\",\n          yAxisTicks: \"yAxisTicks\",\n          tooltipDisabled: \"tooltipDisabled\",\n          tooltipText: \"tooltipText\",\n          min: \"min\",\n          max: \"max\",\n          activeEntries: \"activeEntries\",\n          wrapTicks: \"wrapTicks\"\n        },\n        outputs: {\n          activate: \"activate\",\n          deactivate: \"deactivate\"\n        },\n        standalone: false,\n        features: [i0.ɵɵInheritDefinitionFeature],\n        decls: 6,\n        vars: 20,\n        consts: [[3, \"legendLabelClick\", \"view\", \"showLegend\", \"animations\", \"legendOptions\"], [1, \"heat-map\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-heat-map-cell-series\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"xScale\", \"yScale\", \"colors\", \"data\", \"gradient\", \"animations\", \"tooltipDisabled\", \"tooltipTemplate\", \"tooltipText\"], [\"ngx-charts-x-axis\", \"\", 3, \"dimensionsChanged\", \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\"], [\"ngx-charts-y-axis\", \"\", 3, \"dimensionsChanged\", \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\"]],\n        template: function HeatMapComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n            i0.ɵɵlistener(\"legendLabelClick\", function HeatMapComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n              return ctx.onClick($event);\n            });\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(1, \"g\", 1);\n            i0.ɵɵtemplate(2, HeatMapComponent__svg_g_2_Template, 1, 10, \"g\", 2)(3, HeatMapComponent__svg_g_3_Template, 1, 9, \"g\", 3)(4, HeatMapComponent__svg_rect_4_Template, 1, 6, \"rect\", 4);\n            i0.ɵɵelementStart(5, \"g\", 5);\n            i0.ɵɵlistener(\"select\", function HeatMapComponent_Template_g_select_5_listener($event) {\n              return ctx.onClick($event);\n            })(\"activate\", function HeatMapComponent_Template_g_activate_5_listener($event) {\n              return ctx.onActivate($event, undefined);\n            })(\"deactivate\", function HeatMapComponent_Template_g_deactivate_5_listener($event) {\n              return ctx.onDeactivate($event, undefined);\n            });\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(17, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"animations\", ctx.animations)(\"legendOptions\", ctx.legendOptions);\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"transform\", ctx.transform);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngForOf\", ctx.rects);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"xScale\", ctx.xScale)(\"yScale\", ctx.yScale)(\"colors\", ctx.colors)(\"data\", ctx.results)(\"gradient\", ctx.gradient)(\"animations\", ctx.animations)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"tooltipText\", ctx.tooltipText);\n          }\n        },\n        dependencies: [i1.NgForOf, i1.NgIf, XAxisComponent, YAxisComponent, ChartComponent, HeatCellSeriesComponent],\n        styles: [_c25],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return HeatMapComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet HeatMapModule = /*#__PURE__*/(() => {\n  class HeatMapModule {\n    static {\n      this.ɵfac = function HeatMapModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || HeatMapModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: HeatMapModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [ChartCommonModule]\n      });\n    }\n  }\n  return HeatMapModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet LineComponent = /*#__PURE__*/(() => {\n  class LineComponent {\n    constructor(element, platformId) {\n      this.element = element;\n      this.platformId = platformId;\n      this.fill = 'none';\n      this.animations = true;\n      // @Output() select = new EventEmitter();\n      this.initialized = false;\n      this.isSSR = false;\n    }\n    ngOnInit() {\n      if (isPlatformServer(this.platformId)) {\n        this.isSSR = true;\n      }\n    }\n    ngOnChanges(changes) {\n      if (!this.initialized) {\n        this.initialized = true;\n        this.initialPath = this.path;\n      } else {\n        this.updatePathEl();\n      }\n    }\n    updatePathEl() {\n      const node = select(this.element.nativeElement).select('.line');\n      if (this.animations) {\n        node.transition().duration(750).attr('d', this.path);\n      } else {\n        node.attr('d', this.path);\n      }\n    }\n    static {\n      this.ɵfac = function LineComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || LineComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(PLATFORM_ID));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: LineComponent,\n        selectors: [[\"g\", \"ngx-charts-line\", \"\"]],\n        inputs: {\n          path: \"path\",\n          stroke: \"stroke\",\n          data: \"data\",\n          fill: \"fill\",\n          animations: \"animations\"\n        },\n        standalone: false,\n        features: [i0.ɵɵNgOnChangesFeature],\n        attrs: _c36,\n        decls: 2,\n        vars: 2,\n        consts: [[4, \"ngIf\"], [\"stroke-width\", \"1.5px\", 1, \"line\"]],\n        template: function LineComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵtemplate(0, LineComponent__svg_g_0_Template, 2, 4, \"g\", 0)(1, LineComponent__svg_g_1_Template, 2, 3, \"g\", 0);\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n          }\n        },\n        dependencies: [i1.NgIf],\n        encapsulation: 2,\n        data: {\n          animation: [trigger('animationState', [transition(':enter', [style({\n            strokeDasharray: 2000,\n            strokeDashoffset: 2000\n          }), animate(1000, style({\n            strokeDashoffset: 0\n          }))])])]\n        },\n        changeDetection: 0\n      });\n    }\n  }\n  return LineComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet LineSeriesComponent = /*#__PURE__*/(() => {\n  class LineSeriesComponent {\n    constructor() {\n      this.animations = true;\n      this.barOrientation = BarOrientation;\n    }\n    ngOnChanges(changes) {\n      this.update();\n    }\n    update() {\n      this.updateGradients();\n      const data = this.sortData(this.data.series);\n      const lineGen = this.getLineGenerator();\n      this.path = lineGen(data) || '';\n      const areaGen = this.getAreaGenerator();\n      this.areaPath = areaGen(data) || '';\n      if (this.hasRange) {\n        const range = this.getRangeGenerator();\n        this.outerPath = range(data) || '';\n      }\n      if (this.hasGradient) {\n        this.stroke = this.gradientUrl;\n        const values = this.data.series.map(d => d.value);\n        const max = Math.max(...values);\n        const min = Math.min(...values);\n        if (max === min) {\n          this.stroke = this.colors.getColor(max);\n        }\n      } else {\n        this.stroke = this.colors.getColor(this.data.name);\n      }\n    }\n    getLineGenerator() {\n      return line().x(d => {\n        const label = d.name;\n        let value;\n        if (this.scaleType === ScaleType.Time) {\n          value = this.xScale(label);\n        } else if (this.scaleType === ScaleType.Linear) {\n          value = this.xScale(Number(label));\n        } else {\n          value = this.xScale(label);\n        }\n        return value;\n      }).y(d => this.yScale(d.value)).curve(this.curve);\n    }\n    getRangeGenerator() {\n      return area().x(d => {\n        const label = d.name;\n        let value;\n        if (this.scaleType === ScaleType.Time) {\n          value = this.xScale(label);\n        } else if (this.scaleType === ScaleType.Linear) {\n          value = this.xScale(Number(label));\n        } else {\n          value = this.xScale(label);\n        }\n        return value;\n      }).y0(d => this.yScale(typeof d.min === 'number' ? d.min : d.value)).y1(d => this.yScale(typeof d.max === 'number' ? d.max : d.value)).curve(this.curve);\n    }\n    getAreaGenerator() {\n      const xProperty = d => {\n        const label = d.name;\n        return this.xScale(label);\n      };\n      return area().x(xProperty).y0(() => this.yScale.range()[0]).y1(d => this.yScale(d.value)).curve(this.curve);\n    }\n    sortData(data) {\n      if (this.scaleType === ScaleType.Linear) {\n        data = sortLinear(data, 'name');\n      } else if (this.scaleType === ScaleType.Time) {\n        data = sortByTime(data, 'name');\n      } else {\n        data = sortByDomain(data, 'name', 'asc', this.xScale.domain());\n      }\n      return data;\n    }\n    updateGradients() {\n      if (this.colors.scaleType === ScaleType.Linear) {\n        this.hasGradient = true;\n        this.gradientId = 'grad' + id().toString();\n        this.gradientUrl = `url(#${this.gradientId})`;\n        const values = this.data.series.map(d => d.value);\n        const max = Math.max(...values);\n        const min = Math.min(...values);\n        this.gradientStops = this.colors.getLinearGradientStops(max, min);\n        this.areaGradientStops = this.colors.getLinearGradientStops(max);\n      } else {\n        this.hasGradient = false;\n        this.gradientStops = undefined;\n        this.areaGradientStops = undefined;\n      }\n    }\n    isActive(entry) {\n      if (!this.activeEntries) return false;\n      const item = this.activeEntries.find(d => {\n        return entry.name === d.name;\n      });\n      return item !== undefined;\n    }\n    isInactive(entry) {\n      if (!this.activeEntries || this.activeEntries.length === 0) return false;\n      const item = this.activeEntries.find(d => {\n        return entry.name === d.name;\n      });\n      return item === undefined;\n    }\n    static {\n      this.ɵfac = function LineSeriesComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || LineSeriesComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: LineSeriesComponent,\n        selectors: [[\"g\", \"ngx-charts-line-series\", \"\"]],\n        inputs: {\n          data: \"data\",\n          xScale: \"xScale\",\n          yScale: \"yScale\",\n          colors: \"colors\",\n          scaleType: \"scaleType\",\n          curve: \"curve\",\n          activeEntries: \"activeEntries\",\n          rangeFillOpacity: \"rangeFillOpacity\",\n          hasRange: \"hasRange\",\n          animations: \"animations\"\n        },\n        standalone: false,\n        features: [i0.ɵɵNgOnChangesFeature],\n        attrs: _c37,\n        decls: 6,\n        vars: 22,\n        consts: [[\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\", 4, \"ngIf\"], [\"ngx-charts-area\", \"\", 1, \"line-highlight\", 3, \"data\", \"path\", \"fill\", \"opacity\", \"startOpacity\", \"gradient\", \"stops\", \"animations\"], [\"ngx-charts-line\", \"\", 1, \"line-series\", 3, \"data\", \"path\", \"stroke\", \"animations\"], [\"ngx-charts-area\", \"\", \"class\", \"line-series-range\", 3, \"data\", \"path\", \"fill\", \"active\", \"inactive\", \"opacity\", \"animations\", 4, \"ngIf\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"], [\"ngx-charts-area\", \"\", 1, \"line-series-range\", 3, \"data\", \"path\", \"fill\", \"opacity\", \"animations\"]],\n        template: function LineSeriesComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(0, \"g\")(1, \"defs\");\n            i0.ɵɵtemplate(2, LineSeriesComponent__svg_g_2_Template, 1, 3, \"g\", 0);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(3, \"g\", 1)(4, \"g\", 2);\n            i0.ɵɵtemplate(5, LineSeriesComponent__svg_g_5_Template, 1, 9, \"g\", 3);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngIf\", ctx.hasGradient);\n            i0.ɵɵadvance();\n            i0.ɵɵclassProp(\"active\", ctx.isActive(ctx.data))(\"inactive\", ctx.isInactive(ctx.data));\n            i0.ɵɵproperty(\"data\", ctx.data)(\"path\", ctx.areaPath)(\"fill\", ctx.hasGradient ? ctx.gradientUrl : ctx.colors.getColor(ctx.data.name))(\"opacity\", 0.25)(\"startOpacity\", 0)(\"gradient\", true)(\"stops\", ctx.areaGradientStops)(\"animations\", ctx.animations);\n            i0.ɵɵadvance();\n            i0.ɵɵclassProp(\"active\", ctx.isActive(ctx.data))(\"inactive\", ctx.isInactive(ctx.data));\n            i0.ɵɵproperty(\"data\", ctx.data)(\"path\", ctx.path)(\"stroke\", ctx.stroke)(\"animations\", ctx.animations);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.hasRange);\n          }\n        },\n        dependencies: [i1.NgIf, AreaComponent, SvgLinearGradientComponent, LineComponent],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return LineSeriesComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet LineChartComponent = /*#__PURE__*/(() => {\n  class LineChartComponent extends BaseChartComponent {\n    constructor() {\n      super(...arguments);\n      this.legendTitle = 'Legend';\n      this.legendPosition = LegendPosition.Right;\n      this.showGridLines = true;\n      this.curve = curveLinear;\n      this.activeEntries = [];\n      this.trimXAxisTicks = true;\n      this.trimYAxisTicks = true;\n      this.rotateXAxisTicks = true;\n      this.maxXAxisTickLength = 16;\n      this.maxYAxisTickLength = 16;\n      this.roundDomains = false;\n      this.tooltipDisabled = false;\n      this.showRefLines = false;\n      this.showRefLabels = true;\n      this.wrapTicks = false;\n      this.activate = new EventEmitter();\n      this.deactivate = new EventEmitter();\n      this.margin = [10, 20, 10, 20];\n      this.xAxisHeight = 0;\n      this.yAxisWidth = 0;\n      this.timelineHeight = 50;\n      this.timelinePadding = 10;\n      this.isSSR = false;\n    }\n    ngOnInit() {\n      if (isPlatformServer(this.platformId)) {\n        this.isSSR = true;\n      }\n    }\n    update() {\n      super.update();\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin,\n        showXAxis: this.xAxis,\n        showYAxis: this.yAxis,\n        xAxisHeight: this.xAxisHeight,\n        yAxisWidth: this.yAxisWidth,\n        showXLabel: this.showXAxisLabel,\n        showYLabel: this.showYAxisLabel,\n        showLegend: this.legend,\n        legendType: this.schemeType,\n        legendPosition: this.legendPosition\n      });\n      if (this.timeline) {\n        this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n      }\n      this.xDomain = this.getXDomain();\n      if (this.filteredDomain) {\n        this.xDomain = this.filteredDomain;\n      }\n      this.yDomain = this.getYDomain();\n      this.seriesDomain = this.getSeriesDomain();\n      this.xScale = this.getXScale(this.xDomain, this.dims.width);\n      this.yScale = this.getYScale(this.yDomain, this.dims.height);\n      this.updateTimeline();\n      this.setColors();\n      this.legendOptions = this.getLegendOptions();\n      this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n      this.clipPathId = 'clip' + id().toString();\n      this.clipPath = `url(#${this.clipPathId})`;\n    }\n    updateTimeline() {\n      if (this.timeline) {\n        this.timelineWidth = this.dims.width;\n        this.timelineXDomain = this.getXDomain();\n        this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n        this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n        this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n      }\n    }\n    getXDomain() {\n      let values = getUniqueXDomainValues(this.results);\n      this.scaleType = getScaleType(values);\n      let domain = [];\n      if (this.scaleType === ScaleType.Linear) {\n        values = values.map(v => Number(v));\n      }\n      let min;\n      let max;\n      if (this.scaleType === ScaleType.Time || this.scaleType === ScaleType.Linear) {\n        min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\n        max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\n      }\n      if (this.scaleType === ScaleType.Time) {\n        domain = [new Date(min), new Date(max)];\n        this.xSet = [...values].sort((a, b) => {\n          const aDate = a.getTime();\n          const bDate = b.getTime();\n          if (aDate > bDate) return 1;\n          if (bDate > aDate) return -1;\n          return 0;\n        });\n      } else if (this.scaleType === ScaleType.Linear) {\n        domain = [min, max];\n        // Use compare function to sort numbers numerically\n        this.xSet = [...values].sort((a, b) => a - b);\n      } else {\n        domain = values;\n        this.xSet = values;\n      }\n      return domain;\n    }\n    getYDomain() {\n      const domain = [];\n      for (const results of this.results) {\n        for (const d of results.series) {\n          if (domain.indexOf(d.value) < 0) {\n            domain.push(d.value);\n          }\n          if (d.min !== undefined) {\n            this.hasRange = true;\n            if (domain.indexOf(d.min) < 0) {\n              domain.push(d.min);\n            }\n          }\n          if (d.max !== undefined) {\n            this.hasRange = true;\n            if (domain.indexOf(d.max) < 0) {\n              domain.push(d.max);\n            }\n          }\n        }\n      }\n      const values = [...domain];\n      if (!this.autoScale) {\n        values.push(0);\n      }\n      const min = this.yScaleMin ? this.yScaleMin : Math.min(...values);\n      const max = this.yScaleMax ? this.yScaleMax : Math.max(...values);\n      return [min, max];\n    }\n    getSeriesDomain() {\n      return this.results.map(d => d.name);\n    }\n    getXScale(domain, width) {\n      let scale;\n      if (this.scaleType === ScaleType.Time) {\n        scale = scaleTime().range([0, width]).domain(domain);\n      } else if (this.scaleType === ScaleType.Linear) {\n        scale = scaleLinear().range([0, width]).domain(domain);\n        if (this.roundDomains) {\n          scale = scale.nice();\n        }\n      } else if (this.scaleType === ScaleType.Ordinal) {\n        scale = scalePoint().range([0, width]).padding(0.1).domain(domain);\n      }\n      return scale;\n    }\n    getYScale(domain, height) {\n      const scale = scaleLinear().range([height, 0]).domain(domain);\n      return this.roundDomains ? scale.nice() : scale;\n    }\n    updateDomain(domain) {\n      this.filteredDomain = domain;\n      this.xDomain = this.filteredDomain;\n      this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    }\n    updateHoveredVertical(item) {\n      this.hoveredVertical = item.value;\n      this.deactivateAll();\n    }\n    hideCircles() {\n      this.hoveredVertical = null;\n      this.deactivateAll();\n    }\n    onClick(data) {\n      this.select.emit(data);\n    }\n    trackBy(index, item) {\n      return `${item.name}`;\n    }\n    setColors() {\n      let domain;\n      if (this.schemeType === ScaleType.Ordinal) {\n        domain = this.seriesDomain;\n      } else {\n        domain = this.yDomain;\n      }\n      this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n      const opts = {\n        scaleType: this.schemeType,\n        colors: undefined,\n        domain: [],\n        title: undefined,\n        position: this.legendPosition\n      };\n      if (opts.scaleType === ScaleType.Ordinal) {\n        opts.domain = this.seriesDomain;\n        opts.colors = this.colors;\n        opts.title = this.legendTitle;\n      } else {\n        opts.domain = this.yDomain;\n        opts.colors = this.colors.scale;\n      }\n      return opts;\n    }\n    updateYAxisWidth({\n      width\n    }) {\n      this.yAxisWidth = width;\n      this.update();\n    }\n    updateXAxisHeight({\n      height\n    }) {\n      this.xAxisHeight = height;\n      this.update();\n    }\n    onActivate(item) {\n      this.deactivateAll();\n      const idx = this.activeEntries.findIndex(d => {\n        return d.name === item.name && d.value === item.value;\n      });\n      if (idx > -1) {\n        return;\n      }\n      this.activeEntries = [item];\n      this.activate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n    onDeactivate(item) {\n      const idx = this.activeEntries.findIndex(d => {\n        return d.name === item.name && d.value === item.value;\n      });\n      this.activeEntries.splice(idx, 1);\n      this.activeEntries = [...this.activeEntries];\n      this.deactivate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n    deactivateAll() {\n      this.activeEntries = [...this.activeEntries];\n      for (const entry of this.activeEntries) {\n        this.deactivate.emit({\n          value: entry,\n          entries: []\n        });\n      }\n      this.activeEntries = [];\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵLineChartComponent_BaseFactory;\n        return function LineChartComponent_Factory(__ngFactoryType__) {\n          return (ɵLineChartComponent_BaseFactory || (ɵLineChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(LineChartComponent)))(__ngFactoryType__ || LineChartComponent);\n        };\n      })();\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: LineChartComponent,\n        selectors: [[\"ngx-charts-line-chart\"]],\n        contentQueries: function LineChartComponent_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n            i0.ɵɵcontentQuery(dirIndex, _c23, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.seriesTooltipTemplate = _t.first);\n          }\n        },\n        hostBindings: function LineChartComponent_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"mouseleave\", function LineChartComponent_mouseleave_HostBindingHandler() {\n              return ctx.hideCircles();\n            });\n          }\n        },\n        inputs: {\n          legend: \"legend\",\n          legendTitle: \"legendTitle\",\n          legendPosition: \"legendPosition\",\n          xAxis: \"xAxis\",\n          yAxis: \"yAxis\",\n          showXAxisLabel: \"showXAxisLabel\",\n          showYAxisLabel: \"showYAxisLabel\",\n          xAxisLabel: \"xAxisLabel\",\n          yAxisLabel: \"yAxisLabel\",\n          autoScale: \"autoScale\",\n          timeline: \"timeline\",\n          gradient: \"gradient\",\n          showGridLines: \"showGridLines\",\n          curve: \"curve\",\n          activeEntries: \"activeEntries\",\n          schemeType: \"schemeType\",\n          rangeFillOpacity: \"rangeFillOpacity\",\n          trimXAxisTicks: \"trimXAxisTicks\",\n          trimYAxisTicks: \"trimYAxisTicks\",\n          rotateXAxisTicks: \"rotateXAxisTicks\",\n          maxXAxisTickLength: \"maxXAxisTickLength\",\n          maxYAxisTickLength: \"maxYAxisTickLength\",\n          xAxisTickFormatting: \"xAxisTickFormatting\",\n          yAxisTickFormatting: \"yAxisTickFormatting\",\n          xAxisTicks: \"xAxisTicks\",\n          yAxisTicks: \"yAxisTicks\",\n          roundDomains: \"roundDomains\",\n          tooltipDisabled: \"tooltipDisabled\",\n          showRefLines: \"showRefLines\",\n          referenceLines: \"referenceLines\",\n          showRefLabels: \"showRefLabels\",\n          xScaleMin: \"xScaleMin\",\n          xScaleMax: \"xScaleMax\",\n          yScaleMin: \"yScaleMin\",\n          yScaleMax: \"yScaleMax\",\n          wrapTicks: \"wrapTicks\"\n        },\n        outputs: {\n          activate: \"activate\",\n          deactivate: \"deactivate\"\n        },\n        standalone: false,\n        features: [i0.ɵɵInheritDefinitionFeature],\n        decls: 12,\n        vars: 20,\n        consts: [[3, \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\"], [1, \"line-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"mouseleave\", 4, \"ngIf\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"scaleType\", \"legend\", \"onDomainChange\", 4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"dimensionsChanged\", \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\"], [\"ngx-charts-y-axis\", \"\", 3, \"dimensionsChanged\", \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"wrapTicks\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-line-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"activeEntries\", \"scaleType\", \"curve\", \"rangeFillOpacity\", \"hasRange\", \"animations\"], [3, \"mouseleave\"], [\"ngx-charts-tooltip-area\", \"\", 3, \"hover\", \"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"tooltipDisabled\", \"tooltipTemplate\"], [4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-circle-series\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"xScale\", \"yScale\", \"colors\", \"data\", \"scaleType\", \"visibleValue\", \"activeEntries\", \"tooltipDisabled\", \"tooltipTemplate\"], [\"ngx-charts-timeline\", \"\", 3, \"onDomainChange\", \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"scaleType\", \"legend\"], [\"ngx-charts-line-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"scaleType\", \"curve\", \"hasRange\", \"animations\"]],\n        template: function LineChartComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n            i0.ɵɵlistener(\"legendLabelClick\", function LineChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n              return ctx.onClick($event);\n            })(\"legendLabelActivate\", function LineChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n              return ctx.onActivate($event);\n            })(\"legendLabelDeactivate\", function LineChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n              return ctx.onDeactivate($event);\n            });\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(1, \"defs\")(2, \"clipPath\");\n            i0.ɵɵelement(3, \"rect\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(4, \"g\", 1);\n            i0.ɵɵtemplate(5, LineChartComponent__svg_g_5_Template, 1, 11, \"g\", 2)(6, LineChartComponent__svg_g_6_Template, 1, 13, \"g\", 3);\n            i0.ɵɵelementStart(7, \"g\");\n            i0.ɵɵtemplate(8, LineChartComponent__svg_g_8_Template, 2, 2, \"g\", 4)(9, LineChartComponent__svg_g_9_Template, 2, 2, \"g\", 4)(10, LineChartComponent__svg_g_10_Template, 3, 9, \"g\", 5);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(11, LineChartComponent__svg_g_11_Template, 2, 13, \"g\", 6);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(17, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n            i0.ɵɵadvance(2);\n            i0.ɵɵattribute(\"id\", ctx.clipPathId);\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"width\", ctx.dims.width + 10)(\"height\", ctx.dims.height + 10)(\"transform\", \"translate(-5, -5)\");\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"transform\", ctx.transform);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"clip-path\", ctx.clipPath);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", !ctx.tooltipDisabled);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.timeline && ctx.scaleType != \"ordinal\");\n          }\n        },\n        dependencies: [i1.NgForOf, i1.NgIf, XAxisComponent, YAxisComponent, TooltipArea, ChartComponent, CircleSeriesComponent, Timeline, LineSeriesComponent],\n        styles: [_c25],\n        encapsulation: 2,\n        data: {\n          animation: [trigger('animationState', [transition(':leave', [style({\n            opacity: 1\n          }), animate(500, style({\n            opacity: 0\n          }))])])]\n        },\n        changeDetection: 0\n      });\n    }\n  }\n  return LineChartComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet LineChartModule = /*#__PURE__*/(() => {\n  class LineChartModule {\n    static {\n      this.ɵfac = function LineChartModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || LineChartModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: LineChartModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [ChartCommonModule]\n      });\n    }\n  }\n  return LineChartModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet PieLabelComponent = /*#__PURE__*/(() => {\n  class PieLabelComponent {\n    constructor(platformId) {\n      this.platformId = platformId;\n      this.animations = true;\n      this.labelTrim = true;\n      this.labelTrimSize = 10;\n      this.trimLabel = trimLabel;\n    }\n    ngOnChanges(changes) {\n      this.setTransforms();\n      this.update();\n    }\n    setTransforms() {\n      if (isPlatformServer(this.platformId)) {\n        this.styleTransform = `translate3d(${this.textX}px,${this.textY}px, 0)`;\n        this.attrTransform = `translate(${this.textX},${this.textY})`;\n        this.textTransition = !this.animations ? null : 'transform 0.75s';\n      } else {\n        const isIE = /(edge|msie|trident)/i.test(navigator.userAgent);\n        this.styleTransform = isIE ? null : `translate3d(${this.textX}px,${this.textY}px, 0)`;\n        this.attrTransform = !isIE ? null : `translate(${this.textX},${this.textY})`;\n        this.textTransition = isIE || !this.animations ? null : 'transform 0.75s';\n      }\n    }\n    update() {\n      let startRadius = this.radius;\n      if (this.explodeSlices) {\n        startRadius = this.radius * this.value / this.max;\n      }\n      const innerArc = arc().innerRadius(startRadius).outerRadius(startRadius);\n      // Calculate innerPos then scale outer position to match label position\n      const innerPos = innerArc.centroid(this.data);\n      let scale = this.data.pos[1] / innerPos[1];\n      if (this.data.pos[1] === 0 || innerPos[1] === 0) {\n        scale = 1;\n      }\n      const outerPos = [scale * innerPos[0], scale * innerPos[1]];\n      this.line = `M${innerPos}L${outerPos}L${this.data.pos}`;\n    }\n    get textX() {\n      return this.data.pos[0];\n    }\n    get textY() {\n      return this.data.pos[1];\n    }\n    textAnchor() {\n      return this.midAngle(this.data) < Math.PI ? TextAnchor.Start : TextAnchor.End;\n    }\n    midAngle(d) {\n      return d.startAngle + (d.endAngle - d.startAngle) / 2;\n    }\n    static {\n      this.ɵfac = function PieLabelComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || PieLabelComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: PieLabelComponent,\n        selectors: [[\"g\", \"ngx-charts-pie-label\", \"\"]],\n        inputs: {\n          data: \"data\",\n          radius: \"radius\",\n          label: \"label\",\n          color: \"color\",\n          max: \"max\",\n          value: \"value\",\n          explodeSlices: \"explodeSlices\",\n          animations: \"animations\",\n          labelTrim: \"labelTrim\",\n          labelTrimSize: \"labelTrimSize\"\n        },\n        standalone: false,\n        features: [i0.ɵɵNgOnChangesFeature],\n        attrs: _c38,\n        decls: 6,\n        vars: 17,\n        consts: [[\"dy\", \".35em\", 1, \"pie-label\"], [\"fill\", \"none\", 1, \"pie-label-line\", \"line\"]],\n        template: function PieLabelComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"title\");\n            i0.ɵɵtext(1);\n            i0.ɵɵelementEnd();\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(2, \"g\")(3, \"text\", 0);\n            i0.ɵɵtext(4);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelement(5, \"path\", 1);\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance();\n            i0.ɵɵtextInterpolate(ctx.label);\n            i0.ɵɵadvance();\n            i0.ɵɵstyleProp(\"transform\", ctx.styleTransform)(\"transition\", ctx.textTransition);\n            i0.ɵɵattribute(\"transform\", ctx.attrTransform);\n            i0.ɵɵadvance();\n            i0.ɵɵstyleProp(\"text-anchor\", ctx.textAnchor())(\"shape-rendering\", \"crispEdges\");\n            i0.ɵɵclassProp(\"animation\", ctx.animations);\n            i0.ɵɵadvance();\n            i0.ɵɵtextInterpolate1(\" \", ctx.labelTrim ? ctx.trimLabel(ctx.label, ctx.labelTrimSize) : ctx.label, \" \");\n            i0.ɵɵadvance();\n            i0.ɵɵclassProp(\"animation\", ctx.animations);\n            i0.ɵɵattribute(\"d\", ctx.line)(\"stroke\", ctx.color);\n          }\n        },\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return PieLabelComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet PolarSeriesComponent = /*#__PURE__*/(() => {\n  class PolarSeriesComponent {\n    constructor() {\n      this.tooltipDisabled = false;\n      this.gradient = false;\n      this.animations = true;\n      this.select = new EventEmitter();\n      this.activate = new EventEmitter();\n      this.deactivate = new EventEmitter();\n      this.circleRadius = 3;\n      this.barOrientation = BarOrientation;\n      this.placementTypes = PlacementTypes;\n      this.styleTypes = StyleTypes;\n    }\n    ngOnChanges(changes) {\n      this.update();\n    }\n    update() {\n      this.updateGradients();\n      const line = this.getLineGenerator();\n      const data = this.sortData(this.data.series);\n      const seriesName = this.data.name;\n      const linearScaleType = this.colors.scaleType === ScaleType.Linear;\n      const min = this.yScale.domain()[0];\n      this.seriesColor = this.colors.getColor(linearScaleType ? min : seriesName);\n      this.path = line(data) || '';\n      this.circles = data.map(d => {\n        const a = this.getAngle(d);\n        const r = this.getRadius(d);\n        const value = d.value;\n        const color = this.colors.getColor(linearScaleType ? Math.abs(value) : seriesName);\n        const cData = Object.assign({}, d, {\n          series: seriesName,\n          value,\n          name: d.name\n        });\n        return {\n          data: cData,\n          cx: r * Math.sin(a),\n          cy: -r * Math.cos(a),\n          value,\n          color,\n          label: d.name\n        };\n      });\n      this.active = this.isActive(this.data);\n      this.inactive = this.isInactive(this.data);\n      this.tooltipText = this.tooltipText || (c => this.defaultTooltipText(c));\n    }\n    getAngle(d) {\n      const label = d.name;\n      if (this.scaleType === ScaleType.Time) {\n        return this.xScale(label);\n      } else if (this.scaleType === ScaleType.Linear) {\n        return this.xScale(Number(label));\n      }\n      return this.xScale(label);\n    }\n    getRadius(d) {\n      return this.yScale(d.value);\n    }\n    getLineGenerator() {\n      return lineRadial().angle(d => this.getAngle(d)).radius(d => this.getRadius(d)).curve(this.curve);\n    }\n    sortData(data) {\n      if (this.scaleType === ScaleType.Linear) {\n        return sortLinear(data, 'name');\n      } else if (this.scaleType === ScaleType.Time) {\n        return sortByTime(data, 'name');\n      }\n      return sortByDomain(data, 'name', 'asc', this.xScale.domain());\n    }\n    isActive(entry) {\n      if (!this.activeEntries) return false;\n      const item = this.activeEntries.find(d => {\n        return entry.name === d.name;\n      });\n      return item !== undefined;\n    }\n    isInactive(entry) {\n      if (!this.activeEntries || this.activeEntries.length === 0) return false;\n      const item = this.activeEntries.find(d => {\n        return entry.name === d.name;\n      });\n      return item === undefined;\n    }\n    defaultTooltipText({\n      label,\n      value\n    }) {\n      return `\n      <span class=\"tooltip-label\">${escapeLabel(this.data.name)} • ${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}</span>\n    `;\n    }\n    updateGradients() {\n      this.hasGradient = this.gradient || this.colors.scaleType === ScaleType.Linear;\n      if (!this.hasGradient) {\n        return;\n      }\n      this.gradientId = 'grad' + id().toString();\n      this.gradientUrl = `url(#${this.gradientId})`;\n      if (this.colors.scaleType === ScaleType.Linear) {\n        const values = this.data.series.map(d => d.value);\n        const max = Math.max(...values);\n        const min = Math.min(...values);\n        this.gradientStops = this.colors.getLinearGradientStops(max, min);\n      } else {\n        this.gradientStops = undefined;\n      }\n    }\n    static {\n      this.ɵfac = function PolarSeriesComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || PolarSeriesComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: PolarSeriesComponent,\n        selectors: [[\"g\", \"ngx-charts-polar-series\", \"\"]],\n        inputs: {\n          name: \"name\",\n          data: \"data\",\n          xScale: \"xScale\",\n          yScale: \"yScale\",\n          colors: \"colors\",\n          scaleType: \"scaleType\",\n          curve: \"curve\",\n          activeEntries: \"activeEntries\",\n          rangeFillOpacity: \"rangeFillOpacity\",\n          tooltipDisabled: \"tooltipDisabled\",\n          tooltipText: \"tooltipText\",\n          gradient: \"gradient\",\n          tooltipTemplate: \"tooltipTemplate\",\n          animations: \"animations\"\n        },\n        outputs: {\n          select: \"select\",\n          activate: \"activate\",\n          deactivate: \"deactivate\"\n        },\n        standalone: false,\n        features: [i0.ɵɵNgOnChangesFeature],\n        attrs: _c39,\n        decls: 5,\n        vars: 11,\n        consts: [[1, \"polar-charts-series\"], [\"ngx-charts-svg-radial-gradient\", \"\", 3, \"color\", \"name\", \"startOpacity\", \"endOpacity\", \"stops\", 4, \"ngIf\"], [\"ngx-charts-line\", \"\", 1, \"polar-series-path\", 3, \"path\", \"stroke\", \"fill\", \"animations\"], [\"ngx-charts-circle\", \"\", \"class\", \"circle\", \"ngx-tooltip\", \"\", 3, \"cx\", \"cy\", \"r\", \"fill\", \"opacity\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\", 4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-svg-radial-gradient\", \"\", 3, \"color\", \"name\", \"startOpacity\", \"endOpacity\", \"stops\"], [\"ngx-charts-circle\", \"\", \"ngx-tooltip\", \"\", 1, \"circle\", 3, \"select\", \"activate\", \"deactivate\", \"cx\", \"cy\", \"r\", \"fill\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\"]],\n        template: function PolarSeriesComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(0, \"g\", 0)(1, \"defs\");\n            i0.ɵɵtemplate(2, PolarSeriesComponent__svg_g_2_Template, 1, 5, \"g\", 1);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(3, \"g\", 2);\n            i0.ɵɵtemplate(4, PolarSeriesComponent__svg_g_4_Template, 1, 12, \"g\", 3);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngIf\", ctx.hasGradient);\n            i0.ɵɵadvance();\n            i0.ɵɵclassProp(\"active\", ctx.active)(\"inactive\", ctx.inactive);\n            i0.ɵɵproperty(\"path\", ctx.path)(\"stroke\", ctx.hasGradient ? ctx.gradientUrl : ctx.seriesColor)(\"fill\", ctx.hasGradient ? ctx.gradientUrl : ctx.seriesColor)(\"animations\", ctx.animations);\n            i0.ɵɵattribute(\"fill-opacity\", ctx.rangeFillOpacity);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngForOf\", ctx.circles);\n          }\n        },\n        dependencies: [i1.NgForOf, i1.NgIf, TooltipDirective, CircleComponent, SvgRadialGradientComponent, LineComponent],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return PolarSeriesComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst twoPI = 2 * Math.PI;\nlet PolarChartComponent = /*#__PURE__*/(() => {\n  class PolarChartComponent extends BaseChartComponent {\n    constructor() {\n      super(...arguments);\n      this.legendTitle = 'Legend';\n      this.legendPosition = LegendPosition.Right;\n      this.showGridLines = true;\n      this.curve = curveCardinalClosed;\n      this.activeEntries = [];\n      this.rangeFillOpacity = 0.15;\n      this.trimYAxisTicks = true;\n      this.maxYAxisTickLength = 16;\n      this.roundDomains = false;\n      this.tooltipDisabled = false;\n      this.showSeriesOnHover = true;\n      this.gradient = false;\n      this.yAxisMinScale = 0;\n      this.labelTrim = true;\n      this.labelTrimSize = 10;\n      this.wrapTicks = false;\n      this.activate = new EventEmitter();\n      this.deactivate = new EventEmitter();\n      // series: any; // ???\n      this.margin = [10, 20, 10, 20];\n      this.xAxisHeight = 0;\n      this.yAxisWidth = 0;\n      this.orientation = Orientation;\n      this.isSSR = false;\n    }\n    ngOnInit() {\n      if (isPlatformServer(this.platformId)) {\n        this.isSSR = true;\n      }\n    }\n    update() {\n      super.update();\n      this.setDims();\n      this.setScales();\n      this.setColors();\n      this.legendOptions = this.getLegendOptions();\n      this.setTicks();\n    }\n    setDims() {\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin,\n        showXAxis: this.xAxis,\n        showYAxis: this.yAxis,\n        xAxisHeight: this.xAxisHeight,\n        yAxisWidth: this.yAxisWidth,\n        showXLabel: this.showXAxisLabel,\n        showYLabel: this.showYAxisLabel,\n        showLegend: this.legend,\n        legendType: this.schemeType,\n        legendPosition: this.legendPosition\n      });\n      const halfWidth = Math.floor(this.dims.width / 2);\n      const halfHeight = Math.floor(this.dims.height / 2);\n      const outerRadius = this.outerRadius = Math.min(halfHeight / 1.5, halfWidth / 1.5);\n      const yOffset = Math.max(0, halfHeight - outerRadius);\n      this.yAxisDims = {\n        ...this.dims,\n        width: halfWidth\n      };\n      this.transform = `translate(${this.dims.xOffset}, ${this.margin[0]})`;\n      this.transformYAxis = `translate(0, ${yOffset})`;\n      this.labelOffset = this.dims.height + 40;\n      this.transformPlot = `translate(${halfWidth}, ${halfHeight})`;\n    }\n    setScales() {\n      const xValues = this.getXValues();\n      this.scaleType = getScaleType(xValues);\n      this.xDomain = this.filteredDomain || this.getXDomain(xValues);\n      this.yDomain = this.getYDomain();\n      this.seriesDomain = this.getSeriesDomain();\n      this.xScale = this.getXScale(this.xDomain, twoPI);\n      this.yScale = this.getYScale(this.yDomain, this.outerRadius);\n      this.yAxisScale = this.getYScale(this.yDomain.reverse(), this.outerRadius);\n    }\n    setTicks() {\n      let tickFormat;\n      if (this.xAxisTickFormatting) {\n        tickFormat = this.xAxisTickFormatting;\n      } else if (this.xScale.tickFormat) {\n        tickFormat = this.xScale.tickFormat.apply(this.xScale, [5]);\n      } else {\n        tickFormat = d => {\n          if (isDate(d)) {\n            return d.toLocaleDateString();\n          }\n          return d.toLocaleString();\n        };\n      }\n      const outerRadius = this.outerRadius;\n      const s = 1.1;\n      this.thetaTicks = this.xDomain.map(d => {\n        const startAngle = this.xScale(d);\n        const dd = s * outerRadius * (startAngle > Math.PI ? -1 : 1);\n        const label = tickFormat(d);\n        const startPos = [outerRadius * Math.sin(startAngle), -outerRadius * Math.cos(startAngle)];\n        const pos = [dd, s * startPos[1]];\n        return {\n          innerRadius: 0,\n          outerRadius,\n          startAngle,\n          endAngle: startAngle,\n          value: outerRadius,\n          label,\n          startPos,\n          pos\n        };\n      });\n      const minDistance = 10;\n      /* from pie chart, abstract out -*/\n      for (let i = 0; i < this.thetaTicks.length - 1; i++) {\n        const a = this.thetaTicks[i];\n        for (let j = i + 1; j < this.thetaTicks.length; j++) {\n          const b = this.thetaTicks[j];\n          // if they're on the same side\n          if (b.pos[0] * a.pos[0] > 0) {\n            // if they're overlapping\n            const o = minDistance - Math.abs(b.pos[1] - a.pos[1]);\n            if (o > 0) {\n              // push the second up or down\n              b.pos[1] += Math.sign(b.pos[0]) * o;\n            }\n          }\n        }\n      }\n      this.radiusTicks = this.yAxisScale.ticks(Math.floor(this.dims.height / 50)).map(d => this.yScale(d));\n    }\n    getXValues() {\n      const values = [];\n      for (const results of this.results) {\n        for (const d of results.series) {\n          if (!values.includes(d.name)) {\n            values.push(d.name);\n          }\n        }\n      }\n      return values;\n    }\n    getXDomain(values = this.getXValues()) {\n      if (this.scaleType === ScaleType.Time) {\n        const min = Math.min(...values);\n        const max = Math.max(...values);\n        return [min, max];\n      } else if (this.scaleType === ScaleType.Linear) {\n        values = values.map(v => Number(v));\n        const min = Math.min(...values);\n        const max = Math.max(...values);\n        return [min, max];\n      }\n      return values;\n    }\n    getYValues() {\n      const domain = [];\n      for (const results of this.results) {\n        for (const d of results.series) {\n          if (domain.indexOf(d.value) < 0) {\n            domain.push(d.value);\n          }\n          if (d.min !== undefined) {\n            if (domain.indexOf(d.min) < 0) {\n              domain.push(d.min);\n            }\n          }\n          if (d.max !== undefined) {\n            if (domain.indexOf(d.max) < 0) {\n              domain.push(d.max);\n            }\n          }\n        }\n      }\n      return domain;\n    }\n    getYDomain(domain = this.getYValues()) {\n      let min = Math.min(...domain);\n      const max = Math.max(this.yAxisMinScale, ...domain);\n      min = Math.max(0, min);\n      if (!this.autoScale) {\n        min = Math.min(0, min);\n      }\n      return [min, max];\n    }\n    getSeriesDomain() {\n      return this.results.map(d => d.name);\n    }\n    getXScale(domain, width) {\n      switch (this.scaleType) {\n        case ScaleType.Time:\n          return scaleTime().range([0, width]).domain(domain);\n        case ScaleType.Linear:\n          {\n            const scale = scaleLinear().range([0, width]).domain(domain);\n            return this.roundDomains ? scale.nice() : scale;\n          }\n        default:\n          return scalePoint().range([0, width - twoPI / domain.length]).padding(0).domain(domain);\n      }\n    }\n    getYScale(domain, height) {\n      const scale = scaleLinear().range([0, height]).domain(domain);\n      return this.roundDomains ? scale.nice() : scale;\n    }\n    onClick(data, series) {\n      if (series) {\n        data.series = series.name;\n      }\n      this.select.emit(data);\n    }\n    setColors() {\n      const domain = this.schemeType === ScaleType.Ordinal ? this.seriesDomain : this.yDomain.reverse();\n      this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n      if (this.schemeType === ScaleType.Ordinal) {\n        return {\n          scaleType: this.schemeType,\n          colors: this.colors,\n          domain: this.seriesDomain,\n          title: this.legendTitle,\n          position: this.legendPosition\n        };\n      }\n      return {\n        scaleType: this.schemeType,\n        colors: this.colors.scale,\n        domain: this.yDomain,\n        title: undefined,\n        position: this.legendPosition\n      };\n    }\n    updateYAxisWidth({\n      width\n    }) {\n      this.yAxisWidth = width;\n      this.update();\n    }\n    updateXAxisHeight({\n      height\n    }) {\n      this.xAxisHeight = height;\n      this.update();\n    }\n    onActivate(item) {\n      const idx = this.activeEntries.findIndex(d => {\n        return d.name === item.name && d.value === item.value;\n      });\n      if (idx > -1) {\n        return;\n      }\n      this.activeEntries = this.showSeriesOnHover ? [item, ...this.activeEntries] : this.activeEntries;\n      this.activate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n    onDeactivate(item) {\n      const idx = this.activeEntries.findIndex(d => {\n        return d.name === item.name && d.value === item.value;\n      });\n      this.activeEntries.splice(idx, 1);\n      this.activeEntries = [...this.activeEntries];\n      this.deactivate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n    deactivateAll() {\n      this.activeEntries = [...this.activeEntries];\n      for (const entry of this.activeEntries) {\n        this.deactivate.emit({\n          value: entry,\n          entries: []\n        });\n      }\n      this.activeEntries = [];\n    }\n    trackBy(index, item) {\n      return `${item.name}`;\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵPolarChartComponent_BaseFactory;\n        return function PolarChartComponent_Factory(__ngFactoryType__) {\n          return (ɵPolarChartComponent_BaseFactory || (ɵPolarChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(PolarChartComponent)))(__ngFactoryType__ || PolarChartComponent);\n        };\n      })();\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: PolarChartComponent,\n        selectors: [[\"ngx-charts-polar-chart\"]],\n        contentQueries: function PolarChartComponent_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n          }\n        },\n        inputs: {\n          legend: \"legend\",\n          legendTitle: \"legendTitle\",\n          legendPosition: \"legendPosition\",\n          xAxis: \"xAxis\",\n          yAxis: \"yAxis\",\n          showXAxisLabel: \"showXAxisLabel\",\n          showYAxisLabel: \"showYAxisLabel\",\n          xAxisLabel: \"xAxisLabel\",\n          yAxisLabel: \"yAxisLabel\",\n          autoScale: \"autoScale\",\n          showGridLines: \"showGridLines\",\n          curve: \"curve\",\n          activeEntries: \"activeEntries\",\n          schemeType: \"schemeType\",\n          rangeFillOpacity: \"rangeFillOpacity\",\n          trimYAxisTicks: \"trimYAxisTicks\",\n          maxYAxisTickLength: \"maxYAxisTickLength\",\n          xAxisTickFormatting: \"xAxisTickFormatting\",\n          yAxisTickFormatting: \"yAxisTickFormatting\",\n          roundDomains: \"roundDomains\",\n          tooltipDisabled: \"tooltipDisabled\",\n          showSeriesOnHover: \"showSeriesOnHover\",\n          gradient: \"gradient\",\n          yAxisMinScale: \"yAxisMinScale\",\n          labelTrim: \"labelTrim\",\n          labelTrimSize: \"labelTrimSize\",\n          wrapTicks: \"wrapTicks\"\n        },\n        outputs: {\n          activate: \"activate\",\n          deactivate: \"deactivate\"\n        },\n        standalone: false,\n        features: [i0.ɵɵInheritDefinitionFeature],\n        decls: 10,\n        vars: 17,\n        consts: [[3, \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\"], [1, \"polar-chart\", \"chart\"], [\"cx\", \"0\", \"cy\", \"0\", 1, \"polar-chart-background\"], [4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-axis-label\", \"\", 3, \"label\", \"offset\", \"orient\", \"height\", \"width\", 4, \"ngIf\"], [\"class\", \"gridline-path radial-gridline-path\", \"cx\", \"0\", \"cy\", \"0\", 4, \"ngFor\", \"ngForOf\"], [\"cx\", \"0\", \"cy\", \"0\", 1, \"gridline-path\", \"radial-gridline-path\"], [\"ngx-charts-pie-label\", \"\", 3, \"data\", \"radius\", \"label\", \"max\", \"value\", \"explodeSlices\", \"animations\", \"labelTrim\", \"labelTrimSize\", 4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-pie-label\", \"\", 3, \"data\", \"radius\", \"label\", \"max\", \"value\", \"explodeSlices\", \"animations\", \"labelTrim\", \"labelTrimSize\"], [\"ngx-charts-y-axis\", \"\", 3, \"dimensionsChanged\", \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"wrapTicks\"], [\"ngx-charts-axis-label\", \"\", 3, \"label\", \"offset\", \"orient\", \"height\", \"width\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-polar-series\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"gradient\", \"xScale\", \"yScale\", \"colors\", \"data\", \"activeEntries\", \"scaleType\", \"curve\", \"rangeFillOpacity\", \"animations\", \"tooltipDisabled\", \"tooltipTemplate\"]],\n        template: function PolarChartComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n            i0.ɵɵlistener(\"legendLabelClick\", function PolarChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n              return ctx.onClick($event);\n            })(\"legendLabelActivate\", function PolarChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n              return ctx.onActivate($event);\n            })(\"legendLabelDeactivate\", function PolarChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n              return ctx.onDeactivate($event);\n            });\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(1, \"g\", 1)(2, \"g\");\n            i0.ɵɵelement(3, \"circle\", 2);\n            i0.ɵɵtemplate(4, PolarChartComponent__svg_g_4_Template, 2, 1, \"g\", 3)(5, PolarChartComponent__svg_g_5_Template, 2, 1, \"g\", 3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(6, PolarChartComponent__svg_g_6_Template, 1, 10, \"g\", 4)(7, PolarChartComponent__svg_g_7_Template, 1, 5, \"g\", 5)(8, PolarChartComponent__svg_g_8_Template, 2, 3, \"g\", 3)(9, PolarChartComponent__svg_g_9_Template, 2, 3, \"g\", 3);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(14, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"transform\", ctx.transform);\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"transform\", ctx.transformPlot);\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"r\", ctx.outerRadius);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.showGridLines);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.xAxis && ctx.showXAxisLabel);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n          }\n        },\n        dependencies: [i1.NgForOf, i1.NgIf, AxisLabelComponent, YAxisComponent, ChartComponent, PieLabelComponent, PolarSeriesComponent],\n        styles: [_c25, \".pie-label{font-size:11px}.pie-label.animation{animation:.75s ease-in fadeIn}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{animation:3s linear drawOut;transition:d .75s}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\", \".polar-chart .polar-chart-background{fill:none}.polar-chart .radial-gridline-path{stroke-dasharray:10 10;fill:none}.polar-chart .pie-label-line{stroke:#2f3646}.polar-charts-series .polar-series-area,.polar-series-path{pointer-events:none}\\n\"],\n        encapsulation: 2,\n        data: {\n          animation: [trigger('animationState', [transition(':leave', [style({\n            opacity: 1\n          }), animate(500, style({\n            opacity: 0\n          }))])])]\n        },\n        changeDetection: 0\n      });\n    }\n  }\n  return PolarChartComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet PieArcComponent = /*#__PURE__*/(() => {\n  class PieArcComponent {\n    constructor(element) {\n      this.startAngle = 0;\n      this.endAngle = Math.PI * 2;\n      this.cornerRadius = 0;\n      this.explodeSlices = false;\n      this.gradient = false;\n      this.animate = true;\n      this.pointerEvents = true;\n      this.isActive = false;\n      this.select = new EventEmitter();\n      this.activate = new EventEmitter();\n      this.deactivate = new EventEmitter();\n      this.dblclick = new EventEmitter();\n      this.barOrientation = BarOrientation;\n      this.initialized = false;\n      this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n      this.update();\n    }\n    getGradient() {\n      return this.gradient ? this.gradientFill : this.fill;\n    }\n    getPointerEvents() {\n      return this.pointerEvents ? 'auto' : 'none';\n    }\n    update() {\n      const calc = this.calculateArc();\n      this.startOpacity = 0.5;\n      this.radialGradientId = 'linearGrad' + id().toString();\n      this.gradientFill = `url(#${this.radialGradientId})`;\n      if (this.animate) {\n        if (this.initialized) {\n          this.updateAnimation();\n        } else {\n          this.loadAnimation();\n          this.initialized = true;\n        }\n      } else {\n        this.path = calc.startAngle(this.startAngle).endAngle(this.endAngle)();\n      }\n    }\n    calculateArc() {\n      let outerRadius = this.outerRadius;\n      if (this.explodeSlices && this.innerRadius === 0) {\n        outerRadius = this.outerRadius * this.value / this.max;\n      }\n      return arc().innerRadius(this.innerRadius).outerRadius(outerRadius).cornerRadius(this.cornerRadius);\n    }\n    loadAnimation() {\n      const node = select(this.element).selectAll('.arc').data([{\n        startAngle: this.startAngle,\n        endAngle: this.endAngle\n      }]);\n      const calc = this.calculateArc();\n      node.transition().attrTween('d', function (d) {\n        this._current = this._current || d;\n        const copyOfD = Object.assign({}, d);\n        copyOfD.endAngle = copyOfD.startAngle;\n        const interpolater = interpolate(copyOfD, copyOfD);\n        this._current = interpolater(0);\n        return function (t) {\n          return calc(interpolater(t));\n        };\n      }).transition().duration(750).attrTween('d', function (d) {\n        this._current = this._current || d;\n        const interpolater = interpolate(this._current, d);\n        this._current = interpolater(0);\n        return function (t) {\n          return calc(interpolater(t));\n        };\n      });\n    }\n    updateAnimation() {\n      const node = select(this.element).selectAll('.arc').data([{\n        startAngle: this.startAngle,\n        endAngle: this.endAngle\n      }]);\n      const calc = this.calculateArc();\n      node.transition().duration(750).attrTween('d', function (d) {\n        this._current = this._current || d;\n        const interpolater = interpolate(this._current, d);\n        this._current = interpolater(0);\n        return function (t) {\n          return calc(interpolater(t));\n        };\n      });\n    }\n    onClick() {\n      clearTimeout(this._timeout);\n      this._timeout = setTimeout(() => this.select.emit(this.data), 200);\n    }\n    onDblClick(event) {\n      event.preventDefault();\n      event.stopPropagation();\n      clearTimeout(this._timeout);\n      this.dblclick.emit({\n        data: this.data,\n        nativeEvent: event\n      });\n    }\n    static {\n      this.ɵfac = function PieArcComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || PieArcComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: PieArcComponent,\n        selectors: [[\"g\", \"ngx-charts-pie-arc\", \"\"]],\n        inputs: {\n          fill: \"fill\",\n          startAngle: \"startAngle\",\n          endAngle: \"endAngle\",\n          innerRadius: \"innerRadius\",\n          outerRadius: \"outerRadius\",\n          cornerRadius: \"cornerRadius\",\n          value: \"value\",\n          max: \"max\",\n          data: \"data\",\n          explodeSlices: \"explodeSlices\",\n          gradient: \"gradient\",\n          animate: \"animate\",\n          pointerEvents: \"pointerEvents\",\n          isActive: \"isActive\"\n        },\n        outputs: {\n          select: \"select\",\n          activate: \"activate\",\n          deactivate: \"deactivate\",\n          dblclick: \"dblclick\"\n        },\n        standalone: false,\n        features: [i0.ɵɵNgOnChangesFeature],\n        attrs: _c40,\n        decls: 3,\n        vars: 7,\n        consts: [[1, \"arc-group\"], [4, \"ngIf\"], [1, \"arc\", 3, \"click\", \"dblclick\", \"mouseenter\", \"mouseleave\"], [\"ngx-charts-svg-radial-gradient\", \"\", 3, \"color\", \"name\", \"startOpacity\"]],\n        template: function PieArcComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(0, \"g\", 0);\n            i0.ɵɵtemplate(1, PieArcComponent__svg_defs_1_Template, 2, 3, \"defs\", 1);\n            i0.ɵɵelementStart(2, \"path\", 2);\n            i0.ɵɵlistener(\"click\", function PieArcComponent_Template_path_click_2_listener() {\n              return ctx.onClick();\n            })(\"dblclick\", function PieArcComponent_Template_path_dblclick_2_listener($event) {\n              return ctx.onDblClick($event);\n            })(\"mouseenter\", function PieArcComponent_Template_path_mouseenter_2_listener() {\n              return ctx.activate.emit(ctx.data);\n            })(\"mouseleave\", function PieArcComponent_Template_path_mouseleave_2_listener() {\n              return ctx.deactivate.emit(ctx.data);\n            });\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.gradient);\n            i0.ɵɵadvance();\n            i0.ɵɵstyleProp(\"pointer-events\", ctx.getPointerEvents());\n            i0.ɵɵclassProp(\"active\", ctx.isActive);\n            i0.ɵɵattribute(\"d\", ctx.path)(\"fill\", ctx.getGradient());\n          }\n        },\n        dependencies: [i1.NgIf, SvgRadialGradientComponent],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return PieArcComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet PieSeriesComponent = /*#__PURE__*/(() => {\n  class PieSeriesComponent {\n    constructor() {\n      this.series = [];\n      this.innerRadius = 60;\n      this.outerRadius = 80;\n      this.trimLabels = true;\n      this.maxLabelLength = 10;\n      this.tooltipDisabled = false;\n      this.animations = true;\n      this.select = new EventEmitter();\n      this.activate = new EventEmitter();\n      this.deactivate = new EventEmitter();\n      this.dblclick = new EventEmitter();\n      this.placementTypes = PlacementTypes;\n      this.styleTypes = StyleTypes;\n    }\n    ngOnChanges(changes) {\n      this.update();\n    }\n    update() {\n      const pieGenerator = pie().value(d => d.value).sort(null);\n      const arcData = pieGenerator(this.series);\n      this.max = max(arcData, d => {\n        return d.value;\n      });\n      this.data = this.calculateLabelPositions(arcData);\n      this.tooltipText = this.tooltipText || this.defaultTooltipText;\n    }\n    midAngle(d) {\n      return d.startAngle + (d.endAngle - d.startAngle) / 2;\n    }\n    outerArc() {\n      const factor = 1.5;\n      return arc().innerRadius(this.outerRadius * factor).outerRadius(this.outerRadius * factor);\n    }\n    calculateLabelPositions(pieData) {\n      const factor = 1.5;\n      const minDistance = 10;\n      const labelPositions = pieData;\n      labelPositions.forEach(d => {\n        d.pos = this.outerArc().centroid(d);\n        d.pos[0] = factor * this.outerRadius * (this.midAngle(d) < Math.PI ? 1 : -1);\n      });\n      for (let i = 0; i < labelPositions.length - 1; i++) {\n        const a = labelPositions[i];\n        if (!this.labelVisible(a)) {\n          continue;\n        }\n        for (let j = i + 1; j < labelPositions.length; j++) {\n          const b = labelPositions[j];\n          if (!this.labelVisible(b)) {\n            continue;\n          }\n          // if they're on the same side\n          if (b.pos[0] * a.pos[0] > 0) {\n            // if they're overlapping\n            const o = minDistance - Math.abs(b.pos[1] - a.pos[1]);\n            if (o > 0) {\n              // push the second up or down\n              b.pos[1] += Math.sign(b.pos[0]) * o;\n            }\n          }\n        }\n      }\n      return labelPositions;\n    }\n    labelVisible(myArc) {\n      return this.showLabels && myArc.endAngle - myArc.startAngle > Math.PI / 30;\n    }\n    getTooltipTitle(a) {\n      return this.tooltipTemplate ? undefined : this.tooltipText(a);\n    }\n    labelText(myArc) {\n      if (this.labelFormatting) {\n        return this.labelFormatting(myArc.data.name);\n      }\n      return this.label(myArc);\n    }\n    label(myArc) {\n      return formatLabel(myArc.data.name);\n    }\n    defaultTooltipText(myArc) {\n      const label = this.label(myArc);\n      const val = formatLabel(myArc.data.value);\n      return `\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n    }\n    color(myArc) {\n      return this.colors.getColor(this.label(myArc));\n    }\n    trackBy(index, item) {\n      return item.data.name;\n    }\n    onClick(data) {\n      this.select.emit(data);\n    }\n    isActive(entry) {\n      if (!this.activeEntries) return false;\n      const item = this.activeEntries.find(d => {\n        return entry.name === d.name && entry.series === d.series;\n      });\n      return item !== undefined;\n    }\n    static {\n      this.ɵfac = function PieSeriesComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || PieSeriesComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: PieSeriesComponent,\n        selectors: [[\"g\", \"ngx-charts-pie-series\", \"\"]],\n        inputs: {\n          colors: \"colors\",\n          series: \"series\",\n          dims: \"dims\",\n          innerRadius: \"innerRadius\",\n          outerRadius: \"outerRadius\",\n          explodeSlices: \"explodeSlices\",\n          showLabels: \"showLabels\",\n          gradient: \"gradient\",\n          activeEntries: \"activeEntries\",\n          labelFormatting: \"labelFormatting\",\n          trimLabels: \"trimLabels\",\n          maxLabelLength: \"maxLabelLength\",\n          tooltipText: \"tooltipText\",\n          tooltipDisabled: \"tooltipDisabled\",\n          tooltipTemplate: \"tooltipTemplate\",\n          animations: \"animations\"\n        },\n        outputs: {\n          select: \"select\",\n          activate: \"activate\",\n          deactivate: \"deactivate\",\n          dblclick: \"dblclick\"\n        },\n        standalone: false,\n        features: [i0.ɵɵNgOnChangesFeature],\n        attrs: _c41,\n        decls: 1,\n        vars: 2,\n        consts: [[4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-pie-label\", \"\", 3, \"data\", \"radius\", \"color\", \"label\", \"labelTrim\", \"labelTrimSize\", \"max\", \"value\", \"explodeSlices\", \"animations\", 4, \"ngIf\"], [\"ngx-charts-pie-arc\", \"\", \"ngx-tooltip\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"dblclick\", \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"fill\", \"value\", \"gradient\", \"data\", \"max\", \"explodeSlices\", \"isActive\", \"animate\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\"], [\"ngx-charts-pie-label\", \"\", 3, \"data\", \"radius\", \"color\", \"label\", \"labelTrim\", \"labelTrimSize\", \"max\", \"value\", \"explodeSlices\", \"animations\"]],\n        template: function PieSeriesComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵtemplate(0, PieSeriesComponent__svg_g_0_Template, 3, 19, \"g\", 0);\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"ngForOf\", ctx.data)(\"ngForTrackBy\", ctx.trackBy);\n          }\n        },\n        dependencies: [i1.NgForOf, i1.NgIf, TooltipDirective, PieLabelComponent, PieArcComponent],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return PieSeriesComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet AdvancedPieChartComponent = /*#__PURE__*/(() => {\n  class AdvancedPieChartComponent extends BaseChartComponent {\n    constructor() {\n      super(...arguments);\n      this.activeEntries = [];\n      this.tooltipDisabled = false;\n      this.label = 'Total';\n      this.activate = new EventEmitter();\n      this.deactivate = new EventEmitter();\n      this.margin = [20, 20, 20, 20];\n    }\n    update() {\n      super.update();\n      this.dims = calculateViewDimensions({\n        width: this.width * 4 / 12.0,\n        height: this.height,\n        margins: this.margin\n      });\n      this.formatDates();\n      this.domain = this.getDomain();\n      this.setColors();\n      const xOffset = this.dims.width / 2;\n      const yOffset = this.margin[0] + this.dims.height / 2;\n      this.legendWidth = this.width - this.dims.width - this.margin[1];\n      this.outerRadius = Math.min(this.dims.width, this.dims.height) / 2.5;\n      this.innerRadius = this.outerRadius * 0.75;\n      this.transform = `translate(${xOffset} , ${yOffset})`;\n    }\n    getDomain() {\n      return this.results.map(d => d.label);\n    }\n    onClick(data) {\n      this.select.emit(data);\n    }\n    setColors() {\n      this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n    onActivate(item, fromLegend = false) {\n      item = this.results.find(d => {\n        if (fromLegend) {\n          return d.label === item.name;\n        } else {\n          return d.name === item.name;\n        }\n      });\n      const idx = this.activeEntries.findIndex(d => {\n        return d.name === item.name && d.value === item.value && d.series === item.series;\n      });\n      if (idx > -1) {\n        return;\n      }\n      this.activeEntries = [item, ...this.activeEntries];\n      this.activate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n    onDeactivate(item, fromLegend = false) {\n      item = this.results.find(d => {\n        if (fromLegend) {\n          return d.label === item.name;\n        } else {\n          return d.name === item.name;\n        }\n      });\n      const idx = this.activeEntries.findIndex(d => {\n        return d.name === item.name && d.value === item.value && d.series === item.series;\n      });\n      this.activeEntries.splice(idx, 1);\n      this.activeEntries = [...this.activeEntries];\n      this.deactivate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵAdvancedPieChartComponent_BaseFactory;\n        return function AdvancedPieChartComponent_Factory(__ngFactoryType__) {\n          return (ɵAdvancedPieChartComponent_BaseFactory || (ɵAdvancedPieChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(AdvancedPieChartComponent)))(__ngFactoryType__ || AdvancedPieChartComponent);\n        };\n      })();\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: AdvancedPieChartComponent,\n        selectors: [[\"ngx-charts-advanced-pie-chart\"]],\n        contentQueries: function AdvancedPieChartComponent_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n          }\n        },\n        inputs: {\n          gradient: \"gradient\",\n          activeEntries: \"activeEntries\",\n          tooltipDisabled: \"tooltipDisabled\",\n          tooltipText: \"tooltipText\",\n          label: \"label\",\n          valueFormatting: \"valueFormatting\",\n          nameFormatting: \"nameFormatting\",\n          percentageFormatting: \"percentageFormatting\"\n        },\n        outputs: {\n          activate: \"activate\",\n          deactivate: \"deactivate\"\n        },\n        standalone: false,\n        features: [i0.ɵɵInheritDefinitionFeature],\n        decls: 7,\n        vars: 37,\n        consts: [[1, \"advanced-pie\", \"chart\"], [3, \"view\", \"showLegend\", \"animations\"], [1, \"pie\", \"chart\"], [\"ngx-charts-pie-series\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"colors\", \"series\", \"innerRadius\", \"activeEntries\", \"outerRadius\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"tooltipText\", \"animations\"], [1, \"advanced-pie-legend-wrapper\"], [3, \"select\", \"activate\", \"deactivate\", \"data\", \"colors\", \"width\", \"label\", \"animations\", \"valueFormatting\", \"labelFormatting\", \"percentageFormatting\"]],\n        template: function AdvancedPieChartComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\")(1, \"div\", 0)(2, \"ngx-charts-chart\", 1);\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(3, \"g\", 2)(4, \"g\", 3);\n            i0.ɵɵlistener(\"select\", function AdvancedPieChartComponent_Template_g_select_4_listener($event) {\n              return ctx.onClick($event);\n            })(\"activate\", function AdvancedPieChartComponent_Template_g_activate_4_listener($event) {\n              return ctx.onActivate($event);\n            })(\"deactivate\", function AdvancedPieChartComponent_Template_g_deactivate_4_listener($event) {\n              return ctx.onDeactivate($event);\n            });\n            i0.ɵɵelementEnd()()()();\n            i0.ɵɵnamespaceHTML();\n            i0.ɵɵelementStart(5, \"div\", 4)(6, \"ngx-charts-advanced-legend\", 5);\n            i0.ɵɵlistener(\"select\", function AdvancedPieChartComponent_Template_ngx_charts_advanced_legend_select_6_listener($event) {\n              return ctx.onClick($event);\n            })(\"activate\", function AdvancedPieChartComponent_Template_ngx_charts_advanced_legend_activate_6_listener($event) {\n              return ctx.onActivate($event, true);\n            })(\"deactivate\", function AdvancedPieChartComponent_Template_ngx_charts_advanced_legend_deactivate_6_listener($event) {\n              return ctx.onDeactivate($event, true);\n            });\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵstyleProp(\"width\", ctx.width, \"px\")(\"height\", ctx.height, \"px\");\n            i0.ɵɵadvance();\n            i0.ɵɵstyleProp(\"width\", ctx.dims.width, \"px\")(\"height\", ctx.dims.height, \"px\");\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(34, _c24, ctx.width, ctx.height))(\"showLegend\", false)(\"animations\", ctx.animations);\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"transform\", ctx.transform);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"colors\", ctx.colors)(\"series\", ctx.results)(\"innerRadius\", ctx.innerRadius)(\"activeEntries\", ctx.activeEntries)(\"outerRadius\", ctx.outerRadius)(\"gradient\", ctx.gradient)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"tooltipText\", ctx.tooltipText)(\"animations\", ctx.animations);\n            i0.ɵɵadvance();\n            i0.ɵɵstyleProp(\"width\", ctx.width - ctx.dims.width, \"px\")(\"height\", ctx.height, \"px\");\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"data\", ctx.results)(\"colors\", ctx.colors)(\"width\", ctx.width - ctx.dims.width - ctx.margin[1])(\"label\", ctx.label)(\"animations\", ctx.animations)(\"valueFormatting\", ctx.valueFormatting)(\"labelFormatting\", ctx.nameFormatting)(\"percentageFormatting\", ctx.percentageFormatting);\n          }\n        },\n        dependencies: [ChartComponent, AdvancedLegendComponent, PieSeriesComponent],\n        styles: [_c25, \".advanced-pie{display:inline-block;float:left}.advanced-pie-legend-wrapper{display:inline-block}\\n\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return AdvancedPieChartComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet PieChartComponent = /*#__PURE__*/(() => {\n  class PieChartComponent extends BaseChartComponent {\n    constructor() {\n      super(...arguments);\n      this.labels = false;\n      this.legend = false;\n      this.legendTitle = 'Legend';\n      this.legendPosition = LegendPosition.Right;\n      this.explodeSlices = false;\n      this.doughnut = false;\n      this.arcWidth = 0.25;\n      this.activeEntries = [];\n      this.tooltipDisabled = false;\n      this.trimLabels = true;\n      this.maxLabelLength = 10;\n      this.dblclick = new EventEmitter();\n      this.select = new EventEmitter();\n      this.activate = new EventEmitter();\n      this.deactivate = new EventEmitter();\n    }\n    update() {\n      super.update();\n      if (this.labels && this.hasNoOptionalMarginsSet()) {\n        this.margins = [30, 80, 30, 80];\n      } else if (!this.labels && this.hasNoOptionalMarginsSet()) {\n        // default value for margins\n        this.margins = [20, 20, 20, 20];\n      }\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margins,\n        showLegend: this.legend,\n        legendPosition: this.legendPosition\n      });\n      this.formatDates();\n      const xOffset = this.margins[3] + this.dims.width / 2;\n      const yOffset = this.margins[0] + this.dims.height / 2;\n      this.translation = `translate(${xOffset}, ${yOffset})`;\n      this.outerRadius = Math.min(this.dims.width, this.dims.height);\n      if (this.labels) {\n        // make room for labels\n        this.outerRadius /= 3;\n      } else {\n        this.outerRadius /= 2;\n      }\n      this.innerRadius = 0;\n      if (this.doughnut) {\n        this.innerRadius = this.outerRadius * (1 - this.arcWidth);\n      }\n      this.domain = this.getDomain();\n      // sort data according to domain\n      this.data = this.results.sort((a, b) => {\n        return this.domain.indexOf(a.name) - this.domain.indexOf(b.name);\n      });\n      this.setColors();\n      this.legendOptions = this.getLegendOptions();\n    }\n    getDomain() {\n      return this.results.map(d => d.label);\n    }\n    onClick(data) {\n      this.select.emit(data);\n    }\n    setColors() {\n      this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n    getLegendOptions() {\n      return {\n        scaleType: ScaleType.Ordinal,\n        domain: this.domain,\n        colors: this.colors,\n        title: this.legendTitle,\n        position: this.legendPosition\n      };\n    }\n    onActivate(item, fromLegend = false) {\n      item = this.results.find(d => {\n        if (fromLegend) {\n          return d.label === item.name;\n        } else {\n          return d.name === item.name;\n        }\n      });\n      const idx = this.activeEntries.findIndex(d => {\n        return d.name === item.name && d.value === item.value && d.series === item.series;\n      });\n      if (idx > -1) {\n        return;\n      }\n      this.activeEntries = [item, ...this.activeEntries];\n      this.activate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n    onDeactivate(item, fromLegend = false) {\n      item = this.results.find(d => {\n        if (fromLegend) {\n          return d.label === item.name;\n        } else {\n          return d.name === item.name;\n        }\n      });\n      const idx = this.activeEntries.findIndex(d => {\n        return d.name === item.name && d.value === item.value && d.series === item.series;\n      });\n      this.activeEntries.splice(idx, 1);\n      this.activeEntries = [...this.activeEntries];\n      this.deactivate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n    hasNoOptionalMarginsSet() {\n      return !this.margins || this.margins.length <= 0;\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵPieChartComponent_BaseFactory;\n        return function PieChartComponent_Factory(__ngFactoryType__) {\n          return (ɵPieChartComponent_BaseFactory || (ɵPieChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(PieChartComponent)))(__ngFactoryType__ || PieChartComponent);\n        };\n      })();\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: PieChartComponent,\n        selectors: [[\"ngx-charts-pie-chart\"]],\n        contentQueries: function PieChartComponent_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n          }\n        },\n        inputs: {\n          labels: \"labels\",\n          legend: \"legend\",\n          legendTitle: \"legendTitle\",\n          legendPosition: \"legendPosition\",\n          explodeSlices: \"explodeSlices\",\n          doughnut: \"doughnut\",\n          arcWidth: \"arcWidth\",\n          gradient: \"gradient\",\n          activeEntries: \"activeEntries\",\n          tooltipDisabled: \"tooltipDisabled\",\n          labelFormatting: \"labelFormatting\",\n          trimLabels: \"trimLabels\",\n          maxLabelLength: \"maxLabelLength\",\n          tooltipText: \"tooltipText\",\n          margins: \"margins\"\n        },\n        outputs: {\n          dblclick: \"dblclick\",\n          select: \"select\",\n          activate: \"activate\",\n          deactivate: \"deactivate\"\n        },\n        standalone: false,\n        features: [i0.ɵɵInheritDefinitionFeature],\n        decls: 3,\n        vars: 24,\n        consts: [[3, \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\", \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\"], [1, \"pie-chart\", \"chart\"], [\"ngx-charts-pie-series\", \"\", 3, \"dblclick\", \"select\", \"activate\", \"deactivate\", \"colors\", \"series\", \"showLabels\", \"labelFormatting\", \"trimLabels\", \"maxLabelLength\", \"activeEntries\", \"innerRadius\", \"outerRadius\", \"explodeSlices\", \"gradient\", \"animations\", \"tooltipDisabled\", \"tooltipTemplate\", \"tooltipText\"]],\n        template: function PieChartComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n            i0.ɵɵlistener(\"legendLabelActivate\", function PieChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n              return ctx.onActivate($event, true);\n            })(\"legendLabelDeactivate\", function PieChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n              return ctx.onDeactivate($event, true);\n            })(\"legendLabelClick\", function PieChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n              return ctx.onClick($event);\n            });\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(1, \"g\", 1)(2, \"g\", 2);\n            i0.ɵɵlistener(\"dblclick\", function PieChartComponent_Template_g_dblclick_2_listener($event) {\n              return ctx.dblclick.emit($event);\n            })(\"select\", function PieChartComponent_Template_g_select_2_listener($event) {\n              return ctx.onClick($event);\n            })(\"activate\", function PieChartComponent_Template_g_activate_2_listener($event) {\n              return ctx.onActivate($event);\n            })(\"deactivate\", function PieChartComponent_Template_g_deactivate_2_listener($event) {\n              return ctx.onDeactivate($event);\n            });\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(21, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"transform\", ctx.translation);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"colors\", ctx.colors)(\"series\", ctx.data)(\"showLabels\", ctx.labels)(\"labelFormatting\", ctx.labelFormatting)(\"trimLabels\", ctx.trimLabels)(\"maxLabelLength\", ctx.maxLabelLength)(\"activeEntries\", ctx.activeEntries)(\"innerRadius\", ctx.innerRadius)(\"outerRadius\", ctx.outerRadius)(\"explodeSlices\", ctx.explodeSlices)(\"gradient\", ctx.gradient)(\"animations\", ctx.animations)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"tooltipText\", ctx.tooltipText);\n          }\n        },\n        dependencies: [ChartComponent, PieSeriesComponent],\n        styles: [_c25, _c42],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return PieChartComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction gridSize(dims, len, minWidth) {\n  let rows = 1;\n  let cols = len;\n  const width = dims.width;\n  if (width > minWidth) {\n    while (width / cols < minWidth) {\n      rows += 1;\n      cols = Math.ceil(len / rows);\n    }\n  }\n  return [cols, rows];\n}\nfunction gridLayout(dims, data, minWidth, designatedTotal) {\n  const xScale = scaleBand();\n  const yScale = scaleBand();\n  const width = dims.width;\n  const height = dims.height;\n  const [columns, rows] = gridSize(dims, data.length, minWidth);\n  const xDomain = [];\n  const yDomain = [];\n  for (let i = 0; i < rows; i++) {\n    yDomain.push(i);\n  }\n  for (let i = 0; i < columns; i++) {\n    xDomain.push(i);\n  }\n  xScale.domain(xDomain);\n  yScale.domain(yDomain);\n  xScale.rangeRound([0, width], 0.1);\n  yScale.rangeRound([0, height], 0.1);\n  const res = [];\n  const total = designatedTotal ? designatedTotal : getTotal(data);\n  const cardWidth = xScale.bandwidth();\n  const cardHeight = yScale.bandwidth();\n  for (let i = 0; i < data.length; i++) {\n    res[i] = {};\n    res[i].data = {\n      name: data[i] ? data[i].name : '',\n      value: data[i] ? data[i].value : undefined,\n      extra: data[i] ? data[i].extra : undefined,\n      label: data[i] ? data[i].label : ''\n    };\n    res[i].x = xScale(i % columns);\n    res[i].y = yScale(Math.floor(i / columns));\n    res[i].width = cardWidth;\n    res[i].height = cardHeight;\n    res[i].data.percent = total > 0 ? res[i].data.value / total : 0;\n    res[i].data.total = total;\n  }\n  return res;\n}\nfunction getTotal(results) {\n  return results.map(d => d ? d.value : 0).reduce((sum, val) => sum + val, 0);\n}\nlet PieGridSeriesComponent = /*#__PURE__*/(() => {\n  class PieGridSeriesComponent {\n    constructor(element) {\n      this.innerRadius = 70;\n      this.outerRadius = 80;\n      this.animations = true;\n      this.select = new EventEmitter();\n      this.activate = new EventEmitter();\n      this.deactivate = new EventEmitter();\n      this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n      this.update();\n    }\n    update() {\n      this.layout = pie().value(d => d.data.value).sort(null);\n      this.arcs = this.getArcs();\n    }\n    getArcs() {\n      return this.layout(this.data).map((arc, index) => {\n        const label = arc.data.data.name;\n        const other = arc.data.data.other;\n        if (index === 0) {\n          arc.startAngle = 0;\n        }\n        const color = this.colors(label);\n        return {\n          data: arc.data.data,\n          class: 'arc ' + 'arc' + index,\n          fill: color,\n          startAngle: other ? 0 : arc.startAngle,\n          endAngle: arc.endAngle,\n          animate: this.animations && !other,\n          pointerEvents: !other\n        };\n      });\n    }\n    onClick(data) {\n      this.select.emit(this.data[0].data);\n    }\n    trackBy(index, item) {\n      return item.data.name;\n    }\n    label(arc) {\n      return arc.data.name;\n    }\n    color(arc) {\n      return this.colors(this.label(arc));\n    }\n    static {\n      this.ɵfac = function PieGridSeriesComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || PieGridSeriesComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: PieGridSeriesComponent,\n        selectors: [[\"g\", \"ngx-charts-pie-grid-series\", \"\"]],\n        inputs: {\n          colors: \"colors\",\n          data: \"data\",\n          innerRadius: \"innerRadius\",\n          outerRadius: \"outerRadius\",\n          animations: \"animations\"\n        },\n        outputs: {\n          select: \"select\",\n          activate: \"activate\",\n          deactivate: \"deactivate\"\n        },\n        standalone: false,\n        features: [i0.ɵɵNgOnChangesFeature],\n        attrs: _c43,\n        decls: 2,\n        vars: 2,\n        consts: [[1, \"pie-grid-arcs\"], [\"ngx-charts-pie-arc\", \"\", 3, \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"fill\", \"value\", \"data\", \"gradient\", \"pointerEvents\", \"animate\", \"select\", \"activate\", \"deactivate\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-pie-arc\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"fill\", \"value\", \"data\", \"gradient\", \"pointerEvents\", \"animate\"]],\n        template: function PieGridSeriesComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(0, \"g\", 0);\n            i0.ɵɵtemplate(1, PieGridSeriesComponent__svg_g_1_Template, 1, 11, \"g\", 1);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngForOf\", ctx.arcs)(\"ngForTrackBy\", ctx.trackBy);\n          }\n        },\n        dependencies: [i1.NgForOf, PieArcComponent],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return PieGridSeriesComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet PieGridComponent = /*#__PURE__*/(() => {\n  class PieGridComponent extends BaseChartComponent {\n    constructor() {\n      super(...arguments);\n      this.tooltipDisabled = false;\n      this.label = 'Total';\n      this.minWidth = 150;\n      this.activeEntries = [];\n      this.activate = new EventEmitter();\n      this.deactivate = new EventEmitter();\n      this.margin = [20, 20, 20, 20];\n      this.placementTypes = PlacementTypes;\n      this.styleTypes = StyleTypes;\n    }\n    update() {\n      super.update();\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin\n      });\n      this.formatDates();\n      this.domain = this.getDomain();\n      this.data = gridLayout(this.dims, this.results, this.minWidth, this.designatedTotal);\n      this.transform = `translate(${this.margin[3]} , ${this.margin[0]})`;\n      this.series = this.getSeries();\n      this.setColors();\n      this.tooltipText = this.tooltipText || this.defaultTooltipText;\n    }\n    defaultTooltipText({\n      data\n    }) {\n      const label = trimLabel(formatLabel(data.name));\n      const val = data.value.toLocaleString();\n      return `\n      <span class=\"tooltip-label\">${label}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n    }\n    getDomain() {\n      return this.results.map(d => d.label);\n    }\n    getSeries() {\n      const total = this.designatedTotal ? this.designatedTotal : this.getTotal();\n      return this.data.map(d => {\n        const baselineLabelHeight = 20;\n        const padding = 10;\n        const name = d.data.name;\n        const label = formatLabel(name);\n        const value = d.data.value;\n        const radius = min([d.width - padding, d.height - baselineLabelHeight]) / 2 - 5;\n        const innerRadius = radius * 0.9;\n        let count = 0;\n        const colors = () => {\n          count += 1;\n          if (count === 1) {\n            return 'rgba(100,100,100,0.3)';\n          } else {\n            return this.colorScale.getColor(label);\n          }\n        };\n        const xPos = d.x + (d.width - padding) / 2;\n        const yPos = d.y + (d.height - baselineLabelHeight) / 2;\n        return {\n          transform: `translate(${xPos}, ${yPos})`,\n          colors,\n          innerRadius,\n          outerRadius: radius,\n          name,\n          label: trimLabel(label),\n          total: value,\n          value,\n          percent: format('.1%')(d.data.percent),\n          data: [d, {\n            data: {\n              other: true,\n              value: total - value,\n              name: d.data.name\n            }\n          }]\n        };\n      });\n    }\n    getTotal() {\n      return this.results.map(d => d.value).reduce((sum, d) => sum + d, 0);\n    }\n    onClick(data) {\n      this.select.emit(data);\n    }\n    setColors() {\n      this.colorScale = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n    onActivate(item, fromLegend = false) {\n      item = this.results.find(d => {\n        if (fromLegend) {\n          return d.label === item.name;\n        } else {\n          return d.name === item.name;\n        }\n      });\n      const idx = this.activeEntries.findIndex(d => {\n        return d.name === item.name && d.value === item.value && d.series === item.series;\n      });\n      if (idx > -1) {\n        return;\n      }\n      this.activeEntries = [item, ...this.activeEntries];\n      this.activate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n    onDeactivate(item, fromLegend = false) {\n      item = this.results.find(d => {\n        if (fromLegend) {\n          return d.label === item.name;\n        } else {\n          return d.name === item.name;\n        }\n      });\n      const idx = this.activeEntries.findIndex(d => {\n        return d.name === item.name && d.value === item.value && d.series === item.series;\n      });\n      this.activeEntries.splice(idx, 1);\n      this.activeEntries = [...this.activeEntries];\n      this.deactivate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵPieGridComponent_BaseFactory;\n        return function PieGridComponent_Factory(__ngFactoryType__) {\n          return (ɵPieGridComponent_BaseFactory || (ɵPieGridComponent_BaseFactory = i0.ɵɵgetInheritedFactory(PieGridComponent)))(__ngFactoryType__ || PieGridComponent);\n        };\n      })();\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: PieGridComponent,\n        selectors: [[\"ngx-charts-pie-grid\"]],\n        contentQueries: function PieGridComponent_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n          }\n        },\n        inputs: {\n          designatedTotal: \"designatedTotal\",\n          tooltipDisabled: \"tooltipDisabled\",\n          tooltipText: \"tooltipText\",\n          label: \"label\",\n          minWidth: \"minWidth\",\n          activeEntries: \"activeEntries\"\n        },\n        outputs: {\n          activate: \"activate\",\n          deactivate: \"deactivate\"\n        },\n        standalone: false,\n        features: [i0.ɵɵInheritDefinitionFeature],\n        decls: 3,\n        vars: 8,\n        consts: [[3, \"view\", \"showLegend\", \"animations\"], [1, \"pie-grid\", \"chart\"], [\"class\", \"pie-grid-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"pie-grid-item\"], [\"ngx-charts-pie-grid-series\", \"\", \"ngx-tooltip\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"colors\", \"data\", \"innerRadius\", \"outerRadius\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\"], [\"class\", \"label percent-label\", \"dy\", \"-0.5em\", \"x\", \"0\", \"y\", \"5\", \"ngx-charts-count-up\", \"\", \"text-anchor\", \"middle\", 3, \"countTo\", \"countSuffix\", 4, \"ngIf\"], [\"class\", \"label percent-label\", \"dy\", \"-0.5em\", \"x\", \"0\", \"y\", \"5\", \"text-anchor\", \"middle\", 4, \"ngIf\"], [\"dy\", \"0.5em\", \"x\", \"0\", \"y\", \"5\", \"text-anchor\", \"middle\", 1, \"label\"], [\"class\", \"label\", \"dy\", \"1.23em\", \"x\", \"0\", \"text-anchor\", \"middle\", \"ngx-charts-count-up\", \"\", 3, \"countTo\", \"countPrefix\", 4, \"ngIf\"], [\"class\", \"label\", \"dy\", \"1.23em\", \"x\", \"0\", \"text-anchor\", \"middle\", 4, \"ngIf\"], [\"dy\", \"-0.5em\", \"x\", \"0\", \"y\", \"5\", \"ngx-charts-count-up\", \"\", \"text-anchor\", \"middle\", 1, \"label\", \"percent-label\", 3, \"countTo\", \"countSuffix\"], [\"dy\", \"-0.5em\", \"x\", \"0\", \"y\", \"5\", \"text-anchor\", \"middle\", 1, \"label\", \"percent-label\"], [\"dy\", \"1.23em\", \"x\", \"0\", \"text-anchor\", \"middle\", \"ngx-charts-count-up\", \"\", 1, \"label\", 3, \"countTo\", \"countPrefix\"], [\"dy\", \"1.23em\", \"x\", \"0\", \"text-anchor\", \"middle\", 1, \"label\"]],\n        template: function PieGridComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(1, \"g\", 1);\n            i0.ɵɵtemplate(2, PieGridComponent__svg_g_2_Template, 8, 19, \"g\", 2);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(5, _c24, ctx.width, ctx.height))(\"showLegend\", false)(\"animations\", ctx.animations);\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"transform\", ctx.transform);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngForOf\", ctx.series);\n          }\n        },\n        dependencies: [i1.NgForOf, i1.NgIf, TooltipDirective, CountUpDirective, ChartComponent, PieGridSeriesComponent],\n        styles: [_c25, \".pie-grid .arc1{opacity:.4}.pie-grid .percent-label{font-size:16px;font-weight:400}\\n\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return PieGridComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet PieChartModule = /*#__PURE__*/(() => {\n  class PieChartModule {\n    static {\n      this.ɵfac = function PieChartModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || PieChartModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: PieChartModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [ChartCommonModule]\n      });\n    }\n  }\n  return PieChartModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet PolarChartModule = /*#__PURE__*/(() => {\n  class PolarChartModule {\n    static {\n      this.ɵfac = function PolarChartModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || PolarChartModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: PolarChartModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [ChartCommonModule, PieChartModule, LineChartModule]\n      });\n    }\n  }\n  return PolarChartModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction calculateTextWidth(fontFamilyKey, text, defaultWidth = 8) {\n  return text.split('').reduce((acc, curr) => {\n    const width = fontFamilyKey[curr] || defaultWidth;\n    return acc + width;\n  }, 0);\n}\nconst VERDANA_FONT_WIDTHS_16_PX = {\n  '0': 10,\n  '1': 10,\n  '2': 10,\n  '3': 10,\n  '4': 10,\n  '5': 10,\n  '6': 10,\n  '7': 10,\n  '8': 10,\n  '9': 10,\n  A: 11,\n  B: 11,\n  C: 11,\n  D: 12,\n  E: 10,\n  F: 9,\n  G: 12,\n  H: 12,\n  I: 7,\n  J: 7,\n  K: 11,\n  L: 9,\n  M: 13,\n  N: 12,\n  O: 13,\n  P: 10,\n  Q: 13,\n  R: 11,\n  S: 11,\n  T: 10,\n  U: 12,\n  V: 11,\n  W: 16,\n  X: 11,\n  Y: 10,\n  Z: 11,\n  a: 10,\n  b: 10,\n  c: 8,\n  d: 10,\n  e: 10,\n  f: 6,\n  g: 10,\n  h: 10,\n  i: 4,\n  j: 6,\n  k: 9,\n  l: 4,\n  m: 16,\n  n: 10,\n  o: 10,\n  p: 10,\n  q: 10,\n  r: 7,\n  s: 8,\n  t: 6,\n  u: 10,\n  v: 9,\n  w: 13,\n  x: 9,\n  y: 9,\n  z: 8,\n  '!': 6,\n  '@': 16,\n  '#': 13,\n  $: 10,\n  '%': 17,\n  '^': 13,\n  '&': 12,\n  '*': 10,\n  '(': 7,\n  ')': 7,\n  _: 10,\n  '-': 7,\n  '+': 13,\n  '=': 13,\n  ',': 6,\n  '.': 6,\n  '/': 7,\n  \"'\": 4,\n  ':': 7,\n  '|': 7,\n  '?': 9,\n  ';': 7,\n  '<': 13,\n  '>': 13\n};\nlet CardComponent = /*#__PURE__*/(() => {\n  class CardComponent {\n    constructor(element, cd, zone, platformId) {\n      this.cd = cd;\n      this.zone = zone;\n      this.platformId = platformId;\n      this.animations = true;\n      this.select = new EventEmitter();\n      this.value = '';\n      this.textFontSize = 12;\n      this.textTransform = '';\n      this.initialized = false;\n      this.bandHeight = 10;\n      this.textPadding = [10, 20, 5, 20];\n      this.labelFontSize = 15;\n      this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n      this.update();\n    }\n    ngOnInit() {\n      if (isPlatformServer(this.platformId)) {\n        this.scaleTextSSR();\n      }\n    }\n    ngOnDestroy() {\n      if (isPlatformBrowser(this.platformId)) {\n        cancelAnimationFrame(this.animationReq);\n      }\n    }\n    update() {\n      this.zone.run(() => {\n        const hasValue = this.data && typeof this.data.value !== 'undefined';\n        const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n        const labelFormatting = this.labelFormatting || (card => escapeLabel(trimLabel(card.label, 55)));\n        this.transform = `translate(${this.x} , ${this.y})`;\n        this.textWidth = Math.max(0, this.width) - this.textPadding[1] - this.textPadding[3];\n        this.cardWidth = Math.max(0, this.width);\n        this.cardHeight = Math.max(0, this.height);\n        this.label = this.label ? this.label : this.data.name;\n        const cardData = {\n          label: this.label,\n          data: this.data,\n          value: this.data.value\n        };\n        this.formattedLabel = labelFormatting(cardData);\n        this.transformBand = `translate(0 , ${this.cardHeight - this.bandHeight})`;\n        const value = hasValue ? valueFormatting(cardData) : '';\n        this.value = this.paddedValue(value);\n        this.setPadding();\n        this.bandPath = roundedRect(0, 0, this.cardWidth, this.bandHeight, 3, [false, false, true, true]);\n        setTimeout(() => {\n          if (isPlatformBrowser(this.platformId)) {\n            this.scaleText();\n          }\n          this.value = value;\n          if (hasValue && !this.initialized) {\n            setTimeout(() => this.startCount(), 20);\n          }\n        }, 8);\n      });\n    }\n    paddedValue(value) {\n      if (this.medianSize && this.medianSize > value.length) {\n        value += '\\u2007'.repeat(this.medianSize - value.length);\n      }\n      return value;\n    }\n    startCount() {\n      if (!this.initialized && this.animations) {\n        cancelAnimationFrame(this.animationReq);\n        const val = this.data.value;\n        const decs = decimalChecker(val);\n        const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n        const callback = ({\n          value,\n          finished\n        }) => {\n          this.zone.run(() => {\n            value = finished ? val : value;\n            this.value = valueFormatting({\n              label: this.label,\n              data: this.data,\n              value\n            });\n            if (!finished) {\n              this.value = this.paddedValue(this.value);\n            }\n            this.cd.markForCheck();\n          });\n        };\n        this.animationReq = count(0, val, decs, 1, callback);\n        this.initialized = true;\n      }\n    }\n    scaleText() {\n      this.zone.run(() => {\n        const {\n          width,\n          height\n        } = this.textEl.nativeElement.getBoundingClientRect();\n        if (width === 0 || height === 0) {\n          return;\n        }\n        const textPadding = this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8;\n        const availableWidth = this.cardWidth - 2 * textPadding;\n        const availableHeight = this.cardHeight / 3;\n        const resizeScale = Math.min(availableWidth / width, availableHeight / height);\n        this.textFontSize = Math.floor(this.textFontSize * resizeScale);\n        this.labelFontSize = Math.min(this.textFontSize, 15);\n        this.setPadding();\n        this.cd.markForCheck();\n      });\n    }\n    scaleTextSSR() {\n      const width = calculateTextWidth(VERDANA_FONT_WIDTHS_16_PX, this.value, 10);\n      const height = 18;\n      const textPadding = this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8;\n      const availableWidth = this.cardWidth - 2 * textPadding;\n      const availableHeight = this.cardHeight / 3;\n      const resizeScale = Math.min(availableWidth / width, availableHeight / height);\n      this.textFontSize = Math.floor(this.textFontSize * resizeScale);\n      this.labelFontSize = Math.min(this.textFontSize, 15);\n      this.setPadding();\n    }\n    setPadding() {\n      this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8;\n      const padding = this.cardHeight / 2;\n      this.textPadding[0] = padding - this.textFontSize - this.labelFontSize / 2;\n      this.textPadding[2] = padding - this.labelFontSize;\n    }\n    onClick() {\n      this.select.emit(this.data);\n    }\n    static {\n      this.ɵfac = function CardComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || CardComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(PLATFORM_ID));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: CardComponent,\n        selectors: [[\"g\", \"ngx-charts-card\", \"\"]],\n        viewQuery: function CardComponent_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c45, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textEl = _t.first);\n          }\n        },\n        inputs: {\n          color: \"color\",\n          bandColor: \"bandColor\",\n          textColor: \"textColor\",\n          x: \"x\",\n          y: \"y\",\n          width: \"width\",\n          height: \"height\",\n          label: \"label\",\n          data: \"data\",\n          medianSize: \"medianSize\",\n          valueFormatting: \"valueFormatting\",\n          labelFormatting: \"labelFormatting\",\n          animations: \"animations\"\n        },\n        outputs: {\n          select: \"select\"\n        },\n        standalone: false,\n        features: [i0.ɵɵNgOnChangesFeature],\n        attrs: _c46,\n        decls: 10,\n        vars: 25,\n        consts: [[\"textEl\", \"\"], [1, \"cell\", 3, \"click\"], [\"rx\", \"3\", \"ry\", \"3\", 1, \"card\"], [\"class\", \"card-band\", \"stroke\", \"none\", 4, \"ngIf\"], [\"x\", \"5\", \"alignment-baseline\", \"hanging\", 1, \"trimmed-label\"], [3, \"innerHTML\"], [\"text-anchor\", \"start\", \"alignment-baseline\", \"hanging\", 1, \"value-text\"], [\"stroke\", \"none\", 1, \"card-band\"]],\n        template: function CardComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(0, \"g\", 1);\n            i0.ɵɵlistener(\"click\", function CardComponent_Template_g_click_0_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx.onClick());\n            });\n            i0.ɵɵelement(1, \"rect\", 2);\n            i0.ɵɵtemplate(2, CardComponent__svg_path_2_Template, 1, 3, \"path\", 3);\n            i0.ɵɵelementStart(3, \"title\");\n            i0.ɵɵtext(4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"foreignObject\", 4);\n            i0.ɵɵnamespaceHTML();\n            i0.ɵɵelement(6, \"p\", 5);\n            i0.ɵɵelementEnd();\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(7, \"text\", 6, 0);\n            i0.ɵɵtext(9);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵattribute(\"transform\", ctx.transform);\n            i0.ɵɵadvance();\n            i0.ɵɵstyleProp(\"fill\", ctx.color);\n            i0.ɵɵattribute(\"width\", ctx.cardWidth)(\"height\", ctx.cardHeight);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.bandColor && ctx.bandColor !== ctx.color);\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate(ctx.label);\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"x\", ctx.textPadding[3])(\"y\", ctx.cardHeight - ctx.textPadding[2])(\"width\", ctx.textWidth)(\"height\", ctx.labelFontSize + ctx.textPadding[2]);\n            i0.ɵɵadvance();\n            i0.ɵɵstyleProp(\"color\", ctx.textColor)(\"font-size\", ctx.labelFontSize, \"px\")(\"line-height\", ctx.labelFontSize, \"px\");\n            i0.ɵɵproperty(\"innerHTML\", ctx.formattedLabel, i0.ɵɵsanitizeHtml);\n            i0.ɵɵadvance();\n            i0.ɵɵstyleProp(\"fill\", ctx.textColor)(\"font-size\", ctx.textFontSize, \"pt\");\n            i0.ɵɵattribute(\"x\", ctx.textPadding[3])(\"y\", ctx.textPadding[0]);\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate1(\" \", ctx.value, \" \");\n          }\n        },\n        dependencies: [i1.NgIf],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return CardComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Converts a hex to RGB\n *\n * @export\n */\nfunction hexToRgb(value) {\n  // deprecated, use d3.color()\n  return d3_color.rgb(value);\n}\n/**\n * Accepts a color (string) and returns a inverted hex color (string)\n * http://stackoverflow.com/questions/9600295/automatically-change-text-color-to-assure-readability\n *\n * @export\n */\nfunction invertColor(value) {\n  const color = d3_color.rgb(value);\n  const {\n    r,\n    g,\n    b,\n    opacity\n  } = color;\n  if (opacity === 0) {\n    return color.toString();\n  }\n  const yiq = (r * 299 + g * 587 + b * 114) / 1000;\n  const depth = yiq >= 128 ? -0.8 : 0.8;\n  return shadeRGBColor(color, depth);\n}\n/**\n * Given a rgb, it will darken/lighten\n * http://stackoverflow.com/questions/5560248/programmatically-lighten-or-darken-a-hex-color-or-rgb-and-blend-colors\n *\n * @export\n * @param \\{ r, g, b }\n */\nfunction shadeRGBColor({\n  r,\n  g,\n  b\n}, percent) {\n  const t = percent < 0 ? 0 : 255;\n  const p = percent < 0 ? percent * -1 : percent;\n  r = Math.round((t - r) * p) + r;\n  g = Math.round((t - g) * p) + g;\n  b = Math.round((t - b) * p) + b;\n  return `rgb(${r}, ${g}, ${b})`;\n}\nlet CardSeriesComponent = /*#__PURE__*/(() => {\n  class CardSeriesComponent {\n    constructor() {\n      this.innerPadding = 15;\n      this.emptyColor = 'rgba(0, 0, 0, 0)';\n      this.animations = true;\n      this.select = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n      this.update();\n    }\n    update() {\n      if (this.data.length > 2) {\n        const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n        const sortedLengths = this.data.map(d => {\n          const hasValue = d && d.data && typeof d.data.value !== 'undefined' && d.data.value !== null;\n          return hasValue ? valueFormatting({\n            data: d.data,\n            label: d ? d.data.name : '',\n            value: d && d.data ? d.data.value : ''\n          }).length : 0;\n        }).sort((a, b) => b - a);\n        const idx = Math.ceil(this.data.length / 2);\n        this.medianSize = sortedLengths[idx];\n      }\n      const cards = this.getCards();\n      this.cards = cards.filter(d => d.data.value !== null);\n      this.emptySlots = cards.filter(d => d.data.value === null);\n    }\n    getCards() {\n      const yPadding = typeof this.innerPadding === 'number' ? this.innerPadding : this.innerPadding[0] + this.innerPadding[2];\n      const xPadding = typeof this.innerPadding === 'number' ? this.innerPadding : this.innerPadding[1] + this.innerPadding[3];\n      return this.data.map((d, index) => {\n        let label = d.data.name;\n        if (label && label.constructor.name === 'Date') {\n          label = label.toLocaleDateString();\n        } else {\n          label = label ? label.toLocaleString() : label;\n        }\n        const value = d.data.value;\n        const valueColor = label ? this.colors.getColor(label) : this.emptyColor;\n        const color = this.cardColor || valueColor || '#000';\n        return {\n          x: d.x,\n          y: d.y,\n          width: d.width - xPadding,\n          height: d.height - yPadding,\n          color,\n          bandColor: this.bandColor || valueColor,\n          textColor: this.textColor || invertColor(color),\n          label,\n          data: d.data,\n          tooltipText: `${label}: ${value}`\n        };\n      });\n    }\n    trackBy(index, card) {\n      return card.label;\n    }\n    onClick(data) {\n      this.select.emit(data);\n    }\n    static {\n      this.ɵfac = function CardSeriesComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || CardSeriesComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: CardSeriesComponent,\n        selectors: [[\"g\", \"ngx-charts-card-series\", \"\"]],\n        inputs: {\n          data: \"data\",\n          dims: \"dims\",\n          colors: \"colors\",\n          innerPadding: \"innerPadding\",\n          cardColor: \"cardColor\",\n          bandColor: \"bandColor\",\n          emptyColor: \"emptyColor\",\n          textColor: \"textColor\",\n          valueFormatting: \"valueFormatting\",\n          labelFormatting: \"labelFormatting\",\n          animations: \"animations\"\n        },\n        outputs: {\n          select: \"select\"\n        },\n        standalone: false,\n        features: [i0.ɵɵNgOnChangesFeature],\n        attrs: _c47,\n        decls: 2,\n        vars: 4,\n        consts: [[\"class\", \"card-empty\", \"rx\", \"3\", \"ry\", \"3\", 3, \"fill\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-card\", \"\", 3, \"x\", \"y\", \"width\", \"height\", \"color\", \"bandColor\", \"textColor\", \"data\", \"label\", \"medianSize\", \"valueFormatting\", \"labelFormatting\", \"animations\", \"select\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"rx\", \"3\", \"ry\", \"3\", 1, \"card-empty\"], [\"ngx-charts-card\", \"\", 3, \"select\", \"x\", \"y\", \"width\", \"height\", \"color\", \"bandColor\", \"textColor\", \"data\", \"label\", \"medianSize\", \"valueFormatting\", \"labelFormatting\", \"animations\"]],\n        template: function CardSeriesComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵtemplate(0, CardSeriesComponent__svg_rect_0_Template, 1, 6, \"rect\", 0)(1, CardSeriesComponent__svg_g_1_Template, 1, 13, \"g\", 1);\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"ngForOf\", ctx.emptySlots)(\"ngForTrackBy\", ctx.trackBy);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngForOf\", ctx.cards)(\"ngForTrackBy\", ctx.trackBy);\n          }\n        },\n        dependencies: [i1.NgForOf, CardComponent],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return CardSeriesComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NumberCardComponent = /*#__PURE__*/(() => {\n  class NumberCardComponent extends BaseChartComponent {\n    constructor() {\n      super(...arguments);\n      this.emptyColor = 'rgba(0, 0, 0, 0)';\n      this.innerPadding = 15;\n      this.margin = [10, 10, 10, 10];\n    }\n    get clickable() {\n      return !!this.select.observers.length;\n    }\n    update() {\n      super.update();\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin\n      });\n      this.formatDates();\n      this.domain = this.getDomain();\n      this.setColors();\n      this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n      const size = gridSize(this.dims, this.results.length, 150);\n      const N = size[0] * size[1];\n      const data = this.results.slice();\n      while (data.length < N) {\n        data.push({\n          value: null\n        });\n      }\n      this.data = gridLayout(this.dims, data, 150, this.designatedTotal);\n    }\n    getDomain() {\n      return this.results.map(d => d.label);\n    }\n    onClick(data) {\n      this.select.emit(data);\n    }\n    setColors() {\n      this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵNumberCardComponent_BaseFactory;\n        return function NumberCardComponent_Factory(__ngFactoryType__) {\n          return (ɵNumberCardComponent_BaseFactory || (ɵNumberCardComponent_BaseFactory = i0.ɵɵgetInheritedFactory(NumberCardComponent)))(__ngFactoryType__ || NumberCardComponent);\n        };\n      })();\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: NumberCardComponent,\n        selectors: [[\"ngx-charts-number-card\"]],\n        inputs: {\n          cardColor: \"cardColor\",\n          bandColor: \"bandColor\",\n          emptyColor: \"emptyColor\",\n          innerPadding: \"innerPadding\",\n          textColor: \"textColor\",\n          valueFormatting: \"valueFormatting\",\n          labelFormatting: \"labelFormatting\",\n          designatedTotal: \"designatedTotal\"\n        },\n        standalone: false,\n        features: [i0.ɵɵInheritDefinitionFeature],\n        decls: 3,\n        vars: 20,\n        consts: [[3, \"view\", \"showLegend\", \"animations\"], [1, \"number-card\", \"chart\"], [\"ngx-charts-card-series\", \"\", 3, \"select\", \"colors\", \"cardColor\", \"bandColor\", \"textColor\", \"emptyColor\", \"data\", \"dims\", \"innerPadding\", \"valueFormatting\", \"labelFormatting\", \"animations\"]],\n        template: function NumberCardComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(1, \"g\", 1)(2, \"g\", 2);\n            i0.ɵɵlistener(\"select\", function NumberCardComponent_Template_g_select_2_listener($event) {\n              return ctx.onClick($event);\n            });\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(17, _c24, ctx.width, ctx.height))(\"showLegend\", false)(\"animations\", ctx.animations);\n            i0.ɵɵadvance();\n            i0.ɵɵclassProp(\"clickable\", ctx.clickable);\n            i0.ɵɵattribute(\"transform\", ctx.transform);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"colors\", ctx.colors)(\"cardColor\", ctx.cardColor)(\"bandColor\", ctx.bandColor)(\"textColor\", ctx.textColor)(\"emptyColor\", ctx.emptyColor)(\"data\", ctx.data)(\"dims\", ctx.dims)(\"innerPadding\", ctx.innerPadding)(\"valueFormatting\", ctx.valueFormatting)(\"labelFormatting\", ctx.labelFormatting)(\"animations\", ctx.animations);\n          }\n        },\n        dependencies: [ChartComponent, CardSeriesComponent],\n        styles: [_c25, \"ngx-charts-number-card .cell .trimmed-label{font-size:12px;pointer-events:none;overflow:hidden;text-align:left;line-height:1em}ngx-charts-number-card .cell .trimmed-label p{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;width:100%;padding:0;margin:0}ngx-charts-number-card .cell .value-text{pointer-events:none}ngx-charts-number-card .number-card.clickable .cell .card,ngx-charts-number-card .number-card.clickable .cell .card-band{cursor:pointer}\\n\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return NumberCardComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NumberCardModule = /*#__PURE__*/(() => {\n  class NumberCardModule {\n    static {\n      this.ɵfac = function NumberCardModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || NumberCardModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: NumberCardModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [ChartCommonModule]\n      });\n    }\n  }\n  return NumberCardModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TreeMapCellComponent = /*#__PURE__*/(() => {\n  class TreeMapCellComponent {\n    constructor(element) {\n      this.gradient = false;\n      this.animations = true;\n      this.select = new EventEmitter();\n      this.initialized = false;\n      this.orientation = BarOrientation;\n      this.element = element.nativeElement;\n    }\n    ngOnChanges() {\n      this.update();\n      this.valueFormatting = this.valueFormatting || (value => value.toLocaleString());\n      const labelFormatting = this.labelFormatting || (cell => escapeLabel(trimLabel(cell.label, 55)));\n      const cellData = {\n        data: this.data,\n        label: this.label,\n        value: this.value\n      };\n      this.formattedValue = this.valueFormatting(cellData.value);\n      this.formattedLabel = labelFormatting(cellData);\n      this.gradientId = 'grad' + id().toString();\n      this.gradientUrl = `url(#${this.gradientId})`;\n      this.gradientStops = this.getGradientStops();\n    }\n    update() {\n      if (this.initialized) {\n        this.animateToCurrentForm();\n      } else {\n        if (this.animations) {\n          this.loadAnimation();\n        }\n        this.initialized = true;\n      }\n    }\n    loadAnimation() {\n      const node = select(this.element).select('.cell');\n      node.attr('opacity', 0).attr('x', this.x).attr('y', this.y);\n      this.animateToCurrentForm();\n    }\n    getTextColor() {\n      return invertColor(this.fill);\n    }\n    animateToCurrentForm() {\n      const node = select(this.element).select('.cell');\n      if (this.animations) {\n        node.transition().duration(750).attr('opacity', 1).attr('x', this.x).attr('y', this.y).attr('width', this.width).attr('height', this.height);\n      } else {\n        node.attr('opacity', 1).attr('x', this.x).attr('y', this.y).attr('width', this.width).attr('height', this.height);\n      }\n    }\n    onClick() {\n      this.select.emit(this.data);\n    }\n    getGradientStops() {\n      return [{\n        offset: 0,\n        color: this.fill,\n        opacity: 0.3\n      }, {\n        offset: 100,\n        color: this.fill,\n        opacity: 1\n      }];\n    }\n    static {\n      this.ɵfac = function TreeMapCellComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || TreeMapCellComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: TreeMapCellComponent,\n        selectors: [[\"g\", \"ngx-charts-tree-map-cell\", \"\"]],\n        inputs: {\n          data: \"data\",\n          fill: \"fill\",\n          x: \"x\",\n          y: \"y\",\n          width: \"width\",\n          height: \"height\",\n          label: \"label\",\n          value: \"value\",\n          valueFormatting: \"valueFormatting\",\n          labelFormatting: \"labelFormatting\",\n          gradient: \"gradient\",\n          animations: \"animations\"\n        },\n        outputs: {\n          select: \"select\"\n        },\n        standalone: false,\n        features: [i0.ɵɵNgOnChangesFeature],\n        attrs: _c48,\n        decls: 4,\n        vars: 7,\n        consts: [[4, \"ngIf\"], [1, \"cell\", 3, \"click\"], [\"class\", \"treemap-label\", 3, \"pointer-events\", 4, \"ngIf\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"], [1, \"treemap-label\"], [1, \"treemap-label\", 3, \"innerHTML\"], [\"class\", \"treemap-val\", \"ngx-charts-count-up\", \"\", 3, \"countTo\", \"valueFormatting\", 4, \"ngIf\"], [\"class\", \"treemap-val\", 4, \"ngIf\"], [\"ngx-charts-count-up\", \"\", 1, \"treemap-val\", 3, \"countTo\", \"valueFormatting\"], [1, \"treemap-val\"]],\n        template: function TreeMapCellComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(0, \"g\");\n            i0.ɵɵtemplate(1, TreeMapCellComponent__svg_defs_1_Template, 2, 3, \"defs\", 0);\n            i0.ɵɵelementStart(2, \"rect\", 1);\n            i0.ɵɵlistener(\"click\", function TreeMapCellComponent_Template_rect_click_2_listener() {\n              return ctx.onClick();\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(3, TreeMapCellComponent__svg_foreignObject_3_Template, 6, 15, \"foreignObject\", 2);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.gradient);\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"fill\", ctx.gradient ? ctx.gradientUrl : ctx.fill)(\"width\", ctx.width)(\"height\", ctx.height)(\"x\", ctx.x)(\"y\", ctx.y);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.width >= 70 && ctx.height >= 35);\n          }\n        },\n        dependencies: [i1.NgIf, CountUpDirective, SvgLinearGradientComponent],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return TreeMapCellComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TreeMapCellSeriesComponent = /*#__PURE__*/(() => {\n  class TreeMapCellSeriesComponent {\n    constructor() {\n      this.gradient = false;\n      this.tooltipDisabled = false;\n      this.animations = true;\n      this.select = new EventEmitter();\n      this.styleTypes = StyleTypes;\n      this.placementTypes = PlacementTypes;\n    }\n    ngOnChanges(changes) {\n      this.cells = this.getCells();\n    }\n    getCells() {\n      return this.data.children.filter(d => {\n        return d.depth === 1;\n      }).map((d, index) => {\n        const label = d.id;\n        return {\n          data: d.data,\n          x: d.x0,\n          y: d.y0,\n          width: d.x1 - d.x0,\n          height: d.y1 - d.y0,\n          fill: this.colors.getColor(label),\n          label,\n          value: d.value\n        };\n      });\n    }\n    getTooltipText({\n      label,\n      value\n    }) {\n      return `\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}</span>\n    `;\n    }\n    onClick(data) {\n      this.select.emit(data);\n    }\n    trackBy(index, item) {\n      return item.label;\n    }\n    static {\n      this.ɵfac = function TreeMapCellSeriesComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || TreeMapCellSeriesComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: TreeMapCellSeriesComponent,\n        selectors: [[\"g\", \"ngx-charts-tree-map-cell-series\", \"\"]],\n        inputs: {\n          data: \"data\",\n          dims: \"dims\",\n          colors: \"colors\",\n          valueFormatting: \"valueFormatting\",\n          labelFormatting: \"labelFormatting\",\n          gradient: \"gradient\",\n          tooltipDisabled: \"tooltipDisabled\",\n          tooltipTemplate: \"tooltipTemplate\",\n          animations: \"animations\"\n        },\n        outputs: {\n          select: \"select\"\n        },\n        standalone: false,\n        features: [i0.ɵɵNgOnChangesFeature],\n        attrs: _c49,\n        decls: 1,\n        vars: 2,\n        consts: [[\"ngx-charts-tree-map-cell\", \"\", \"ngx-tooltip\", \"\", 3, \"data\", \"x\", \"y\", \"width\", \"height\", \"fill\", \"label\", \"value\", \"valueFormatting\", \"labelFormatting\", \"gradient\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-tree-map-cell\", \"\", \"ngx-tooltip\", \"\", 3, \"select\", \"data\", \"x\", \"y\", \"width\", \"height\", \"fill\", \"label\", \"value\", \"valueFormatting\", \"labelFormatting\", \"gradient\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\"]],\n        template: function TreeMapCellSeriesComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵtemplate(0, TreeMapCellSeriesComponent__svg_g_0_Template, 1, 18, \"g\", 0);\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"ngForOf\", ctx.cells)(\"ngForTrackBy\", ctx.trackBy);\n          }\n        },\n        dependencies: [i1.NgForOf, TooltipDirective, TreeMapCellComponent],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return TreeMapCellSeriesComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TreeMapComponent = /*#__PURE__*/(() => {\n  class TreeMapComponent extends BaseChartComponent {\n    constructor() {\n      super(...arguments);\n      this.tooltipDisabled = false;\n      this.gradient = false;\n      this.select = new EventEmitter();\n      this.margin = [10, 10, 10, 10];\n    }\n    update() {\n      super.update();\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin\n      });\n      this.domain = this.getDomain();\n      this.treemap = treemap().size([this.dims.width, this.dims.height]);\n      const rootNode = {\n        name: 'root',\n        value: 0,\n        isRoot: true\n      };\n      const root = stratify().id(d => {\n        let label = d.name;\n        if (label.constructor.name === 'Date') {\n          label = label.toLocaleDateString();\n        } else {\n          label = label.toLocaleString();\n        }\n        return label;\n      }).parentId(d => d.isRoot ? null : 'root')([rootNode, ...this.results]).sum(d => d.value);\n      this.data = this.treemap(root);\n      this.setColors();\n      this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getDomain() {\n      return this.results.map(d => d.name);\n    }\n    onClick(data) {\n      this.select.emit(data);\n    }\n    setColors() {\n      this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵTreeMapComponent_BaseFactory;\n        return function TreeMapComponent_Factory(__ngFactoryType__) {\n          return (ɵTreeMapComponent_BaseFactory || (ɵTreeMapComponent_BaseFactory = i0.ɵɵgetInheritedFactory(TreeMapComponent)))(__ngFactoryType__ || TreeMapComponent);\n        };\n      })();\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: TreeMapComponent,\n        selectors: [[\"ngx-charts-tree-map\"]],\n        contentQueries: function TreeMapComponent_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n          }\n        },\n        inputs: {\n          results: \"results\",\n          tooltipDisabled: \"tooltipDisabled\",\n          valueFormatting: \"valueFormatting\",\n          labelFormatting: \"labelFormatting\",\n          gradient: \"gradient\"\n        },\n        outputs: {\n          select: \"select\"\n        },\n        standalone: false,\n        features: [i0.ɵɵInheritDefinitionFeature],\n        decls: 3,\n        vars: 16,\n        consts: [[3, \"view\", \"showLegend\", \"animations\"], [1, \"tree-map\", \"chart\"], [\"ngx-charts-tree-map-cell-series\", \"\", 3, \"select\", \"colors\", \"data\", \"dims\", \"tooltipDisabled\", \"tooltipTemplate\", \"valueFormatting\", \"labelFormatting\", \"gradient\", \"animations\"]],\n        template: function TreeMapComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(1, \"g\", 1)(2, \"g\", 2);\n            i0.ɵɵlistener(\"select\", function TreeMapComponent_Template_g_select_2_listener($event) {\n              return ctx.onClick($event);\n            });\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(13, _c24, ctx.width, ctx.height))(\"showLegend\", false)(\"animations\", ctx.animations);\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"transform\", ctx.transform);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"colors\", ctx.colors)(\"data\", ctx.data)(\"dims\", ctx.dims)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"valueFormatting\", ctx.valueFormatting)(\"labelFormatting\", ctx.labelFormatting)(\"gradient\", ctx.gradient)(\"animations\", ctx.animations);\n          }\n        },\n        dependencies: [ChartComponent, TreeMapCellSeriesComponent],\n        styles: [\".tree-map .treemap-val{font-size:1.3em;padding-top:5px;display:inline-block}.tree-map .treemap-label p{display:table-cell;text-align:center;line-height:1.2em;vertical-align:middle}\\n\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return TreeMapComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TreeMapModule = /*#__PURE__*/(() => {\n  class TreeMapModule {\n    static {\n      this.ɵfac = function TreeMapModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || TreeMapModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: TreeMapModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [ChartCommonModule]\n      });\n    }\n  }\n  return TreeMapModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nvar ElementType = /*#__PURE__*/function (ElementType) {\n  ElementType[\"Value\"] = \"value\";\n  ElementType[\"Units\"] = \"units\";\n  return ElementType;\n}(ElementType || {});\nlet LinearGaugeComponent = /*#__PURE__*/(() => {\n  class LinearGaugeComponent extends BaseChartComponent {\n    constructor() {\n      super(...arguments);\n      this.min = 0;\n      this.max = 100;\n      this.value = 0;\n      this.margin = [10, 20, 10, 20];\n      this.valueResizeScale = 1;\n      this.unitsResizeScale = 1;\n      this.valueTextTransform = '';\n      this.valueTranslate = '';\n      this.unitsTextTransform = '';\n      this.unitsTranslate = '';\n      this.barOrientation = BarOrientation;\n    }\n    ngAfterViewInit() {\n      super.ngAfterViewInit();\n      setTimeout(() => {\n        this.scaleText(ElementType.Value);\n        this.scaleText(ElementType.Units);\n      });\n    }\n    update() {\n      super.update();\n      this.hasPreviousValue = this.previousValue !== undefined;\n      this.max = Math.max(this.max, this.value);\n      this.min = Math.min(this.min, this.value);\n      if (this.hasPreviousValue) {\n        this.max = Math.max(this.max, this.previousValue);\n        this.min = Math.min(this.min, this.previousValue);\n      }\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin\n      });\n      this.valueDomain = this.getValueDomain();\n      this.valueScale = this.getValueScale();\n      this.displayValue = this.getDisplayValue();\n      this.setColors();\n      const xOffset = this.margin[3] + this.dims.width / 2;\n      const yOffset = this.margin[0] + this.dims.height / 2;\n      this.transform = `translate(${xOffset}, ${yOffset})`;\n      this.transformLine = `translate(${this.margin[3] + this.valueScale(this.previousValue)}, ${yOffset})`;\n      this.valueTranslate = `translate(0, -15)`;\n      this.unitsTranslate = `translate(0, 15)`;\n      if (isPlatformServer(this.platformId)) {\n        this.scaleTextSSR('value');\n        this.scaleTextSSR('units');\n      } else {\n        setTimeout(() => this.scaleText(ElementType.Value), 50);\n        setTimeout(() => this.scaleText(ElementType.Units), 50);\n      }\n    }\n    getValueDomain() {\n      return [this.min, this.max];\n    }\n    getValueScale() {\n      return scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n    }\n    getDisplayValue() {\n      if (this.valueFormatting) {\n        return this.valueFormatting(this.value);\n      }\n      return this.value.toLocaleString();\n    }\n    scaleText(element, repeat = true) {\n      let el;\n      let resizeScale;\n      if (element === ElementType.Value) {\n        el = this.valueTextEl;\n        resizeScale = this.valueResizeScale;\n      } else {\n        el = this.unitsTextEl;\n        resizeScale = this.unitsResizeScale;\n      }\n      const {\n        width,\n        height\n      } = el.nativeElement.getBoundingClientRect();\n      if (width === 0 || height === 0) return;\n      const oldScale = resizeScale;\n      const availableWidth = this.dims.width;\n      const availableHeight = Math.max(this.dims.height / 2 - 15, 0);\n      const resizeScaleWidth = Math.floor(availableWidth / (width / resizeScale) * 100) / 100;\n      const resizeScaleHeight = Math.floor(availableHeight / (height / resizeScale) * 100) / 100;\n      resizeScale = Math.min(resizeScaleHeight, resizeScaleWidth);\n      if (resizeScale !== oldScale) {\n        if (element === ElementType.Value) {\n          this.valueResizeScale = resizeScale;\n          this.valueTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n        } else {\n          this.unitsResizeScale = resizeScale;\n          this.unitsTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n        }\n        this.cd.markForCheck();\n        if (repeat && isPlatformBrowser(this.platformId)) {\n          setTimeout(() => {\n            this.scaleText(element, false);\n          }, 50);\n        }\n      }\n    }\n    scaleTextSSR(element) {\n      let resizeScale = 1;\n      const value = element === 'value' ? this.displayValue : this.units;\n      const width = calculateTextWidth(VERDANA_FONT_WIDTHS_16_PX, value, 10);\n      const height = 25;\n      const availableWidth = this.dims.width;\n      const availableHeight = Math.max(this.dims.height / 2 - 15, 0);\n      const resizeScaleWidth = Math.floor(availableWidth / (width / resizeScale) * 100) / 100;\n      const resizeScaleHeight = Math.floor(availableHeight / (height / resizeScale) * 100) / 100;\n      resizeScale = Math.min(resizeScaleHeight, resizeScaleWidth);\n      if (element === 'value') {\n        this.valueResizeScale = resizeScale;\n        this.valueTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n      } else {\n        this.unitsResizeScale = resizeScale;\n        this.unitsTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n      }\n      this.cd.markForCheck();\n    }\n    onClick() {\n      this.select.emit({\n        name: 'Value',\n        value: this.value\n      });\n    }\n    setColors() {\n      this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, [this.value], this.customColors);\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵLinearGaugeComponent_BaseFactory;\n        return function LinearGaugeComponent_Factory(__ngFactoryType__) {\n          return (ɵLinearGaugeComponent_BaseFactory || (ɵLinearGaugeComponent_BaseFactory = i0.ɵɵgetInheritedFactory(LinearGaugeComponent)))(__ngFactoryType__ || LinearGaugeComponent);\n        };\n      })();\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: LinearGaugeComponent,\n        selectors: [[\"ngx-charts-linear-gauge\"]],\n        viewQuery: function LinearGaugeComponent_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c50, 5);\n            i0.ɵɵviewQuery(_c51, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.valueTextEl = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.unitsTextEl = _t.first);\n          }\n        },\n        inputs: {\n          min: \"min\",\n          max: \"max\",\n          value: \"value\",\n          units: \"units\",\n          previousValue: \"previousValue\",\n          valueFormatting: \"valueFormatting\"\n        },\n        standalone: false,\n        features: [i0.ɵɵInheritDefinitionFeature],\n        decls: 15,\n        vars: 38,\n        consts: [[\"valueTextEl\", \"\"], [\"unitsTextEl\", \"\"], [3, \"click\", \"view\", \"showLegend\", \"animations\"], [1, \"linear-gauge\", \"chart\"], [\"ngx-charts-bar\", \"\", 1, \"background-bar\", 3, \"width\", \"height\", \"x\", \"y\", \"data\", \"orientation\", \"roundEdges\", \"animations\"], [\"ngx-charts-bar\", \"\", 3, \"width\", \"height\", \"x\", \"y\", \"fill\", \"data\", \"orientation\", \"roundEdges\", \"animations\"], [\"x1\", \"0\", \"y1\", \"5\", \"x2\", \"0\", \"y2\", \"15\", 4, \"ngIf\"], [\"x1\", \"0\", \"y1\", \"-5\", \"x2\", \"0\", \"y2\", \"-15\", 4, \"ngIf\"], [\"alignment-baseline\", \"after-edge\", 1, \"value\"], [\"alignment-baseline\", \"before-edge\", 1, \"units\"], [\"x1\", \"0\", \"y1\", \"5\", \"x2\", \"0\", \"y2\", \"15\"], [\"x1\", \"0\", \"y1\", \"-5\", \"x2\", \"0\", \"y2\", \"-15\"]],\n        template: function LinearGaugeComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵelementStart(0, \"ngx-charts-chart\", 2);\n            i0.ɵɵlistener(\"click\", function LinearGaugeComponent_Template_ngx_charts_chart_click_0_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx.onClick());\n            });\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(1, \"g\", 3);\n            i0.ɵɵelement(2, \"g\", 4)(3, \"g\", 5);\n            i0.ɵɵtemplate(4, LinearGaugeComponent__svg_line_4_Template, 1, 2, \"line\", 6)(5, LinearGaugeComponent__svg_line_5_Template, 1, 2, \"line\", 7);\n            i0.ɵɵelementStart(6, \"g\")(7, \"g\")(8, \"text\", 8, 0);\n            i0.ɵɵtext(10);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(11, \"g\")(12, \"text\", 9, 1);\n            i0.ɵɵtext(14);\n            i0.ɵɵelementEnd()()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(33, _c24, ctx.width, ctx.height))(\"showLegend\", false)(\"animations\", ctx.animations);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"width\", ctx.dims.width)(\"height\", 3)(\"x\", ctx.margin[3])(\"y\", ctx.dims.height / 2 + ctx.margin[0] - 2)(\"data\", i0.ɵɵpureFunction0(36, _c52))(\"orientation\", ctx.barOrientation.Horizontal)(\"roundEdges\", true)(\"animations\", ctx.animations);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"width\", ctx.valueScale(ctx.value))(\"height\", 3)(\"x\", ctx.margin[3])(\"y\", ctx.dims.height / 2 + ctx.margin[0] - 2)(\"fill\", ctx.colors.getColor(ctx.units))(\"data\", i0.ɵɵpureFunction0(37, _c52))(\"orientation\", ctx.barOrientation.Horizontal)(\"roundEdges\", true)(\"animations\", ctx.animations);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.hasPreviousValue);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.hasPreviousValue);\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"transform\", ctx.transform);\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"transform\", ctx.valueTranslate);\n            i0.ɵɵadvance();\n            i0.ɵɵstyleProp(\"text-anchor\", \"middle\");\n            i0.ɵɵattribute(\"transform\", ctx.valueTextTransform);\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate1(\" \", ctx.displayValue, \" \");\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"transform\", ctx.unitsTranslate);\n            i0.ɵɵadvance();\n            i0.ɵɵstyleProp(\"text-anchor\", \"middle\");\n            i0.ɵɵattribute(\"transform\", ctx.unitsTextTransform);\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate1(\" \", ctx.units, \" \");\n          }\n        },\n        dependencies: [i1.NgIf, ChartComponent, BarComponent],\n        styles: [_c25, \".linear-gauge{cursor:pointer}.linear-gauge .background-bar path{fill:#0000000d}.linear-gauge .units{fill:#666}\\n\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return LinearGaugeComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet GaugeArcComponent = /*#__PURE__*/(() => {\n  class GaugeArcComponent {\n    constructor() {\n      this.isActive = false;\n      this.tooltipDisabled = false;\n      this.animations = true;\n      this.select = new EventEmitter();\n      this.activate = new EventEmitter();\n      this.deactivate = new EventEmitter();\n      this.placementTypes = PlacementTypes;\n      this.styleTypes = StyleTypes;\n    }\n    tooltipText(arc) {\n      const label = formatLabel(arc.data.name);\n      let val;\n      if (this.valueFormatting) {\n        val = this.valueFormatting(arc.data.value);\n      } else {\n        val = formatLabel(arc.data.value);\n      }\n      return `\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n    }\n    static {\n      this.ɵfac = function GaugeArcComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || GaugeArcComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: GaugeArcComponent,\n        selectors: [[\"g\", \"ngx-charts-gauge-arc\", \"\"]],\n        inputs: {\n          backgroundArc: \"backgroundArc\",\n          valueArc: \"valueArc\",\n          cornerRadius: \"cornerRadius\",\n          colors: \"colors\",\n          isActive: \"isActive\",\n          tooltipDisabled: \"tooltipDisabled\",\n          valueFormatting: \"valueFormatting\",\n          tooltipTemplate: \"tooltipTemplate\",\n          animations: \"animations\"\n        },\n        outputs: {\n          select: \"select\",\n          activate: \"activate\",\n          deactivate: \"deactivate\"\n        },\n        standalone: false,\n        attrs: _c53,\n        decls: 2,\n        vars: 23,\n        consts: [[\"ngx-charts-pie-arc\", \"\", 1, \"background-arc\", 3, \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"cornerRadius\", \"data\", \"animate\", \"pointerEvents\"], [\"ngx-charts-pie-arc\", \"\", \"ngx-tooltip\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"cornerRadius\", \"fill\", \"data\", \"animate\", \"isActive\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\"]],\n        template: function GaugeArcComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelement(0, \"g\", 0);\n            i0.ɵɵelementStart(1, \"g\", 1);\n            i0.ɵɵlistener(\"select\", function GaugeArcComponent_Template_g_select_1_listener($event) {\n              return ctx.select.emit($event);\n            })(\"activate\", function GaugeArcComponent_Template_g_activate_1_listener($event) {\n              return ctx.activate.emit($event);\n            })(\"deactivate\", function GaugeArcComponent_Template_g_deactivate_1_listener($event) {\n              return ctx.deactivate.emit($event);\n            });\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"startAngle\", 0)(\"endAngle\", ctx.backgroundArc.endAngle)(\"innerRadius\", ctx.backgroundArc.innerRadius)(\"outerRadius\", ctx.backgroundArc.outerRadius)(\"cornerRadius\", ctx.cornerRadius)(\"data\", ctx.backgroundArc.data)(\"animate\", false)(\"pointerEvents\", false);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"startAngle\", 0)(\"endAngle\", ctx.valueArc.endAngle)(\"innerRadius\", ctx.valueArc.innerRadius)(\"outerRadius\", ctx.valueArc.outerRadius)(\"cornerRadius\", ctx.cornerRadius)(\"fill\", ctx.colors.getColor(ctx.valueArc.data.name))(\"data\", ctx.valueArc.data)(\"animate\", ctx.animations)(\"isActive\", ctx.isActive)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipPlacement\", ctx.placementTypes.Top)(\"tooltipType\", ctx.styleTypes.tooltip)(\"tooltipTitle\", ctx.tooltipTemplate ? undefined : ctx.tooltipText(ctx.valueArc))(\"tooltipTemplate\", ctx.tooltipTemplate)(\"tooltipContext\", ctx.valueArc.data);\n          }\n        },\n        dependencies: [TooltipDirective, PieArcComponent],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return GaugeArcComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet GaugeAxisComponent = /*#__PURE__*/(() => {\n  class GaugeAxisComponent {\n    constructor() {\n      this.rotate = '';\n    }\n    ngOnChanges(changes) {\n      this.update();\n    }\n    update() {\n      this.rotationAngle = -90 + this.startAngle;\n      this.rotate = `rotate(${this.rotationAngle})`;\n      this.ticks = this.getTicks();\n    }\n    getTicks() {\n      const bigTickSegment = this.angleSpan / this.bigSegments;\n      const smallTickSegment = bigTickSegment / this.smallSegments;\n      const tickLength = 20;\n      const ticks = {\n        big: [],\n        small: []\n      };\n      const startDistance = this.radius + 10;\n      const textDist = startDistance + tickLength + 10;\n      for (let i = 0; i <= this.bigSegments; i++) {\n        const angleDeg = i * bigTickSegment;\n        const angle = angleDeg * Math.PI / 180;\n        const textAnchor = this.getTextAnchor(angleDeg);\n        let skip = false;\n        if (i === 0 && this.angleSpan === 360) {\n          skip = true;\n        }\n        if (!skip) {\n          let text = Number.parseFloat(this.valueScale.invert(angleDeg).toString()).toLocaleString();\n          if (this.tickFormatting) {\n            text = this.tickFormatting(text);\n          }\n          ticks.big.push({\n            line: this.getTickPath(startDistance, tickLength, angle),\n            textAnchor,\n            text,\n            textTransform: `\n            translate(${textDist * Math.cos(angle)}, ${textDist * Math.sin(angle)}) rotate(${-this.rotationAngle})\n          `\n          });\n        }\n        if (i === this.bigSegments) {\n          continue;\n        }\n        for (let j = 1; j <= this.smallSegments; j++) {\n          const smallAngleDeg = angleDeg + j * smallTickSegment;\n          const smallAngle = smallAngleDeg * Math.PI / 180;\n          ticks.small.push({\n            line: this.getTickPath(startDistance, tickLength / 2, smallAngle)\n          });\n        }\n      }\n      return ticks;\n    }\n    getTextAnchor(angle) {\n      // [0, 45] = 'middle';\n      // [46, 135] = 'start';\n      // [136, 225] = 'middle';\n      // [226, 315] = 'end';\n      angle = (this.startAngle + angle) % 360;\n      let textAnchor = TextAnchor.Middle;\n      if (angle > 45 && angle <= 135) {\n        textAnchor = TextAnchor.Start;\n      } else if (angle > 225 && angle <= 315) {\n        textAnchor = TextAnchor.End;\n      }\n      return textAnchor;\n    }\n    getTickPath(startDistance, tickLength, angle) {\n      const y1 = startDistance * Math.sin(angle);\n      const y2 = (startDistance + tickLength) * Math.sin(angle);\n      const x1 = startDistance * Math.cos(angle);\n      const x2 = (startDistance + tickLength) * Math.cos(angle);\n      const points = [{\n        x: x1,\n        y: y1\n      }, {\n        x: x2,\n        y: y2\n      }];\n      const lineGenerator = line().x(d => d.x).y(d => d.y);\n      return lineGenerator(points);\n    }\n    static {\n      this.ɵfac = function GaugeAxisComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || GaugeAxisComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: GaugeAxisComponent,\n        selectors: [[\"g\", \"ngx-charts-gauge-axis\", \"\"]],\n        inputs: {\n          bigSegments: \"bigSegments\",\n          smallSegments: \"smallSegments\",\n          min: \"min\",\n          max: \"max\",\n          angleSpan: \"angleSpan\",\n          startAngle: \"startAngle\",\n          radius: \"radius\",\n          valueScale: \"valueScale\",\n          tickFormatting: \"tickFormatting\"\n        },\n        standalone: false,\n        features: [i0.ɵɵNgOnChangesFeature],\n        attrs: _c54,\n        decls: 4,\n        vars: 4,\n        consts: [[\"class\", \"gauge-tick gauge-tick-large\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"gauge-tick gauge-tick-small\", 4, \"ngFor\", \"ngForOf\"], [1, \"gauge-tick\", \"gauge-tick-large\"], [\"alignment-baseline\", \"central\"], [1, \"gauge-tick\", \"gauge-tick-small\"]],\n        template: function GaugeAxisComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(0, \"g\");\n            i0.ɵɵtemplate(1, GaugeAxisComponent__svg_g_1_Template, 2, 1, \"g\", 0)(2, GaugeAxisComponent__svg_g_2_Template, 3, 4, \"g\", 0)(3, GaugeAxisComponent__svg_g_3_Template, 2, 1, \"g\", 1);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵattribute(\"transform\", ctx.rotate);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngForOf\", ctx.ticks.big);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngForOf\", ctx.ticks.big);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngForOf\", ctx.ticks.small);\n          }\n        },\n        dependencies: [i1.NgForOf],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return GaugeAxisComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet GaugeComponent = /*#__PURE__*/(() => {\n  class GaugeComponent extends BaseChartComponent {\n    constructor() {\n      super(...arguments);\n      this.legend = false;\n      this.legendTitle = 'Legend';\n      this.legendPosition = LegendPosition.Right;\n      this.min = 0;\n      this.max = 100;\n      this.bigSegments = 10;\n      this.smallSegments = 5;\n      this.showAxis = true;\n      this.startAngle = -120;\n      this.angleSpan = 240;\n      this.activeEntries = [];\n      this.tooltipDisabled = false;\n      this.showText = true;\n      this.activate = new EventEmitter();\n      this.deactivate = new EventEmitter();\n      this.resizeScale = 1;\n      this.rotation = '';\n      this.textTransform = 'scale(1, 1)';\n      this.cornerRadius = 10;\n    }\n    ngAfterViewInit() {\n      super.ngAfterViewInit();\n      setTimeout(() => this.scaleText());\n    }\n    update() {\n      super.update();\n      if (!this.showAxis) {\n        if (!this.margin) {\n          this.margin = [10, 20, 10, 20];\n        }\n      } else {\n        if (!this.margin) {\n          this.margin = [60, 100, 60, 100];\n        }\n      }\n      // make the starting angle positive\n      if (this.startAngle < 0) {\n        this.startAngle = this.startAngle % 360 + 360;\n      }\n      this.angleSpan = Math.min(this.angleSpan, 360);\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin,\n        showLegend: this.legend,\n        legendPosition: this.legendPosition\n      });\n      this.domain = this.getDomain();\n      this.valueDomain = this.getValueDomain();\n      this.valueScale = this.getValueScale();\n      this.displayValue = this.getDisplayValue();\n      this.outerRadius = Math.min(this.dims.width, this.dims.height) / 2;\n      this.arcs = this.getArcs();\n      this.setColors();\n      this.legendOptions = this.getLegendOptions();\n      const xOffset = this.margin[3] + this.dims.width / 2;\n      const yOffset = this.margin[0] + this.dims.height / 2;\n      this.transform = `translate(${xOffset}, ${yOffset})`;\n      this.rotation = `rotate(${this.startAngle})`;\n      setTimeout(() => this.scaleText(), 50);\n    }\n    getArcs() {\n      const arcs = [];\n      const availableRadius = this.outerRadius * 0.7;\n      const radiusPerArc = Math.min(availableRadius / this.results.length, 10);\n      const arcWidth = radiusPerArc * 0.7;\n      this.textRadius = this.outerRadius - this.results.length * radiusPerArc;\n      this.cornerRadius = Math.floor(arcWidth / 2);\n      let i = 0;\n      for (const d of this.results) {\n        const outerRadius = this.outerRadius - i * radiusPerArc;\n        const innerRadius = outerRadius - arcWidth;\n        const backgroundArc = {\n          endAngle: this.angleSpan * Math.PI / 180,\n          innerRadius,\n          outerRadius,\n          data: {\n            value: this.max,\n            name: d.name\n          }\n        };\n        const valueArc = {\n          endAngle: Math.min(this.valueScale(d.value), this.angleSpan) * Math.PI / 180,\n          innerRadius,\n          outerRadius,\n          data: {\n            value: d.value,\n            name: d.name\n          }\n        };\n        const arc = {\n          backgroundArc,\n          valueArc\n        };\n        arcs.push(arc);\n        i++;\n      }\n      return arcs;\n    }\n    getDomain() {\n      return this.results.map(d => d.name);\n    }\n    getValueDomain() {\n      const values = this.results.map(d => d.value);\n      const dataMin = Math.min(...values);\n      const dataMax = Math.max(...values);\n      if (this.min !== undefined) {\n        this.min = Math.min(this.min, dataMin);\n      } else {\n        this.min = dataMin;\n      }\n      if (this.max !== undefined) {\n        this.max = Math.max(this.max, dataMax);\n      } else {\n        this.max = dataMax;\n      }\n      return [this.min, this.max];\n    }\n    getValueScale() {\n      return scaleLinear().range([0, this.angleSpan]).nice().domain(this.valueDomain);\n    }\n    getDisplayValue() {\n      const value = this.results.map(d => d.value).reduce((a, b) => a + b, 0);\n      if (this.textValue && 0 !== this.textValue.length) {\n        return this.textValue.toLocaleString();\n      }\n      if (this.valueFormatting) {\n        return this.valueFormatting(value);\n      }\n      return value.toLocaleString();\n    }\n    scaleText(repeat = true) {\n      if (!this.showText) {\n        return;\n      }\n      const {\n        width\n      } = this.textEl.nativeElement.getBoundingClientRect();\n      const oldScale = this.resizeScale;\n      if (width === 0) {\n        this.resizeScale = 1;\n      } else {\n        const availableSpace = this.textRadius;\n        this.resizeScale = Math.floor(availableSpace / (width / this.resizeScale) * 100) / 100;\n      }\n      if (this.resizeScale !== oldScale) {\n        this.textTransform = `scale(${this.resizeScale}, ${this.resizeScale})`;\n        this.cd.markForCheck();\n        if (repeat) {\n          setTimeout(() => this.scaleText(false), 50);\n        }\n      }\n    }\n    onClick(data) {\n      this.select.emit(data);\n    }\n    getLegendOptions() {\n      return {\n        scaleType: ScaleType.Ordinal,\n        colors: this.colors,\n        domain: this.domain,\n        title: this.legendTitle,\n        position: this.legendPosition\n      };\n    }\n    setColors() {\n      this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n    onActivate(item) {\n      const idx = this.activeEntries.findIndex(d => {\n        return d.name === item.name && d.value === item.value;\n      });\n      if (idx > -1) {\n        return;\n      }\n      this.activeEntries = [item, ...this.activeEntries];\n      this.activate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n    onDeactivate(item) {\n      const idx = this.activeEntries.findIndex(d => {\n        return d.name === item.name && d.value === item.value;\n      });\n      this.activeEntries.splice(idx, 1);\n      this.activeEntries = [...this.activeEntries];\n      this.deactivate.emit({\n        value: item,\n        entries: this.activeEntries\n      });\n    }\n    isActive(entry) {\n      if (!this.activeEntries) return false;\n      const item = this.activeEntries.find(d => {\n        return entry.name === d.name && entry.series === d.series;\n      });\n      return item !== undefined;\n    }\n    trackBy(index, item) {\n      return item.valueArc.data.name;\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵGaugeComponent_BaseFactory;\n        return function GaugeComponent_Factory(__ngFactoryType__) {\n          return (ɵGaugeComponent_BaseFactory || (ɵGaugeComponent_BaseFactory = i0.ɵɵgetInheritedFactory(GaugeComponent)))(__ngFactoryType__ || GaugeComponent);\n        };\n      })();\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: GaugeComponent,\n        selectors: [[\"ngx-charts-gauge\"]],\n        contentQueries: function GaugeComponent_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n          }\n        },\n        viewQuery: function GaugeComponent_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c45, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textEl = _t.first);\n          }\n        },\n        inputs: {\n          legend: \"legend\",\n          legendTitle: \"legendTitle\",\n          legendPosition: \"legendPosition\",\n          min: \"min\",\n          max: \"max\",\n          textValue: \"textValue\",\n          units: \"units\",\n          bigSegments: \"bigSegments\",\n          smallSegments: \"smallSegments\",\n          results: \"results\",\n          showAxis: \"showAxis\",\n          startAngle: \"startAngle\",\n          angleSpan: \"angleSpan\",\n          activeEntries: \"activeEntries\",\n          axisTickFormatting: \"axisTickFormatting\",\n          tooltipDisabled: \"tooltipDisabled\",\n          valueFormatting: \"valueFormatting\",\n          showText: \"showText\",\n          margin: \"margin\"\n        },\n        outputs: {\n          activate: \"activate\",\n          deactivate: \"deactivate\"\n        },\n        standalone: false,\n        features: [i0.ɵɵInheritDefinitionFeature],\n        decls: 5,\n        vars: 13,\n        consts: [[\"textEl\", \"\"], [3, \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\"], [1, \"gauge\", \"chart\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-gauge-axis\", \"\", 3, \"bigSegments\", \"smallSegments\", \"min\", \"max\", \"radius\", \"angleSpan\", \"valueScale\", \"startAngle\", \"tickFormatting\", 4, \"ngIf\"], [\"alignment-baseline\", \"central\", 3, \"textAnchor\", 4, \"ngIf\"], [\"ngx-charts-gauge-arc\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"backgroundArc\", \"valueArc\", \"cornerRadius\", \"colors\", \"isActive\", \"tooltipDisabled\", \"tooltipTemplate\", \"valueFormatting\", \"animations\"], [\"ngx-charts-gauge-axis\", \"\", 3, \"bigSegments\", \"smallSegments\", \"min\", \"max\", \"radius\", \"angleSpan\", \"valueScale\", \"startAngle\", \"tickFormatting\"], [\"alignment-baseline\", \"central\"], [\"x\", \"0\", \"dy\", \"0\"], [\"x\", \"0\", \"dy\", \"1.2em\"]],\n        template: function GaugeComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"ngx-charts-chart\", 1);\n            i0.ɵɵlistener(\"legendLabelClick\", function GaugeComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n              return ctx.onClick($event);\n            })(\"legendLabelActivate\", function GaugeComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n              return ctx.onActivate($event);\n            })(\"legendLabelDeactivate\", function GaugeComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n              return ctx.onDeactivate($event);\n            });\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(1, \"g\", 2);\n            i0.ɵɵtemplate(2, GaugeComponent__svg_g_2_Template, 2, 10, \"g\", 3)(3, GaugeComponent__svg_g_3_Template, 1, 9, \"g\", 4)(4, GaugeComponent__svg_text_4_Template, 6, 5, \"text\", 5);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"transform\", ctx.transform);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngForOf\", ctx.arcs)(\"ngForTrackBy\", ctx.trackBy);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.showAxis);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.showText);\n          }\n        },\n        dependencies: [i1.NgForOf, i1.NgIf, ChartComponent, GaugeArcComponent, GaugeAxisComponent],\n        styles: [_c25, \".gauge .background-arc path{fill:#0000000d}.gauge .gauge-tick path{stroke:#666}.gauge .gauge-tick text{font-size:12px;fill:#666;font-weight:700}.gauge .gauge-tick-large path{stroke-width:2px}.gauge .gauge-tick-small path{stroke-width:1px}\\n\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return GaugeComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet PercentGaugeComponent = /*#__PURE__*/(() => {\n  class PercentGaugeComponent extends BaseChartComponent {\n    constructor() {\n      super(...arguments);\n      this.max = 100;\n      this.value = 0;\n      this.target = 75;\n      this.targetLabel = 'Target';\n      this.showLabel = true;\n      this.defaultMargin = [20, 40, 20, 40];\n      this.margin = [20, 40, 20, 40];\n      this.circleMaskId = `circleMask${id()}`;\n      this.ticks = [];\n    }\n    update() {\n      super.update();\n      this.margin = [...this.defaultMargin];\n      if (this.showLabel) {\n        this.margin[2] = 50;\n      }\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin\n      });\n      this.percent = this.getPercentage();\n      this.ticHeight = Math.min(this.dims.width, this.dims.height) / 10;\n      this.radius = Math.min(this.dims.width, this.dims.height) / 2 - this.ticHeight / 2;\n      this.circumference = 2 * Math.PI * this.radius;\n      this.dashes = `${this.radius / 60} ${this.circumference / 60 - this.radius / 60}`;\n      this.valueFontSize = Math.floor(this.radius / 3);\n      this.targetRadius = this.radius / 4;\n      this.targetTextTransform = `translate(${-this.targetRadius / 2}, ${-this.targetRadius / 2}), scale(${this.targetRadius / 28})`;\n      this.valueDomain = this.getValueDomain();\n      this.displayValue = this.getDisplayValue();\n      this.setColors();\n      this.targetColor = this.colors.getColor(this.target / 100 * this.max);\n      const xOffset = this.margin[3] + this.dims.width / 2;\n      const yOffset = this.margin[0] + this.dims.height / 2;\n      this.transform = `translate(${xOffset}, ${yOffset})`;\n      this.labelTransform = `translate(0, ${this.height / 2 + this.radius + this.margin[0] + this.ticHeight / 2 - 3})`;\n      const angle = this.target / 100 * Math.PI * 2 - Math.PI / 2;\n      this.targetTransform = `translate(${this.radius * 0.97 * Math.cos(angle) + this.targetRadius / 2}, ${this.radius * 0.97 * Math.sin(angle) + this.targetRadius / 2})`;\n      this.generateticks();\n      this.cd.markForCheck();\n    }\n    generateCirclePoints(radius, numPoints) {\n      const points = [];\n      for (let i = 0; i < numPoints; i++) {\n        const angle = i / numPoints * 2 * Math.PI;\n        const x = radius * Math.cos(angle);\n        const y = radius * Math.sin(angle);\n        points.push({\n          x,\n          y\n        });\n      }\n      return points;\n    }\n    generateticks() {\n      const numPoints = 60;\n      const points = this.generateCirclePoints(this.radius, numPoints);\n      this.ticks = [];\n      this.circleTransform = `rotate(-90,0,0)`;\n      for (let j = 0; j < points.length; j++) {\n        const {\n          x,\n          y\n        } = points[j];\n        let progress = j / numPoints;\n        if (progress === 1) {\n          progress = 0;\n        }\n        this.ticks.push({\n          height: this.ticHeight,\n          width: this.radius / 60,\n          fill: this.colors.getColor(progress * this.max),\n          transform: `translate(${x}, ${y}), rotate(${360 * progress - 90})`\n        });\n      }\n    }\n    getValueDomain() {\n      return [0, this.max];\n    }\n    getDisplayValue() {\n      if (this.valueFormatting) {\n        return this.valueFormatting(this.value);\n      }\n      return this.percent + '%';\n    }\n    getPercentage() {\n      return Math.round(this.value / this.max * 100);\n    }\n    onClick() {\n      this.select.emit({\n        name: 'Value',\n        value: this.value\n      });\n    }\n    setColors() {\n      this.colors = new ColorHelper(this.scheme, ScaleType.Linear, this.valueDomain, this.customColors);\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵPercentGaugeComponent_BaseFactory;\n        return function PercentGaugeComponent_Factory(__ngFactoryType__) {\n          return (ɵPercentGaugeComponent_BaseFactory || (ɵPercentGaugeComponent_BaseFactory = i0.ɵɵgetInheritedFactory(PercentGaugeComponent)))(__ngFactoryType__ || PercentGaugeComponent);\n        };\n      })();\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: PercentGaugeComponent,\n        selectors: [[\"ngx-charts-percent-gauge\"]],\n        inputs: {\n          max: \"max\",\n          value: \"value\",\n          target: \"target\",\n          targetLabel: \"targetLabel\",\n          label: \"label\",\n          valueFormatting: \"valueFormatting\",\n          showLabel: \"showLabel\"\n        },\n        standalone: false,\n        features: [i0.ɵɵInheritDefinitionFeature],\n        decls: 20,\n        vars: 40,\n        consts: [[3, \"view\", \"showLegend\", \"animations\"], [1, \"percent-gauge\", \"chart\", 3, \"click\"], [\"cx\", \"0\", \"cy\", \"0\", \"stroke\", \"white\", \"fill\", \"transparent\", \"transform\", \"rotate(-90,0,0)\"], [\"x\", \"0\", \"y\", \"0\", \"stroke\", \"none\", 1, \"total\"], [\"cx\", \"0\", \"cy\", \"0\", \"fill\", \"none\", 1, \"dashes-back\"], [4, \"ngFor\", \"ngForOf\"], [1, \"target-circle-bg\"], [\"class\", \"target-circle\", 3, \"stroke-width\", 4, \"ngIf\"], [\"transform\", \"translate(0, -4)\", \"stroke\", \"none\", \"text-anchor\", \"middle\", 1, \"target-label\"], [\"transform\", \"translate(0, 11)\", \"stroke\", \"none\", \"text-anchor\", \"middle\", 1, \"target-value\"], [4, \"ngIf\"], [1, \"target-circle\"], [\"x\", \"50%\", \"dominant-baseline\", \"middle\", \"text-anchor\", \"middle\", \"stroke\", \"none\", 1, \"gauge-label\"]],\n        template: function PercentGaugeComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(1, \"g\", 1);\n            i0.ɵɵlistener(\"click\", function PercentGaugeComponent_Template_g_click_1_listener() {\n              return ctx.onClick();\n            });\n            i0.ɵɵelementStart(2, \"g\")(3, \"mask\");\n            i0.ɵɵelement(4, \"circle\", 2);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"text\", 3);\n            i0.ɵɵtext(6);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(7, \"circle\", 4);\n            i0.ɵɵelementStart(8, \"g\")(9, \"g\");\n            i0.ɵɵtemplate(10, PercentGaugeComponent__svg_g_10_Template, 2, 6, \"g\", 5);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(11, \"g\");\n            i0.ɵɵelement(12, \"circle\", 6);\n            i0.ɵɵtemplate(13, PercentGaugeComponent__svg_circle_13_Template, 1, 6, \"circle\", 7);\n            i0.ɵɵelementStart(14, \"g\")(15, \"text\", 8);\n            i0.ɵɵtext(16);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(17, \"text\", 9);\n            i0.ɵɵtext(18);\n            i0.ɵɵelementEnd()()()();\n            i0.ɵɵtemplate(19, PercentGaugeComponent__svg_g_19_Template, 3, 2, \"g\", 10);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(37, _c24, ctx.width, ctx.height))(\"showLegend\", false)(\"animations\", ctx.animations);\n            i0.ɵɵadvance(2);\n            i0.ɵɵattribute(\"transform\", ctx.transform);\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"id\", ctx.circleMaskId);\n            i0.ɵɵadvance();\n            i0.ɵɵstyleProp(\"stroke-width\", ctx.radius / 5)(\"stroke-dashoffset\", ctx.circumference * (1 - ctx.percent / 100));\n            i0.ɵɵattribute(\"r\", ctx.radius)(\"stroke-dasharray\", ctx.circumference);\n            i0.ɵɵadvance();\n            i0.ɵɵstyleProp(\"font-size\", ctx.valueFontSize);\n            i0.ɵɵadvance();\n            i0.ɵɵtextInterpolate1(\" \", ctx.displayValue, \" \");\n            i0.ɵɵadvance();\n            i0.ɵɵstyleProp(\"stroke-width\", ctx.radius / 5)(\"stroke-dasharray\", ctx.dashes);\n            i0.ɵɵattribute(\"r\", ctx.radius);\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"mask\", \"url(#\" + ctx.circleMaskId + \")\");\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"transform\", ctx.circleTransform);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngForOf\", ctx.ticks);\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"transform\", ctx.targetTransform);\n            i0.ɵɵadvance();\n            i0.ɵɵstyleProp(\"stroke-width\", ctx.targetRadius / 10);\n            i0.ɵɵattribute(\"r\", ctx.targetRadius)(\"cx\", -ctx.targetRadius / 2)(\"cy\", -ctx.targetRadius / 2);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.percent >= ctx.target);\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"transform\", ctx.targetTextTransform);\n            i0.ɵɵadvance();\n            i0.ɵɵstyleProp(\"font-size\", 12);\n            i0.ɵɵadvance();\n            i0.ɵɵtextInterpolate1(\" \", ctx.targetLabel, \" \");\n            i0.ɵɵadvance();\n            i0.ɵɵstyleProp(\"font-size\", 14);\n            i0.ɵɵadvance();\n            i0.ɵɵtextInterpolate1(\" \", ctx.target, \"% \");\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.showLabel);\n          }\n        },\n        dependencies: [i1.NgForOf, i1.NgIf, ChartComponent],\n        styles: [_c25, \".percent-gauge{cursor:pointer}.percent-gauge text{text-anchor:middle}.percent-gauge .dashes-back{stroke:#e7e7e7}.percent-gauge .target-circle,.percent-gauge .target-circle-bg{fill:#fff}.percent-gauge .target-circle-bg{stroke:#e7e7e7}.percent-gauge .total{dominant-baseline:middle}.percent-gauge .label{display:block;text-anchor:middle}\\n\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return PercentGaugeComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet GaugeModule = /*#__PURE__*/(() => {\n  class GaugeModule {\n    static {\n      this.ɵfac = function GaugeModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || GaugeModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: GaugeModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [ChartCommonModule, PieChartModule, BarChartModule]\n      });\n    }\n  }\n  return GaugeModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// The export is needed here to generate a valid polyfills.metadata.json file\nfunction ngxChartsPolyfills() {\n  // IE11 fix\n  // Ref: https://github.com/swimlane/ngx-charts/issues/386\n  if (typeof SVGElement !== 'undefined' && typeof SVGElement.prototype.contains === 'undefined') {\n    SVGElement.prototype.contains = HTMLDivElement.prototype.contains;\n  }\n}\nlet SankeyComponent = /*#__PURE__*/(() => {\n  class SankeyComponent extends BaseChartComponent {\n    constructor() {\n      super(...arguments);\n      this.showLabels = true;\n      this.tooltipDisabled = false;\n      this.activeEntries = [];\n      this.activate = new EventEmitter();\n      this.deactivate = new EventEmitter();\n      this.margin = [10, 10, 10, 10];\n      this.scaleType = ScaleType.Ordinal;\n      this.styleTypes = StyleTypes;\n    }\n    update() {\n      super.update();\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin,\n        legendType: this.scaleType\n      });\n      const linkDefs = this.results;\n      const nodeDefs = Array.from(new Set(linkDefs.flatMap(l => [l.source, l.target])), name => ({\n        name,\n        value: linkDefs.filter(l => l.source === name).reduce((acc, l) => acc + l.value, 0)\n      }));\n      // Configure generator\n      const sankeyGenerator = sankey().nodeId(d => d.name).nodeAlign(sankeyLeft).nodeWidth(15).nodePadding(10).extent([[1, 5], [this.dims.width - 1, this.dims.height - 5]]);\n      // Generate links and nodes\n      const data = sankeyGenerator({\n        nodes: nodeDefs.map(d => Object.assign({}, d)),\n        links: linkDefs.map(d => Object.assign({}, d))\n      });\n      this.valueDomain = this.getValueDomain(data.nodes);\n      this.setColors();\n      this.nodeRects = data.nodes.map(node => {\n        const rect = {\n          x: node.x0,\n          y: node.y0,\n          height: node.y1 - node.y0,\n          width: node.x1 - node.x0,\n          fill: this.colors.getColor(node.name),\n          tooltip: this.getNodeTooltipText(node),\n          rx: 5,\n          data: {\n            name: node.name,\n            value: node.value\n          },\n          transform: '',\n          label: this.labelFormatting ? this.labelFormatting(node.name) : node.name,\n          labelAnchor: TextAnchor.Start\n        };\n        rect.labelAnchor = this.getTextAnchor(node);\n        rect.transform = `translate(${rect.x},${rect.y})`;\n        return rect;\n      });\n      this.linkPaths = data.links.map(link => {\n        const gradientId = 'mask' + id().toString();\n        const linkPath = {\n          path: sankeyLinkHorizontal()(link),\n          strokeWidth: Math.max(1, link.width),\n          tooltip: this.getLinkTooltipText(link.source, link.target, link.value),\n          id: gradientId,\n          gradientFill: `url(#${gradientId})`,\n          source: link.source,\n          target: link.target,\n          startColor: this.colors.getColor(link.source.name),\n          endColor: this.colors.getColor(link.target.name),\n          data: {\n            source: link.source.name,\n            target: link.target.name,\n            value: link.value\n          }\n        };\n        return linkPath;\n      });\n      this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getNodeTooltipText(node) {\n      return `\n      <span class=\"tooltip-label\">${escapeLabel(node.name)}</span>\n      <span class=\"tooltip-val\">${node.value.toLocaleString()}</span>\n    `;\n    }\n    getLinkTooltipText(sourceNode, targetNode, value) {\n      return `\n      <span class=\"tooltip-label\">${escapeLabel(sourceNode.name)} • ${escapeLabel(targetNode.name)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()} (${(value / sourceNode.value).toLocaleString(undefined, {\n        style: 'percent',\n        maximumFractionDigits: 2\n      })})</span>\n    `;\n    }\n    getTextAnchor(node) {\n      if (node.layer === 0) {\n        return TextAnchor.Start;\n      } else {\n        return TextAnchor.End;\n      }\n    }\n    onClick(data) {\n      this.select.emit(data);\n    }\n    setColors() {\n      this.colors = new ColorHelper(this.scheme, this.scaleType, this.valueDomain);\n    }\n    getValueDomain(nodes) {\n      return nodes.map(n => n.name);\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵSankeyComponent_BaseFactory;\n        return function SankeyComponent_Factory(__ngFactoryType__) {\n          return (ɵSankeyComponent_BaseFactory || (ɵSankeyComponent_BaseFactory = i0.ɵɵgetInheritedFactory(SankeyComponent)))(__ngFactoryType__ || SankeyComponent);\n        };\n      })();\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: SankeyComponent,\n        selectors: [[\"ngx-charts-sankey\"]],\n        contentQueries: function SankeyComponent_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n          }\n        },\n        inputs: {\n          showLabels: \"showLabels\",\n          gradient: \"gradient\",\n          tooltipDisabled: \"tooltipDisabled\",\n          activeEntries: \"activeEntries\",\n          labelFormatting: \"labelFormatting\"\n        },\n        outputs: {\n          activate: \"activate\",\n          deactivate: \"deactivate\"\n        },\n        standalone: false,\n        features: [i0.ɵɵInheritDefinitionFeature],\n        decls: 5,\n        vars: 9,\n        consts: [[3, \"view\", \"animations\"], [1, \"sankey\", \"chart\"], [\"class\", \"link\", \"ngx-tooltip\", \"\", 3, \"tooltipDisabled\", \"tooltipType\", \"tooltipPlacement\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"node\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngFor\", \"ngForOf\"], [\"ngx-tooltip\", \"\", 1, \"link\", 3, \"tooltipDisabled\", \"tooltipType\", \"tooltipPlacement\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\"], [\"gradientUnits\", \"userSpaceOnUse\"], [\"offset\", \"0%\"], [\"offset\", \"100%\"], [\"stroke-opacity\", \"0.5\", \"fill\", \"none\", 3, \"click\", \"mouseenter\"], [1, \"node\"], [\"ngx-tooltip\", \"\", 3, \"click\", \"mouseenter\", \"tooltipDisabled\", \"tooltipType\", \"tooltipPlacement\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\"], [\"class\", \"label\", \"dy\", \"0.35em\", 4, \"ngIf\"], [\"dy\", \"0.35em\", 1, \"label\"]],\n        template: function SankeyComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(1, \"g\", 1);\n            i0.ɵɵtemplate(2, SankeyComponent__svg_g_2_Template, 6, 14, \"g\", 2)(3, SankeyComponent__svg_g_3_Template, 2, 12, \"g\", 3)(4, SankeyComponent__svg_g_4_Template, 2, 2, \"g\", 4);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(6, _c24, ctx.width, ctx.height))(\"animations\", ctx.animations);\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"transform\", ctx.transform);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngForOf\", ctx.linkPaths);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngForOf\", ctx.nodeRects);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngForOf\", ctx.nodeRects);\n          }\n        },\n        dependencies: [i1.NgForOf, i1.NgIf, TooltipDirective, ChartComponent],\n        styles: [_c25],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return SankeyComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet SankeyModule = /*#__PURE__*/(() => {\n  class SankeyModule {\n    static {\n      this.ɵfac = function SankeyModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || SankeyModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: SankeyModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [ChartCommonModule]\n      });\n    }\n  }\n  return SankeyModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NgxChartsModule = /*#__PURE__*/(() => {\n  class NgxChartsModule {\n    constructor() {\n      ngxChartsPolyfills();\n    }\n    static {\n      this.ɵfac = function NgxChartsModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || NgxChartsModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: NgxChartsModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [ChartCommonModule, AreaChartModule, BarChartModule, BoxChartModule, BubbleChartModule, HeatMapModule, SankeyModule, LineChartModule, PolarChartModule, NumberCardModule, PieChartModule, TreeMapModule, GaugeModule]\n      });\n    }\n  }\n  return NgxChartsModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction tickFormat(fieldType, groupByType) {\n  return function (label) {\n    if (label === 'No Value' || label === 'Other') {\n      return label;\n    }\n    if (fieldType === 'date' && groupByType === 'groupBy') {\n      const formatter = timeFormat('MM/DD/YYYY');\n      return formatter(label);\n    }\n    return label.toString();\n  };\n}\n\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\n/*\n * Public API Surface of ngx-charts\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AdvancedLegendComponent, AdvancedPieChartComponent, AreaChartComponent, AreaChartModule, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaComponent, AreaSeriesComponent, AxesModule, AxisLabelComponent, BarChartModule, BarChartType, BarComponent, BarHorizontal2DComponent, BarHorizontalComponent, BarHorizontalNormalizedComponent, BarHorizontalStackedComponent, BarLabelComponent, BarOrientation, BarVertical2DComponent, BarVerticalComponent, BarVerticalNormalizedComponent, BarVerticalStackedComponent, BaseChartComponent, BoxChartComponent, BoxChartModule, BoxComponent, BoxSeriesComponent, BubbleChartComponent, BubbleChartModule, BubbleSeriesComponent, CardComponent, CardSeriesComponent, ChartCommonModule, ChartComponent, CircleComponent, CircleSeriesComponent, ColorHelper, CountUpDirective, D0Types, GaugeArcComponent, GaugeAxisComponent, GaugeComponent, GaugeModule, GridPanelComponent, GridPanelSeriesComponent, HeatCellSeriesComponent, HeatMapCellComponent, HeatMapComponent, HeatMapModule, LegendComponent, LegendEntryComponent, LegendPosition, LegendType, LineChartComponent, LineChartModule, LineComponent, LineSeriesComponent, LinearGaugeComponent, NgxChartsModule, NumberCardComponent, NumberCardModule, Orientation, PercentGaugeComponent, PieArcComponent, PieChartComponent, PieChartModule, PieGridComponent, PieGridSeriesComponent, PieLabelComponent, PieSeriesComponent, PlacementTypes, PolarChartComponent, PolarChartModule, PolarSeriesComponent, SankeyComponent, SankeyModule, ScaleLegendComponent, ScaleType, SeriesHorizontal, SeriesType, SeriesVerticalComponent, ShowTypes, StyleTypes, SvgLinearGradientComponent, SvgRadialGradientComponent, TextAnchor, Timeline, TooltipArea, TooltipContentComponent, TooltipDirective, TooltipModule, TooltipService, TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent, TreeMapModule, VisibilityObserver, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent, calculateViewDimensions, cloneLineCoordinates, clonePoint, cloneVector2d, colorSets, count, decimalChecker, escapeLabel, formatLabel, getDomain, getScale, getScaleType, getTickLines, getUniqueXDomainValues, getXDomainArray, gridLayout, gridSize, hexToRgb, id, invertColor, reduceTicks, shadeRGBColor, sortByDomain, sortByTime, sortLinear, throttle, throttleable, tickFormat, trimLabel };\n"],"mappings":"y7BAKO,IAAMA,GAAoB,CAC/B,QAAS,GACT,QAAS,EACX,EAIe,SAARC,GAAkBC,EAAO,CAC9BA,EAAM,eAAe,EACrBA,EAAM,yBAAyB,CACjC,CCbe,SAARC,GAAkBC,EAAM,CAC7B,IAAIC,EAAOD,EAAK,SAAS,gBACvBE,EAAYC,EAAOH,CAAI,EAAE,GAAG,iBAAkBI,GAASC,EAAiB,EACtE,kBAAmBJ,EACrBC,EAAU,GAAG,mBAAoBE,GAASC,EAAiB,GAE3DJ,EAAK,WAAaA,EAAK,MAAM,cAC7BA,EAAK,MAAM,cAAgB,OAE/B,CACO,SAASK,GAAQN,EAAMO,EAAS,CACrC,IAAIN,EAAOD,EAAK,SAAS,gBACvBE,EAAYC,EAAOH,CAAI,EAAE,GAAG,iBAAkB,IAAI,EAChDO,IACFL,EAAU,GAAG,aAAcE,GAASC,EAAiB,EACrD,WAAW,UAAY,CACrBH,EAAU,GAAG,aAAc,IAAI,CACjC,EAAG,CAAC,GAEF,kBAAmBD,EACrBC,EAAU,GAAG,mBAAoB,IAAI,GAErCD,EAAK,MAAM,cAAgBA,EAAK,WAChC,OAAOA,EAAK,WAEhB,CC3BA,IAAOO,GAAQC,GAAK,IAAMA,ECAX,SAARC,GAA4BC,EAAM,CACvC,YAAAC,EACA,OAAAC,EACA,UAAAC,EACA,KAAAC,EACA,SAAAC,CACF,EAAG,CACD,OAAO,iBAAiB,KAAM,CAC5B,KAAM,CACJ,MAAOL,EACP,WAAY,GACZ,aAAc,EAChB,EACA,YAAa,CACX,MAAOC,EACP,WAAY,GACZ,aAAc,EAChB,EACA,OAAQ,CACN,MAAOC,EACP,WAAY,GACZ,aAAc,EAChB,EACA,UAAW,CACT,MAAOC,EACP,WAAY,GACZ,aAAc,EAChB,EACA,KAAM,CACJ,MAAOC,EACP,WAAY,GACZ,aAAc,EAChB,EACA,EAAG,CACD,MAAOC,CACT,CACF,CAAC,CACH,CCrCO,SAASC,GAAcC,EAAO,CACnCA,EAAM,yBAAyB,CACjC,CACe,SAARC,GAAkBD,EAAO,CAC9BA,EAAM,eAAe,EACrBA,EAAM,yBAAyB,CACjC,CCEA,IAAIE,GAAY,CACZ,KAAM,MACR,EACAC,GAAa,CACX,KAAM,OACR,EACAC,GAAc,CACZ,KAAM,QACR,EACAC,GAAc,CACZ,KAAM,QACR,EACI,CACJ,IAAAC,GACA,IAAAC,GACA,IAAAC,EACF,EAAI,KACJ,SAASC,GAAQC,EAAG,CAClB,MAAO,CAAC,CAACA,EAAE,CAAC,EAAG,CAACA,EAAE,CAAC,CAAC,CACtB,CACA,SAASC,GAAQD,EAAG,CAClB,MAAO,CAACD,GAAQC,EAAE,CAAC,CAAC,EAAGD,GAAQC,EAAE,CAAC,CAAC,CAAC,CACtC,CACA,IAAIE,GAAI,CACN,KAAM,IACN,QAAS,CAAC,IAAK,GAAG,EAAE,IAAIC,EAAI,EAC5B,MAAO,SAAUC,EAAGJ,EAAG,CACrB,OAAOI,GAAK,KAAO,KAAO,CAAC,CAAC,CAACA,EAAE,CAAC,EAAGJ,EAAE,CAAC,EAAE,CAAC,CAAC,EAAG,CAAC,CAACI,EAAE,CAAC,EAAGJ,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAC/D,EACA,OAAQ,SAAUK,EAAI,CACpB,OAAOA,GAAM,CAACA,EAAG,CAAC,EAAE,CAAC,EAAGA,EAAG,CAAC,EAAE,CAAC,CAAC,CAClC,CACF,EACIC,GAAI,CACN,KAAM,IACN,QAAS,CAAC,IAAK,GAAG,EAAE,IAAIH,EAAI,EAC5B,MAAO,SAAUI,EAAGP,EAAG,CACrB,OAAOO,GAAK,KAAO,KAAO,CAAC,CAACP,EAAE,CAAC,EAAE,CAAC,EAAG,CAACO,EAAE,CAAC,CAAC,EAAG,CAACP,EAAE,CAAC,EAAE,CAAC,EAAG,CAACO,EAAE,CAAC,CAAC,CAAC,CAC/D,EACA,OAAQ,SAAUF,EAAI,CACpB,OAAOA,GAAM,CAACA,EAAG,CAAC,EAAE,CAAC,EAAGA,EAAG,CAAC,EAAE,CAAC,CAAC,CAClC,CACF,EACIG,GAAK,CACP,KAAM,KACN,QAAS,CAAC,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,IAAI,EAAE,IAAIL,EAAI,EAC9D,MAAO,SAAUE,EAAI,CACnB,OAAOA,GAAM,KAAO,KAAOJ,GAAQI,CAAE,CACvC,EACA,OAAQ,SAAUA,EAAI,CACpB,OAAOA,CACT,CACF,EACII,GAAU,CACZ,QAAS,YACT,UAAW,OACX,EAAG,YACH,EAAG,YACH,EAAG,YACH,EAAG,YACH,GAAI,cACJ,GAAI,cACJ,GAAI,cACJ,GAAI,aACN,EACIC,GAAQ,CACV,EAAG,IACH,EAAG,IACH,GAAI,KACJ,GAAI,KACJ,GAAI,KACJ,GAAI,IACN,EACIC,GAAQ,CACV,EAAG,IACH,EAAG,IACH,GAAI,KACJ,GAAI,KACJ,GAAI,KACJ,GAAI,IACN,EACIC,GAAS,CACX,QAAS,EACT,UAAW,EACX,EAAG,KACH,EAAG,EACH,EAAG,KACH,EAAG,GACH,GAAI,GACJ,GAAI,EACJ,GAAI,EACJ,GAAI,EACN,EACIC,GAAS,CACX,QAAS,EACT,UAAW,EACX,EAAG,GACH,EAAG,KACH,EAAG,EACH,EAAG,KACH,GAAI,GACJ,GAAI,GACJ,GAAI,EACJ,GAAI,CACN,EACA,SAASV,GAAKW,EAAG,CACf,MAAO,CACL,KAAMA,CACR,CACF,CAGA,SAASC,GAAcC,EAAO,CAC5B,MAAO,CAACA,EAAM,SAAW,CAACA,EAAM,MAClC,CACA,SAASC,IAAgB,CACvB,IAAIC,EAAM,KAAK,iBAAmB,KAClC,OAAIA,EAAI,aAAa,SAAS,GAC5BA,EAAMA,EAAI,QAAQ,QACX,CAAC,CAACA,EAAI,EAAGA,EAAI,CAAC,EAAG,CAACA,EAAI,EAAIA,EAAI,MAAOA,EAAI,EAAIA,EAAI,MAAM,CAAC,GAE1D,CAAC,CAAC,EAAG,CAAC,EAAG,CAACA,EAAI,MAAM,QAAQ,MAAOA,EAAI,OAAO,QAAQ,KAAK,CAAC,CACrE,CACA,SAASC,IAAmB,CAC1B,OAAO,UAAU,gBAAkB,iBAAkB,IACvD,CAGA,SAASC,GAAMC,EAAM,CACnB,KAAO,CAACA,EAAK,SAAS,GAAI,EAAEA,EAAOA,EAAK,YAAa,OACrD,OAAOA,EAAK,OACd,CACA,SAASC,GAAMC,EAAQ,CACrB,OAAOA,EAAO,CAAC,EAAE,CAAC,IAAMA,EAAO,CAAC,EAAE,CAAC,GAAKA,EAAO,CAAC,EAAE,CAAC,IAAMA,EAAO,CAAC,EAAE,CAAC,CACtE,CAKO,SAASC,IAAS,CACvB,OAAOC,GAAMC,EAAC,CAChB,CAOA,SAASC,GAAMC,EAAK,CAClB,IAAIC,EAASC,GACXC,EAASC,GACTC,EAAYC,GACZC,EAAO,GACPC,EAAYC,GAAS,QAAS,QAAS,KAAK,EAC5CC,EAAa,EACbC,EACF,SAASZ,EAAMa,EAAO,CACpB,IAAIC,EAAUD,EAAM,SAAS,UAAWE,CAAU,EAAE,UAAU,UAAU,EAAE,KAAK,CAACC,GAAK,SAAS,CAAC,CAAC,EAChGF,EAAQ,MAAM,EAAE,OAAO,MAAM,EAAE,KAAK,QAAS,SAAS,EAAE,KAAK,iBAAkB,KAAK,EAAE,KAAK,SAAUG,GAAQ,OAAO,EAAE,MAAMH,CAAO,EAAE,KAAK,UAAY,CACpJ,IAAIZ,EAASgB,GAAM,IAAI,EAAE,OACzBC,EAAO,IAAI,EAAE,KAAK,IAAKjB,EAAO,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,IAAKA,EAAO,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,QAASA,EAAO,CAAC,EAAE,CAAC,EAAIA,EAAO,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,SAAUA,EAAO,CAAC,EAAE,CAAC,EAAIA,EAAO,CAAC,EAAE,CAAC,CAAC,CACpJ,CAAC,EACDW,EAAM,UAAU,YAAY,EAAE,KAAK,CAACG,GAAK,WAAW,CAAC,CAAC,EAAE,MAAM,EAAE,OAAO,MAAM,EAAE,KAAK,QAAS,WAAW,EAAE,KAAK,SAAUC,GAAQ,SAAS,EAAE,KAAK,OAAQ,MAAM,EAAE,KAAK,eAAgB,EAAG,EAAE,KAAK,SAAU,MAAM,EAAE,KAAK,kBAAmB,YAAY,EACtP,IAAIG,EAASP,EAAM,UAAU,SAAS,EAAE,KAAKZ,EAAI,QAAS,SAAUoB,EAAG,CACrE,OAAOA,EAAE,IACX,CAAC,EACDD,EAAO,KAAK,EAAE,OAAO,EACrBA,EAAO,MAAM,EAAE,OAAO,MAAM,EAAE,KAAK,QAAS,SAAUC,EAAG,CACvD,MAAO,kBAAoBA,EAAE,IAC/B,CAAC,EAAE,KAAK,SAAU,SAAUA,EAAG,CAC7B,OAAOJ,GAAQI,EAAE,IAAI,CACvB,CAAC,EACDR,EAAM,KAAKS,CAAM,EAAE,KAAK,OAAQ,MAAM,EAAE,KAAK,iBAAkB,KAAK,EAAE,GAAG,kBAAmBC,CAAO,EAAE,OAAOjB,CAAS,EAAE,GAAG,mBAAoBiB,CAAO,EAAE,GAAG,kBAAmBC,CAAU,EAAE,GAAG,mCAAoCC,CAAU,EAAE,MAAM,eAAgB,MAAM,EAAE,MAAM,8BAA+B,eAAe,CAChU,CACAzB,EAAM,KAAO,SAAUa,EAAOa,EAAWC,EAAO,CAC1Cd,EAAM,MACRA,EAAM,GAAG,cAAe,SAAUc,EAAO,CACvCC,EAAQ,KAAM,SAAS,EAAE,YAAY,EAAE,MAAMD,CAAK,CACpD,CAAC,EAAE,GAAG,4BAA6B,SAAUA,EAAO,CAClDC,EAAQ,KAAM,SAAS,EAAE,IAAID,CAAK,CACpC,CAAC,EAAE,MAAM,QAAS,UAAY,CAC5B,IAAIE,EAAO,KACTC,EAAQD,EAAK,QACbE,EAAOH,EAAQC,EAAM,SAAS,EAC9BG,GAAaF,EAAM,UACnBG,GAAahC,EAAI,MAAM,OAAOyB,GAAc,WAAaA,EAAU,MAAM,KAAM,SAAS,EAAIA,EAAWI,EAAM,MAAM,EACnHI,EAAIC,GAAYH,GAAYC,EAAU,EACxC,SAASG,GAAMC,EAAG,CAChBP,EAAM,UAAYO,IAAM,GAAKJ,KAAe,KAAO,KAAOC,EAAEG,CAAC,EAC7Df,EAAO,KAAKO,CAAI,EAChBE,EAAK,MAAM,CACb,CACA,OAAOC,KAAe,MAAQC,KAAe,KAAOG,GAAQA,GAAM,CAAC,CACrE,CAAC,EAEDvB,EAAM,KAAK,UAAY,CACrB,IAAIgB,EAAO,KACTS,EAAO,UACPR,EAAQD,EAAK,QACbI,GAAahC,EAAI,MAAM,OAAOyB,GAAc,WAAaA,EAAU,MAAMG,EAAMS,CAAI,EAAIZ,EAAWI,EAAM,MAAM,EAC9GC,GAAOH,EAAQC,EAAMS,CAAI,EAAE,YAAY,EACzCC,GAAUV,CAAI,EACdC,EAAM,UAAYG,KAAe,KAAO,KAAOA,GAC/CX,EAAO,KAAKO,CAAI,EAChBE,GAAK,MAAMJ,CAAK,EAAE,MAAMA,CAAK,EAAE,IAAIA,CAAK,CAC1C,CAAC,CAEL,EACA3B,EAAM,MAAQ,SAAUa,EAAOc,EAAO,CACpC3B,EAAM,KAAKa,EAAO,KAAMc,CAAK,CAC/B,EACA,SAASL,GAAS,CAChB,IAAIT,EAAQM,EAAO,IAAI,EACrBO,EAAYR,GAAM,IAAI,EAAE,UACtBQ,GACFb,EAAM,UAAU,YAAY,EAAE,MAAM,UAAW,IAAI,EAAE,KAAK,IAAKa,EAAU,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,IAAKA,EAAU,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,QAASA,EAAU,CAAC,EAAE,CAAC,EAAIA,EAAU,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,SAAUA,EAAU,CAAC,EAAE,CAAC,EAAIA,EAAU,CAAC,EAAE,CAAC,CAAC,EAC5Mb,EAAM,UAAU,SAAS,EAAE,MAAM,UAAW,IAAI,EAAE,KAAK,IAAK,SAAUQ,EAAG,CACvE,OAAOA,EAAE,KAAKA,EAAE,KAAK,OAAS,CAAC,IAAM,IAAMK,EAAU,CAAC,EAAE,CAAC,EAAIf,EAAa,EAAIe,EAAU,CAAC,EAAE,CAAC,EAAIf,EAAa,CAC/G,CAAC,EAAE,KAAK,IAAK,SAAUU,EAAG,CACxB,OAAOA,EAAE,KAAK,CAAC,IAAM,IAAMK,EAAU,CAAC,EAAE,CAAC,EAAIf,EAAa,EAAIe,EAAU,CAAC,EAAE,CAAC,EAAIf,EAAa,CAC/F,CAAC,EAAE,KAAK,QAAS,SAAUU,EAAG,CAC5B,OAAOA,EAAE,OAAS,KAAOA,EAAE,OAAS,IAAMK,EAAU,CAAC,EAAE,CAAC,EAAIA,EAAU,CAAC,EAAE,CAAC,EAAIf,EAAaA,CAC7F,CAAC,EAAE,KAAK,SAAU,SAAUU,EAAG,CAC7B,OAAOA,EAAE,OAAS,KAAOA,EAAE,OAAS,IAAMK,EAAU,CAAC,EAAE,CAAC,EAAIA,EAAU,CAAC,EAAE,CAAC,EAAIf,EAAaA,CAC7F,CAAC,GAEDE,EAAM,UAAU,oBAAoB,EAAE,MAAM,UAAW,MAAM,EAAE,KAAK,IAAK,IAAI,EAAE,KAAK,IAAK,IAAI,EAAE,KAAK,QAAS,IAAI,EAAE,KAAK,SAAU,IAAI,CAE1I,CACA,SAASe,EAAQC,EAAMS,EAAME,EAAO,CAClC,IAAIT,EAAOF,EAAK,QAAQ,QACxB,OAAOE,IAAS,CAACS,GAAS,CAACT,EAAK,OAASA,EAAO,IAAIU,EAAQZ,EAAMS,EAAME,CAAK,CAC/E,CACA,SAASC,EAAQZ,EAAMS,EAAME,EAAO,CAClC,KAAK,KAAOX,EACZ,KAAK,KAAOS,EACZ,KAAK,MAAQT,EAAK,QAClB,KAAK,OAAS,EACd,KAAK,MAAQW,CACf,CACAC,EAAQ,UAAY,CAClB,YAAa,UAAY,CACvB,MAAI,EAAE,KAAK,SAAW,IAAG,KAAK,MAAM,QAAU,KAAM,KAAK,SAAW,IAC7D,IACT,EACA,MAAO,SAAUd,EAAOe,EAAM,CAC5B,OAAI,KAAK,UAAU,KAAK,SAAW,GAAO,KAAK,KAAK,QAASf,EAAOe,CAAI,GAAO,KAAK,KAAK,QAASf,CAAK,EAChG,IACT,EACA,MAAO,SAAUA,EAAOe,EAAM,CAC5B,YAAK,KAAK,QAASf,EAAOe,CAAI,EACvB,IACT,EACA,IAAK,SAAUf,EAAOe,EAAM,CAC1B,MAAI,EAAE,KAAK,SAAW,IAAG,OAAO,KAAK,MAAM,QAAS,KAAK,KAAK,MAAOf,EAAOe,CAAI,GACzE,IACT,EACA,KAAM,SAAU1B,EAAMW,EAAOe,EAAM,CACjC,IAAIrB,EAAIF,EAAO,KAAK,IAAI,EAAE,MAAM,EAChCV,EAAU,KAAKO,EAAM,KAAK,KAAM,IAAI2B,GAAW3B,EAAM,CACnD,YAAaW,EACb,OAAQ3B,EACR,UAAWC,EAAI,OAAO,KAAK,MAAM,SAAS,EAC1C,KAAAyC,EACA,SAAUjC,CACZ,CAAC,EAAGY,CAAC,CACP,CACF,EACA,SAASE,EAAQI,EAAO,CAEtB,GADIf,GAAe,CAACe,EAAM,SACtB,CAACvB,EAAO,MAAM,KAAM,SAAS,EAAG,OACpC,IAAIyB,EAAO,KACTb,EAAOW,EAAM,OAAO,SAAS,KAC7Be,GAAQlC,GAAQmB,EAAM,QAAUX,EAAO,UAAYA,KAAU,YAAc4B,GAAYpC,GAAQmB,EAAM,OAASkB,GAAcC,GAC5HC,EAAQ9C,IAAQ+C,GAAI,KAAOC,GAAOjC,CAAI,EACtCkC,EAAQjD,IAAQkD,GAAI,KAAOC,GAAOpC,CAAI,EACtCc,GAAQZ,GAAMW,CAAI,EAClB3B,GAAS4B,GAAM,OACfJ,EAAYI,GAAM,UAClBuB,GAAInD,GAAO,CAAC,EAAE,CAAC,EACfoD,EACAC,EACAC,GAAItD,GAAO,CAAC,EAAE,CAAC,EACfuD,EACAC,GACAC,GAAIzD,GAAO,CAAC,EAAE,CAAC,EACf0D,GACAC,GACAC,GAAI5D,GAAO,CAAC,EAAE,CAAC,EACf6D,GACAC,GACAC,EAAK,EACLC,EAAK,EACLC,GACAC,GAAWrB,GAASG,GAAS1C,GAAQmB,EAAM,SAC3C0C,GACAC,GACAC,GAAS,MAAM,KAAK5C,EAAM,SAAW,CAACA,CAAK,EAAGU,GAAK,CACjD,IAAMH,EAAIG,EAAE,WACZ,OAAAA,EAAImC,GAAQnC,EAAGR,CAAI,EACnBQ,EAAE,OAASA,EAAE,MAAM,EACnBA,EAAE,WAAaH,EACRG,CACT,CAAC,EACHE,GAAUV,CAAI,EACd,IAAIE,GAAOH,EAAQC,EAAM,UAAW,EAAI,EAAE,YAAY,EACtD,GAAIb,IAAS,UAAW,CAClBU,IAAWyC,GAAS,IACxB,IAAMM,EAAM,CAACF,GAAO,CAAC,EAAGA,GAAO,CAAC,GAAKA,GAAO,CAAC,CAAC,EAC9CzC,GAAM,UAAYJ,EAAY,CAAC,CAAC4B,EAAKrD,IAAQ+C,GAAIK,GAAIqB,GAAID,EAAI,CAAC,EAAE,CAAC,EAAGA,EAAI,CAAC,EAAE,CAAC,CAAC,EAAGhB,EAAKxD,IAAQkD,GAAIK,GAAIkB,GAAID,EAAI,CAAC,EAAE,CAAC,EAAGA,EAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAG,CAACb,GAAK3D,IAAQ+C,GAAIW,GAAIgB,GAAIF,EAAI,CAAC,EAAE,CAAC,EAAGA,EAAI,CAAC,EAAE,CAAC,CAAC,EAAGV,GAAK9D,IAAQkD,GAAIW,GAAIa,GAAIF,EAAI,CAAC,EAAE,CAAC,EAAGA,EAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAC7NF,GAAO,OAAS,GAAGK,GAAKjD,CAAK,CACnC,MACE2B,EAAK5B,EAAU,CAAC,EAAE,CAAC,EACnB+B,EAAK/B,EAAU,CAAC,EAAE,CAAC,EACnBkC,GAAKlC,EAAU,CAAC,EAAE,CAAC,EACnBqC,GAAKrC,EAAU,CAAC,EAAE,CAAC,EAErB6B,EAAKD,EACLI,GAAKD,EACLI,GAAKD,GACLI,GAAKD,GACL,IAAIlD,GAAQM,EAAOU,CAAI,EAAE,KAAK,iBAAkB,MAAM,EAClDf,GAAUD,GAAM,UAAU,UAAU,EAAE,KAAK,SAAUI,GAAQD,CAAI,CAAC,EACtE,GAAIW,EAAM,QACRI,GAAK,MAAQ8C,GACb9C,GAAK,MAAQ+C,OACR,CACL,IAAIC,GAAO5D,EAAOQ,EAAM,IAAI,EAAE,GAAG,kBAAmBkD,GAAO,EAAI,EAAE,GAAG,gBAAiBC,GAAO,EAAI,EAC5FtE,GAAMuE,GAAK,GAAG,gBAAiBC,GAAW,EAAI,EAAE,GAAG,cAAeC,GAAU,EAAI,EACpFC,GAAYvD,EAAM,IAAI,CACxB,CACAL,EAAO,KAAKO,CAAI,EAChBE,GAAK,MAAMJ,EAAOe,EAAK,IAAI,EAC3B,SAASmC,GAAMlD,EAAO,CACpB,QAAWwD,KAAKxD,EAAM,gBAAkB,CAACA,CAAK,EAC5C,QAAWN,MAAKkD,GAAYlD,GAAE,aAAe8D,EAAE,aAAY9D,GAAE,IAAMmD,GAAQW,EAAGtD,CAAI,GAEpF,GAAIuC,IAAY,CAACC,IAAS,CAACC,IAASC,GAAO,SAAW,EAAG,CACvD,IAAMa,EAAQb,GAAO,CAAC,EAClBc,GAAID,EAAM,IAAI,CAAC,EAAIA,EAAM,CAAC,CAAC,EAAIC,GAAID,EAAM,IAAI,CAAC,EAAIA,EAAM,CAAC,CAAC,EAAGd,GAAQ,GAAUD,GAAQ,EAC7F,CACA,QAAWe,KAASb,GAAYa,EAAM,MAAKA,EAAM,CAAC,EAAIA,EAAM,IAAI,CAAC,EAAGA,EAAM,CAAC,EAAIA,EAAM,IAAI,CAAC,GAC1FjB,GAAS,GACTmB,GAAQ3D,CAAK,EACbiD,GAAKjD,CAAK,CACZ,CACA,SAASiD,GAAKjD,EAAO,CACnB,IAAMyD,EAAQb,GAAO,CAAC,EACpBgB,GAASH,EAAM,OACjB,IAAI/C,GAGJ,OAFA4B,EAAKmB,EAAM,CAAC,EAAIG,GAAO,CAAC,EACxBrB,EAAKkB,EAAM,CAAC,EAAIG,GAAO,CAAC,EAChB7C,EAAM,CACZ,KAAK8C,GACL,KAAK5C,GACH,CACMG,IAAOkB,EAAKU,GAAItB,GAAIC,EAAIoB,GAAIf,GAAIC,GAAIK,CAAE,CAAC,EAAGV,EAAKD,EAAKW,EAAIJ,GAAKD,GAAKK,GAClEf,IAAOgB,EAAKS,GAAInB,GAAIC,EAAIiB,GAAIZ,GAAIC,GAAIG,CAAE,CAAC,EAAGR,GAAKD,EAAKS,EAAIF,GAAKD,GAAKG,GACtE,KACF,CACF,KAAKpB,GACH,CACMyB,GAAO,CAAC,GACNxB,IAAOQ,EAAKoB,GAAItB,GAAGqB,GAAIf,GAAGY,GAAO,CAAC,EAAE,CAAC,CAAC,CAAC,EAAGV,GAAKc,GAAItB,GAAGqB,GAAIf,GAAGY,GAAO,CAAC,EAAE,CAAC,CAAC,CAAC,EAAGxB,EAAQ,GACrFG,IAAOQ,GAAKiB,GAAInB,GAAGkB,GAAIZ,GAAGS,GAAO,CAAC,EAAE,CAAC,CAAC,CAAC,EAAGP,GAAKW,GAAInB,GAAGkB,GAAIZ,GAAGS,GAAO,CAAC,EAAE,CAAC,CAAC,CAAC,EAAGrB,EAAQ,KAErFH,EAAQ,GAAGkB,EAAKU,GAAItB,GAAIC,EAAIoB,GAAIf,GAAIL,EAAIW,CAAE,CAAC,EAAGV,EAAKD,EAAKW,EAAIJ,GAAKD,IAAYb,EAAQ,IAAGkB,EAAKU,GAAItB,GAAIO,GAAIc,GAAIf,GAAIC,GAAIK,CAAE,CAAC,EAAGV,EAAKD,EAAIO,GAAKD,GAAKK,GAC9If,EAAQ,GAAGgB,EAAKS,GAAInB,GAAIC,EAAIiB,GAAIZ,GAAIL,EAAIS,CAAE,CAAC,EAAGR,GAAKD,EAAKS,EAAIF,GAAKD,IAAYb,EAAQ,IAAGgB,EAAKS,GAAInB,GAAIO,GAAIW,GAAIZ,GAAIC,GAAIG,CAAE,CAAC,EAAGR,GAAKD,EAAIO,GAAKD,GAAKG,IAEpJ,KACF,CACF,KAAKrB,GACH,CACME,IAAOQ,EAAKoB,GAAItB,GAAGqB,GAAIf,GAAGL,EAAKW,EAAKlB,CAAK,CAAC,EAAGc,GAAKc,GAAItB,GAAGqB,GAAIf,GAAGC,GAAKK,EAAKlB,CAAK,CAAC,GAChFG,IAAOQ,GAAKiB,GAAInB,GAAGkB,GAAIZ,GAAGL,EAAKS,EAAKhB,CAAK,CAAC,EAAGc,GAAKW,GAAInB,GAAGkB,GAAIZ,GAAGC,GAAKG,EAAKhB,CAAK,CAAC,GACpF,KACF,CACJ,CACIW,GAAKN,IACPR,GAAS,GACTV,GAAIiB,EAAIA,EAAKM,GAAIA,GAAKvB,GACtBA,GAAIkB,EAAIA,EAAKM,GAAIA,GAAKxB,GAClBrB,KAAQyE,IAAO3E,GAAQ,KAAK,SAAUG,GAAQD,EAAOyE,GAAMzE,CAAI,CAAC,CAAC,GAEnEgD,GAAKN,KACPR,GAAS,GACTb,GAAIoB,EAAIA,EAAKM,GAAIA,GAAK1B,GACtBA,GAAIqB,GAAIA,GAAKM,GAAIA,GAAK3B,GAClBrB,KAAQ0E,IAAO5E,GAAQ,KAAK,SAAUG,GAAQD,EAAO0E,GAAM1E,CAAI,CAAC,CAAC,GAEnEc,GAAM,YAAWJ,EAAYI,GAAM,WACnCuC,KAAOd,EAAK7B,EAAU,CAAC,EAAE,CAAC,EAAGmC,GAAKnC,EAAU,CAAC,EAAE,CAAC,GAChD4C,KAAOZ,GAAKhC,EAAU,CAAC,EAAE,CAAC,EAAGsC,GAAKtC,EAAU,CAAC,EAAE,CAAC,IAChDA,EAAU,CAAC,EAAE,CAAC,IAAM6B,GAAM7B,EAAU,CAAC,EAAE,CAAC,IAAMgC,IAAMhC,EAAU,CAAC,EAAE,CAAC,IAAMmC,IAAMnC,EAAU,CAAC,EAAE,CAAC,IAAMsC,MACpGlC,GAAM,UAAY,CAAC,CAACyB,EAAIG,EAAE,EAAG,CAACG,GAAIG,EAAE,CAAC,EACrC1C,EAAO,KAAKO,CAAI,EAChBE,GAAK,MAAMJ,EAAOe,EAAK,IAAI,EAE/B,CACA,SAASoC,GAAMnD,EAAO,CAEpB,GADAgE,GAAchE,CAAK,EACfA,EAAM,QAAS,CACjB,GAAIA,EAAM,QAAQ,OAAQ,OACtBf,GAAa,aAAaA,CAAW,EACzCA,EAAc,WAAW,UAAY,CACnCA,EAAc,IAChB,EAAG,GAAG,CACR,MACEgF,GAAWjE,EAAM,KAAMwC,EAAM,EAC7BY,GAAK,GAAG,0DAA2D,IAAI,EAEzElE,GAAM,KAAK,iBAAkB,KAAK,EAClCC,GAAQ,KAAK,SAAUG,GAAQ,OAAO,EAClCa,GAAM,YAAWJ,EAAYI,GAAM,WACnC+D,GAAMnE,CAAS,IAAGI,GAAM,UAAY,KAAMR,EAAO,KAAKO,CAAI,GAC9DE,GAAK,IAAIJ,EAAOe,EAAK,IAAI,CAC3B,CACA,SAASsC,GAAUrD,EAAO,CACxB,OAAQA,EAAM,QAAS,CACrB,IAAK,IACH,CAEEyC,GAAWrB,GAASG,EACpB,KACF,CACF,IAAK,IACH,CAEMR,IAASI,KACPC,IAAOa,GAAKC,GAAKI,EAAKlB,EAAOO,EAAKC,EAAKU,EAAKlB,GAC5CG,IAAOa,GAAKC,GAAKE,EAAKhB,EAAOO,EAAKC,GAAKQ,EAAKhB,GAChDR,EAAOG,GACP+B,GAAKjD,CAAK,GAEZ,KACF,CACF,IAAK,IACH,EAEMe,IAASI,IAAeJ,IAASG,MAC/BE,EAAQ,EAAGa,GAAKC,GAAKI,EAAYlB,EAAQ,IAAGO,EAAKC,EAAKU,GACtDf,EAAQ,EAAGa,GAAKC,GAAKE,EAAYhB,EAAQ,IAAGO,EAAKC,GAAKQ,GAC1DxB,EAAO8C,GACP1E,GAAQ,KAAK,SAAUG,GAAQ,SAAS,EACxC2D,GAAKjD,CAAK,GAEZ,KACF,CACF,QACE,MACJ,CACA2D,GAAQ3D,CAAK,CACf,CACA,SAASsD,GAAStD,EAAO,CACvB,OAAQA,EAAM,QAAS,CACrB,IAAK,IACH,CAEMyC,KACFC,GAAQC,GAAQF,GAAW,GAC3BQ,GAAKjD,CAAK,GAEZ,KACF,CACF,IAAK,IACH,CAEMe,IAASG,KACPE,EAAQ,EAAGa,GAAKC,GAAYd,EAAQ,IAAGO,EAAKC,GAC5CL,EAAQ,EAAGa,GAAKC,GAAYd,EAAQ,IAAGO,EAAKC,IAChDhB,EAAOI,GACP8B,GAAKjD,CAAK,GAEZ,KACF,CACF,IAAK,IACH,CAEMe,IAAS8C,KACP7D,EAAM,QACJoB,IAAOa,GAAKC,GAAKI,EAAKlB,EAAOO,EAAKC,EAAKU,EAAKlB,GAC5CG,IAAOa,GAAKC,GAAKE,EAAKhB,EAAOO,EAAKC,GAAKQ,EAAKhB,GAChDR,EAAOG,KAEHE,EAAQ,EAAGa,GAAKC,GAAYd,EAAQ,IAAGO,EAAKC,GAC5CL,EAAQ,EAAGa,GAAKC,GAAYd,EAAQ,IAAGO,EAAKC,IAChDhB,EAAOI,IAEThC,GAAQ,KAAK,SAAUG,GAAQD,CAAI,CAAC,EACpC4D,GAAKjD,CAAK,GAEZ,KACF,CACF,QACE,MACJ,CACA2D,GAAQ3D,CAAK,CACf,CACF,CACA,SAASH,EAAWG,EAAO,CACzBC,EAAQ,KAAM,SAAS,EAAE,MAAMD,CAAK,CACtC,CACA,SAASF,EAAWE,EAAO,CACzBC,EAAQ,KAAM,SAAS,EAAE,MAAMD,CAAK,CACtC,CACA,SAASZ,GAAa,CACpB,IAAIe,EAAQ,KAAK,SAAW,CAC1B,UAAW,IACb,EACA,OAAAA,EAAM,OAASgE,GAAQ5F,EAAO,MAAM,KAAM,SAAS,CAAC,EACpD4B,EAAM,IAAM7B,EACL6B,CACT,CACA,OAAA9B,EAAM,OAAS,SAAU+F,EAAG,CAC1B,OAAO,UAAU,QAAU7F,EAAS,OAAO6F,GAAM,WAAaA,EAAIC,GAASF,GAAQC,CAAC,CAAC,EAAG/F,GAASE,CACnG,EACAF,EAAM,OAAS,SAAU+F,EAAG,CAC1B,OAAO,UAAU,QAAU3F,EAAS,OAAO2F,GAAM,WAAaA,EAAIC,GAAS,CAAC,CAACD,CAAC,EAAG/F,GAASI,CAC5F,EACAJ,EAAM,UAAY,SAAU+F,EAAG,CAC7B,OAAO,UAAU,QAAUzF,EAAY,OAAOyF,GAAM,WAAaA,EAAIC,GAAS,CAAC,CAACD,CAAC,EAAG/F,GAASM,CAC/F,EACAN,EAAM,WAAa,SAAU+F,EAAG,CAC9B,OAAO,UAAU,QAAUpF,EAAa,CAACoF,EAAG/F,GAASW,CACvD,EACAX,EAAM,aAAe,SAAU+F,EAAG,CAChC,OAAO,UAAU,QAAUvF,EAAO,CAAC,CAACuF,EAAG/F,GAASQ,CAClD,EACAR,EAAM,GAAK,UAAY,CACrB,IAAIiG,EAAQxF,EAAU,GAAG,MAAMA,EAAW,SAAS,EACnD,OAAOwF,IAAUxF,EAAYT,EAAQiG,CACvC,EACOjG,CACT,CCngBA,IAAMkG,GAAM,CAAC,UAAU,EACjBC,GAAMC,IAAO,CACjB,MAAOA,CACT,GACA,SAASC,GAAsDC,EAAIC,EAAK,CAAC,CACzE,SAASC,GAAwCF,EAAIC,EAAK,CAMxD,GALID,EAAK,IACJG,EAAe,EAAG,MAAM,EACxBC,EAAW,EAAGL,GAAuD,EAAG,EAAG,cAAe,CAAC,EAC3FM,EAAa,GAEdL,EAAK,EAAG,CACV,IAAMM,EAAYC,EAAc,EAC7BC,EAAU,EACVC,EAAW,mBAAoBH,EAAO,QAAQ,EAAE,0BAA8BI,GAAgB,EAAGb,GAAKS,EAAO,OAAO,CAAC,CAC1H,CACF,CACA,SAASK,GAAwCX,EAAIC,EAAK,CAIxD,GAHID,EAAK,GACJY,EAAU,EAAG,OAAQ,CAAC,EAEvBZ,EAAK,EAAG,CACV,IAAMM,EAAYC,EAAc,EAC7BE,EAAW,YAAaH,EAAO,MAAUO,EAAc,CAC5D,CACF,CACA,SAASC,GAAkCd,EAAIC,EAAK,CAMlD,GALID,EAAK,IACJG,EAAe,EAAG,SAAU,CAAC,EAAE,EAAG,OAAQ,CAAC,EAC3CY,EAAO,CAAC,EACRV,EAAa,EAAE,GAEhBL,EAAK,EAAG,CACV,IAAMM,EAAYC,EAAc,EAC7BC,EAAU,CAAC,EACXQ,GAAkBV,EAAO,KAAK,CACnC,CACF,CACA,SAASW,GAA8BjB,EAAIC,EAAK,CAC9C,GAAID,EAAK,EAAG,CACV,IAAMkB,EAASC,EAAiB,EAC7BhB,EAAe,EAAG,KAAM,CAAC,EAAE,EAAG,0BAA2B,CAAC,EAC1DiB,EAAW,SAAU,SAAiFC,EAAQ,CAC5GC,EAAcJ,CAAG,EACpB,IAAMZ,EAAYC,EAAc,EAChC,OAAUgB,EAAYjB,EAAO,WAAW,KAAKe,CAAM,CAAC,CACtD,CAAC,EAAE,WAAY,SAAmFA,EAAQ,CACrGC,EAAcJ,CAAG,EACpB,IAAMZ,EAAYC,EAAc,EAChC,OAAUgB,EAAYjB,EAAO,SAASe,CAAM,CAAC,CAC/C,CAAC,EAAE,aAAc,SAAqFA,EAAQ,CACzGC,EAAcJ,CAAG,EACpB,IAAMZ,EAAYC,EAAc,EAChC,OAAUgB,EAAYjB,EAAO,WAAWe,CAAM,CAAC,CACjD,CAAC,EACEhB,EAAa,EAAE,CACpB,CACA,GAAIL,EAAK,EAAG,CACV,IAAMwB,EAAWvB,EAAI,UACfK,EAAYC,EAAc,EAC7BC,EAAU,EACVC,EAAW,QAASe,EAAS,KAAK,EAAE,iBAAkBA,EAAS,cAAc,EAAE,QAASA,EAAS,KAAK,EAAE,WAAYlB,EAAO,SAASkB,CAAQ,CAAC,CAClJ,CACF,CACA,IAAMC,GAAM,CAAC,GAAG,EAChB,SAASC,GAAkD1B,EAAIC,EAAK,CAIlE,GAHID,EAAK,GACJY,EAAU,EAAG,0BAA2B,CAAC,EAE1CZ,EAAK,EAAG,CACV,IAAMM,EAAYC,EAAc,EAC7BE,EAAW,aAAcH,EAAO,eAAiBA,EAAO,cAAc,WAAaA,EAAO,eAAe,KAAK,EAAE,aAAcA,EAAO,cAAc,MAAM,EAAE,SAAUA,EAAO,cAAc,MAAM,EAAE,SAAUA,EAAO,KAAK,CAAC,CAAC,EAAE,QAASA,EAAO,WAAW,CAC5P,CACF,CACA,SAASqB,GAA4C3B,EAAIC,EAAK,CAC5D,GAAID,EAAK,EAAG,CACV,IAAMkB,EAASC,EAAiB,EAC7BhB,EAAe,EAAG,oBAAqB,CAAC,EACxCiB,EAAW,aAAc,SAA6FC,EAAQ,CAC5HC,EAAcJ,CAAG,EACpB,IAAMZ,EAAYC,EAAc,EAChC,OAAUgB,EAAYjB,EAAO,iBAAiB,KAAKe,CAAM,CAAC,CAC5D,CAAC,EAAE,gBAAiB,SAAgGA,EAAQ,CACvHC,EAAcJ,CAAG,EACpB,IAAMZ,EAAYC,EAAc,EAChC,OAAUgB,EAAYjB,EAAO,oBAAoB,KAAKe,CAAM,CAAC,CAC/D,CAAC,EAAE,kBAAmB,SAAkGA,EAAQ,CAC3HC,EAAcJ,CAAG,EACpB,IAAMZ,EAAYC,EAAc,EAChC,OAAUgB,EAAYjB,EAAO,sBAAsB,KAAKe,CAAM,CAAC,CACjE,CAAC,EACEhB,EAAa,CAClB,CACA,GAAIL,EAAK,EAAG,CACV,IAAMM,EAAYC,EAAc,EAC7BE,EAAW,aAAcH,EAAO,eAAiBA,EAAO,cAAc,WAAaA,EAAO,eAAe,KAAK,EAAE,OAAQA,EAAO,cAAc,MAAM,EAAE,QAASA,EAAO,cAAc,KAAK,EAAE,SAAUA,EAAO,cAAc,MAAM,EAAE,SAAUA,EAAO,KAAK,CAAC,CAAC,EAAE,QAASA,EAAO,WAAW,EAAE,gBAAiBA,EAAO,aAAa,CAClU,CACF,CACA,IAAMsB,GAAM,CAAC,wBAAyB,EAAE,EAClCC,GAAM,CAAC,SAAS,EAChBC,GAAM,CAAC,0BAA2B,EAAE,EAC1C,SAASC,GAA8E/B,EAAIC,EAAK,CAC1FD,EAAK,IACJgC,EAAe,EACfC,GAAmB,CAAC,EAE3B,CACA,SAASC,GAA8GlC,EAAIC,EAAK,CAO9H,GANID,EAAK,IACJgC,EAAe,EACf7B,EAAe,EAAG,QAAS,EAAE,EAC7BY,EAAO,CAAC,EACRV,EAAa,GAEdL,EAAK,EAAG,CACV,IAAMmC,EAAclC,EAAI,UAClBmC,EAAOnC,EAAI,MACdoC,EAAY,IAAKD,EAAO,EAAE,EAC1B5B,EAAU,EACV8B,GAAmB,IAAKH,EAAa,GAAG,CAC7C,CACF,CACA,SAASI,GAAiGvC,EAAIC,EAAK,CAOjH,GANID,EAAK,IACJgC,EAAe,EACfQ,GAAwB,CAAC,EACzBpC,EAAW,EAAG8B,GAA+G,EAAG,EAAG,QAAS,CAAC,EAC7IO,GAAsB,GAEvBzC,EAAK,EAAG,CACV,IAAM0C,EAAezC,EAAI,KACtBO,EAAU,EACVC,EAAW,UAAWiC,CAAY,CACvC,CACF,CACA,SAASC,GAA6E3C,EAAIC,EAAK,CAI7F,GAHID,EAAK,GACJI,EAAW,EAAGmC,GAAkG,EAAG,EAAG,eAAgB,CAAC,EAExIvC,EAAK,EAAG,CACV,IAAM4C,EAAarC,EAAc,CAAC,EAAE,UAC9BsC,EAAYtC,EAAc,EAC7BE,EAAW,OAAQoC,EAAO,WAAWD,CAAO,CAAC,CAClD,CACF,CACA,SAASE,GAA6E9C,EAAIC,EAAK,CAI7F,GAHID,EAAK,GACJe,EAAO,CAAC,EAETf,EAAK,EAAG,CACV,IAAM+C,EAAsBxC,EAAc,EAAE,KACtCsC,EAAYtC,EAAc,CAAC,EAC9B+B,GAAmB,IAAKO,EAAO,SAASE,CAAgB,EAAG,GAAG,CACnE,CACF,CACA,SAASC,GAA0DhD,EAAIC,EAAK,CAa1E,GAZID,EAAK,IACJgC,EAAe,EACfQ,GAAwB,CAAC,EACzBrC,EAAe,EAAG,OAAO,EACzBY,EAAO,CAAC,EACRV,EAAa,EACbF,EAAe,EAAG,OAAQ,CAAC,EAC3BC,EAAW,EAAG2B,GAA+E,EAAG,EAAG,eAAgB,CAAC,EACpH1B,EAAa,EACbD,EAAW,EAAGuC,GAA8E,EAAG,EAAG,cAAe,KAAM,EAAMM,EAAsB,EAAE,EAAGH,GAA8E,EAAG,EAAG,cAAe,KAAM,EAAMG,EAAsB,EAC7RR,GAAsB,GAEvBzC,EAAK,EAAG,CACV,IAAM+C,EAAmB9C,EAAI,KACvBiD,EAA0BC,GAAY,CAAC,EACvCC,EAA2BD,GAAY,CAAC,EACxCN,EAAYtC,EAAc,CAAC,EAC9BC,EAAU,CAAC,EACXQ,GAAkB+B,CAAgB,EAClCvC,EAAU,EACV6B,EAAY,cAAeQ,EAAO,UAAU,EAAE,YAAaA,EAAO,aAAa,EAC/ErC,EAAU,EACVC,EAAW,OAAQoC,EAAO,oBAAoB,EAAE,WAAYK,CAAoB,EAAE,WAAYE,CAAqB,CACxH,CACF,CACA,SAASC,GAAsCrD,EAAIC,EAAK,CAOtD,GANID,EAAK,IACJgC,EAAe,EACf7B,EAAe,EAAG,IAAK,CAAC,EACxBC,EAAW,EAAG4C,GAA2D,EAAG,EAAG,eAAgB,CAAC,EAChG3C,EAAa,GAEdL,EAAK,EAAG,CACV,IAAM4C,EAAU3C,EAAI,UACd4C,EAAYtC,EAAc,EAC7B8B,EAAY,YAAaQ,EAAO,cAAcD,CAAO,CAAC,EACtDpC,EAAU,EACVC,EAAW,OAAQoC,EAAO,WAAWD,CAAO,CAAC,CAClD,CACF,CACA,SAASU,GAA+CtD,EAAIC,EAAK,CAO/D,GANID,EAAK,IACJgC,EAAe,EACf7B,EAAe,EAAG,GAAG,EACrBS,EAAU,EAAG,OAAQ,EAAE,EACvBP,EAAa,GAEdL,EAAK,EAAG,CACV,IAAM6C,EAAYtC,EAAc,CAAC,EAC9B8B,EAAY,YAAaQ,EAAO,kBAAkB,CAAC,EACnDrC,EAAU,EACV6B,EAAY,KAAM,CAACQ,EAAO,cAAc,CAC7C,CACF,CACA,SAASU,GAAsCvD,EAAIC,EAAK,CAOtD,GANID,EAAK,IACJgC,EAAe,EACf7B,EAAe,EAAG,GAAG,EACrBC,EAAW,EAAGkD,GAAgD,EAAG,EAAG,IAAK,CAAC,EAC1EjD,EAAa,GAEdL,EAAK,EAAG,CACV,IAAMwD,EAAUvD,EAAI,UACd4C,EAAYtC,EAAc,EAC7B8B,EAAY,YAAaQ,EAAO,cAAcW,CAAO,CAAC,EACtDhD,EAAU,EACVC,EAAW,OAAQoC,EAAO,aAAa,CAC5C,CACF,CACA,IAAMY,GAAM,CAAC,oBAAqB,EAAE,EACpC,SAASC,GAAiC1D,EAAIC,EAAK,CACjD,GAAID,EAAK,EAAG,CACV,IAAM2D,EAASxC,EAAiB,EAC7Ba,EAAe,EACf7B,EAAe,EAAG,IAAK,CAAC,EACxBiB,EAAW,oBAAqB,SAAyEC,EAAQ,CAC/GC,EAAcqC,CAAG,EACpB,IAAMC,EAAYrD,EAAc,EAChC,OAAUgB,EAAYqC,EAAO,gBAAgBvC,CAAM,CAAC,CACtD,CAAC,EACEhB,EAAa,CAClB,CACA,GAAIL,EAAK,EAAG,CACV,IAAM4D,EAAYrD,EAAc,EAC7BE,EAAW,YAAamD,EAAO,SAAS,EAAE,cAAeA,EAAO,WAAW,EAAE,gBAAiBA,EAAO,aAAa,EAAE,iBAAkBA,EAAO,cAAc,EAAE,gBAAiBA,EAAO,aAAa,EAAE,aAAcA,EAAO,UAAU,EAAE,QAASA,EAAO,MAAM,EAAE,SAAUA,EAAO,OAAO,EAAE,gBAAiBA,EAAO,aAAa,EAAE,iBAAkBA,EAAO,KAAK,MAAM,EAAE,QAASA,EAAO,KAAK,KAAK,EAAE,aAAcA,EAAO,KAAK,EAAE,YAAaA,EAAO,SAAS,CAC9b,CACF,CACA,SAASC,GAAiC7D,EAAIC,EAAK,CAKjD,GAJID,EAAK,IACJgC,EAAe,EACfpB,EAAU,EAAG,IAAK,CAAC,GAEpBZ,EAAK,EAAG,CACV,IAAM4D,EAAYrD,EAAc,EAC7BE,EAAW,QAASmD,EAAO,SAAS,EAAE,SAAUA,EAAO,WAAW,EAAE,SAAUA,EAAO,YAAY,MAAM,EAAE,SAAUA,EAAO,KAAK,MAAM,EAAE,QAASA,EAAO,KAAK,KAAK,CACtK,CACF,CACA,IAAME,GAAM,CAAC,0BAA2B,EAAE,EAC1C,SAASC,GAA8E/D,EAAIC,EAAK,CAC1FD,EAAK,IACJgC,EAAe,EACfC,GAAmB,CAAC,EAE3B,CACA,SAAS+B,GAAkIhE,EAAIC,EAAK,CAOlJ,GANID,EAAK,IACJgC,EAAe,EACf7B,EAAe,EAAG,QAAS,EAAE,EAC7BY,EAAO,CAAC,EACRV,EAAa,GAEdL,EAAK,EAAG,CACV,IAAMmC,EAAclC,EAAI,UAClBmC,EAAOnC,EAAI,MACXgE,EAAY1D,EAAc,CAAC,EAC9B8B,EAAY,IAAKD,GAAQ,EAAI6B,EAAO,YAAY,EAChDzD,EAAU,EACV8B,GAAmB,IAAKH,EAAa,GAAG,CAC7C,CACF,CACA,SAAS+B,GAAqHlE,EAAIC,EAAK,CAOrI,GANID,EAAK,IACJgC,EAAe,EACfQ,GAAwB,CAAC,EACzBpC,EAAW,EAAG4D,GAAmI,EAAG,EAAG,QAAS,EAAE,EAClKvB,GAAsB,GAEvBzC,EAAK,EAAG,CACV,IAAMmE,EAAkB5D,EAAc,EAAE,KACrCC,EAAU,EACVC,EAAW,UAAW0D,CAAY,CACvC,CACF,CACA,SAASC,GAAiGpE,EAAIC,EAAK,CAOjH,GANID,EAAK,IACJgC,EAAe,EACfQ,GAAwB,CAAC,EACzBpC,EAAW,EAAG8D,GAAsH,EAAG,EAAG,eAAgB,EAAE,EAC5JzB,GAAsB,GAEvBzC,EAAK,EAAG,CACV,IAAMmE,EAAelE,EAAI,KACtBM,EAAc,CAAC,EAClB,IAAM8D,EAA2BlB,GAAY,CAAC,EAC3C3C,EAAU,EACVC,EAAW,OAAQ0D,EAAa,OAAS,CAAC,EAAE,WAAYE,CAAqB,CAClF,CACF,CACA,SAASC,GAA6EtE,EAAIC,EAAK,CAI7F,GAHID,EAAK,GACJI,EAAW,EAAGgE,GAAkG,EAAG,EAAG,eAAgB,CAAC,EAExIpE,EAAK,EAAG,CACV,IAAMuE,EAAahE,EAAc,CAAC,EAAE,UAC9B0D,EAAY1D,EAAc,EAC7BE,EAAW,OAAQwD,EAAO,WAAWM,CAAO,CAAC,CAClD,CACF,CACA,SAASC,GAA6ExE,EAAIC,EAAK,CAI7F,GAHID,EAAK,GACJe,EAAO,CAAC,EAETf,EAAK,EAAG,CACV,IAAMyE,EAAsBlE,EAAc,EAAE,KACtC0D,EAAY1D,EAAc,CAAC,EAC9B+B,GAAmB,IAAK2B,EAAO,SAASQ,CAAgB,EAAG,GAAG,CACnE,CACF,CACA,SAASC,GAA0D1E,EAAIC,EAAK,CAa1E,GAZID,EAAK,IACJgC,EAAe,EACfQ,GAAwB,CAAC,EACzBrC,EAAe,EAAG,OAAO,EACzBY,EAAO,CAAC,EACRV,EAAa,EACbF,EAAe,EAAG,OAAQ,CAAC,EAC3BC,EAAW,EAAG2D,GAA+E,EAAG,EAAG,eAAgB,CAAC,EACpH1D,EAAa,EACbD,EAAW,EAAGkE,GAA8E,EAAG,EAAG,cAAe,KAAM,EAAMrB,EAAsB,EAAE,EAAGuB,GAA8E,EAAG,EAAG,cAAe,KAAM,EAAMvB,EAAsB,EAC7RR,GAAsB,GAEvBzC,EAAK,EAAG,CACV,IAAMyE,EAAmBxE,EAAI,KACvB0E,EAA0BxB,GAAY,CAAC,EACvCkB,EAA2BlB,GAAY,CAAC,EACxCc,EAAY1D,EAAc,CAAC,EAC9BC,EAAU,CAAC,EACXQ,GAAkByD,CAAgB,EAClCjE,EAAU,EACVoE,GAAY,YAAa,MAAM,EAC/BvC,EAAY,KAAM4B,EAAO,EAAE,EAAE,IAAKA,EAAO,EAAE,EAAE,IAAKA,EAAO,EAAE,EAAE,cAAeA,EAAO,UAAU,EAC7FzD,EAAU,EACVC,EAAW,OAAQwD,EAAO,SAAS,EAAE,WAAYU,CAAoB,EAAE,WAAYN,CAAqB,CAC7G,CACF,CACA,SAASQ,GAAsC7E,EAAIC,EAAK,CAOtD,GANID,EAAK,IACJgC,EAAe,EACf7B,EAAe,EAAG,IAAK,CAAC,EACxBC,EAAW,EAAGsE,GAA2D,EAAG,GAAI,eAAgB,CAAC,EACjGrE,EAAa,GAEdL,EAAK,EAAG,CACV,IAAMuE,EAAUtE,EAAI,UACdgE,EAAY1D,EAAc,EAC7B8B,EAAY,YAAa4B,EAAO,UAAUM,CAAO,CAAC,EAClD/D,EAAU,EACVC,EAAW,OAAQwD,EAAO,WAAWM,CAAO,CAAC,CAClD,CACF,CACA,SAASO,GAAyC9E,EAAIC,EAAK,CAKzD,GAJID,EAAK,IACJgC,EAAe,EACfpB,EAAU,EAAG,OAAQ,EAAE,GAExBZ,EAAK,EAAG,CACV,IAAMiE,EAAY1D,EAAc,EAC7B8B,EAAY,IAAK4B,EAAO,iBAAiB,EAAE,YAAaA,EAAO,kBAAkB,CAAC,CACvF,CACF,CACA,SAASc,GAA2D/E,EAAIC,EAAK,CAK3E,GAJID,EAAK,IACJgC,EAAe,EACfpB,EAAU,EAAG,OAAQ,EAAE,GAExBZ,EAAK,EAAG,CACV,IAAMiE,EAAY1D,EAAc,CAAC,EAC9B8B,EAAY,KAAM4B,EAAO,aAAa,CAC3C,CACF,CACA,SAASe,GAA2DhF,EAAIC,EAAK,CAK3E,GAJID,EAAK,IACJgC,EAAe,EACfpB,EAAU,EAAG,OAAQ,EAAE,GAExBZ,EAAK,EAAG,CACV,IAAMiE,EAAY1D,EAAc,CAAC,EAC9B8B,EAAY,KAAM,CAAC4B,EAAO,aAAa,CAC5C,CACF,CACA,SAASgB,GAA+CjF,EAAIC,EAAK,CAO/D,GANID,EAAK,IACJgC,EAAe,EACf7B,EAAe,EAAG,GAAG,EACrBC,EAAW,EAAG2E,GAA4D,EAAG,EAAG,OAAQ,EAAE,EAAE,EAAGC,GAA4D,EAAG,EAAG,OAAQ,EAAE,EAC3K3E,EAAa,GAEdL,EAAK,EAAG,CACV,IAAMiE,EAAY1D,EAAc,CAAC,EAC9B8B,EAAY,YAAa4B,EAAO,kBAAkB,CAAC,EACnDzD,EAAU,EACVC,EAAW,OAAQwD,EAAO,SAAWA,EAAO,YAAY,IAAI,EAC5DzD,EAAU,EACVC,EAAW,OAAQwD,EAAO,SAAWA,EAAO,YAAY,KAAK,CAClE,CACF,CACA,SAASiB,GAAsClF,EAAIC,EAAK,CAOtD,GANID,EAAK,IACJgC,EAAe,EACf7B,EAAe,EAAG,GAAG,EACrBC,EAAW,EAAG6E,GAAgD,EAAG,EAAG,IAAK,CAAC,EAC1E5E,EAAa,GAEdL,EAAK,EAAG,CACV,IAAMwD,EAAUvD,EAAI,UACdgE,EAAY1D,EAAc,EAC7B8B,EAAY,YAAa4B,EAAO,UAAUT,CAAO,CAAC,EAClDhD,EAAU,EACVC,EAAW,OAAQwD,EAAO,aAAa,CAC5C,CACF,CACA,SAASkB,GAAwDnF,EAAIC,EAAK,CAUxE,GATID,EAAK,IACJgC,EAAe,EACf7B,EAAe,EAAG,GAAG,EAAE,EAAG,OAAO,EACjCY,EAAO,CAAC,EACRV,EAAa,EACbF,EAAe,EAAG,OAAQ,EAAE,EAC5BY,EAAO,CAAC,EACRV,EAAa,EAAE,GAEhBL,EAAK,EAAG,CACV,IAAMoF,EAAiB7E,EAAc,CAAC,EAAE,UAClC0D,EAAY1D,EAAc,EAC7BC,EAAU,CAAC,EACXQ,GAAkBiD,EAAO,SAASA,EAAO,WAAWmB,EAAY,KAAK,CAAC,CAAC,EACvE5E,EAAU,EACV6B,EAAY,KAAM4B,EAAO,EAAE,EAAE,IAAK,EAAE,EAAE,IAAKA,EAAO,aAAa,EAAE,cAAeA,EAAO,UAAU,EACjGzD,EAAU,EACV8B,GAAmB,IAAK8C,EAAY,KAAM,GAAG,CAClD,CACF,CACA,SAASC,GAA+CrF,EAAIC,EAAK,CAQ/D,GAPID,EAAK,IACJgC,EAAe,EACf7B,EAAe,EAAG,GAAG,EACrBS,EAAU,EAAG,OAAQ,EAAE,EACvBR,EAAW,EAAG+E,GAAyD,EAAG,EAAG,IAAK,CAAC,EACnF9E,EAAa,GAEdL,EAAK,EAAG,CACV,IAAMoF,EAAiB7E,EAAc,EAAE,UACjC0D,EAAY1D,EAAc,EAC7B8B,EAAY,YAAa4B,EAAO,UAAUmB,EAAY,KAAK,CAAC,EAC5D5E,EAAU,EACV6B,EAAY,KAAM4B,EAAO,aAAa,EAAE,YAAaA,EAAO,kBAAkB,CAAC,EAC/EzD,EAAU,EACVC,EAAW,OAAQwD,EAAO,aAAa,CAC5C,CACF,CACA,SAASqB,GAAsCtF,EAAIC,EAAK,CAOtD,GANID,EAAK,IACJgC,EAAe,EACf7B,EAAe,EAAG,GAAG,EACrBC,EAAW,EAAGiF,GAAgD,EAAG,EAAG,IAAK,CAAC,EAC1EhF,EAAa,GAEdL,EAAK,EAAG,CACV,IAAMiE,EAAY1D,EAAc,EAC7BC,EAAU,EACVC,EAAW,OAAQwD,EAAO,YAAY,CAC3C,CACF,CACA,IAAMsB,GAAM,CAAC,oBAAqB,EAAE,EACpC,SAASC,GAAiCxF,EAAIC,EAAK,CACjD,GAAID,EAAK,EAAG,CACV,IAAM2D,EAASxC,EAAiB,EAC7Ba,EAAe,EACf7B,EAAe,EAAG,IAAK,CAAC,EACxBiB,EAAW,oBAAqB,SAAyEC,EAAQ,CAC/GC,EAAcqC,CAAG,EACpB,IAAMC,EAAYrD,EAAc,EAChC,OAAUgB,EAAYqC,EAAO,eAAevC,CAAM,CAAC,CACrD,CAAC,EACEhB,EAAa,CAClB,CACA,GAAIL,EAAK,EAAG,CACV,IAAM4D,EAAYrD,EAAc,EAC7BE,EAAW,YAAamD,EAAO,SAAS,EAAE,gBAAiBA,EAAO,aAAa,EAAE,iBAAkBA,EAAO,cAAc,EAAE,gBAAiBA,EAAO,aAAa,EAAE,aAAcA,EAAO,KAAK,EAAE,aAAcA,EAAO,UAAU,EAAE,QAASA,EAAO,MAAM,EAAE,SAAUA,EAAO,OAAO,EAAE,gBAAiBA,EAAO,aAAa,EAAE,gBAAiBA,EAAO,KAAK,KAAK,EAAE,iBAAkBA,EAAO,cAAc,EAAE,eAAgBA,EAAO,YAAY,EAAE,gBAAiBA,EAAO,aAAa,EAAE,SAAUA,EAAO,KAAK,MAAM,EAAE,YAAaA,EAAO,SAAS,CAChhB,CACF,CACA,SAAS6B,GAAiCzF,EAAIC,EAAK,CAKjD,GAJID,EAAK,IACJgC,EAAe,EACfpB,EAAU,EAAG,IAAK,CAAC,GAEpBZ,EAAK,EAAG,CACV,IAAM4D,EAAYrD,EAAc,EAC7BE,EAAW,QAASmD,EAAO,SAAS,EAAE,SAAUA,EAAO,WAAW,EAAE,SAAUA,EAAO,OAAO,EAAE,SAAUA,EAAO,KAAK,MAAM,EAAE,QAASA,EAAO,KAAK,KAAK,CAC3J,CACF,CACA,IAAM8B,GAAM,CAAC,oBAAqB,EAAE,EAC9BC,GAAO,CAAC,iCAAkC,EAAE,EAClD,SAASC,GAAgD5F,EAAIC,EAAK,CAKhE,GAJID,EAAK,IACJgC,EAAe,EACfpB,EAAU,EAAG,MAAM,GAEpBZ,EAAK,EAAG,CACV,IAAM6F,EAAU5F,EAAI,UACjB2E,GAAY,aAAciB,EAAQ,KAAK,EAAE,eAAgBA,EAAQ,OAAO,EACxExD,EAAY,SAAUwD,EAAQ,OAAS,GAAG,CAC/C,CACF,CACA,IAAMC,GAAO,CAAC,2BAA4B,EAAE,EACtCC,GAAOjG,IAAO,CAClB,KAAMA,CACR,GACA,SAASkG,GAAoDhG,EAAIC,EAAK,CAKpE,GAJID,EAAK,IACJgC,EAAe,EACfpB,EAAU,EAAG,OAAQ,CAAC,GAEvBZ,EAAK,EAAG,CACV,IAAM4D,EAAYrD,EAAc,CAAC,EAC9BE,EAAW,kBAAmB,QAAQ,EACtC4B,EAAY,IAAKuB,EAAO,OAAO,GAAKA,EAAO,OAAO,MAAM,EAAE,IAAKA,EAAO,OAAO,EAAE,EAAE,QAASA,EAAO,OAAO,OAAS,CAAC,EAAE,SAAUA,EAAO,OAAO,MAAM,EAAE,OAAQA,EAAO,YAAY,CACpL,CACF,CACA,SAASqC,GAAoDjG,EAAIC,EAAK,CAKpE,GAJID,EAAK,IACJgC,EAAe,EACfpB,EAAU,EAAG,OAAQ,CAAC,GAEvBZ,EAAK,EAAG,CACV,IAAM4D,EAAYrD,EAAc,CAAC,EAC9B8B,EAAY,IAAKuB,EAAO,OAAO,GAAKA,EAAO,OAAO,MAAM,EAAE,IAAKA,EAAO,OAAO,EAAE,EAAE,QAASA,EAAO,OAAO,OAAS,CAAC,EAAE,SAAUA,EAAO,OAAO,MAAM,EAAE,OAAQA,EAAO,YAAY,CACpL,CACF,CACA,SAASsC,GAAwClG,EAAIC,EAAK,CACxD,GAAID,EAAK,EAAG,CACV,IAAM2D,EAASxC,EAAiB,EAC7Ba,EAAe,EACf7B,EAAe,EAAG,GAAG,EAAE,EAAG,MAAM,EAChCS,EAAU,EAAG,IAAK,CAAC,EACnBP,EAAa,EACbD,EAAW,EAAG4F,GAAqD,EAAG,EAAG,OAAQ,CAAC,EAAE,EAAGC,GAAqD,EAAG,EAAG,OAAQ,CAAC,EAC3J9F,EAAe,EAAG,IAAK,CAAC,EACxBiB,EAAW,SAAU,UAAuE,CAC1FE,EAAcqC,CAAG,EACpB,IAAMC,EAAYrD,EAAc,EAChC,OAAUgB,EAAYqC,EAAO,QAAQA,EAAO,OAAO,IAAI,CAAC,CAC1D,CAAC,EAAE,WAAY,UAAyE,CACnFtC,EAAcqC,CAAG,EACpB,IAAMC,EAAYrD,EAAc,EAChC,OAAUgB,EAAYqC,EAAO,eAAe,CAAC,CAC/C,CAAC,EAAE,aAAc,UAA2E,CACvFtC,EAAcqC,CAAG,EACpB,IAAMC,EAAYrD,EAAc,EAChC,OAAUgB,EAAYqC,EAAO,iBAAiB,CAAC,CACjD,CAAC,EACEvD,EAAa,EAAE,CACpB,CACA,GAAIL,EAAK,EAAG,CACV,IAAM4D,EAAYrD,EAAc,EAC7BC,EAAU,CAAC,EACXC,EAAW,cAAemD,EAAO,eAAe,QAAQ,EAAE,OAAQA,EAAO,UAAU,EAAE,QAASA,EAAO,OAAO,aAAa,EACzHpD,EAAU,EACVC,EAAW,OAAQ,CAACmD,EAAO,OAASA,EAAO,YAAcA,EAAO,OAAS,UAAU,EACnFpD,EAAU,EACVC,EAAW,OAAQmD,EAAO,OAASA,EAAO,YAAcA,EAAO,OAAS,UAAU,EAClFpD,EAAU,EACV2F,GAAY,SAAUvC,EAAO,SAAYlD,GAAgB,GAAIqF,GAAMnC,EAAO,OAAO,UAAU,CAAC,CAAC,EAC7FnD,EAAW,KAAMmD,EAAO,OAAO,EAAE,EAAE,KAAMA,EAAO,OAAO,EAAE,EAAE,IAAKA,EAAO,OAAO,MAAM,EAAE,OAAQA,EAAO,OAAO,KAAK,EAAE,gBAAiBA,EAAO,OAAO,QAAU,EAAI,OAAS,KAAK,EAAE,OAAQA,EAAO,OAAO,KAAK,EAAE,aAAcA,EAAO,OAAO,UAAU,EAAE,kBAAmBA,EAAO,eAAe,EAAE,mBAAoBA,EAAO,eAAe,GAAG,EAAE,cAAeA,EAAO,WAAW,OAAO,EAAE,eAAgBA,EAAO,gBAAkB,OAAYA,EAAO,eAAeA,EAAO,MAAM,CAAC,EAAE,kBAAmBA,EAAO,eAAe,EAAE,iBAAkBA,EAAO,OAAO,IAAI,CACxiB,CACF,CAcA,IAAMwC,GAAO,CAAC,iCAAkC,EAAE,EAClD,SAASC,GAAgDC,EAAIC,EAAK,CAKhE,GAJID,EAAK,IACJE,EAAe,EACfC,EAAU,EAAG,MAAM,GAEpBH,EAAK,EAAG,CACV,IAAMI,EAAUH,EAAI,UACjBI,GAAY,aAAcD,EAAQ,KAAK,EAAE,eAAgBA,EAAQ,OAAO,EACxEE,EAAY,SAAUF,EAAQ,OAAS,GAAG,CAC/C,CACF,CACA,IAAMG,GAAO,CAAC,kBAAmB,EAAE,EACnC,SAASC,GAAmCR,EAAIC,EAAK,CAOnD,GANID,EAAK,IACJE,EAAe,EACfO,EAAe,EAAG,MAAM,EACxBN,EAAU,EAAG,IAAK,CAAC,EACnBO,EAAa,GAEdV,EAAK,EAAG,CACV,IAAMW,EAAYC,EAAc,EAC7BC,EAAU,EACVC,EAAW,cAAeH,EAAO,eAAe,QAAQ,EAAE,OAAQA,EAAO,UAAU,EAAE,QAASA,EAAO,aAAa,CACvH,CACF,CAEA,IAAMI,GAAO,CAAC,eAAe,EACvBC,GAAO,CAAC,0BAA2B,EAAE,EAC3C,SAASC,GAA8CC,EAAIC,EAAK,CAO9D,GANID,EAAK,IACJE,EAAe,EAAG,MAAO,CAAC,EAC1BC,EAAU,EAAG,OAAQ,CAAC,EACtBC,EAAO,CAAC,EACRC,EAAa,GAEdL,EAAK,EAAG,CACV,IAAMM,EAAiBL,EAAI,UACrBM,EAAYC,EAAc,CAAC,EAC9BC,EAAU,EACVC,GAAY,mBAAoBJ,EAAe,KAAK,EACpDG,EAAU,EACVE,GAAmB,IAAKJ,EAAO,eAAeD,CAAc,EAAG,GAAG,CACvE,CACF,CACA,SAASM,GAAwCZ,EAAIC,EAAK,CAMxD,GALID,EAAK,IACJE,EAAe,EAAG,MAAO,CAAC,EAC1BW,EAAW,EAAGd,GAA+C,EAAG,EAAG,MAAO,CAAC,EAC3EM,EAAa,GAEdL,EAAK,EAAG,CACV,IAAMc,EAAWb,EAAI,MAClBQ,EAAU,EACVM,EAAW,UAAWD,CAAQ,CACnC,CACF,CACA,IAAME,GAAO,CAAC,sBAAuB,EAAE,EA6GvC,IAAMC,GAAO,CAAC,iBAAiB,EACzBC,GAAO,CAAC,uBAAuB,EAC/BC,GAAO,CAACC,EAAIC,IAAO,CAACD,EAAIC,CAAE,EAqRhC,IAAMC,GAAO;EA2Ib,IAAMC,GAAO,CAAC,iBAAkB,EAAE,EAClC,SAASC,GAAkCC,EAAIC,EAAK,CAOlD,GANID,EAAK,IACJE,EAAe,EACfC,EAAe,EAAG,MAAM,EACxBC,EAAU,EAAG,IAAK,CAAC,EACnBC,EAAa,GAEdL,EAAK,EAAG,CACV,IAAMM,EAAYC,EAAc,EAC7BC,EAAU,EACVC,EAAW,cAAeH,EAAO,WAAW,EAAE,OAAQA,EAAO,UAAU,EAAE,QAASA,EAAO,aAAa,CAC3G,CACF,CACA,IAAMI,GAAO,CAAC,uBAAwB,EAAE,EAClCC,GAAO,CAAC,+BAAgC,EAAE,EAChD,SAASC,GAAmCZ,EAAIC,EAAK,CACnD,GAAID,EAAK,EAAG,CACV,IAAMa,EAASC,EAAiB,EAC7BZ,EAAe,EACfC,EAAe,EAAG,IAAK,CAAC,EACxBY,EAAW,SAAU,SAAgEC,EAAQ,CAC3FC,EAAcJ,CAAG,EACpB,IAAMK,EAAYX,EAAc,EAChC,OAAUY,EAAYD,EAAO,MAAMF,CAAM,CAAC,CAC5C,CAAC,EAAE,WAAY,SAAkEA,EAAQ,CACpFC,EAAcJ,CAAG,EACpB,IAAMK,EAAYX,EAAc,EAChC,OAAUY,EAAYD,EAAO,SAAS,KAAKF,CAAM,CAAC,CACpD,CAAC,EAAE,aAAc,SAAoEA,EAAQ,CACxFC,EAAcJ,CAAG,EACpB,IAAMK,EAAYX,EAAc,EAChC,OAAUY,EAAYD,EAAO,WAAW,KAAKF,CAAM,CAAC,CACtD,CAAC,EACEX,EAAa,CAClB,CACA,GAAIL,EAAK,EAAG,CACV,IAAMoB,EAASnB,EAAI,UACbiB,EAAYX,EAAc,EAC7BE,EAAW,kBAAmB,QAAQ,EAAE,QAASW,EAAO,KAAK,EAAE,SAAUA,EAAO,MAAM,EAAE,IAAKA,EAAO,CAAC,EAAE,IAAKA,EAAO,CAAC,EAAE,OAAQA,EAAO,KAAK,EAAE,QAASA,EAAO,aAAa,EAAE,OAAQA,EAAO,IAAI,EAAE,cAAeF,EAAO,eAAe,UAAU,EAAE,aAAcE,EAAO,UAAU,EAAE,WAAYF,EAAO,QAAQ,EAAE,WAAYA,EAAO,SAASE,EAAO,IAAI,CAAC,EAAE,YAAaA,EAAO,SAAS,EAAE,aAAcF,EAAO,UAAU,EAAE,kBAAmBA,EAAO,eAAe,EAAE,mBAAoBA,EAAO,gBAAgB,EAAE,cAAeA,EAAO,WAAW,EAAE,eAAgBA,EAAO,gBAAkB,OAAYE,EAAO,WAAW,EAAE,kBAAmBF,EAAO,eAAe,EAAE,iBAAkBE,EAAO,IAAI,EAAE,gBAAiBF,EAAO,aAAa,CACjtB,CACF,CACA,SAASG,GAA4CrB,EAAIC,EAAK,CAC5D,GAAID,EAAK,EAAG,CACV,IAAMsB,EAASR,EAAiB,EAC7BZ,EAAe,EACfC,EAAe,EAAG,IAAK,CAAC,EACxBY,EAAW,oBAAqB,SAAoFC,EAAQ,CAC7H,IAAMO,EAAUN,EAAcK,CAAG,EAAE,MAC7BJ,EAAYX,EAAc,CAAC,EACjC,OAAUY,EAAYD,EAAO,sBAAsB,KAAK,CACtD,KAAMF,EACN,MAAOO,CACT,CAAC,CAAC,CACJ,CAAC,EACElB,EAAa,CAClB,CACA,GAAIL,EAAK,EAAG,CACV,IAAMwB,EAAOvB,EAAI,UACXiB,EAAYX,EAAc,CAAC,EAC9BE,EAAW,OAAQe,EAAK,CAAC,EAAE,OAAQA,EAAK,CAAC,EAAE,WAAYA,EAAK,KAAK,EAAE,YAAaA,EAAK,MAAM,EAAE,QAASA,EAAK,KAAK,EAAE,kBAAmBN,EAAO,mBAAmB,EAAE,cAAeA,EAAO,eAAe,UAAU,CACrN,CACF,CACA,SAASO,GAAmCzB,EAAIC,EAAK,CAOnD,GANID,EAAK,IACJE,EAAe,EACfC,EAAe,EAAG,GAAG,EACrBuB,EAAW,EAAGL,GAA6C,EAAG,EAAG,IAAK,CAAC,EACvEhB,EAAa,GAEdL,EAAK,EAAG,CACV,IAAMkB,EAAYX,EAAc,EAC7BC,EAAU,EACVC,EAAW,UAAWS,EAAO,iBAAiB,EAAE,eAAgBA,EAAO,gBAAgB,CAC5F,CACF,CACA,SAASS,GAAyC3B,EAAIC,EAAK,CACzD,GAAID,EAAK,EAAG,CACV,IAAMa,EAASC,EAAiB,EAC7BZ,EAAe,EACfC,EAAe,EAAG,IAAK,CAAC,EACxBY,EAAW,oBAAqB,SAAiFC,EAAQ,CACvHC,EAAcJ,CAAG,EACpB,IAAMK,EAAYX,EAAc,EAChC,OAAUY,EAAYD,EAAO,kBAAkBF,CAAM,CAAC,CACxD,CAAC,EACEX,EAAa,CAClB,CACA,GAAIL,EAAK,EAAG,CACV,IAAMkB,EAAYX,EAAc,EAC7BE,EAAW,SAAUS,EAAO,MAAM,EAAE,OAAQA,EAAO,IAAI,EAAE,gBAAiBA,EAAO,aAAa,EAAE,YAAaA,EAAO,cAAc,EAAE,YAAaA,EAAO,UAAU,EAAE,YAAaA,EAAO,cAAc,EAAE,cAAeA,EAAO,gBAAgB,EAAE,gBAAiBA,EAAO,kBAAkB,EAAE,iBAAkBA,EAAO,mBAAmB,EAAE,QAASA,EAAO,UAAU,EAAE,YAAaA,EAAO,SAAS,CACxY,CACF,CACA,SAASU,GAAyC5B,EAAIC,EAAK,CACzD,GAAID,EAAK,EAAG,CACV,IAAM6B,EAASf,EAAiB,EAC7BZ,EAAe,EACfC,EAAe,EAAG,IAAK,CAAC,EACxBY,EAAW,oBAAqB,SAAiFC,EAAQ,CACvHC,EAAcY,CAAG,EACpB,IAAMX,EAAYX,EAAc,EAChC,OAAUY,EAAYD,EAAO,iBAAiBF,CAAM,CAAC,CACvD,CAAC,EACEX,EAAa,CAClB,CACA,GAAIL,EAAK,EAAG,CACV,IAAMkB,EAAYX,EAAc,EAC7BE,EAAW,SAAUS,EAAO,MAAM,EAAE,OAAQA,EAAO,IAAI,EAAE,YAAaA,EAAO,cAAc,EAAE,YAAaA,EAAO,UAAU,EAAE,YAAaA,EAAO,cAAc,EAAE,gBAAiBA,EAAO,kBAAkB,EAAE,iBAAkBA,EAAO,mBAAmB,EAAE,QAASA,EAAO,UAAU,EAAE,cAAeA,EAAO,kBAAkB,QAAQ,EAAE,YAAaA,EAAO,SAAS,CAC3W,CACF,CA8HA,SAASY,GAAmDC,EAAIC,EAAK,CACnE,GAAID,EAAK,EAAG,CACV,IAAME,EAASC,EAAiB,EAC7BC,EAAe,EACfC,EAAe,EAAG,IAAK,CAAC,EACxBC,EAAW,oBAAqB,SAA2FC,EAAQ,CACjIC,EAAcN,CAAG,EACpB,IAAMO,EAAYC,EAAc,EAChC,OAAUC,EAAYF,EAAO,kBAAkBF,CAAM,CAAC,CACxD,CAAC,EACEK,EAAa,CAClB,CACA,GAAIZ,EAAK,EAAG,CACV,IAAMS,EAAYC,EAAc,EAC7BG,EAAW,SAAUJ,EAAO,MAAM,EAAE,OAAQA,EAAO,IAAI,EAAE,gBAAiBA,EAAO,aAAa,EAAE,YAAaA,EAAO,cAAc,EAAE,YAAaA,EAAO,UAAU,EAAE,YAAaA,EAAO,cAAc,EAAE,cAAeA,EAAO,gBAAgB,EAAE,gBAAiBA,EAAO,kBAAkB,EAAE,iBAAkBA,EAAO,mBAAmB,EAAE,QAASA,EAAO,UAAU,EAAE,YAAaA,EAAO,SAAS,CACxY,CACF,CACA,SAASK,GAAmDd,EAAIC,EAAK,CACnE,GAAID,EAAK,EAAG,CACV,IAAMe,EAASZ,EAAiB,EAC7BC,EAAe,EACfC,EAAe,EAAG,IAAK,CAAC,EACxBC,EAAW,oBAAqB,SAA2FC,EAAQ,CACjIC,EAAcO,CAAG,EACpB,IAAMN,EAAYC,EAAc,EAChC,OAAUC,EAAYF,EAAO,iBAAiBF,CAAM,CAAC,CACvD,CAAC,EACEK,EAAa,CAClB,CACA,GAAIZ,EAAK,EAAG,CACV,IAAMS,EAAYC,EAAc,EAC7BG,EAAW,SAAUJ,EAAO,MAAM,EAAE,OAAQA,EAAO,IAAI,EAAE,YAAaA,EAAO,cAAc,EAAE,YAAaA,EAAO,UAAU,EAAE,YAAaA,EAAO,cAAc,EAAE,gBAAiBA,EAAO,kBAAkB,EAAE,iBAAkBA,EAAO,mBAAmB,EAAE,QAASA,EAAO,UAAU,EAAE,YAAaA,EAAO,SAAS,CACzT,CACF,CACA,SAASO,GAA4DhB,EAAIC,EAAK,CAC5E,GAAID,EAAK,EAAG,CACV,IAAMiB,EAASd,EAAiB,EAC7BC,EAAe,EACfC,EAAe,EAAG,GAAG,EAAE,EAAG,IAAK,CAAC,EAChCC,EAAW,SAAU,SAAyFC,EAAQ,CACvH,IAAMW,EAAcV,EAAcS,CAAG,EAAE,UACjCR,EAAYC,EAAc,CAAC,EACjC,OAAUC,EAAYF,EAAO,QAAQF,EAAQW,CAAQ,CAAC,CACxD,CAAC,EAAE,WAAY,SAA2FX,EAAQ,CAChH,IAAMW,EAAcV,EAAcS,CAAG,EAAE,UACjCR,EAAYC,EAAc,CAAC,EACjC,OAAUC,EAAYF,EAAO,WAAWF,EAAQW,CAAQ,CAAC,CAC3D,CAAC,EAAE,aAAc,SAA6FX,EAAQ,CACpH,IAAMW,EAAcV,EAAcS,CAAG,EAAE,UACjCR,EAAYC,EAAc,CAAC,EACjC,OAAUC,EAAYF,EAAO,aAAaF,EAAQW,CAAQ,CAAC,CAC7D,CAAC,EACEN,EAAa,EAAE,CACpB,CACA,GAAIZ,EAAK,EAAG,CACV,IAAMkB,EAAWjB,EAAI,UACfQ,EAAYC,EAAc,CAAC,EAC9BG,EAAW,kBAAmB,QAAQ,EACtCM,EAAY,YAAaV,EAAO,eAAeS,CAAQ,CAAC,EACxDE,EAAU,EACVP,EAAW,OAAQJ,EAAO,aAAa,UAAU,EAAE,SAAUA,EAAO,MAAM,EAAE,SAAUA,EAAO,MAAM,EAAE,gBAAiBA,EAAO,aAAa,EAAE,SAAUA,EAAO,MAAM,EAAE,SAAUS,EAAS,MAAM,EAAE,OAAQT,EAAO,IAAI,EAAE,WAAYA,EAAO,QAAQ,EAAE,kBAAmBA,EAAO,eAAe,EAAE,kBAAmBA,EAAO,eAAe,EAAE,aAAcS,EAAS,IAAI,EAAE,aAAcT,EAAO,UAAU,EAAE,gBAAiBA,EAAO,aAAa,CAChb,CACF,CACA,SAASY,GAAmDrB,EAAIC,EAAK,CAOnE,GANID,EAAK,IACJI,EAAe,EACfC,EAAe,EAAG,GAAG,EACrBiB,EAAW,EAAGN,GAA6D,EAAG,GAAI,IAAK,CAAC,EACxFJ,EAAa,GAEdZ,EAAK,EAAG,CACV,IAAMS,EAAYC,EAAc,EAC7BU,EAAU,EACVP,EAAW,UAAWJ,EAAO,OAAO,EAAE,eAAgBA,EAAO,OAAO,CACzE,CACF,CACA,SAASc,GAA4DvB,EAAIC,EAAK,CAC5E,GAAID,EAAK,EAAG,CACV,IAAMwB,EAASrB,EAAiB,EAC7BC,EAAe,EACfC,EAAe,EAAG,GAAG,EAAE,EAAG,IAAK,CAAC,EAChCC,EAAW,SAAU,SAAyFC,EAAQ,CACvH,IAAMkB,EAAcjB,EAAcgB,CAAG,EAAE,UACjCf,EAAYC,EAAc,CAAC,EACjC,OAAUC,EAAYF,EAAO,QAAQF,EAAQkB,CAAQ,CAAC,CACxD,CAAC,EAAE,WAAY,SAA2FlB,EAAQ,CAChH,IAAMkB,EAAcjB,EAAcgB,CAAG,EAAE,UACjCf,EAAYC,EAAc,CAAC,EACjC,OAAUC,EAAYF,EAAO,WAAWF,EAAQkB,CAAQ,CAAC,CAC3D,CAAC,EAAE,aAAc,SAA6FlB,EAAQ,CACpH,IAAMkB,EAAcjB,EAAcgB,CAAG,EAAE,UACjCf,EAAYC,EAAc,CAAC,EACjC,OAAUC,EAAYF,EAAO,aAAaF,EAAQkB,CAAQ,CAAC,CAC7D,CAAC,EACEb,EAAa,EAAE,CACpB,CACA,GAAIZ,EAAK,EAAG,CACV,IAAMyB,EAAWxB,EAAI,UACfQ,EAAYC,EAAc,CAAC,EAC9BS,EAAY,YAAaV,EAAO,eAAegB,CAAQ,CAAC,EACxDL,EAAU,EACVP,EAAW,OAAQJ,EAAO,aAAa,UAAU,EAAE,SAAUA,EAAO,MAAM,EAAE,SAAUA,EAAO,MAAM,EAAE,gBAAiBA,EAAO,aAAa,EAAE,SAAUA,EAAO,MAAM,EAAE,SAAUgB,EAAS,MAAM,EAAE,OAAQhB,EAAO,IAAI,EAAE,WAAYA,EAAO,QAAQ,EAAE,kBAAmBA,EAAO,eAAe,EAAE,kBAAmBA,EAAO,eAAe,EAAE,aAAcgB,EAAS,IAAI,EAAE,aAAchB,EAAO,UAAU,EAAE,gBAAiBA,EAAO,aAAa,CAChb,CACF,CACA,SAASiB,GAAmD1B,EAAIC,EAAK,CAOnE,GANID,EAAK,IACJI,EAAe,EACfC,EAAe,EAAG,GAAG,EACrBiB,EAAW,EAAGC,GAA6D,EAAG,GAAI,IAAK,CAAC,EACxFX,EAAa,GAEdZ,EAAK,EAAG,CACV,IAAMS,EAAYC,EAAc,EAC7BU,EAAU,EACVP,EAAW,UAAWJ,EAAO,OAAO,EAAE,eAAgBA,EAAO,OAAO,CACzE,CACF,CACA,SAASkB,GAAgD3B,EAAIC,EAAK,CAChE,GAAID,EAAK,EAAG,CACV,IAAME,EAASC,EAAiB,EAC7BC,EAAe,EACfC,EAAe,EAAG,IAAK,CAAC,EACxBC,EAAW,oBAAqB,SAAwFC,EAAQ,CAC9HC,EAAcN,CAAG,EACpB,IAAMO,EAAYC,EAAc,EAChC,OAAUC,EAAYF,EAAO,kBAAkBF,CAAM,CAAC,CACxD,CAAC,EACEK,EAAa,CAClB,CACA,GAAIZ,EAAK,EAAG,CACV,IAAMS,EAAYC,EAAc,EAC7BG,EAAW,SAAUJ,EAAO,MAAM,EAAE,OAAQA,EAAO,IAAI,EAAE,gBAAiBA,EAAO,aAAa,EAAE,YAAaA,EAAO,cAAc,EAAE,YAAaA,EAAO,UAAU,EAAE,YAAaA,EAAO,cAAc,EAAE,cAAeA,EAAO,gBAAgB,EAAE,gBAAiBA,EAAO,kBAAkB,EAAE,iBAAkBA,EAAO,mBAAmB,EAAE,QAASA,EAAO,UAAU,EAAE,YAAaA,EAAO,SAAS,CACxY,CACF,CACA,SAASmB,GAAgD5B,EAAIC,EAAK,CAChE,GAAID,EAAK,EAAG,CACV,IAAMe,EAASZ,EAAiB,EAC7BC,EAAe,EACfC,EAAe,EAAG,IAAK,CAAC,EACxBC,EAAW,oBAAqB,SAAwFC,EAAQ,CAC9HC,EAAcO,CAAG,EACpB,IAAMN,EAAYC,EAAc,EAChC,OAAUC,EAAYF,EAAO,iBAAiBF,CAAM,CAAC,CACvD,CAAC,EACEK,EAAa,CAClB,CACA,GAAIZ,EAAK,EAAG,CACV,IAAMS,EAAYC,EAAc,EAC7BG,EAAW,SAAUJ,EAAO,MAAM,EAAE,OAAQA,EAAO,IAAI,EAAE,YAAaA,EAAO,cAAc,EAAE,YAAaA,EAAO,UAAU,EAAE,YAAaA,EAAO,cAAc,EAAE,gBAAiBA,EAAO,kBAAkB,EAAE,iBAAkBA,EAAO,mBAAmB,EAAE,QAASA,EAAO,UAAU,EAAE,cAAeA,EAAO,kBAAkB,QAAQ,EAAE,YAAaA,EAAO,SAAS,CAC3W,CACF,CACA,SAASoB,GAAyD7B,EAAIC,EAAK,CACzE,GAAID,EAAK,EAAG,CACV,IAAMiB,EAASd,EAAiB,EAC7BC,EAAe,EACfC,EAAe,EAAG,GAAG,EAAE,EAAG,IAAK,CAAC,EAChCC,EAAW,SAAU,SAAsFC,EAAQ,CACpH,IAAMW,EAAcV,EAAcS,CAAG,EAAE,UACjCR,EAAYC,EAAc,CAAC,EACjC,OAAUC,EAAYF,EAAO,QAAQF,EAAQW,CAAQ,CAAC,CACxD,CAAC,EAAE,WAAY,SAAwFX,EAAQ,CAC7G,IAAMW,EAAcV,EAAcS,CAAG,EAAE,UACjCR,EAAYC,EAAc,CAAC,EACjC,OAAUC,EAAYF,EAAO,WAAWF,EAAQW,CAAQ,CAAC,CAC3D,CAAC,EAAE,aAAc,SAA0FX,EAAQ,CACjH,IAAMW,EAAcV,EAAcS,CAAG,EAAE,UACjCR,EAAYC,EAAc,CAAC,EACjC,OAAUC,EAAYF,EAAO,aAAaF,EAAQW,CAAQ,CAAC,CAC7D,CAAC,EAAE,wBAAyB,SAAqGX,EAAQ,CACvI,IAAMuB,EAActB,EAAcS,CAAG,EAAE,MACjCR,EAAYC,EAAc,CAAC,EACjC,OAAUC,EAAYF,EAAO,2BAA2BF,EAAQuB,CAAQ,CAAC,CAC3E,CAAC,EACElB,EAAa,EAAE,CACpB,CACA,GAAIZ,EAAK,EAAG,CACV,IAAMkB,EAAWjB,EAAI,UACfQ,EAAYC,EAAc,CAAC,EAC9BG,EAAW,kBAAmB,QAAQ,EACtCM,EAAY,YAAaV,EAAO,eAAeS,CAAQ,CAAC,EACxDE,EAAU,EACVP,EAAW,OAAQJ,EAAO,aAAa,OAAO,EAAE,SAAUA,EAAO,MAAM,EAAE,SAAUA,EAAO,MAAM,EAAE,SAAUA,EAAO,MAAM,EAAE,SAAUS,EAAS,MAAM,EAAE,gBAAiBT,EAAO,aAAa,EAAE,OAAQA,EAAO,IAAI,EAAE,WAAYA,EAAO,QAAQ,EAAE,kBAAmBA,EAAO,eAAe,EAAE,kBAAmBA,EAAO,eAAe,EAAE,aAAcS,EAAS,IAAI,EAAE,aAAcT,EAAO,UAAU,EAAE,gBAAiBA,EAAO,aAAa,EAAE,sBAAuBA,EAAO,mBAAmB,EAAE,gBAAiBA,EAAO,aAAa,CACvgB,CACF,CACA,SAASsB,GAAgD/B,EAAIC,EAAK,CAOhE,GANID,EAAK,IACJI,EAAe,EACfC,EAAe,EAAG,GAAG,EACrBiB,EAAW,EAAGO,GAA0D,EAAG,GAAI,IAAK,CAAC,EACrFjB,EAAa,GAEdZ,EAAK,EAAG,CACV,IAAMS,EAAYC,EAAc,EAC7BU,EAAU,EACVP,EAAW,UAAWJ,EAAO,OAAO,EAAE,eAAgBA,EAAO,OAAO,CACzE,CACF,CACA,SAASuB,GAAyDhC,EAAIC,EAAK,CACzE,GAAID,EAAK,EAAG,CACV,IAAMiC,EAAS9B,EAAiB,EAC7BC,EAAe,EACfC,EAAe,EAAG,GAAG,EAAE,EAAG,IAAK,CAAC,EAChCC,EAAW,SAAU,SAAsFC,EAAQ,CACpH,IAAM2B,EAAc1B,EAAcyB,CAAG,EAAE,UACjCxB,EAAYC,EAAc,CAAC,EACjC,OAAUC,EAAYF,EAAO,QAAQF,EAAQ2B,CAAQ,CAAC,CACxD,CAAC,EAAE,WAAY,SAAwF3B,EAAQ,CAC7G,IAAM2B,EAAc1B,EAAcyB,CAAG,EAAE,UACjCxB,EAAYC,EAAc,CAAC,EACjC,OAAUC,EAAYF,EAAO,WAAWF,EAAQ2B,CAAQ,CAAC,CAC3D,CAAC,EAAE,aAAc,SAA0F3B,EAAQ,CACjH,IAAM2B,EAAc1B,EAAcyB,CAAG,EAAE,UACjCxB,EAAYC,EAAc,CAAC,EACjC,OAAUC,EAAYF,EAAO,aAAaF,EAAQ2B,CAAQ,CAAC,CAC7D,CAAC,EAAE,wBAAyB,SAAqG3B,EAAQ,CACvI,IAAM4B,EAAc3B,EAAcyB,CAAG,EAAE,MACjCxB,EAAYC,EAAc,CAAC,EACjC,OAAUC,EAAYF,EAAO,2BAA2BF,EAAQ4B,CAAQ,CAAC,CAC3E,CAAC,EACEvB,EAAa,EAAE,CACpB,CACA,GAAIZ,EAAK,EAAG,CACV,IAAMkC,EAAWjC,EAAI,UACfQ,EAAYC,EAAc,CAAC,EAC9BS,EAAY,YAAaV,EAAO,eAAeyB,CAAQ,CAAC,EACxDd,EAAU,EACVP,EAAW,OAAQJ,EAAO,aAAa,OAAO,EAAE,SAAUA,EAAO,MAAM,EAAE,SAAUA,EAAO,MAAM,EAAE,SAAUA,EAAO,MAAM,EAAE,SAAUyB,EAAS,MAAM,EAAE,gBAAiBzB,EAAO,aAAa,EAAE,OAAQA,EAAO,IAAI,EAAE,WAAYA,EAAO,QAAQ,EAAE,kBAAmBA,EAAO,eAAe,EAAE,kBAAmBA,EAAO,eAAe,EAAE,aAAcyB,EAAS,IAAI,EAAE,aAAczB,EAAO,UAAU,EAAE,gBAAiBA,EAAO,aAAa,EAAE,sBAAuBA,EAAO,mBAAmB,EAAE,gBAAiBA,EAAO,aAAa,CACvgB,CACF,CACA,SAAS2B,GAAgDpC,EAAIC,EAAK,CAOhE,GANID,EAAK,IACJI,EAAe,EACfC,EAAe,EAAG,GAAG,EACrBiB,EAAW,EAAGU,GAA0D,EAAG,GAAI,IAAK,CAAC,EACrFpB,EAAa,GAEdZ,EAAK,EAAG,CACV,IAAMS,EAAYC,EAAc,EAC7BU,EAAU,EACVP,EAAW,UAAWJ,EAAO,OAAO,EAAE,eAAgBA,EAAO,OAAO,CACzE,CACF,CACA,IAAM4B,GAAO,CAAC,6BAA8B,EAAE,EAC9C,SAASC,GAAmDtC,EAAIC,EAAK,CACnE,GAAID,EAAK,EAAG,CACV,IAAME,EAASC,EAAiB,EAC7BC,EAAe,EACfC,EAAe,EAAG,IAAK,CAAC,EACxBC,EAAW,SAAU,SAAgFC,EAAQ,CAC3GC,EAAcN,CAAG,EACpB,IAAMO,EAAYC,EAAc,CAAC,EACjC,OAAUC,EAAYF,EAAO,QAAQF,CAAM,CAAC,CAC9C,CAAC,EAAE,WAAY,SAAkFA,EAAQ,CACpGC,EAAcN,CAAG,EACpB,IAAMO,EAAYC,EAAc,CAAC,EACjC,OAAUC,EAAYF,EAAO,SAAS,KAAKF,CAAM,CAAC,CACpD,CAAC,EAAE,aAAc,SAAoFA,EAAQ,CACxGC,EAAcN,CAAG,EACpB,IAAMO,EAAYC,EAAc,CAAC,EACjC,OAAUC,EAAYF,EAAO,WAAW,KAAKF,CAAM,CAAC,CACtD,CAAC,EACEK,EAAa,CAClB,CACA,GAAIZ,EAAK,EAAG,CACV,IAAMuC,EAAStC,EAAI,UACbQ,EAAYC,EAAc,CAAC,EAC9BG,EAAW,kBAAmB,QAAQ,EAAE,aAAc,CAACJ,EAAO,UAAU,EAAE,QAAS8B,EAAO,KAAK,EAAE,SAAUA,EAAO,MAAM,EAAE,IAAKA,EAAO,CAAC,EAAE,IAAKA,EAAO,CAAC,EAAE,OAAQA,EAAO,KAAK,EAAE,QAASA,EAAO,aAAa,EAAE,OAAQA,EAAO,IAAI,EAAE,cAAe9B,EAAO,eAAe,QAAQ,EAAE,aAAc8B,EAAO,UAAU,EAAE,WAAY9B,EAAO,QAAQ,EAAE,YAAa8B,EAAO,SAAS,EAAE,WAAY9B,EAAO,SAAS8B,EAAO,IAAI,CAAC,EAAE,kBAAmB9B,EAAO,eAAe,EAAE,mBAAoBA,EAAO,gBAAgB,EAAE,cAAeA,EAAO,WAAW,EAAE,eAAgBA,EAAO,gBAAkB,OAAY8B,EAAO,WAAW,EAAE,kBAAmB9B,EAAO,eAAe,EAAE,iBAAkB8B,EAAO,IAAI,EAAE,gBAAiB9B,EAAO,aAAa,EAAE,aAAcA,EAAO,UAAU,CACjvB,CACF,CACA,SAAS+B,GAA0CxC,EAAIC,EAAK,CAO1D,GANID,EAAK,IACJI,EAAe,EACfC,EAAe,EAAG,GAAG,EACrBiB,EAAW,EAAGgB,GAAoD,EAAG,GAAI,IAAK,CAAC,EAC/E1B,EAAa,GAEdZ,EAAK,EAAG,CACV,IAAMS,EAAYC,EAAc,EAC7BU,EAAU,EACVP,EAAW,UAAWJ,EAAO,IAAI,EAAE,eAAgBA,EAAO,OAAO,CACtE,CACF,CACA,SAASgC,GAAmDzC,EAAIC,EAAK,CACnE,GAAID,EAAK,EAAG,CACV,IAAMiB,EAASd,EAAiB,EAC7BC,EAAe,EACfC,EAAe,EAAG,IAAK,CAAC,EACxBC,EAAW,SAAU,SAAgFC,EAAQ,CAC3GC,EAAcS,CAAG,EACpB,IAAMR,EAAYC,EAAc,CAAC,EACjC,OAAUC,EAAYF,EAAO,QAAQF,CAAM,CAAC,CAC9C,CAAC,EAAE,WAAY,SAAkFA,EAAQ,CACpGC,EAAcS,CAAG,EACpB,IAAMR,EAAYC,EAAc,CAAC,EACjC,OAAUC,EAAYF,EAAO,SAAS,KAAKF,CAAM,CAAC,CACpD,CAAC,EAAE,aAAc,SAAoFA,EAAQ,CACxGC,EAAcS,CAAG,EACpB,IAAMR,EAAYC,EAAc,CAAC,EACjC,OAAUC,EAAYF,EAAO,WAAW,KAAKF,CAAM,CAAC,CACtD,CAAC,EACEK,EAAa,CAClB,CACA,GAAIZ,EAAK,EAAG,CACV,IAAM0C,EAASzC,EAAI,UACbQ,EAAYC,EAAc,CAAC,EAC9BG,EAAW,QAAS6B,EAAO,KAAK,EAAE,SAAUA,EAAO,MAAM,EAAE,IAAKA,EAAO,CAAC,EAAE,IAAKA,EAAO,CAAC,EAAE,OAAQA,EAAO,KAAK,EAAE,QAASA,EAAO,aAAa,EAAE,OAAQA,EAAO,IAAI,EAAE,cAAejC,EAAO,eAAe,QAAQ,EAAE,aAAciC,EAAO,UAAU,EAAE,WAAYjC,EAAO,QAAQ,EAAE,YAAaiC,EAAO,SAAS,EAAE,WAAYjC,EAAO,SAASiC,EAAO,IAAI,CAAC,EAAE,kBAAmBjC,EAAO,eAAe,EAAE,mBAAoBA,EAAO,gBAAgB,EAAE,cAAeA,EAAO,WAAW,EAAE,eAAgBA,EAAO,gBAAkB,OAAYiC,EAAO,WAAW,EAAE,kBAAmBjC,EAAO,eAAe,EAAE,iBAAkBiC,EAAO,IAAI,EAAE,gBAAiBjC,EAAO,aAAa,EAAE,aAAcA,EAAO,UAAU,CAClrB,CACF,CACA,SAASkC,GAA0C3C,EAAIC,EAAK,CAO1D,GANID,EAAK,IACJI,EAAe,EACfC,EAAe,EAAG,GAAG,EACrBiB,EAAW,EAAGmB,GAAoD,EAAG,GAAI,IAAK,CAAC,EAC/E7B,EAAa,GAEdZ,EAAK,EAAG,CACV,IAAMS,EAAYC,EAAc,EAC7BU,EAAU,EACVP,EAAW,UAAWJ,EAAO,IAAI,EAAE,eAAgBA,EAAO,OAAO,CACtE,CACF,CACA,SAASmC,GAAmD5C,EAAIC,EAAK,CACnE,GAAID,EAAK,EAAG,CACV,IAAMwB,EAASrB,EAAiB,EAC7BC,EAAe,EACfC,EAAe,EAAG,IAAK,CAAC,EACxBC,EAAW,oBAAqB,SAA2FC,EAAQ,CACpI,IAAMsC,EAAUrC,EAAcgB,CAAG,EAAE,MAC7Bf,EAAYC,EAAc,CAAC,EACjC,OAAUC,EAAYF,EAAO,uBAAuB,KAAK,CACvD,KAAMF,EACN,MAAOsC,CACT,CAAC,CAAC,CACJ,CAAC,EACEjC,EAAa,CAClB,CACA,GAAIZ,EAAK,EAAG,CACV,IAAM8C,EAAO7C,EAAI,UACXQ,EAAYC,EAAc,CAAC,EAC9BG,EAAW,OAAQiC,EAAK,CAAC,EAAE,OAAQA,EAAK,CAAC,EAAE,WAAYA,EAAK,KAAK,EAAE,YAAaA,EAAK,MAAM,EAAE,QAASA,EAAK,KAAK,EAAE,kBAAmBrC,EAAO,mBAAmB,EAAE,cAAeA,EAAO,eAAe,QAAQ,CACnN,CACF,CACA,SAASsC,GAA0C/C,EAAIC,EAAK,CAO1D,GANID,EAAK,IACJI,EAAe,EACfC,EAAe,EAAG,GAAG,EACrBiB,EAAW,EAAGsB,GAAoD,EAAG,EAAG,IAAK,CAAC,EAC9EhC,EAAa,GAEdZ,EAAK,EAAG,CACV,IAAMS,EAAYC,EAAc,EAC7BU,EAAU,EACVP,EAAW,UAAWJ,EAAO,iBAAiB,EAAE,eAAgBA,EAAO,gBAAgB,CAC5F,CACF,CACA,SAASuC,GAAuChD,EAAIC,EAAK,CACvD,GAAID,EAAK,EAAG,CACV,IAAME,EAASC,EAAiB,EAC7BC,EAAe,EACfC,EAAe,EAAG,IAAK,CAAC,EACxBC,EAAW,oBAAqB,SAA+EC,EAAQ,CACrHC,EAAcN,CAAG,EACpB,IAAMO,EAAYC,EAAc,EAChC,OAAUC,EAAYF,EAAO,kBAAkBF,CAAM,CAAC,CACxD,CAAC,EACEK,EAAa,CAClB,CACA,GAAIZ,EAAK,EAAG,CACV,IAAMS,EAAYC,EAAc,EAC7BG,EAAW,SAAUJ,EAAO,MAAM,EAAE,OAAQA,EAAO,IAAI,EAAE,gBAAiBA,EAAO,aAAa,EAAE,YAAaA,EAAO,cAAc,EAAE,YAAaA,EAAO,UAAU,EAAE,YAAaA,EAAO,cAAc,EAAE,cAAeA,EAAO,gBAAgB,EAAE,gBAAiBA,EAAO,kBAAkB,EAAE,iBAAkBA,EAAO,mBAAmB,EAAE,QAASA,EAAO,UAAU,EAAE,cAAeA,EAAO,mBAAmB,QAAQ,EAAE,YAAaA,EAAO,SAAS,CAC3b,CACF,CACA,SAASwC,GAAuCjD,EAAIC,EAAK,CACvD,GAAID,EAAK,EAAG,CACV,IAAMe,EAASZ,EAAiB,EAC7BC,EAAe,EACfC,EAAe,EAAG,IAAK,CAAC,EACxBC,EAAW,oBAAqB,SAA+EC,EAAQ,CACrHC,EAAcO,CAAG,EACpB,IAAMN,EAAYC,EAAc,EAChC,OAAUC,EAAYF,EAAO,iBAAiBF,CAAM,CAAC,CACvD,CAAC,EACEK,EAAa,CAClB,CACA,GAAIZ,EAAK,EAAG,CACV,IAAMS,EAAYC,EAAc,EAC7BG,EAAW,SAAUJ,EAAO,MAAM,EAAE,OAAQA,EAAO,IAAI,EAAE,gBAAiBA,EAAO,aAAa,EAAE,YAAaA,EAAO,cAAc,EAAE,YAAaA,EAAO,UAAU,EAAE,YAAaA,EAAO,cAAc,EAAE,gBAAiBA,EAAO,kBAAkB,EAAE,iBAAkBA,EAAO,mBAAmB,EAAE,QAASA,EAAO,UAAU,EAAE,YAAaA,EAAO,SAAS,CAChW,CACF,CAisBA,IAAMyC,GAAO,CAAC,kBAAmB,EAAE,EACnC,SAASC,GAAgCC,EAAIC,EAAK,CAOhD,GANID,EAAK,IACJE,EAAe,EACfC,EAAe,EAAG,GAAG,EACrBC,EAAU,EAAG,OAAQ,CAAC,EACtBC,EAAa,GAEdL,EAAK,EAAG,CACV,IAAMM,EAAYC,EAAc,EAC7BC,EAAU,EACVC,EAAW,kBAAmB,QAAQ,EACtCC,EAAY,IAAKJ,EAAO,WAAW,EAAE,OAAQA,EAAO,IAAI,EAAE,SAAUA,EAAO,MAAM,CACtF,CACF,CACA,SAASK,GAAgCX,EAAIC,EAAK,CAOhD,GANID,EAAK,IACJE,EAAe,EACfC,EAAe,EAAG,GAAG,EACrBC,EAAU,EAAG,OAAQ,CAAC,EACtBC,EAAa,GAEdL,EAAK,EAAG,CACV,IAAMM,EAAYC,EAAc,EAC7BC,EAAU,EACVE,EAAY,IAAKJ,EAAO,WAAW,EAAE,OAAQA,EAAO,IAAI,EAAE,SAAUA,EAAO,MAAM,CACtF,CACF,CACA,IAAMM,GAAO,CAAC,yBAA0B,EAAE,EAC1C,SAASC,GAAsCb,EAAIC,EAAK,CAKtD,GAJID,EAAK,IACJE,EAAe,EACfE,EAAU,EAAG,IAAK,CAAC,GAEpBJ,EAAK,EAAG,CACV,IAAMM,EAAYC,EAAc,EAC7BE,EAAW,cAAeH,EAAO,eAAe,QAAQ,EAAE,OAAQA,EAAO,UAAU,EAAE,QAASA,EAAO,aAAa,CACvH,CACF,CACA,SAASQ,GAAsCd,EAAIC,EAAK,CAKtD,GAJID,EAAK,IACJE,EAAe,EACfE,EAAU,EAAG,IAAK,CAAC,GAEpBJ,EAAK,EAAG,CACV,IAAMM,EAAYC,EAAc,EAC7BQ,GAAY,SAAUT,EAAO,SAASA,EAAO,IAAI,CAAC,EAAE,WAAYA,EAAO,WAAWA,EAAO,IAAI,CAAC,EAC9FG,EAAW,OAAQH,EAAO,IAAI,EAAE,OAAQA,EAAO,SAAS,EAAE,OAAQA,EAAO,YAAcA,EAAO,YAAcA,EAAO,OAAO,SAASA,EAAO,KAAK,IAAI,CAAC,EAAE,UAAWA,EAAO,gBAAgB,EAAE,aAAcA,EAAO,UAAU,CAC9N,CACF,CACA,SAASU,GAAqChB,EAAIC,EAAK,CACrD,GAAID,EAAK,EAAG,CACV,IAAMiB,EAASC,EAAiB,EAC7BhB,EAAe,EACfC,EAAe,EAAG,IAAK,CAAC,EACxBgB,EAAW,oBAAqB,SAA6EC,EAAQ,CACnHC,EAAcJ,CAAG,EACpB,IAAMK,EAAYf,EAAc,EAChC,OAAUgB,EAAYD,EAAO,kBAAkBF,CAAM,CAAC,CACxD,CAAC,EACEf,EAAa,CAClB,CACA,GAAIL,EAAK,EAAG,CACV,IAAMsB,EAAYf,EAAc,EAC7BE,EAAW,SAAUa,EAAO,MAAM,EAAE,OAAQA,EAAO,IAAI,EAAE,gBAAiBA,EAAO,aAAa,EAAE,YAAaA,EAAO,cAAc,EAAE,YAAaA,EAAO,UAAU,EAAE,YAAaA,EAAO,cAAc,EAAE,cAAeA,EAAO,gBAAgB,EAAE,gBAAiBA,EAAO,kBAAkB,EAAE,iBAAkBA,EAAO,mBAAmB,EAAE,QAASA,EAAO,UAAU,EAAE,YAAaA,EAAO,SAAS,CACxY,CACF,CACA,SAASE,GAAqCxB,EAAIC,EAAK,CACrD,GAAID,EAAK,EAAG,CACV,IAAMyB,EAASP,EAAiB,EAC7BhB,EAAe,EACfC,EAAe,EAAG,IAAK,CAAC,EACxBgB,EAAW,oBAAqB,SAA6EC,EAAQ,CACnHC,EAAcI,CAAG,EACpB,IAAMH,EAAYf,EAAc,EAChC,OAAUgB,EAAYD,EAAO,iBAAiBF,CAAM,CAAC,CACvD,CAAC,EACEf,EAAa,CAClB,CACA,GAAIL,EAAK,EAAG,CACV,IAAMsB,EAAYf,EAAc,EAC7BE,EAAW,SAAUa,EAAO,MAAM,EAAE,OAAQA,EAAO,IAAI,EAAE,gBAAiBA,EAAO,aAAa,EAAE,YAAaA,EAAO,cAAc,EAAE,YAAaA,EAAO,UAAU,EAAE,YAAaA,EAAO,cAAc,EAAE,gBAAiBA,EAAO,kBAAkB,EAAE,iBAAkBA,EAAO,mBAAmB,EAAE,QAASA,EAAO,UAAU,EAAE,iBAAkBA,EAAO,cAAc,EAAE,eAAgBA,EAAO,YAAY,EAAE,gBAAiBA,EAAO,aAAa,EAAE,YAAaA,EAAO,SAAS,CACrd,CACF,CACA,SAASI,GAA8C1B,EAAIC,EAAK,CAO9D,GANID,EAAK,IACJE,EAAe,EACfC,EAAe,EAAG,GAAG,EACrBC,EAAU,EAAG,IAAK,EAAE,EACpBC,EAAa,GAEdL,EAAK,EAAG,CACV,IAAM2B,EAAY1B,EAAI,UAChBqB,EAAYf,EAAc,CAAC,EAC9BE,EAAW,kBAAmB,QAAQ,EACtCD,EAAU,EACVC,EAAW,SAAUa,EAAO,MAAM,EAAE,SAAUA,EAAO,MAAM,EAAE,SAAUA,EAAO,MAAM,EAAE,OAAQK,CAAS,EAAE,gBAAiBL,EAAO,aAAa,EAAE,YAAaA,EAAO,SAAS,EAAE,QAASA,EAAO,KAAK,EAAE,mBAAoBA,EAAO,gBAAgB,EAAE,WAAYA,EAAO,QAAQ,EAAE,aAAcA,EAAO,UAAU,CACpT,CACF,CACA,SAASM,GAAqC5B,EAAIC,EAAK,CAOrD,GANID,EAAK,IACJE,EAAe,EACfC,EAAe,EAAG,GAAG,EACrB0B,EAAW,EAAGH,GAA+C,EAAG,GAAI,IAAK,CAAC,EAC1ErB,EAAa,GAEdL,EAAK,EAAG,CACV,IAAMsB,EAAYf,EAAc,EAC7BC,EAAU,EACVC,EAAW,UAAWa,EAAO,OAAO,EAAE,eAAgBA,EAAO,OAAO,CACzE,CACF,CACA,SAASQ,GAA8C9B,EAAIC,EAAK,CAO9D,GANID,EAAK,IACJE,EAAe,EACfC,EAAe,EAAG,GAAG,EACrBC,EAAU,EAAG,IAAK,EAAE,EACpBC,EAAa,GAEdL,EAAK,EAAG,CACV,IAAM+B,EAAY9B,EAAI,UAChBqB,EAAYf,EAAc,CAAC,EAC9BC,EAAU,EACVC,EAAW,SAAUa,EAAO,MAAM,EAAE,SAAUA,EAAO,MAAM,EAAE,SAAUA,EAAO,MAAM,EAAE,OAAQS,CAAS,EAAE,gBAAiBT,EAAO,aAAa,EAAE,YAAaA,EAAO,SAAS,EAAE,QAASA,EAAO,KAAK,EAAE,mBAAoBA,EAAO,gBAAgB,EAAE,WAAYA,EAAO,QAAQ,EAAE,aAAcA,EAAO,UAAU,CACpT,CACF,CACA,SAASU,GAAqChC,EAAIC,EAAK,CAOrD,GANID,EAAK,IACJE,EAAe,EACfC,EAAe,EAAG,GAAG,EACrB0B,EAAW,EAAGC,GAA+C,EAAG,GAAI,IAAK,CAAC,EAC1EzB,EAAa,GAEdL,EAAK,EAAG,CACV,IAAMsB,EAAYf,EAAc,EAC7BC,EAAU,EACVC,EAAW,UAAWa,EAAO,OAAO,EAAE,eAAgBA,EAAO,OAAO,CACzE,CACF,CACA,SAASW,GAA+CjC,EAAIC,EAAK,CAC/D,GAAID,EAAK,EAAG,CACV,IAAMkC,EAAShB,EAAiB,EAC7BhB,EAAe,EACfC,EAAe,EAAG,GAAG,EAAE,EAAG,IAAK,EAAE,EACjCgB,EAAW,SAAU,SAA4EC,EAAQ,CACvGC,EAAca,CAAG,EACpB,IAAMZ,EAAYf,EAAc,CAAC,EACjC,OAAUgB,EAAYD,EAAO,QAAQF,CAAM,CAAC,CAC9C,CAAC,EAAE,WAAY,SAA8EA,EAAQ,CAChGC,EAAca,CAAG,EACpB,IAAMZ,EAAYf,EAAc,CAAC,EACjC,OAAUgB,EAAYD,EAAO,WAAWF,CAAM,CAAC,CACjD,CAAC,EAAE,aAAc,SAAgFA,EAAQ,CACpGC,EAAca,CAAG,EACpB,IAAMZ,EAAYf,EAAc,CAAC,EACjC,OAAUgB,EAAYD,EAAO,aAAaF,CAAM,CAAC,CACnD,CAAC,EACEf,EAAa,EAAE,CACpB,CACA,GAAIL,EAAK,EAAG,CACV,IAAMmC,EAAYlC,EAAI,UAChBqB,EAAYf,EAAc,CAAC,EAC9BC,EAAU,EACVC,EAAW,SAAUa,EAAO,MAAM,EAAE,SAAUA,EAAO,MAAM,EAAE,SAAUA,EAAO,MAAM,EAAE,OAAQa,CAAS,EAAE,YAAab,EAAO,SAAS,EAAE,eAAgBA,EAAO,eAAe,EAAE,gBAAiBA,EAAO,aAAa,EAAE,kBAAmBA,EAAO,eAAe,EAAE,kBAAmBA,EAAO,eAAe,CAChT,CACF,CACA,SAASc,GAAsCpC,EAAIC,EAAK,CACtD,GAAID,EAAK,EAAG,CACV,IAAMqC,EAASnB,EAAiB,EAC7BhB,EAAe,EACfC,EAAe,EAAG,IAAK,EAAE,EACzBgB,EAAW,aAAc,UAAyE,CAChGE,EAAcgB,CAAG,EACpB,IAAMf,EAAYf,EAAc,EAChC,OAAUgB,EAAYD,EAAO,YAAY,CAAC,CAC5C,CAAC,EACEnB,EAAe,EAAG,IAAK,EAAE,EACzBgB,EAAW,QAAS,SAAkEC,EAAQ,CAC5FC,EAAcgB,CAAG,EACpB,IAAMf,EAAYf,EAAc,EAChC,OAAUgB,EAAYD,EAAO,sBAAsBF,CAAM,CAAC,CAC5D,CAAC,EACEf,EAAa,EACbwB,EAAW,EAAGI,GAAgD,EAAG,EAAG,IAAK,EAAE,EAC3E5B,EAAa,CAClB,CACA,GAAIL,EAAK,EAAG,CACV,IAAMsB,EAAYf,EAAc,EAC7BC,EAAU,EACVC,EAAW,OAAQa,EAAO,IAAI,EAAE,OAAQA,EAAO,IAAI,EAAE,SAAUA,EAAO,MAAM,EAAE,SAAUA,EAAO,MAAM,EAAE,UAAWA,EAAO,OAAO,EAAE,SAAUA,EAAO,MAAM,EAAE,kBAAmBA,EAAO,eAAe,EAAE,kBAAmBA,EAAO,qBAAqB,EACrPd,EAAU,EACVC,EAAW,UAAWa,EAAO,OAAO,CACzC,CACF,CACA,SAASgB,GAA+CtC,EAAIC,EAAK,CAO/D,GANID,EAAK,IACJE,EAAe,EACfC,EAAe,EAAG,GAAG,EACrBC,EAAU,EAAG,IAAK,EAAE,EACpBC,EAAa,GAEdL,EAAK,EAAG,CACV,IAAMuC,EAAatC,EAAI,UACjBqB,EAAYf,EAAc,CAAC,EAC9BC,EAAU,EACVC,EAAW,SAAUa,EAAO,cAAc,EAAE,SAAUA,EAAO,cAAc,EAAE,SAAUA,EAAO,MAAM,EAAE,OAAQiB,CAAU,EAAE,YAAajB,EAAO,SAAS,EAAE,QAASA,EAAO,KAAK,EAAE,WAAYA,EAAO,QAAQ,EAAE,aAAcA,EAAO,UAAU,CACjP,CACF,CACA,SAASkB,GAAsCxC,EAAIC,EAAK,CACtD,GAAID,EAAK,EAAG,CACV,IAAMyC,EAASvB,EAAiB,EAC7BhB,EAAe,EACfC,EAAe,EAAG,IAAK,EAAE,EACzBgB,EAAW,iBAAkB,SAA2EC,EAAQ,CAC9GC,EAAcoB,CAAG,EACpB,IAAMnB,EAAYf,EAAc,EAChC,OAAUgB,EAAYD,EAAO,aAAaF,CAAM,CAAC,CACnD,CAAC,EACES,EAAW,EAAGS,GAAgD,EAAG,EAAG,IAAK,CAAC,EAC1EjC,EAAa,CAClB,CACA,GAAIL,EAAK,EAAG,CACV,IAAMsB,EAAYf,EAAc,EAC7BE,EAAW,UAAWa,EAAO,OAAO,EAAE,OAAWoB,GAAgB,GAAIC,GAAMrB,EAAO,cAAeA,EAAO,MAAM,CAAC,EAAE,SAAUA,EAAO,cAAc,EAAE,SAAUA,EAAO,MAAM,EAAE,eAAgBA,EAAO,YAAY,EAAE,YAAaA,EAAO,SAAS,EAAE,SAAUA,EAAO,MAAM,EACtQZ,EAAY,YAAaY,EAAO,iBAAiB,EACjDd,EAAU,EACVC,EAAW,UAAWa,EAAO,OAAO,EAAE,eAAgBA,EAAO,OAAO,CACzE,CACF,CACA,IAAMsB,GAAO,CAAC,uBAAwB,EAAE,EAyMxC,IAAMC,GAAO,CAAC,qBAAsB,EAAE,EACtC,SAASC,GAAqCC,EAAIC,EAAK,CAOrD,GANID,EAAK,IACJE,EAAe,EACfC,EAAe,EAAG,MAAM,EACxBC,EAAU,EAAG,IAAK,CAAC,EACnBC,EAAa,GAEdL,EAAK,EAAG,CACV,IAAMM,EAAYC,EAAc,EAC7BC,EAAU,EACVC,EAAW,QAASH,EAAO,IAAI,EAAE,OAAQA,EAAO,gBAAgB,EAAE,eAAgBA,EAAO,YAAY,CAC1G,CACF,CACA,IAAMI,GAAO,CAAC,wBAAyB,EAAE,EACzC,SAASC,GAA8CX,EAAIC,EAAK,CAK9D,GAJID,EAAK,IACJE,EAAe,EACfE,EAAU,EAAG,IAAK,CAAC,GAEpBJ,EAAK,EAAG,CACV,IAAMY,EAAYL,EAAc,EAAE,UAC5BM,EAAYN,EAAc,EAC7BE,EAAW,OAAQG,CAAM,EAAE,SAAUC,EAAO,WAAW,EAAE,QAASA,EAAO,MAAMD,CAAM,CAAC,EAAE,QAASC,EAAO,UAAUD,CAAM,CAAC,EAAE,YAAaC,EAAO,UAAU,EAAE,gBAAiBA,EAAO,cAAc,EAAE,MAAOA,EAAO,GAAG,EAAE,QAASD,EAAO,KAAK,EAAE,gBAAiBC,EAAO,aAAa,EAAE,aAAcA,EAAO,UAAU,CACxT,CACF,CACA,SAASC,GAAqCd,EAAIC,EAAK,CACrD,GAAID,EAAK,EAAG,CACV,IAAMe,EAASC,EAAiB,EAC7Bd,EAAe,EACfC,EAAe,EAAG,GAAG,EACrBc,EAAW,EAAGN,GAA+C,EAAG,GAAI,IAAK,CAAC,EAC1ER,EAAe,EAAG,IAAK,CAAC,EACxBe,EAAW,SAAU,SAAkEC,EAAQ,CAC7FC,EAAcL,CAAG,EACpB,IAAMF,EAAYN,EAAc,EAChC,OAAUc,EAAYR,EAAO,QAAQM,CAAM,CAAC,CAC9C,CAAC,EAAE,WAAY,SAAoEA,EAAQ,CACtFC,EAAcL,CAAG,EACpB,IAAMF,EAAYN,EAAc,EAChC,OAAUc,EAAYR,EAAO,SAAS,KAAKM,CAAM,CAAC,CACpD,CAAC,EAAE,aAAc,SAAsEA,EAAQ,CAC1FC,EAAcL,CAAG,EACpB,IAAMF,EAAYN,EAAc,EAChC,OAAUc,EAAYR,EAAO,WAAW,KAAKM,CAAM,CAAC,CACtD,CAAC,EAAE,WAAY,SAAoEA,EAAQ,CACtFC,EAAcL,CAAG,EACpB,IAAMF,EAAYN,EAAc,EAChC,OAAUc,EAAYR,EAAO,SAAS,KAAKM,CAAM,CAAC,CACpD,CAAC,EACEd,EAAa,EAAE,CACpB,CACA,GAAIL,EAAK,EAAG,CACV,IAAMY,EAASX,EAAI,UACbY,EAAYN,EAAc,EAC7BC,EAAU,EACVC,EAAW,OAAQI,EAAO,aAAaD,CAAM,CAAC,EAC9CJ,EAAU,EACVC,EAAW,aAAcG,EAAO,UAAU,EAAE,WAAYA,EAAO,QAAQ,EAAE,cAAeC,EAAO,WAAW,EAAE,cAAeA,EAAO,WAAW,EAAE,OAAQA,EAAO,MAAMD,CAAM,CAAC,EAAE,QAASA,EAAO,KAAK,KAAK,EAAE,WAAYC,EAAO,QAAQ,EAAE,OAAQD,EAAO,IAAI,EAAE,MAAOC,EAAO,GAAG,EAAE,gBAAiBA,EAAO,aAAa,EAAE,WAAYA,EAAO,SAASD,EAAO,IAAI,CAAC,EAAE,UAAWC,EAAO,UAAU,EAAE,kBAAmBA,EAAO,eAAe,EAAE,mBAAoBA,EAAO,eAAe,GAAG,EAAE,cAAeA,EAAO,WAAW,OAAO,EAAE,eAAgBA,EAAO,gBAAgBD,CAAM,CAAC,EAAE,kBAAmBC,EAAO,eAAe,EAAE,iBAAkBD,EAAO,IAAI,CAC9nB,CACF,CACA,IAAMU,GAAO;EAkfb,SAASC,GAASC,EAAMC,EAAMC,EAAS,CACrCA,EAAUA,GAAW,CAAC,EACtB,IAAIC,EACAC,EACAC,EACAC,EAAU,KACVC,EAAW,EACf,SAASC,GAAQ,CACfD,EAAWL,EAAQ,UAAY,GAAQ,EAAI,CAAC,IAAI,KAChDI,EAAU,KACVD,EAASL,EAAK,MAAMG,EAASC,CAAI,CACnC,CACA,OAAO,UAAY,CACjB,IAAMK,EAAM,CAAC,IAAI,KACb,CAACF,GAAYL,EAAQ,UAAY,KACnCK,EAAWE,GAEb,IAAMC,EAAYT,GAAQQ,EAAMF,GAEhC,OAAAJ,EAAU,KAEVC,EAAO,UACHM,GAAa,GACf,aAAaJ,CAAO,EACpBA,EAAU,KACVC,EAAWE,EACXJ,EAASL,EAAK,MAAMG,EAASC,CAAI,GACxB,CAACE,GAAWJ,EAAQ,WAAa,KAC1CI,EAAU,WAAWE,EAAOE,CAAS,GAEhCL,CACT,CACF,CASA,SAASM,GAAaC,EAAUV,EAAS,CACvC,OAAO,SAAwBW,EAAQC,EAAKC,EAAY,CACtD,MAAO,CACL,aAAc,GACd,WAAYA,EAAW,WACvB,IAAK,UAAkB,CACrB,cAAO,eAAe,KAAMD,EAAK,CAC/B,aAAc,GACd,WAAYC,EAAW,WACvB,MAAOhB,GAASgB,EAAW,MAAOH,EAAUV,CAAO,CACrD,CAAC,EACM,KAAKY,CAAG,CACjB,CACF,CACF,CACF,CACA,IAAIE,EAA8B,SAAUA,EAAgB,CAC1D,OAAAA,EAAe,IAAS,MACxBA,EAAe,OAAY,SAC3BA,EAAe,KAAU,OACzBA,EAAe,MAAW,QAC1BA,EAAe,OAAY,SACpBA,CACT,EAAEA,GAAkB,CAAC,CAAC,EAChBC,GAAc,EACpB,SAASC,GAAiBC,EAAcC,EAAmBC,EAAW,CACpE,GAAIA,IAAcL,EAAe,IAC/B,OAAOG,EAAa,IAAMF,GAE5B,GAAII,IAAcL,EAAe,OAC/B,OAAOG,EAAa,IAAMA,EAAa,OAASC,EAAkB,OAASH,GAE7E,GAAII,IAAcL,EAAe,OAC/B,OAAOG,EAAa,IAAMA,EAAa,OAAS,EAAIC,EAAkB,OAAS,CAGnF,CACA,SAASE,GAAmBH,EAAcC,EAAmBC,EAAW,CACtE,GAAIA,IAAcL,EAAe,KAC/B,OAAOG,EAAa,KAAOF,GAE7B,GAAII,IAAcL,EAAe,MAC/B,OAAOG,EAAa,KAAOA,EAAa,MAAQC,EAAkB,MAAQH,GAE5E,GAAII,IAAcL,EAAe,OAC/B,OAAOG,EAAa,KAAOA,EAAa,MAAQ,EAAIC,EAAkB,MAAQ,CAGlF,CAMA,IAAMG,GAAN,MAAMC,CAAe,CAMnB,OAAO,2BAA2BL,EAAcC,EAAmBC,EAAW,CAC5E,IAAIhB,EAASa,GAAiBC,EAAcC,EAAmBC,CAAS,EACxE,OAAIhB,EAASe,EAAkB,OAAS,OAAO,cAC7Cf,EAAS,OAAO,YAAce,EAAkB,QAE3Cf,CACT,CAMA,OAAO,uBAAuBc,EAAcC,EAAmBK,EAAiBJ,EAAW,CACzF,IAAIhB,EACAgB,IAAcL,EAAe,MAC/BX,EAASc,EAAa,OAAS,EAAIM,EAAgB,OAAS,EAAIR,IAE9DI,IAAcL,EAAe,SAC/BX,EAASe,EAAkB,OAASD,EAAa,OAAS,EAAIM,EAAgB,OAAS,EAAIR,IAEzFI,IAAcL,EAAe,SAC/BX,EAASe,EAAkB,OAAS,EAAIK,EAAgB,OAAS,GAEnE,IAAMC,EAAkBR,GAAiBC,EAAcC,EAAmBC,CAAS,EACnF,OAAIK,EAAkBN,EAAkB,OAAS,OAAO,cACtDf,GAAUqB,EAAkBN,EAAkB,OAAS,OAAO,aAEzDf,CACT,CAMA,OAAO,6BAA6Bc,EAAcC,EAAmBC,EAAW,CAC9E,IAAIhB,EAASiB,GAAmBH,EAAcC,EAAmBC,CAAS,EAC1E,OAAIhB,EAASe,EAAkB,MAAQ,OAAO,aAC5Cf,EAAS,OAAO,WAAae,EAAkB,OAE1Cf,CACT,CAMA,OAAO,yBAAyBc,EAAcC,EAAmBK,EAAiBJ,EAAW,CAC3F,IAAIhB,EACAgB,IAAcL,EAAe,OAC/BX,EAASc,EAAa,MAAQ,EAAIM,EAAgB,MAAQ,EAAIR,IAE5DI,IAAcL,EAAe,QAC/BX,EAASe,EAAkB,MAAQD,EAAa,MAAQ,EAAIM,EAAgB,MAAQ,EAAIR,IAEtFI,IAAcL,EAAe,SAC/BX,EAASe,EAAkB,MAAQ,EAAIK,EAAgB,MAAQ,GAEjE,IAAMC,EAAkBJ,GAAmBH,EAAcC,EAAmBC,CAAS,EACrF,OAAIK,EAAkBN,EAAkB,MAAQ,OAAO,aACrDf,GAAUqB,EAAkBN,EAAkB,MAAQ,OAAO,YAExDf,CACT,CAMA,OAAO,WAAWc,EAAcC,EAAmBO,EAAWC,EAAS,CACrE,IAAIC,EAAO,GACX,OAAIF,IAAcX,EAAe,OAC3BG,EAAa,KAAOA,EAAa,MAAQC,EAAkB,MAAQQ,EAAU,OAAO,aACtFC,EAAO,IAGPF,IAAcX,EAAe,MAC3BG,EAAa,KAAOC,EAAkB,MAAQQ,EAAU,IAC1DC,EAAO,IAGPF,IAAcX,EAAe,KAC3BG,EAAa,IAAMC,EAAkB,OAASQ,EAAU,IAC1DC,EAAO,IAGPF,IAAcX,EAAe,QAC3BG,EAAa,IAAMA,EAAa,OAASC,EAAkB,OAASQ,EAAU,OAAO,cACvFC,EAAO,IAGJA,CACT,CAMA,OAAO,cAAcF,EAAWG,EAAQC,EAASN,EAAiBJ,EAAW,CAC3E,IAAIW,EAAM,EACNC,EAAO,EACX,OAAIN,IAAcX,EAAe,OAC/BiB,EAAO,GACPD,EAAMR,EAAe,uBAAuBO,EAASD,EAAQL,EAAiBJ,CAAS,GAC9EM,IAAcX,EAAe,MACtCiB,EAAOH,EAAO,MACdE,EAAMR,EAAe,uBAAuBO,EAASD,EAAQL,EAAiBJ,CAAS,GAC9EM,IAAcX,EAAe,KACtCgB,EAAMF,EAAO,OACbG,EAAOT,EAAe,yBAAyBO,EAASD,EAAQL,EAAiBJ,CAAS,GACjFM,IAAcX,EAAe,SACtCgB,EAAM,GACNC,EAAOT,EAAe,yBAAyBO,EAASD,EAAQL,EAAiBJ,CAAS,GAErF,CACL,IAAAW,EACA,KAAAC,CACF,CACF,CAMA,OAAO,gBAAgBN,EAAWG,EAAQC,EAASH,EAASP,EAAW,CACrE,IAAIW,EAAM,EACNC,EAAO,EACX,OAAIN,IAAcX,EAAe,OAC/BiB,EAAOF,EAAQ,KAAOA,EAAQ,MAAQH,EACtCI,EAAMR,EAAe,2BAA2BO,EAASD,EAAQT,CAAS,GACjEM,IAAcX,EAAe,MACtCiB,EAAOF,EAAQ,KAAOD,EAAO,MAAQF,EACrCI,EAAMR,EAAe,2BAA2BO,EAASD,EAAQT,CAAS,GACjEM,IAAcX,EAAe,KACtCgB,EAAMD,EAAQ,IAAMD,EAAO,OAASF,EACpCK,EAAOT,EAAe,6BAA6BO,EAASD,EAAQT,CAAS,GACpEM,IAAcX,EAAe,SACtCgB,EAAMD,EAAQ,IAAMA,EAAQ,OAASH,EACrCK,EAAOT,EAAe,6BAA6BO,EAASD,EAAQT,CAAS,GAExE,CACL,IAAAW,EACA,KAAAC,CACF,CACF,CAMA,OAAO,mBAAmBN,EAAWG,EAAQC,EAASH,EAAS,CAE7D,GADmBJ,EAAe,WAAWO,EAASD,EAAQH,EAAWC,CAAO,EAChE,CACd,GAAID,IAAcX,EAAe,MAC/B,OAAOA,EAAe,KACjB,GAAIW,IAAcX,EAAe,KACtC,OAAOA,EAAe,MACjB,GAAIW,IAAcX,EAAe,IACtC,OAAOA,EAAe,OACjB,GAAIW,IAAcX,EAAe,OACtC,OAAOA,EAAe,GAE1B,CACA,OAAOW,CACT,CACF,EACIO,IAAwC,IAAM,CAChD,MAAMA,CAAwB,CAC5B,IAAI,YAAa,CACf,IAAIC,EAAM,6BACV,OAAAA,GAAO,aAAa,KAAK,SAAS,GAClCA,GAAO,SAAS,KAAK,IAAI,GACzBA,GAAO,IAAI,KAAK,QAAQ,GACjBA,CACT,CACA,YAAYC,EAASC,EAAUC,EAAY,CACzC,KAAK,QAAUF,EACf,KAAK,SAAWC,EAChB,KAAK,WAAaC,CACpB,CACA,iBAAkB,CAChB,WAAW,KAAK,SAAS,KAAK,IAAI,CAAC,CACrC,CACA,UAAW,CACT,GAAI,CAACC,GAAkB,KAAK,UAAU,EACpC,OAEF,IAAMC,EAAY,KAAK,QAAQ,cACzBT,EAAU,KAAK,KAAK,cAAc,sBAAsB,EAE9D,GAAI,CAACA,EAAQ,QAAU,CAACA,EAAQ,MAAO,OACvC,IAAMD,EAASU,EAAU,sBAAsB,EAC/C,KAAK,UAAUT,EAASD,CAAM,EAC9B,KAAK,gBAAgBU,EAAWT,EAASD,CAAM,EAC3C,KAAK,WACP,KAAK,cAAcC,EAASD,CAAM,EAGpC,WAAW,IAAM,KAAK,SAAS,SAASU,EAAW,SAAS,EAAG,CAAC,CAClE,CACA,gBAAgBA,EAAWT,EAASD,EAAQ,CAC1C,GAAM,CACJ,IAAAE,EACA,KAAAC,CACF,EAAIV,GAAe,gBAAgB,KAAK,UAAWO,EAAQC,EAAS,KAAK,QAAS,KAAK,SAAS,EAChG,KAAK,SAAS,SAASS,EAAW,MAAO,GAAGR,CAAG,IAAI,EACnD,KAAK,SAAS,SAASQ,EAAW,OAAQ,GAAGP,CAAI,IAAI,CACvD,CACA,cAAcF,EAASD,EAAQ,CAC7B,IAAMW,EAAW,KAAK,SAAS,cACzBhB,EAAkBgB,EAAS,sBAAsB,EACjD,CACJ,IAAAT,EACA,KAAAC,CACF,EAAIV,GAAe,cAAc,KAAK,UAAWO,EAAQC,EAASN,EAAiB,KAAK,SAAS,EACjG,KAAK,SAAS,SAASgB,EAAU,MAAO,GAAGT,CAAG,IAAI,EAClD,KAAK,SAAS,SAASS,EAAU,OAAQ,GAAGR,CAAI,IAAI,CACtD,CACA,UAAUF,EAASD,EAAQ,CACzB,KAAK,UAAYP,GAAe,mBAAmB,KAAK,UAAWO,EAAQC,EAAS,KAAK,OAAO,CAClG,CACA,gBAAiB,CACf,KAAK,SAAS,CAChB,CACA,MAAO,CACL,KAAK,UAAO,SAAyCW,EAAmB,CACtE,OAAO,IAAKA,GAAqBR,GAA4BS,EAAqBC,EAAU,EAAMD,EAAqBE,EAAS,EAAMF,EAAkBG,EAAW,CAAC,CACtK,CACF,CACA,MAAO,CACL,KAAK,UAAyBC,EAAkB,CAC9C,KAAMb,EACN,UAAW,CAAC,CAAC,qBAAqB,CAAC,EACnC,UAAW,SAAuCc,EAAIC,EAAK,CAIzD,GAHID,EAAK,GACJE,GAAYC,GAAK,CAAC,EAEnBH,EAAK,EAAG,CACV,IAAII,EACDC,GAAeD,EAAQE,GAAY,CAAC,IAAML,EAAI,SAAWG,EAAG,MACjE,CACF,EACA,SAAU,EACV,aAAc,SAA8CJ,EAAIC,EAAK,CAC/DD,EAAK,GACJO,EAAW,SAAU,UAA6D,CACnF,OAAON,EAAI,eAAe,CAC5B,EAAG,GAAUO,EAAe,EAE1BR,EAAK,GACJS,GAAWR,EAAI,UAAU,CAEhC,EACA,OAAQ,CACN,KAAM,OACN,UAAW,YACX,KAAM,OACN,UAAW,YACX,UAAW,YACX,QAAS,UACT,SAAU,WACV,MAAO,QACP,SAAU,WACV,QAAS,SACX,EACA,WAAY,GACZ,MAAO,EACP,KAAM,EACN,OAAQ,CAAC,CAAC,WAAY,EAAE,EAAG,CAAC,EAAG,QAAQ,EAAG,CAAC,EAAG,iBAAiB,EAAG,CAAC,EAAG,MAAM,EAAG,CAAC,EAAG,YAAa,EAAG,MAAM,EAAG,CAAC,EAAG,mBAAoB,yBAAyB,EAAG,CAAC,EAAG,WAAW,CAAC,EAChL,SAAU,SAA0CD,EAAIC,EAAK,CACvDD,EAAK,IACJU,EAAe,EAAG,KAAK,EACvBC,EAAU,EAAG,OAAQ,EAAG,CAAC,EACzBD,EAAe,EAAG,MAAO,CAAC,EAC1BE,EAAW,EAAGC,GAAyC,EAAG,EAAG,OAAQ,CAAC,EAAE,EAAGC,GAAyC,EAAG,EAAG,OAAQ,CAAC,EACnIC,EAAa,EAAE,GAEhBf,EAAK,IACJgB,EAAU,EACVC,GAAuB,0BAA2BhB,EAAI,UAAW,EAAE,EACnEiB,EAAW,SAAU,CAACjB,EAAI,SAAS,EACnCe,EAAU,CAAC,EACXE,EAAW,OAAQ,CAACjB,EAAI,KAAK,EAC7Be,EAAU,EACVE,EAAW,OAAQjB,EAAI,KAAK,EAEnC,EACA,aAAc,CAAIkB,EAASC,EAAgB,EAC3C,OAAQ,CAAC;AAAA,CAAi4F,EAC14F,cAAe,CACjB,CAAC,CACH,CACF,CACA,OAAAC,GAAW,CAAC1D,GAAa,GAAG,CAAC,EAAGuB,EAAwB,UAAW,iBAAkB,IAAI,EAClFA,CACT,GAAG,EAIGoC,GAAN,KAAgC,CAC9B,YAAYC,EAAkB,CAC5B,KAAK,iBAAmBA,EACxB,KAAK,SAAW,CAAC,EACjB,KAAK,WAAa,IAAI,GACxB,CACA,UAAUC,EAAO,KAAK,KAAM,CAC1B,OAAO,KAAK,WAAW,IAAIA,CAAI,CACjC,CACA,OAAOC,EAAU,CACf,OAAO,KAAK,aAAa,KAAK,KAAMA,CAAQ,CAC9C,CACA,aAAaD,EAAMC,EAAU,CAC3BA,EAAW,KAAK,eAAeA,CAAQ,EACvC,IAAMC,EAAY,KAAK,gBAAgBF,EAAMC,CAAQ,EACrD,YAAK,SAASD,EAAME,CAAS,EACtBA,CACT,CACA,QAAQC,EAAU,CAChB,IAAMC,EAAc,KAAK,WAAW,IAAID,EAAS,aAAa,EAC9D,GAAIC,GAAeA,EAAY,OAAQ,CACrC,IAAMC,EAAMD,EAAY,QAAQD,CAAQ,EACpCE,EAAM,KACUD,EAAYC,CAAG,EACvB,QAAQ,EAClBD,EAAY,OAAOC,EAAK,CAAC,EAE7B,CACF,CACA,YAAa,CACX,KAAK,cAAc,KAAK,IAAI,CAC9B,CACA,cAAcL,EAAM,CAClB,IAAMM,EAAQ,KAAK,WAAW,IAAIN,CAAI,EACtC,GAAIM,GAASA,EAAM,OAAQ,CACzB,IAAIC,EAAID,EAAM,OAAS,EACvB,KAAOC,GAAK,GACV,KAAK,QAAQD,EAAMC,GAAG,CAAC,CAE3B,CACF,CACA,gBAAgBP,EAAMC,EAAU,CAC9B,OAAO,KAAK,iBAAiB,gBAAgBD,EAAMC,CAAQ,CAC7D,CACA,eAAeA,EAAU,CACvB,IAAMO,EAASC,GAAA,GACV,KAAK,SAAS,QAEbC,EAAUD,GAAA,GACX,KAAK,SAAS,SAEnB,MAAI,CAACR,EAAS,QAAU,CAACA,EAAS,UAChCA,EAAW,CACT,OAAQA,CACV,GAEEO,IACFP,EAAS,OAASQ,MAAA,GACbD,GACAP,EAAS,SAGZS,IACFT,EAAS,QAAUQ,MAAA,GACdC,GACAT,EAAS,UAGTA,CACT,CACA,SAASD,EAAME,EAAW,CACnB,KAAK,WAAW,IAAIF,CAAI,GAC3B,KAAK,WAAW,IAAIA,EAAM,CAAC,CAAC,EAEhB,KAAK,WAAW,IAAIA,CAAI,EAChC,KAAKE,CAAS,CACtB,CACF,EACA,SAASS,GAAmBC,EAAG,CAC7B,OAAOA,EAAE,OACX,CAQA,IAAIC,IAAiC,IAAM,CACzC,MAAMA,CAAiB,CACrB,MAAO,CACL,KAAK,wBAA0B,IACjC,CAOA,OAAO,2BAA2BC,EAAW,CAC3CD,EAAiB,wBAA0BC,CAC7C,CACA,YAAYC,EAAgBC,EAA0BC,EAAU,CAC9D,KAAK,eAAiBF,EACtB,KAAK,yBAA2BC,EAChC,KAAK,SAAWC,CAClB,CAMA,sBAAuB,CACrB,GAAI,KAAK,WAAY,OAAO,KAAK,WACjC,GAAIJ,EAAiB,wBAAyB,OAAOA,EAAiB,wBACtE,GAAI,KAAK,eAAe,WAAW,OAAQ,OAAO,KAAK,eAAe,WAAW,CAAC,EAClF,MAAM,IAAI,MAAM,wHAAwH,CAC1I,CASA,qBAAqBC,EAAW,CAC9B,KAAK,WAAaA,CACpB,CAQA,qBAAqBZ,EAAW,CAC9B,OAAIS,GAAmBT,CAAS,EACvBA,EAAU,QAAQ,cAEvBA,EAAU,UAAYA,EAAU,SAAS,UAAU,OAAS,EACvDA,EAAU,SAAS,UAAU,CAAC,EAGhCA,EAAU,SAAS,aAC5B,CAMA,yBAAyBA,EAAW,CAClC,OAAO,KAAK,qBAAqBA,CAAS,CAC5C,CASA,yBAAyBA,EAAWD,EAAU,CAC5C,GAAIA,EAAU,CACZ,GAAIA,EAAS,SAAW,OAAW,CACjC,IAAMiB,EAAc,OAAO,oBAAoBjB,EAAS,MAAM,EAC9D,QAAWkB,KAAeD,EACxBhB,EAAU,SAASiB,CAAW,EAAIlB,EAAS,OAAOkB,CAAW,CAEjE,CACA,GAAIlB,EAAS,UAAY,OAAW,CAClC,IAAMmB,EAAY,OAAO,oBAAoBnB,EAAS,OAAO,EAC7D,QAAWoB,KAAaD,EACtBlB,EAAU,SAASmB,CAAS,EAAIpB,EAAS,QAAQoB,CAAS,CAE9D,CACF,CACA,OAAOnB,CACT,CAUA,gBAAgBoB,EAAgBrB,EAAW,CAAC,EAAGsB,EAAU,CAClDA,IAAUA,EAAW,KAAK,qBAAqB,GACpD,IAAMC,EAAiB,KAAK,qBAAqBD,CAAQ,EACnDE,EAAa,IAAIC,GAAgBF,EAAgB,KAAK,yBAA0B,KAAK,eAAgB,KAAK,QAAQ,EAClHG,EAAS,IAAIC,GAAgBN,CAAc,EAC3CO,EAAeJ,EAAW,OAAOE,CAAM,EAC7C,YAAK,yBAAyBE,EAAc5B,CAAQ,EAC7C4B,CACT,CACA,MAAO,CACL,KAAK,UAAO,SAAkC3D,EAAmB,CAC/D,OAAO,IAAKA,GAAqB2C,GAAqBiB,GAAYC,EAAc,EAAMD,GAAYE,EAAwB,EAAMF,GAAYG,EAAQ,CAAC,CACvJ,CACF,CACA,MAAO,CACL,KAAK,WAA0BC,GAAmB,CAChD,MAAOrB,EACP,QAASA,EAAiB,SAC5B,CAAC,CACH,CACF,CACA,OAAOA,CACT,GAAG,EAICsB,IAA+B,IAAM,CACvC,MAAMA,UAAuBrC,EAA0B,CACrD,YAAYC,EAAkB,CAC5B,MAAMA,CAAgB,EACtB,KAAK,KAAOrC,EACd,CACA,MAAO,CACL,KAAK,UAAO,SAAgCQ,EAAmB,CAC7D,OAAO,IAAKA,GAAqBiE,GAAmBL,GAASjB,EAAgB,CAAC,CAChF,CACF,CACA,MAAO,CACL,KAAK,WAA0BqB,GAAmB,CAChD,MAAOC,EACP,QAASA,EAAe,SAC1B,CAAC,CACH,CACF,CACA,OAAOA,CACT,GAAG,EAICC,GAA8B,SAAUA,EAAgB,CAC1D,OAAAA,EAAe,MAAW,QAC1BA,EAAe,MAAW,QACnBA,CACT,EAAEA,IAAkB,CAAC,CAAC,EAClBC,GAA0B,SAAUA,EAAY,CAClD,OAAAA,EAAW,YAAiB,cAC5BA,EAAW,OAAY,SAChBA,CACT,EAAEA,IAAc,CAAC,CAAC,EACdC,EAAyB,SAAUA,EAAW,CAChD,OAAAA,EAAU,KAAU,OACpBA,EAAU,OAAY,SACtBA,EAAU,QAAa,UACvBA,EAAU,SAAc,WACjBA,CACT,EAAEA,GAAa,CAAC,CAAC,EAMjB,SAASC,GAAYC,EAAO,CAC1B,OAAIA,aAAiB,KACnBA,EAAQA,EAAM,mBAAmB,EAEjCA,EAAQA,EAAM,eAAe,EAExBA,CACT,CAMA,SAASC,GAAYD,EAAO,CAC1B,OAAOA,EAAM,eAAe,EAAE,QAAQ,YAAaE,IAC1C,CACL,IAAK,QAEL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,OACL,IAAK,MACP,GAAEA,CAAK,CACR,CACH,CACA,IAAIC,IAAqC,IAAM,CAC7C,MAAMA,CAAqB,CACzB,aAAc,CACZ,KAAK,SAAW,GAChB,KAAK,OAAS,IAAIC,EAClB,KAAK,SAAW,IAAIA,EACpB,KAAK,WAAa,IAAIA,EACtB,KAAK,OAAS,IAAIA,CACpB,CACA,IAAI,cAAe,CACjB,OAAO,KAAK,gBAAkB,SAChC,CACA,cAAe,CACb,KAAK,SAAS,KAAK,CACjB,KAAM,KAAK,KACb,CAAC,CACH,CACA,cAAe,CACb,KAAK,WAAW,KAAK,CACnB,KAAM,KAAK,KACb,CAAC,CACH,CACA,MAAO,CACL,KAAK,UAAO,SAAsC1E,EAAmB,CACnE,OAAO,IAAKA,GAAqByE,EACnC,CACF,CACA,MAAO,CACL,KAAK,UAAyBpE,EAAkB,CAC9C,KAAMoE,EACN,UAAW,CAAC,CAAC,yBAAyB,CAAC,EACvC,aAAc,SAA2CnE,EAAIC,EAAK,CAC5DD,EAAK,GACJO,EAAW,aAAc,UAA8D,CACxF,OAAON,EAAI,aAAa,CAC1B,CAAC,EAAE,aAAc,UAA8D,CAC7E,OAAOA,EAAI,aAAa,CAC1B,CAAC,CAEL,EACA,OAAQ,CACN,MAAO,QACP,MAAO,QACP,eAAgB,iBAChB,SAAU,UACZ,EACA,QAAS,CACP,OAAQ,SACR,SAAU,WACV,WAAY,aACZ,OAAQ,QACV,EACA,WAAY,GACZ,MAAO,EACP,KAAM,EACN,OAAQ,CAAC,CAAC,WAAY,KAAM,EAAG,QAAS,OAAO,EAAG,CAAC,EAAG,qBAAsB,EAAG,OAAO,EAAG,CAAC,EAAG,mBAAmB,CAAC,EACjH,SAAU,SAAuCD,EAAIC,EAAK,CACpDD,EAAK,IACJU,EAAe,EAAG,OAAQ,CAAC,EAC3BH,EAAW,QAAS,UAA+D,CACpF,OAAON,EAAI,OAAO,KAAKA,EAAI,cAAc,CAC3C,CAAC,EACES,EAAe,EAAG,OAAQ,CAAC,EAC3BH,EAAW,QAAS,UAA+D,CACpF,OAAON,EAAI,OAAO,KAAKA,EAAI,cAAc,CAC3C,CAAC,EACEc,EAAa,EACbL,EAAe,EAAG,OAAQ,CAAC,EAC3B2D,EAAO,CAAC,EACRtD,EAAa,EAAE,GAEhBf,EAAK,IACJsE,GAAY,SAAUrE,EAAI,QAAQ,EAClCiB,EAAW,QAASjB,EAAI,cAAc,EACtCe,EAAU,EACVuD,GAAY,mBAAoBtE,EAAI,KAAK,EACzCe,EAAU,CAAC,EACXwD,GAAmB,IAAKvE,EAAI,aAAc,GAAG,EAEpD,EACA,cAAe,EACf,gBAAiB,CACnB,CAAC,CACH,CACF,CACA,OAAOkE,CACT,GAAG,EAICM,IAAgC,IAAM,CACxC,MAAMA,CAAgB,CACpB,YAAYC,EAAI,CACd,KAAK,GAAKA,EACV,KAAK,WAAa,GAClB,KAAK,WAAa,IAAIN,EACtB,KAAK,cAAgB,IAAIA,EACzB,KAAK,gBAAkB,IAAIA,EAC3B,KAAK,cAAgB,CAAC,CACxB,CACA,YAAYO,EAAS,CACnB,KAAK,OAAO,CACd,CACA,QAAS,CACP,KAAK,GAAG,aAAa,EACrB,KAAK,cAAgB,KAAK,iBAAiB,CAC7C,CACA,kBAAmB,CACjB,IAAMC,EAAQ,CAAC,EACf,QAAWZ,KAAS,KAAK,KAAM,CAC7B,IAAMa,EAAiBd,GAAYC,CAAK,EAC5BY,EAAM,UAAU7C,GACnBA,EAAE,QAAU8C,CACpB,IACW,IACVD,EAAM,KAAK,CACT,MAAAZ,EACA,eAAAa,EACA,MAAO,KAAK,OAAO,SAASb,CAAK,CACnC,CAAC,CAEL,CACA,OAAOY,CACT,CACA,SAASE,EAAO,CACd,OAAK,KAAK,cACG,KAAK,cAAc,KAAKC,GAC5BD,EAAM,QAAUC,EAAE,IAC1B,IACe,OAJgB,EAKlC,CACA,SAASC,EAAM,CACb,KAAK,cAAc,KAAKA,CAAI,CAC9B,CACA,WAAWA,EAAM,CACf,KAAK,gBAAgB,KAAKA,CAAI,CAChC,CACA,QAAQC,EAAOD,EAAM,CACnB,OAAOA,EAAK,KACd,CACA,MAAO,CACL,KAAK,UAAO,SAAiCtF,EAAmB,CAC9D,OAAO,IAAKA,GAAqB+E,GAAoB9E,EAAqBuF,EAAiB,CAAC,CAC9F,CACF,CACA,MAAO,CACL,KAAK,UAAyBnF,EAAkB,CAC9C,KAAM0E,EACN,UAAW,CAAC,CAAC,mBAAmB,CAAC,EACjC,OAAQ,CACN,KAAM,OACN,MAAO,QACP,OAAQ,SACR,OAAQ,SACR,MAAO,QACP,cAAe,gBACf,WAAY,YACd,EACA,QAAS,CACP,WAAY,aACZ,cAAe,gBACf,gBAAiB,iBACnB,EACA,WAAY,GACZ,SAAU,CAAIU,CAAoB,EAClC,MAAO,EACP,KAAM,EACN,OAAQ,CAAC,CAAC,QAAS,eAAgB,EAAG,MAAM,EAAG,CAAC,EAAG,aAAa,EAAG,CAAC,EAAG,eAAe,EAAG,CAAC,QAAS,eAAgB,EAAG,QAAS,UAAW,cAAc,EAAG,CAAC,EAAG,cAAc,EAAG,CAAC,EAAG,mBAAmB,EAAG,CAAC,EAAG,cAAc,EAAG,CAAC,EAAG,SAAU,WAAY,aAAc,QAAS,iBAAkB,QAAS,UAAU,CAAC,EACtT,SAAU,SAAkCnF,EAAIC,EAAK,CAC/CD,EAAK,IACJU,EAAe,EAAG,KAAK,EACvBE,EAAW,EAAGwE,GAAmC,EAAG,EAAG,SAAU,CAAC,EAClE1E,EAAe,EAAG,MAAO,CAAC,EAAE,EAAG,KAAM,CAAC,EACtCE,EAAW,EAAGyE,GAA+B,EAAG,EAAG,KAAM,CAAC,EAC1DtE,EAAa,EAAE,EAAE,GAElBf,EAAK,IACJuE,GAAY,QAAStE,EAAI,MAAO,IAAI,EACpCe,EAAU,EACVE,EAAW,QAASjB,EAAI,OAAS,KAAO,KAAOA,EAAI,MAAM,QAAU,CAAC,EACpEe,EAAU,CAAC,EACXuD,GAAY,aAActE,EAAI,OAAS,GAAI,IAAI,EAC/CqE,GAAY,oBAAqBrE,EAAI,UAAU,EAC/Ce,EAAU,EACVE,EAAW,UAAWjB,EAAI,aAAa,EAAE,eAAgBA,EAAI,OAAO,EAE3E,EACA,aAAc,CAAIqF,GAAYnE,EAAMgD,EAAoB,EACxD,OAAQ,CAAC;AAAA,CAAmwC,EAC5wC,cAAe,EACf,gBAAiB,CACnB,CAAC,CACH,CACF,CACA,OAAOM,CACT,GAAG,EAICc,IAAqC,IAAM,CAC7C,MAAMA,CAAqB,CACzB,aAAc,CACZ,KAAK,WAAa,EACpB,CACA,YAAYZ,EAAS,CACnB,IAAMa,EAAiB,KAAK,eAAe,KAAK,OAAO,MAAM,EAAG,KAAK,OAAO,OAAO,CAAC,EAC9EC,EAAY,KAAK,WAAa,QAAU,SAC9C,KAAK,SAAW,sBAAsBA,CAAS,KAAKD,CAAc,GACpE,CAMA,eAAeE,EAAQC,EAAQ,CAE7BA,EAAO,KAAK,CAAC,EACb,IAAMC,EAAQ,CAAC,EACf,OAAAF,EAAO,QAAQ,EAAE,QAAQ,CAACG,EAAG9D,IAAM,CACjC6D,EAAM,KAAK,GAAGC,CAAC,IAAI,KAAK,MAAMF,EAAO5D,CAAC,EAAI,GAAG,CAAC,GAAG,CACnD,CAAC,EACM6D,EAAM,KAAK,IAAI,CACxB,CACA,MAAO,CACL,KAAK,UAAO,SAAsClG,EAAmB,CACnE,OAAO,IAAKA,GAAqB6F,EACnC,CACF,CACA,MAAO,CACL,KAAK,UAAyBxF,EAAkB,CAC9C,KAAMwF,EACN,UAAW,CAAC,CAAC,yBAAyB,CAAC,EACvC,OAAQ,CACN,WAAY,aACZ,OAAQ,SACR,OAAQ,SACR,MAAO,QACP,WAAY,YACd,EACA,WAAY,GACZ,SAAU,CAAIJ,CAAoB,EAClC,MAAO,EACP,KAAM,GACN,OAAQ,CAAC,CAAC,EAAG,cAAc,EAAG,CAAC,EAAG,oBAAoB,EAAG,CAAC,EAAG,mBAAmB,CAAC,EACjF,SAAU,SAAuCnF,EAAIC,EAAK,CACpDD,EAAK,IACJU,EAAe,EAAG,MAAO,CAAC,EAAE,EAAG,MAAO,CAAC,EAAE,EAAG,MAAM,EAClD2D,EAAO,CAAC,EACRtD,EAAa,EAAE,EACfJ,EAAU,EAAG,MAAO,CAAC,EACrBD,EAAe,EAAG,MAAO,CAAC,EAAE,EAAG,MAAM,EACrC2D,EAAO,CAAC,EACRtD,EAAa,EAAE,EAAE,GAElBf,EAAK,IACJuE,GAAY,SAAUtE,EAAI,WAAa,OAAYA,EAAI,OAAQ,IAAI,EAAE,QAASA,EAAI,MAAO,IAAI,EAC7FqE,GAAY,oBAAqBrE,EAAI,UAAU,EAC/Ce,EAAU,CAAC,EACX8E,GAAkB7F,EAAI,WAAW,CAAC,EAAE,eAAe,CAAC,EACpDe,EAAU,EACVuD,GAAY,aAActE,EAAI,QAAQ,EACtCe,EAAU,CAAC,EACX8E,GAAkB7F,EAAI,WAAW,CAAC,EAAE,eAAe,CAAC,EAE3D,EACA,OAAQ,CAAC;AAAA,CAA0c,EACnd,cAAe,EACf,gBAAiB,CACnB,CAAC,CACH,CACF,CACA,OAAOsF,CACT,GAAG,EAICQ,IAA+B,IAAM,CACvC,MAAMA,CAAe,CACnB,aAAc,CACZ,KAAK,WAAa,GAClB,KAAK,WAAa,GAClB,KAAK,iBAAmB,IAAI3B,EAC5B,KAAK,oBAAsB,IAAIA,EAC/B,KAAK,sBAAwB,IAAIA,EACjC,KAAK,eAAiBR,GACtB,KAAK,WAAaC,EACpB,CACA,YAAYc,EAAS,CACnB,KAAK,OAAO,CACd,CACA,QAAS,CACP,IAAIqB,EAAgB,EAChB,KAAK,aACP,KAAK,WAAa,KAAK,cAAc,GACjC,CAAC,KAAK,eAAiB,KAAK,cAAc,WAAapC,GAAe,SACpE,KAAK,aAAeC,GAAW,YACjCmC,EAAgB,EAEhBA,EAAgB,IAItB,IAAMC,EAAe,GAAKD,EAC1B,KAAK,WAAa,KAAK,MAAM,KAAK,KAAK,CAAC,EAAIC,EAAe,EAAI,EAC/D,KAAK,YAAc,CAAC,KAAK,eAAiB,KAAK,cAAc,WAAarC,GAAe,MAAQ,KAAK,MAAM,KAAK,KAAK,CAAC,EAAIoC,EAAgB,EAAI,EAAI,KAAK,UAC1J,CACA,eAAgB,CACd,OAAO,KAAK,cAAc,YAAclC,EAAU,OAASD,GAAW,YAAcA,GAAW,MACjG,CACA,MAAO,CACL,KAAK,UAAO,SAAgCnE,EAAmB,CAC7D,OAAO,IAAKA,GAAqBqG,EACnC,CACF,CACA,MAAO,CACL,KAAK,UAAyBhG,EAAkB,CAC9C,KAAMgG,EACN,UAAW,CAAC,CAAC,kBAAkB,CAAC,EAChC,OAAQ,CACN,KAAM,OACN,WAAY,aACZ,cAAe,gBACf,WAAY,aACZ,cAAe,gBACf,WAAY,YACd,EACA,QAAS,CACP,iBAAkB,mBAClB,oBAAqB,sBACrB,sBAAuB,uBACzB,EACA,WAAY,GACZ,SAAU,CAAIG,GAAmB,CAACvC,EAAc,CAAC,EAAMwB,CAAoB,EAC3E,mBAAoBgB,GACpB,MAAO,EACP,KAAM,EACN,OAAQ,CAAC,CAAC,EAAG,kBAAkB,EAAG,CAAC,EAAG,YAAY,EAAG,CAAC,QAAS,eAAgB,EAAG,aAAc,aAAc,SAAU,SAAU,QAAS,EAAG,MAAM,EAAG,CAAC,QAAS,eAAgB,EAAG,aAAc,OAAQ,QAAS,SAAU,SAAU,QAAS,gBAAiB,aAAc,gBAAiB,kBAAmB,EAAG,MAAM,EAAG,CAAC,EAAG,eAAgB,EAAG,aAAc,aAAc,SAAU,SAAU,OAAO,EAAG,CAAC,EAAG,eAAgB,EAAG,aAAc,gBAAiB,kBAAmB,aAAc,OAAQ,QAAS,SAAU,SAAU,QAAS,eAAe,CAAC,EACriB,SAAU,SAAiCnG,EAAIC,EAAK,CAC9CD,EAAK,IACJoG,GAAgB,EAChB1F,EAAe,EAAG,MAAO,CAAC,EAC1B2F,EAAe,EACf3F,EAAe,EAAG,MAAO,CAAC,EAC1B4F,GAAa,CAAC,EACdvF,EAAa,EACbH,EAAW,EAAG2F,GAAmD,EAAG,EAAG,0BAA2B,CAAC,EAAE,EAAGC,GAA6C,EAAG,EAAG,oBAAqB,CAAC,EACjLzF,EAAa,GAEdf,EAAK,IACJuE,GAAY,QAAStE,EAAI,KAAK,CAAC,EAAG,IAAI,EAAE,SAAUA,EAAI,KAAK,CAAC,EAAG,IAAI,EACnEe,EAAU,EACVyF,EAAY,QAASxG,EAAI,UAAU,EAAE,SAAUA,EAAI,KAAK,CAAC,CAAC,EAC1De,EAAU,CAAC,EACXE,EAAW,OAAQjB,EAAI,YAAcA,EAAI,aAAeA,EAAI,WAAW,WAAW,EAClFe,EAAU,EACVE,EAAW,OAAQjB,EAAI,YAAcA,EAAI,aAAeA,EAAI,WAAW,MAAM,EAEpF,EACA,aAAc,CAAIkB,EAAMsD,GAAiBc,EAAoB,EAC7D,cAAe,EACf,gBAAiB,CACnB,CAAC,CACH,CACF,CACA,OAAOQ,CACT,GAAG,EAQCW,IAAmC,IAAM,CAC3C,MAAMA,CAAmB,CACvB,YAAYtH,EAASuH,EAAM,CACzB,KAAK,QAAUvH,EACf,KAAK,KAAOuH,EACZ,KAAK,QAAU,IAAIvC,EACnB,KAAK,UAAY,GACjB,KAAK,SAAS,CAChB,CACA,SAAU,CACR,aAAa,KAAK,OAAO,CAC3B,CACA,oBAAqB,CAEnB,KAAK,KAAK,IAAI,IAAM,CAClB,KAAK,UAAY,GACjB,KAAK,QAAQ,KAAK,EAAI,CACxB,CAAC,CACH,CACA,UAAW,CACT,IAAMwC,EAAQ,IAAM,CAClB,GAAI,CAAC,KAAK,QACR,OAGF,GAAM,CACJ,aAAAC,EACA,YAAAC,CACF,EAAI,KAAK,QAAQ,cACbD,GAAgBC,GAClB,aAAa,KAAK,OAAO,EACzB,KAAK,mBAAmB,IAExB,aAAa,KAAK,OAAO,EACzB,KAAK,KAAK,kBAAkB,IAAM,CAChC,KAAK,QAAU,WAAW,IAAMF,EAAM,EAAG,GAAG,CAC9C,CAAC,EAEL,EACA,KAAK,KAAK,kBAAkB,IAAM,CAChC,KAAK,QAAU,WAAW,IAAMA,EAAM,CAAC,CACzC,CAAC,CACH,CACA,MAAO,CACL,KAAK,UAAO,SAAoClH,EAAmB,CACjE,OAAO,IAAKA,GAAqBgH,GAAuB/G,EAAqBC,EAAU,EAAMD,EAAqBoH,EAAM,CAAC,CAC3H,CACF,CACA,MAAO,CACL,KAAK,UAAyBC,GAAkB,CAC9C,KAAMN,EACN,UAAW,CAAC,CAAC,qBAAqB,CAAC,EACnC,QAAS,CACP,QAAS,SACX,EACA,WAAY,EACd,CAAC,CACH,CACF,CACA,OAAOA,CACT,GAAG,EAIH,SAASO,GAAOC,EAAO,CACrB,OAAO,SAAS,KAAKA,CAAK,IAAM,eAClC,CAIA,IAAIC,IAAmC,IAAM,CAC3C,MAAMA,CAAmB,CACvB,YAAYC,EAAcC,EAAMC,EAAIC,EAAY,CAC9C,KAAK,aAAeH,EACpB,KAAK,KAAOC,EACZ,KAAK,GAAKC,EACV,KAAK,WAAaC,EAClB,KAAK,OAAS,OACd,KAAK,WAAaC,EAAU,QAC5B,KAAK,WAAa,GAClB,KAAK,OAAS,IAAIC,CACpB,CACA,UAAW,CACLC,GAAiB,KAAK,UAAU,IAClC,KAAK,WAAa,GAEtB,CACA,iBAAkB,CAChB,KAAK,sBAAsB,EAE3B,KAAK,mBAAqB,IAAIC,GAAmB,KAAK,aAAc,KAAK,IAAI,EAC7E,KAAK,mBAAmB,QAAQ,UAAU,KAAK,OAAO,KAAK,IAAI,CAAC,CAClE,CACA,aAAc,CACZ,KAAK,aAAa,EACd,KAAK,qBACP,KAAK,mBAAmB,QAAQ,YAAY,EAC5C,KAAK,mBAAmB,QAAQ,EAEpC,CACA,YAAYC,EAAS,CACnB,KAAK,OAAO,CACd,CACA,QAAS,CAMP,GALI,KAAK,QACP,KAAK,QAAU,KAAK,UAAU,KAAK,OAAO,EAE1C,KAAK,QAAU,CAAC,EAEd,KAAK,KACP,KAAK,MAAQ,KAAK,KAAK,CAAC,EACxB,KAAK,OAAS,KAAK,KAAK,CAAC,MACpB,CACL,IAAMC,EAAO,KAAK,iBAAiB,EAC/BA,IACF,KAAK,MAAQA,EAAK,MAClB,KAAK,OAASA,EAAK,OAEvB,CAEK,KAAK,QACR,KAAK,MAAQ,KAEV,KAAK,SACR,KAAK,OAAS,KAEhB,KAAK,MAAQ,KAAK,MAAM,KAAK,KAAK,EAClC,KAAK,OAAS,KAAK,MAAM,KAAK,MAAM,EAChC,KAAK,IACP,KAAK,GAAG,aAAa,CAEzB,CACA,kBAAmB,CACjB,IAAIC,EACAC,EACEC,EAAW,KAAK,aAAa,cACnC,GAAIC,GAAkB,KAAK,UAAU,GAAKD,EAAS,aAAe,KAAM,CAEtE,IAAMH,EAAOG,EAAS,WAAW,sBAAsB,EACvDF,EAAQD,EAAK,MACbE,EAASF,EAAK,MAChB,CACA,OAAIC,GAASC,EACJ,CACL,MAAAD,EACA,OAAAC,CACF,EAEK,IACT,CAKA,aAAc,CACZ,QAASG,EAAI,EAAGA,EAAI,KAAK,QAAQ,OAAQA,IAAK,CAC5C,IAAMC,EAAI,KAAK,QAAQD,CAAC,EAKxB,GAJAC,EAAE,MAAQA,EAAE,KACRC,GAAOD,EAAE,KAAK,IAChBA,EAAE,MAAQA,EAAE,MAAM,mBAAmB,GAEnCA,EAAE,OACJ,QAASE,EAAI,EAAGA,EAAIF,EAAE,OAAO,OAAQE,IAAK,CACxC,IAAMC,EAAIH,EAAE,OAAOE,CAAC,EACpBC,EAAE,MAAQA,EAAE,KACRF,GAAOE,EAAE,KAAK,IAChBA,EAAE,MAAQA,EAAE,MAAM,mBAAmB,EAEzC,CAEJ,CACF,CACA,cAAe,CACT,KAAK,oBACP,KAAK,mBAAmB,YAAY,CAExC,CACA,uBAAwB,CACtB,GAAI,CAACL,GAAkB,KAAK,UAAU,EACpC,OAGF,IAAMM,EADSC,GAAU,OAAQ,QAAQ,EACb,KAAKC,GAAa,GAAG,CAAC,EAAE,UAAUC,GAAK,CACjE,KAAK,OAAO,EACR,KAAK,IACP,KAAK,GAAG,aAAa,CAEzB,CAAC,EACD,KAAK,mBAAqBH,CAC5B,CAMA,UAAUI,EAAM,CACd,IAAMC,EAAU,CAAC,EACjB,QAAWC,KAAQF,EAAM,CACvB,IAAMG,EAAO,CAAC,EAOd,GANID,EAAK,OAAY,SACnBC,EAAK,KAAUD,EAAK,MAElBA,EAAK,QAAa,SACpBC,EAAK,MAAWD,EAAK,OAEnBA,EAAK,SAAc,OAAW,CAChCC,EAAK,OAAY,CAAC,EAClB,QAAWC,KAAcF,EAAK,OAAW,CACvC,IAAMG,EAAiB,OAAO,OAAO,CAAC,EAAGD,CAAU,EACnDD,EAAK,OAAU,KAAKE,CAAc,CACpC,CACF,CACIH,EAAK,QAAa,SACpBC,EAAK,MAAW,KAAK,MAAM,KAAK,UAAUD,EAAK,KAAQ,CAAC,GAEtDA,EAAK,SAAc,SACrBC,EAAK,OAAYD,EAAK,QAEpBA,EAAK,SAAc,SACrBC,EAAK,OAAYD,EAAK,QAExBD,EAAQ,KAAKE,CAAI,CACnB,CACA,OAAOF,CACT,CACA,MAAO,CACL,KAAK,UAAO,SAAoCK,EAAmB,CACjE,OAAO,IAAKA,GAAqB9B,GAAuB+B,EAAqBC,EAAU,EAAMD,EAAqBE,EAAM,EAAMF,EAAqBG,EAAiB,EAAMH,EAAkBI,EAAW,CAAC,CAC1M,CACF,CACA,MAAO,CACL,KAAK,UAAyBC,EAAkB,CAC9C,KAAMpC,EACN,UAAW,CAAC,CAAC,YAAY,CAAC,EAC1B,OAAQ,CACN,QAAS,UACT,KAAM,OACN,OAAQ,SACR,WAAY,aACZ,aAAc,eACd,WAAY,YACd,EACA,QAAS,CACP,OAAQ,QACV,EACA,WAAY,GACZ,SAAU,CAAIqC,CAAoB,EAClC,MAAO,EACP,KAAM,EACN,SAAU,SAAqCC,EAAIC,EAAK,CAClDD,EAAK,GACJE,EAAU,EAAG,KAAK,CAEzB,EACA,cAAe,CACjB,CAAC,CACH,CACF,CACA,OAAOxC,CACT,GAAG,EAICyC,GAA2B,SAAUA,EAAa,CACpD,OAAAA,EAAY,IAAS,MACrBA,EAAY,OAAY,SACxBA,EAAY,KAAU,OACtBA,EAAY,MAAW,QAChBA,CACT,EAAEA,IAAe,CAAC,CAAC,EACfC,IAAmC,IAAM,CAC3C,MAAMA,CAAmB,CACvB,YAAYC,EAAS,CACnB,KAAK,WAAa,GAClB,KAAK,OAAS,EACd,KAAK,QAAUA,EAAQ,aACzB,CACA,YAAYlC,EAAS,CACnB,KAAK,OAAO,CACd,CACA,QAAS,CAIP,OAHA,KAAK,YAAc,OACnB,KAAK,WAAa,SAClB,KAAK,UAAY,GACT,KAAK,OAAQ,CACnB,KAAKgC,GAAY,IACf,KAAK,EAAI,KAAK,OACd,KAAK,EAAI,KAAK,MAAQ,EACtB,MACF,KAAKA,GAAY,OACf,KAAK,EAAI,KAAK,OACd,KAAK,EAAI,KAAK,MAAQ,EACtB,MACF,KAAKA,GAAY,KACf,KAAK,EAAI,EAAE,KAAK,OAAS,KAAK,WAAa,KAAK,QAChD,KAAK,EAAI,CAAC,KAAK,OAAS,EACxB,KAAK,UAAY,cACjB,MACF,KAAKA,GAAY,MACf,KAAK,EAAI,KAAK,OAAS,KAAK,OAC5B,KAAK,EAAI,CAAC,KAAK,OAAS,EACxB,KAAK,UAAY,cACjB,MACF,QACF,CACF,CACA,MAAO,CACL,KAAK,UAAO,SAAoCX,EAAmB,CACjE,OAAO,IAAKA,GAAqBY,GAAuBX,EAAqBC,EAAU,CAAC,CAC1F,CACF,CACA,MAAO,CACL,KAAK,UAAyBI,EAAkB,CAC9C,KAAMM,EACN,UAAW,CAAC,CAAC,IAAK,wBAAyB,EAAE,CAAC,EAC9C,OAAQ,CACN,OAAQ,SACR,MAAO,QACP,OAAQ,SACR,MAAO,QACP,OAAQ,QACV,EACA,WAAY,GACZ,SAAU,CAAIL,CAAoB,EAClC,MAAOO,GACP,MAAO,EACP,KAAM,EACN,SAAU,SAAqCN,EAAIC,EAAK,CAClDD,EAAK,IACJO,EAAe,EACfC,EAAe,EAAG,MAAM,EACxBC,EAAO,CAAC,EACRC,EAAa,GAEdV,EAAK,IACJW,EAAY,eAAgBV,EAAI,WAAW,EAAE,IAAKA,EAAI,CAAC,EAAE,IAAKA,EAAI,CAAC,EAAE,cAAeA,EAAI,UAAU,EAAE,YAAaA,EAAI,SAAS,EAC9HW,EAAU,EACVC,GAAmB,IAAKZ,EAAI,MAAO,GAAG,EAE7C,EACA,cAAe,EACf,gBAAiB,CACnB,CAAC,CACH,CACF,CACA,OAAOG,CACT,GAAG,EAIH,SAASU,GAAUC,EAAGC,EAAM,GAAI,CAC9B,OAAI,OAAOD,GAAM,SACX,OAAOA,GAAM,SACRA,EAAI,GAEJ,IAGXA,EAAIA,EAAE,KAAK,EACPA,EAAE,QAAUC,EACPD,EAEA,GAAGA,EAAE,MAAM,EAAGC,CAAG,CAAC,MAE7B,CACA,SAASC,GAAYC,EAAOC,EAAU,CACpC,GAAID,EAAM,OAASC,EAAU,CAC3B,IAAMC,EAAU,CAAC,EACXC,EAAU,KAAK,MAAMH,EAAM,OAASC,CAAQ,EAClD,QAAS,EAAI,EAAG,EAAID,EAAM,OAAQ,IAC5B,EAAIG,IAAY,GAClBD,EAAQ,KAAKF,EAAM,CAAC,CAAC,EAGzBA,EAAQE,CACV,CACA,OAAOF,CACT,CACA,SAASI,GAAaC,EAAOC,EAAWC,EAAU,CAChD,IAAMC,GAAeH,GAAS,IAAI,SAAS,EACvCI,EAAa,CAAC,EAClB,GAAI,KAAK,KAAKD,CAAW,EACvBC,EAAaD,EAAY,MAAM,KAAK,EAAE,OAAO,CAACE,EAAOC,IAAS,CAC5D,IAAMC,GAAQF,EAAM,IAAI,GAAK,IAAM,IACnC,OAAOE,EAAK,OAASD,EAAK,OAASL,EAAY,CAAC,GAAGI,EAAOE,EAAK,KAAK,EAAGD,EAAK,KAAK,CAAC,EAAI,CAAC,GAAGD,EAAOE,EAAOD,CAAI,CAC9G,EAAG,CAAC,CAAC,MACA,CACL,IAAIE,EAAa,EACjB,KAAOA,EAAaL,EAAY,QAC9BC,EAAW,KAAKD,EAAY,UAAUK,EAAYA,EAAaP,CAAS,CAAC,EACzEO,GAAcP,CAElB,CACA,OAAIG,EAAW,OAASF,IACtBE,EAAaA,EAAW,OAAO,EAAGF,CAAQ,EAC1CE,EAAWA,EAAW,OAAS,CAAC,GAAK,OAEhCA,CACT,CACA,IAAIK,GAA0B,SAAUA,EAAY,CAClD,OAAAA,EAAW,MAAW,QACtBA,EAAW,OAAY,SACvBA,EAAW,IAAS,MACbA,CACT,EAAEA,IAAc,CAAC,CAAC,EACdC,IAAoC,IAAM,CAC5C,MAAMA,CAAoB,CACxB,IAAI,sBAAuB,CACzB,OAAO,KAAK,WAAa,KAAK,MAAM,IACtC,CACA,YAAYnE,EAAY,CACtB,KAAK,WAAaA,EAClB,KAAK,cAAgB,CAAC,CAAC,EACvB,KAAK,WAAa,OAClB,KAAK,UAAY,GACjB,KAAK,cAAgB,GACrB,KAAK,cAAgB,GACrB,KAAK,YAAc,GACnB,KAAK,UAAY,GACjB,KAAK,kBAAoB,IAAIE,EAC7B,KAAK,gBAAkB,GACvB,KAAK,aAAe,GACpB,KAAK,cAAgB,EACrB,KAAK,cAAgB,EACrB,KAAK,YAAc,EACnB,KAAK,WAAagE,GAAW,OAC7B,KAAK,eAAiB,EACtB,KAAK,iBAAmB,GACxB,KAAK,OAAS,EACd,KAAK,aAAe,GACpB,KAAK,kCAAoC,EAC3C,CACA,YAAY7D,EAAS,CACnB,KAAK,OAAO,CACd,CACA,iBAAkB,CAChB,WAAW,IAAM,KAAK,WAAW,CAAC,CACpC,CACA,YAAa,CACX,GAAI,CAACK,GAAkB,KAAK,UAAU,EAAG,CAEvC,KAAK,kBAAkB,KAAK,CAC1B,OAAQ,KAAK,YACf,CAAC,EACD,MACF,CACA,IAAMF,EAAS,SAAS,KAAK,aAAa,cAAc,sBAAsB,EAAE,OAAQ,EAAE,EACtFA,IAAW,KAAK,SAClB,KAAK,OAASA,EACd,KAAK,kBAAkB,KAAK,CAC1B,OAAQ,KAAK,MACf,CAAC,EACD,WAAW,IAAM,KAAK,WAAW,CAAC,EAEtC,CACA,QAAS,CACP,IAAM4D,EAAQ,KAAK,MACnB,KAAK,MAAQ,KAAK,SAAS,EACvB,KAAK,eACP,KAAK,WAAa,KAAK,eACdA,EAAM,WAEf,KAAK,WAAaA,EAAM,WAAW,MAAMA,EAAO,KAAK,aAAa,EAElE,KAAK,WAAa,SAAUrD,EAAG,CAC7B,OAAIA,EAAE,YAAY,OAAS,OAClBA,EAAE,mBAAmB,EAEvBA,EAAE,eAAe,CAC1B,EAEF,IAAMsD,EAAQ,KAAK,YAAc,KAAK,iBAAiB,KAAK,KAAK,EAAI,KACrE,KAAK,cAAgB,KAAK,MAAM,UAAY,SAAUtD,EAAG,CACvD,OAAO,KAAK,MAAMA,CAAC,EAAI,KAAK,MAAM,UAAU,EAAI,EAClD,EAAI,KAAK,MACT,KAAK,cAAgB,GACjBsD,GAASA,IAAU,GACrB,KAAK,cAAgB,UAAUA,CAAK,IACpC,KAAK,WAAaH,GAAW,IAC7B,KAAK,gBAAkB,IAEvB,KAAK,WAAaA,GAAW,OAE/B,WAAW,IAAM,KAAK,WAAW,CAAC,CACpC,CACA,iBAAiBd,EAAO,CACtB,IAAIiB,EAAQ,EACZ,KAAK,eAAiB,EACtB,QAAS1D,EAAI,EAAGA,EAAIyC,EAAM,OAAQzC,IAAK,CACrC,IAAM2D,EAAO,KAAK,WAAWlB,EAAMzC,CAAC,CAAC,EAAE,SAAS,EAC5C4D,EAAaD,EAAK,OAClB,KAAK,YACPC,EAAa,KAAK,SAASD,CAAI,EAAE,QAE/BC,EAAa,KAAK,iBACpB,KAAK,eAAiBA,EAE1B,CACA,IAAMC,EAAM,KAAK,IAAI,KAAK,eAAgB,KAAK,gBAAgB,EACzDC,EAAY,EACZC,EAAYF,EAAMC,EACpBE,EAAYD,EACVE,EAAe,KAAK,MAAM,KAAK,MAAQxB,EAAM,MAAM,EAEzD,KAAOuB,EAAYC,GAAgBP,EAAQ,KACzCA,GAAS,GACTM,EAAY,KAAK,IAAIN,GAAS,KAAK,GAAK,IAAI,EAAIK,EAElD,IAAIG,EAAc,GAClB,GAAI,KAAK,qBAAsB,CAC7B,IAAMC,EAAc,KAAK,MAAM,OAAO,CAACC,EAASC,IAAYA,EAAQ,OAASD,EAAQ,OAASC,EAAUD,EAAS,EAAE,EAEnHF,EAAc,IADI,KAAK,WAAWC,CAAW,EACf,QAAU,GACxC,KAAK,kCAAoC,KAAK,4BAA4BA,CAAW,CACvF,CACA,IAAMG,EAAiBZ,IAAU,EAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAIA,EAAQ,KAAK,GAAK,GAAG,CAAC,EAAI,KAAK,cAAgBI,EAAW,EAAE,EAAII,EAChI,YAAK,aAAe,KAAK,IAAII,EAAgB,GAAG,EACzCZ,CACT,CACA,UAAW,CACT,IAAIjB,EACEC,EAAW,KAAK,YAAY,EAAE,EAC9B6B,EAAgB,KAAK,YAAY,GAAG,EAC1C,OAAI,KAAK,WACP9B,EAAQ,KAAK,WACJ,KAAK,MAAM,MACpBA,EAAQ,KAAK,MAAM,MAAM,MAAM,KAAK,MAAO,CAAC8B,CAAa,CAAC,GAE1D9B,EAAQ,KAAK,MAAM,OAAO,EAC1BA,EAAQD,GAAYC,EAAOC,CAAQ,GAE9BD,CACT,CACA,YAAY+B,EAAW,CACrB,OAAO,KAAK,MAAM,KAAK,MAAQA,CAAS,CAC1C,CACA,cAAcb,EAAM,CAClB,MAAO,aAAe,KAAK,cAAcA,CAAI,EAAI,IAAM,KAAK,gBAAkB,GAChF,CACA,mBAAoB,CAClB,MAAO,eAAe,CAAC,KAAK,gBAAkB,CAAC,GACjD,CACA,SAASb,EAAO,CACd,OAAO,KAAK,UAAYT,GAAUS,EAAO,KAAK,aAAa,EAAIA,CACjE,CACA,4BAA4B2B,EAAc,CACxC,GAAI,KAAK,MAAM,UAAW,CAExB,IAAMC,EAAgB,KAAK,MAAM,KAAK,MAAM,UAAU,EAAI,CAAqB,EACzEC,EAAgBF,EAAa,MAAM,EAAGC,CAAa,EACzD,OAAO,KAAK,IAAIC,EAAc,OAAQ,KAAK,aAAa,CAC1D,CACA,OAAO,KAAK,aACd,CACA,WAAW7B,EAAO,CAChB,GAAIA,EAAM,SAAS,EAAE,OAAS,KAAK,eAAiB,KAAK,MAAM,UAAW,CAExE,IAAIE,EAAW,KAAK,YAAc,KAAK,MAAM,KAAK,MAAM,KAAK,EAAI,EAAE,EAAI,EACvE,GAAIA,GAAY,EACd,MAAO,CAAC,KAAK,SAASF,CAAK,CAAC,EAE9B,IAAI8B,EAAuB,KAAK,IAAI,KAAK,kCAAmC,KAAK,aAAa,EAC9F,OAAK7E,GAAkB,KAAK,UAAU,IACpC6E,EAAuB,KAAK,MAAM,KAAK,IAAI,KAAK,aAAe,EAAiB,KAAK,IAAI,KAAK,kCAAmC,KAAK,aAAa,CAAC,CAAC,GAEvJ5B,EAAW,KAAK,IAAIA,EAAU,CAAe,EAC/BH,GAAaC,EAAO8B,EAAsB5B,EAAW,EAAI,EAAIA,CAAQ,CAErF,CACA,MAAO,CAAC,KAAK,SAASF,CAAK,CAAC,CAC9B,CACA,MAAO,CACL,KAAK,UAAO,SAAqC/B,EAAmB,CAClE,OAAO,IAAKA,GAAqByC,GAAwBxC,EAAkBI,EAAW,CAAC,CACzF,CACF,CACA,MAAO,CACL,KAAK,UAAyBC,EAAkB,CAC9C,KAAMmC,EACN,UAAW,CAAC,CAAC,IAAK,0BAA2B,EAAE,CAAC,EAChD,UAAW,SAAmCjC,EAAIC,EAAK,CAIrD,GAHID,EAAK,GACJsD,GAAYC,GAAK,CAAC,EAEnBvD,EAAK,EAAG,CACV,IAAIwD,EACDC,GAAeD,EAAQE,GAAY,CAAC,IAAMzD,EAAI,aAAeuD,EAAG,MACrE,CACF,EACA,OAAQ,CACN,MAAO,QACP,OAAQ,SACR,cAAe,gBACf,WAAY,aACZ,WAAY,aACZ,UAAW,YACX,cAAe,gBACf,eAAgB,iBAChB,cAAe,gBACf,eAAgB,iBAChB,MAAO,QACP,YAAa,cACb,UAAW,WACb,EACA,QAAS,CACP,kBAAmB,mBACrB,EACA,WAAY,GACZ,SAAU,CAAIzD,CAAoB,EAClC,MAAO4D,GACP,MAAO,EACP,KAAM,EACN,OAAQ,CAAC,CAAC,UAAW,EAAE,EAAG,CAAC,oBAAqB,EAAE,EAAG,CAAC,qBAAsB,EAAE,EAAG,CAAC,QAAS,OAAQ,EAAG,QAAS,SAAS,EAAG,CAAC,EAAG,QAAS,SAAS,EAAG,CAAC,EAAG,MAAM,EAAG,CAAC,EAAG,MAAM,EAAG,CAAC,eAAgB,OAAQ,YAAa,MAAM,EAAG,CAAC,EAAG,OAAQ,WAAY,UAAU,EAAG,CAAC,IAAK,IAAK,EAAG,QAAS,SAAS,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,KAAM,IAAK,EAAG,gBAAiB,wBAAwB,CAAC,EAC1W,SAAU,SAAsC3D,EAAIC,EAAK,CACnDD,EAAK,IACJO,EAAe,EACfC,EAAe,EAAG,IAAK,KAAM,CAAC,EAC9BoD,EAAW,EAAGC,GAAuC,EAAG,EAAG,IAAK,CAAC,EACjEnD,EAAa,EACbkD,EAAW,EAAGE,GAAuC,EAAG,EAAG,IAAK,CAAC,GAElE9D,EAAK,IACJY,EAAU,CAAC,EACXmD,EAAW,UAAW9D,EAAI,KAAK,EAC/BW,EAAU,EACVmD,EAAW,UAAW9D,EAAI,KAAK,EAEtC,EACA,aAAc,CAAI+D,GAAYC,CAAI,EAClC,cAAe,EACf,gBAAiB,CACnB,CAAC,CACH,CACF,CACA,OAAOhC,CACT,GAAG,EAICiC,IAA+B,IAAM,CACvC,MAAMA,CAAe,CACnB,aAAc,CACZ,KAAK,YAAc,GACnB,KAAK,cAAgB,GACrB,KAAK,QAAU/D,GAAY,OAC3B,KAAK,YAAc,EACnB,KAAK,UAAY,GACjB,KAAK,kBAAoB,IAAInC,EAC7B,KAAK,eAAiB,SACtB,KAAK,YAAc,EACnB,KAAK,KAAO,OACZ,KAAK,OAAS,SACd,KAAK,WAAa,OAClB,KAAK,YAAc,OACnB,KAAK,QAAU,EACf,KAAK,YAAcmC,EACrB,CACA,YAAYhC,EAAS,CACnB,KAAK,OAAO,CACd,CACA,QAAS,CACP,KAAK,UAAY,eAAe,KAAK,YAAc,KAAK,QAAU,KAAK,KAAK,MAAM,IAC9E,OAAO,KAAK,eAAmB,MACjC,KAAK,cAAgB,CAAC,KAAK,cAAc,EAE7C,CACA,gBAAgB,CACd,OAAAG,CACF,EAAG,CACD,IAAM6F,EAAiB7F,EAAS,GAAK,EACjC6F,IAAmB,KAAK,cAC1B,KAAK,YAAcA,EACnB,WAAW,IAAM,CACf,KAAK,kBAAkB,KAAK,CAC1B,OAAA7F,CACF,CAAC,CACH,EAAG,CAAC,EAER,CACA,MAAO,CACL,KAAK,UAAO,SAAgCkB,EAAmB,CAC7D,OAAO,IAAKA,GAAqB0E,EACnC,CACF,CACA,MAAO,CACL,KAAK,UAAyBpE,EAAkB,CAC9C,KAAMoE,EACN,UAAW,CAAC,CAAC,IAAK,oBAAqB,EAAE,CAAC,EAC1C,UAAW,SAA8BlE,EAAIC,EAAK,CAIhD,GAHID,EAAK,GACJsD,GAAYrB,GAAqB,CAAC,EAEnCjC,EAAK,EAAG,CACV,IAAIwD,EACDC,GAAeD,EAAQE,GAAY,CAAC,IAAMzD,EAAI,eAAiBuD,EAAG,MACvE,CACF,EACA,OAAQ,CACN,OAAQ,SACR,KAAM,OACN,UAAW,YACX,YAAa,cACb,cAAe,gBACf,eAAgB,iBAChB,cAAe,gBACf,UAAW,YACX,UAAW,YACX,MAAO,QACP,eAAgB,iBAChB,QAAS,UACT,YAAa,cACb,UAAW,WACb,EACA,QAAS,CACP,kBAAmB,mBACrB,EACA,WAAY,GACZ,SAAU,CAAIzD,CAAoB,EAClC,MAAOqE,GACP,MAAO,EACP,KAAM,EACN,OAAQ,CAAC,CAAC,0BAA2B,GAAI,EAAG,YAAa,cAAe,gBAAiB,iBAAkB,gBAAiB,aAAc,QAAS,SAAU,gBAAiB,iBAAkB,QAAS,aAAc,YAAa,oBAAqB,EAAG,MAAM,EAAG,CAAC,wBAAyB,GAAI,EAAG,QAAS,SAAU,SAAU,SAAU,QAAS,EAAG,MAAM,EAAG,CAAC,0BAA2B,GAAI,EAAG,oBAAqB,YAAa,cAAe,gBAAiB,iBAAkB,gBAAiB,aAAc,QAAS,SAAU,gBAAiB,iBAAkB,QAAS,aAAc,WAAW,EAAG,CAAC,wBAAyB,GAAI,EAAG,QAAS,SAAU,SAAU,SAAU,OAAO,CAAC,EACnqB,SAAU,SAAiCpE,EAAIC,EAAK,CAC9CD,EAAK,IACJO,EAAe,EACfC,EAAe,EAAG,GAAG,EACrBoD,EAAW,EAAGS,GAAkC,EAAG,GAAI,IAAK,CAAC,EAAE,EAAGC,GAAkC,EAAG,EAAG,IAAK,CAAC,EAChH5D,EAAa,GAEdV,EAAK,IACJW,EAAY,QAASV,EAAI,cAAc,EAAE,YAAaA,EAAI,SAAS,EACnEW,EAAU,EACVmD,EAAW,OAAQ9D,EAAI,MAAM,EAC7BW,EAAU,EACVmD,EAAW,OAAQ9D,EAAI,SAAS,EAEvC,EACA,aAAc,CAAIgE,EAAM7D,GAAoB6B,EAAmB,EAC/D,cAAe,EACf,gBAAiB,CACnB,CAAC,CACH,CACF,CACA,OAAOiC,CACT,GAAG,EAWH,SAASK,GAAYC,EAAGC,EAAGC,EAAGC,EAAGC,EAAG,CAACC,EAAIC,EAAIC,EAAIC,CAAE,EAAG,CACpD,IAAIC,EAAS,GACb,OAAAP,EAAI,KAAK,MAAMA,CAAC,EAChBC,EAAI,KAAK,MAAMA,CAAC,EAChBD,EAAIA,IAAM,EAAI,EAAIA,EAClBC,EAAIA,IAAM,EAAI,EAAIA,EAClBM,EAAS,IAAI,CAACT,EAAII,EAAGH,CAAC,CAAC,GACvBQ,GAAU,IAAIP,EAAI,EAAIE,CAAC,GACnBE,EACFG,GAAU,IAAI,CAACL,EAAGA,CAAC,CAAC,UAAU,CAACA,EAAGA,CAAC,CAAC,GAEpCK,GAAU,IAAIL,CAAC,IAAIA,CAAC,GAEtBK,GAAU,IAAIN,EAAI,EAAIC,CAAC,GACnBI,EACFC,GAAU,IAAI,CAACL,EAAGA,CAAC,CAAC,UAAU,CAAC,CAACA,EAAGA,CAAC,CAAC,GAErCK,GAAU,IAAIL,CAAC,IAAI,CAACA,CAAC,GAEvBK,GAAU,IAAI,EAAIL,EAAIF,CAAC,GACnBK,EACFE,GAAU,IAAI,CAACL,EAAGA,CAAC,CAAC,UAAU,CAAC,CAACA,EAAG,CAACA,CAAC,CAAC,GAEtCK,GAAU,IAAI,CAACL,CAAC,IAAI,CAACA,CAAC,GAExBK,GAAU,IAAI,EAAIL,EAAID,CAAC,GACnBE,EACFI,GAAU,IAAI,CAACL,EAAGA,CAAC,CAAC,UAAU,CAACA,EAAG,CAACA,CAAC,CAAC,GAErCK,GAAU,IAAI,CAACL,CAAC,IAAIA,CAAC,GAEvBK,GAAU,IACHA,CACT,CACA,IAAIC,IAAoC,IAAM,CAC5C,MAAMA,CAAoB,CACxB,YAAYpH,EAAY,CACtB,KAAK,WAAaA,EAClB,KAAK,cAAgB,CAAC,CAAC,EACvB,KAAK,WAAa,OAClB,KAAK,UAAY,GACjB,KAAK,cAAgB,GACrB,KAAK,cAAgB,GACrB,KAAK,cAAgB,GACrB,KAAK,aAAe,GACpB,KAAK,UAAY,GACjB,KAAK,kBAAoB,IAAIE,EAC7B,KAAK,cAAgB,EACrB,KAAK,YAAc,EACnB,KAAK,gBAAkB,GACvB,KAAK,WAAagE,GAAW,OAC7B,KAAK,MAAQ,EACb,KAAK,cAAgB,EACrB,KAAK,aAAe,GACpB,KAAK,oBAAsB,EAC3B,KAAK,YAAc7B,EACrB,CACA,YAAYhC,EAAS,CACnB,KAAK,OAAO,CACd,CACA,iBAAkB,CAChB,WAAW,IAAM,KAAK,WAAW,CAAC,CACpC,CACA,YAAa,CACX,GAAI,CAACK,GAAkB,KAAK,UAAU,EAAG,CAEvC,KAAK,MAAQ,KAAK,wBAAwB,EAC1C,KAAK,kBAAkB,KAAK,CAC1B,MAAO,KAAK,KACd,CAAC,EACD,MACF,CACA,IAAMH,EAAQ,SAAS,KAAK,aAAa,cAAc,sBAAsB,EAAE,MAAO,EAAE,EACpFA,IAAU,KAAK,QACjB,KAAK,MAAQA,EACb,KAAK,kBAAkB,KAAK,CAC1B,MAAAA,CACF,CAAC,EACD,WAAW,IAAM,KAAK,WAAW,CAAC,EAEtC,CACA,QAAS,CACP,IAAM6D,EAAQ,KAAK,MACbiD,EAAO,KAAK,SAAWhF,GAAY,KAAO,KAAK,SAAWA,GAAY,MAAQ,GAAK,EAkCzF,OAjCA,KAAK,YAAc,KAAK,IAAI,KAAK,cAAe,CAAC,EAAI,KAAK,YAC1D,KAAK,MAAQ,KAAK,SAAS,EACvB,KAAK,eACP,KAAK,WAAa,KAAK,eACd+B,EAAM,WAEf,KAAK,WAAaA,EAAM,WAAW,MAAMA,EAAO,KAAK,aAAa,EAElE,KAAK,WAAa,SAAUrD,EAAG,CAC7B,OAAIA,EAAE,YAAY,OAAS,OAClBA,EAAE,mBAAmB,EAEvBA,EAAE,eAAe,CAC1B,EAEF,KAAK,cAAgBqD,EAAM,UAAYrD,GAAK,CAE1C,IAAMuG,EAAiBlD,EAAMrD,CAAC,EAAIqD,EAAM,UAAU,EAAI,GACtD,GAAI,KAAK,WAAarD,EAAE,SAAS,EAAE,OAAS,KAAK,cAAe,CAC9D,IAAMwG,EAAe,KAAK,WAAWxG,CAAC,EAAE,OACxC,GAAIwG,IAAiB,EACnB,OAAOD,EAET,IAAME,EAAYpD,EAAM,UAAU,EAC5BqD,EAAgBF,EAAe,EAC/BG,EAAqBF,EAAY,GAAMC,EAAgB,GAC7D,OAAOrD,EAAMrD,CAAC,EAAI2G,CACpB,CACA,OAAOJ,CACT,EAAIlD,EACA,KAAK,cAAgB,KAAK,gBAC5B,KAAK,kBAAkB,EAEjB,KAAK,OAAQ,CACnB,KAAK/B,GAAY,IACf,KAAK,UAAY,SAAUiC,EAAM,CAC/B,MAAO,aAAe,KAAK,cAAcA,CAAI,EAAI,KACnD,EACA,KAAK,WAAaJ,GAAW,OAC7B,KAAK,GAAK,KAAK,cAAgBmD,EAC/B,KAAK,GAAK,KAAK,YAAcA,EAC7B,KAAK,GAAKA,EAAO,EAAI,MAAQ,QAC7B,MACF,KAAKhF,GAAY,OACf,KAAK,UAAY,SAAUiC,EAAM,CAC/B,MAAO,aAAe,KAAK,cAAcA,CAAI,EAAI,KACnD,EACA,KAAK,WAAaJ,GAAW,OAC7B,KAAK,GAAK,KAAK,cAAgBmD,EAC/B,KAAK,GAAK,KAAK,YAAcA,EAC7B,KAAK,GAAKA,EAAO,EAAI,MAAQ,QAC7B,MACF,KAAKhF,GAAY,KACf,KAAK,UAAY,SAAUiC,EAAM,CAC/B,MAAO,eAAiB,KAAK,cAAcA,CAAI,EAAI,GACrD,EACA,KAAK,WAAaJ,GAAW,IAC7B,KAAK,GAAK,KAAK,cAAgB,CAACmD,EAChC,KAAK,GAAK,KAAK,YAAc,CAACA,EAC9B,KAAK,GAAK,QACV,MACF,KAAKhF,GAAY,MACf,KAAK,UAAY,SAAUiC,EAAM,CAC/B,MAAO,eAAiB,KAAK,cAAcA,CAAI,EAAI,GACrD,EACA,KAAK,WAAaJ,GAAW,MAC7B,KAAK,GAAK,KAAK,cAAgB,CAACmD,EAChC,KAAK,GAAK,KAAK,YAAc,CAACA,EAC9B,KAAK,GAAK,QACV,MACF,QACF,CACA,WAAW,IAAM,KAAK,WAAW,CAAC,CACpC,CACA,mBAAoB,CAClB,KAAK,OAAS,KAAK,cAAc,KAAK,IAAI,MAAM,KAAM,KAAK,eAAe,IAAI/F,GAAQA,EAAK,KAAK,CAAC,CAAC,EAClG,KAAK,OAAS,KAAK,cAAc,KAAK,IAAI,MAAM,KAAM,KAAK,eAAe,IAAIA,GAAQA,EAAK,KAAK,CAAC,CAAC,EAClG,KAAK,oBAAsB,KAAK,eAAe,OAC/C,KAAK,kBAAoBmF,GAAY,EAAG,KAAK,OAAQ,KAAK,cAAe,KAAK,OAAS,KAAK,OAAQ,EAAG,CAAC,GAAO,GAAO,GAAO,EAAK,CAAC,CACrI,CACA,UAAW,CACT,IAAIrD,EACEC,EAAW,KAAK,YAAY,EAAE,EAC9B6B,EAAgB,KAAK,YAAY,EAAE,EACzC,OAAI,KAAK,WACP9B,EAAQ,KAAK,WACJ,KAAK,MAAM,MACpBA,EAAQ,KAAK,MAAM,MAAM,MAAM,KAAK,MAAO,CAAC8B,CAAa,CAAC,GAE1D9B,EAAQ,KAAK,MAAM,OAAO,EAC1BA,EAAQD,GAAYC,EAAOC,CAAQ,GAE9BD,CACT,CACA,YAAYuE,EAAY,CACtB,OAAO,KAAK,MAAM,KAAK,OAASA,CAAU,CAC5C,CACA,cAAcrD,EAAM,CAClB,MAAO,aAAa,KAAK,cAAcA,CAAI,CAAC,IAAI,KAAK,eAAe,GACtE,CACA,mBAAoB,CAClB,MAAO,gBACT,CACA,SAASb,EAAO,CACd,OAAO,KAAK,UAAYT,GAAUS,EAAO,KAAK,aAAa,EAAIA,CACjE,CACA,yBAA0B,CAGxB,OAFiB,KAAK,IAAI,GAAG,KAAK,MAAM,IAAImE,GAAK,KAAK,SAAS,KAAK,WAAWA,CAAC,CAAC,EAAE,MAAM,CAAC,EACxE,CAEpB,CACA,WAAWnE,EAAO,CAChB,GAAIA,EAAM,SAAS,EAAE,OAAS,KAAK,eAAiB,KAAK,MAAM,UAAW,CAExE,IAAMoE,EAAiB,KAAK,cACtBlE,EAAW,KAAK,MAAM,KAAK,MAAM,UAAU,EAAI,EAAE,EACvD,OAAIA,GAAY,EACP,CAAC,KAAK,SAASF,CAAK,CAAC,EAEvBD,GAAaC,EAAOoE,EAAgB,KAAK,IAAIlE,EAAU,CAAC,CAAC,CAClE,CACA,MAAO,CAAC,KAAK,WAAWF,CAAK,CAAC,CAChC,CACA,MAAO,CACL,KAAK,UAAO,SAAqC/B,EAAmB,CAClE,OAAO,IAAKA,GAAqB0F,GAAwBzF,EAAkBI,EAAW,CAAC,CACzF,CACF,CACA,MAAO,CACL,KAAK,UAAyBC,EAAkB,CAC9C,KAAMoF,EACN,UAAW,CAAC,CAAC,IAAK,0BAA2B,EAAE,CAAC,EAChD,UAAW,SAAmClF,EAAIC,EAAK,CAIrD,GAHID,EAAK,GACJsD,GAAYC,GAAK,CAAC,EAEnBvD,EAAK,EAAG,CACV,IAAIwD,EACDC,GAAeD,EAAQE,GAAY,CAAC,IAAMzD,EAAI,aAAeuD,EAAG,MACrE,CACF,EACA,OAAQ,CACN,MAAO,QACP,OAAQ,SACR,cAAe,gBACf,WAAY,aACZ,WAAY,aACZ,UAAW,YACX,cAAe,gBACf,eAAgB,iBAChB,cAAe,gBACf,cAAe,gBACf,OAAQ,SACR,eAAgB,iBAChB,cAAe,gBACf,aAAc,eACd,UAAW,WACb,EACA,QAAS,CACP,kBAAmB,mBACrB,EACA,WAAY,GACZ,SAAU,CAAIzD,CAAoB,EAClC,MAAO6F,GACP,MAAO,EACP,KAAM,EACN,OAAQ,CAAC,CAAC,UAAW,EAAE,EAAG,CAAC,oBAAqB,EAAE,EAAG,CAAC,qBAAsB,EAAE,EAAG,CAAC,QAAS,OAAQ,EAAG,QAAS,SAAS,EAAG,CAAC,QAAS,iBAAkB,EAAG,MAAM,EAAG,CAAC,EAAG,QAAS,SAAS,EAAG,CAAC,EAAG,MAAM,EAAG,CAAC,EAAG,MAAM,EAAG,CAAC,eAAgB,MAAM,EAAG,CAAC,EAAG,OAAQ,WAAY,UAAU,EAAG,CAAC,EAAG,OAAQ,UAAU,EAAG,CAAC,IAAK,IAAK,EAAG,QAAS,SAAS,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,EAAG,gBAAgB,EAAG,CAAC,QAAS,yCAA0C,KAAM,IAAK,EAAG,MAAM,EAAG,CAAC,KAAM,IAAK,EAAG,gBAAiB,0BAA0B,EAAG,CAAC,KAAM,IAAK,EAAG,eAAgB,0BAA0B,EAAG,CAAC,EAAG,eAAe,CAAC,EAC5kB,SAAU,SAAsC5F,EAAIC,EAAK,CACnDD,EAAK,IACJO,EAAe,EACfC,EAAe,EAAG,IAAK,KAAM,CAAC,EAC9BoD,EAAW,EAAGiC,GAAuC,EAAG,EAAG,IAAK,CAAC,EACjEnF,EAAa,EACbkD,EAAW,EAAGkC,GAA0C,EAAG,EAAG,OAAQ,CAAC,EAAE,EAAGC,GAAuC,EAAG,EAAG,IAAK,CAAC,EAAE,EAAGC,GAAuC,EAAG,EAAG,IAAK,CAAC,GAExLhG,EAAK,IACJY,EAAU,CAAC,EACXmD,EAAW,UAAW9D,EAAI,KAAK,EAC/BW,EAAU,EACVmD,EAAW,OAAQ9D,EAAI,oBAAsB,GAAKA,EAAI,QAAUA,EAAI,QAAUA,EAAI,YAAY,EAC9FW,EAAU,EACVmD,EAAW,UAAW9D,EAAI,KAAK,EAC/BW,EAAU,EACVmD,EAAW,UAAW9D,EAAI,cAAc,EAE/C,EACA,aAAc,CAAI+D,GAAYC,CAAI,EAClC,cAAe,EACf,gBAAiB,CACnB,CAAC,CACH,CACF,CACA,OAAOiB,CACT,GAAG,EAICe,IAA+B,IAAM,CACvC,MAAMA,CAAe,CACnB,aAAc,CACZ,KAAK,cAAgB,GACrB,KAAK,QAAU9F,GAAY,KAC3B,KAAK,YAAc,EACnB,KAAK,UAAY,GACjB,KAAK,kBAAoB,IAAInC,EAC7B,KAAK,eAAiB,SACtB,KAAK,YAAc,GACnB,KAAK,KAAO,OACZ,KAAK,OAAS,OACd,KAAK,WAAa,OAClB,KAAK,YAAc,EACnB,KAAK,QAAU,CACjB,CACA,YAAYG,EAAS,CACnB,KAAK,OAAO,CACd,CACA,QAAS,CACP,KAAK,OAAS,EAAE,KAAK,YAAc,KAAK,SACpC,KAAK,UAAYgC,GAAY,OAC/B,KAAK,YAAc,GACnB,KAAK,UAAY,aAAa,KAAK,OAAS,KAAK,KAAK,KAAK,SAE3D,KAAK,UAAY,aAAa,KAAK,MAAM,QAEvC,KAAK,iBAAmB,SAC1B,KAAK,cAAgB,CAAC,KAAK,cAAc,EAE7C,CACA,eAAe,CACb,MAAA9B,CACF,EAAG,CACGA,IAAU,KAAK,aAAe,KAAK,UAAY8B,GAAY,OAC7D,KAAK,YAAc9B,EAAQ,KAAK,YAChC,WAAW,IAAM,CACf,KAAK,kBAAkB,KAAK,CAC1B,MAAAA,CACF,CAAC,CACH,EAAG,CAAC,GACKA,IAAU,KAAK,cACxB,KAAK,YAAcA,EACnB,WAAW,IAAM,CACf,KAAK,kBAAkB,KAAK,CAC1B,MAAAA,CACF,CAAC,CACH,EAAG,CAAC,EAER,CACA,MAAO,CACL,KAAK,UAAO,SAAgCmB,EAAmB,CAC7D,OAAO,IAAKA,GAAqByG,EACnC,CACF,CACA,MAAO,CACL,KAAK,UAAyBnG,EAAkB,CAC9C,KAAMmG,EACN,UAAW,CAAC,CAAC,IAAK,oBAAqB,EAAE,CAAC,EAC1C,UAAW,SAA8BjG,EAAIC,EAAK,CAIhD,GAHID,EAAK,GACJsD,GAAY4B,GAAqB,CAAC,EAEnClF,EAAK,EAAG,CACV,IAAIwD,EACDC,GAAeD,EAAQE,GAAY,CAAC,IAAMzD,EAAI,eAAiBuD,EAAG,MACvE,CACF,EACA,OAAQ,CACN,OAAQ,SACR,KAAM,OACN,UAAW,YACX,cAAe,gBACf,eAAgB,iBAChB,MAAO,QACP,cAAe,gBACf,UAAW,YACX,UAAW,YACX,eAAgB,iBAChB,QAAS,UACT,eAAgB,iBAChB,aAAc,eACd,cAAe,gBACf,YAAa,cACb,UAAW,WACb,EACA,QAAS,CACP,kBAAmB,mBACrB,EACA,WAAY,GACZ,SAAU,CAAIzD,CAAoB,EAClC,MAAOmG,GACP,MAAO,EACP,KAAM,EACN,OAAQ,CAAC,CAAC,0BAA2B,GAAI,EAAG,YAAa,gBAAiB,iBAAkB,gBAAiB,aAAc,aAAc,QAAS,SAAU,gBAAiB,gBAAiB,iBAAkB,eAAgB,gBAAiB,SAAU,YAAa,oBAAqB,EAAG,MAAM,EAAG,CAAC,wBAAyB,GAAI,EAAG,QAAS,SAAU,SAAU,SAAU,QAAS,EAAG,MAAM,EAAG,CAAC,0BAA2B,GAAI,EAAG,oBAAqB,YAAa,gBAAiB,iBAAkB,gBAAiB,aAAc,aAAc,QAAS,SAAU,gBAAiB,gBAAiB,iBAAkB,eAAgB,gBAAiB,SAAU,WAAW,EAAG,CAAC,wBAAyB,GAAI,EAAG,QAAS,SAAU,SAAU,SAAU,OAAO,CAAC,EAC3uB,SAAU,SAAiClG,EAAIC,EAAK,CAC9CD,EAAK,IACJO,EAAe,EACfC,EAAe,EAAG,GAAG,EACrBoD,EAAW,EAAGuC,GAAkC,EAAG,GAAI,IAAK,CAAC,EAAE,EAAGC,GAAkC,EAAG,EAAG,IAAK,CAAC,EAChH1F,EAAa,GAEdV,EAAK,IACJW,EAAY,QAASV,EAAI,cAAc,EAAE,YAAaA,EAAI,SAAS,EACnEW,EAAU,EACVmD,EAAW,OAAQ9D,EAAI,MAAM,EAC7BW,EAAU,EACVmD,EAAW,OAAQ9D,EAAI,SAAS,EAEvC,EACA,aAAc,CAAIgE,EAAM7D,GAAoB8E,EAAmB,EAC/D,cAAe,EACf,gBAAiB,CACnB,CAAC,CACH,CACF,CACA,OAAOe,CACT,GAAG,EAICI,IAA2B,IAAM,CACnC,MAAMA,CAAW,CACf,MAAO,CACL,KAAK,UAAO,SAA4B7G,EAAmB,CACzD,OAAO,IAAKA,GAAqB6G,EACnC,CACF,CACA,MAAO,CACL,KAAK,UAAyBC,GAAiB,CAC7C,KAAMD,CACR,CAAC,CACH,CACA,MAAO,CACL,KAAK,UAAyBE,GAAiB,CAC7C,QAAS,CAACC,EAAY,CACxB,CAAC,CACH,CACF,CACA,OAAOH,CACT,GAAG,EAICI,GAA0B,SAAUA,EAAY,CAClD,OAAAA,EAAW,QAAa,UACxBA,EAAW,QAAa,UACjBA,CACT,EAAEA,IAAc,CAAC,CAAC,EACdC,GAAyB,SAAUA,EAAW,CAChD,OAAAA,EAAUA,EAAU,IAAS,KAAK,EAAI,MACtCA,EAAUA,EAAU,MAAW,OAAO,EAAI,QAC1CA,EAAUA,EAAU,UAAe,WAAW,EAAI,YAC3CA,CACT,EAAEA,IAAa,CAAC,CAAC,EACbC,IAAiC,IAAM,CACzC,MAAMA,CAAiB,CACrB,IAAI,iBAAkB,CACpB,OAAO,KAAK,mBAAqBD,GAAU,KAAO,KAAK,mBAAqBA,GAAU,KACxF,CACA,IAAI,iBAAkB,CACpB,OAAO,KAAK,mBAAqBA,GAAU,KAAO,KAAK,mBAAqBA,GAAU,SACxF,CACA,YAAYE,EAAgBC,EAAkBC,EAAU,CACtD,KAAK,eAAiBF,EACtB,KAAK,iBAAmBC,EACxB,KAAK,SAAWC,EAChB,KAAK,gBAAkB,GACvB,KAAK,oBAAsB,GAC3B,KAAK,eAAiB,GACtB,KAAK,gBAAkB,GACvB,KAAK,iBAAmB,GACxB,KAAK,iBAAmBC,EAAe,IACvC,KAAK,iBAAmBA,EAAe,OACvC,KAAK,YAAcN,GAAW,QAC9B,KAAK,2BAA6B,GAClC,KAAK,yBAA2B,GAChC,KAAK,mBAAqB,IAC1B,KAAK,mBAAqB,IAC1B,KAAK,iBAAmBC,GAAU,IAClC,KAAK,qBAAuB,GAC5B,KAAK,KAAO,IAAI1I,EAChB,KAAK,KAAO,IAAIA,CAClB,CACA,aAAc,CACZ,KAAK,YAAY,EAAI,CACvB,CACA,SAAU,CACJ,KAAK,iBACP,KAAK,YAAY,CAErB,CACA,QAAS,CACH,KAAK,iBACP,KAAK,YAAY,EAAI,CAEzB,CACA,cAAe,CACT,KAAK,iBACP,KAAK,YAAY,CAErB,CACA,aAAagJ,EAAQ,CACnB,GAAI,KAAK,iBAAmB,KAAK,yBAA0B,CAEzD,GADA,aAAa,KAAK,OAAO,EACrB,KAAK,WACY,KAAK,UAAU,SAAS,QAAQ,cACvB,SAASA,CAAM,EAC7B,OAEhB,KAAK,YAAY,KAAK,oBAAoB,CAC5C,CACF,CACA,cAAe,CACT,KAAK,iBACP,KAAK,YAAY,EAAI,CAEzB,CACA,YAAYC,EAAW,CACrB,GAAI,KAAK,WAAa,KAAK,gBAAiB,OAC5C,IAAMC,EAAOD,EAAY,EAAI,KAAK,oBAAsB,UAAU,UAAU,MAAM,+BAA+B,EAAI,IAAM,GAC3H,aAAa,KAAK,OAAO,EACzB,KAAK,QAAU,WAAW,IAAM,CAC9B,KAAK,eAAe,WAAW,EAC/B,IAAME,EAAU,KAAK,mBAAmB,EACxC,KAAK,UAAY,KAAK,eAAe,OAAOA,CAAO,EAEnD,WAAW,IAAM,CACX,KAAK,WACP,KAAK,iBAAiB,KAAK,UAAU,SAAS,QAAQ,aAAa,CAEvE,EAAG,EAAE,EACL,KAAK,KAAK,KAAK,EAAI,CACrB,EAAGD,CAAI,CACT,CACA,iBAAiBE,EAAS,CAExB,KAAK,uBAAyB,KAAK,SAAS,OAAOA,EAAS,aAAc,IAAM,CAC9E,aAAa,KAAK,OAAO,CAC3B,CAAC,EAEG,KAAK,2BACP,KAAK,uBAAyB,KAAK,SAAS,OAAOA,EAAS,aAAc,IAAM,CAC9E,KAAK,YAAY,KAAK,oBAAoB,CAC5C,CAAC,GAGC,KAAK,6BACP,KAAK,mBAAqB,KAAK,SAAS,OAAO,SAAU,QAASC,GAAS,CACxDD,EAAQ,SAASC,EAAM,MAAM,GAC/B,KAAK,YAAY,CAClC,CAAC,EAEL,CACA,YAAYJ,EAAY,GAAO,CAC7B,GAAI,CAAC,KAAK,UAAW,OACrB,IAAMK,EAAY,IAAM,CAElB,KAAK,wBAAwB,KAAK,uBAAuB,EACzD,KAAK,wBAAwB,KAAK,uBAAuB,EACzD,KAAK,oBAAoB,KAAK,mBAAmB,EAErD,KAAK,KAAK,KAAK,EAAI,EAEnB,KAAK,eAAe,QAAQ,KAAK,SAAS,EAC1C,KAAK,UAAY,MACnB,EACA,aAAa,KAAK,OAAO,EACpBL,EAGHK,EAAU,EAFV,KAAK,QAAU,WAAWA,EAAW,KAAK,kBAAkB,CAIhE,CACA,oBAAqB,CACnB,MAAO,CACL,MAAO,KAAK,aACZ,SAAU,KAAK,gBACf,KAAM,KAAK,iBAAiB,QAC5B,UAAW,KAAK,iBAChB,UAAW,KAAK,iBAChB,KAAM,KAAK,YACX,UAAW,KAAK,iBAChB,SAAU,KAAK,gBACf,QAAS,KAAK,eACd,QAAS,KAAK,cAChB,CACF,CACA,MAAO,CACL,KAAK,UAAO,SAAkC9H,EAAmB,CAC/D,OAAO,IAAKA,GAAqBmH,GAAqBlH,EAAkB8H,EAAc,EAAM9H,EAAqB+H,EAAgB,EAAM/H,EAAqBgI,EAAS,CAAC,CACxK,CACF,CACA,MAAO,CACL,KAAK,UAAyBC,GAAkB,CAC9C,KAAMf,EACN,UAAW,CAAC,CAAC,GAAI,cAAe,EAAE,CAAC,EACnC,aAAc,SAAuC3G,EAAIC,EAAK,CACxDD,EAAK,GACJ2H,EAAW,UAAW,UAAuD,CAC9E,OAAO1H,EAAI,QAAQ,CACrB,CAAC,EAAE,OAAQ,UAAoD,CAC7D,OAAOA,EAAI,OAAO,CACpB,CAAC,EAAE,aAAc,UAA0D,CACzE,OAAOA,EAAI,aAAa,CAC1B,CAAC,EAAE,aAAc,SAAwD2H,EAAQ,CAC/E,OAAO3H,EAAI,aAAa2H,EAAO,MAAM,CACvC,CAAC,EAAE,QAAS,UAAqD,CAC/D,OAAO3H,EAAI,aAAa,CAC1B,CAAC,CAEL,EACA,OAAQ,CACN,gBAAiB,kBACjB,aAAc,eACd,oBAAqB,sBACrB,eAAgB,iBAChB,gBAAiB,kBACjB,iBAAkB,mBAClB,iBAAkB,mBAClB,iBAAkB,mBAClB,YAAa,cACb,2BAA4B,6BAC5B,yBAA0B,2BAC1B,mBAAoB,qBACpB,mBAAoB,qBACpB,gBAAiB,kBACjB,iBAAkB,mBAClB,eAAgB,iBAChB,qBAAsB,sBACxB,EACA,QAAS,CACP,KAAM,OACN,KAAM,MACR,EACA,WAAY,EACd,CAAC,CACH,CACF,CACA,OAAO0G,CACT,GAAG,EAICkB,IAA8B,IAAM,CACtC,MAAMA,CAAc,CAClB,MAAO,CACL,KAAK,UAAO,SAA+BrI,EAAmB,CAC5D,OAAO,IAAKA,GAAqBqI,EACnC,CACF,CACA,MAAO,CACL,KAAK,UAAyBvB,GAAiB,CAC7C,KAAMuB,CACR,CAAC,CACH,CACA,MAAO,CACL,KAAK,UAAyBtB,GAAiB,CAC7C,UAAW,CAACuB,GAAkBP,EAAc,EAC5C,QAAS,CAACf,EAAY,CACxB,CAAC,CACH,CACF,CACA,OAAOqB,CACT,GAAG,EAIGE,GAAQ,CAAC,EAWf,SAASC,IAAK,CACZ,IAAIC,GAAS,QAAU,KAAK,OAAO,EAAI,KAAK,IAAI,GAAI,CAAC,GAAK,GAAG,SAAS,EAAE,GAAG,MAAM,EAAE,EAInF,OAFAA,EAAQ,IAAIA,CAAK,GAEZF,GAAME,CAAK,EAITD,GAAG,GAHRD,GAAME,CAAK,EAAI,GACRA,EAGX,CACA,IAAIC,EAA8B,SAAUA,EAAgB,CAC1D,OAAAA,EAAe,SAAc,WAC7BA,EAAe,WAAgB,aACxBA,CACT,EAAEA,GAAkB,CAAC,CAAC,EAClBC,IAAgC,IAAM,CACxC,MAAMA,CAAgB,CACpB,aAAc,CACZ,KAAK,OAAS,IAAInK,EAClB,KAAK,SAAW,IAAIA,EACpB,KAAK,WAAa,IAAIA,CACxB,CACA,SAAU,CACR,KAAK,OAAO,KAAK,KAAK,IAAI,CAC5B,CACA,cAAe,CACb,KAAK,SAAS,KAAK,KAAK,IAAI,CAC9B,CACA,cAAe,CACb,KAAK,WAAW,KAAK,KAAK,IAAI,CAChC,CACA,YAAYG,EAAS,CACnB,KAAK,WAAa,MAAM,QAAQ,KAAK,UAAU,EAAI,KAAK,WAAW,KAAK,GAAG,EAAI,GAC/E,KAAK,YAAc,QACrB,CACA,MAAO,CACL,KAAK,UAAO,SAAiCqB,EAAmB,CAC9D,OAAO,IAAKA,GAAqB2I,EACnC,CACF,CACA,MAAO,CACL,KAAK,UAAyBrI,EAAkB,CAC9C,KAAMqI,EACN,UAAW,CAAC,CAAC,IAAK,oBAAqB,EAAE,CAAC,EAC1C,aAAc,SAAsCnI,EAAIC,EAAK,CACvDD,EAAK,GACJ2H,EAAW,QAAS,UAAoD,CACzE,OAAO1H,EAAI,QAAQ,CACrB,CAAC,EAAE,aAAc,UAAyD,CACxE,OAAOA,EAAI,aAAa,CAC1B,CAAC,EAAE,aAAc,UAAyD,CACxE,OAAOA,EAAI,aAAa,CAC1B,CAAC,CAEL,EACA,OAAQ,CACN,GAAI,KACJ,GAAI,KACJ,EAAG,IACH,KAAM,OACN,OAAQ,SACR,KAAM,OACN,WAAY,aACZ,cAAe,gBACf,cAAe,eACjB,EACA,QAAS,CACP,OAAQ,SACR,SAAU,WACV,WAAY,YACd,EACA,WAAY,GACZ,SAAU,CAAIF,CAAoB,EAClC,MAAOqI,GACP,MAAO,EACP,KAAM,EACN,SAAU,SAAkCpI,EAAIC,EAAK,CAC/CD,EAAK,IACJO,EAAe,EACfL,EAAU,EAAG,QAAQ,GAEtBF,EAAK,GACJW,EAAY,KAAMV,EAAI,EAAE,EAAE,KAAMA,EAAI,EAAE,EAAE,IAAKA,EAAI,CAAC,EAAE,OAAQA,EAAI,IAAI,EAAE,SAAUA,EAAI,MAAM,EAAE,UAAWA,EAAI,aAAa,EAAE,QAASA,EAAI,UAAU,EAAE,iBAAkBA,EAAI,aAAa,CAE7L,EACA,cAAe,EACf,gBAAiB,CACnB,CAAC,CACH,CACF,CACA,OAAOkI,CACT,GAAG,EAICE,IAA2C,IAAM,CACnD,MAAMA,CAA2B,CAC/B,aAAc,CACZ,KAAK,YAAcH,EAAe,QACpC,CACA,YAAY/J,EAAS,CACnB,KAAK,GAAK,KACV,KAAK,GAAK,KACV,KAAK,GAAK,KACV,KAAK,GAAK,KACN,KAAK,cAAgB+J,EAAe,WACtC,KAAK,GAAK,OACD,KAAK,cAAgBA,EAAe,WAC7C,KAAK,GAAK,OAEd,CACA,MAAO,CACL,KAAK,UAAO,SAA4C1I,EAAmB,CACzE,OAAO,IAAKA,GAAqB6I,EACnC,CACF,CACA,MAAO,CACL,KAAK,UAAyBvI,EAAkB,CAC9C,KAAMuI,EACN,UAAW,CAAC,CAAC,IAAK,iCAAkC,EAAE,CAAC,EACvD,OAAQ,CACN,YAAa,cACb,KAAM,OACN,MAAO,OACT,EACA,WAAY,GACZ,SAAU,CAAItI,CAAoB,EAClC,MAAOuI,GACP,MAAO,EACP,KAAM,EACN,OAAQ,CAAC,CAAC,EAAG,IAAI,EAAG,CAAC,EAAG,aAAc,eAAgB,EAAG,QAAS,SAAS,CAAC,EAC5E,SAAU,SAA6CtI,EAAIC,EAAK,CAC1DD,EAAK,IACJO,EAAe,EACfC,EAAe,EAAG,iBAAkB,CAAC,EACrCoD,EAAW,EAAG2E,GAAiD,EAAG,EAAG,OAAQ,CAAC,EAC9E7H,EAAa,GAEdV,EAAK,IACJ+D,EAAW,KAAM9D,EAAI,IAAI,EACzBU,EAAY,KAAMV,EAAI,EAAE,EAAE,KAAMA,EAAI,EAAE,EAAE,KAAMA,EAAI,EAAE,EAAE,KAAMA,EAAI,EAAE,EAClEW,EAAU,EACVmD,EAAW,UAAW9D,EAAI,KAAK,EAEtC,EACA,aAAc,CAAI+D,EAAO,EACzB,cAAe,EACf,gBAAiB,CACnB,CAAC,CACH,CACF,CACA,OAAOqE,CACT,GAAG,EAICG,GAA0B,SAAUA,EAAY,CAClD,OAAAA,EAAW,SAAc,WACzBA,EAAW,QAAa,UACjBA,CACT,EAAEA,IAAc,CAAC,CAAC,EACdC,IAAsC,IAAM,CAC9C,MAAMA,CAAsB,CAC1B,YAAY3K,EAAY,CACtB,KAAK,WAAaA,EAClB,KAAK,KAAO0K,GAAW,SACvB,KAAK,gBAAkB,GACvB,KAAK,OAAS,IAAIxK,EAClB,KAAK,SAAW,IAAIA,EACpB,KAAK,WAAa,IAAIA,EACtB,KAAK,WAAa,GAClB,KAAK,eAAiBkK,EACtB,KAAK,eAAiBnB,EACtB,KAAK,WAAaN,GAClB,KAAK,MAAQ,EACf,CACA,UAAW,CACT,KAAK,WAAa,OAASuB,GAAG,EAAE,SAAS,EACzC,KAAK,aAAe,QAAQ,KAAK,UAAU,IACvC/J,GAAiB,KAAK,UAAU,IAClC,KAAK,MAAQ,GAEjB,CACA,aAAc,CACZ,KAAK,OAAO,CACd,CACA,QAAS,CACP,KAAK,OAAS,KAAK,gBAAgB,CACrC,CACA,iBAAkB,CAChB,IAAMyK,EAAuB,KAAK,KAAK,OAAO,UAAU7J,GAAK,CAC3D,IAAM0C,EAAQ1C,EAAE,KAChB,OAAO0C,GAAS,KAAK,cAAgBA,EAAM,SAAS,IAAM,KAAK,aAAa,SAAS,GAAK1C,EAAE,QAAU,MACxG,CAAC,EACD,GAAI6J,IAAyB,GAI7B,OAAO,KAAK,qBAAqB,KAAK,KAAK,OAAOA,CAAoB,EAAGA,CAAoB,CAC/F,CACA,qBAAqB7J,EAAGJ,EAAG,CACzB,IAAMkK,EAAa,KAAK,KAAK,KACvBC,EAAQ/J,EAAE,MACV0C,EAAQ1C,EAAE,KACVgK,EAAeC,GAAYvH,CAAK,EAClCwH,EACA,KAAK,YAAchL,EAAU,KAC/BgL,EAAK,KAAK,OAAOxH,CAAK,EACb,KAAK,YAAcxD,EAAU,OACtCgL,EAAK,KAAK,OAAO,OAAOxH,CAAK,CAAC,EAE9BwH,EAAK,KAAK,OAAOxH,CAAK,EAExB,IAAMyH,EAAK,KAAK,OAAO,KAAK,OAASR,GAAW,SAAWI,EAAQ/J,EAAE,EAAE,EACjEoK,EAAS,EACT3K,EAAS,KAAK,OAAO,MAAM,EAAE,CAAC,EAAI0K,EAClCE,EAAU,EACZC,EACA,KAAK,OAAO,YAAcpL,EAAU,OAClC,KAAK,OAASyK,GAAW,SAC3BW,EAAQ,KAAK,OAAO,SAASP,CAAK,EAElCO,EAAQ,KAAK,OAAO,SAAStK,EAAE,EAAE,EAGnCsK,EAAQ,KAAK,OAAO,SAASR,CAAU,EAEzC,IAAMzJ,EAAO,OAAO,OAAO,CAAC,EAAGL,EAAG,CAChC,OAAQ8J,EACR,MAAAC,EACA,KAAMrH,CACR,CAAC,EACD,MAAO,CACL,WAAY,CAAC,eAAe9C,CAAC,EAAE,EAC/B,MAAAmK,EACA,MAAArH,EACA,KAAArC,EACA,GAAA6J,EACA,GAAAC,EACA,OAAAC,EACA,OAAA3K,EACA,aAAAuK,EACA,MAAAM,EACA,QAAAD,EACA,WAAAP,EACA,cAAe,KAAK,iBAAiBQ,CAAK,EAC1C,IAAKtK,EAAE,IACP,IAAKA,EAAE,GACT,CACF,CACA,eAAe,CACb,aAAAgK,EACA,MAAAD,EACA,WAAAD,EACA,IAAAS,EACA,IAAApI,CACF,EAAG,CACD,MAAO;AAAA,oCACuBqI,GAAYV,CAAU,CAAC,WAAMU,GAAYR,CAAY,CAAC;AAAA,kCACxDD,EAAM,eAAe,CAAC,GAAG,KAAK,qBAAqBQ,EAAKpI,CAAG,CAAC;AAAA,KAE1F,CACA,qBAAqBoI,EAAKpI,EAAK,CAC7B,GAAIoI,IAAQ,QAAapI,IAAQ,OAAW,CAC1C,IAAIsI,EAAS,KACb,OAAIF,IAAQ,QACNpI,IAAQ,SACVsI,GAAU,UAEZA,GAAUF,EAAI,eAAe,EACzBpI,IAAQ,SACVsI,GAAU,QAEHtI,IAAQ,SACjBsI,GAAU,UAERtI,IAAQ,SACVsI,GAAUtI,EAAI,eAAe,GAE/BsI,GAAU,IACHA,CACT,KACE,OAAO,EAEX,CACA,iBAAiBH,EAAO,CACtB,MAAO,CAAC,CACN,OAAQ,EACR,MAAAA,EACA,QAAS,EACX,EAAG,CACD,OAAQ,IACR,MAAAA,EACA,QAAS,CACX,CAAC,CACH,CACA,QAAQjK,EAAM,CACZ,KAAK,OAAO,KAAKA,CAAI,CACvB,CACA,SAASqK,EAAO,CACd,OAAK,KAAK,cACG,KAAK,cAAc,KAAK1K,GAC5B0K,EAAM,OAAS1K,EAAE,IACzB,IACe,OAJgB,EAKlC,CACA,gBAAiB,CACf,KAAK,WAAa,GAClB,KAAK,SAAS,KAAK,CACjB,KAAM,KAAK,KAAK,IAClB,CAAC,CACH,CACA,kBAAmB,CACjB,KAAK,WAAa,GAClB,KAAK,OAAO,QAAU,EACtB,KAAK,WAAW,KAAK,CACnB,KAAM,KAAK,KAAK,IAClB,CAAC,CACH,CACA,MAAO,CACL,KAAK,UAAO,SAAuCW,EAAmB,CACpE,OAAO,IAAKA,GAAqBiJ,GAA0BhJ,EAAkBI,EAAW,CAAC,CAC3F,CACF,CACA,MAAO,CACL,KAAK,UAAyBC,EAAkB,CAC9C,KAAM2I,EACN,UAAW,CAAC,CAAC,IAAK,2BAA4B,EAAE,CAAC,EACjD,OAAQ,CACN,KAAM,OACN,KAAM,OACN,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,UAAW,YACX,aAAc,eACd,cAAe,gBACf,gBAAiB,kBACjB,gBAAiB,iBACnB,EACA,QAAS,CACP,OAAQ,SACR,SAAU,WACV,WAAY,YACd,EACA,WAAY,GACZ,SAAU,CAAI1I,CAAoB,EAClC,MAAOyJ,GACP,MAAO,EACP,KAAM,EACN,OAAQ,CAAC,CAAC,EAAG,MAAM,EAAG,CAAC,iCAAkC,GAAI,EAAG,cAAe,OAAQ,OAAO,EAAG,CAAC,QAAS,cAAe,EAAG,MAAM,EAAG,CAAC,oBAAqB,GAAI,cAAe,GAAI,EAAG,SAAU,EAAG,SAAU,WAAY,aAAc,KAAM,KAAM,IAAK,OAAQ,gBAAiB,OAAQ,aAAc,kBAAmB,mBAAoB,cAAe,eAAgB,kBAAmB,gBAAgB,EAAG,CAAC,EAAG,aAAa,CAAC,EACra,SAAU,SAAwCxJ,EAAIC,EAAK,CACrDD,EAAK,GACJ4D,EAAW,EAAG6F,GAAyC,EAAG,GAAI,IAAK,CAAC,EAErEzJ,EAAK,GACJ+D,EAAW,OAAQ9D,EAAI,MAAM,CAEpC,EACA,aAAc,CAAIgE,EAAM0C,GAAkBwB,GAAiBE,EAA0B,EACrF,cAAe,EACf,KAAM,CACJ,UAAW,CAACqB,GAAQ,iBAAkB,CAACC,GAAW,SAAU,CAACC,EAAM,CACjE,QAAS,CACX,CAAC,EAAGC,GAAQ,IAAKD,EAAM,CACrB,QAAS,CACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACT,EACA,gBAAiB,CACnB,CAAC,CACH,CACF,CACA,OAAOnB,CACT,GAAG,EA4IH,IAAIqB,IAA2C,IAAM,CACnD,MAAMA,CAA2B,CAC/B,aAAc,CACZ,KAAK,WAAa,EAClB,KAAK,GAAK,EACV,KAAK,GAAK,CACZ,CACA,IAAI,OAAQ,CACV,OAAO,KAAK,YAAc,KAAK,YACjC,CACA,IAAI,MAAMC,EAAO,CACf,KAAK,WAAaA,CACpB,CACA,YAAYC,EAAS,CACnB,KAAK,EAAI,OACL,UAAWA,GAAW,iBAAkBA,GAAW,eAAgBA,KACrE,KAAK,aAAe,CAAC,CACnB,OAAQ,EACR,MAAO,KAAK,MACZ,QAAS,KAAK,YAChB,EAAG,CACD,OAAQ,IACR,MAAO,KAAK,MACZ,QAAS,KAAK,UAChB,CAAC,EAEL,CACA,MAAO,CACL,KAAK,UAAO,SAA4CC,EAAmB,CACzE,OAAO,IAAKA,GAAqBH,EACnC,CACF,CACA,MAAO,CACL,KAAK,UAAyBI,EAAkB,CAC9C,KAAMJ,EACN,UAAW,CAAC,CAAC,IAAK,iCAAkC,EAAE,CAAC,EACvD,OAAQ,CACN,MAAO,QACP,KAAM,OACN,aAAc,eACd,WAAY,aACZ,GAAI,KACJ,GAAI,KACJ,MAAO,OACT,EACA,WAAY,GACZ,SAAU,CAAIK,CAAoB,EAClC,MAAOC,GACP,MAAO,EACP,KAAM,EACN,OAAQ,CAAC,CAAC,gBAAiB,iBAAkB,EAAG,IAAI,EAAG,CAAC,EAAG,aAAc,eAAgB,EAAG,QAAS,SAAS,CAAC,EAC/G,SAAU,SAA6CC,EAAIC,EAAK,CAC1DD,EAAK,IACJE,EAAe,EACfC,EAAe,EAAG,iBAAkB,CAAC,EACrCC,EAAW,EAAGC,GAAiD,EAAG,EAAG,OAAQ,CAAC,EAC9EC,EAAa,GAEdN,EAAK,IACJO,EAAW,KAAMN,EAAI,IAAI,EACzBO,EAAY,KAAMP,EAAI,EAAE,EAAE,KAAMA,EAAI,EAAE,EAAE,IAAKA,EAAI,CAAC,EAClDQ,EAAU,EACVF,EAAW,UAAWN,EAAI,KAAK,EAEtC,EACA,aAAc,CAAIS,EAAO,EACzB,cAAe,EACf,gBAAiB,CACnB,CAAC,CACH,CACF,CACA,OAAOjB,CACT,GAAG,EAICkB,IAA8B,IAAM,CACtC,MAAMA,CAAc,CAClB,YAAYC,EAAS,CACnB,KAAK,QAAU,EACf,KAAK,aAAe,GACpB,KAAK,WAAa,EAClB,KAAK,SAAW,GAChB,KAAK,WAAa,GAClB,KAAK,OAAS,IAAIC,EAClB,KAAK,iBAAmB,GACxB,KAAK,YAAc,GACnB,KAAK,eAAiBC,EACtB,KAAK,QAAUF,EAAQ,aACzB,CACA,aAAc,CACZ,KAAK,OAAO,EACP,KAAK,mBACR,KAAK,cAAc,EACnB,KAAK,iBAAmB,GAE5B,CACA,QAAS,CACP,KAAK,WAAa,OAASG,GAAG,EAAE,SAAS,EACzC,KAAK,aAAe,QAAQ,KAAK,UAAU,IACvC,KAAK,UAAY,KAAK,OACxB,KAAK,cAAgB,KAAK,YAAY,EACtC,KAAK,YAAc,IAEnB,KAAK,YAAc,GAErB,KAAK,aAAa,CACpB,CACA,eAAgB,CACd,KAAK,SAAW,KAAK,aACrB,WAAW,KAAK,aAAa,KAAK,IAAI,EAAG,GAAG,CAC9C,CACA,cAAe,CACb,IAAMC,EAAOC,EAAO,KAAK,OAAO,EAAE,OAAO,OAAO,EAC5C,KAAK,WACPD,EAAK,WAAW,EAAE,SAAS,GAAG,EAAE,KAAK,IAAK,KAAK,IAAI,EAEnDA,EAAK,KAAK,IAAK,KAAK,IAAI,CAE5B,CACA,aAAc,CACZ,OAAI,KAAK,MACA,KAAK,MAEP,CAAC,CACN,OAAQ,EACR,MAAO,KAAK,KACZ,QAAS,KAAK,YAChB,EAAG,CACD,OAAQ,IACR,MAAO,KAAK,KACZ,QAAS,KAAK,UAChB,CAAC,CACH,CACA,MAAO,CACL,KAAK,UAAO,SAA+BpB,EAAmB,CAC5D,OAAO,IAAKA,GAAqBe,GAAkBO,EAAqBC,EAAU,CAAC,CACrF,CACF,CACA,MAAO,CACL,KAAK,UAAyBtB,EAAkB,CAC9C,KAAMc,EACN,UAAW,CAAC,CAAC,IAAK,kBAAmB,EAAE,CAAC,EACxC,OAAQ,CACN,KAAM,OACN,KAAM,OACN,aAAc,eACd,KAAM,OACN,QAAS,UACT,aAAc,eACd,WAAY,aACZ,SAAU,WACV,MAAO,QACP,WAAY,YACd,EACA,QAAS,CACP,OAAQ,QACV,EACA,WAAY,GACZ,SAAU,CAAIb,CAAoB,EAClC,MAAOsB,GACP,MAAO,EACP,KAAM,EACN,OAAQ,CAAC,CAAC,EAAG,MAAM,EAAG,CAAC,EAAG,MAAM,EAAG,CAAC,iCAAkC,GAAI,EAAG,cAAe,OAAQ,OAAO,CAAC,EAC5G,SAAU,SAAgCpB,EAAIC,EAAK,CAC7CD,EAAK,IACJI,EAAW,EAAGiB,GAAoC,EAAG,EAAG,OAAQ,CAAC,EACjEnB,EAAe,EACfoB,EAAU,EAAG,OAAQ,CAAC,GAEvBtB,EAAK,IACJO,EAAW,OAAQN,EAAI,QAAQ,EAC/BQ,EAAU,EACVc,GAAY,UAAWtB,EAAI,OAAO,EAClCO,EAAY,IAAKP,EAAI,QAAQ,EAAE,OAAQA,EAAI,SAAWA,EAAI,aAAeA,EAAI,IAAI,EAExF,EACA,aAAc,CAAIuB,EAAMC,EAA0B,EAClD,cAAe,EACf,gBAAiB,CACnB,CAAC,CACH,CACF,CACA,OAAOd,CACT,GAAG,EAkLH,IAAIe,GACA,OAAO,OAAW,IACpBA,GAAO,OACE,OAAO,OAAW,MAC3BA,GAAO,QAGT,IAAMC,GAAaD,GAAK,WACxB,SAASE,GAAiBC,EAAMC,EAAU,GAAOC,EAAa,GAAM,CAGlE,GAAI,OAAOJ,IAAe,WAExB,OAAO,IAAIA,GAAWE,EAAM,CAC1B,QAAAC,EACA,WAAAC,CACF,CAAC,EACI,CAEL,IAAMC,EAAQ,SAAS,YAAY,YAAY,EAC/C,OAAAA,EAAM,UAAUH,EAAMC,EAASC,CAAU,EAClCC,CACT,CACF,CACA,IAAIC,IAA4B,IAAM,CACpC,MAAMA,CAAY,CAChB,YAAYC,EAAY,CACtB,KAAK,WAAaA,EAClB,KAAK,cAAgB,EACrB,KAAK,UAAY,GACjB,KAAK,aAAe,CAAC,EACrB,KAAK,eAAiBC,EACtB,KAAK,WAAaC,GAClB,KAAK,eAAiB,GACtB,KAAK,gBAAkB,GACvB,KAAK,MAAQ,IAAIC,CACnB,CACA,UAAUC,EAAM,CACd,IAAMC,EAAU,CAAC,EACjB,QAAWC,KAAS,KAAK,QAAS,CAChC,IAAMC,EAAOD,EAAM,OAAO,KAAKE,GAAKA,EAAE,KAAK,SAAS,IAAMJ,EAAK,SAAS,CAAC,EACrEK,EAAYH,EAAM,KAItB,GAHIG,aAAqB,OACvBA,EAAYA,EAAU,mBAAmB,GAEvCF,EAAM,CACR,IAAMG,EAAQH,EAAK,KACfI,EAAMJ,EAAK,MACX,KAAK,iBACPI,GAAOJ,EAAK,GAAKA,EAAK,IAAI,QAAQ,CAAC,EAAI,KAEzC,IAAIK,EACJ,GAAI,KAAK,OAAO,YAAcC,EAAU,OAAQ,CAC9C,IAAI,EAAIF,EACJJ,EAAK,KACP,EAAIA,EAAK,IAEXK,EAAQ,KAAK,OAAO,SAAS,CAAC,CAChC,MACEA,EAAQ,KAAK,OAAO,SAASN,EAAM,IAAI,EAEzC,IAAMQ,EAAO,OAAO,OAAO,CAAC,EAAGP,EAAM,CACnC,MAAOI,EACP,KAAMD,EACN,OAAQD,EACR,IAAKF,EAAK,IACV,IAAKA,EAAK,IACV,MAAAK,CACF,CAAC,EACDP,EAAQ,KAAKS,CAAI,CACnB,CACF,CACA,OAAOT,CACT,CACA,UAAUP,EAAO,CACf,GAAI,CAACiB,GAAkB,KAAK,UAAU,EACpC,OAEF,IAAMC,EAAOlB,EAAM,MAAQA,EAAM,OAAO,sBAAsB,EAAE,KAC1DmB,EAAe,KAAK,sBAAsBD,CAAI,EAC9CE,EAAe,KAAK,KAAKD,CAAY,EAK3C,GAJA,KAAK,UAAY,KAAK,OAAOC,CAAY,EACzC,KAAK,UAAY,KAAK,IAAI,EAAG,KAAK,SAAS,EAC3C,KAAK,UAAY,KAAK,IAAI,KAAK,KAAK,MAAO,KAAK,SAAS,EACzD,KAAK,aAAe,KAAK,UAAUA,CAAY,EAC3C,KAAK,YAAc,KAAK,cAAe,CACzC,IAAMC,EAAKzB,GAAiB,YAAY,EACxC,KAAK,cAAc,cAAc,cAAcyB,CAAE,EACjD,KAAK,cAAgB,GACrB,KAAK,MAAM,KAAK,CACd,MAAOD,CACT,CAAC,EACD,KAAK,YAAY,EACjB,KAAK,cAAgB,KAAK,SAC5B,CACF,CACA,sBAAsBF,EAAM,CAC1B,IAAII,EAAW,EACXC,EAAW,KAAK,KAAK,OAAS,EAC9BC,EAAU,OAAO,UACjBL,EAAe,EACnB,KAAOG,GAAYC,GAAU,CAC3B,IAAME,GAAgBH,EAAWC,GAAY,EAAI,EAC3CG,EAAiB,KAAK,OAAO,KAAK,KAAKD,CAAY,CAAC,EACpDE,EAAU,KAAK,IAAID,EAAiBR,CAAI,EAK9C,GAJIS,EAAUH,IACZA,EAAUG,EACVR,EAAeM,GAEbC,EAAiBR,EACnBI,EAAWG,EAAe,UACjBC,EAAiBR,EAC1BK,EAAWE,EAAe,MACrB,CACLD,EAAU,EACVL,EAAeM,EACf,KACF,CACF,CACA,OAAON,CACT,CACA,aAAc,CACZ,IAAMnB,EAAQJ,GAAiB,YAAY,EAC3C,KAAK,cAAc,cAAc,cAAcI,CAAK,CACtD,CACA,aAAc,CACZ,IAAMA,EAAQJ,GAAiB,YAAY,EAC3C,KAAK,cAAc,cAAc,cAAcI,CAAK,EACpD,KAAK,cAAgB,EACrB,KAAK,cAAgB,EACvB,CACA,eAAe4B,EAAa,CAC1B,IAAIC,EAAS,GACb,OAAID,EAAY,SAAW,OACzBC,GAAUD,EAAY,OAEtBC,GAAU,MAEZA,GAAU,KACND,EAAY,QAAU,SACxBC,GAAUD,EAAY,MAAM,eAAe,IAEzCA,EAAY,MAAQ,QAAaA,EAAY,MAAQ,UACvDC,GAAU,KACND,EAAY,MAAQ,QAClBA,EAAY,MAAQ,SACtBC,GAAU,UAEZA,GAAUD,EAAY,IAAI,eAAe,EACrCA,EAAY,MAAQ,SACtBC,GAAU,QAEHD,EAAY,MAAQ,SAC7BC,GAAU,UAERD,EAAY,MAAQ,SACtBC,GAAUD,EAAY,IAAI,eAAe,GAE3CC,GAAU,KAELA,CACT,CACA,MAAO,CACL,KAAK,UAAO,SAA6BC,EAAmB,CAC1D,OAAO,IAAKA,GAAqB7B,GAAgB8B,EAAkBC,EAAW,CAAC,CACjF,CACF,CACA,MAAO,CACL,KAAK,UAAyBC,EAAkB,CAC9C,KAAMhC,EACN,UAAW,CAAC,CAAC,IAAK,0BAA2B,EAAE,CAAC,EAChD,UAAW,SAA2BiC,EAAIC,EAAK,CAI7C,GAHID,EAAK,GACJE,GAAYC,GAAM,CAAC,EAEpBH,EAAK,EAAG,CACV,IAAII,EACDC,GAAeD,EAAQE,GAAY,CAAC,IAAML,EAAI,cAAgBG,EAAG,MACtE,CACF,EACA,OAAQ,CACN,KAAM,OACN,KAAM,OACN,OAAQ,SACR,OAAQ,SACR,QAAS,UACT,OAAQ,SACR,eAAgB,iBAChB,gBAAiB,kBACjB,gBAAiB,iBACnB,EACA,QAAS,CACP,MAAO,OACT,EACA,WAAY,GACZ,MAAOG,GACP,MAAO,EACP,KAAM,GACN,OAAQ,CAAC,CAAC,yBAA0B,EAAE,EAAG,CAAC,gBAAiB,EAAE,EAAG,CAAC,IAAK,IAAK,EAAG,eAAgB,EAAG,UAAW,IAAK,SAAU,SAAU,EAAG,YAAa,YAAY,EAAG,CAAC,IAAK,IAAK,cAAe,GAAI,EAAG,iBAAkB,EAAG,kBAAmB,mBAAoB,cAAe,iBAAkB,kBAAmB,iBAAkB,sBAAsB,EAAG,CAAC,EAAG,wBAAwB,EAAG,CAAC,QAAS,eAAgB,EAAG,QAAS,SAAS,EAAG,CAAC,EAAG,cAAc,EAAG,CAAC,EAAG,oBAAoB,CAAC,EAC/d,SAAU,SAA8BP,EAAIC,EAAK,CAC/C,GAAID,EAAK,EAAG,CACV,IAAMQ,EAASC,EAAiB,EAC7BC,EAAe,EACfC,EAAe,EAAG,GAAG,EAAE,EAAG,OAAQ,CAAC,EACnCC,EAAW,YAAa,SAAwDC,EAAQ,CACzF,OAAGC,EAAcN,CAAG,EACVO,EAAYd,EAAI,UAAUY,CAAM,CAAC,CAC7C,CAAC,EAAE,aAAc,UAA2D,CAC1E,OAAGC,EAAcN,CAAG,EACVO,EAAYd,EAAI,YAAY,CAAC,CACzC,CAAC,EACEe,EAAa,EACbC,EAAW,EAAGC,GAAyC,EAAG,EAAG,cAAe,KAAM,EAAMC,EAAsB,EAC9GC,EAAU,EAAG,OAAQ,EAAG,CAAC,EACzBJ,EAAa,CAClB,CACA,GAAIhB,EAAK,EAAG,CACV,IAAMqB,EAA+BC,GAAY,CAAC,EAC/CC,EAAU,EACVC,EAAY,IAAK,CAAC,EAAE,QAASvB,EAAI,KAAK,KAAK,EAAE,SAAUA,EAAI,KAAK,MAAM,EACtEsB,EAAU,CAAC,EACXE,GAAY,UAAWxB,EAAI,aAAa,EAAE,iBAAkB,MAAM,EAClEyB,EAAW,kBAAmBzB,EAAI,gBAAkB,EAAI,SAAW,UAAU,EAAE,kBAAmBA,EAAI,eAAe,EAAE,mBAAoBA,EAAI,eAAe,KAAK,EAAE,cAAeA,EAAI,WAAW,OAAO,EAAE,iBAAkB,EAAE,EAAE,kBAAmBA,EAAI,gBAAkBA,EAAI,gBAAkBoB,CAAyB,EAAE,iBAAkBpB,EAAI,YAAY,EAAE,uBAAwB,EAAI,EAC5XuB,EAAY,IAAKvB,EAAI,SAAS,EAAE,QAAS,CAAC,EAAE,SAAUA,EAAI,KAAK,MAAM,CAC1E,CACF,EACA,aAAc,CAAI0B,GAASC,EAAgB,EAC3C,cAAe,EACf,KAAM,CACJ,UAAW,CAACC,GAAQ,iBAAkB,CAACC,GAAW,qBAAsB,CAACC,EAAM,CAC7E,QAAS,CACX,CAAC,EAAGC,GAAQ,IAAKD,EAAM,CACrB,QAAS,EACX,CAAC,CAAC,CAAC,CAAC,EAAGD,GAAW,qBAAsB,CAACC,EAAM,CAC7C,QAAS,EACX,CAAC,EAAGC,GAAQ,IAAKD,EAAM,CACrB,QAAS,CACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACT,EACA,gBAAiB,CACnB,CAAC,CACH,CACF,CACA,OAAOhE,CACT,GAAG,EAICkE,IAAyB,IAAM,CACjC,MAAMA,CAAS,CACb,YAAYC,EAASC,EAAI,CACvB,KAAK,GAAKA,EACV,KAAK,OAAS,GACd,KAAK,OAAS,IAAIhE,EAClB,KAAK,eAAiB,IAAIA,EAC1B,KAAK,YAAc,GACnB,KAAK,QAAU+D,EAAQ,aACzB,CACA,YAAYE,EAAS,CACnB,KAAK,OAAO,EACP,KAAK,cACR,KAAK,SAAS,EACd,KAAK,YAAc,GAEvB,CACA,QAAS,CACP,KAAK,KAAO,KAAK,QAAQ,EACzB,KAAK,OAAS,KAAK,KAAK,OACxB,IAAMC,EAAU,KAAK,KAAK,CAAC,EAAI,KAAK,OACpC,KAAK,QAAU,KAAK,WAAW,EAC/B,KAAK,OAAS,KAAK,UAAU,EACzB,KAAK,OACP,KAAK,YAAY,EAEnB,KAAK,UAAY,iBAAiBA,CAAO,IACzC,KAAK,SAAW,SAAWC,GAAG,EAAE,SAAS,EACzC,KAAK,OAAS,QAAQ,KAAK,QAAQ,IACnC,KAAK,GAAG,aAAa,CACvB,CACA,YAAa,CACX,IAAIC,EAAS,CAAC,EACd,QAAWlE,KAAW,KAAK,QACzB,QAAWG,KAAKH,EAAQ,OACjBkE,EAAO,SAAS/D,EAAE,IAAI,GACzB+D,EAAO,KAAK/D,EAAE,IAAI,EAIxB,IAAIgE,EAAS,CAAC,EACd,GAAI,KAAK,YAAc3D,EAAU,KAAM,CACrC,IAAM4D,EAAM,KAAK,IAAI,GAAGF,CAAM,EACxBG,EAAM,KAAK,IAAI,GAAGH,CAAM,EAC9BC,EAAS,CAACC,EAAKC,CAAG,CACpB,SAAW,KAAK,YAAc7D,EAAU,OAAQ,CAC9C0D,EAASA,EAAO,IAAII,GAAK,OAAOA,CAAC,CAAC,EAClC,IAAMF,EAAM,KAAK,IAAI,GAAGF,CAAM,EACxBG,EAAM,KAAK,IAAI,GAAGH,CAAM,EAC9BC,EAAS,CAACC,EAAKC,CAAG,CACpB,MACEF,EAASD,EAEX,OAAOC,CACT,CACA,WAAY,CACV,IAAII,EACJ,OAAI,KAAK,YAAc/D,EAAU,KAC/B+D,EAAQC,GAAU,EAAE,MAAM,CAAC,EAAG,KAAK,KAAK,KAAK,CAAC,EAAE,OAAO,KAAK,OAAO,EAC1D,KAAK,YAAchE,EAAU,OACtC+D,EAAQE,GAAY,EAAE,MAAM,CAAC,EAAG,KAAK,KAAK,KAAK,CAAC,EAAE,OAAO,KAAK,OAAO,EAC5D,KAAK,YAAcjE,EAAU,UACtC+D,EAAQG,GAAW,EAAE,MAAM,CAAC,EAAG,KAAK,KAAK,KAAK,CAAC,EAAE,QAAQ,EAAG,EAAE,OAAO,KAAK,OAAO,GAE5EH,CACT,CACA,UAAW,CACT,GAAI,KAAK,MAAO,OAChB,IAAMI,EAAS,KAAK,OACdC,EAAQ,KAAK,KAAK,CAAC,EACzB,KAAK,MAAQC,GAAO,EAAE,OAAO,CAAC,CAAC,EAAG,CAAC,EAAG,CAACD,EAAOD,CAAM,CAAC,CAAC,EAAE,GAAG,YAAa,CAAC,CACvE,UAAAG,CACF,IAAM,CAEJ,IAAMC,GADeD,GAAa,KAAK,OAAO,MAAM,GACrB,IAAI,KAAK,OAAO,MAAM,EACrD,KAAK,eAAe,KAAKC,CAAS,EAClC,KAAK,GAAG,aAAa,CACvB,CAAC,EACDC,EAAO,KAAK,OAAO,EAAE,OAAO,QAAQ,EAAE,KAAK,KAAK,KAAK,CACvD,CACA,aAAc,CACZ,GAAI,CAAC,KAAK,MAAO,OACjB,IAAML,EAAS,KAAK,OACdC,EAAQ,KAAK,KAAK,CAAC,EACzB,KAAK,MAAM,OAAO,CAAC,CAAC,EAAG,CAAC,EAAG,CAACA,EAAOD,CAAM,CAAC,CAAC,EAC3CK,EAAO,KAAK,OAAO,EAAE,OAAO,QAAQ,EAAE,KAAK,KAAK,KAAK,EAErDA,EAAO,KAAK,OAAO,EAAE,OAAO,YAAY,EAAE,KAAK,OAAQ,MAAS,EAAE,KAAK,SAAU,MAAS,EAAE,KAAK,eAAgB,MAAS,EAC1H,KAAK,GAAG,aAAa,CACvB,CACA,SAAU,CAMR,MAJa,CACX,MAFY,KAAK,KAAK,CAAC,EAGvB,OAAQ,KAAK,MACf,CAEF,CACA,MAAO,CACL,KAAK,UAAO,SAA0BzD,EAAmB,CACvD,OAAO,IAAKA,GAAqBqC,GAAapC,EAAqByD,EAAU,EAAMzD,EAAqB0D,EAAiB,CAAC,CAC5H,CACF,CACA,MAAO,CACL,KAAK,UAAyBxD,EAAkB,CAC9C,KAAMkC,EACN,UAAW,CAAC,CAAC,IAAK,sBAAuB,EAAE,CAAC,EAC5C,OAAQ,CACN,KAAM,OACN,QAAS,UACT,OAAQ,SACR,aAAc,eACd,OAAQ,SACR,UAAW,YACX,UAAW,YACX,OAAQ,QACV,EACA,QAAS,CACP,OAAQ,SACR,eAAgB,gBAClB,EACA,WAAY,GACZ,SAAU,CAAIuB,CAAoB,EAClC,MAAOC,GACP,mBAAoBC,GACpB,MAAO,EACP,KAAM,EACN,OAAQ,CAAC,CAAC,EAAG,UAAU,EAAG,CAAC,KAAM,gBAAiB,OAAQ,SAAU,SAAU,sFAAsF,EAAG,CAAC,EAAG,gBAAgB,EAAG,CAAC,IAAK,IAAK,IAAK,IAAK,EAAG,kBAAkB,EAAG,CAAC,EAAG,OAAO,CAAC,EACvP,SAAU,SAA2B1D,EAAIC,EAAK,CACxCD,EAAK,IACJ2D,GAAgB,EAChBjD,EAAe,EACfC,EAAe,EAAG,IAAK,CAAC,EAAE,EAAG,QAAQ,EACrCS,EAAU,EAAG,gBAAiB,CAAC,EAC/BJ,EAAa,EACbL,EAAe,EAAG,IAAK,CAAC,EACxBiD,GAAa,CAAC,EACd5C,EAAa,EACbI,EAAU,EAAG,OAAQ,CAAC,EAAE,EAAG,IAAK,CAAC,EACjCJ,EAAa,GAEdhB,EAAK,IACJwB,EAAY,YAAavB,EAAI,SAAS,EACtCsB,EAAU,EACVC,EAAY,KAAMvB,EAAI,QAAQ,EAC9BsB,EAAU,CAAC,EACXC,EAAY,QAASvB,EAAI,KAAK,CAAC,CAAC,EAAE,SAAUA,EAAI,MAAM,EAE7D,EACA,OAAQ,CAAC;AAAA,CAAoM,EAC7M,cAAe,EACf,gBAAiB,CACnB,CAAC,CACH,CACF,CACA,OAAOgC,CACT,GAAG,EAmHH,IAAI4B,IAAkC,IAAM,CAC1C,MAAMA,CAAkB,CACtB,MAAO,CACL,KAAK,UAAO,SAAmCC,EAAmB,CAChE,OAAO,IAAKA,GAAqBD,EACnC,CACF,CACA,MAAO,CACL,KAAK,UAAyBE,GAAiB,CAC7C,KAAMF,CACR,CAAC,CACH,CACA,MAAO,CACL,KAAK,UAAyBG,GAAiB,CAC7C,QAAS,CAACC,GAAcC,GAAYC,GAAeF,GAAcC,GAAYC,EAAa,CAC5F,CAAC,CACH,CACF,CACA,OAAON,CACT,GAAG,EAIH,SAASO,GAAwB,CAC/B,MAAAC,EACA,OAAAC,EACA,QAAAC,EACA,UAAAC,EAAY,GACZ,UAAAC,EAAY,GACZ,YAAAC,EAAc,EACd,WAAAC,EAAa,EACb,WAAAC,EAAa,GACb,WAAAC,EAAa,GACb,WAAAC,EAAa,GACb,WAAAC,EAAaC,EAAU,QACvB,eAAAC,EAAiBC,GAAe,MAChC,QAAAC,EAAU,EACZ,EAAG,CACD,IAAIC,EAAUb,EAAQ,CAAC,EACnBc,EAAahB,EACbiB,EAAchB,EAASC,EAAQ,CAAC,EAAIA,EAAQ,CAAC,EACjD,OAAIO,GAAcG,IAAmBC,GAAe,QAC9CH,IAAeC,EAAU,QAC3BG,GAAW,EAEXA,GAAW,GAGfE,EAAaA,EAAaF,EAAU,GACpCE,EAAaA,EAAad,EAAQ,CAAC,EAAIA,EAAQ,CAAC,EAC5CC,IACFc,GAAe,EACfA,GAAeZ,EACXE,IAGFU,GAAe,KAGfb,IACFY,GAAc,EACdA,GAAcV,EACdS,GAAWT,EACXS,GAAW,GACPP,IAGFQ,GAAc,GACdD,GAAW,KAGfC,EAAa,KAAK,IAAI,EAAGA,CAAU,EACnCC,EAAc,KAAK,IAAI,EAAGA,CAAW,EAC9B,CACL,MAAO,KAAK,MAAMD,CAAU,EAC5B,OAAQ,KAAK,MAAMC,CAAW,EAC9B,QAAS,KAAK,MAAMF,CAAO,CAC7B,CACF,CACA,IAAMG,GAAY,CAAC,CACjB,KAAM,QACN,WAAY,GACZ,MAAOP,EAAU,QACjB,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,SAAS,CACvH,EAAG,CACD,KAAM,UACN,WAAY,GACZ,MAAOA,EAAU,QACjB,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,SAAS,CACvH,EAAG,CACD,KAAM,OACN,WAAY,GACZ,MAAOA,EAAU,QACjB,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,SAAS,CACvH,EAAG,CACD,KAAM,OACN,WAAY,GACZ,MAAOA,EAAU,QACjB,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,SAAS,CACjG,EAAG,CACD,KAAM,QACN,WAAY,GACZ,MAAOA,EAAU,OACjB,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,SAAS,CACvH,EAAG,CACD,KAAM,MACN,WAAY,GACZ,MAAOA,EAAU,OACjB,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,SAAS,CACvH,EAAG,CACD,KAAM,OACN,WAAY,GACZ,MAAOA,EAAU,OACjB,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,SAAS,CACvH,EAAG,CACD,KAAM,QACN,WAAY,GACZ,MAAOA,EAAU,QACjB,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,SAAS,CACvH,EAAG,CACD,KAAM,QACN,WAAY,GACZ,MAAOA,EAAU,QACjB,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,SAAS,CACvH,EAAG,CACD,KAAM,SACN,WAAY,GACZ,MAAOA,EAAU,QACjB,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,SAAS,CACvH,EAAG,CACD,KAAM,UACN,WAAY,GACZ,MAAOA,EAAU,QACjB,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,SAAS,CACvH,EAAG,CACD,KAAM,QACN,WAAY,GACZ,MAAOA,EAAU,QACjB,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,SAAS,CACvH,EAAG,CACD,KAAM,SACN,WAAY,GACZ,MAAOA,EAAU,QACjB,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,SAAS,CACvH,EAAG,CACD,KAAM,QACN,WAAY,GACZ,MAAOA,EAAU,QACjB,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,SAAS,CAC9K,EAAG,CACD,KAAM,cACN,WAAY,GACZ,MAAOA,EAAU,QACjB,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,SAAS,CAC9K,CAAC,EACKQ,GAAN,KAAkB,CAChB,YAAYC,EAAQC,EAAMC,EAAQC,EAAc,CAC1C,OAAOH,GAAW,WACpBA,EAASF,GAAU,KAAKM,GACfA,EAAG,OAASJ,CACpB,GAEH,KAAK,YAAcA,EAAO,OAC1B,KAAK,UAAYC,EACjB,KAAK,OAASC,EACd,KAAK,aAAeC,EACpB,KAAK,MAAQ,KAAK,oBAAoBH,EAAQC,EAAM,KAAK,MAAM,CACjE,CACA,oBAAoBD,EAAQC,EAAMC,EAAQ,CACpC,OAAOF,GAAW,WACpBA,EAASF,GAAU,KAAKM,GACfA,EAAG,OAASJ,CACpB,GAEH,IAAIK,EACJ,OAAQJ,EAAM,CACZ,KAAKV,EAAU,SACbc,EAAaC,GAAc,EAAE,MAAMN,EAAO,MAAM,EAAE,OAAOE,CAAM,EAC/D,MACF,KAAKX,EAAU,QACbc,EAAaE,GAAa,EAAE,MAAMP,EAAO,MAAM,EAAE,OAAOE,CAAM,EAC9D,MACF,KAAKX,EAAU,OACb,CACE,IAAMiB,EAAc,CAAC,GAAGR,EAAO,MAAM,EACjCQ,EAAY,SAAW,IACzBA,EAAY,KAAKA,EAAY,CAAC,CAAC,EAC/B,KAAK,YAAcA,GAErB,IAAMC,EAASC,GAAM,EAAG,EAAG,EAAMF,EAAY,MAAM,EACnDH,EAAaM,GAAY,EAAE,MAAMH,CAAW,EAAE,OAAOC,CAAM,CAC7D,CACA,MACF,QACE,KACJ,CACA,OAAOJ,CACT,CACA,SAASO,EAAO,CACd,GAA2BA,GAAU,KACnC,MAAM,IAAI,MAAM,uBAAuB,EAEzC,GAAI,KAAK,YAAcrB,EAAU,OAAQ,CACvC,IAAMsB,EAAaF,GAAY,EAAE,OAAO,KAAK,MAAM,EAAE,MAAM,CAAC,EAAG,CAAC,CAAC,EACjE,OAAO,KAAK,MAAME,EAAWD,CAAK,CAAC,CACrC,KAAO,CACL,GAAI,OAAO,KAAK,cAAiB,WAC/B,OAAO,KAAK,aAAaA,CAAK,EAEhC,IAAME,EAAiBF,EAAM,SAAS,EAClCG,EAMJ,OALI,KAAK,cAAgB,KAAK,aAAa,OAAS,IAClDA,EAAQ,KAAK,aAAa,KAAKC,GACtBA,EAAQ,KAAK,YAAY,IAAMF,EAAe,YAAY,CAClE,GAECC,EACKA,EAAM,MAEN,KAAK,MAAMH,CAAK,CAE3B,CACF,CACA,uBAAuBA,EAAOK,EAAO,CAC/BA,IAAU,SACZA,EAAQ,KAAK,OAAO,CAAC,GAEvB,IAAMJ,EAAaF,GAAY,EAAE,OAAO,KAAK,MAAM,EAAE,MAAM,CAAC,EAAG,CAAC,CAAC,EAC3DO,EAAkBC,GAAU,EAAE,OAAO,KAAK,WAAW,EAAE,MAAM,CAAC,EAAG,CAAC,CAAC,EACnEC,EAAW,KAAK,SAASR,CAAK,EAE9BS,EAAWR,EAAWI,CAAK,EAC3BK,EAAa,KAAK,SAASL,CAAK,EAChCM,EAASV,EAAWD,CAAK,EAC3BY,EAAI,EACJC,EAAaJ,EACXK,EAAQ,CAAC,EAOf,IANAA,EAAM,KAAK,CACT,MAAOJ,EACP,OAAQD,EACR,eAAgBA,EAChB,QAAS,CACX,CAAC,EACMI,EAAaF,GAAUC,EAAI,KAAK,YAAY,QAAQ,CACzD,IAAMG,EAAQ,KAAK,YAAYH,CAAC,EAC1BI,EAASV,EAAgBS,CAAK,EACpC,GAAIC,GAAUP,EAAU,CACtBG,IACA,QACF,CACA,GAAII,EAAO,QAAQ,CAAC,IAAML,EAASL,EAAgB,UAAU,GAAG,QAAQ,CAAC,EACvE,MAEFQ,EAAM,KAAK,CACT,MAAAC,EACA,OAAAC,EACA,QAAS,CACX,CAAC,EACDH,EAAaG,EACbJ,GACF,CAQA,GAPIE,EAAMA,EAAM,OAAS,CAAC,EAAE,OAAS,KACnCA,EAAM,KAAK,CACT,MAAON,EACP,OAAQG,EACR,QAAS,CACX,CAAC,EAECA,IAAWF,EACbK,EAAM,CAAC,EAAE,OAAS,EAClBA,EAAM,CAAC,EAAE,OAAS,YAGdA,EAAMA,EAAM,OAAS,CAAC,EAAE,SAAW,IACrC,QAAWG,KAAKH,EACdG,EAAE,QAAUA,EAAE,OAASR,IAAaE,EAASF,GAAY,IAI/D,OAAOK,CACT,CACF,EAQA,SAASI,GAAuBC,EAAS,CACvC,IAAMC,EAAW,IAAI,IACrB,QAAWC,KAAUF,EACnB,QAAWG,KAAKD,EAAO,OACrBD,EAAS,IAAIE,EAAE,IAAI,EAGvB,OAAO,MAAM,KAAKF,CAAQ,CAC5B,CAKA,SAASG,GAAaC,EAAQC,EAAgB,GAAM,CAClD,OAAIA,GACeD,EAAO,MAAMxB,GAASA,aAAiB,IAAI,EAEnDrB,EAAU,KAGF6C,EAAO,MAAMxB,GAAS,OAAOA,GAAU,QAAQ,EAEzDrB,EAAU,OAEZA,EAAU,OACnB,CAsCA,SAAS+C,GAAWC,EAAMC,EAAUC,EAAY,MAAO,CACrD,OAAOF,EAAK,KAAK,CAACG,EAAGC,IACfF,IAAc,MACTC,EAAEF,CAAQ,EAAIG,EAAEH,CAAQ,EAExBG,EAAEH,CAAQ,EAAIE,EAAEF,CAAQ,CAElC,CACH,CACA,SAASI,GAAaL,EAAMC,EAAUC,EAAY,MAAOI,EAAQ,CAC/D,OAAON,EAAK,KAAK,CAACG,EAAGC,IAAM,CACzB,IAAMG,EAAOJ,EAAEF,CAAQ,EACjBO,EAAOJ,EAAEH,CAAQ,EACjBQ,EAAOH,EAAO,QAAQC,CAAI,EAC1BG,EAAOJ,EAAO,QAAQE,CAAI,EAChC,OAAIN,IAAc,MACTO,EAAOC,EAEPA,EAAOD,CAElB,CAAC,CACH,CACA,SAASE,GAAWX,EAAMC,EAAUC,EAAY,MAAO,CACrD,OAAOF,EAAK,KAAK,CAACG,EAAGC,IAAM,CACzB,IAAMQ,EAAQT,EAAEF,CAAQ,EAAE,QAAQ,EAC5BY,EAAQT,EAAEH,CAAQ,EAAE,QAAQ,EAClC,OAAIC,IAAc,MACZU,EAAQC,EAAc,EACtBA,EAAQD,EAAc,GACnB,EAEHA,EAAQC,EAAc,GACtBA,EAAQD,EAAc,EACnB,CAEX,CAAC,CACH,CAyxCA,IAAIE,IAAgC,IAAM,CACxC,MAAMA,CAAgB,CACpB,MAAO,CACL,KAAK,UAAO,SAAiCC,EAAmB,CAC9D,OAAO,IAAKA,GAAqBD,EACnC,CACF,CACA,MAAO,CACL,KAAK,UAAyBE,GAAiB,CAC7C,KAAMF,CACR,CAAC,CACH,CACA,MAAO,CACL,KAAK,UAAyBG,GAAiB,CAC7C,QAAS,CAACC,EAAiB,CAC7B,CAAC,CACH,CACF,CACA,OAAOJ,CACT,GAAG,EAICK,IAA6B,IAAM,CACrC,MAAMA,CAAa,CACjB,YAAYC,EAAS,CACnB,KAAK,WAAa,GAClB,KAAK,SAAW,GAChB,KAAK,OAAS,EACd,KAAK,SAAW,GAChB,KAAK,WAAa,GAClB,KAAK,cAAgB,GACrB,KAAK,OAAS,IAAIC,EAClB,KAAK,SAAW,IAAIA,EACpB,KAAK,WAAa,IAAIA,EACtB,KAAK,YAAc,GACnB,KAAK,QAAU,GACf,KAAK,QAAUD,EAAQ,aACzB,CACA,YAAYE,EAAS,CACfA,EAAQ,YACV,KAAK,cAAc,EAErB,KAAK,OAAO,CACd,CACA,QAAS,CACP,KAAK,WAAa,OAASC,GAAG,EAAE,SAAS,EACzC,KAAK,aAAe,QAAQ,KAAK,UAAU,IACvC,KAAK,UAAY,KAAK,OACxB,KAAK,cAAgB,KAAK,YAAY,EACtC,KAAK,YAAc,IAEnB,KAAK,YAAc,GAErB,KAAK,aAAa,EAClB,KAAK,eAAe,CACtB,CACA,eAAgB,CACd,KAAK,KAAO,KAAK,gBAAgB,EACjC,WAAW,KAAK,OAAO,KAAK,IAAI,EAAG,GAAG,CACxC,CACA,cAAe,CACb,IAAMC,EAAOC,EAAO,KAAK,OAAO,EAAE,OAAO,MAAM,EACzCC,EAAO,KAAK,QAAQ,EACtB,KAAK,WACPF,EAAK,WAAW,EAAE,SAAS,GAAG,EAAE,KAAK,IAAKE,CAAI,EAE9CF,EAAK,KAAK,IAAKE,CAAI,CAEvB,CACA,aAAc,CACZ,OAAI,KAAK,MACA,KAAK,MAEP,CAAC,CACN,OAAQ,EACR,MAAO,KAAK,KACZ,QAAS,KAAK,gBAAgB,CAChC,EAAG,CACD,OAAQ,IACR,MAAO,KAAK,KACZ,QAAS,CACX,CAAC,CACH,CACA,iBAAkB,CAChB,GAAI,CAAC,KAAK,WACR,OAAO,KAAK,QAAQ,EAEtB,IAAIC,EAAS,KAAK,UAAU,EACxBD,EACJ,OAAI,KAAK,WACH,KAAK,cAAgBE,EAAe,UACtCD,EAAS,KAAK,IAAI,KAAK,OAAQA,CAAM,EACrCD,EAAOG,GAAY,KAAK,EAAG,KAAK,EAAI,KAAK,OAAQ,KAAK,MAAO,EAAG,EAAG,KAAK,KAAK,GACpE,KAAK,cAAgBD,EAAe,aAC7CD,EAAS,KAAK,IAAI,KAAK,MAAOA,CAAM,EACpCD,EAAOG,GAAY,KAAK,EAAG,KAAK,EAAG,EAAG,KAAK,OAAQ,EAAG,KAAK,KAAK,GAG9D,KAAK,cAAgBD,EAAe,SACtCF,EAAOG,GAAY,KAAK,EAAG,KAAK,EAAI,KAAK,OAAQ,KAAK,MAAO,EAAG,EAAG,KAAK,KAAK,EACpE,KAAK,cAAgBD,EAAe,aAC7CF,EAAOG,GAAY,KAAK,EAAG,KAAK,EAAG,EAAG,KAAK,OAAQ,EAAG,KAAK,KAAK,GAG7DH,CACT,CACA,SAAU,CACR,IAAIC,EAAS,KAAK,UAAU,EACxBD,EACJ,OAAI,KAAK,WACH,KAAK,cAAgBE,EAAe,UACtCD,EAAS,KAAK,IAAI,KAAK,OAAQA,CAAM,EACrCD,EAAOG,GAAY,KAAK,EAAG,KAAK,EAAG,KAAK,MAAO,KAAK,OAAQF,EAAQ,KAAK,KAAK,GACrE,KAAK,cAAgBC,EAAe,aAC7CD,EAAS,KAAK,IAAI,KAAK,MAAOA,CAAM,EACpCD,EAAOG,GAAY,KAAK,EAAG,KAAK,EAAG,KAAK,MAAO,KAAK,OAAQF,EAAQ,KAAK,KAAK,GAGhFD,EAAOG,GAAY,KAAK,EAAG,KAAK,EAAG,KAAK,MAAO,KAAK,OAAQF,EAAQ,KAAK,KAAK,EAEzED,CACT,CACA,WAAY,CACV,IAAIC,EAAS,EACb,OAAI,KAAK,YAAc,KAAK,OAAS,GAAK,KAAK,MAAQ,IACrDA,EAAS,KAAK,MAAM,KAAK,IAAI,EAAG,KAAK,OAAS,EAAG,KAAK,MAAQ,CAAC,CAAC,GAE3DA,CACT,CACA,iBAAkB,CAChB,OAAI,KAAK,WACA,GAEA,EAEX,CACA,IAAI,OAAQ,CACV,IAAIG,EAAQ,CAAC,GAAO,GAAO,GAAO,EAAK,EACvC,OAAI,KAAK,aACH,KAAK,cAAgBF,EAAe,SAClC,KAAK,KAAK,MAAQ,EACpBE,EAAQ,CAAC,GAAM,GAAM,GAAO,EAAK,EAEjCA,EAAQ,CAAC,GAAO,GAAO,GAAM,EAAI,EAE1B,KAAK,cAAgBF,EAAe,aACzC,KAAK,KAAK,MAAQ,EACpBE,EAAQ,CAAC,GAAO,GAAM,GAAO,EAAI,EAEjCA,EAAQ,CAAC,GAAM,GAAO,GAAM,EAAK,IAIhCA,CACT,CACA,cAAe,CACb,KAAK,SAAS,KAAK,KAAK,IAAI,CAC9B,CACA,cAAe,CACb,KAAK,WAAW,KAAK,KAAK,IAAI,CAChC,CACA,gBAAiB,CACf,KAAK,QAAU,KAAK,gBAAkB,KAAK,cAAgBF,EAAe,UAAY,KAAK,SAAW,GAAK,KAAK,cAAgBA,EAAe,YAAc,KAAK,QAAU,EAC9K,CACA,MAAO,CACL,KAAK,UAAO,SAA8Bb,EAAmB,CAC3D,OAAO,IAAKA,GAAqBI,GAAiBY,EAAqBC,EAAU,CAAC,CACpF,CACF,CACA,MAAO,CACL,KAAK,UAAyBC,EAAkB,CAC9C,KAAMd,EACN,UAAW,CAAC,CAAC,IAAK,iBAAkB,EAAE,CAAC,EACvC,aAAc,SAAmCe,EAAIC,EAAK,CACpDD,EAAK,GACJE,EAAW,aAAc,UAAsD,CAChF,OAAOD,EAAI,aAAa,CAC1B,CAAC,EAAE,aAAc,UAAsD,CACrE,OAAOA,EAAI,aAAa,CAC1B,CAAC,CAEL,EACA,OAAQ,CACN,KAAM,OACN,KAAM,OACN,MAAO,QACP,OAAQ,SACR,EAAG,IACH,EAAG,IACH,YAAa,cACb,WAAY,aACZ,SAAU,WACV,OAAQ,SACR,SAAU,WACV,MAAO,QACP,WAAY,aACZ,UAAW,YACX,cAAe,eACjB,EACA,QAAS,CACP,OAAQ,SACR,SAAU,WACV,WAAY,YACd,EACA,WAAY,GACZ,SAAU,CAAIE,CAAoB,EAClC,MAAOC,GACP,MAAO,EACP,KAAM,EACN,OAAQ,CAAC,CAAC,EAAG,MAAM,EAAG,CAAC,SAAU,OAAQ,OAAQ,MAAO,WAAY,KAAM,EAAG,MAAO,EAAG,OAAO,EAAG,CAAC,iCAAkC,GAAI,EAAG,cAAe,OAAQ,OAAO,CAAC,EAC1K,SAAU,SAA+BJ,EAAIC,EAAK,CAC5CD,EAAK,IACJK,EAAW,EAAGC,GAAmC,EAAG,EAAG,OAAQ,CAAC,EAChEC,EAAe,EACfC,EAAe,EAAG,OAAQ,CAAC,EAC3BN,EAAW,QAAS,UAAuD,CAC5E,OAAOD,EAAI,OAAO,KAAKA,EAAI,IAAI,CACjC,CAAC,EACEQ,EAAa,GAEdT,EAAK,IACJU,EAAW,OAAQT,EAAI,WAAW,EAClCU,EAAU,EACVC,GAAY,SAAUX,EAAI,QAAQ,EAAE,SAAUA,EAAI,OAAO,EACzDY,EAAY,IAAKZ,EAAI,IAAI,EAAE,aAAcA,EAAI,SAAS,EAAE,OAAQA,EAAI,YAAcA,EAAI,aAAeA,EAAI,IAAI,EAEpH,EACA,aAAc,CAAIa,EAAMC,EAA0B,EAClD,cAAe,EACf,gBAAiB,CACnB,CAAC,CACH,CACF,CACA,OAAO9B,CACT,GAAG,EAIC+B,GAA4B,SAAUA,EAAc,CACtD,OAAAA,EAAa,SAAc,WAC3BA,EAAa,WAAgB,aAC7BA,EAAa,QAAa,UACnBA,CACT,EAAEA,IAAgB,CAAC,CAAC,EAChBC,GAAuB,SAAUA,EAAS,CAC5C,OAAAA,EAAQ,SAAc,WACtBA,EAAQ,SAAc,WACfA,CACT,EAAEA,IAAW,CAAC,CAAC,EACXC,IAAkC,IAAM,CAC1C,MAAMA,CAAkB,CACtB,YAAYhC,EAAS,CACnB,KAAK,kBAAoB,IAAIC,EAC7B,KAAK,kBAAoB,EACzB,KAAK,gBAAkB,EACvB,KAAK,QAAUD,EAAQ,aACzB,CACA,YAAYE,EAAS,CACnB,KAAK,OAAO,CACd,CACA,SAAU,CACR,IAAM+B,EAAI,KAAK,QAAQ,sBAAsB,EAAE,OACzCC,EAAI,KAAK,QAAQ,sBAAsB,EAAE,MAC/C,MAAO,CACL,OAAQD,EACR,MAAOC,EACP,SAAU,KAAK,MAAQ,CACzB,CACF,CACA,iBAAkB,CAChB,KAAK,kBAAkB,KAAK,KAAK,QAAQ,CAAC,CAC5C,CACA,QAAS,CACH,KAAK,gBACP,KAAK,cAAgB,KAAK,gBAAgB,KAAK,KAAK,EAEpD,KAAK,cAAgBC,GAAY,KAAK,KAAK,EAEzC,KAAK,cAAgB,cACvB,KAAK,EAAI,KAAK,KAAO,KAAK,SAGtB,KAAK,MAAQ,GACf,KAAK,EAAI,KAAK,EAAI,KAAK,kBACvB,KAAK,WAAa,QAElB,KAAK,EAAI,KAAK,EAAI,KAAK,kBACvB,KAAK,WAAa,SAEpB,KAAK,EAAI,KAAK,KAAO,KAAK,UAAY,IAGtC,KAAK,EAAI,KAAK,KAAO,KAAK,SAAW,EACrC,KAAK,EAAI,KAAK,KAAO,KAAK,UACtB,KAAK,MAAQ,GACf,KAAK,EAAI,KAAK,EAAI,KAAK,gBACvB,KAAK,WAAa,QAElB,KAAK,EAAI,KAAK,EAAI,KAAK,gBACvB,KAAK,WAAa,SAEpB,KAAK,UAAY,eAAe,KAAK,CAAC,MAAM,KAAK,CAAC,IAEtD,CACA,MAAO,CACL,KAAK,UAAO,SAAmCxC,EAAmB,CAChE,OAAO,IAAKA,GAAqBqC,GAAsBrB,EAAqBC,EAAU,CAAC,CACzF,CACF,CACA,MAAO,CACL,KAAK,UAAyBC,EAAkB,CAC9C,KAAMmB,EACN,UAAW,CAAC,CAAC,IAAK,uBAAwB,EAAE,CAAC,EAC7C,OAAQ,CACN,MAAO,QACP,gBAAiB,kBACjB,KAAM,OACN,KAAM,OACN,SAAU,WACV,UAAW,YACX,YAAa,aACf,EACA,QAAS,CACP,kBAAmB,mBACrB,EACA,WAAY,GACZ,SAAU,CAAIf,CAAoB,EAClC,MAAOmB,GACP,MAAO,EACP,KAAM,EACN,OAAQ,CAAC,CAAC,qBAAsB,SAAU,EAAG,eAAe,CAAC,EAC7D,SAAU,SAAoCtB,EAAIC,EAAK,CACjDD,EAAK,IACJO,EAAe,EACfC,EAAe,EAAG,OAAQ,CAAC,EAC3Be,EAAO,CAAC,EACRd,EAAa,GAEdT,EAAK,IACJa,EAAY,cAAeZ,EAAI,UAAU,EAAE,YAAaA,EAAI,SAAS,EAAE,IAAKA,EAAI,CAAC,EAAE,IAAKA,EAAI,CAAC,EAC7FU,EAAU,EACVa,GAAmB,IAAKvB,EAAI,cAAe,GAAG,EAErD,EACA,OAAQ,CAAC,mDAAmD,EAC5D,gBAAiB,CACnB,CAAC,CACH,CACF,CACA,OAAOiB,CACT,GAAG,EAICO,IAAiC,IAAM,CACzC,MAAMA,CAAiB,CACrB,aAAc,CACZ,KAAK,KAAOT,GAAa,SACzB,KAAK,gBAAkB,GACvB,KAAK,WAAa,GAClB,KAAK,cAAgB,GACrB,KAAK,cAAgB,GACrB,KAAK,OAAS,IAAI7B,EAClB,KAAK,SAAW,IAAIA,EACpB,KAAK,WAAa,IAAIA,EACtB,KAAK,sBAAwB,IAAIA,EACjC,KAAK,kBAAoB,CAAC,EAC1B,KAAK,eAAiBO,CACxB,CACA,YAAYN,EAAS,CACnB,KAAK,OAAO,CACd,CACA,QAAS,CACP,KAAK,sBAAsB,EAC3B,IAAMsC,EAAK,CACT,CAACT,GAAQ,QAAQ,EAAG,EACpB,CAACA,GAAQ,QAAQ,EAAG,CACtB,EACIU,EACJA,EAASV,GAAQ,SACjB,IAAIW,EACA,KAAK,OAASZ,GAAa,aAC7BY,EAAQ,KAAK,OAAO,IAAIC,GAAKA,EAAE,KAAK,EAAE,OAAO,CAACC,EAAKD,IAAMC,EAAMD,EAAG,CAAC,GAErE,IAAME,EAAY,KAAK,IAAI,KAAK,OAAO,OAAO,EAAE,CAAC,EAAG,CAAC,EACrD,KAAK,KAAO,KAAK,OAAO,IAAIF,GAAK,CAC/B,IAAIG,EAAQH,EAAE,MACRI,EAAQ,KAAK,SAASJ,CAAC,EACvBK,EAAiBb,GAAYY,CAAK,EAClCE,EAAa,KAAK,WACxBR,EAASK,EAAQ,EAAIf,GAAQ,SAAWA,GAAQ,SAChD,IAAMmB,EAAM,CACV,MAAAJ,EACA,MAAAC,EACA,WAAAE,EACA,KAAMN,EACN,eAAAK,CACF,EAEA,GADAE,EAAI,OAAS,KAAK,OAAO,UAAU,EAC/B,KAAK,OAASpB,GAAa,SAC7BoB,EAAI,MAAQ,KAAK,IAAI,KAAK,OAAOJ,CAAK,EAAI,KAAK,OAAOD,CAAS,CAAC,EAC5DC,EAAQ,EACVI,EAAI,EAAI,KAAK,OAAOJ,CAAK,EAEzBI,EAAI,EAAI,KAAK,OAAOL,CAAS,EAE/BK,EAAI,EAAI,KAAK,OAAOH,CAAK,UAChB,KAAK,OAASjB,GAAa,QAAS,CAC7C,IAAMqB,EAAUX,EAAGC,CAAM,EACnBW,EAAUD,EAAUL,EAC1BN,EAAGC,CAAM,GAAKK,EACdI,EAAI,MAAQ,KAAK,OAAOE,CAAO,EAAI,KAAK,OAAOD,CAAO,EACtDD,EAAI,EAAI,KAAK,OAAOC,CAAO,EAC3BD,EAAI,EAAI,EACRA,EAAI,QAAUC,EACdD,EAAI,QAAUE,CAChB,SAAW,KAAK,OAAStB,GAAa,WAAY,CAChD,IAAIqB,EAAUX,EAAGC,CAAM,EACnBW,EAAUD,EAAUL,EACxBN,EAAGC,CAAM,GAAKK,EACVJ,EAAQ,GACVS,EAAUA,EAAU,IAAMT,EAC1BU,EAAUA,EAAU,IAAMV,IAE1BS,EAAU,EACVC,EAAU,GAEZF,EAAI,MAAQ,KAAK,OAAOE,CAAO,EAAI,KAAK,OAAOD,CAAO,EACtDD,EAAI,EAAI,KAAK,OAAOC,CAAO,EAC3BD,EAAI,EAAI,EACRA,EAAI,QAAUC,EACdD,EAAI,QAAUE,EACdN,GAASM,EAAUD,GAAS,QAAQ,CAAC,EAAI,GAC3C,CACI,KAAK,OAAO,YAAcE,EAAU,QACtCH,EAAI,MAAQ,KAAK,OAAO,SAASH,CAAK,EAElC,KAAK,OAASjB,GAAa,UAC7BoB,EAAI,MAAQ,KAAK,OAAO,SAASJ,CAAK,EACtCI,EAAI,cAAgB,KAAK,OAAO,uBAAuBJ,CAAK,IAE5DI,EAAI,MAAQ,KAAK,OAAO,SAASA,EAAI,OAAO,EAC5CA,EAAI,cAAgB,KAAK,OAAO,uBAAuBA,EAAI,QAASA,EAAI,OAAO,GAGnF,IAAII,EAAeN,EACnB,OAAAE,EAAI,UAAYF,EAAiB,IAAMF,EAAM,eAAe,EACxD,KAAK,aAAe,MAAQ,KAAK,aAAe,SAClDQ,EAAe,GAAG,KAAK,UAAU,WAAMN,CAAc,GACrDE,EAAI,KAAK,OAAS,KAAK,WACvBA,EAAI,UAAY,KAAK,WAAa,IAAMA,EAAI,WAE9CA,EAAI,YAAc,KAAK,gBAAkB,OAAY;AAAA,sCACvBK,GAAYD,CAAY,CAAC;AAAA,oCAC3B,KAAK,oBAAsB,KAAK,oBAAoBR,CAAK,EAAIA,EAAM,eAAe,CAAC;AAAA,QAExGI,CACT,CAAC,EACD,KAAK,iBAAiB,CACxB,CACA,kBAAmB,CACjB,GAAI,KAAK,OAASpB,GAAa,QAAS,CACtC,KAAK,kBAAoB,CAAC,EAC1B,IAAM0B,EAAU,CAAC,EACjBA,EAAQ,OAAS,KAAK,WACtB,IAAMC,EAAgB,KAAK,OAAO,IAAId,GAAKA,EAAE,KAAK,EAAE,OAAO,CAACC,EAAKD,IAAMA,EAAI,EAAIC,EAAMD,EAAIC,EAAK,CAAC,EACzFc,EAAgB,KAAK,OAAO,IAAIf,GAAKA,EAAE,KAAK,EAAE,OAAO,CAACC,EAAKD,IAAMA,EAAI,EAAIC,EAAMD,EAAIC,EAAK,CAAC,EAC/FY,EAAQ,MAAQC,EAAgBC,EAChCF,EAAQ,EAAI,EACZA,EAAQ,EAAI,EAERA,EAAQ,MAAQ,EAClBA,EAAQ,MAAQ,KAAK,OAAOC,CAAa,EAEzCD,EAAQ,MAAQ,KAAK,OAAOE,CAAa,EAE3CF,EAAQ,OAAS,KAAK,OAAO,UAAU,EACvC,KAAK,kBAAkB,KAAKA,CAAO,CACrC,MACE,KAAK,kBAAoB,KAAK,OAAO,IAAIb,GAAK,CAC5C,IAAMa,EAAU,CAAC,EACjB,OAAAA,EAAQ,OAAS,KAAK,YAAcb,EAAE,MACtCa,EAAQ,MAAQb,EAAE,MAClBa,EAAQ,EAAI,KAAK,OAAO,CAAC,EACzBA,EAAQ,EAAI,KAAK,OAAOb,EAAE,KAAK,EAC/Ba,EAAQ,MAAQ,KAAK,OAAOA,EAAQ,KAAK,EAAI,KAAK,OAAO,CAAC,EAC1DA,EAAQ,OAAS,KAAK,OAAO,UAAU,EAChCA,CACT,CAAC,CAEL,CACA,uBAAwB,CACtB,KAAK,iBAAmB,KAAK,gBAAkB,OAAYG,EAAe,IAC1E,KAAK,YAAc,KAAK,gBAAkB,OAAYC,GAAW,OACnE,CACA,SAASC,EAAO,CACd,OAAK,KAAK,cACG,KAAK,cAAc,KAAKC,GAC5BD,EAAM,OAASC,EAAO,MAAQD,EAAM,QAAUC,EAAO,KAC7D,IACe,OAJgB,EAKlC,CACA,SAASC,EAAU,CACjB,OAAIA,EAAS,MACJA,EAAS,MAEXA,EAAS,IAClB,CACA,QAAQC,EAAOd,EAAK,CAClB,OAAOA,EAAI,KACb,CACA,iBAAiBc,EAAOC,EAAU,CAChC,OAAOD,EAAQ,IAAMC,EAAS,OAAS,IAAMA,EAAS,KACxD,CACA,MAAMC,EAAM,CACV,KAAK,OAAO,KAAKA,CAAI,CACvB,CACA,MAAO,CACL,KAAK,UAAO,SAAkCvE,EAAmB,CAC/D,OAAO,IAAKA,GAAqB4C,EACnC,CACF,CACA,MAAO,CACL,KAAK,UAAyB1B,EAAkB,CAC9C,KAAM0B,EACN,UAAW,CAAC,CAAC,IAAK,+BAAgC,EAAE,CAAC,EACrD,OAAQ,CACN,KAAM,OACN,KAAM,OACN,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,gBAAiB,kBACjB,SAAU,WACV,cAAe,gBACf,WAAY,aACZ,gBAAiB,kBACjB,WAAY,aACZ,WAAY,aACZ,cAAe,gBACf,oBAAqB,sBACrB,cAAe,eACjB,EACA,QAAS,CACP,OAAQ,SACR,SAAU,WACV,WAAY,aACZ,sBAAuB,uBACzB,EACA,WAAY,GACZ,SAAU,CAAItB,CAAoB,EAClC,MAAOkD,GACP,MAAO,EACP,KAAM,EACN,OAAQ,CAAC,CAAC,iBAAkB,GAAI,cAAe,GAAI,EAAG,QAAS,SAAU,IAAK,IAAK,OAAQ,QAAS,OAAQ,cAAe,aAAc,WAAY,WAAY,YAAa,aAAc,kBAAmB,mBAAoB,cAAe,eAAgB,kBAAmB,iBAAkB,gBAAiB,SAAU,WAAY,aAAc,EAAG,QAAS,UAAW,cAAc,EAAG,CAAC,EAAG,MAAM,EAAG,CAAC,iBAAkB,GAAI,cAAe,GAAI,EAAG,SAAU,WAAY,aAAc,QAAS,SAAU,IAAK,IAAK,OAAQ,QAAS,OAAQ,cAAe,aAAc,WAAY,WAAY,YAAa,aAAc,kBAAmB,mBAAoB,cAAe,eAAgB,kBAAmB,iBAAkB,eAAe,EAAG,CAAC,uBAAwB,GAAI,EAAG,OAAQ,OAAQ,WAAY,YAAa,QAAS,kBAAmB,cAAe,oBAAqB,EAAG,QAAS,UAAW,cAAc,EAAG,CAAC,uBAAwB,GAAI,EAAG,oBAAqB,OAAQ,OAAQ,WAAY,YAAa,QAAS,kBAAmB,aAAa,CAAC,EAC9hC,SAAU,SAAmCrD,EAAIC,EAAK,CAChDD,EAAK,GACJK,EAAW,EAAGiD,GAAoC,EAAG,GAAI,IAAK,CAAC,EAAE,EAAGC,GAAoC,EAAG,EAAG,IAAK,CAAC,EAErHvD,EAAK,IACJU,EAAW,UAAWT,EAAI,IAAI,EAAE,eAAgBA,EAAI,OAAO,EAC3DU,EAAU,EACVD,EAAW,OAAQT,EAAI,aAAa,EAE3C,EACA,aAAc,CAAIuD,GAAY1C,EAAM2C,GAAkBxE,GAAciC,EAAiB,EACrF,cAAe,EACf,KAAM,CACJ,UAAW,CAACwC,GAAQ,iBAAkB,CAACC,GAAW,SAAU,CAACC,EAAM,CACjE,QAAS,CACX,CAAC,EAAGC,GAAQ,IAAKD,EAAM,CACrB,QAAS,CACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACT,EACA,gBAAiB,CACnB,CAAC,CACH,CACF,CACA,OAAOnC,CACT,GAAG,EAICqC,IAAuC,IAAM,CAC/C,MAAMA,UAA+BC,EAAmB,CACtD,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,OAAS,GACd,KAAK,YAAc,SACnB,KAAK,eAAiBC,GAAe,MACrC,KAAK,gBAAkB,GACvB,KAAK,cAAgB,GACrB,KAAK,cAAgB,CAAC,EACtB,KAAK,eAAiB,GACtB,KAAK,eAAiB,GACtB,KAAK,iBAAmB,GACxB,KAAK,mBAAqB,GAC1B,KAAK,mBAAqB,GAC1B,KAAK,WAAa,EAClB,KAAK,aAAe,GACpB,KAAK,WAAa,GAClB,KAAK,cAAgB,GACrB,KAAK,cAAgB,GACrB,KAAK,UAAY,GACjB,KAAK,SAAW,IAAI7E,EACpB,KAAK,WAAa,IAAIA,EACtB,KAAK,OAAS,CAAC,GAAI,GAAI,GAAI,EAAE,EAC7B,KAAK,YAAc,EACnB,KAAK,WAAa,EAClB,KAAK,kBAAoB,CACvB,SAAU,EACV,SAAU,CACZ,CACF,CACA,QAAS,CACP,MAAM,OAAO,EACR,KAAK,gBACR,KAAK,kBAAoB,CACvB,SAAU,EACV,SAAU,CACZ,GAEF,KAAK,OAAS,CAAC,GAAI,GAAK,KAAK,kBAAkB,SAAU,GAAI,GAAK,KAAK,kBAAkB,QAAQ,EACjG,KAAK,KAAO8E,GAAwB,CAClC,MAAO,KAAK,MACZ,OAAQ,KAAK,OACb,QAAS,KAAK,OACd,UAAW,KAAK,MAChB,UAAW,KAAK,MAChB,YAAa,KAAK,YAClB,WAAY,KAAK,WACjB,WAAY,KAAK,eACjB,WAAY,KAAK,eACjB,WAAY,KAAK,OACjB,WAAY,KAAK,WACjB,eAAgB,KAAK,cACvB,CAAC,EACD,KAAK,YAAY,EACjB,KAAK,OAAS,KAAK,UAAU,EAC7B,KAAK,OAAS,KAAK,UAAU,EAC7B,KAAK,UAAU,EACf,KAAK,cAAgB,KAAK,iBAAiB,EAC3C,KAAK,UAAY,aAAa,KAAK,KAAK,OAAO,MAAM,KAAK,OAAO,CAAC,CAAC,GACrE,CACA,WAAY,CACV,KAAK,QAAU,KAAK,WAAW,EAC/B,IAAMC,EAAQC,GAAY,EAAE,MAAM,CAAC,EAAG,KAAK,KAAK,KAAK,CAAC,EAAE,OAAO,KAAK,OAAO,EAC3E,OAAO,KAAK,aAAeD,EAAM,KAAK,EAAIA,CAC5C,CACA,WAAY,CACV,KAAK,QAAU,KAAK,WAAW,EAC/B,IAAME,EAAU,KAAK,QAAQ,QAAU,KAAK,KAAK,OAAS,KAAK,WAAa,GAC5E,OAAOC,GAAU,EAAE,WAAW,CAAC,EAAG,KAAK,KAAK,MAAM,CAAC,EAAE,aAAaD,CAAO,EAAE,OAAO,KAAK,OAAO,CAChG,CACA,YAAa,CACX,IAAME,EAAS,KAAK,QAAQ,IAAIzC,GAAKA,EAAE,KAAK,EACtC0C,EAAM,KAAK,UAAY,KAAK,IAAI,KAAK,UAAW,GAAGD,CAAM,EAAI,KAAK,IAAI,EAAG,GAAGA,CAAM,EAClFE,EAAM,KAAK,UAAY,KAAK,IAAI,KAAK,UAAW,GAAGF,CAAM,EAAI,KAAK,IAAI,EAAG,GAAGA,CAAM,EACxF,MAAO,CAACC,EAAKC,CAAG,CAClB,CACA,YAAa,CACX,OAAO,KAAK,QAAQ,IAAI3C,GAAKA,EAAE,KAAK,CACtC,CACA,QAAQuB,EAAM,CACZ,KAAK,OAAO,KAAKA,CAAI,CACvB,CACA,WAAY,CACV,IAAIqB,EACA,KAAK,aAAelC,EAAU,QAChCkC,EAAS,KAAK,QAEdA,EAAS,KAAK,QAEhB,KAAK,OAAS,IAAIC,GAAY,KAAK,OAAQ,KAAK,WAAYD,EAAQ,KAAK,YAAY,CACvF,CACA,kBAAmB,CACjB,IAAME,EAAO,CACX,UAAW,KAAK,WAChB,OAAQ,OACR,OAAQ,CAAC,EACT,MAAO,OACP,SAAU,KAAK,cACjB,EACA,OAAIA,EAAK,YAAc,WACrBA,EAAK,OAAS,KAAK,QACnBA,EAAK,OAAS,KAAK,OACnBA,EAAK,MAAQ,KAAK,cAElBA,EAAK,OAAS,KAAK,QACnBA,EAAK,OAAS,KAAK,OAAO,OAErBA,CACT,CACA,iBAAiB,CACf,MAAAC,CACF,EAAG,CACD,KAAK,WAAaA,EAClB,KAAK,OAAO,CACd,CACA,kBAAkB,CAChB,OAAAC,CACF,EAAG,CACD,KAAK,YAAcA,EACnB,KAAK,OAAO,CACd,CACA,2BAA2BC,EAAO,CAC5BA,EAAM,KAAK,SACb,KAAK,kBAAkB,SAAW,KAAK,IAAI,KAAK,kBAAkB,SAAUA,EAAM,KAAK,KAAK,EAE5F,KAAK,kBAAkB,SAAW,KAAK,IAAI,KAAK,kBAAkB,SAAUA,EAAM,KAAK,KAAK,EAE1FA,EAAM,QAAU,KAAK,QAAQ,OAAS,GACxC,WAAW,IAAM,KAAK,OAAO,CAAC,CAElC,CACA,WAAWC,EAAMC,EAAa,GAAO,CACnCD,EAAO,KAAK,QAAQ,KAAKlD,GACnBmD,EACKnD,EAAE,QAAUkD,EAAK,KAEjBlD,EAAE,OAASkD,EAAK,IAE1B,EAIG,EAHQ,KAAK,cAAc,UAAUlD,GAChCA,EAAE,OAASkD,EAAK,MAAQlD,EAAE,QAAUkD,EAAK,OAASlD,EAAE,SAAWkD,EAAK,MAC5E,EACS,MAGV,KAAK,cAAgB,CAACA,EAAM,GAAG,KAAK,aAAa,EACjD,KAAK,SAAS,KAAK,CACjB,MAAOA,EACP,QAAS,KAAK,aAChB,CAAC,EACH,CACA,aAAaA,EAAMC,EAAa,GAAO,CACrCD,EAAO,KAAK,QAAQ,KAAKlD,GACnBmD,EACKnD,EAAE,QAAUkD,EAAK,KAEjBlD,EAAE,OAASkD,EAAK,IAE1B,EACD,IAAME,EAAM,KAAK,cAAc,UAAUpD,GAChCA,EAAE,OAASkD,EAAK,MAAQlD,EAAE,QAAUkD,EAAK,OAASlD,EAAE,SAAWkD,EAAK,MAC5E,EACD,KAAK,cAAc,OAAOE,EAAK,CAAC,EAChC,KAAK,cAAgB,CAAC,GAAG,KAAK,aAAa,EAC3C,KAAK,WAAW,KAAK,CACnB,MAAOF,EACP,QAAS,KAAK,aAChB,CAAC,CACH,CACA,MAAO,CACL,KAAK,WAAuB,IAAM,CAChC,IAAIG,EACJ,OAAO,SAAwCrG,EAAmB,CAChE,OAAQqG,IAAwCA,EAAyCC,GAAsBrB,CAAsB,IAAIjF,GAAqBiF,CAAsB,CACtL,CACF,GAAG,CACL,CACA,MAAO,CACL,KAAK,UAAyB/D,EAAkB,CAC9C,KAAM+D,EACN,UAAW,CAAC,CAAC,2BAA2B,CAAC,EACzC,eAAgB,SAA+C9D,EAAIC,EAAKmF,EAAU,CAIhF,GAHIpF,EAAK,GACJqF,GAAeD,EAAUE,GAAM,CAAC,EAEjCtF,EAAK,EAAG,CACV,IAAIuF,EACDC,GAAeD,EAAQE,GAAY,CAAC,IAAMxF,EAAI,gBAAkBsF,EAAG,MACxE,CACF,EACA,OAAQ,CACN,OAAQ,SACR,YAAa,cACb,eAAgB,iBAChB,MAAO,QACP,MAAO,QACP,eAAgB,iBAChB,eAAgB,iBAChB,WAAY,aACZ,WAAY,aACZ,gBAAiB,kBACjB,SAAU,WACV,cAAe,gBACf,cAAe,gBACf,WAAY,aACZ,eAAgB,iBAChB,eAAgB,iBAChB,iBAAkB,mBAClB,mBAAoB,qBACpB,mBAAoB,qBACpB,oBAAqB,sBACrB,oBAAqB,sBACrB,WAAY,aACZ,WAAY,aACZ,WAAY,aACZ,aAAc,eACd,WAAY,aACZ,UAAW,YACX,UAAW,YACX,cAAe,gBACf,oBAAqB,sBACrB,cAAe,gBACf,UAAW,WACb,EACA,QAAS,CACP,SAAU,WACV,WAAY,YACd,EACA,WAAY,GACZ,SAAU,CAAIG,EAA0B,EACxC,MAAO,EACP,KAAM,GACN,OAAQ,CAAC,CAAC,EAAG,mBAAoB,sBAAuB,wBAAyB,OAAQ,aAAc,gBAAiB,gBAAiB,YAAY,EAAG,CAAC,EAAG,YAAa,OAAO,EAAG,CAAC,oBAAqB,GAAI,EAAG,SAAU,OAAQ,gBAAiB,YAAa,YAAa,YAAa,cAAe,gBAAiB,iBAAkB,QAAS,YAAa,oBAAqB,EAAG,MAAM,EAAG,CAAC,oBAAqB,GAAI,EAAG,SAAU,OAAQ,YAAa,YAAa,YAAa,gBAAiB,iBAAkB,QAAS,cAAe,YAAa,oBAAqB,EAAG,MAAM,EAAG,CAAC,+BAAgC,GAAI,EAAG,SAAU,WAAY,aAAc,wBAAyB,SAAU,SAAU,SAAU,SAAU,OAAQ,WAAY,kBAAmB,kBAAmB,gBAAiB,aAAc,aAAc,gBAAiB,sBAAuB,eAAe,EAAG,CAAC,oBAAqB,GAAI,EAAG,oBAAqB,SAAU,OAAQ,gBAAiB,YAAa,YAAa,YAAa,cAAe,gBAAiB,iBAAkB,QAAS,WAAW,EAAG,CAAC,oBAAqB,GAAI,EAAG,oBAAqB,SAAU,OAAQ,YAAa,YAAa,YAAa,gBAAiB,iBAAkB,QAAS,cAAe,WAAW,CAAC,EACvuC,SAAU,SAAyC1F,EAAIC,EAAK,CACtDD,EAAK,IACJQ,EAAe,EAAG,mBAAoB,CAAC,EACvCN,EAAW,mBAAoB,SAAsFyF,EAAQ,CAC9H,OAAO1F,EAAI,QAAQ0F,CAAM,CAC3B,CAAC,EAAE,sBAAuB,SAAyFA,EAAQ,CACzH,OAAO1F,EAAI,WAAW0F,EAAQ,EAAI,CACpC,CAAC,EAAE,wBAAyB,SAA2FA,EAAQ,CAC7H,OAAO1F,EAAI,aAAa0F,EAAQ,EAAI,CACtC,CAAC,EACEpF,EAAe,EACfC,EAAe,EAAG,IAAK,CAAC,EACxBH,EAAW,EAAGuF,GAA0C,EAAG,GAAI,IAAK,CAAC,EAAE,EAAGC,GAA0C,EAAG,GAAI,IAAK,CAAC,EACjIrF,EAAe,EAAG,IAAK,CAAC,EACxBN,EAAW,SAAU,SAA6DyF,EAAQ,CAC3F,OAAO1F,EAAI,QAAQ0F,CAAM,CAC3B,CAAC,EAAE,WAAY,SAA+DA,EAAQ,CACpF,OAAO1F,EAAI,WAAW0F,CAAM,CAC9B,CAAC,EAAE,aAAc,SAAiEA,EAAQ,CACxF,OAAO1F,EAAI,aAAa0F,CAAM,CAChC,CAAC,EAAE,wBAAyB,SAA4EA,EAAQ,CAC9G,OAAO1F,EAAI,2BAA2B0F,CAAM,CAC9C,CAAC,EACElF,EAAa,EAAE,EAAE,GAElBT,EAAK,IACJU,EAAW,OAAWoF,GAAgB,GAAIC,GAAM9F,EAAI,MAAOA,EAAI,MAAM,CAAC,EAAE,aAAcA,EAAI,MAAM,EAAE,gBAAiBA,EAAI,aAAa,EAAE,gBAAiBA,EAAI,aAAa,EAAE,aAAcA,EAAI,UAAU,EACtMU,EAAU,EACVE,EAAY,YAAaZ,EAAI,SAAS,EACtCU,EAAU,EACVD,EAAW,OAAQT,EAAI,KAAK,EAC5BU,EAAU,EACVD,EAAW,OAAQT,EAAI,KAAK,EAC5BU,EAAU,EACVD,EAAW,SAAUT,EAAI,MAAM,EAAE,SAAUA,EAAI,MAAM,EAAE,SAAUA,EAAI,MAAM,EAAE,SAAUA,EAAI,OAAO,EAAE,OAAQA,EAAI,IAAI,EAAE,WAAYA,EAAI,QAAQ,EAAE,kBAAmBA,EAAI,eAAe,EAAE,kBAAmBA,EAAI,eAAe,EAAE,gBAAiBA,EAAI,aAAa,EAAE,aAAcA,EAAI,UAAU,EAAE,aAAcA,EAAI,UAAU,EAAE,gBAAiBA,EAAI,aAAa,EAAE,sBAAuBA,EAAI,mBAAmB,EAAE,gBAAiBA,EAAI,aAAa,EAE7b,EACA,aAAc,CAAIa,EAAMkF,GAAgBC,GAAgBC,GAAgBzE,EAAgB,EACxF,OAAQ,CAAC0E,EAAI,EACb,cAAe,EACf,gBAAiB,CACnB,CAAC,CACH,CACF,CACA,OAAOrC,CACT,GAAG,EAgVH,IAAIsC,IAAiD,IAAM,CACzD,MAAMA,UAAyCC,EAAmB,CAChE,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,OAAS,GACd,KAAK,YAAc,SACnB,KAAK,eAAiBC,GAAe,MACrC,KAAK,gBAAkB,GACvB,KAAK,cAAgB,GACrB,KAAK,cAAgB,CAAC,EACtB,KAAK,eAAiB,GACtB,KAAK,eAAiB,GACtB,KAAK,iBAAmB,GACxB,KAAK,mBAAqB,GAC1B,KAAK,mBAAqB,GAC1B,KAAK,WAAa,EAClB,KAAK,aAAe,GACpB,KAAK,cAAgB,GACrB,KAAK,UAAY,GACjB,KAAK,SAAW,IAAIC,EACpB,KAAK,WAAa,IAAIA,EACtB,KAAK,YAAc,CAAC,EAAG,GAAG,EAC1B,KAAK,OAAS,CAAC,GAAI,GAAI,GAAI,EAAE,EAC7B,KAAK,YAAc,EACnB,KAAK,WAAa,EAClB,KAAK,aAAeC,GACpB,KAAK,MAAQ,GACb,KAAK,QAAU,CAACC,EAAOC,IACdA,EAAK,IAEhB,CACA,UAAW,CACLC,GAAiB,KAAK,UAAU,IAClC,KAAK,MAAQ,GAEjB,CACA,QAAS,CACP,MAAM,OAAO,EACb,KAAK,KAAOC,GAAwB,CAClC,MAAO,KAAK,MACZ,OAAQ,KAAK,OACb,QAAS,KAAK,OACd,UAAW,KAAK,MAChB,UAAW,KAAK,MAChB,YAAa,KAAK,YAClB,WAAY,KAAK,WACjB,WAAY,KAAK,eACjB,WAAY,KAAK,eACjB,WAAY,KAAK,OACjB,WAAY,KAAK,WACjB,eAAgB,KAAK,cACvB,CAAC,EACD,KAAK,YAAY,EACjB,KAAK,YAAc,KAAK,eAAe,EACvC,KAAK,YAAc,KAAK,eAAe,EACvC,KAAK,OAAS,KAAK,UAAU,EAC7B,KAAK,OAAS,KAAK,UAAU,EAC7B,KAAK,UAAU,EACf,KAAK,cAAgB,KAAK,iBAAiB,EAC3C,KAAK,UAAY,aAAa,KAAK,KAAK,OAAO,MAAM,KAAK,OAAO,CAAC,CAAC,GACrE,CACA,gBAAiB,CACf,IAAMC,EAAS,CAAC,EAChB,QAAWC,KAAS,KAAK,QAClBD,EAAO,SAASC,EAAM,KAAK,GAC9BD,EAAO,KAAKC,EAAM,KAAK,EAG3B,OAAOD,CACT,CACA,gBAAiB,CACf,IAAMA,EAAS,CAAC,EAChB,QAAWC,KAAS,KAAK,QACvB,QAAWC,KAAKD,EAAM,OACfD,EAAO,SAASE,EAAE,KAAK,GAC1BF,EAAO,KAAKE,EAAE,KAAK,EAIzB,OAAOF,CACT,CACA,WAAY,CACV,IAAMG,EAAU,KAAK,YAAY,QAAU,KAAK,KAAK,OAAS,KAAK,WAAa,GAChF,OAAOC,GAAU,EAAE,WAAW,CAAC,EAAG,KAAK,KAAK,MAAM,CAAC,EAAE,aAAaD,CAAO,EAAE,OAAO,KAAK,WAAW,CACpG,CACA,WAAY,CACV,IAAME,EAAQC,GAAY,EAAE,MAAM,CAAC,EAAG,KAAK,KAAK,KAAK,CAAC,EAAE,OAAO,KAAK,WAAW,EAC/E,OAAO,KAAK,aAAeD,EAAM,KAAK,EAAIA,CAC5C,CACA,eAAeJ,EAAO,CACpB,MAAO,gBAAgB,KAAK,OAAOA,EAAM,IAAI,CAAC,GAChD,CACA,QAAQM,EAAMN,EAAO,CACfA,IACFM,EAAK,OAASN,EAAM,MAEtB,KAAK,OAAO,KAAKM,CAAI,CACvB,CACA,WAAY,CACV,IAAIP,EACA,KAAK,aAAeQ,EAAU,QAChCR,EAAS,KAAK,YAEdA,EAAS,KAAK,YAEhB,KAAK,OAAS,IAAIS,GAAY,KAAK,OAAQ,KAAK,WAAYT,EAAQ,KAAK,YAAY,CACvF,CACA,kBAAmB,CACjB,IAAMU,EAAO,CACX,UAAW,KAAK,WAChB,OAAQ,OACR,OAAQ,CAAC,EACT,MAAO,OACP,SAAU,KAAK,cACjB,EACA,OAAIA,EAAK,YAAcF,EAAU,SAC/BE,EAAK,OAAS,KAAK,YACnBA,EAAK,OAAS,KAAK,OACnBA,EAAK,MAAQ,KAAK,cAElBA,EAAK,OAAS,KAAK,YACnBA,EAAK,OAAS,KAAK,OAAO,OAErBA,CACT,CACA,iBAAiB,CACf,MAAAC,CACF,EAAG,CACD,KAAK,WAAaA,EAClB,KAAK,OAAO,CACd,CACA,kBAAkB,CAChB,OAAAC,CACF,EAAG,CACD,KAAK,YAAcA,EACnB,KAAK,OAAO,CACd,CACA,WAAWC,EAAOZ,EAAOa,EAAa,GAAO,CAC3C,IAAMjB,EAAO,OAAO,OAAO,CAAC,EAAGgB,CAAK,EAChCZ,IACFJ,EAAK,OAASI,EAAM,MAEtB,IAAMc,EAAQ,KAAK,QAAQ,IAAIC,GAAKA,EAAE,MAAM,EAAE,KAAK,EAAE,OAAOC,GACtDH,EACKG,EAAE,QAAUpB,EAAK,KAEjBoB,EAAE,OAASpB,EAAK,MAAQoB,EAAE,SAAWpB,EAAK,MAEpD,EACD,KAAK,cAAgB,CAAC,GAAGkB,CAAK,EAC9B,KAAK,SAAS,KAAK,CACjB,MAAOlB,EACP,QAAS,KAAK,aAChB,CAAC,CACH,CACA,aAAagB,EAAOZ,EAAOa,EAAa,GAAO,CAC7C,IAAMjB,EAAO,OAAO,OAAO,CAAC,EAAGgB,CAAK,EAChCZ,IACFJ,EAAK,OAASI,EAAM,MAEtB,KAAK,cAAgB,KAAK,cAAc,OAAOgB,GACzCH,EACKG,EAAE,QAAUpB,EAAK,KAEjB,EAAEoB,EAAE,OAASpB,EAAK,MAAQoB,EAAE,SAAWpB,EAAK,OAEtD,EACD,KAAK,WAAW,KAAK,CACnB,MAAOA,EACP,QAAS,KAAK,aAChB,CAAC,CACH,CACA,MAAO,CACL,KAAK,WAAuB,IAAM,CAChC,IAAIqB,EACJ,OAAO,SAAkDC,EAAmB,CAC1E,OAAQD,IAAkDA,EAAmDE,GAAsB7B,CAAgC,IAAI4B,GAAqB5B,CAAgC,CAC9N,CACF,GAAG,CACL,CACA,MAAO,CACL,KAAK,UAAyB8B,EAAkB,CAC9C,KAAM9B,EACN,UAAW,CAAC,CAAC,sCAAsC,CAAC,EACpD,eAAgB,SAAyD+B,EAAIC,EAAKC,EAAU,CAI1F,GAHIF,EAAK,GACJG,GAAeD,EAAUE,GAAM,CAAC,EAEjCJ,EAAK,EAAG,CACV,IAAIK,EACDC,GAAeD,EAAQE,GAAY,CAAC,IAAMN,EAAI,gBAAkBI,EAAG,MACxE,CACF,EACA,OAAQ,CACN,OAAQ,SACR,YAAa,cACb,eAAgB,iBAChB,MAAO,QACP,MAAO,QACP,eAAgB,iBAChB,eAAgB,iBAChB,WAAY,aACZ,WAAY,aACZ,gBAAiB,kBACjB,SAAU,WACV,cAAe,gBACf,cAAe,gBACf,WAAY,aACZ,eAAgB,iBAChB,eAAgB,iBAChB,iBAAkB,mBAClB,mBAAoB,qBACpB,mBAAoB,qBACpB,oBAAqB,sBACrB,oBAAqB,sBACrB,WAAY,aACZ,WAAY,aACZ,WAAY,aACZ,aAAc,eACd,cAAe,gBACf,UAAW,WACb,EACA,QAAS,CACP,SAAU,WACV,WAAY,YACd,EACA,WAAY,GACZ,SAAU,CAAIG,EAA0B,EACxC,MAAO,EACP,KAAM,GACN,OAAQ,CAAC,CAAC,EAAG,sBAAuB,wBAAyB,mBAAoB,OAAQ,aAAc,gBAAiB,gBAAiB,YAAY,EAAG,CAAC,EAAG,YAAa,OAAO,EAAG,CAAC,oBAAqB,GAAI,EAAG,SAAU,OAAQ,gBAAiB,YAAa,YAAa,YAAa,cAAe,gBAAiB,iBAAkB,QAAS,YAAa,oBAAqB,EAAG,MAAM,EAAG,CAAC,oBAAqB,GAAI,EAAG,SAAU,OAAQ,YAAa,YAAa,YAAa,gBAAiB,iBAAkB,QAAS,YAAa,oBAAqB,EAAG,MAAM,EAAG,CAAC,EAAG,MAAM,EAAG,CAAC,oBAAqB,GAAI,EAAG,oBAAqB,SAAU,OAAQ,gBAAiB,YAAa,YAAa,YAAa,cAAe,gBAAiB,iBAAkB,QAAS,WAAW,EAAG,CAAC,oBAAqB,GAAI,EAAG,oBAAqB,SAAU,OAAQ,YAAa,YAAa,YAAa,gBAAiB,iBAAkB,QAAS,WAAW,EAAG,CAAC,EAAG,QAAS,UAAW,cAAc,EAAG,CAAC,+BAAgC,GAAI,EAAG,SAAU,WAAY,aAAc,OAAQ,SAAU,SAAU,gBAAiB,SAAU,SAAU,OAAQ,WAAY,kBAAmB,kBAAmB,aAAc,aAAc,eAAe,CAAC,EACtsC,SAAU,SAAmDR,EAAIC,EAAK,CAChED,EAAK,IACJS,EAAe,EAAG,mBAAoB,CAAC,EACvCC,EAAW,sBAAuB,SAAmGC,EAAQ,CAC9I,OAAOV,EAAI,WAAWU,EAAQ,OAAW,EAAI,CAC/C,CAAC,EAAE,wBAAyB,SAAqGA,EAAQ,CACvI,OAAOV,EAAI,aAAaU,EAAQ,OAAW,EAAI,CACjD,CAAC,EAAE,mBAAoB,SAAgGA,EAAQ,CAC7H,OAAOV,EAAI,QAAQU,CAAM,CAC3B,CAAC,EACEC,EAAe,EACfH,EAAe,EAAG,IAAK,CAAC,EACxBI,EAAW,EAAGC,GAAoD,EAAG,GAAI,IAAK,CAAC,EAAE,EAAGC,GAAoD,EAAG,EAAG,IAAK,CAAC,EAAE,EAAGC,GAAoD,EAAG,EAAG,IAAK,CAAC,EAAE,EAAGC,GAAoD,EAAG,EAAG,IAAK,CAAC,EAC9RC,EAAa,EAAE,GAEhBlB,EAAK,IACJmB,EAAW,OAAWC,GAAgB,GAAIC,GAAMpB,EAAI,MAAOA,EAAI,MAAM,CAAC,EAAE,aAAcA,EAAI,MAAM,EAAE,gBAAiBA,EAAI,aAAa,EAAE,gBAAiBA,EAAI,aAAa,EAAE,aAAcA,EAAI,UAAU,EACtMqB,EAAU,EACVC,EAAY,YAAatB,EAAI,SAAS,EACtCqB,EAAU,EACVH,EAAW,OAAQlB,EAAI,KAAK,EAC5BqB,EAAU,EACVH,EAAW,OAAQlB,EAAI,KAAK,EAC5BqB,EAAU,EACVH,EAAW,OAAQ,CAAClB,EAAI,KAAK,EAC7BqB,EAAU,EACVH,EAAW,OAAQlB,EAAI,KAAK,EAEnC,EACA,aAAc,CAAIuB,GAAYC,EAAMC,GAAgBC,GAAgBC,GAAgBC,EAAgB,EACpG,OAAQ,CAACC,EAAI,EACb,cAAe,EACf,KAAM,CACJ,UAAW,CAACC,GAAQ,iBAAkB,CAACC,GAAW,SAAU,CAACC,EAAM,CACjE,QAAS,EACT,UAAW,GACb,CAAC,EAAGC,GAAQ,IAAKD,EAAM,CACrB,QAAS,EACT,UAAW,UACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACT,EACA,gBAAiB,CACnB,CAAC,CACH,CACF,CACA,OAAOhE,CACT,GAAG,EAICkE,IAA8C,IAAM,CACtD,MAAMA,UAAsCjE,EAAmB,CAC7D,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,OAAS,GACd,KAAK,YAAc,SACnB,KAAK,eAAiBC,GAAe,MACrC,KAAK,gBAAkB,GACvB,KAAK,cAAgB,GACrB,KAAK,cAAgB,CAAC,EACtB,KAAK,eAAiB,GACtB,KAAK,eAAiB,GACtB,KAAK,iBAAmB,GACxB,KAAK,mBAAqB,GAC1B,KAAK,mBAAqB,GAC1B,KAAK,WAAa,EAClB,KAAK,aAAe,GACpB,KAAK,cAAgB,GACrB,KAAK,cAAgB,GACrB,KAAK,UAAY,GACjB,KAAK,SAAW,IAAIC,EACpB,KAAK,WAAa,IAAIA,EACtB,KAAK,OAAS,CAAC,GAAI,GAAI,GAAI,EAAE,EAC7B,KAAK,YAAc,EACnB,KAAK,WAAa,EAClB,KAAK,kBAAoB,CACvB,SAAU,EACV,SAAU,CACZ,EACA,KAAK,aAAeC,GACpB,KAAK,MAAQ,GACb,KAAK,QAAU,CAACC,EAAOC,IACdA,EAAK,IAEhB,CACA,UAAW,CACLC,GAAiB,KAAK,UAAU,IAClC,KAAK,MAAQ,GAEjB,CACA,QAAS,CACP,MAAM,OAAO,EACR,KAAK,gBACR,KAAK,kBAAoB,CACvB,SAAU,EACV,SAAU,CACZ,GAEF,KAAK,OAAS,CAAC,GAAI,GAAK,KAAK,kBAAkB,SAAU,GAAI,GAAK,KAAK,kBAAkB,QAAQ,EACjG,KAAK,KAAOC,GAAwB,CAClC,MAAO,KAAK,MACZ,OAAQ,KAAK,OACb,QAAS,KAAK,OACd,UAAW,KAAK,MAChB,UAAW,KAAK,MAChB,YAAa,KAAK,YAClB,WAAY,KAAK,WACjB,WAAY,KAAK,eACjB,WAAY,KAAK,eACjB,WAAY,KAAK,OACjB,WAAY,KAAK,WACjB,eAAgB,KAAK,cACvB,CAAC,EACD,KAAK,YAAY,EACjB,KAAK,YAAc,KAAK,eAAe,EACvC,KAAK,YAAc,KAAK,eAAe,EACvC,KAAK,YAAc,KAAK,eAAe,EACvC,KAAK,OAAS,KAAK,UAAU,EAC7B,KAAK,OAAS,KAAK,UAAU,EAC7B,KAAK,UAAU,EACf,KAAK,cAAgB,KAAK,iBAAiB,EAC3C,KAAK,UAAY,aAAa,KAAK,KAAK,OAAO,MAAM,KAAK,OAAO,CAAC,CAAC,GACrE,CACA,gBAAiB,CACf,IAAMC,EAAS,CAAC,EAChB,QAAWC,KAAS,KAAK,QAClBD,EAAO,SAASC,EAAM,KAAK,GAC9BD,EAAO,KAAKC,EAAM,KAAK,EAG3B,OAAOD,CACT,CACA,gBAAiB,CACf,IAAMA,EAAS,CAAC,EAChB,QAAWC,KAAS,KAAK,QACvB,QAAWC,KAAKD,EAAM,OACfD,EAAO,SAASE,EAAE,KAAK,GAC1BF,EAAO,KAAKE,EAAE,KAAK,EAIzB,OAAOF,CACT,CACA,gBAAiB,CACf,IAAMA,EAAS,CAAC,EACZ0D,EAAW,EACXC,EAAU,EACd,QAAW1D,KAAS,KAAK,QAAS,CAChC,IAAI2D,EAAc,EACdC,EAAa,EACjB,QAAW3D,KAAKD,EAAM,OAChBC,EAAE,MAAQ,EACZ0D,GAAe1D,EAAE,MAEjB2D,GAAc3D,EAAE,MAElBwD,EAAWxD,EAAE,MAAQwD,EAAWxD,EAAE,MAAQwD,EAC1CC,EAAUzD,EAAE,MAAQyD,EAAUzD,EAAE,MAAQyD,EAE1C3D,EAAO,KAAK4D,CAAW,EACvB5D,EAAO,KAAK6D,CAAU,CACxB,CACA7D,EAAO,KAAK0D,CAAQ,EACpB1D,EAAO,KAAK2D,CAAO,EACnB,IAAMG,EAAM,KAAK,IAAI,EAAG,GAAG9D,CAAM,EAC3B+D,EAAM,KAAK,UAAY,KAAK,IAAI,KAAK,UAAW,GAAG/D,CAAM,EAAI,KAAK,IAAI,GAAGA,CAAM,EACrF,MAAO,CAAC8D,EAAKC,CAAG,CAClB,CACA,WAAY,CACV,IAAM5D,EAAU,KAAK,YAAY,QAAU,KAAK,KAAK,OAAS,KAAK,WAAa,GAChF,OAAOC,GAAU,EAAE,WAAW,CAAC,EAAG,KAAK,KAAK,MAAM,CAAC,EAAE,aAAaD,CAAO,EAAE,OAAO,KAAK,WAAW,CACpG,CACA,WAAY,CACV,IAAME,EAAQC,GAAY,EAAE,MAAM,CAAC,EAAG,KAAK,KAAK,KAAK,CAAC,EAAE,OAAO,KAAK,WAAW,EAC/E,OAAO,KAAK,aAAeD,EAAM,KAAK,EAAIA,CAC5C,CACA,eAAeJ,EAAO,CACpB,MAAO,gBAAgB,KAAK,OAAOA,EAAM,IAAI,CAAC,GAChD,CACA,QAAQM,EAAMN,EAAO,CACfA,IACFM,EAAK,OAASN,EAAM,MAEtB,KAAK,OAAO,KAAKM,CAAI,CACvB,CACA,WAAY,CACV,IAAIP,EACA,KAAK,aAAeQ,EAAU,QAChCR,EAAS,KAAK,YAEdA,EAAS,KAAK,YAEhB,KAAK,OAAS,IAAIS,GAAY,KAAK,OAAQ,KAAK,WAAYT,EAAQ,KAAK,YAAY,CACvF,CACA,kBAAmB,CACjB,IAAMU,EAAO,CACX,UAAW,KAAK,WAChB,OAAQ,OACR,OAAQ,CAAC,EACT,MAAO,OACP,SAAU,KAAK,cACjB,EACA,OAAIA,EAAK,YAAcF,EAAU,SAC/BE,EAAK,OAAS,KAAK,YACnBA,EAAK,OAAS,KAAK,OACnBA,EAAK,MAAQ,KAAK,cAElBA,EAAK,OAAS,KAAK,YACnBA,EAAK,OAAS,KAAK,OAAO,OAErBA,CACT,CACA,iBAAiB,CACf,MAAAC,CACF,EAAG,CACD,KAAK,WAAaA,EAClB,KAAK,OAAO,CACd,CACA,kBAAkB,CAChB,OAAAC,CACF,EAAG,CACD,KAAK,YAAcA,EACnB,KAAK,OAAO,CACd,CACA,2BAA2BC,EAAOmD,EAAY,CACxCnD,EAAM,KAAK,SACb,KAAK,kBAAkB,SAAW,KAAK,IAAI,KAAK,kBAAkB,SAAUA,EAAM,KAAK,KAAK,EAE5F,KAAK,kBAAkB,SAAW,KAAK,IAAI,KAAK,kBAAkB,SAAUA,EAAM,KAAK,KAAK,EAE1FmD,IAAe,KAAK,QAAQ,OAAS,GACvC,WAAW,IAAM,KAAK,OAAO,CAAC,CAElC,CACA,WAAWnD,EAAOZ,EAAOa,EAAa,GAAO,CAC3C,IAAMjB,EAAO,OAAO,OAAO,CAAC,EAAGgB,CAAK,EAChCZ,IACFJ,EAAK,OAASI,EAAM,MAEtB,IAAMc,EAAQ,KAAK,QAAQ,IAAIC,GAAKA,EAAE,MAAM,EAAE,KAAK,EAAE,OAAOC,GACtDH,EACKG,EAAE,QAAUpB,EAAK,KAEjBoB,EAAE,OAASpB,EAAK,MAAQoB,EAAE,SAAWpB,EAAK,MAEpD,EACD,KAAK,cAAgB,CAAC,GAAGkB,CAAK,EAC9B,KAAK,SAAS,KAAK,CACjB,MAAOlB,EACP,QAAS,KAAK,aAChB,CAAC,CACH,CACA,aAAagB,EAAOZ,EAAOa,EAAa,GAAO,CAC7C,IAAMjB,EAAO,OAAO,OAAO,CAAC,EAAGgB,CAAK,EAChCZ,IACFJ,EAAK,OAASI,EAAM,MAEtB,KAAK,cAAgB,KAAK,cAAc,OAAOgB,GACzCH,EACKG,EAAE,QAAUpB,EAAK,KAEjB,EAAEoB,EAAE,OAASpB,EAAK,MAAQoB,EAAE,SAAWpB,EAAK,OAEtD,EACD,KAAK,WAAW,KAAK,CACnB,MAAOA,EACP,QAAS,KAAK,aAChB,CAAC,CACH,CACA,MAAO,CACL,KAAK,WAAuB,IAAM,CAChC,IAAIoE,EACJ,OAAO,SAA+C9C,EAAmB,CACvE,OAAQ8C,IAA+CA,EAAgD7C,GAAsBqC,CAA6B,IAAItC,GAAqBsC,CAA6B,CAClN,CACF,GAAG,CACL,CACA,MAAO,CACL,KAAK,UAAyBpC,EAAkB,CAC9C,KAAMoC,EACN,UAAW,CAAC,CAAC,mCAAmC,CAAC,EACjD,eAAgB,SAAsDnC,EAAIC,EAAKC,EAAU,CAIvF,GAHIF,EAAK,GACJG,GAAeD,EAAUE,GAAM,CAAC,EAEjCJ,EAAK,EAAG,CACV,IAAIK,EACDC,GAAeD,EAAQE,GAAY,CAAC,IAAMN,EAAI,gBAAkBI,EAAG,MACxE,CACF,EACA,OAAQ,CACN,OAAQ,SACR,YAAa,cACb,eAAgB,iBAChB,MAAO,QACP,MAAO,QACP,eAAgB,iBAChB,eAAgB,iBAChB,WAAY,aACZ,WAAY,aACZ,gBAAiB,kBACjB,SAAU,WACV,cAAe,gBACf,cAAe,gBACf,WAAY,aACZ,eAAgB,iBAChB,eAAgB,iBAChB,iBAAkB,mBAClB,mBAAoB,qBACpB,mBAAoB,qBACpB,oBAAqB,sBACrB,oBAAqB,sBACrB,WAAY,aACZ,WAAY,aACZ,WAAY,aACZ,aAAc,eACd,UAAW,YACX,cAAe,gBACf,oBAAqB,sBACrB,cAAe,gBACf,UAAW,WACb,EACA,QAAS,CACP,SAAU,WACV,WAAY,YACd,EACA,WAAY,GACZ,SAAU,CAAIG,EAA0B,EACxC,MAAO,EACP,KAAM,GACN,OAAQ,CAAC,CAAC,EAAG,sBAAuB,wBAAyB,mBAAoB,OAAQ,aAAc,gBAAiB,gBAAiB,YAAY,EAAG,CAAC,EAAG,YAAa,OAAO,EAAG,CAAC,oBAAqB,GAAI,EAAG,SAAU,OAAQ,gBAAiB,YAAa,YAAa,YAAa,cAAe,gBAAiB,iBAAkB,QAAS,YAAa,oBAAqB,EAAG,MAAM,EAAG,CAAC,oBAAqB,GAAI,EAAG,SAAU,OAAQ,YAAa,YAAa,YAAa,gBAAiB,iBAAkB,QAAS,cAAe,YAAa,oBAAqB,EAAG,MAAM,EAAG,CAAC,EAAG,MAAM,EAAG,CAAC,oBAAqB,GAAI,EAAG,oBAAqB,SAAU,OAAQ,gBAAiB,YAAa,YAAa,YAAa,cAAe,gBAAiB,iBAAkB,QAAS,WAAW,EAAG,CAAC,oBAAqB,GAAI,EAAG,oBAAqB,SAAU,OAAQ,YAAa,YAAa,YAAa,gBAAiB,iBAAkB,QAAS,cAAe,WAAW,EAAG,CAAC,EAAG,QAAS,UAAW,cAAc,EAAG,CAAC,+BAAgC,GAAI,EAAG,SAAU,WAAY,aAAc,wBAAyB,OAAQ,SAAU,SAAU,SAAU,SAAU,gBAAiB,OAAQ,WAAY,kBAAmB,kBAAmB,aAAc,aAAc,gBAAiB,sBAAuB,eAAe,CAAC,EACryC,SAAU,SAAgDR,EAAIC,EAAK,CAC7DD,EAAK,IACJS,EAAe,EAAG,mBAAoB,CAAC,EACvCC,EAAW,sBAAuB,SAAgGC,EAAQ,CAC3I,OAAOV,EAAI,WAAWU,EAAQ,OAAW,EAAI,CAC/C,CAAC,EAAE,wBAAyB,SAAkGA,EAAQ,CACpI,OAAOV,EAAI,aAAaU,EAAQ,OAAW,EAAI,CACjD,CAAC,EAAE,mBAAoB,SAA6FA,EAAQ,CAC1H,OAAOV,EAAI,QAAQU,CAAM,CAC3B,CAAC,EACEC,EAAe,EACfH,EAAe,EAAG,IAAK,CAAC,EACxBI,EAAW,EAAG+B,GAAiD,EAAG,GAAI,IAAK,CAAC,EAAE,EAAGC,GAAiD,EAAG,GAAI,IAAK,CAAC,EAAE,EAAGC,GAAiD,EAAG,EAAG,IAAK,CAAC,EAAE,EAAGC,GAAiD,EAAG,EAAG,IAAK,CAAC,EACnR7B,EAAa,EAAE,GAEhBlB,EAAK,IACJmB,EAAW,OAAWC,GAAgB,GAAIC,GAAMpB,EAAI,MAAOA,EAAI,MAAM,CAAC,EAAE,aAAcA,EAAI,MAAM,EAAE,gBAAiBA,EAAI,aAAa,EAAE,gBAAiBA,EAAI,aAAa,EAAE,aAAcA,EAAI,UAAU,EACtMqB,EAAU,EACVC,EAAY,YAAatB,EAAI,SAAS,EACtCqB,EAAU,EACVH,EAAW,OAAQlB,EAAI,KAAK,EAC5BqB,EAAU,EACVH,EAAW,OAAQlB,EAAI,KAAK,EAC5BqB,EAAU,EACVH,EAAW,OAAQ,CAAClB,EAAI,KAAK,EAC7BqB,EAAU,EACVH,EAAW,OAAQlB,EAAI,KAAK,EAEnC,EACA,aAAc,CAAIuB,GAAYC,EAAMC,GAAgBC,GAAgBC,GAAgBC,EAAgB,EACpG,OAAQ,CAACC,EAAI,EACb,cAAe,EACf,KAAM,CACJ,UAAW,CAACC,GAAQ,iBAAkB,CAACC,GAAW,SAAU,CAACC,EAAM,CACjE,QAAS,EACT,UAAW,GACb,CAAC,EAAGC,GAAQ,IAAKD,EAAM,CACrB,QAAS,EACT,UAAW,UACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACT,EACA,gBAAiB,CACnB,CAAC,CACH,CACF,CACA,OAAOE,CACT,GAAG,EAICa,IAAwC,IAAM,CAChD,MAAMA,CAAwB,CAC5B,YAAYC,EAAY,CACtB,KAAK,WAAaA,EAClB,KAAK,KAAO5E,GAAa,SACzB,KAAK,gBAAkB,GACvB,KAAK,WAAa,GAClB,KAAK,cAAgB,GACrB,KAAK,cAAgB,GACrB,KAAK,OAAS,IAAID,EAClB,KAAK,SAAW,IAAIA,EACpB,KAAK,WAAa,IAAIA,EACtB,KAAK,uBAAyB,IAAIA,EAClC,KAAK,kBAAoB,CAAC,EAC1B,KAAK,eAAiB8E,EACtB,KAAK,MAAQ,EACf,CACA,UAAW,CACL1E,GAAiB,KAAK,UAAU,IAClC,KAAK,MAAQ,GAEjB,CACA,YAAY2E,EAAS,CACnB,KAAK,OAAO,CACd,CACA,QAAS,CACP,KAAK,sBAAsB,EAC3B,IAAI9D,EACA,KAAK,OAAO,SACdA,EAAQ,KAAK,OAAO,UAAU,GAEhCA,EAAQ,KAAK,MAAMA,CAAK,EACxB,IAAM+D,EAAY,KAAK,IAAI,KAAK,OAAO,OAAO,EAAE,CAAC,EAAG,CAAC,EAC/CC,EAAK,CACT,CAACC,GAAQ,QAAQ,EAAG,EACpB,CAACA,GAAQ,QAAQ,EAAG,CACtB,EACIC,EAASD,GAAQ,SACjBE,EACA,KAAK,OAASnF,GAAa,aAC7BmF,EAAQ,KAAK,OAAO,IAAI5E,GAAKA,EAAE,KAAK,EAAE,OAAO,CAAC6E,EAAK7E,IAAM6E,EAAM7E,EAAG,CAAC,GAErE,KAAK,KAAO,KAAK,OAAO,IAAI,CAACA,EAAGN,IAAU,CACxC,IAAIoF,EAAQ9E,EAAE,MACR+E,EAAQ,KAAK,SAAS/E,CAAC,EACvBgF,EAAiBC,GAAYF,CAAK,EAClCG,EAAa,KAAK,WACxBP,EAASG,EAAQ,EAAIJ,GAAQ,SAAWA,GAAQ,SAChD,IAAMS,EAAM,CACV,MAAAL,EACA,MAAAC,EACA,WAAAG,EACA,KAAMlF,EACN,MAAAS,EACA,eAAAuE,EACA,OAAQ,EACR,EAAG,EACH,EAAG,CACL,EACA,GAAI,KAAK,OAASvF,GAAa,SAC7B0F,EAAI,OAAS,KAAK,IAAI,KAAK,OAAOL,CAAK,EAAI,KAAK,OAAON,CAAS,CAAC,EACjEW,EAAI,EAAI,KAAK,OAAOJ,CAAK,EACrBD,EAAQ,EACVK,EAAI,EAAI,KAAK,OAAO,CAAC,EAErBA,EAAI,EAAI,KAAK,OAAOL,CAAK,UAElB,KAAK,OAASrF,GAAa,QAAS,CAC7C,IAAM2F,EAAUX,EAAGE,CAAM,EACnBU,EAAUD,EAAUN,EAC1BL,EAAGE,CAAM,GAAKG,EACdK,EAAI,OAAS,KAAK,OAAOC,CAAO,EAAI,KAAK,OAAOC,CAAO,EACvDF,EAAI,EAAI,EACRA,EAAI,EAAI,KAAK,OAAOE,CAAO,EAC3BF,EAAI,QAAUC,EACdD,EAAI,QAAUE,CAChB,SAAW,KAAK,OAAS5F,GAAa,WAAY,CAChD,IAAI2F,EAAUX,EAAGE,CAAM,EACnBU,EAAUD,EAAUN,EACxBL,EAAGE,CAAM,GAAKG,EACVF,EAAQ,GACVQ,EAAUA,EAAU,IAAMR,EAC1BS,EAAUA,EAAU,IAAMT,IAE1BQ,EAAU,EACVC,EAAU,GAEZF,EAAI,OAAS,KAAK,OAAOC,CAAO,EAAI,KAAK,OAAOC,CAAO,EACvDF,EAAI,EAAI,EACRA,EAAI,EAAI,KAAK,OAAOE,CAAO,EAC3BF,EAAI,QAAUC,EACdD,EAAI,QAAUE,EACdP,GAASO,EAAUD,GAAS,QAAQ,CAAC,EAAI,GAC3C,CACI,KAAK,OAAO,YAAc9E,EAAU,QACtC6E,EAAI,MAAQ,KAAK,OAAO,SAASJ,CAAK,EAElC,KAAK,OAAStF,GAAa,UAC7B0F,EAAI,MAAQ,KAAK,OAAO,SAASL,CAAK,EACtCK,EAAI,cAAgB,KAAK,OAAO,uBAAuBL,CAAK,IAE5DK,EAAI,MAAQ,KAAK,OAAO,SAASA,EAAI,OAAO,EAC5CA,EAAI,cAAgB,KAAK,OAAO,uBAAuBA,EAAI,QAASA,EAAI,OAAO,GAGnF,IAAIG,EAAeN,EACnB,OAAAG,EAAI,UAAYH,EAAiB,IAAMF,EAAM,eAAe,EACxD,KAAK,aAAe,MAAQ,KAAK,aAAe,SAClDQ,EAAe,GAAG,KAAK,UAAU,WAAMN,CAAc,GACrDG,EAAI,KAAK,OAAS,KAAK,WACvBA,EAAI,UAAY,KAAK,WAAa,IAAMA,EAAI,WAE9CA,EAAI,YAAc,KAAK,gBAAkB,OAAY;AAAA,sCACvBI,GAAYD,CAAY,CAAC;AAAA,oCAC3B,KAAK,oBAAsB,KAAK,oBAAoBR,CAAK,EAAIA,EAAM,eAAe,CAAC;AAAA,QAExGK,CACT,CAAC,EACD,KAAK,iBAAiB,CACxB,CACA,kBAAmB,CACjB,GAAI,KAAK,OAAS1F,GAAa,QAAS,CACtC,KAAK,kBAAoB,CAAC,EAC1B,IAAM+F,EAAU,CAAC,EACjBA,EAAQ,OAAS,KAAK,WACtB,IAAMC,EAAgB,KAAK,OAAO,IAAIzF,GAAKA,EAAE,KAAK,EAAE,OAAO,CAAC6E,EAAK7E,IAAMA,EAAI,EAAI6E,EAAM7E,EAAI6E,EAAK,CAAC,EACzFa,EAAgB,KAAK,OAAO,IAAI1F,GAAKA,EAAE,KAAK,EAAE,OAAO,CAAC6E,EAAK7E,IAAMA,EAAI,EAAI6E,EAAM7E,EAAI6E,EAAK,CAAC,EAC/FW,EAAQ,MAAQC,EAAgBC,EAChCF,EAAQ,EAAI,EACZA,EAAQ,EAAI,EACRA,EAAQ,MAAQ,EAClBA,EAAQ,OAAS,KAAK,OAAOC,CAAa,EAE1CD,EAAQ,OAAS,KAAK,OAAOE,CAAa,EAE5CF,EAAQ,MAAQ,KAAK,OAAO,UAAU,EACtC,KAAK,kBAAkB,KAAKA,CAAO,CACrC,MACE,KAAK,kBAAoB,KAAK,OAAO,IAAIxF,GAAK,CAC5C,IAAMwF,EAAU,CAAC,EACjB,OAAAA,EAAQ,OAAS,KAAK,YAAcxF,EAAE,MACtCwF,EAAQ,MAAQxF,EAAE,MAClBwF,EAAQ,EAAI,KAAK,OAAOxF,EAAE,KAAK,EAC/BwF,EAAQ,EAAI,KAAK,OAAO,CAAC,EACzBA,EAAQ,OAAS,KAAK,OAAOA,EAAQ,KAAK,EAAI,KAAK,OAAO,CAAC,EAC3DA,EAAQ,MAAQ,KAAK,OAAO,UAAU,EAC/BA,CACT,CAAC,CAEL,CACA,uBAAwB,CACtB,KAAK,iBAAmB,KAAK,gBAAkB,OAAYG,EAAe,IAC1E,KAAK,YAAc,KAAK,gBAAkB,OAAYC,GAAW,OACnE,CACA,SAASC,EAAO,CACd,OAAK,KAAK,cACG,KAAK,cAAc,KAAKC,GAC5BD,EAAM,OAASC,EAAO,MAAQD,EAAM,QAAUC,EAAO,KAC7D,IACe,OAJgB,EAKlC,CACA,QAAQzF,EAAM,CACZ,KAAK,OAAO,KAAKA,CAAI,CACvB,CACA,SAAS0F,EAAU,CACjB,OAAIA,EAAS,MACJA,EAAS,MAEXA,EAAS,IAClB,CACA,QAAQrG,EAAOyF,EAAK,CAClB,OAAOA,EAAI,KACb,CACA,iBAAiBzF,EAAOsG,EAAU,CAChC,OAAOtG,EAAQ,IAAMsG,EAAS,OAAS,IAAMA,EAAS,KACxD,CACA,MAAO,CACL,KAAK,UAAO,SAAyC/E,EAAmB,CACtE,OAAO,IAAKA,GAAqBmD,GAA4B6B,EAAkBC,EAAW,CAAC,CAC7F,CACF,CACA,MAAO,CACL,KAAK,UAAyB/E,EAAkB,CAC9C,KAAMiD,EACN,UAAW,CAAC,CAAC,IAAK,6BAA8B,EAAE,CAAC,EACnD,OAAQ,CACN,KAAM,OACN,KAAM,OACN,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,SAAU,WACV,cAAe,gBACf,WAAY,aACZ,gBAAiB,kBACjB,gBAAiB,kBACjB,WAAY,aACZ,WAAY,aACZ,cAAe,gBACf,oBAAqB,sBACrB,cAAe,eACjB,EACA,QAAS,CACP,OAAQ,SACR,SAAU,WACV,WAAY,aACZ,uBAAwB,wBAC1B,EACA,WAAY,GACZ,SAAU,CAAI+B,CAAoB,EAClC,MAAOC,GACP,MAAO,EACP,KAAM,EACN,OAAQ,CAAC,CAAC,EAAG,MAAM,EAAG,CAAC,iBAAkB,GAAI,cAAe,GAAI,EAAG,QAAS,SAAU,IAAK,IAAK,OAAQ,QAAS,OAAQ,cAAe,aAAc,WAAY,YAAa,WAAY,kBAAmB,mBAAoB,cAAe,eAAgB,kBAAmB,iBAAkB,gBAAiB,aAAc,SAAU,WAAY,aAAc,EAAG,QAAS,UAAW,cAAc,EAAG,CAAC,iBAAkB,GAAI,cAAe,GAAI,EAAG,SAAU,WAAY,aAAc,QAAS,SAAU,IAAK,IAAK,OAAQ,QAAS,OAAQ,cAAe,aAAc,WAAY,YAAa,WAAY,kBAAmB,mBAAoB,cAAe,eAAgB,kBAAmB,iBAAkB,gBAAiB,YAAY,EAAG,CAAC,uBAAwB,GAAI,EAAG,OAAQ,OAAQ,WAAY,YAAa,QAAS,kBAAmB,cAAe,oBAAqB,EAAG,QAAS,UAAW,cAAc,EAAG,CAAC,uBAAwB,GAAI,EAAG,oBAAqB,OAAQ,OAAQ,WAAY,YAAa,QAAS,kBAAmB,aAAa,CAAC,EAC9hC,SAAU,SAA0ChF,EAAIC,EAAK,CACvDD,EAAK,GACJa,EAAW,EAAGoE,GAA2C,EAAG,EAAG,IAAK,CAAC,EAAE,EAAGC,GAA2C,EAAG,EAAG,IAAK,CAAC,EAAE,EAAGC,GAA2C,EAAG,EAAG,IAAK,CAAC,EAE9LnF,EAAK,IACJmB,EAAW,OAAQ,CAAClB,EAAI,KAAK,EAC7BqB,EAAU,EACVH,EAAW,OAAQlB,EAAI,KAAK,EAC5BqB,EAAU,EACVH,EAAW,OAAQlB,EAAI,aAAa,EAE3C,EACA,aAAc,CAAIuB,GAAYC,EAAM2D,GAAkBC,GAAcC,EAAiB,EACrF,cAAe,EACf,KAAM,CACJ,UAAW,CAACvD,GAAQ,iBAAkB,CAACC,GAAW,SAAU,CAACC,EAAM,CACjE,QAAS,CACX,CAAC,EAAGC,GAAQ,IAAKD,EAAM,CACrB,QAAS,CACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACT,EACA,gBAAiB,CACnB,CAAC,CACH,CACF,CACA,OAAOe,CACT,GAAG,EAICuC,IAAqC,IAAM,CAC7C,MAAMA,UAA6BrH,EAAmB,CACpD,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,OAAS,GACd,KAAK,YAAc,SACnB,KAAK,eAAiBC,GAAe,MACrC,KAAK,gBAAkB,GACvB,KAAK,cAAgB,GACrB,KAAK,cAAgB,CAAC,EACtB,KAAK,eAAiB,GACtB,KAAK,eAAiB,GACtB,KAAK,iBAAmB,GACxB,KAAK,mBAAqB,GAC1B,KAAK,mBAAqB,GAC1B,KAAK,WAAa,EAClB,KAAK,aAAe,GACpB,KAAK,WAAa,GAClB,KAAK,cAAgB,GACrB,KAAK,cAAgB,GACrB,KAAK,UAAY,GACjB,KAAK,SAAW,IAAIC,EACpB,KAAK,WAAa,IAAIA,EACtB,KAAK,OAAS,CAAC,GAAI,GAAI,GAAI,EAAE,EAC7B,KAAK,YAAc,EACnB,KAAK,WAAa,EAClB,KAAK,mBAAqB,CACxB,SAAU,EACV,SAAU,CACZ,CACF,CACA,QAAS,CACP,MAAM,OAAO,EACR,KAAK,gBACR,KAAK,mBAAqB,CACxB,SAAU,EACV,SAAU,CACZ,GAEF,KAAK,OAAS,CAAC,GAAK,KAAK,mBAAmB,SAAU,GAAI,GAAK,KAAK,mBAAmB,SAAU,EAAE,EACnG,KAAK,KAAOK,GAAwB,CAClC,MAAO,KAAK,MACZ,OAAQ,KAAK,OACb,QAAS,KAAK,OACd,UAAW,KAAK,MAChB,UAAW,KAAK,MAChB,YAAa,KAAK,YAClB,WAAY,KAAK,WACjB,WAAY,KAAK,eACjB,WAAY,KAAK,eACjB,WAAY,KAAK,OACjB,WAAY,KAAK,WACjB,eAAgB,KAAK,cACvB,CAAC,EACD,KAAK,YAAY,EACb,KAAK,gBACP,KAAK,KAAK,QAAU,KAAK,mBAAmB,UAE9C,KAAK,OAAS,KAAK,UAAU,EAC7B,KAAK,OAAS,KAAK,UAAU,EAC7B,KAAK,UAAU,EACf,KAAK,cAAgB,KAAK,iBAAiB,EAC3C,KAAK,UAAY,aAAa,KAAK,KAAK,OAAO,MAAM,KAAK,OAAO,CAAC,EAAI,KAAK,mBAAmB,QAAQ,GACxG,CACA,WAAY,CACV,KAAK,QAAU,KAAK,WAAW,EAC/B,IAAMI,EAAU,KAAK,QAAQ,QAAU,KAAK,KAAK,MAAQ,KAAK,WAAa,GAC3E,OAAOC,GAAU,EAAE,MAAM,CAAC,EAAG,KAAK,KAAK,KAAK,CAAC,EAAE,aAAaD,CAAO,EAAE,OAAO,KAAK,OAAO,CAC1F,CACA,WAAY,CACV,KAAK,QAAU,KAAK,WAAW,EAC/B,IAAME,EAAQC,GAAY,EAAE,MAAM,CAAC,KAAK,KAAK,OAAQ,CAAC,CAAC,EAAE,OAAO,KAAK,OAAO,EAC5E,OAAO,KAAK,aAAeD,EAAM,KAAK,EAAIA,CAC5C,CACA,YAAa,CACX,OAAO,KAAK,QAAQ,IAAIH,GAAKA,EAAE,KAAK,CACtC,CACA,YAAa,CACX,IAAM4G,EAAS,KAAK,QAAQ,IAAI5G,GAAKA,EAAE,KAAK,EACxC4D,EAAM,KAAK,UAAY,KAAK,IAAI,KAAK,UAAW,GAAGgD,CAAM,EAAI,KAAK,IAAI,EAAG,GAAGA,CAAM,EAClF,KAAK,YAAc,CAAC,KAAK,WAAW,KAAK,KAAK,IAChDhD,EAAM,KAAK,IAAIA,EAAK,GAAG,KAAK,UAAU,GAExC,IAAIC,EAAM,KAAK,UAAY,KAAK,IAAI,KAAK,UAAW,GAAG+C,CAAM,EAAI,KAAK,IAAI,EAAG,GAAGA,CAAM,EACtF,OAAI,KAAK,YAAc,CAAC,KAAK,WAAW,KAAK,KAAK,IAChD/C,EAAM,KAAK,IAAIA,EAAK,GAAG,KAAK,UAAU,GAEjC,CAACD,EAAKC,CAAG,CAClB,CACA,QAAQxD,EAAM,CACZ,KAAK,OAAO,KAAKA,CAAI,CACvB,CACA,WAAY,CACV,IAAIP,EACA,KAAK,aAAeQ,EAAU,QAChCR,EAAS,KAAK,QAEdA,EAAS,KAAK,QAEhB,KAAK,OAAS,IAAIS,GAAY,KAAK,OAAQ,KAAK,WAAYT,EAAQ,KAAK,YAAY,CACvF,CACA,kBAAmB,CACjB,IAAMU,EAAO,CACX,UAAW,KAAK,WAChB,OAAQ,OACR,OAAQ,CAAC,EACT,MAAO,OACP,SAAU,KAAK,cACjB,EACA,OAAIA,EAAK,YAAcF,EAAU,SAC/BE,EAAK,OAAS,KAAK,QACnBA,EAAK,OAAS,KAAK,OACnBA,EAAK,MAAQ,KAAK,cAElBA,EAAK,OAAS,KAAK,QACnBA,EAAK,OAAS,KAAK,OAAO,OAErBA,CACT,CACA,iBAAiB,CACf,MAAAC,CACF,EAAG,CACD,KAAK,WAAaA,EAClB,KAAK,OAAO,CACd,CACA,kBAAkB,CAChB,OAAAC,CACF,EAAG,CACD,KAAK,YAAcA,EACnB,KAAK,OAAO,CACd,CACA,4BAA4BC,EAAO,CAC7BA,EAAM,KAAK,SACb,KAAK,mBAAmB,SAAW,KAAK,IAAI,KAAK,mBAAmB,SAAUA,EAAM,KAAK,MAAM,EAE/F,KAAK,mBAAmB,SAAW,KAAK,IAAI,KAAK,mBAAmB,SAAUA,EAAM,KAAK,MAAM,EAE7FA,EAAM,QAAU,KAAK,QAAQ,OAAS,GACxC,WAAW,IAAM,KAAK,OAAO,CAAC,CAElC,CACA,WAAWhB,EAAMiB,EAAa,GAAO,CACnCjB,EAAO,KAAK,QAAQ,KAAKK,GACnBY,EACKZ,EAAE,QAAUL,EAAK,KAEjBK,EAAE,OAASL,EAAK,IAE1B,EAIG,EAHQ,KAAK,cAAc,UAAUK,GAChCA,EAAE,OAASL,EAAK,MAAQK,EAAE,QAAUL,EAAK,OAASK,EAAE,SAAWL,EAAK,MAC5E,EACS,MAGV,KAAK,cAAgB,CAACA,EAAM,GAAG,KAAK,aAAa,EACjD,KAAK,SAAS,KAAK,CACjB,MAAOA,EACP,QAAS,KAAK,aAChB,CAAC,EACH,CACA,aAAaA,EAAMiB,EAAa,GAAO,CACrCjB,EAAO,KAAK,QAAQ,KAAKK,GACnBY,EACKZ,EAAE,QAAUL,EAAK,KAEjBK,EAAE,OAASL,EAAK,IAE1B,EACD,IAAMkH,EAAM,KAAK,cAAc,UAAU7G,GAChCA,EAAE,OAASL,EAAK,MAAQK,EAAE,QAAUL,EAAK,OAASK,EAAE,SAAWL,EAAK,MAC5E,EACD,KAAK,cAAc,OAAOkH,EAAK,CAAC,EAChC,KAAK,cAAgB,CAAC,GAAG,KAAK,aAAa,EAC3C,KAAK,WAAW,KAAK,CACnB,MAAOlH,EACP,QAAS,KAAK,aAChB,CAAC,CACH,CACA,MAAO,CACL,KAAK,WAAuB,IAAM,CAChC,IAAImH,EACJ,OAAO,SAAsC7F,EAAmB,CAC9D,OAAQ6F,IAAsCA,EAAuC5F,GAAsByF,CAAoB,IAAI1F,GAAqB0F,CAAoB,CAC9K,CACF,GAAG,CACL,CACA,MAAO,CACL,KAAK,UAAyBxF,EAAkB,CAC9C,KAAMwF,EACN,UAAW,CAAC,CAAC,yBAAyB,CAAC,EACvC,eAAgB,SAA6CvF,EAAIC,EAAKC,EAAU,CAI9E,GAHIF,EAAK,GACJG,GAAeD,EAAUE,GAAM,CAAC,EAEjCJ,EAAK,EAAG,CACV,IAAIK,EACDC,GAAeD,EAAQE,GAAY,CAAC,IAAMN,EAAI,gBAAkBI,EAAG,MACxE,CACF,EACA,OAAQ,CACN,OAAQ,SACR,YAAa,cACb,eAAgB,iBAChB,MAAO,QACP,MAAO,QACP,eAAgB,iBAChB,eAAgB,iBAChB,WAAY,aACZ,WAAY,aACZ,gBAAiB,kBACjB,SAAU,WACV,cAAe,gBACf,cAAe,gBACf,WAAY,aACZ,eAAgB,iBAChB,eAAgB,iBAChB,iBAAkB,mBAClB,mBAAoB,qBACpB,mBAAoB,qBACpB,oBAAqB,sBACrB,oBAAqB,sBACrB,WAAY,aACZ,WAAY,aACZ,WAAY,aACZ,aAAc,eACd,WAAY,aACZ,UAAW,YACX,UAAW,YACX,cAAe,gBACf,oBAAqB,sBACrB,cAAe,gBACf,UAAW,WACb,EACA,QAAS,CACP,SAAU,WACV,WAAY,YACd,EACA,WAAY,GACZ,SAAU,CAAIG,EAA0B,EACxC,MAAO,EACP,KAAM,GACN,OAAQ,CAAC,CAAC,EAAG,mBAAoB,sBAAuB,wBAAyB,OAAQ,aAAc,gBAAiB,gBAAiB,YAAY,EAAG,CAAC,EAAG,YAAa,OAAO,EAAG,CAAC,oBAAqB,GAAI,EAAG,SAAU,OAAQ,gBAAiB,YAAa,YAAa,YAAa,cAAe,gBAAiB,iBAAkB,QAAS,cAAe,YAAa,oBAAqB,EAAG,MAAM,EAAG,CAAC,oBAAqB,GAAI,EAAG,SAAU,OAAQ,gBAAiB,YAAa,YAAa,YAAa,gBAAiB,iBAAkB,QAAS,YAAa,oBAAqB,EAAG,MAAM,EAAG,CAAC,6BAA8B,GAAI,EAAG,WAAY,aAAc,SAAU,yBAA0B,SAAU,SAAU,SAAU,SAAU,OAAQ,WAAY,kBAAmB,kBAAmB,gBAAiB,sBAAuB,gBAAiB,aAAc,aAAc,eAAe,EAAG,CAAC,oBAAqB,GAAI,EAAG,oBAAqB,SAAU,OAAQ,gBAAiB,YAAa,YAAa,YAAa,cAAe,gBAAiB,iBAAkB,QAAS,cAAe,WAAW,EAAG,CAAC,oBAAqB,GAAI,EAAG,oBAAqB,SAAU,OAAQ,gBAAiB,YAAa,YAAa,YAAa,gBAAiB,iBAAkB,QAAS,WAAW,CAAC,EACxwC,SAAU,SAAuCR,EAAIC,EAAK,CACpDD,EAAK,IACJS,EAAe,EAAG,mBAAoB,CAAC,EACvCC,EAAW,mBAAoB,SAAoFC,EAAQ,CAC5H,OAAOV,EAAI,QAAQU,CAAM,CAC3B,CAAC,EAAE,sBAAuB,SAAuFA,EAAQ,CACvH,OAAOV,EAAI,WAAWU,EAAQ,EAAI,CACpC,CAAC,EAAE,wBAAyB,SAAyFA,EAAQ,CAC3H,OAAOV,EAAI,aAAaU,EAAQ,EAAI,CACtC,CAAC,EACEC,EAAe,EACfH,EAAe,EAAG,IAAK,CAAC,EACxBI,EAAW,EAAG8E,GAAwC,EAAG,GAAI,IAAK,CAAC,EAAE,EAAGC,GAAwC,EAAG,GAAI,IAAK,CAAC,EAC7HnF,EAAe,EAAG,IAAK,CAAC,EACxBC,EAAW,WAAY,SAA6DC,EAAQ,CAC7F,OAAOV,EAAI,WAAWU,CAAM,CAC9B,CAAC,EAAE,aAAc,SAA+DA,EAAQ,CACtF,OAAOV,EAAI,aAAaU,CAAM,CAChC,CAAC,EAAE,SAAU,SAA2DA,EAAQ,CAC9E,OAAOV,EAAI,QAAQU,CAAM,CAC3B,CAAC,EAAE,yBAA0B,SAA2EA,EAAQ,CAC9G,OAAOV,EAAI,4BAA4BU,CAAM,CAC/C,CAAC,EACEO,EAAa,EAAE,EAAE,GAElBlB,EAAK,IACJmB,EAAW,OAAWC,GAAgB,GAAIC,GAAMpB,EAAI,MAAOA,EAAI,MAAM,CAAC,EAAE,aAAcA,EAAI,MAAM,EAAE,gBAAiBA,EAAI,aAAa,EAAE,gBAAiBA,EAAI,aAAa,EAAE,aAAcA,EAAI,UAAU,EACtMqB,EAAU,EACVC,EAAY,YAAatB,EAAI,SAAS,EACtCqB,EAAU,EACVH,EAAW,OAAQlB,EAAI,KAAK,EAC5BqB,EAAU,EACVH,EAAW,OAAQlB,EAAI,KAAK,EAC5BqB,EAAU,EACVH,EAAW,SAAUlB,EAAI,MAAM,EAAE,SAAUA,EAAI,MAAM,EAAE,SAAUA,EAAI,MAAM,EAAE,SAAUA,EAAI,OAAO,EAAE,OAAQA,EAAI,IAAI,EAAE,WAAYA,EAAI,QAAQ,EAAE,kBAAmBA,EAAI,eAAe,EAAE,kBAAmBA,EAAI,eAAe,EAAE,gBAAiBA,EAAI,aAAa,EAAE,sBAAuBA,EAAI,mBAAmB,EAAE,gBAAiBA,EAAI,aAAa,EAAE,aAAcA,EAAI,UAAU,EAAE,aAAcA,EAAI,UAAU,EAAE,gBAAiBA,EAAI,aAAa,EAE7b,EACA,aAAc,CAAIwB,EAAMC,GAAgBC,GAAgBC,GAAgBoB,EAAuB,EAC/F,OAAQ,CAAClB,EAAI,EACb,cAAe,EACf,gBAAiB,CACnB,CAAC,CACH,CACF,CACA,OAAOyD,CACT,GAAG,EA87BH,IAAIM,IAA+B,IAAM,CACvC,MAAMA,CAAe,CACnB,MAAO,CACL,KAAK,UAAO,SAAgCC,EAAmB,CAC7D,OAAO,IAAKA,GAAqBD,EACnC,CACF,CACA,MAAO,CACL,KAAK,UAAyBE,GAAiB,CAC7C,KAAMF,CACR,CAAC,CACH,CACA,MAAO,CACL,KAAK,UAAyBG,GAAiB,CAC7C,QAAS,CAACC,EAAiB,CAC7B,CAAC,CACH,CACF,CACA,OAAOJ,CACT,GAAG,EAwvBH,IAAIK,IAA+B,IAAM,CACvC,MAAMA,CAAe,CACnB,MAAO,CACL,KAAK,UAAO,SAAgCC,EAAmB,CAC7D,OAAO,IAAKA,GAAqBD,EACnC,CACF,CACA,MAAO,CACL,KAAK,UAAyBE,GAAiB,CAC7C,KAAMF,CACR,CAAC,CACH,CACA,MAAO,CACL,KAAK,UAAyBG,GAAiB,CAC7C,QAAS,CAACC,EAAiB,CAC7B,CAAC,CACH,CACF,CACA,OAAOJ,CACT,GAAG,EAqkBH,IAAIK,IAAkC,IAAM,CAC1C,MAAMA,CAAkB,CACtB,MAAO,CACL,KAAK,UAAO,SAAmCC,EAAmB,CAChE,OAAO,IAAKA,GAAqBD,EACnC,CACF,CACA,MAAO,CACL,KAAK,UAAyBE,GAAiB,CAC7C,KAAMF,CACR,CAAC,CACH,CACA,MAAO,CACL,KAAK,UAAyBG,GAAiB,CAC7C,QAAS,CAACC,EAAiB,CAC7B,CAAC,CACH,CACF,CACA,OAAOJ,CACT,GAAG,EA6hBH,IAAIK,IAA8B,IAAM,CACtC,MAAMA,CAAc,CAClB,MAAO,CACL,KAAK,UAAO,SAA+BC,EAAmB,CAC5D,OAAO,IAAKA,GAAqBD,EACnC,CACF,CACA,MAAO,CACL,KAAK,UAAyBE,GAAiB,CAC7C,KAAMF,CACR,CAAC,CACH,CACA,MAAO,CACL,KAAK,UAAyBG,GAAiB,CAC7C,QAAS,CAACC,EAAiB,CAC7B,CAAC,CACH,CACF,CACA,OAAOJ,CACT,GAAG,EAICK,IAA8B,IAAM,CACtC,MAAMA,CAAc,CAClB,YAAYC,EAASC,EAAY,CAC/B,KAAK,QAAUD,EACf,KAAK,WAAaC,EAClB,KAAK,KAAO,OACZ,KAAK,WAAa,GAElB,KAAK,YAAc,GACnB,KAAK,MAAQ,EACf,CACA,UAAW,CACLC,GAAiB,KAAK,UAAU,IAClC,KAAK,MAAQ,GAEjB,CACA,YAAYC,EAAS,CACd,KAAK,YAIR,KAAK,aAAa,GAHlB,KAAK,YAAc,GACnB,KAAK,YAAc,KAAK,KAI5B,CACA,cAAe,CACb,IAAMC,EAAOC,EAAO,KAAK,QAAQ,aAAa,EAAE,OAAO,OAAO,EAC1D,KAAK,WACPD,EAAK,WAAW,EAAE,SAAS,GAAG,EAAE,KAAK,IAAK,KAAK,IAAI,EAEnDA,EAAK,KAAK,IAAK,KAAK,IAAI,CAE5B,CACA,MAAO,CACL,KAAK,UAAO,SAA+BT,EAAmB,CAC5D,OAAO,IAAKA,GAAqBI,GAAkBO,EAAqBC,EAAU,EAAMD,EAAkBE,EAAW,CAAC,CACxH,CACF,CACA,MAAO,CACL,KAAK,UAAyBC,EAAkB,CAC9C,KAAMV,EACN,UAAW,CAAC,CAAC,IAAK,kBAAmB,EAAE,CAAC,EACxC,OAAQ,CACN,KAAM,OACN,OAAQ,SACR,KAAM,OACN,KAAM,OACN,WAAY,YACd,EACA,WAAY,GACZ,SAAU,CAAIW,CAAoB,EAClC,MAAOC,GACP,MAAO,EACP,KAAM,EACN,OAAQ,CAAC,CAAC,EAAG,MAAM,EAAG,CAAC,eAAgB,QAAS,EAAG,MAAM,CAAC,EAC1D,SAAU,SAAgCC,EAAIC,EAAK,CAC7CD,EAAK,GACJE,EAAW,EAAGC,GAAiC,EAAG,EAAG,IAAK,CAAC,EAAE,EAAGC,GAAiC,EAAG,EAAG,IAAK,CAAC,EAE9GJ,EAAK,IACJK,EAAW,OAAQ,CAACJ,EAAI,KAAK,EAC7BK,EAAU,EACVD,EAAW,OAAQJ,EAAI,KAAK,EAEnC,EACA,aAAc,CAAIM,CAAI,EACtB,cAAe,EACf,KAAM,CACJ,UAAW,CAACC,GAAQ,iBAAkB,CAACC,GAAW,SAAU,CAACC,EAAM,CACjE,gBAAiB,IACjB,iBAAkB,GACpB,CAAC,EAAGC,GAAQ,IAAMD,EAAM,CACtB,iBAAkB,CACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACT,EACA,gBAAiB,CACnB,CAAC,CACH,CACF,CACA,OAAOvB,CACT,GAAG,EAICyB,IAAoC,IAAM,CAC5C,MAAMA,CAAoB,CACxB,aAAc,CACZ,KAAK,WAAa,GAClB,KAAK,eAAiBC,CACxB,CACA,YAAYtB,EAAS,CACnB,KAAK,OAAO,CACd,CACA,QAAS,CACP,KAAK,gBAAgB,EACrB,IAAMuB,EAAO,KAAK,SAAS,KAAK,KAAK,MAAM,EACrCC,EAAU,KAAK,iBAAiB,EACtC,KAAK,KAAOA,EAAQD,CAAI,GAAK,GAC7B,IAAME,EAAU,KAAK,iBAAiB,EAEtC,GADA,KAAK,SAAWA,EAAQF,CAAI,GAAK,GAC7B,KAAK,SAAU,CACjB,IAAMG,EAAQ,KAAK,kBAAkB,EACrC,KAAK,UAAYA,EAAMH,CAAI,GAAK,EAClC,CACA,GAAI,KAAK,YAAa,CACpB,KAAK,OAAS,KAAK,YACnB,IAAMI,EAAS,KAAK,KAAK,OAAO,IAAIC,GAAKA,EAAE,KAAK,EAC1CC,EAAM,KAAK,IAAI,GAAGF,CAAM,EACxBG,EAAM,KAAK,IAAI,GAAGH,CAAM,EAC1BE,IAAQC,IACV,KAAK,OAAS,KAAK,OAAO,SAASD,CAAG,EAE1C,MACE,KAAK,OAAS,KAAK,OAAO,SAAS,KAAK,KAAK,IAAI,CAErD,CACA,kBAAmB,CACjB,OAAOE,GAAK,EAAE,EAAEH,GAAK,CACnB,IAAMI,EAAQJ,EAAE,KACZK,EACJ,OAAI,KAAK,YAAcC,EAAU,KAC/BD,EAAQ,KAAK,OAAOD,CAAK,EAChB,KAAK,YAAcE,EAAU,OACtCD,EAAQ,KAAK,OAAO,OAAOD,CAAK,CAAC,EAEjCC,EAAQ,KAAK,OAAOD,CAAK,EAEpBC,CACT,CAAC,EAAE,EAAEL,GAAK,KAAK,OAAOA,EAAE,KAAK,CAAC,EAAE,MAAM,KAAK,KAAK,CAClD,CACA,mBAAoB,CAClB,OAAOO,GAAK,EAAE,EAAEP,GAAK,CACnB,IAAMI,EAAQJ,EAAE,KACZK,EACJ,OAAI,KAAK,YAAcC,EAAU,KAC/BD,EAAQ,KAAK,OAAOD,CAAK,EAChB,KAAK,YAAcE,EAAU,OACtCD,EAAQ,KAAK,OAAO,OAAOD,CAAK,CAAC,EAEjCC,EAAQ,KAAK,OAAOD,CAAK,EAEpBC,CACT,CAAC,EAAE,GAAGL,GAAK,KAAK,OAAO,OAAOA,EAAE,KAAQ,SAAWA,EAAE,IAAMA,EAAE,KAAK,CAAC,EAAE,GAAGA,GAAK,KAAK,OAAO,OAAOA,EAAE,KAAQ,SAAWA,EAAE,IAAMA,EAAE,KAAK,CAAC,EAAE,MAAM,KAAK,KAAK,CACzJ,CACA,kBAAmB,CACjB,IAAMQ,EAAYR,GAAK,CACrB,IAAMI,EAAQJ,EAAE,KAChB,OAAO,KAAK,OAAOI,CAAK,CAC1B,EACA,OAAOG,GAAK,EAAE,EAAEC,CAAS,EAAE,GAAG,IAAM,KAAK,OAAO,MAAM,EAAE,CAAC,CAAC,EAAE,GAAGR,GAAK,KAAK,OAAOA,EAAE,KAAK,CAAC,EAAE,MAAM,KAAK,KAAK,CAC5G,CACA,SAASL,EAAM,CACb,OAAI,KAAK,YAAcW,EAAU,OAC/BX,EAAOc,GAAWd,EAAM,MAAM,EACrB,KAAK,YAAcW,EAAU,KACtCX,EAAOe,GAAWf,EAAM,MAAM,EAE9BA,EAAOgB,GAAahB,EAAM,OAAQ,MAAO,KAAK,OAAO,OAAO,CAAC,EAExDA,CACT,CACA,iBAAkB,CAChB,GAAI,KAAK,OAAO,YAAcW,EAAU,OAAQ,CAC9C,KAAK,YAAc,GACnB,KAAK,WAAa,OAASM,GAAG,EAAE,SAAS,EACzC,KAAK,YAAc,QAAQ,KAAK,UAAU,IAC1C,IAAMb,EAAS,KAAK,KAAK,OAAO,IAAIC,GAAKA,EAAE,KAAK,EAC1CC,EAAM,KAAK,IAAI,GAAGF,CAAM,EACxBG,EAAM,KAAK,IAAI,GAAGH,CAAM,EAC9B,KAAK,cAAgB,KAAK,OAAO,uBAAuBE,EAAKC,CAAG,EAChE,KAAK,kBAAoB,KAAK,OAAO,uBAAuBD,CAAG,CACjE,MACE,KAAK,YAAc,GACnB,KAAK,cAAgB,OACrB,KAAK,kBAAoB,MAE7B,CACA,SAASY,EAAO,CACd,OAAK,KAAK,cACG,KAAK,cAAc,KAAKb,GAC5Ba,EAAM,OAASb,EAAE,IACzB,IACe,OAJgB,EAKlC,CACA,WAAWa,EAAO,CAChB,MAAI,CAAC,KAAK,eAAiB,KAAK,cAAc,SAAW,EAAU,GACtD,KAAK,cAAc,KAAKb,GAC5Ba,EAAM,OAASb,EAAE,IACzB,IACe,MAClB,CACA,MAAO,CACL,KAAK,UAAO,SAAqCpC,EAAmB,CAClE,OAAO,IAAKA,GAAqB6B,EACnC,CACF,CACA,MAAO,CACL,KAAK,UAAyBf,EAAkB,CAC9C,KAAMe,EACN,UAAW,CAAC,CAAC,IAAK,yBAA0B,EAAE,CAAC,EAC/C,OAAQ,CACN,KAAM,OACN,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,UAAW,YACX,MAAO,QACP,cAAe,gBACf,iBAAkB,mBAClB,SAAU,WACV,WAAY,YACd,EACA,WAAY,GACZ,SAAU,CAAId,CAAoB,EAClC,MAAOmC,GACP,MAAO,EACP,KAAM,GACN,OAAQ,CAAC,CAAC,iCAAkC,GAAI,EAAG,cAAe,OAAQ,QAAS,EAAG,MAAM,EAAG,CAAC,kBAAmB,GAAI,EAAG,iBAAkB,EAAG,OAAQ,OAAQ,OAAQ,UAAW,eAAgB,WAAY,QAAS,YAAY,EAAG,CAAC,kBAAmB,GAAI,EAAG,cAAe,EAAG,OAAQ,OAAQ,SAAU,YAAY,EAAG,CAAC,kBAAmB,GAAI,QAAS,oBAAqB,EAAG,OAAQ,OAAQ,OAAQ,SAAU,WAAY,UAAW,aAAc,EAAG,MAAM,EAAG,CAAC,iCAAkC,GAAI,EAAG,cAAe,OAAQ,OAAO,EAAG,CAAC,kBAAmB,GAAI,EAAG,oBAAqB,EAAG,OAAQ,OAAQ,OAAQ,UAAW,YAAY,CAAC,EACtnB,SAAU,SAAsCjC,EAAIC,EAAK,CACnDD,EAAK,IACJkC,EAAe,EACfC,EAAe,EAAG,GAAG,EAAE,EAAG,MAAM,EAChCjC,EAAW,EAAGkC,GAAuC,EAAG,EAAG,IAAK,CAAC,EACjEC,EAAa,EACbC,EAAU,EAAG,IAAK,CAAC,EAAE,EAAG,IAAK,CAAC,EAC9BpC,EAAW,EAAGqC,GAAuC,EAAG,EAAG,IAAK,CAAC,EACjEF,EAAa,GAEdrC,EAAK,IACJM,EAAU,CAAC,EACXD,EAAW,OAAQJ,EAAI,WAAW,EAClCK,EAAU,EACVkC,GAAY,SAAUvC,EAAI,SAASA,EAAI,IAAI,CAAC,EAAE,WAAYA,EAAI,WAAWA,EAAI,IAAI,CAAC,EAClFI,EAAW,OAAQJ,EAAI,IAAI,EAAE,OAAQA,EAAI,QAAQ,EAAE,OAAQA,EAAI,YAAcA,EAAI,YAAcA,EAAI,OAAO,SAASA,EAAI,KAAK,IAAI,CAAC,EAAE,UAAW,GAAI,EAAE,eAAgB,CAAC,EAAE,WAAY,EAAI,EAAE,QAASA,EAAI,iBAAiB,EAAE,aAAcA,EAAI,UAAU,EACrPK,EAAU,EACVkC,GAAY,SAAUvC,EAAI,SAASA,EAAI,IAAI,CAAC,EAAE,WAAYA,EAAI,WAAWA,EAAI,IAAI,CAAC,EAClFI,EAAW,OAAQJ,EAAI,IAAI,EAAE,OAAQA,EAAI,IAAI,EAAE,SAAUA,EAAI,MAAM,EAAE,aAAcA,EAAI,UAAU,EACjGK,EAAU,EACVD,EAAW,OAAQJ,EAAI,QAAQ,EAEtC,EACA,aAAc,CAAIM,EAAMkC,GAAeC,GAA4BvD,EAAa,EAChF,cAAe,EACf,gBAAiB,CACnB,CAAC,CACH,CACF,CACA,OAAOyB,CACT,GAAG,EAIC+B,IAAmC,IAAM,CAC3C,MAAMA,UAA2BC,EAAmB,CAClD,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,YAAc,SACnB,KAAK,eAAiBC,GAAe,MACrC,KAAK,cAAgB,GACrB,KAAK,MAAQC,GACb,KAAK,cAAgB,CAAC,EACtB,KAAK,eAAiB,GACtB,KAAK,eAAiB,GACtB,KAAK,iBAAmB,GACxB,KAAK,mBAAqB,GAC1B,KAAK,mBAAqB,GAC1B,KAAK,aAAe,GACpB,KAAK,gBAAkB,GACvB,KAAK,aAAe,GACpB,KAAK,cAAgB,GACrB,KAAK,UAAY,GACjB,KAAK,SAAW,IAAIC,EACpB,KAAK,WAAa,IAAIA,EACtB,KAAK,OAAS,CAAC,GAAI,GAAI,GAAI,EAAE,EAC7B,KAAK,YAAc,EACnB,KAAK,WAAa,EAClB,KAAK,eAAiB,GACtB,KAAK,gBAAkB,GACvB,KAAK,MAAQ,EACf,CACA,UAAW,CACLzD,GAAiB,KAAK,UAAU,IAClC,KAAK,MAAQ,GAEjB,CACA,QAAS,CACP,MAAM,OAAO,EACb,KAAK,KAAO0D,GAAwB,CAClC,MAAO,KAAK,MACZ,OAAQ,KAAK,OACb,QAAS,KAAK,OACd,UAAW,KAAK,MAChB,UAAW,KAAK,MAChB,YAAa,KAAK,YAClB,WAAY,KAAK,WACjB,WAAY,KAAK,eACjB,WAAY,KAAK,eACjB,WAAY,KAAK,OACjB,WAAY,KAAK,WACjB,eAAgB,KAAK,cACvB,CAAC,EACG,KAAK,WACP,KAAK,KAAK,QAAU,KAAK,eAAiB,KAAK,OAAO,CAAC,EAAI,KAAK,iBAElE,KAAK,QAAU,KAAK,WAAW,EAC3B,KAAK,iBACP,KAAK,QAAU,KAAK,gBAEtB,KAAK,QAAU,KAAK,WAAW,EAC/B,KAAK,aAAe,KAAK,gBAAgB,EACzC,KAAK,OAAS,KAAK,UAAU,KAAK,QAAS,KAAK,KAAK,KAAK,EAC1D,KAAK,OAAS,KAAK,UAAU,KAAK,QAAS,KAAK,KAAK,MAAM,EAC3D,KAAK,eAAe,EACpB,KAAK,UAAU,EACf,KAAK,cAAgB,KAAK,iBAAiB,EAC3C,KAAK,UAAY,aAAa,KAAK,KAAK,OAAO,MAAM,KAAK,OAAO,CAAC,CAAC,IACnE,KAAK,WAAa,OAASjB,GAAG,EAAE,SAAS,EACzC,KAAK,SAAW,QAAQ,KAAK,UAAU,GACzC,CACA,gBAAiB,CACX,KAAK,WACP,KAAK,cAAgB,KAAK,KAAK,MAC/B,KAAK,gBAAkB,KAAK,WAAW,EACvC,KAAK,eAAiB,KAAK,UAAU,KAAK,gBAAiB,KAAK,aAAa,EAC7E,KAAK,eAAiB,KAAK,UAAU,KAAK,QAAS,KAAK,cAAc,EACtE,KAAK,kBAAoB,aAAa,KAAK,KAAK,OAAO,KAAK,CAAC,KAAK,OAAO,CAAC,CAAC,IAE/E,CACA,YAAa,CACX,IAAIb,EAAS+B,GAAuB,KAAK,OAAO,EAChD,KAAK,UAAYC,GAAahC,CAAM,EACpC,IAAIiC,EAAS,CAAC,EACV,KAAK,YAAc1B,EAAU,SAC/BP,EAASA,EAAO,IAAIkC,GAAK,OAAOA,CAAC,CAAC,GAEpC,IAAI/B,EACAD,EACJ,OAAI,KAAK,YAAcK,EAAU,MAAQ,KAAK,YAAcA,EAAU,UACpEJ,EAAM,KAAK,UAAY,KAAK,UAAY,KAAK,IAAI,GAAGH,CAAM,EAC1DE,EAAM,KAAK,UAAY,KAAK,UAAY,KAAK,IAAI,GAAGF,CAAM,GAExD,KAAK,YAAcO,EAAU,MAC/B0B,EAAS,CAAC,IAAI,KAAK9B,CAAG,EAAG,IAAI,KAAKD,CAAG,CAAC,EACtC,KAAK,KAAO,CAAC,GAAGF,CAAM,EAAE,KAAK,CAACmC,EAAGC,IAAM,CACrC,IAAMC,EAAQF,EAAE,QAAQ,EAClBG,EAAQF,EAAE,QAAQ,EACxB,OAAIC,EAAQC,EAAc,EACtBA,EAAQD,EAAc,GACnB,CACT,CAAC,GACQ,KAAK,YAAc9B,EAAU,QACtC0B,EAAS,CAAC9B,EAAKD,CAAG,EAElB,KAAK,KAAO,CAAC,GAAGF,CAAM,EAAE,KAAK,CAACmC,EAAGC,IAAMD,EAAIC,CAAC,IAE5CH,EAASjC,EACT,KAAK,KAAOA,GAEPiC,CACT,CACA,YAAa,CACX,IAAMA,EAAS,CAAC,EAChB,QAAWM,KAAW,KAAK,QACzB,QAAWtC,KAAKsC,EAAQ,OAClBN,EAAO,QAAQhC,EAAE,KAAK,EAAI,GAC5BgC,EAAO,KAAKhC,EAAE,KAAK,EAEjBA,EAAE,MAAQ,SACZ,KAAK,SAAW,GACZgC,EAAO,QAAQhC,EAAE,GAAG,EAAI,GAC1BgC,EAAO,KAAKhC,EAAE,GAAG,GAGjBA,EAAE,MAAQ,SACZ,KAAK,SAAW,GACZgC,EAAO,QAAQhC,EAAE,GAAG,EAAI,GAC1BgC,EAAO,KAAKhC,EAAE,GAAG,GAKzB,IAAMD,EAAS,CAAC,GAAGiC,CAAM,EACpB,KAAK,WACRjC,EAAO,KAAK,CAAC,EAEf,IAAMG,EAAM,KAAK,UAAY,KAAK,UAAY,KAAK,IAAI,GAAGH,CAAM,EAC1DE,EAAM,KAAK,UAAY,KAAK,UAAY,KAAK,IAAI,GAAGF,CAAM,EAChE,MAAO,CAACG,EAAKD,CAAG,CAClB,CACA,iBAAkB,CAChB,OAAO,KAAK,QAAQ,IAAID,GAAKA,EAAE,IAAI,CACrC,CACA,UAAUgC,EAAQO,EAAO,CACvB,IAAIC,EACJ,OAAI,KAAK,YAAclC,EAAU,KAC/BkC,EAAQC,GAAU,EAAE,MAAM,CAAC,EAAGF,CAAK,CAAC,EAAE,OAAOP,CAAM,EAC1C,KAAK,YAAc1B,EAAU,QACtCkC,EAAQE,GAAY,EAAE,MAAM,CAAC,EAAGH,CAAK,CAAC,EAAE,OAAOP,CAAM,EACjD,KAAK,eACPQ,EAAQA,EAAM,KAAK,IAEZ,KAAK,YAAclC,EAAU,UACtCkC,EAAQG,GAAW,EAAE,MAAM,CAAC,EAAGJ,CAAK,CAAC,EAAE,QAAQ,EAAG,EAAE,OAAOP,CAAM,GAE5DQ,CACT,CACA,UAAUR,EAAQY,EAAQ,CACxB,IAAMJ,EAAQE,GAAY,EAAE,MAAM,CAACE,EAAQ,CAAC,CAAC,EAAE,OAAOZ,CAAM,EAC5D,OAAO,KAAK,aAAeQ,EAAM,KAAK,EAAIA,CAC5C,CACA,aAAaR,EAAQ,CACnB,KAAK,eAAiBA,EACtB,KAAK,QAAU,KAAK,eACpB,KAAK,OAAS,KAAK,UAAU,KAAK,QAAS,KAAK,KAAK,KAAK,CAC5D,CACA,sBAAsBa,EAAM,CAC1B,KAAK,gBAAkBA,EAAK,MAC5B,KAAK,cAAc,CACrB,CACA,aAAc,CACZ,KAAK,gBAAkB,KACvB,KAAK,cAAc,CACrB,CACA,QAAQlD,EAAM,CACZ,KAAK,OAAO,KAAKA,CAAI,CACvB,CACA,QAAQmD,EAAOD,EAAM,CACnB,MAAO,GAAGA,EAAK,IAAI,EACrB,CACA,WAAY,CACV,IAAIb,EACA,KAAK,aAAe1B,EAAU,QAChC0B,EAAS,KAAK,aAEdA,EAAS,KAAK,QAEhB,KAAK,OAAS,IAAIe,GAAY,KAAK,OAAQ,KAAK,WAAYf,EAAQ,KAAK,YAAY,CACvF,CACA,kBAAmB,CACjB,IAAMgB,EAAO,CACX,UAAW,KAAK,WAChB,OAAQ,OACR,OAAQ,CAAC,EACT,MAAO,OACP,SAAU,KAAK,cACjB,EACA,OAAIA,EAAK,YAAc1C,EAAU,SAC/B0C,EAAK,OAAS,KAAK,aACnBA,EAAK,OAAS,KAAK,OACnBA,EAAK,MAAQ,KAAK,cAElBA,EAAK,OAAS,KAAK,QACnBA,EAAK,OAAS,KAAK,OAAO,OAErBA,CACT,CACA,iBAAiB,CACf,MAAAT,CACF,EAAG,CACD,KAAK,WAAaA,EAClB,KAAK,OAAO,CACd,CACA,kBAAkB,CAChB,OAAAK,CACF,EAAG,CACD,KAAK,YAAcA,EACnB,KAAK,OAAO,CACd,CACA,WAAWC,EAAM,CACf,KAAK,cAAc,EAIf,EAHQ,KAAK,cAAc,UAAU7C,GAChCA,EAAE,OAAS6C,EAAK,MAAQ7C,EAAE,QAAU6C,EAAK,KACjD,EACS,MAGV,KAAK,cAAgB,CAACA,CAAI,EAC1B,KAAK,SAAS,KAAK,CACjB,MAAOA,EACP,QAAS,KAAK,aAChB,CAAC,EACH,CACA,aAAaA,EAAM,CACjB,IAAMI,EAAM,KAAK,cAAc,UAAUjD,GAChCA,EAAE,OAAS6C,EAAK,MAAQ7C,EAAE,QAAU6C,EAAK,KACjD,EACD,KAAK,cAAc,OAAOI,EAAK,CAAC,EAChC,KAAK,cAAgB,CAAC,GAAG,KAAK,aAAa,EAC3C,KAAK,WAAW,KAAK,CACnB,MAAOJ,EACP,QAAS,KAAK,aAChB,CAAC,CACH,CACA,eAAgB,CACd,KAAK,cAAgB,CAAC,GAAG,KAAK,aAAa,EAC3C,QAAWhC,KAAS,KAAK,cACvB,KAAK,WAAW,KAAK,CACnB,MAAOA,EACP,QAAS,CAAC,CACZ,CAAC,EAEH,KAAK,cAAgB,CAAC,CACxB,CACA,MAAO,CACL,KAAK,WAAuB,IAAM,CAChC,IAAIqC,EACJ,OAAO,SAAoCtF,EAAmB,CAC5D,OAAQsF,IAAoCA,EAAqCC,GAAsB3B,CAAkB,IAAI5D,GAAqB4D,CAAkB,CACtK,CACF,GAAG,CACL,CACA,MAAO,CACL,KAAK,UAAyB9C,EAAkB,CAC9C,KAAM8C,EACN,UAAW,CAAC,CAAC,uBAAuB,CAAC,EACrC,eAAgB,SAA2C3C,EAAIC,EAAKsE,EAAU,CAK5E,GAJIvE,EAAK,IACJwE,GAAeD,EAAUE,GAAM,CAAC,EAChCD,GAAeD,EAAUG,GAAM,CAAC,GAEjC1E,EAAK,EAAG,CACV,IAAI2E,EACDC,GAAeD,EAAQE,GAAY,CAAC,IAAM5E,EAAI,gBAAkB0E,EAAG,OACnEC,GAAeD,EAAQE,GAAY,CAAC,IAAM5E,EAAI,sBAAwB0E,EAAG,MAC9E,CACF,EACA,aAAc,SAAyC3E,EAAIC,EAAK,CAC1DD,EAAK,GACJ8E,EAAW,aAAc,UAA4D,CACtF,OAAO7E,EAAI,YAAY,CACzB,CAAC,CAEL,EACA,OAAQ,CACN,OAAQ,SACR,YAAa,cACb,eAAgB,iBAChB,MAAO,QACP,MAAO,QACP,eAAgB,iBAChB,eAAgB,iBAChB,WAAY,aACZ,WAAY,aACZ,UAAW,YACX,SAAU,WACV,SAAU,WACV,cAAe,gBACf,MAAO,QACP,cAAe,gBACf,WAAY,aACZ,iBAAkB,mBAClB,eAAgB,iBAChB,eAAgB,iBAChB,iBAAkB,mBAClB,mBAAoB,qBACpB,mBAAoB,qBACpB,oBAAqB,sBACrB,oBAAqB,sBACrB,WAAY,aACZ,WAAY,aACZ,aAAc,eACd,gBAAiB,kBACjB,aAAc,eACd,eAAgB,iBAChB,cAAe,gBACf,UAAW,YACX,UAAW,YACX,UAAW,YACX,UAAW,YACX,UAAW,WACb,EACA,QAAS,CACP,SAAU,WACV,WAAY,YACd,EACA,WAAY,GACZ,SAAU,CAAI8E,EAA0B,EACxC,MAAO,GACP,KAAM,GACN,OAAQ,CAAC,CAAC,EAAG,mBAAoB,sBAAuB,wBAAyB,OAAQ,aAAc,gBAAiB,gBAAiB,YAAY,EAAG,CAAC,EAAG,aAAc,OAAO,EAAG,CAAC,oBAAqB,GAAI,EAAG,SAAU,OAAQ,gBAAiB,YAAa,YAAa,YAAa,cAAe,gBAAiB,iBAAkB,QAAS,YAAa,oBAAqB,EAAG,MAAM,EAAG,CAAC,oBAAqB,GAAI,EAAG,SAAU,OAAQ,gBAAiB,YAAa,YAAa,YAAa,gBAAiB,iBAAkB,QAAS,iBAAkB,eAAgB,gBAAiB,YAAa,oBAAqB,EAAG,MAAM,EAAG,CAAC,EAAG,MAAM,EAAG,CAAC,EAAG,aAAc,EAAG,MAAM,EAAG,CAAC,sBAAuB,GAAI,EAAG,UAAW,OAAQ,SAAU,SAAU,eAAgB,YAAa,SAAU,iBAAkB,EAAG,MAAM,EAAG,CAAC,oBAAqB,GAAI,EAAG,oBAAqB,SAAU,OAAQ,gBAAiB,YAAa,YAAa,YAAa,cAAe,gBAAiB,iBAAkB,QAAS,WAAW,EAAG,CAAC,oBAAqB,GAAI,EAAG,oBAAqB,SAAU,OAAQ,gBAAiB,YAAa,YAAa,YAAa,gBAAiB,iBAAkB,QAAS,iBAAkB,eAAgB,gBAAiB,WAAW,EAAG,CAAC,EAAG,QAAS,UAAW,cAAc,EAAG,CAAC,yBAA0B,GAAI,EAAG,SAAU,SAAU,SAAU,OAAQ,gBAAiB,YAAa,QAAS,mBAAoB,WAAY,YAAY,EAAG,CAAC,EAAG,YAAY,EAAG,CAAC,0BAA2B,GAAI,EAAG,QAAS,OAAQ,OAAQ,SAAU,SAAU,UAAW,SAAU,kBAAmB,iBAAiB,EAAG,CAAC,EAAG,QAAS,SAAS,EAAG,CAAC,2BAA4B,GAAI,EAAG,SAAU,WAAY,aAAc,SAAU,SAAU,SAAU,OAAQ,YAAa,eAAgB,gBAAiB,kBAAmB,iBAAiB,EAAG,CAAC,sBAAuB,GAAI,EAAG,iBAAkB,UAAW,OAAQ,SAAU,SAAU,eAAgB,YAAa,QAAQ,EAAG,CAAC,yBAA0B,GAAI,EAAG,SAAU,SAAU,SAAU,OAAQ,YAAa,QAAS,WAAY,YAAY,CAAC,EACrhE,SAAU,SAAqC/E,EAAIC,EAAK,CAClDD,EAAK,IACJmC,EAAe,EAAG,mBAAoB,CAAC,EACvC2C,EAAW,mBAAoB,SAAkFE,EAAQ,CAC1H,OAAO/E,EAAI,QAAQ+E,CAAM,CAC3B,CAAC,EAAE,sBAAuB,SAAqFA,EAAQ,CACrH,OAAO/E,EAAI,WAAW+E,CAAM,CAC9B,CAAC,EAAE,wBAAyB,SAAuFA,EAAQ,CACzH,OAAO/E,EAAI,aAAa+E,CAAM,CAChC,CAAC,EACE9C,EAAe,EACfC,EAAe,EAAG,MAAM,EAAE,EAAG,UAAU,EACvCG,EAAU,EAAG,MAAM,EACnBD,EAAa,EAAE,EACfF,EAAe,EAAG,IAAK,CAAC,EACxBjC,EAAW,EAAG+E,GAAsC,EAAG,GAAI,IAAK,CAAC,EAAE,EAAGC,GAAsC,EAAG,GAAI,IAAK,CAAC,EACzH/C,EAAe,EAAG,GAAG,EACrBjC,EAAW,EAAGiF,GAAsC,EAAG,EAAG,IAAK,CAAC,EAAE,EAAGC,GAAsC,EAAG,EAAG,IAAK,CAAC,EAAE,GAAIC,GAAuC,EAAG,EAAG,IAAK,CAAC,EAChLhD,EAAa,EAAE,EACfnC,EAAW,GAAIoF,GAAuC,EAAG,GAAI,IAAK,CAAC,EACnEjD,EAAa,GAEdrC,EAAK,IACJK,EAAW,OAAWkF,GAAgB,GAAIC,GAAMvF,EAAI,MAAOA,EAAI,MAAM,CAAC,EAAE,aAAcA,EAAI,MAAM,EAAE,gBAAiBA,EAAI,aAAa,EAAE,gBAAiBA,EAAI,aAAa,EAAE,aAAcA,EAAI,UAAU,EACtMK,EAAU,CAAC,EACXmF,EAAY,KAAMxF,EAAI,UAAU,EAChCK,EAAU,EACVmF,EAAY,QAASxF,EAAI,KAAK,MAAQ,EAAE,EAAE,SAAUA,EAAI,KAAK,OAAS,EAAE,EAAE,YAAa,mBAAmB,EAC1GK,EAAU,EACVmF,EAAY,YAAaxF,EAAI,SAAS,EACtCK,EAAU,EACVD,EAAW,OAAQJ,EAAI,KAAK,EAC5BK,EAAU,EACVD,EAAW,OAAQJ,EAAI,KAAK,EAC5BK,EAAU,EACVmF,EAAY,YAAaxF,EAAI,QAAQ,EACrCK,EAAU,EACVD,EAAW,OAAQ,CAACJ,EAAI,KAAK,EAC7BK,EAAU,EACVD,EAAW,OAAQJ,EAAI,KAAK,EAC5BK,EAAU,EACVD,EAAW,OAAQ,CAACJ,EAAI,eAAe,EACvCK,EAAU,EACVD,EAAW,OAAQJ,EAAI,UAAYA,EAAI,WAAa,SAAS,EAEpE,EACA,aAAc,CAAIyF,GAAYnF,EAAMoF,GAAgBC,GAAgBC,GAAaC,GAAgBC,GAAuBC,GAAUpF,EAAmB,EACrJ,OAAQ,CAACqF,EAAI,EACb,cAAe,EACf,KAAM,CACJ,UAAW,CAACzF,GAAQ,iBAAkB,CAACC,GAAW,SAAU,CAACC,EAAM,CACjE,QAAS,CACX,CAAC,EAAGC,GAAQ,IAAKD,EAAM,CACrB,QAAS,CACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACT,EACA,gBAAiB,CACnB,CAAC,CACH,CACF,CACA,OAAOiC,CACT,GAAG,EAICuD,IAAgC,IAAM,CACxC,MAAMA,CAAgB,CACpB,MAAO,CACL,KAAK,UAAO,SAAiCnH,EAAmB,CAC9D,OAAO,IAAKA,GAAqBmH,EACnC,CACF,CACA,MAAO,CACL,KAAK,UAAyBlH,GAAiB,CAC7C,KAAMkH,CACR,CAAC,CACH,CACA,MAAO,CACL,KAAK,UAAyBjH,GAAiB,CAC7C,QAAS,CAACC,EAAiB,CAC7B,CAAC,CACH,CACF,CACA,OAAOgH,CACT,GAAG,EAICC,IAAkC,IAAM,CAC1C,MAAMA,CAAkB,CACtB,YAAY9G,EAAY,CACtB,KAAK,WAAaA,EAClB,KAAK,WAAa,GAClB,KAAK,UAAY,GACjB,KAAK,cAAgB,GACrB,KAAK,UAAY+G,EACnB,CACA,YAAY7G,EAAS,CACnB,KAAK,cAAc,EACnB,KAAK,OAAO,CACd,CACA,eAAgB,CACd,GAAID,GAAiB,KAAK,UAAU,EAClC,KAAK,eAAiB,eAAe,KAAK,KAAK,MAAM,KAAK,KAAK,SAC/D,KAAK,cAAgB,aAAa,KAAK,KAAK,IAAI,KAAK,KAAK,IAC1D,KAAK,eAAkB,KAAK,WAAoB,kBAAP,SACpC,CACL,IAAM+G,EAAO,uBAAuB,KAAK,UAAU,SAAS,EAC5D,KAAK,eAAiBA,EAAO,KAAO,eAAe,KAAK,KAAK,MAAM,KAAK,KAAK,SAC7E,KAAK,cAAiBA,EAAc,aAAa,KAAK,KAAK,IAAI,KAAK,KAAK,IAA5C,KAC7B,KAAK,eAAiBA,GAAQ,CAAC,KAAK,WAAa,KAAO,iBAC1D,CACF,CACA,QAAS,CACP,IAAIC,EAAc,KAAK,OACnB,KAAK,gBACPA,EAAc,KAAK,OAAS,KAAK,MAAQ,KAAK,KAIhD,IAAMC,EAFWC,GAAI,EAAE,YAAYF,CAAW,EAAE,YAAYA,CAAW,EAE7C,SAAS,KAAK,IAAI,EACxC3C,EAAQ,KAAK,KAAK,IAAI,CAAC,EAAI4C,EAAS,CAAC,GACrC,KAAK,KAAK,IAAI,CAAC,IAAM,GAAKA,EAAS,CAAC,IAAM,KAC5C5C,EAAQ,GAEV,IAAM8C,EAAW,CAAC9C,EAAQ4C,EAAS,CAAC,EAAG5C,EAAQ4C,EAAS,CAAC,CAAC,EAC1D,KAAK,KAAO,IAAIA,CAAQ,IAAIE,CAAQ,IAAI,KAAK,KAAK,GAAG,EACvD,CACA,IAAI,OAAQ,CACV,OAAO,KAAK,KAAK,IAAI,CAAC,CACxB,CACA,IAAI,OAAQ,CACV,OAAO,KAAK,KAAK,IAAI,CAAC,CACxB,CACA,YAAa,CACX,OAAO,KAAK,SAAS,KAAK,IAAI,EAAI,KAAK,GAAKC,GAAW,MAAQA,GAAW,GAC5E,CACA,SAASvF,EAAG,CACV,OAAOA,EAAE,YAAcA,EAAE,SAAWA,EAAE,YAAc,CACtD,CACA,MAAO,CACL,KAAK,UAAO,SAAmCpC,EAAmB,CAChE,OAAO,IAAKA,GAAqBoH,GAAsBzG,EAAkBE,EAAW,CAAC,CACvF,CACF,CACA,MAAO,CACL,KAAK,UAAyBC,EAAkB,CAC9C,KAAMsG,EACN,UAAW,CAAC,CAAC,IAAK,uBAAwB,EAAE,CAAC,EAC7C,OAAQ,CACN,KAAM,OACN,OAAQ,SACR,MAAO,QACP,MAAO,QACP,IAAK,MACL,MAAO,QACP,cAAe,gBACf,WAAY,aACZ,UAAW,YACX,cAAe,eACjB,EACA,WAAY,GACZ,SAAU,CAAIrG,CAAoB,EAClC,MAAO6G,GACP,MAAO,EACP,KAAM,GACN,OAAQ,CAAC,CAAC,KAAM,QAAS,EAAG,WAAW,EAAG,CAAC,OAAQ,OAAQ,EAAG,iBAAkB,MAAM,CAAC,EACvF,SAAU,SAAoC3G,EAAIC,EAAK,CACjDD,EAAK,IACJmC,EAAe,EAAG,OAAO,EACzByE,EAAO,CAAC,EACRvE,EAAa,EACbH,EAAe,EACfC,EAAe,EAAG,GAAG,EAAE,EAAG,OAAQ,CAAC,EACnCyE,EAAO,CAAC,EACRvE,EAAa,EAAE,EACfC,EAAU,EAAG,OAAQ,CAAC,GAEvBtC,EAAK,IACJM,EAAU,EACVuG,GAAkB5G,EAAI,KAAK,EAC3BK,EAAU,EACVwG,GAAY,YAAa7G,EAAI,cAAc,EAAE,aAAcA,EAAI,cAAc,EAC7EwF,EAAY,YAAaxF,EAAI,aAAa,EAC1CK,EAAU,EACVwG,GAAY,cAAe7G,EAAI,WAAW,CAAC,EAAE,kBAAmB,YAAY,EAC5EuC,GAAY,YAAavC,EAAI,UAAU,EACvCK,EAAU,EACVyG,GAAmB,IAAK9G,EAAI,UAAYA,EAAI,UAAUA,EAAI,MAAOA,EAAI,aAAa,EAAIA,EAAI,MAAO,GAAG,EACpGK,EAAU,EACVkC,GAAY,YAAavC,EAAI,UAAU,EACvCwF,EAAY,IAAKxF,EAAI,IAAI,EAAE,SAAUA,EAAI,KAAK,EAErD,EACA,cAAe,EACf,gBAAiB,CACnB,CAAC,CACH,CACF,CACA,OAAOkG,CACT,GAAG,EAuLH,IAAMa,GAAQ,EAAI,KAAK,GAkZvB,IAAIC,IAAgC,IAAM,CACxC,MAAMA,CAAgB,CACpB,YAAYC,EAAS,CACnB,KAAK,WAAa,EAClB,KAAK,SAAW,KAAK,GAAK,EAC1B,KAAK,aAAe,EACpB,KAAK,cAAgB,GACrB,KAAK,SAAW,GAChB,KAAK,QAAU,GACf,KAAK,cAAgB,GACrB,KAAK,SAAW,GAChB,KAAK,OAAS,IAAIC,EAClB,KAAK,SAAW,IAAIA,EACpB,KAAK,WAAa,IAAIA,EACtB,KAAK,SAAW,IAAIA,EACpB,KAAK,eAAiBC,EACtB,KAAK,YAAc,GACnB,KAAK,QAAUF,EAAQ,aACzB,CACA,YAAYG,EAAS,CACnB,KAAK,OAAO,CACd,CACA,aAAc,CACZ,OAAO,KAAK,SAAW,KAAK,aAAe,KAAK,IAClD,CACA,kBAAmB,CACjB,OAAO,KAAK,cAAgB,OAAS,MACvC,CACA,QAAS,CACP,IAAMC,EAAO,KAAK,aAAa,EAC/B,KAAK,aAAe,GACpB,KAAK,iBAAmB,aAAeC,GAAG,EAAE,SAAS,EACrD,KAAK,aAAe,QAAQ,KAAK,gBAAgB,IAC7C,KAAK,QACH,KAAK,YACP,KAAK,gBAAgB,GAErB,KAAK,cAAc,EACnB,KAAK,YAAc,IAGrB,KAAK,KAAOD,EAAK,WAAW,KAAK,UAAU,EAAE,SAAS,KAAK,QAAQ,EAAE,CAEzE,CACA,cAAe,CACb,IAAIE,EAAc,KAAK,YACvB,OAAI,KAAK,eAAiB,KAAK,cAAgB,IAC7CA,EAAc,KAAK,YAAc,KAAK,MAAQ,KAAK,KAE9CC,GAAI,EAAE,YAAY,KAAK,WAAW,EAAE,YAAYD,CAAW,EAAE,aAAa,KAAK,YAAY,CACpG,CACA,eAAgB,CACd,IAAME,EAAOC,EAAO,KAAK,OAAO,EAAE,UAAU,MAAM,EAAE,KAAK,CAAC,CACxD,WAAY,KAAK,WACjB,SAAU,KAAK,QACjB,CAAC,CAAC,EACIL,EAAO,KAAK,aAAa,EAC/BI,EAAK,WAAW,EAAE,UAAU,IAAK,SAAUE,EAAG,CAC5C,KAAK,SAAW,KAAK,UAAYA,EACjC,IAAMC,EAAU,OAAO,OAAO,CAAC,EAAGD,CAAC,EACnCC,EAAQ,SAAWA,EAAQ,WAC3B,IAAMC,EAAeC,GAAYF,EAASA,CAAO,EACjD,YAAK,SAAWC,EAAa,CAAC,EACvB,SAAUE,EAAG,CAClB,OAAOV,EAAKQ,EAAaE,CAAC,CAAC,CAC7B,CACF,CAAC,EAAE,WAAW,EAAE,SAAS,GAAG,EAAE,UAAU,IAAK,SAAUJ,EAAG,CACxD,KAAK,SAAW,KAAK,UAAYA,EACjC,IAAME,EAAeC,GAAY,KAAK,SAAUH,CAAC,EACjD,YAAK,SAAWE,EAAa,CAAC,EACvB,SAAUE,EAAG,CAClB,OAAOV,EAAKQ,EAAaE,CAAC,CAAC,CAC7B,CACF,CAAC,CACH,CACA,iBAAkB,CAChB,IAAMN,EAAOC,EAAO,KAAK,OAAO,EAAE,UAAU,MAAM,EAAE,KAAK,CAAC,CACxD,WAAY,KAAK,WACjB,SAAU,KAAK,QACjB,CAAC,CAAC,EACIL,EAAO,KAAK,aAAa,EAC/BI,EAAK,WAAW,EAAE,SAAS,GAAG,EAAE,UAAU,IAAK,SAAUE,EAAG,CAC1D,KAAK,SAAW,KAAK,UAAYA,EACjC,IAAME,EAAeC,GAAY,KAAK,SAAUH,CAAC,EACjD,YAAK,SAAWE,EAAa,CAAC,EACvB,SAAUE,EAAG,CAClB,OAAOV,EAAKQ,EAAaE,CAAC,CAAC,CAC7B,CACF,CAAC,CACH,CACA,SAAU,CACR,aAAa,KAAK,QAAQ,EAC1B,KAAK,SAAW,WAAW,IAAM,KAAK,OAAO,KAAK,KAAK,IAAI,EAAG,GAAG,CACnE,CACA,WAAWC,EAAO,CAChBA,EAAM,eAAe,EACrBA,EAAM,gBAAgB,EACtB,aAAa,KAAK,QAAQ,EAC1B,KAAK,SAAS,KAAK,CACjB,KAAM,KAAK,KACX,YAAaA,CACf,CAAC,CACH,CACA,MAAO,CACL,KAAK,UAAO,SAAiCC,EAAmB,CAC9D,OAAO,IAAKA,GAAqBjB,GAAoBkB,EAAqBC,EAAU,CAAC,CACvF,CACF,CACA,MAAO,CACL,KAAK,UAAyBC,EAAkB,CAC9C,KAAMpB,EACN,UAAW,CAAC,CAAC,IAAK,qBAAsB,EAAE,CAAC,EAC3C,OAAQ,CACN,KAAM,OACN,WAAY,aACZ,SAAU,WACV,YAAa,cACb,YAAa,cACb,aAAc,eACd,MAAO,QACP,IAAK,MACL,KAAM,OACN,cAAe,gBACf,SAAU,WACV,QAAS,UACT,cAAe,gBACf,SAAU,UACZ,EACA,QAAS,CACP,OAAQ,SACR,SAAU,WACV,WAAY,aACZ,SAAU,UACZ,EACA,WAAY,GACZ,SAAU,CAAIqB,CAAoB,EAClC,MAAOC,GACP,MAAO,EACP,KAAM,EACN,OAAQ,CAAC,CAAC,EAAG,WAAW,EAAG,CAAC,EAAG,MAAM,EAAG,CAAC,EAAG,MAAO,EAAG,QAAS,WAAY,aAAc,YAAY,EAAG,CAAC,iCAAkC,GAAI,EAAG,QAAS,OAAQ,cAAc,CAAC,EAClL,SAAU,SAAkCC,EAAIC,EAAK,CAC/CD,EAAK,IACJE,EAAe,EACfC,EAAe,EAAG,IAAK,CAAC,EACxBC,EAAW,EAAGC,GAAsC,EAAG,EAAG,OAAQ,CAAC,EACnEF,EAAe,EAAG,OAAQ,CAAC,EAC3BG,EAAW,QAAS,UAA0D,CAC/E,OAAOL,EAAI,QAAQ,CACrB,CAAC,EAAE,WAAY,SAA2DM,EAAQ,CAChF,OAAON,EAAI,WAAWM,CAAM,CAC9B,CAAC,EAAE,aAAc,UAA+D,CAC9E,OAAON,EAAI,SAAS,KAAKA,EAAI,IAAI,CACnC,CAAC,EAAE,aAAc,UAA+D,CAC9E,OAAOA,EAAI,WAAW,KAAKA,EAAI,IAAI,CACrC,CAAC,EACEO,EAAa,EAAE,GAEhBR,EAAK,IACJS,EAAU,EACVC,EAAW,OAAQT,EAAI,QAAQ,EAC/BQ,EAAU,EACVE,GAAY,iBAAkBV,EAAI,iBAAiB,CAAC,EACpDW,GAAY,SAAUX,EAAI,QAAQ,EAClCY,EAAY,IAAKZ,EAAI,IAAI,EAAE,OAAQA,EAAI,YAAY,CAAC,EAE3D,EACA,aAAc,CAAIa,EAAMC,EAA0B,EAClD,cAAe,EACf,gBAAiB,CACnB,CAAC,CACH,CACF,CACA,OAAOtC,CACT,GAAG,EAICuC,IAAmC,IAAM,CAC3C,MAAMA,CAAmB,CACvB,aAAc,CACZ,KAAK,OAAS,CAAC,EACf,KAAK,YAAc,GACnB,KAAK,YAAc,GACnB,KAAK,WAAa,GAClB,KAAK,eAAiB,GACtB,KAAK,gBAAkB,GACvB,KAAK,WAAa,GAClB,KAAK,OAAS,IAAIrC,EAClB,KAAK,SAAW,IAAIA,EACpB,KAAK,WAAa,IAAIA,EACtB,KAAK,SAAW,IAAIA,EACpB,KAAK,eAAiBsC,EACtB,KAAK,WAAaC,EACpB,CACA,YAAYrC,EAAS,CACnB,KAAK,OAAO,CACd,CACA,QAAS,CAEP,IAAMsC,EADeC,GAAI,EAAE,MAAMhC,GAAKA,EAAE,KAAK,EAAE,KAAK,IAAI,EAC3B,KAAK,MAAM,EACxC,KAAK,IAAMiC,GAAIF,EAAS/B,GACfA,EAAE,KACV,EACD,KAAK,KAAO,KAAK,wBAAwB+B,CAAO,EAChD,KAAK,YAAc,KAAK,aAAe,KAAK,kBAC9C,CACA,SAAS/B,EAAG,CACV,OAAOA,EAAE,YAAcA,EAAE,SAAWA,EAAE,YAAc,CACtD,CACA,UAAW,CAET,OAAOH,GAAI,EAAE,YAAY,KAAK,YAAc,GAAM,EAAE,YAAY,KAAK,YAAc,GAAM,CAC3F,CACA,wBAAwBqC,EAAS,CAG/B,IAAMC,EAAiBD,EACvBC,EAAe,QAAQnC,GAAK,CAC1BA,EAAE,IAAM,KAAK,SAAS,EAAE,SAASA,CAAC,EAClCA,EAAE,IAAI,CAAC,EAAI,IAAS,KAAK,aAAe,KAAK,SAASA,CAAC,EAAI,KAAK,GAAK,EAAI,GAC3E,CAAC,EACD,QAASoC,EAAI,EAAGA,EAAID,EAAe,OAAS,EAAGC,IAAK,CAClD,IAAMC,EAAIF,EAAeC,CAAC,EAC1B,GAAK,KAAK,aAAaC,CAAC,EAGxB,QAASC,EAAIF,EAAI,EAAGE,EAAIH,EAAe,OAAQG,IAAK,CAClD,IAAMC,EAAIJ,EAAeG,CAAC,EAC1B,GAAK,KAAK,aAAaC,CAAC,GAIpBA,EAAE,IAAI,CAAC,EAAIF,EAAE,IAAI,CAAC,EAAI,EAAG,CAE3B,IAAMG,EAAI,GAAc,KAAK,IAAID,EAAE,IAAI,CAAC,EAAIF,EAAE,IAAI,CAAC,CAAC,EAChDG,EAAI,IAEND,EAAE,IAAI,CAAC,GAAK,KAAK,KAAKA,EAAE,IAAI,CAAC,CAAC,EAAIC,EAEtC,CACF,CACF,CACA,OAAOL,CACT,CACA,aAAaM,EAAO,CAClB,OAAO,KAAK,YAAcA,EAAM,SAAWA,EAAM,WAAa,KAAK,GAAK,EAC1E,CACA,gBAAgBJ,EAAG,CACjB,OAAO,KAAK,gBAAkB,OAAY,KAAK,YAAYA,CAAC,CAC9D,CACA,UAAUI,EAAO,CACf,OAAI,KAAK,gBACA,KAAK,gBAAgBA,EAAM,KAAK,IAAI,EAEtC,KAAK,MAAMA,CAAK,CACzB,CACA,MAAMA,EAAO,CACX,OAAOC,GAAYD,EAAM,KAAK,IAAI,CACpC,CACA,mBAAmBA,EAAO,CACxB,IAAME,EAAQ,KAAK,MAAMF,CAAK,EACxBG,EAAMF,GAAYD,EAAM,KAAK,KAAK,EACxC,MAAO;AAAA,oCACuBI,GAAYF,CAAK,CAAC;AAAA,kCACpBC,CAAG;AAAA,KAEjC,CACA,MAAMH,EAAO,CACX,OAAO,KAAK,OAAO,SAAS,KAAK,MAAMA,CAAK,CAAC,CAC/C,CACA,QAAQK,EAAOC,EAAM,CACnB,OAAOA,EAAK,KAAK,IACnB,CACA,QAAQC,EAAM,CACZ,KAAK,OAAO,KAAKA,CAAI,CACvB,CACA,SAASC,EAAO,CACd,OAAK,KAAK,cACG,KAAK,cAAc,KAAKjD,GAC5BiD,EAAM,OAASjD,EAAE,MAAQiD,EAAM,SAAWjD,EAAE,MACpD,IACe,OAJgB,EAKlC,CACA,MAAO,CACL,KAAK,UAAO,SAAoCM,EAAmB,CACjE,OAAO,IAAKA,GAAqBsB,EACnC,CACF,CACA,MAAO,CACL,KAAK,UAAyBnB,EAAkB,CAC9C,KAAMmB,EACN,UAAW,CAAC,CAAC,IAAK,wBAAyB,EAAE,CAAC,EAC9C,OAAQ,CACN,OAAQ,SACR,OAAQ,SACR,KAAM,OACN,YAAa,cACb,YAAa,cACb,cAAe,gBACf,WAAY,aACZ,SAAU,WACV,cAAe,gBACf,gBAAiB,kBACjB,WAAY,aACZ,eAAgB,iBAChB,YAAa,cACb,gBAAiB,kBACjB,gBAAiB,kBACjB,WAAY,YACd,EACA,QAAS,CACP,OAAQ,SACR,SAAU,WACV,WAAY,aACZ,SAAU,UACZ,EACA,WAAY,GACZ,SAAU,CAAIlB,CAAoB,EAClC,MAAOwC,GACP,MAAO,EACP,KAAM,EACN,OAAQ,CAAC,CAAC,EAAG,QAAS,UAAW,cAAc,EAAG,CAAC,uBAAwB,GAAI,EAAG,OAAQ,SAAU,QAAS,QAAS,YAAa,gBAAiB,MAAO,QAAS,gBAAiB,aAAc,EAAG,MAAM,EAAG,CAAC,qBAAsB,GAAI,cAAe,GAAI,EAAG,SAAU,WAAY,aAAc,WAAY,aAAc,WAAY,cAAe,cAAe,OAAQ,QAAS,WAAY,OAAQ,MAAO,gBAAiB,WAAY,UAAW,kBAAmB,mBAAoB,cAAe,eAAgB,kBAAmB,gBAAgB,EAAG,CAAC,uBAAwB,GAAI,EAAG,OAAQ,SAAU,QAAS,QAAS,YAAa,gBAAiB,MAAO,QAAS,gBAAiB,YAAY,CAAC,EACxrB,SAAU,SAAqCtC,EAAIC,EAAK,CAClDD,EAAK,GACJI,EAAW,EAAGmC,GAAsC,EAAG,GAAI,IAAK,CAAC,EAElEvC,EAAK,GACJU,EAAW,UAAWT,EAAI,IAAI,EAAE,eAAgBA,EAAI,OAAO,CAElE,EACA,aAAc,CAAIuC,GAAY1B,EAAM2B,GAAkBC,GAAmBjE,EAAe,EACxF,cAAe,EACf,gBAAiB,CACnB,CAAC,CACH,CACF,CACA,OAAOuC,CACT,GAAG,EA2KH,IAAI2B,IAAkC,IAAM,CAC1C,MAAMA,UAA0BC,EAAmB,CACjD,aAAc,CACZ,MAAM,GAAG,SAAS,EAClB,KAAK,OAAS,GACd,KAAK,OAAS,GACd,KAAK,YAAc,SACnB,KAAK,eAAiBC,GAAe,MACrC,KAAK,cAAgB,GACrB,KAAK,SAAW,GAChB,KAAK,SAAW,IAChB,KAAK,cAAgB,CAAC,EACtB,KAAK,gBAAkB,GACvB,KAAK,WAAa,GAClB,KAAK,eAAiB,GACtB,KAAK,SAAW,IAAIC,EACpB,KAAK,OAAS,IAAIA,EAClB,KAAK,SAAW,IAAIA,EACpB,KAAK,WAAa,IAAIA,CACxB,CACA,QAAS,CACP,MAAM,OAAO,EACT,KAAK,QAAU,KAAK,wBAAwB,EAC9C,KAAK,QAAU,CAAC,GAAI,GAAI,GAAI,EAAE,EACrB,CAAC,KAAK,QAAU,KAAK,wBAAwB,IAEtD,KAAK,QAAU,CAAC,GAAI,GAAI,GAAI,EAAE,GAEhC,KAAK,KAAOC,GAAwB,CAClC,MAAO,KAAK,MACZ,OAAQ,KAAK,OACb,QAAS,KAAK,QACd,WAAY,KAAK,OACjB,eAAgB,KAAK,cACvB,CAAC,EACD,KAAK,YAAY,EACjB,IAAMC,EAAU,KAAK,QAAQ,CAAC,EAAI,KAAK,KAAK,MAAQ,EAC9CC,EAAU,KAAK,QAAQ,CAAC,EAAI,KAAK,KAAK,OAAS,EACrD,KAAK,YAAc,aAAaD,CAAO,KAAKC,CAAO,IACnD,KAAK,YAAc,KAAK,IAAI,KAAK,KAAK,MAAO,KAAK,KAAK,MAAM,EACzD,KAAK,OAEP,KAAK,aAAe,EAEpB,KAAK,aAAe,EAEtB,KAAK,YAAc,EACf,KAAK,WACP,KAAK,YAAc,KAAK,aAAe,EAAI,KAAK,WAElD,KAAK,OAAS,KAAK,UAAU,EAE7B,KAAK,KAAO,KAAK,QAAQ,KAAK,CAACC,EAAGC,IACzB,KAAK,OAAO,QAAQD,EAAE,IAAI,EAAI,KAAK,OAAO,QAAQC,EAAE,IAAI,CAChE,EACD,KAAK,UAAU,EACf,KAAK,cAAgB,KAAK,iBAAiB,CAC7C,CACA,WAAY,CACV,OAAO,KAAK,QAAQ,IAAIC,GAAKA,EAAE,KAAK,CACtC,CACA,QAAQC,EAAM,CACZ,KAAK,OAAO,KAAKA,CAAI,CACvB,CACA,WAAY,CACV,KAAK,OAAS,IAAIC,GAAY,KAAK,OAAQC,EAAU,QAAS,KAAK,OAAQ,KAAK,YAAY,CAC9F,CACA,kBAAmB,CACjB,MAAO,CACL,UAAWA,EAAU,QACrB,OAAQ,KAAK,OACb,OAAQ,KAAK,OACb,MAAO,KAAK,YACZ,SAAU,KAAK,cACjB,CACF,CACA,WAAWC,EAAMC,EAAa,GAAO,CACnCD,EAAO,KAAK,QAAQ,KAAKJ,GACnBK,EACKL,EAAE,QAAUI,EAAK,KAEjBJ,EAAE,OAASI,EAAK,IAE1B,EAIG,EAHQ,KAAK,cAAc,UAAUJ,GAChCA,EAAE,OAASI,EAAK,MAAQJ,EAAE,QAAUI,EAAK,OAASJ,EAAE,SAAWI,EAAK,MAC5E,EACS,MAGV,KAAK,cAAgB,CAACA,EAAM,GAAG,KAAK,aAAa,EACjD,KAAK,SAAS,KAAK,CACjB,MAAOA,EACP,QAAS,KAAK,aAChB,CAAC,EACH,CACA,aAAaA,EAAMC,EAAa,GAAO,CACrCD,EAAO,KAAK,QAAQ,KAAKJ,GACnBK,EACKL,EAAE,QAAUI,EAAK,KAEjBJ,EAAE,OAASI,EAAK,IAE1B,EACD,IAAME,EAAM,KAAK,cAAc,UAAUN,GAChCA,EAAE,OAASI,EAAK,MAAQJ,EAAE,QAAUI,EAAK,OAASJ,EAAE,SAAWI,EAAK,MAC5E,EACD,KAAK,cAAc,OAAOE,EAAK,CAAC,EAChC,KAAK,cAAgB,CAAC,GAAG,KAAK,aAAa,EAC3C,KAAK,WAAW,KAAK,CACnB,MAAOF,EACP,QAAS,KAAK,aAChB,CAAC,CACH,CACA,yBAA0B,CACxB,MAAO,CAAC,KAAK,SAAW,KAAK,QAAQ,QAAU,CACjD,CACA,MAAO,CACL,KAAK,WAAuB,IAAM,CAChC,IAAIG,EACJ,OAAO,SAAmCC,EAAmB,CAC3D,OAAQD,IAAmCA,EAAoCE,GAAsBlB,CAAiB,IAAIiB,GAAqBjB,CAAiB,CAClK,CACF,GAAG,CACL,CACA,MAAO,CACL,KAAK,UAAyBmB,EAAkB,CAC9C,KAAMnB,EACN,UAAW,CAAC,CAAC,sBAAsB,CAAC,EACpC,eAAgB,SAA0CoB,EAAIC,EAAKC,EAAU,CAI3E,GAHIF,EAAK,GACJG,GAAeD,EAAUE,GAAM,CAAC,EAEjCJ,EAAK,EAAG,CACV,IAAIK,EACDC,GAAeD,EAAQE,GAAY,CAAC,IAAMN,EAAI,gBAAkBI,EAAG,MACxE,CACF,EACA,OAAQ,CACN,OAAQ,SACR,OAAQ,SACR,YAAa,cACb,eAAgB,iBAChB,cAAe,gBACf,SAAU,WACV,SAAU,WACV,SAAU,WACV,cAAe,gBACf,gBAAiB,kBACjB,gBAAiB,kBACjB,WAAY,aACZ,eAAgB,iBAChB,YAAa,cACb,QAAS,SACX,EACA,QAAS,CACP,SAAU,WACV,OAAQ,SACR,SAAU,WACV,WAAY,YACd,EACA,WAAY,GACZ,SAAU,CAAIG,EAA0B,EACxC,MAAO,EACP,KAAM,GACN,OAAQ,CAAC,CAAC,EAAG,sBAAuB,wBAAyB,mBAAoB,OAAQ,aAAc,gBAAiB,gBAAiB,YAAY,EAAG,CAAC,EAAG,YAAa,OAAO,EAAG,CAAC,wBAAyB,GAAI,EAAG,WAAY,SAAU,WAAY,aAAc,SAAU,SAAU,aAAc,kBAAmB,aAAc,iBAAkB,gBAAiB,cAAe,cAAe,gBAAiB,WAAY,aAAc,kBAAmB,kBAAmB,aAAa,CAAC,EACve,SAAU,SAAoCR,EAAIC,EAAK,CACjDD,EAAK,IACJS,EAAe,EAAG,mBAAoB,CAAC,EACvCC,EAAW,sBAAuB,SAAoFC,EAAQ,CAC/H,OAAOV,EAAI,WAAWU,EAAQ,EAAI,CACpC,CAAC,EAAE,wBAAyB,SAAsFA,EAAQ,CACxH,OAAOV,EAAI,aAAaU,EAAQ,EAAI,CACtC,CAAC,EAAE,mBAAoB,SAAiFA,EAAQ,CAC9G,OAAOV,EAAI,QAAQU,CAAM,CAC3B,CAAC,EACEC,EAAe,EACfH,EAAe,EAAG,IAAK,CAAC,EAAE,EAAG,IAAK,CAAC,EACnCC,EAAW,WAAY,SAA0DC,EAAQ,CAC1F,OAAOV,EAAI,SAAS,KAAKU,CAAM,CACjC,CAAC,EAAE,SAAU,SAAwDA,EAAQ,CAC3E,OAAOV,EAAI,QAAQU,CAAM,CAC3B,CAAC,EAAE,WAAY,SAA0DA,EAAQ,CAC/E,OAAOV,EAAI,WAAWU,CAAM,CAC9B,CAAC,EAAE,aAAc,SAA4DA,EAAQ,CACnF,OAAOV,EAAI,aAAaU,CAAM,CAChC,CAAC,EACEE,EAAa,EAAE,EAAE,GAElBb,EAAK,IACJc,EAAW,OAAWC,GAAgB,GAAIC,GAAMf,EAAI,MAAOA,EAAI,MAAM,CAAC,EAAE,aAAcA,EAAI,MAAM,EAAE,gBAAiBA,EAAI,aAAa,EAAE,gBAAiBA,EAAI,aAAa,EAAE,aAAcA,EAAI,UAAU,EACtMgB,EAAU,EACVC,EAAY,YAAajB,EAAI,WAAW,EACxCgB,EAAU,EACVH,EAAW,SAAUb,EAAI,MAAM,EAAE,SAAUA,EAAI,IAAI,EAAE,aAAcA,EAAI,MAAM,EAAE,kBAAmBA,EAAI,eAAe,EAAE,aAAcA,EAAI,UAAU,EAAE,iBAAkBA,EAAI,cAAc,EAAE,gBAAiBA,EAAI,aAAa,EAAE,cAAeA,EAAI,WAAW,EAAE,cAAeA,EAAI,WAAW,EAAE,gBAAiBA,EAAI,aAAa,EAAE,WAAYA,EAAI,QAAQ,EAAE,aAAcA,EAAI,UAAU,EAAE,kBAAmBA,EAAI,eAAe,EAAE,kBAAmBA,EAAI,eAAe,EAAE,cAAeA,EAAI,WAAW,EAEhf,EACA,aAAc,CAACkB,GAAgBC,EAAkB,EACjD,OAAQ,CAACC,GAAMC,EAAI,EACnB,cAAe,EACf,gBAAiB,CACnB,CAAC,CACH,CACF,CACA,OAAO1C,CACT,GAAG,EAiWH,IAAI2C,IAA+B,IAAM,CACvC,MAAMA,CAAe,CACnB,MAAO,CACL,KAAK,UAAO,SAAgCC,EAAmB,CAC7D,OAAO,IAAKA,GAAqBD,EACnC,CACF,CACA,MAAO,CACL,KAAK,UAAyBE,GAAiB,CAC7C,KAAMF,CACR,CAAC,CACH,CACA,MAAO,CACL,KAAK,UAAyBG,GAAiB,CAC7C,QAAS,CAACC,EAAiB,CAC7B,CAAC,CACH,CACF,CACA,OAAOJ,CACT,GAAG,EAICK,IAAiC,IAAM,CACzC,MAAMA,CAAiB,CACrB,MAAO,CACL,KAAK,UAAO,SAAkCJ,EAAmB,CAC/D,OAAO,IAAKA,GAAqBI,EACnC,CACF,CACA,MAAO,CACL,KAAK,UAAyBH,GAAiB,CAC7C,KAAMG,CACR,CAAC,CACH,CACA,MAAO,CACL,KAAK,UAAyBF,GAAiB,CAC7C,QAAS,CAACC,GAAmBJ,GAAgBM,EAAe,CAC9D,CAAC,CACH,CACF,CACA,OAAOD,CACT,GAAG,EAglBH,IAAIE,IAAiC,IAAM,CACzC,MAAMA,CAAiB,CACrB,MAAO,CACL,KAAK,UAAO,SAAkCC,EAAmB,CAC/D,OAAO,IAAKA,GAAqBD,EACnC,CACF,CACA,MAAO,CACL,KAAK,UAAyBE,GAAiB,CAC7C,KAAMF,CACR,CAAC,CACH,CACA,MAAO,CACL,KAAK,UAAyBG,GAAiB,CAC7C,QAAS,CAACC,EAAiB,CAC7B,CAAC,CACH,CACF,CACA,OAAOJ,CACT,GAAG,EAkVH,IAAIK,IAA8B,IAAM,CACtC,MAAMA,CAAc,CAClB,MAAO,CACL,KAAK,UAAO,SAA+BC,EAAmB,CAC5D,OAAO,IAAKA,GAAqBD,EACnC,CACF,CACA,MAAO,CACL,KAAK,UAAyBE,GAAiB,CAC7C,KAAMF,CACR,CAAC,CACH,CACA,MAAO,CACL,KAAK,UAAyBG,GAAiB,CAC7C,QAAS,CAACC,EAAiB,CAC7B,CAAC,CACH,CACF,CACA,OAAOJ,CACT,GAAG,EAq9BH,IAAIK,IAA4B,IAAM,CACpC,MAAMA,CAAY,CAChB,MAAO,CACL,KAAK,UAAO,SAA6BC,EAAmB,CAC1D,OAAO,IAAKA,GAAqBD,EACnC,CACF,CACA,MAAO,CACL,KAAK,UAAyBE,GAAiB,CAC7C,KAAMF,CACR,CAAC,CACH,CACA,MAAO,CACL,KAAK,UAAyBG,GAAiB,CAC7C,QAAS,CAACC,GAAmBC,GAAgBC,EAAc,CAC7D,CAAC,CACH,CACF,CACA,OAAON,CACT,GAAG,EAMH,SAASO,IAAqB,CAGxB,OAAO,WAAe,KAAe,OAAO,WAAW,UAAU,SAAa,MAChF,WAAW,UAAU,SAAW,eAAe,UAAU,SAE7D,CAmLA,IAAIC,IAA6B,IAAM,CACrC,MAAMA,CAAa,CACjB,MAAO,CACL,KAAK,UAAO,SAA8BC,EAAmB,CAC3D,OAAO,IAAKA,GAAqBD,EACnC,CACF,CACA,MAAO,CACL,KAAK,UAAyBE,GAAiB,CAC7C,KAAMF,CACR,CAAC,CACH,CACA,MAAO,CACL,KAAK,UAAyBG,GAAiB,CAC7C,QAAS,CAACC,EAAiB,CAC7B,CAAC,CACH,CACF,CACA,OAAOJ,CACT,GAAG,EAICK,IAAgC,IAAM,CACxC,MAAMA,CAAgB,CACpB,aAAc,CACZC,GAAmB,CACrB,CACA,MAAO,CACL,KAAK,UAAO,SAAiCL,EAAmB,CAC9D,OAAO,IAAKA,GAAqBI,EACnC,CACF,CACA,MAAO,CACL,KAAK,UAAyBH,GAAiB,CAC7C,KAAMG,CACR,CAAC,CACH,CACA,MAAO,CACL,KAAK,UAAyBF,GAAiB,CAC7C,QAAS,CAACC,GAAmBG,GAAiBC,GAAgBC,GAAgBC,GAAmBC,GAAeX,GAAcY,GAAiBC,GAAkBC,GAAkBC,GAAgBC,GAAeC,EAAW,CAC/N,CAAC,CACH,CACF,CACA,OAAOZ,CACT,GAAG","names":["nonpassivecapture","noevent_default","event","nodrag_default","view","root","selection","select_default","noevent_default","nonpassivecapture","yesdrag","noclick","constant_default","x","BrushEvent","type","sourceEvent","target","selection","mode","dispatch","nopropagation","event","noevent_default","MODE_DRAG","MODE_SPACE","MODE_HANDLE","MODE_CENTER","abs","max","min","number1","e","number2","X","type","x","xy","Y","y","XY","cursors","flipX","flipY","signsX","signsY","t","defaultFilter","event","defaultExtent","svg","defaultTouchable","local","node","empty","extent","brushX","brush","X","brush","dim","extent","defaultExtent","filter","defaultFilter","touchable","defaultTouchable","keys","listeners","dispatch_default","handleSize","touchending","group","overlay","initialize","type","cursors","local","select_default","handle","d","redraw","started","touchmoved","touchended","selection","event","emitter","that","state","emit","selection0","selection1","i","value_default","tween","t","args","interrupt_default","clean","Emitter","mode","BrushEvent","MODE_DRAG","MODE_CENTER","MODE_HANDLE","signX","Y","signsX","signY","X","signsY","W","w0","w1","N","n0","n1","E","e0","e1","S","s0","s1","dx","dy","moving","shifting","lockX","lockY","points","pointer_default","pts","min","max","move","moved","ended","view","keydowned","keyupped","nodrag_default","p","point","abs","noevent_default","point0","MODE_SPACE","flipX","flipY","nopropagation","yesdrag","empty","number2","_","constant_default","value","_c0","_c1","a0","TooltipContentComponent_span_4_ng_template_1_Template","rf","ctx","TooltipContentComponent_span_4_Template","ɵɵelementStart","ɵɵtemplate","ɵɵelementEnd","ctx_r0","ɵɵnextContext","ɵɵadvance","ɵɵproperty","ɵɵpureFunction1","TooltipContentComponent_span_5_Template","ɵɵelement","ɵɵsanitizeHtml","LegendComponent_header_1_Template","ɵɵtext","ɵɵtextInterpolate","LegendComponent_li_4_Template","_r2","ɵɵgetCurrentView","ɵɵlistener","$event","ɵɵrestoreView","ɵɵresetView","entry_r3","_c2","ChartComponent_ngx_charts_scale_legend_3_Template","ChartComponent_ngx_charts_legend_4_Template","_c3","_c4","_c5","XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_container_4_Template","ɵɵnamespaceSVG","ɵɵelementContainer","XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0__svg_tspan_1_Template","tickLine_r1","i_r2","ɵɵattribute","ɵɵtextInterpolate1","XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0_Template","ɵɵelementContainerStart","ɵɵelementContainerEnd","tickLines_r3","XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5_Template","tick_r4","ctx_r4","XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_7_Template","tickFormatted_r6","XAxisTicksComponent__svg_g_2__svg_ng_container_1_Template","ɵɵtemplateRefExtractor","tmplMultilineTick_r7","ɵɵreference","tmplSinglelineTick_r8","XAxisTicksComponent__svg_g_2_Template","XAxisTicksComponent__svg_g_3__svg_g_1_Template","XAxisTicksComponent__svg_g_3_Template","tick_r9","_c6","XAxisComponent__svg_g_1_Template","_r1","ctx_r1","XAxisComponent__svg_g_2_Template","_c7","YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_container_4_Template","YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0__svg_ng_container_1__svg_tspan_1_Template","ctx_r2","YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0__svg_ng_container_1_Template","tickLines_r4","YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0_Template","tmplSinglelineTick_r5","YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5_Template","tick_r6","YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_7_Template","tickFormatted_r7","YAxisTicksComponent__svg_g_2__svg_ng_container_1_Template","tmplMultilineTick_r8","ɵɵstyleProp","YAxisTicksComponent__svg_g_2_Template","YAxisTicksComponent__svg_path_3_Template","YAxisTicksComponent__svg_g_4__svg_g_1__svg_line_1_Template","YAxisTicksComponent__svg_g_4__svg_g_1__svg_line_2_Template","YAxisTicksComponent__svg_g_4__svg_g_1_Template","YAxisTicksComponent__svg_g_4_Template","YAxisTicksComponent__svg_g_5__svg_g_1__svg_g_2_Template","refLine_r10","YAxisTicksComponent__svg_g_5__svg_g_1_Template","YAxisTicksComponent__svg_g_5_Template","_c8","YAxisComponent__svg_g_1_Template","YAxisComponent__svg_g_2_Template","_c9","_c10","SvgLinearGradientComponent__svg_stop_1_Template","stop_r1","_c11","_c12","CircleSeriesComponent__svg_g_0__svg_rect_3_Template","CircleSeriesComponent__svg_g_0__svg_rect_4_Template","CircleSeriesComponent__svg_g_0_Template","ɵɵclassProp","_c15","SvgRadialGradientComponent__svg_stop_1_Template","rf","ctx","ɵɵnamespaceSVG","ɵɵelement","stop_r1","ɵɵstyleProp","ɵɵattribute","_c16","AreaComponent__svg_defs_0_Template","ɵɵelementStart","ɵɵelementEnd","ctx_r0","ɵɵnextContext","ɵɵadvance","ɵɵproperty","_c18","_c19","TooltipArea__svg_ng_template_2_div_1_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","tooltipItem_r2","ctx_r2","ɵɵnextContext","ɵɵadvance","ɵɵstyleProp","ɵɵtextInterpolate1","TooltipArea__svg_ng_template_2_Template","ɵɵtemplate","model_r4","ɵɵproperty","_c20","_c22","_c23","_c24","a0","a1","_c25","_c26","BarComponent__svg_defs_0_Template","rf","ctx","ɵɵnamespaceSVG","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ctx_r0","ɵɵnextContext","ɵɵadvance","ɵɵproperty","_c27","_c28","SeriesHorizontal__svg_g_0_Template","_r1","ɵɵgetCurrentView","ɵɵlistener","$event","ɵɵrestoreView","ctx_r1","ɵɵresetView","bar_r3","SeriesHorizontal__svg_g_1__svg_g_1_Template","_r4","i_r5","b_r6","SeriesHorizontal__svg_g_1_Template","ɵɵtemplate","BarHorizontalComponent__svg_g_2_Template","BarHorizontalComponent__svg_g_3_Template","_r3","BarHorizontalNormalizedComponent__svg_g_2_Template","rf","ctx","_r1","ɵɵgetCurrentView","ɵɵnamespaceSVG","ɵɵelementStart","ɵɵlistener","$event","ɵɵrestoreView","ctx_r1","ɵɵnextContext","ɵɵresetView","ɵɵelementEnd","ɵɵproperty","BarHorizontalNormalizedComponent__svg_g_3_Template","_r3","BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template","_r4","group_r5","ɵɵattribute","ɵɵadvance","BarHorizontalNormalizedComponent__svg_g_4_Template","ɵɵtemplate","BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template","_r6","group_r7","BarHorizontalNormalizedComponent__svg_g_5_Template","BarHorizontalStackedComponent__svg_g_2_Template","BarHorizontalStackedComponent__svg_g_3_Template","BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template","index_r6","BarHorizontalStackedComponent__svg_g_4_Template","BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template","_r7","group_r8","index_r9","BarHorizontalStackedComponent__svg_g_5_Template","_c29","SeriesVerticalComponent__svg_g_0__svg_g_1_Template","bar_r3","SeriesVerticalComponent__svg_g_0_Template","SeriesVerticalComponent__svg_g_1__svg_g_1_Template","bar_r5","SeriesVerticalComponent__svg_g_1_Template","SeriesVerticalComponent__svg_g_2__svg_g_1_Template","i_r7","b_r8","SeriesVerticalComponent__svg_g_2_Template","BarVerticalComponent__svg_g_2_Template","BarVerticalComponent__svg_g_3_Template","_c36","LineComponent__svg_g_0_Template","rf","ctx","ɵɵnamespaceSVG","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ctx_r0","ɵɵnextContext","ɵɵadvance","ɵɵproperty","ɵɵattribute","LineComponent__svg_g_1_Template","_c37","LineSeriesComponent__svg_g_2_Template","LineSeriesComponent__svg_g_5_Template","ɵɵclassProp","LineChartComponent__svg_g_5_Template","_r1","ɵɵgetCurrentView","ɵɵlistener","$event","ɵɵrestoreView","ctx_r1","ɵɵresetView","LineChartComponent__svg_g_6_Template","_r3","LineChartComponent__svg_g_8__svg_g_1_Template","series_r4","LineChartComponent__svg_g_8_Template","ɵɵtemplate","LineChartComponent__svg_g_9__svg_g_1_Template","series_r5","LineChartComponent__svg_g_9_Template","LineChartComponent__svg_g_10__svg_g_2_Template","_r7","series_r8","LineChartComponent__svg_g_10_Template","_r6","LineChartComponent__svg_g_11__svg_g_1_Template","series_r10","LineChartComponent__svg_g_11_Template","_r9","ɵɵpureFunction2","_c24","_c38","_c40","PieArcComponent__svg_defs_1_Template","rf","ctx","ɵɵnamespaceSVG","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ctx_r0","ɵɵnextContext","ɵɵadvance","ɵɵproperty","_c41","PieSeriesComponent__svg_g_0__svg_g_1_Template","arc_r2","ctx_r2","PieSeriesComponent__svg_g_0_Template","_r1","ɵɵgetCurrentView","ɵɵtemplate","ɵɵlistener","$event","ɵɵrestoreView","ɵɵresetView","_c42","throttle","func","wait","options","context","args","result","timeout","previous","later","now","remaining","throttleable","duration","target","key","descriptor","PlacementTypes","caretOffset","verticalPosition","elDimensions","popoverDimensions","alignment","horizontalPosition","PositionHelper","_PositionHelper","caretDimensions","popoverPosition","placement","spacing","flip","elmDim","hostDim","top","left","TooltipContentComponent","clz","element","renderer","platformId","isPlatformBrowser","nativeElm","caretElm","__ngFactoryType__","ɵɵdirectiveInject","ElementRef","Renderer2","PLATFORM_ID","ɵɵdefineComponent","rf","ctx","ɵɵviewQuery","_c0","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵlistener","ɵɵresolveWindow","ɵɵclassMap","ɵɵelementStart","ɵɵelement","ɵɵtemplate","TooltipContentComponent_span_4_Template","TooltipContentComponent_span_5_Template","ɵɵelementEnd","ɵɵadvance","ɵɵclassMapInterpolate1","ɵɵproperty","NgIf","NgTemplateOutlet","__decorate","InjectionRegisteryService","injectionService","type","bindings","component","instance","compsByType","idx","comps","i","inputs","__spreadValues","outputs","isViewContainerRef","x","InjectionService","container","applicationRef","componentFactoryResolver","injector","bindingKeys","bindingName","eventKeys","eventName","componentClass","location","appendLocation","portalHost","DomPortalOutlet","portal","ComponentPortal","componentRef","ɵɵinject","ApplicationRef","ComponentFactoryResolver$1","Injector","ɵɵdefineInjectable","TooltipService","LegendPosition","LegendType","ScaleType","formatLabel","label","escapeLabel","match","LegendEntryComponent","EventEmitter","ɵɵtext","ɵɵclassProp","ɵɵstyleProp","ɵɵtextInterpolate1","LegendComponent","cd","changes","items","formattedLabel","entry","d","item","index","ChangeDetectorRef","ɵɵNgOnChangesFeature","LegendComponent_header_1_Template","LegendComponent_li_4_Template","NgForOf","ScaleLegendComponent","gradientValues","direction","colors","splits","pairs","c","ɵɵtextInterpolate","ChartComponent","legendColumns","chartColumns","ɵɵProvidersFeature","_c2","ɵɵprojectionDef","ɵɵnamespaceSVG","ɵɵprojection","ChartComponent_ngx_charts_scale_legend_3_Template","ChartComponent_ngx_charts_legend_4_Template","ɵɵattribute","VisibilityObserver","zone","check","offsetHeight","offsetWidth","NgZone","ɵɵdefineDirective","isDate","value","BaseChartComponent","chartElement","zone","cd","platformId","ScaleType","EventEmitter","isPlatformServer","VisibilityObserver","changes","dims","width","height","hostElem","isPlatformBrowser","i","g","isDate","j","d","subscription","fromEvent","debounceTime","e","data","results","item","copy","seriesItem","seriesItemCopy","__ngFactoryType__","ɵɵdirectiveInject","ElementRef","NgZone","ChangeDetectorRef","PLATFORM_ID","ɵɵdefineComponent","ɵɵNgOnChangesFeature","rf","ctx","ɵɵelement","Orientation","AxisLabelComponent","element","_c3","ɵɵnamespaceSVG","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵattribute","ɵɵadvance","ɵɵtextInterpolate1","trimLabel","s","max","reduceTicks","ticks","maxTicks","reduced","modulus","getTickLines","label","maxLength","maxLines","labelString","totalLines","lines","line","last","startIndex","TextAnchor","XAxisTicksComponent","scale","angle","tick","tickLength","len","charWidth","wordWidth","baseWidth","maxBaseWidth","labelHeight","longestTick","earlier","current","requiredHeight","maxScaleTicks","tickWidth","longestLabel","maxCharacters","truncatedText","possibleStringLength","ɵɵviewQuery","_c4","_t","ɵɵqueryRefresh","ɵɵloadQuery","_c5","ɵɵtemplate","XAxisTicksComponent__svg_g_2_Template","XAxisTicksComponent__svg_g_3_Template","ɵɵproperty","NgForOf","NgIf","XAxisComponent","newLabelOffset","_c6","XAxisComponent__svg_g_1_Template","XAxisComponent__svg_g_2_Template","roundedRect","x","y","w","h","r","tl","tr","bl","br","retval","YAxisTicksComponent","sign","positionMiddle","chunksLength","bandWidth","heightOfLines","availableFreeSpace","tickHeight","t","preferredWidth","_c7","YAxisTicksComponent__svg_g_2_Template","YAxisTicksComponent__svg_path_3_Template","YAxisTicksComponent__svg_g_4_Template","YAxisTicksComponent__svg_g_5_Template","YAxisComponent","_c8","YAxisComponent__svg_g_1_Template","YAxisComponent__svg_g_2_Template","AxesModule","ɵɵdefineNgModule","ɵɵdefineInjector","CommonModule","StyleTypes","ShowTypes","TooltipDirective","tooltipService","viewContainerRef","renderer","PlacementTypes","target","immediate","time","options","tooltip","event","destroyFn","TooltipService","ViewContainerRef","Renderer2","ɵɵdefineDirective","ɵɵlistener","$event","TooltipModule","InjectionService","cache","id","newId","BarOrientation","CircleComponent","_c9","SvgLinearGradientComponent","_c10","SvgLinearGradientComponent__svg_stop_1_Template","SeriesType","CircleSeriesComponent","indexActiveDataPoint","seriesName","value","tooltipLabel","formatLabel","cx","cy","radius","opacity","color","min","escapeLabel","result","entry","_c11","CircleSeriesComponent__svg_g_0_Template","trigger","transition","style","animate","SvgRadialGradientComponent","value","changes","__ngFactoryType__","ɵɵdefineComponent","ɵɵNgOnChangesFeature","_c15","rf","ctx","ɵɵnamespaceSVG","ɵɵelementStart","ɵɵtemplate","SvgRadialGradientComponent__svg_stop_1_Template","ɵɵelementEnd","ɵɵproperty","ɵɵattribute","ɵɵadvance","NgForOf","AreaComponent","element","EventEmitter","BarOrientation","id","node","select_default","ɵɵdirectiveInject","ElementRef","_c16","AreaComponent__svg_defs_0_Template","ɵɵelement","ɵɵstyleProp","NgIf","SvgLinearGradientComponent","root","MouseEvent","createMouseEvent","name","bubbles","cancelable","event","TooltipArea","platformId","PlacementTypes","StyleTypes","EventEmitter","xVal","results","group","item","d","groupName","label","val","color","ScaleType","data","isPlatformBrowser","xPos","closestIndex","closestPoint","ev","minIndex","maxIndex","minDiff","currentIndex","currentElement","curDiff","tooltipItem","result","__ngFactoryType__","ɵɵdirectiveInject","PLATFORM_ID","ɵɵdefineComponent","rf","ctx","ɵɵviewQuery","_c18","_t","ɵɵqueryRefresh","ɵɵloadQuery","_c19","_r1","ɵɵgetCurrentView","ɵɵnamespaceSVG","ɵɵelementStart","ɵɵlistener","$event","ɵɵrestoreView","ɵɵresetView","ɵɵelementEnd","ɵɵtemplate","TooltipArea__svg_ng_template_2_Template","ɵɵtemplateRefExtractor","ɵɵelement","defaultTooltipTemplate_r5","ɵɵreference","ɵɵadvance","ɵɵattribute","ɵɵstyleProp","ɵɵproperty","NgForOf","TooltipDirective","trigger","transition","style","animate","Timeline","element","cd","changes","offsetY","id","values","domain","min","max","v","scale","time","linear","point","height","width","brushX","selection","newDomain","select_default","ElementRef","ChangeDetectorRef","ɵɵNgOnChangesFeature","_c20","_c2","ɵɵprojectionDef","ɵɵprojection","ChartCommonModule","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","CommonModule","AxesModule","TooltipModule","calculateViewDimensions","width","height","margins","showXAxis","showYAxis","xAxisHeight","yAxisWidth","showXLabel","showYLabel","showLegend","legendType","ScaleType","legendPosition","LegendPosition","columns","xOffset","chartWidth","chartHeight","colorSets","ColorHelper","scheme","type","domain","customColors","cs","colorScale","quantile","ordinal","colorDomain","points","range","linear","value","valueScale","formattedValue","found","mapping","start","colorValueScale","band","endColor","startVal","startColor","endVal","i","currentVal","stops","color","offset","s","getUniqueXDomainValues","results","valueSet","result","d","getScaleType","values","checkDateType","sortLinear","data","property","direction","a","b","sortByDomain","domain","aVal","bVal","aIdx","bIdx","sortByTime","aDate","bDate","AreaChartModule","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","ChartCommonModule","BarComponent","element","EventEmitter","changes","id","node","select_default","path","radius","BarOrientation","roundedRect","edges","ɵɵdirectiveInject","ElementRef","ɵɵdefineComponent","rf","ctx","ɵɵlistener","ɵɵNgOnChangesFeature","_c26","ɵɵtemplate","BarComponent__svg_defs_0_Template","ɵɵnamespaceSVG","ɵɵelementStart","ɵɵelementEnd","ɵɵproperty","ɵɵadvance","ɵɵclassProp","ɵɵattribute","NgIf","SvgLinearGradientComponent","BarChartType","D0Types","BarLabelComponent","h","w","formatLabel","_c27","ɵɵtext","ɵɵtextInterpolate1","SeriesHorizontal","d0","d0Type","total","d","sum","xScaleMin","value","label","formattedLabel","roundEdges","bar","offset0","offset1","ScaleType","tooltipLabel","escapeLabel","section","totalPositive","totalNegative","PlacementTypes","StyleTypes","entry","active","dataItem","index","barLabel","data","_c28","SeriesHorizontal__svg_g_0_Template","SeriesHorizontal__svg_g_1_Template","NgForOf","TooltipDirective","trigger","transition","style","animate","BarHorizontalComponent","BaseChartComponent","LegendPosition","calculateViewDimensions","scale","linear","spacing","band","values","min","max","domain","ColorHelper","opts","width","height","event","item","fromLegend","idx","ɵBarHorizontalComponent_BaseFactory","ɵɵgetInheritedFactory","dirIndex","ɵɵcontentQuery","_c22","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵInheritDefinitionFeature","$event","BarHorizontalComponent__svg_g_2_Template","BarHorizontalComponent__svg_g_3_Template","ɵɵpureFunction2","_c24","XAxisComponent","YAxisComponent","ChartComponent","_c25","BarHorizontalNormalizedComponent","BaseChartComponent","LegendPosition","EventEmitter","BarChartType","index","item","isPlatformServer","calculateViewDimensions","domain","group","d","spacing","band","scale","linear","data","ScaleType","ColorHelper","opts","width","height","event","fromLegend","items","g","i","ɵBarHorizontalNormalizedComponent_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineComponent","rf","ctx","dirIndex","ɵɵcontentQuery","_c22","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵInheritDefinitionFeature","ɵɵelementStart","ɵɵlistener","$event","ɵɵnamespaceSVG","ɵɵtemplate","BarHorizontalNormalizedComponent__svg_g_2_Template","BarHorizontalNormalizedComponent__svg_g_3_Template","BarHorizontalNormalizedComponent__svg_g_4_Template","BarHorizontalNormalizedComponent__svg_g_5_Template","ɵɵelementEnd","ɵɵproperty","ɵɵpureFunction2","_c24","ɵɵadvance","ɵɵattribute","NgForOf","NgIf","XAxisComponent","YAxisComponent","ChartComponent","SeriesHorizontal","_c25","trigger","transition","style","animate","BarHorizontalStackedComponent","smallest","biggest","smallestSum","biggestSum","min","max","groupIndex","ɵBarHorizontalStackedComponent_BaseFactory","BarHorizontalStackedComponent__svg_g_2_Template","BarHorizontalStackedComponent__svg_g_3_Template","BarHorizontalStackedComponent__svg_g_4_Template","BarHorizontalStackedComponent__svg_g_5_Template","SeriesVerticalComponent","platformId","BarOrientation","changes","yScaleMin","d0","D0Types","d0Type","total","sum","value","label","formattedLabel","formatLabel","roundEdges","bar","offset0","offset1","tooltipLabel","escapeLabel","section","totalPositive","totalNegative","PlacementTypes","StyleTypes","entry","active","dataItem","barLabel","ɵɵdirectiveInject","PLATFORM_ID","ɵɵNgOnChangesFeature","_c29","SeriesVerticalComponent__svg_g_0_Template","SeriesVerticalComponent__svg_g_1_Template","SeriesVerticalComponent__svg_g_2_Template","TooltipDirective","BarComponent","BarLabelComponent","BarVerticalComponent","values","idx","ɵBarVerticalComponent_BaseFactory","BarVerticalComponent__svg_g_2_Template","BarVerticalComponent__svg_g_3_Template","BarChartModule","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","ChartCommonModule","BoxChartModule","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","ChartCommonModule","BubbleChartModule","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","ChartCommonModule","HeatMapModule","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","ChartCommonModule","LineComponent","element","platformId","isPlatformServer","changes","node","select_default","ɵɵdirectiveInject","ElementRef","PLATFORM_ID","ɵɵdefineComponent","ɵɵNgOnChangesFeature","_c36","rf","ctx","ɵɵtemplate","LineComponent__svg_g_0_Template","LineComponent__svg_g_1_Template","ɵɵproperty","ɵɵadvance","NgIf","trigger","transition","style","animate","LineSeriesComponent","BarOrientation","data","lineGen","areaGen","range","values","d","max","min","line_default","label","value","ScaleType","area_default","xProperty","sortLinear","sortByTime","sortByDomain","id","entry","_c37","ɵɵnamespaceSVG","ɵɵelementStart","LineSeriesComponent__svg_g_2_Template","ɵɵelementEnd","ɵɵelement","LineSeriesComponent__svg_g_5_Template","ɵɵclassProp","AreaComponent","SvgLinearGradientComponent","LineChartComponent","BaseChartComponent","LegendPosition","linear_default","EventEmitter","calculateViewDimensions","getUniqueXDomainValues","getScaleType","domain","v","a","b","aDate","bDate","results","width","scale","time","linear","point","height","item","index","ColorHelper","opts","idx","ɵLineChartComponent_BaseFactory","ɵɵgetInheritedFactory","dirIndex","ɵɵcontentQuery","_c22","_c23","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵlistener","ɵɵInheritDefinitionFeature","$event","LineChartComponent__svg_g_5_Template","LineChartComponent__svg_g_6_Template","LineChartComponent__svg_g_8_Template","LineChartComponent__svg_g_9_Template","LineChartComponent__svg_g_10_Template","LineChartComponent__svg_g_11_Template","ɵɵpureFunction2","_c24","ɵɵattribute","NgForOf","XAxisComponent","YAxisComponent","TooltipArea","ChartComponent","CircleSeriesComponent","Timeline","_c25","LineChartModule","PieLabelComponent","trimLabel","isIE","startRadius","innerPos","arc_default","outerPos","TextAnchor","_c38","ɵɵtext","ɵɵtextInterpolate","ɵɵstyleProp","ɵɵtextInterpolate1","twoPI","PieArcComponent","element","EventEmitter","BarOrientation","changes","calc","id","outerRadius","arc_default","node","select_default","d","copyOfD","interpolater","value_default","t","event","__ngFactoryType__","ɵɵdirectiveInject","ElementRef","ɵɵdefineComponent","ɵɵNgOnChangesFeature","_c40","rf","ctx","ɵɵnamespaceSVG","ɵɵelementStart","ɵɵtemplate","PieArcComponent__svg_defs_1_Template","ɵɵlistener","$event","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ɵɵstyleProp","ɵɵclassProp","ɵɵattribute","NgIf","SvgRadialGradientComponent","PieSeriesComponent","PlacementTypes","StyleTypes","arcData","pie_default","max","pieData","labelPositions","i","a","j","b","o","myArc","formatLabel","label","val","escapeLabel","index","item","data","entry","_c41","PieSeriesComponent__svg_g_0_Template","NgForOf","TooltipDirective","PieLabelComponent","PieChartComponent","BaseChartComponent","LegendPosition","EventEmitter","calculateViewDimensions","xOffset","yOffset","a","b","d","data","ColorHelper","ScaleType","item","fromLegend","idx","ɵPieChartComponent_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineComponent","rf","ctx","dirIndex","ɵɵcontentQuery","_c22","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵInheritDefinitionFeature","ɵɵelementStart","ɵɵlistener","$event","ɵɵnamespaceSVG","ɵɵelementEnd","ɵɵproperty","ɵɵpureFunction2","_c24","ɵɵadvance","ɵɵattribute","ChartComponent","PieSeriesComponent","_c25","_c42","PieChartModule","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","ChartCommonModule","PolarChartModule","LineChartModule","NumberCardModule","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","ChartCommonModule","TreeMapModule","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","ChartCommonModule","GaugeModule","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","ChartCommonModule","PieChartModule","BarChartModule","ngxChartsPolyfills","SankeyModule","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","ChartCommonModule","NgxChartsModule","ngxChartsPolyfills","AreaChartModule","BarChartModule","BoxChartModule","BubbleChartModule","HeatMapModule","LineChartModule","PolarChartModule","NumberCardModule","PieChartModule","TreeMapModule","GaugeModule"],"x_google_ignoreList":[0,1,2,3,4,5,6]}