{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/pla/pla.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.2(404545bded1df6ffa41ea0af4e8ddb219018c6c1)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/pla/pla.ts\nvar conf = {\n  comments: {\n    lineComment: \"#\"\n  },\n  brackets: [[\"[\", \"]\"], [\"<\", \">\"], [\"(\", \")\"]],\n  autoClosingPairs: [{\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"<\",\n    close: \">\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }],\n  surroundingPairs: [{\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"<\",\n    close: \">\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".pla\",\n  brackets: [{\n    open: \"[\",\n    close: \"]\",\n    token: \"delimiter.square\"\n  }, {\n    open: \"<\",\n    close: \">\",\n    token: \"delimiter.angle\"\n  }, {\n    open: \"(\",\n    close: \")\",\n    token: \"delimiter.parenthesis\"\n  }],\n  keywords: [\".i\", \".o\", \".mv\", \".ilb\", \".ob\", \".label\", \".type\", \".phase\", \".pair\", \".symbolic\", \".symbolic-output\", \".kiss\", \".p\", \".e\", \".end\"],\n  // regular expressions\n  comment: /#.*$/,\n  identifier: /[a-zA-Z]+[a-zA-Z0-9_\\-]*/,\n  plaContent: /[01\\-~\\|]+/,\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [\n    // comments and whitespace\n    {\n      include: \"@whitespace\"\n    }, [/@comment/, \"comment\"],\n    // keyword\n    [/\\.([a-zA-Z_\\-]+)/, {\n      cases: {\n        \"@eos\": {\n          token: \"keyword.$1\"\n        },\n        \"@keywords\": {\n          cases: {\n            \".type\": {\n              token: \"keyword.$1\",\n              next: \"@type\"\n            },\n            \"@default\": {\n              token: \"keyword.$1\",\n              next: \"@keywordArg\"\n            }\n          }\n        },\n        \"@default\": {\n          token: \"keyword.$1\"\n        }\n      }\n    }],\n    // identifiers\n    [/@identifier/, \"identifier\"],\n    // PLA row\n    [/@plaContent/, \"string\"]],\n    whitespace: [[/[ \\t\\r\\n]+/, \"\"]],\n    type: [{\n      include: \"@whitespace\"\n    }, [/\\w+/, {\n      token: \"type\",\n      next: \"@pop\"\n    }]],\n    keywordArg: [\n    // whitespace\n    [/[ \\t\\r\\n]+/, {\n      cases: {\n        \"@eos\": {\n          token: \"\",\n          next: \"@pop\"\n        },\n        \"@default\": \"\"\n      }\n    }],\n    // comments\n    [/@comment/, \"comment\", \"@pop\"],\n    // brackets\n    [/[<>()\\[\\]]/, {\n      cases: {\n        \"@eos\": {\n          token: \"@brackets\",\n          next: \"@pop\"\n        },\n        \"@default\": \"@brackets\"\n      }\n    }],\n    // numbers\n    [/\\-?\\d+/, {\n      cases: {\n        \"@eos\": {\n          token: \"number\",\n          next: \"@pop\"\n        },\n        \"@default\": \"number\"\n      }\n    }],\n    // identifiers\n    [/@identifier/, {\n      cases: {\n        \"@eos\": {\n          token: \"identifier\",\n          next: \"@pop\"\n        },\n        \"@default\": \"identifier\"\n      }\n    }],\n    // delimiter\n    [/[;=]/, {\n      cases: {\n        \"@eos\": {\n          token: \"delimiter\",\n          next: \"@pop\"\n        },\n        \"@default\": \"delimiter\"\n      }\n    }]]\n  }\n};\nexport { conf, language };"],"mappings":"4BAQA,IAAIA,EAAO,CACT,SAAU,CACR,YAAa,GACf,EACA,SAAU,CAAC,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,CAAC,EAC7C,iBAAkB,CAAC,CACjB,KAAM,IACN,MAAO,GACT,EAAG,CACD,KAAM,IACN,MAAO,GACT,EAAG,CACD,KAAM,IACN,MAAO,GACT,CAAC,EACD,iBAAkB,CAAC,CACjB,KAAM,IACN,MAAO,GACT,EAAG,CACD,KAAM,IACN,MAAO,GACT,EAAG,CACD,KAAM,IACN,MAAO,GACT,CAAC,CACH,EACIC,EAAW,CACb,aAAc,GACd,aAAc,OACd,SAAU,CAAC,CACT,KAAM,IACN,MAAO,IACP,MAAO,kBACT,EAAG,CACD,KAAM,IACN,MAAO,IACP,MAAO,iBACT,EAAG,CACD,KAAM,IACN,MAAO,IACP,MAAO,uBACT,CAAC,EACD,SAAU,CAAC,KAAM,KAAM,MAAO,OAAQ,MAAO,SAAU,QAAS,SAAU,QAAS,YAAa,mBAAoB,QAAS,KAAM,KAAM,MAAM,EAE/I,QAAS,OACT,WAAY,2BACZ,WAAY,aAEZ,UAAW,CACT,KAAM,CAEN,CACE,QAAS,aACX,EAAG,CAAC,WAAY,SAAS,EAEzB,CAAC,mBAAoB,CACnB,MAAO,CACL,OAAQ,CACN,MAAO,YACT,EACA,YAAa,CACX,MAAO,CACL,QAAS,CACP,MAAO,aACP,KAAM,OACR,EACA,WAAY,CACV,MAAO,aACP,KAAM,aACR,CACF,CACF,EACA,WAAY,CACV,MAAO,YACT,CACF,CACF,CAAC,EAED,CAAC,cAAe,YAAY,EAE5B,CAAC,cAAe,QAAQ,CAAC,EACzB,WAAY,CAAC,CAAC,aAAc,EAAE,CAAC,EAC/B,KAAM,CAAC,CACL,QAAS,aACX,EAAG,CAAC,MAAO,CACT,MAAO,OACP,KAAM,MACR,CAAC,CAAC,EACF,WAAY,CAEZ,CAAC,aAAc,CACb,MAAO,CACL,OAAQ,CACN,MAAO,GACP,KAAM,MACR,EACA,WAAY,EACd,CACF,CAAC,EAED,CAAC,WAAY,UAAW,MAAM,EAE9B,CAAC,aAAc,CACb,MAAO,CACL,OAAQ,CACN,MAAO,YACP,KAAM,MACR,EACA,WAAY,WACd,CACF,CAAC,EAED,CAAC,SAAU,CACT,MAAO,CACL,OAAQ,CACN,MAAO,SACP,KAAM,MACR,EACA,WAAY,QACd,CACF,CAAC,EAED,CAAC,cAAe,CACd,MAAO,CACL,OAAQ,CACN,MAAO,aACP,KAAM,MACR,EACA,WAAY,YACd,CACF,CAAC,EAED,CAAC,OAAQ,CACP,MAAO,CACL,OAAQ,CACN,MAAO,YACP,KAAM,MACR,EACA,WAAY,WACd,CACF,CAAC,CAAC,CACJ,CACF","names":["conf","language"],"x_google_ignoreList":[0]}