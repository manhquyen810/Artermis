{
  "version": 3,
  "sources": ["src/main/webapp/app/core/legal/privacy.component.ts"],
  "sourcesContent": ["import { AfterViewInit, Component, OnDestroy, OnInit, inject } from '@angular/core';\r\nimport { ActivatedRoute, RouterLink } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { JhiLanguageHelper } from 'app/core/language/language.helper';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\nimport { LegalDocumentService } from 'app/shared/service/legal-document.service';\r\nimport { LegalDocumentLanguage } from 'app/entities/legal-document.model';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { HtmlForMarkdownPipe } from 'app/shared/pipes/html-for-markdown.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-privacy',\r\n    template: `\r\n        <div [innerHTML]=\"privacyStatement | htmlForMarkdown\"></div>\r\n        @if (isAuthenticated) {\r\n            <a jhiTranslate=\"artemisApp.dataExport.title\" [routerLink]=\"['/privacy/data-exports']\"> </a>\r\n        }\r\n    `,\r\n    imports: [TranslateDirective, RouterLink, HtmlForMarkdownPipe],\r\n})\r\nexport class PrivacyComponent implements AfterViewInit, OnInit, OnDestroy {\r\n    private route = inject(ActivatedRoute);\r\n    private legalDocumentService = inject(LegalDocumentService);\r\n    private languageHelper = inject(JhiLanguageHelper);\r\n    private accountService = inject(AccountService);\r\n\r\n    privacyStatement?: string;\r\n    private languageChangeSubscription?: Subscription;\r\n    isAuthenticated: boolean;\r\n\r\n    /**\r\n     * On init get the privacy statement file from the Artemis server and set up a subscription to fetch the file again if the language was changed.\r\n     */\r\n    ngOnInit(): void {\r\n        this.isAuthenticated = this.accountService.isAuthenticated();\r\n        // Update the view if the language was changed\r\n        this.languageChangeSubscription = this.languageHelper.language.subscribe((lang) => {\r\n            this.legalDocumentService.getPrivacyStatement(lang as LegalDocumentLanguage).subscribe((statement) => (this.privacyStatement = statement.text));\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.languageChangeSubscription) {\r\n            this.languageChangeSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * After view initialization scroll the fragment of the current route into view.\r\n     */\r\n    ngAfterViewInit(): void {\r\n        this.route.params.subscribe((params) => {\r\n            try {\r\n                const fragment = document.querySelector('#' + params['fragment']);\r\n                if (fragment !== null) {\r\n                    fragment.scrollIntoView();\r\n                }\r\n            } catch (e) {\r\n                /* empty */\r\n            }\r\n        });\r\n    }\r\n}\r\n"],
  "mappings": "q7BAeYA,EAAA,EAAA;aAAA,EAAAC,EAAA,EAAA,IAAA,CAAA,EAAwFD,EAAA,EAAA,GAAA,EAAAE,EAAA,EAC5FF,EAAA,EAAA;SAAA,SADkDG,EAAA,EAAAC,EAAA,aAAAC,EAAA,EAAAC,CAAA,CAAA,GAK1D,IAAaC,GAAgB,IAAA,CAAvB,MAAOA,CAAgB,CACjBC,MAAQC,EAAOC,CAAc,EAC7BC,qBAAuBF,EAAOG,CAAoB,EAClDC,eAAiBJ,EAAOK,CAAiB,EACzCC,eAAiBN,EAAOO,CAAc,EAE9CC,iBACQC,2BACRC,gBAKAC,UAAQ,CACJ,KAAKD,gBAAkB,KAAKJ,eAAeI,gBAAe,EAE1D,KAAKD,2BAA6B,KAAKL,eAAeQ,SAASC,UAAWC,GAAQ,CAC9E,KAAKZ,qBAAqBa,oBAAoBD,CAA6B,EAAED,UAAWG,GAAe,KAAKR,iBAAmBQ,EAAUC,IAAK,CAClJ,CAAC,CACL,CAEAC,aAAW,CACH,KAAKT,4BACL,KAAKA,2BAA2BU,YAAW,CAEnD,CAKAC,iBAAe,CACX,KAAKrB,MAAMsB,OAAOR,UAAWQ,GAAU,CACnC,GAAI,CACA,IAAMC,EAAWC,SAASC,cAAc,IAAMH,EAAO,QAAW,EAC5DC,IAAa,MACbA,EAASG,eAAc,CAE/B,MAAY,CACR,CAER,CAAC,CACL,4CAzCS3B,EAAgB,2BAAhBA,EAAgB4B,UAAA,CAAA,CAAA,aAAA,CAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,WAAA,EAAA,CAAA,eAAA,8BAAA,EAAA,YAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,IAPrBxC,EAAA,EAAA;SAAA,EAAA0C,EAAA,EAAA,MAAA,CAAA,yBACA1C,EAAA,EAAA;SAAA,EAAA2C,EAAA,EAAAC,EAAA,EAAA,CAAA,SADKzC,EAAA,EAAAC,EAAA,YAAAyC,EAAA,EAAA,EAAAJ,EAAAxB,gBAAA,EAAA6B,CAAA,EACL3C,EAAA,CAAA,EAAA4C,EAAAN,EAAAtB,gBAAA,EAAA,EAAA,kBAIM6B,EAAoBC,EAAYC,CAAmB,EAAAC,cAAA,CAAA,CAAA,SAEpD5C,CAAgB,GAAA",
  "names": ["\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "\u0275\u0275pureFunction0", "_c0", "PrivacyComponent", "route", "inject", "ActivatedRoute", "legalDocumentService", "LegalDocumentService", "languageHelper", "JhiLanguageHelper", "accountService", "AccountService", "privacyStatement", "languageChangeSubscription", "isAuthenticated", "ngOnInit", "language", "subscribe", "lang", "getPrivacyStatement", "statement", "text", "ngOnDestroy", "unsubscribe", "ngAfterViewInit", "params", "fragment", "document", "querySelector", "scrollIntoView", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275element", "\u0275\u0275template", "PrivacyComponent_Conditional_4_Template", "\u0275\u0275pipeBind1", "\u0275\u0275sanitizeHtml", "\u0275\u0275conditional", "TranslateDirective", "RouterLink", "HtmlForMarkdownPipe", "encapsulation"]
}
