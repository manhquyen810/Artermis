{
  "version": 3,
  "sources": ["src/main/webapp/app/core/user/account.model.ts", "src/main/webapp/app/core/user/user.model.ts"],
  "sourcesContent": ["import { GuidedTourSetting } from 'app/guided-tour/guided-tour-setting.model';\r\n\r\nexport class Account {\r\n    public activated?: boolean;\r\n    public authorities?: string[];\r\n    public login?: string;\r\n    public email?: string;\r\n    public name?: string;\r\n    public internal: boolean;\r\n    public firstName?: string;\r\n    public lastName?: string;\r\n    public langKey?: string;\r\n    public imageUrl?: string;\r\n    public guidedTourSettings?: GuidedTourSetting[];\r\n\r\n    constructor(\r\n        activated?: boolean,\r\n        authorities?: string[],\r\n        email?: string,\r\n        firstName?: string,\r\n        langKey?: string,\r\n        lastName?: string,\r\n        login?: string,\r\n        imageUrl?: string,\r\n        guidedTourSettings?: GuidedTourSetting[],\r\n    ) {\r\n        this.login = login;\r\n        this.firstName = firstName;\r\n        this.lastName = lastName;\r\n        this.email = email;\r\n        this.activated = activated;\r\n        this.langKey = langKey;\r\n        this.authorities = authorities;\r\n        this.imageUrl = imageUrl;\r\n        this.guidedTourSettings = guidedTourSettings || [];\r\n    }\r\n}\r\n", "import { Account } from 'app/core/user/account.model';\r\nimport dayjs from 'dayjs/esm';\r\nimport { Organization } from 'app/entities/organization.model';\r\n\r\nexport class User extends Account {\r\n    public id?: number;\r\n    public groups?: string[];\r\n    public organizations?: Organization[];\r\n    public createdBy?: string;\r\n    public createdDate?: Date;\r\n    public lastModifiedBy?: string;\r\n    public lastModifiedDate?: Date;\r\n    public lastNotificationRead?: dayjs.Dayjs;\r\n    public visibleRegistrationNumber?: string;\r\n    public password?: string;\r\n    public vcsAccessToken?: string;\r\n    public vcsAccessTokenExpiryDate?: string;\r\n    public externalLLMUsageAccepted?: dayjs.Dayjs;\r\n\r\n    constructor(\r\n        id?: number,\r\n        login?: string,\r\n        firstName?: string,\r\n        lastName?: string,\r\n        email?: string,\r\n        activated?: boolean,\r\n        langKey?: string,\r\n        authorities?: string[],\r\n        groups?: string[],\r\n        createdBy?: string,\r\n        createdDate?: Date,\r\n        lastModifiedBy?: string,\r\n        lastModifiedDate?: Date,\r\n        lastNotificationRead?: dayjs.Dayjs,\r\n        password?: string,\r\n        imageUrl?: string,\r\n        vcsAccessToken?: string,\r\n        vcsAccessTokenExpiryDate?: string,\r\n        externalLLMUsageAccepted?: dayjs.Dayjs,\r\n    ) {\r\n        super(activated, authorities, email, firstName, langKey, lastName, login, imageUrl);\r\n        this.id = id;\r\n        this.groups = groups;\r\n        this.createdBy = createdBy;\r\n        this.createdDate = createdDate;\r\n        this.lastModifiedBy = lastModifiedBy;\r\n        this.lastModifiedDate = lastModifiedDate;\r\n        this.lastNotificationRead = lastNotificationRead;\r\n        this.password = password;\r\n        this.vcsAccessToken = vcsAccessToken;\r\n        this.vcsAccessTokenExpiryDate = vcsAccessTokenExpiryDate;\r\n        this.externalLLMUsageAccepted = externalLLMUsageAccepted;\r\n    }\r\n}\r\n/**\r\n * A DTO representing a user with the minimal information allowed to be seen by other users in a course\r\n */\r\nexport class UserPublicInfoDTO {\r\n    public id?: number;\r\n    public login?: string;\r\n\r\n    public name?: string;\r\n    public firstName?: string;\r\n    public lastName?: string;\r\n    public email?: string;\r\n    public imageUrl?: string;\r\n    public isInstructor?: boolean;\r\n    public isEditor?: boolean;\r\n    public isTeachingAssistant?: boolean;\r\n    public isStudent?: boolean;\r\n}\r\n\r\n/**\r\n * A DTO representing a user which contains only the name and login\r\n */\r\nexport class UserNameAndLoginDTO {\r\n    public name?: string;\r\n    public login?: string;\r\n}\r\n"],
  "mappings": "AAEM,IAAOA,EAAP,KAAc,CACTC,UACAC,YACAC,MACAC,MACAC,KACAC,SACAC,UACAC,SACAC,QACAC,SACAC,mBAEPC,YACIX,EACAC,EACAE,EACAG,EACAE,EACAD,EACAL,EACAO,EACAC,EAAwC,CAExC,KAAKR,MAAQA,EACb,KAAKI,UAAYA,EACjB,KAAKC,SAAWA,EAChB,KAAKJ,MAAQA,EACb,KAAKH,UAAYA,EACjB,KAAKQ,QAAUA,EACf,KAAKP,YAAcA,EACnB,KAAKQ,SAAWA,EAChB,KAAKC,mBAAqBA,GAAsB,CAAA,CACpD,GC/BE,IAAOE,EAAP,cAAoBC,CAAO,CACtBC,GACAC,OACAC,cACAC,UACAC,YACAC,eACAC,iBACAC,qBACAC,0BACAC,SACAC,eACAC,yBACAC,yBAEPC,YACIb,EACAc,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAnB,EACAE,EACAC,EACAC,EACAC,EACAC,EACAE,EACAY,EACAX,EACAC,EACAC,EAAsC,CAEtC,MAAMM,EAAWE,EAAaH,EAAOF,EAAWI,EAASH,EAAUF,EAAOO,CAAQ,EAClF,KAAKrB,GAAKA,EACV,KAAKC,OAASA,EACd,KAAKE,UAAYA,EACjB,KAAKC,YAAcA,EACnB,KAAKC,eAAiBA,EACtB,KAAKC,iBAAmBA,EACxB,KAAKC,qBAAuBA,EAC5B,KAAKE,SAAWA,EAChB,KAAKC,eAAiBA,EACtB,KAAKC,yBAA2BA,EAChC,KAAKC,yBAA2BA,CACpC,GAKSU,EAAP,KAAwB,CACnBtB,GACAc,MAEAS,KACAR,UACAC,SACAC,MACAI,SACAG,aACAC,SACAC,oBACAC",
  "names": ["Account", "activated", "authorities", "login", "email", "name", "internal", "firstName", "lastName", "langKey", "imageUrl", "guidedTourSettings", "constructor", "User", "Account", "id", "groups", "organizations", "createdBy", "createdDate", "lastModifiedBy", "lastModifiedDate", "lastNotificationRead", "visibleRegistrationNumber", "password", "vcsAccessToken", "vcsAccessTokenExpiryDate", "externalLLMUsageAccepted", "constructor", "login", "firstName", "lastName", "email", "activated", "langKey", "authorities", "imageUrl", "UserPublicInfoDTO", "name", "isInstructor", "isEditor", "isTeachingAssistant", "isStudent"]
}
