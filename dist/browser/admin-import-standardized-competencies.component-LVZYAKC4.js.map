{
  "version": 3,
  "sources": ["src/main/webapp/app/admin/standardized-competencies/import/admin-import-standardized-competencies.component.ts", "src/main/webapp/app/admin/standardized-competencies/import/admin-import-standardized-competencies.component.html"],
  "sourcesContent": ["import { Component, inject } from '@angular/core';\r\nimport { faBan, faChevronRight, faFileImport, faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport {\r\n    KnowledgeAreaDTO,\r\n    KnowledgeAreaForTree,\r\n    KnowledgeAreasForImportDTO,\r\n    StandardizedCompetencyForTree,\r\n    convertToKnowledgeAreaForTree,\r\n    sourceToString,\r\n} from 'app/entities/competency/standardized-competency.model';\r\nimport { MAX_FILE_SIZE } from 'app/shared/constants/input.constants';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { AdminStandardizedCompetencyService } from 'app/admin/standardized-competencies/admin-standardized-competency.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { onError } from 'app/shared/util/global.utils';\r\nimport { ButtonComponent, ButtonType } from 'app/shared/components/button.component';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MatTreeNestedDataSource } from '@angular/material/tree';\r\nimport { NestedTreeControl } from '@angular/cdk/tree';\r\nimport { getIcon } from 'app/entities/competency.model';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\n\r\nimport { StandardizedCompetencyDetailComponent } from 'app/shared/standardized-competencies/standardized-competency-detail.component';\r\nimport { KnowledgeAreaTreeComponent } from 'app/shared/standardized-competencies/knowledge-area-tree.component';\r\nimport { NgbCollapse, NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { HtmlForMarkdownPipe } from 'app/shared/pipes/html-for-markdown.pipe';\r\n\r\ninterface ImportCount {\r\n    knowledgeAreas: number;\r\n    competencies: number;\r\n}\r\n\r\n@Component({\r\n    selector: 'jhi-admin-import-standardized-competencies',\r\n    templateUrl: './admin-import-standardized-competencies.component.html',\r\n    imports: [\r\n        FontAwesomeModule,\r\n        StandardizedCompetencyDetailComponent,\r\n        KnowledgeAreaTreeComponent,\r\n        NgbCollapse,\r\n        HtmlForMarkdownPipe,\r\n        ArtemisTranslatePipe,\r\n        NgbTooltipModule,\r\n        TranslateDirective,\r\n        ButtonComponent,\r\n    ],\r\n})\r\nexport class AdminImportStandardizedCompetenciesComponent {\r\n    protected isLoading = false;\r\n    protected isCollapsed = false;\r\n    protected selectedCompetency?: StandardizedCompetencyForTree;\r\n    //the title of the knowledge area belonging to the selected competency\r\n    protected knowledgeAreaTitle = '';\r\n    protected sourceString = '';\r\n    protected importData?: KnowledgeAreasForImportDTO;\r\n    protected importCount?: ImportCount;\r\n    protected dataSource = new MatTreeNestedDataSource<KnowledgeAreaForTree>();\r\n    protected treeControl = new NestedTreeControl<KnowledgeAreaForTree>((node) => node.children);\r\n    private fileReader: FileReader = new FileReader();\r\n\r\n    //Icons\r\n    protected readonly faFileImport = faFileImport;\r\n    protected readonly faBan = faBan;\r\n    protected readonly faQuestionCircle = faQuestionCircle;\r\n    protected readonly faChevronRight = faChevronRight;\r\n    //Other constants\r\n    protected readonly getIcon = getIcon;\r\n    protected readonly ButtonType = ButtonType;\r\n    protected readonly importExample = `\\`\\`\\`\r\n{\r\n    \"knowledgeAreas\": [{\r\n        \"title\": \"Artificial Intelligence\",\r\n        \"shortTitle\": \"AI\",\r\n        \"description\": \"AI is a field in computer science...\", //(optional)\r\n        \"competencies\": [{\r\n            \"title\": \"Machine Learning\",\r\n            \"description\": \"1. Explain examples of machine learning tasks \\\\n2. ....\", //(optional)\r\n            //(optional) one of REMEMBER, UNDERSTAND, APPLY, ANALYZE, EVALUATE, CREATE\r\n            \"taxonomy\": \"UNDERSTAND\",\r\n            //(optional) must match a source below if it exists\r\n            \"sourceId\": 1,\r\n        }],\r\n        \"children\": [{\r\n            //nested knowledge areas...\r\n        }],\r\n    }],\r\n    \"sources\": [{\r\n        \"id\": 1,\r\n        \"title\": \"Book about machine learning\",\r\n        \"author\": \"Doe, Mustermann, et al.\",\r\n        \"uri\": \"http://localhost\" //(optional)\r\n    }]\r\n}\r\n\\`\\`\\``;\r\n\r\n    private alertService = inject(AlertService);\r\n    private adminStandardizedCompetencyService = inject(AdminStandardizedCompetencyService);\r\n    private activatedRoute = inject(ActivatedRoute);\r\n    private router = inject(Router);\r\n\r\n    /**\r\n     * Verifies the file (only .json, smaller than 20 MB) and then tries to read the importData from it\r\n     *\r\n     * @param event the event triggered by changing the file\r\n     */\r\n    onFileChange(event: Event) {\r\n        this.dataSource.data = [];\r\n        const input = event.target as HTMLInputElement;\r\n        if (input.files?.length) {\r\n            const fileList: FileList = input.files;\r\n            if (fileList.length != 1) {\r\n                this.alertService.error('artemisApp.standardizedCompetency.manage.import.error.fileCount');\r\n                return;\r\n            }\r\n            const file = fileList[0];\r\n            if (!file.name.toLowerCase().endsWith('.json')) {\r\n                this.alertService.error('artemisApp.standardizedCompetency.manage.import.error.fileExtension');\r\n                return;\r\n            } else if (file.size > MAX_FILE_SIZE) {\r\n                this.alertService.error('artemisApp.standardizedCompetency.manage.import.error.fileTooBig');\r\n                return;\r\n            } else {\r\n                this.fileReader.readAsText(file);\r\n                this.fileReader.onload = () => this.setImportDataAndCount();\r\n            }\r\n        }\r\n    }\r\n\r\n    protected openCompetencyDetails(competency: StandardizedCompetencyForTree, knowledgeAreaTitle: string) {\r\n        const source = this.importData?.sources.find((source) => source.id === competency.sourceId);\r\n        this.sourceString = source ? sourceToString(source) : '';\r\n        this.knowledgeAreaTitle = knowledgeAreaTitle;\r\n        this.selectedCompetency = competency;\r\n    }\r\n\r\n    protected closeCompetencyDetails() {\r\n        this.sourceString = '';\r\n        this.knowledgeAreaTitle = '';\r\n        this.selectedCompetency = undefined;\r\n    }\r\n\r\n    importCompetencies() {\r\n        this.isLoading = true;\r\n        this.adminStandardizedCompetencyService.importStandardizedCompetencyCatalog(this.importData!).subscribe({\r\n            next: () => {\r\n                this.isLoading = false;\r\n                this.alertService.success('artemisApp.standardizedCompetency.manage.import.success');\r\n                this.router.navigate(['../'], { relativeTo: this.activatedRoute });\r\n            },\r\n            error: (error: HttpErrorResponse) => {\r\n                onError(this.alertService, error);\r\n                this.isLoading = false;\r\n            },\r\n        });\r\n    }\r\n\r\n    toggleCollapse() {\r\n        this.isCollapsed = !this.isCollapsed;\r\n    }\r\n\r\n    cancel() {\r\n        this.router.navigate(['../'], { relativeTo: this.activatedRoute });\r\n    }\r\n\r\n    /**\r\n     * Sets the importData and counts the knowledgeAreas and standardizedCompetencies contained\r\n     * @private\r\n     */\r\n    private setImportDataAndCount() {\r\n        this.importData = undefined;\r\n        this.importCount = { knowledgeAreas: 0, competencies: 0 };\r\n\r\n        try {\r\n            this.importData = JSON.parse(this.fileReader.result as string);\r\n        } catch (e) {\r\n            this.alertService.error('artemisApp.standardizedCompetency.manage.import.error.fileSyntax');\r\n        }\r\n        try {\r\n            if (this.importData) {\r\n                this.importCount = this.countKnowledgeAreasAndCompetencies({ children: this.importData.knowledgeAreas });\r\n                this.importCount.knowledgeAreas -= 1;\r\n                this.dataSource.data = this.importData.knowledgeAreas.map((knowledgeArea) => convertToKnowledgeAreaForTree(knowledgeArea));\r\n            }\r\n        } catch (e) {\r\n            this.importData = undefined;\r\n            this.alertService.error('artemisApp.standardizedCompetency.manage.import.error.fileStructure');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the count of knowledgeAreas and competencies (respectively) contained in this knowledgeArea and its descendants\r\n     *\r\n     * @param knowledgeArea the knowledge area\r\n     * @private\r\n     */\r\n    private countKnowledgeAreasAndCompetencies(knowledgeArea: KnowledgeAreaDTO): ImportCount {\r\n        const competencies = knowledgeArea.competencies?.length ?? 0;\r\n        const descendantCounts = knowledgeArea.children?.map((child) => this.countKnowledgeAreasAndCompetencies(child)) ?? [];\r\n        const descendantSum = descendantCounts.reduce(\r\n            (previous, current) => {\r\n                return {\r\n                    knowledgeAreas: previous.knowledgeAreas + current.knowledgeAreas,\r\n                    competencies: previous.competencies + current.competencies,\r\n                };\r\n            },\r\n            { knowledgeAreas: 0, competencies: 0 },\r\n        );\r\n\r\n        return {\r\n            knowledgeAreas: descendantSum.knowledgeAreas + 1,\r\n            competencies: descendantSum.competencies + competencies,\r\n        };\r\n    }\r\n}\r\n", "<div class=\"container\">\r\n    <h2 jhiTranslate=\"artemisApp.standardizedCompetency.manage.import.title\"></h2>\r\n    <div class=\"card mt-3\">\r\n        <div class=\"card-header d-flex align-items-center mw-100 clickable\" (click)=\"toggleCollapse()\">\r\n            <div class=\"me-2\">\r\n                <fa-icon [icon]=\"faChevronRight\" class=\"rotate-icon chevron-position\" [class.rotated]=\"!isCollapsed\" />\r\n            </div>\r\n            <h5 class=\"mb-0\" jhiTranslate=\"artemisApp.standardizedCompetency.manage.import.format.title\"></h5>\r\n        </div>\r\n        <div class=\"card-body\" [ngbCollapse]=\"isCollapsed\">\r\n            <p jhiTranslate=\"artemisApp.standardizedCompetency.manage.import.format.text1\"></p>\r\n            <p jhiTranslate=\"artemisApp.standardizedCompetency.manage.import.format.text2\"></p>\r\n            <p jhiTranslate=\"artemisApp.standardizedCompetency.manage.import.format.text3\"></p>\r\n            <div [innerHTML]=\"importExample | htmlForMarkdown\"></div>\r\n        </div>\r\n    </div>\r\n    <input class=\"mt-3\" type=\"file\" accept=\"application/json\" (change)=\"onFileChange($event)\" />\r\n    <h4 class=\"mt-3\" jhiTranslate=\"artemisApp.standardizedCompetency.manage.import.preview.title\"></h4>\r\n    @if (importCount && importCount?.knowledgeAreas) {\r\n        <div\r\n            class=\"mb-1\"\r\n            jhiTranslate=\"artemisApp.standardizedCompetency.manage.import.count\"\r\n            [translateValues]=\"{ competencies: importCount.competencies, knowledgeAreas: importCount.knowledgeAreas }\"\r\n        ></div>\r\n        <div class=\"d-flex\">\r\n            <jhi-knowledge-area-tree class=\"d-flex flex-grow-1 h-100 w-50\" [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\r\n                <ng-template let-competency=\"competency\" let-knowledgeArea=\"knowledgeArea\" #competencyTemplate>\r\n                    <div class=\"d-flex align-items-center clickable\" (click)=\"openCompetencyDetails(competency, knowledgeArea.title)\">\r\n                        <fa-icon\r\n                            class=\"me-2\"\r\n                            [icon]=\"getIcon(competency.taxonomy)\"\r\n                            [ngbTooltip]=\"'artemisApp.courseCompetency.taxonomies.' + (competency.taxonomy ?? 'none') | artemisTranslate\"\r\n                            [fixedWidth]=\"true\"\r\n                        />\r\n                        <h6 class=\"mb-0\">{{ competency.title }}</h6>\r\n                    </div>\r\n                </ng-template>\r\n            </jhi-knowledge-area-tree>\r\n            @if (selectedCompetency) {\r\n                <div style=\"background-color: var(--overview-light-background-color)\" class=\"card d-flex flex-grow-1 w-100 h-100 p-3 ms-1\">\r\n                    <jhi-standardized-competency-detail\r\n                        [competency]=\"selectedCompetency\"\r\n                        [knowledgeAreaTitle]=\"knowledgeAreaTitle\"\r\n                        [sourceString]=\"sourceString\"\r\n                        (onClose)=\"closeCompetencyDetails()\"\r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    } @else {\r\n        <span jhiTranslate=\"artemisApp.standardizedCompetency.manage.import.preview.empty\"></span>\r\n    }\r\n    <div class=\"mt-3\">\r\n        <jhi-button [btnType]=\"ButtonType.SECONDARY\" [title]=\"'entity.action.cancel'\" [icon]=\"faBan\" (onClick)=\"cancel()\" />\r\n        <jhi-button [disabled]=\"!this.importData\" [isLoading]=\"isLoading\" [icon]=\"faFileImport\" [title]=\"'entity.action.to-import'\" (onClick)=\"importCompetencies()\" />\r\n    </div>\r\n</div>\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275listener", "ctx_r1", "\u0275\u0275restoreView", "_r1", "competency_r3", "competency", "knowledgeArea_r4", "knowledgeArea", "ctx_r4", "\u0275\u0275nextContext", "\u0275\u0275resetView", "openCompetencyDetails", "title", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "getIcon", "taxonomy", "\u0275\u0275pipeBind1", "tmp_6_0", "undefined", "\u0275\u0275textInterpolate", "_r6", "closeCompetencyDetails", "selectedCompetency", "knowledgeAreaTitle", "sourceString", "\u0275\u0275template", "AdminImportStandardizedCompetenciesComponent_Conditional_33_ng_template_7_Template", "\u0275\u0275templateRefExtractor", "AdminImportStandardizedCompetenciesComponent_Conditional_33_Conditional_11_Template", "\u0275\u0275pureFunction2", "_c0", "importCount", "competencies", "knowledgeAreas", "dataSource", "treeControl", "\u0275\u0275conditional", "AdminImportStandardizedCompetenciesComponent", "isLoading", "isCollapsed", "importData", "MatTreeNestedDataSource", "NestedTreeControl", "node", "children", "fileReader", "FileReader", "faFileImport", "faBan", "faQuestionCircle", "faChevronRight", "ButtonType", "importExample", "alertService", "inject", "AlertService", "adminStandardizedCompetencyService", "AdminStandardizedCompetencyService", "activatedRoute", "ActivatedRoute", "router", "Router", "onFileChange", "event", "data", "input", "target", "files", "length", "fileList", "error", "file", "name", "toLowerCase", "endsWith", "size", "MAX_FILE_SIZE", "readAsText", "onload", "setImportDataAndCount", "source", "sources", "find", "id", "sourceId", "sourceToString", "importCompetencies", "importStandardizedCompetencyCatalog", "subscribe", "next", "success", "navigate", "relativeTo", "onError", "toggleCollapse", "cancel", "JSON", "parse", "result", "countKnowledgeAreasAndCompetencies", "map", "convertToKnowledgeAreaForTree", "descendantSum", "child", "reduce", "previous", "current", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "$event", "AdminImportStandardizedCompetenciesComponent_Conditional_33_Template", "AdminImportStandardizedCompetenciesComponent_Conditional_34_Template", "\u0275\u0275classProp", "\u0275\u0275sanitizeHtml", "SECONDARY", "FontAwesomeModule", "FaIconComponent", "StandardizedCompetencyDetailComponent", "KnowledgeAreaTreeComponent", "NgbCollapse", "HtmlForMarkdownPipe", "ArtemisTranslatePipe", "NgbTooltipModule", "NgbTooltip", "TranslateDirective", "ButtonComponent", "encapsulation"]
}
