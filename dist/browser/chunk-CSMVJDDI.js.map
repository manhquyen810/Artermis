{
  "version": 3,
  "sources": ["src/main/webapp/app/localci/build-agents/build-agents.service.ts"],
  "sourcesContent": ["import { Injectable, inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { BuildAgentInformation } from 'app/entities/programming/build-agent-information.model';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class BuildAgentsService {\r\n    public adminResourceUrl = 'api/core/admin';\r\n\r\n    private readonly http = inject(HttpClient);\r\n\r\n    /**\r\n     * Get all build agents\r\n     */\r\n    getBuildAgentSummary(): Observable<BuildAgentInformation[]> {\r\n        return this.http.get<BuildAgentInformation[]>(`${this.adminResourceUrl}/build-agents`);\r\n    }\r\n\r\n    /**\r\n     * Get build agent details\r\n     */\r\n    getBuildAgentDetails(agentName: string): Observable<BuildAgentInformation> {\r\n        return this.http.get<BuildAgentInformation>(`${this.adminResourceUrl}/build-agent`, { params: { agentName } }).pipe(\r\n            catchError((err) => {\r\n                return throwError(() => new Error(`Failed to fetch build agent details ${agentName}\\n${err.message}`));\r\n            }),\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Pause Build Agent\r\n     */\r\n    pauseBuildAgent(agentName: string): Observable<void> {\r\n        const encodedAgentName = encodeURIComponent(agentName);\r\n        return this.http.put<void>(`${this.adminResourceUrl}/agents/${encodedAgentName}/pause`, null).pipe(\r\n            catchError((err) => {\r\n                return throwError(() => new Error(`Failed to pause build agent ${agentName}\\n${err.message}`));\r\n            }),\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Pause All Build Agents\r\n     */\r\n    pauseAllBuildAgents(): Observable<void> {\r\n        return this.http.put<void>(`${this.adminResourceUrl}/agents/pause-all`, null).pipe(\r\n            catchError((err) => {\r\n                return throwError(() => new Error(`Failed to pause build agents\\n${err.message}`));\r\n            }),\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Resume Build Agent\r\n     */\r\n    resumeBuildAgent(agentName: string): Observable<void> {\r\n        const encodedAgentName = encodeURIComponent(agentName);\r\n        return this.http.put<void>(`${this.adminResourceUrl}/agents/${encodedAgentName}/resume`, null).pipe(\r\n            catchError((err) => {\r\n                return throwError(() => new Error(`Failed to resume build agent ${agentName}\\n${err.message}`));\r\n            }),\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Resume all Build Agents\r\n     */\r\n    resumeAllBuildAgents(): Observable<void> {\r\n        return this.http.put<void>(`${this.adminResourceUrl}/agents/resume-all`, null).pipe(\r\n            catchError((err) => {\r\n                return throwError(() => new Error(`Failed to resume build agents\\n${err.message}`));\r\n            }),\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Clears distributed data. This includes BuildJobQueue, ProcessingJobs, resultQueue, build agent Information, docker image clean up.\r\n     */\r\n    clearDistributedData(): Observable<void> {\r\n        return this.http.delete<void>(`${this.adminResourceUrl}/clear-distributed-data`).pipe(\r\n            catchError((err) => {\r\n                return throwError(() => new Error(`Failed to clear distributed data\\n${err.message}`));\r\n            }),\r\n        );\r\n    }\r\n}\r\n"],
  "mappings": "uGAOA,IAAaA,GAAkB,IAAA,CAAzB,MAAOA,CAAkB,CACpBC,iBAAmB,iBAETC,KAAOC,EAAOC,CAAU,EAKzCC,sBAAoB,CAChB,OAAO,KAAKH,KAAKI,IAA6B,GAAG,KAAKL,gBAAgB,eAAe,CACzF,CAKAM,qBAAqBC,EAAiB,CAClC,OAAO,KAAKN,KAAKI,IAA2B,GAAG,KAAKL,gBAAgB,eAAgB,CAAEQ,OAAQ,CAAED,UAAAA,CAAS,CAAE,CAAE,EAAEE,KAC3GC,EAAYC,GACDC,EAAW,IAAM,IAAIC,MAAM,uCAAuCN,CAAS;EAAKI,EAAIG,OAAO,EAAE,CAAC,CACxG,CAAC,CAEV,CAKAC,gBAAgBR,EAAiB,CAC7B,IAAMS,EAAmBC,mBAAmBV,CAAS,EACrD,OAAO,KAAKN,KAAKiB,IAAU,GAAG,KAAKlB,gBAAgB,WAAWgB,CAAgB,SAAU,IAAI,EAAEP,KAC1FC,EAAYC,GACDC,EAAW,IAAM,IAAIC,MAAM,+BAA+BN,CAAS;EAAKI,EAAIG,OAAO,EAAE,CAAC,CAChG,CAAC,CAEV,CAKAK,qBAAmB,CACf,OAAO,KAAKlB,KAAKiB,IAAU,GAAG,KAAKlB,gBAAgB,oBAAqB,IAAI,EAAES,KAC1EC,EAAYC,GACDC,EAAW,IAAM,IAAIC,MAAM;EAAiCF,EAAIG,OAAO,EAAE,CAAC,CACpF,CAAC,CAEV,CAKAM,iBAAiBb,EAAiB,CAC9B,IAAMS,EAAmBC,mBAAmBV,CAAS,EACrD,OAAO,KAAKN,KAAKiB,IAAU,GAAG,KAAKlB,gBAAgB,WAAWgB,CAAgB,UAAW,IAAI,EAAEP,KAC3FC,EAAYC,GACDC,EAAW,IAAM,IAAIC,MAAM,gCAAgCN,CAAS;EAAKI,EAAIG,OAAO,EAAE,CAAC,CACjG,CAAC,CAEV,CAKAO,sBAAoB,CAChB,OAAO,KAAKpB,KAAKiB,IAAU,GAAG,KAAKlB,gBAAgB,qBAAsB,IAAI,EAAES,KAC3EC,EAAYC,GACDC,EAAW,IAAM,IAAIC,MAAM;EAAkCF,EAAIG,OAAO,EAAE,CAAC,CACrF,CAAC,CAEV,CAKAQ,sBAAoB,CAChB,OAAO,KAAKrB,KAAKsB,OAAa,GAAG,KAAKvB,gBAAgB,yBAAyB,EAAES,KAC7EC,EAAYC,GACDC,EAAW,IAAM,IAAIC,MAAM;EAAqCF,EAAIG,OAAO,EAAE,CAAC,CACxF,CAAC,CAEV,4CA9ESf,EAAkB,6BAAlBA,EAAkByB,QAAlBzB,EAAkB0B,UAAAC,WADL,MAAM,CAAA,SACnB3B,CAAkB,GAAA",
  "names": ["BuildAgentsService", "adminResourceUrl", "http", "inject", "HttpClient", "getBuildAgentSummary", "get", "getBuildAgentDetails", "agentName", "params", "pipe", "catchError", "err", "throwError", "Error", "message", "pauseBuildAgent", "encodedAgentName", "encodeURIComponent", "put", "pauseAllBuildAgents", "resumeBuildAgent", "resumeAllBuildAgents", "clearDistributedData", "delete", "factory", "\u0275fac", "providedIn"]
}
