{
  "version": 3,
  "sources": ["src/main/webapp/app/admin/lti-configuration/lti-configuration.service.ts"],
  "sourcesContent": ["import { Injectable, inject } from '@angular/core';\r\nimport { HttpClient, HttpParams, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { LtiPlatformConfiguration } from 'app/admin/lti-configuration/lti-configuration.model';\r\nimport { createRequestOption } from 'app/shared/util/request.util';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LtiConfigurationService {\r\n    private http = inject(HttpClient);\r\n\r\n    /**\r\n     * Sends a GET request to retrieve all lti platform configurations\r\n     */\r\n    query(req?: any): Observable<HttpResponse<LtiPlatformConfiguration[]>> {\r\n        const params: HttpParams = createRequestOption(req);\r\n        return this.http.get<LtiPlatformConfiguration[]>('api/lti/lti-platforms', {\r\n            params,\r\n            observe: 'response',\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Updates an LTI platform configuration.\r\n     * @param ltiPlatformConfiguration The configuration to update.\r\n     * @return Observable of the HTTP response.\r\n     */\r\n    addLtiPlatformConfiguration(ltiPlatformConfiguration: LtiPlatformConfiguration): Observable<HttpResponse<any>> {\r\n        return this.http.post<LtiPlatformConfiguration>(`api/lti/admin/lti-platform`, ltiPlatformConfiguration, { observe: 'response' });\r\n    }\r\n\r\n    /**\r\n     * Updates an LTI platform configuration.\r\n     * @param ltiPlatformConfiguration The configuration to update.\r\n     * @return Observable of the HTTP response.\r\n     */\r\n    updateLtiPlatformConfiguration(ltiPlatformConfiguration: LtiPlatformConfiguration): Observable<HttpResponse<any>> {\r\n        return this.http.put<LtiPlatformConfiguration>(`api/lti/admin/lti-platform`, ltiPlatformConfiguration, { observe: 'response' });\r\n    }\r\n\r\n    /**\r\n     * Delete a lti platform on the server using a DELETE request.\r\n     * @param platformId The platform id.\r\n     */\r\n    deleteLtiPlatform(platformId: number): Observable<HttpResponse<any>> {\r\n        return this.http.delete<any>(`api/lti/admin/lti-platform/${platformId}`, { observe: 'response' });\r\n    }\r\n\r\n    getLtiPlatformById(platformId: number): Observable<LtiPlatformConfiguration> {\r\n        return this.http.get<LtiPlatformConfiguration>(`api/lti/admin/lti-platform/${platformId}`);\r\n    }\r\n}\r\n"],
  "mappings": "iIAOA,IAAaA,GAAuB,IAAA,CAA9B,MAAOA,CAAuB,CACxBC,KAAOC,EAAOC,CAAU,EAKhCC,MAAMC,EAAS,CACX,IAAMC,EAAqBC,EAAoBF,CAAG,EAClD,OAAO,KAAKJ,KAAKO,IAAgC,wBAAyB,CACtEF,OAAAA,EACAG,QAAS,WACZ,CACL,CAOAC,4BAA4BC,EAAkD,CAC1E,OAAO,KAAKV,KAAKW,KAA+B,6BAA8BD,EAA0B,CAAEF,QAAS,UAAU,CAAE,CACnI,CAOAI,+BAA+BF,EAAkD,CAC7E,OAAO,KAAKV,KAAKa,IAA8B,6BAA8BH,EAA0B,CAAEF,QAAS,UAAU,CAAE,CAClI,CAMAM,kBAAkBC,EAAkB,CAChC,OAAO,KAAKf,KAAKgB,OAAY,8BAA8BD,CAAU,GAAI,CAAEP,QAAS,UAAU,CAAE,CACpG,CAEAS,mBAAmBF,EAAkB,CACjC,OAAO,KAAKf,KAAKO,IAA8B,8BAA8BQ,CAAU,EAAE,CAC7F,4CA1CShB,EAAuB,6BAAvBA,EAAuBmB,QAAvBnB,EAAuBoB,UAAAC,WADV,MAAM,CAAA,SACnBrB,CAAuB,GAAA",
  "names": ["LtiConfigurationService", "http", "inject", "HttpClient", "query", "req", "params", "createRequestOption", "get", "observe", "addLtiPlatformConfiguration", "ltiPlatformConfiguration", "post", "updateLtiPlatformConfiguration", "put", "deleteLtiPlatform", "platformId", "delete", "getLtiPlatformById", "factory", "\u0275fac", "providedIn"]
}
