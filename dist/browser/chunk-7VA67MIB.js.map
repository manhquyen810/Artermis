{
  "version": 3,
  "sources": ["src/main/webapp/app/shared/fullscreen/fullscreen.component.ts", "src/main/webapp/app/shared/fullscreen/fullscreen.component.html"],
  "sourcesContent": ["import { Component, ElementRef, Input, inject } from '@angular/core';\r\nimport { faCompress } from '@fortawesome/free-solid-svg-icons';\r\nimport { enterFullscreen, exitFullscreen, isFullScreen } from 'app/shared/util/fullscreen.util';\r\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { ArtemisTranslatePipe } from '../pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-fullscreen',\r\n    templateUrl: './fullscreen.component.html',\r\n    styleUrls: ['./fullscreen.scss'],\r\n    imports: [NgbTooltip, FaIconComponent, ArtemisTranslatePipe],\r\n})\r\nexport class FullscreenComponent {\r\n    private fullScreenWrapper = inject(ElementRef);\r\n\r\n    @Input()\r\n    position: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right' = 'top-right';\r\n\r\n    @Input()\r\n    mode: 'compact' | 'extended' = 'extended';\r\n\r\n    // Icons\r\n    faCompress = faCompress;\r\n\r\n    /**\r\n     * check current state and toggle fullscreen\r\n     */\r\n    toggleFullscreen() {\r\n        if (this.isFullScreen()) {\r\n            exitFullscreen();\r\n        } else {\r\n            const element: any = this.fullScreenWrapper.nativeElement;\r\n            enterFullscreen(element);\r\n        }\r\n    }\r\n\r\n    isFullScreen() {\r\n        return isFullScreen();\r\n    }\r\n}\r\n", "<ng-container>\r\n    <ng-content />\r\n    <button\r\n        type=\"button\"\r\n        class=\"btn d-none d-sm-block\"\r\n        style=\"position: absolute\"\r\n        [class.btn-primary]=\"mode === 'extended'\"\r\n        [class.mb-2]=\"mode === 'extended'\"\r\n        [class.btn-sm]=\"mode === 'compact'\"\r\n        [class.top-left]=\"position === 'top-left'\"\r\n        [class.top-right]=\"position === 'top-right'\"\r\n        [class.bottom-left]=\"position === 'bottom-left'\"\r\n        [class.bottom-right]=\"position === 'bottom-right'\"\r\n        (click)=\"toggleFullscreen()\"\r\n        [ngbTooltip]=\"'artemisApp.modelingEditor.fullscreen.tooltip' | artemisTranslate\"\r\n    >\r\n        @switch (mode) {\r\n            @case ('compact') {\r\n                <fa-icon [icon]=\"faCompress\" />\r\n            }\r\n            @case ('extended') {\r\n                <span>\r\n                    @if (!isFullScreen()) {\r\n                        {{ 'artemisApp.modelingEditor.fullscreen.enterButtonText' | artemisTranslate }}\r\n                    } @else {\r\n                        {{ 'artemisApp.modelingEditor.fullscreen.exitButtonText' | artemisTranslate }}\r\n                    }\r\n                </span>\r\n            }\r\n        }\r\n    </button>\r\n</ng-container>\r\n"],
  "mappings": "ocCkBgBA,EAAA,EAAA;iBAAA,EAAAC,EAAA,EAAA,UAAA,CAAA,EACJD,EAAA,EAAA;aAAA,kBADaE,EAAA,EAAAC,EAAA,OAAAC,EAAAC,UAAA,yBAKDL,EAAA,CAAA,gCAAAM,EAAA;0BAAAC,EAAA,EAAA,EAAA,sDAAA,EAAA;qBAAA,wBAEAP,EAAA,CAAA,gCAAAM,EAAA;0BAAAC,EAAA,EAAA,EAAA,qDAAA,EAAA;qBAAA,2BAJRP,EAAA,EAAA;iBAAA,EAAAQ,EAAA,EAAA,MAAA,EACIR,EAAA,EAAA;qBAAA,EAAAS,EAAA,EAAAC,EAAA,EAAA,CAAA,EAAuB,EAAAC,EAAA,EAAA,CAAA,EAK3BC,EAAA,EACJZ,EAAA,EAAA;aAAA,kBANQE,EAAA,CAAA,EAAAW,EAAAT,EAAAU,aAAA,EAAA,EAAA,CAAA,GDTpB,IAAaC,GAAmB,IAAA,CAA1B,MAAOA,CAAmB,CACpBC,kBAAoBC,EAAOC,CAAU,EAG7CC,SAAsE,YAGtEC,KAA+B,WAG/Bf,WAAaA,EAKbgB,kBAAgB,CACZ,GAAI,KAAKP,aAAY,EACjBQ,EAAc,MACX,CACH,IAAMC,EAAe,KAAKP,kBAAkBQ,cAC5CC,EAAgBF,CAAO,CAC3B,CACJ,CAEAT,cAAY,CACR,OAAOA,EAAY,CACvB,4CA1BSC,EAAmB,2BAAnBA,EAAmBW,UAAA,CAAA,CAAA,gBAAA,CAAA,EAAAC,OAAA,CAAAR,SAAA,WAAAC,KAAA,MAAA,EAAAQ,mBAAAC,EAAAC,MAAA,GAAAC,KAAA,GAAAC,OAAA,CAAA,CAAA,OAAA,SAAA,EAAA,MAAA,SAAA,aAAA,EAAA,WAAA,WAAA,EAAA,QAAA,YAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,IAAAD,EAAA,QCbhCE,EAAA,CAAA,EACIpC,EAAA,EAAA;KAAA,EAAAqC,EAAA,CAAA,EACArC,EAAA,EAAA;KAAA,EAAAQ,EAAA,EAAA,SAAA,CAAA,0BAWI8B,EAAA,QAAA,UAAA,CAAA,OAASH,EAAAd,iBAAA,CAAkB,CAAA,EAG3BrB,EAAA,EAAA;SAAA,EACIS,EAAA,EAAA8B,EAAA,EAAA,CAAA,EAAmB,EAAAC,EAAA,EAAA,CAAA,EAa3BxC,EAAA,EAAA;KAAA,EAAAY,EAAA,EACJZ,EAAA,GAAA;CAAA,MACAA,EAAA,GAAA;CAAA,cA1BQE,EAAA,CAAA,EAAAuC,EAAA,cAAAN,EAAAf,OAAA,UAAA,EAAyC,OAAAe,EAAAf,OAAA,UAAA,EACP,SAAAe,EAAAf,OAAA,SAAA,EACC,WAAAe,EAAAhB,WAAA,UAAA,EACO,YAAAgB,EAAAhB,WAAA,WAAA,EACE,cAAAgB,EAAAhB,WAAA,aAAA,EACI,eAAAgB,EAAAhB,WAAA,cAAA,EAGhDhB,EAAA,aAAAI,EAAA,EAAA,GAAA,8CAAA,CAAA,EAEAL,EAAA,CAAA,EAAAW,GAAA6B,EAAAP,EAAAf,QAAA,UAAS,EAAAsB,IAAT,WAAU,EAAA,EAAA,kBDLJC,EAAYC,EAAiBC,CAAoB,EAAAC,OAAA,CAAA,kbAAA,CAAA,CAAA,SAElD/B,CAAmB,GAAA",
  "names": ["\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275property", "ctx_r0", "faCompress", "\u0275\u0275textInterpolate1", "\u0275\u0275pipeBind1", "\u0275\u0275elementStart", "\u0275\u0275template", "FullscreenComponent_Case_8_Conditional_3_Template", "FullscreenComponent_Case_8_Conditional_4_Template", "\u0275\u0275elementEnd", "\u0275\u0275conditional", "isFullScreen", "FullscreenComponent", "fullScreenWrapper", "inject", "ElementRef", "position", "mode", "toggleFullscreen", "exitFullscreen", "element", "nativeElement", "enterFullscreen", "selectors", "inputs", "ngContentSelectors", "_c0", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275elementContainerStart", "\u0275\u0275projection", "\u0275\u0275listener", "FullscreenComponent_Case_7_Template", "FullscreenComponent_Case_8_Template", "\u0275\u0275classProp", "tmp_8_0", "NgbTooltip", "FaIconComponent", "ArtemisTranslatePipe", "styles"]
}
