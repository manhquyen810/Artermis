{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/fsharp/fsharp.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.2(404545bded1df6ffa41ea0af4e8ddb219018c6c1)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/fsharp/fsharp.ts\nvar conf = {\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"(*\", \"*)\"]\n  },\n  brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]],\n  autoClosingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }],\n  surroundingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*//\\\\s*#region\\\\b|^\\\\s*\\\\(\\\\*\\\\s*#region(.*)\\\\*\\\\)\"),\n      end: new RegExp(\"^\\\\s*//\\\\s*#endregion\\\\b|^\\\\s*\\\\(\\\\*\\\\s*#endregion\\\\s*\\\\*\\\\)\")\n    }\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".fs\",\n  keywords: [\"abstract\", \"and\", \"atomic\", \"as\", \"assert\", \"asr\", \"base\", \"begin\", \"break\", \"checked\", \"component\", \"const\", \"constraint\", \"constructor\", \"continue\", \"class\", \"default\", \"delegate\", \"do\", \"done\", \"downcast\", \"downto\", \"elif\", \"else\", \"end\", \"exception\", \"eager\", \"event\", \"external\", \"extern\", \"false\", \"finally\", \"for\", \"fun\", \"function\", \"fixed\", \"functor\", \"global\", \"if\", \"in\", \"include\", \"inherit\", \"inline\", \"interface\", \"internal\", \"land\", \"lor\", \"lsl\", \"lsr\", \"lxor\", \"lazy\", \"let\", \"match\", \"member\", \"mod\", \"module\", \"mutable\", \"namespace\", \"method\", \"mixin\", \"new\", \"not\", \"null\", \"of\", \"open\", \"or\", \"object\", \"override\", \"private\", \"parallel\", \"process\", \"protected\", \"pure\", \"public\", \"rec\", \"return\", \"static\", \"sealed\", \"struct\", \"sig\", \"then\", \"to\", \"true\", \"tailcall\", \"trait\", \"try\", \"type\", \"upcast\", \"use\", \"val\", \"void\", \"virtual\", \"volatile\", \"when\", \"while\", \"with\", \"yield\"],\n  // we include these common regular expressions\n  symbols: /[=><!~?:&|+\\-*\\^%;\\.,\\/]+/,\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  integersuffix: /[uU]?[yslnLI]?/,\n  floatsuffix: /[fFmM]?/,\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [\n    // identifiers and keywords\n    [/[a-zA-Z_]\\w*/, {\n      cases: {\n        \"@keywords\": {\n          token: \"keyword.$0\"\n        },\n        \"@default\": \"identifier\"\n      }\n    }],\n    // whitespace\n    {\n      include: \"@whitespace\"\n    },\n    // [< attributes >].\n    [/\\[<.*>\\]/, \"annotation\"],\n    // Preprocessor directive\n    [/^#(if|else|endif)/, \"keyword\"],\n    // delimiters and operators\n    [/[{}()\\[\\]]/, \"@brackets\"], [/[<>](?!@symbols)/, \"@brackets\"], [/@symbols/, \"delimiter\"],\n    // numbers\n    [/\\d*\\d+[eE]([\\-+]?\\d+)?(@floatsuffix)/, \"number.float\"], [/\\d*\\.\\d+([eE][\\-+]?\\d+)?(@floatsuffix)/, \"number.float\"], [/0x[0-9a-fA-F]+LF/, \"number.float\"], [/0x[0-9a-fA-F]+(@integersuffix)/, \"number.hex\"], [/0b[0-1]+(@integersuffix)/, \"number.bin\"], [/\\d+(@integersuffix)/, \"number\"],\n    // delimiter: after number because of .\\d floats\n    [/[;,.]/, \"delimiter\"],\n    // strings\n    [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"],\n    // non-teminated string\n    [/\"\"\"/, \"string\", '@string.\"\"\"'], [/\"/, \"string\", '@string.\"'],\n    // literal string\n    [/\\@\"/, {\n      token: \"string.quote\",\n      next: \"@litstring\"\n    }],\n    // characters\n    [/'[^\\\\']'B?/, \"string\"], [/(')(@escapes)(')/, [\"string\", \"string.escape\", \"string\"]], [/'/, \"string.invalid\"]],\n    whitespace: [[/[ \\t\\r\\n]+/, \"\"], [/\\(\\*(?!\\))/, \"comment\", \"@comment\"], [/\\/\\/.*$/, \"comment\"]],\n    comment: [[/[^*(]+/, \"comment\"], [/\\*\\)/, \"comment\", \"@pop\"], [/\\*/, \"comment\"], [/\\(\\*\\)/, \"comment\"], [/\\(/, \"comment\"]],\n    string: [[/[^\\\\\"]+/, \"string\"], [/@escapes/, \"string.escape\"], [/\\\\./, \"string.escape.invalid\"], [/(\"\"\"|\"B?)/, {\n      cases: {\n        \"$#==$S2\": {\n          token: \"string\",\n          next: \"@pop\"\n        },\n        \"@default\": \"string\"\n      }\n    }]],\n    litstring: [[/[^\"]+/, \"string\"], [/\"\"/, \"string.escape\"], [/\"/, {\n      token: \"string.quote\",\n      next: \"@pop\"\n    }]]\n  }\n};\nexport { conf, language };"],"mappings":"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","names":["conf","language"],"x_google_ignoreList":[0]}