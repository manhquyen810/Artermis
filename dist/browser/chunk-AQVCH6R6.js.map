{
  "version": 3,
  "sources": ["src/main/webapp/app/shared/components/course-exam-archive-button/course-exam-archive-button.component.ts", "src/main/webapp/app/shared/components/course-exam-archive-button/course-exam-archive-button.component.html"],
  "sourcesContent": ["import { Component, Input, OnDestroy, OnInit, TemplateRef, ViewChild, inject } from '@angular/core';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { CourseManagementService } from 'app/course/manage/course-management.service';\r\nimport { WebsocketService } from 'app/core/websocket/websocket.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { tap } from 'rxjs/operators';\r\nimport { ExamManagementService } from 'app/exam/manage/exam-management.service';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { Exam } from 'app/entities/exam/exam.model';\r\nimport dayjs from 'dayjs/esm';\r\nimport { ButtonSize } from '../button.component';\r\nimport { ActionType } from 'app/shared/delete-dialog/delete-dialog.model';\r\nimport { Subject } from 'rxjs';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\nimport { faArchive, faCircleNotch, faDownload, faEraser } from '@fortawesome/free-solid-svg-icons';\r\nimport { FeatureToggle } from 'app/shared/feature-toggle/feature-toggle.service';\r\nimport { TranslateDirective } from '../../language/translate.directive';\r\nimport { FeatureToggleDirective } from '../../feature-toggle/feature-toggle.directive';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { DeleteButtonDirective } from '../../delete-dialog/delete-button.directive';\r\n\r\nexport type CourseExamArchiveState = {\r\n    exportState: 'COMPLETED' | 'RUNNING' | 'COMPLETED_WITH_WARNINGS' | 'COMPLETED_WITH_ERRORS';\r\n    message: string;\r\n    subMessage?: string;\r\n};\r\n\r\n@Component({\r\n    selector: 'jhi-course-exam-archive-button',\r\n    templateUrl: './course-exam-archive-button.component.html',\r\n    styleUrls: ['./course-exam-archive-button.component.scss'],\r\n    styles: [':host {display: contents}'],\r\n    imports: [TranslateDirective, FeatureToggleDirective, FaIconComponent, DeleteButtonDirective],\r\n})\r\nexport class CourseExamArchiveButtonComponent implements OnInit, OnDestroy {\r\n    private courseService = inject(CourseManagementService);\r\n    private examService = inject(ExamManagementService);\r\n    private alertService = inject(AlertService);\r\n    private websocketService = inject(WebsocketService);\r\n    private translateService = inject(TranslateService);\r\n    private modalService = inject(NgbModal);\r\n    private accountService = inject(AccountService);\r\n\r\n    ButtonSize = ButtonSize;\r\n    ActionType = ActionType;\r\n    readonly FeatureToggle = FeatureToggle;\r\n\r\n    @Input()\r\n    archiveMode: 'Exam' | 'Course' = 'Course';\r\n\r\n    @Input()\r\n    course: Course;\r\n\r\n    @Input()\r\n    exam?: Exam;\r\n\r\n    @ViewChild('archiveCompleteWithWarningsModal', { static: false })\r\n    archiveCompleteWithWarningsModal: TemplateRef<any>;\r\n\r\n    @ViewChild('archiveConfirmModal', { static: false })\r\n    archiveConfirmModal: TemplateRef<any>;\r\n\r\n    isBeingArchived = false;\r\n    archiveButtonText = '';\r\n    archiveWarnings: string[] = [];\r\n    displayDownloadArchiveButton = false;\r\n\r\n    private dialogErrorSource = new Subject<string>();\r\n    dialogError$ = this.dialogErrorSource.asObservable();\r\n\r\n    // Icons\r\n    faDownload = faDownload;\r\n    faCircleNotch = faCircleNotch;\r\n    faEraser = faEraser;\r\n    faArchive = faArchive;\r\n\r\n    ngOnInit() {\r\n        if (!this.course && !this.exam) {\r\n            // Component isn't initialized\r\n            return;\r\n        }\r\n\r\n        this.registerArchiveWebsocket();\r\n        this.archiveButtonText = this.getArchiveButtonText();\r\n        this.displayDownloadArchiveButton = this.canDownloadArchive();\r\n\r\n        // update the span title on each language change\r\n        this.translateService.onLangChange.subscribe(() => {\r\n            if (!this.isBeingArchived) {\r\n                this.archiveButtonText = this.getArchiveButtonText();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * On destroy unsubscribe all subscriptions.\r\n     */\r\n    ngOnDestroy() {\r\n        this.websocketService.unsubscribe(this.getArchiveStateTopic());\r\n        this.dialogErrorSource.unsubscribe();\r\n    }\r\n\r\n    registerArchiveWebsocket() {\r\n        const topic = this.getArchiveStateTopic();\r\n        this.websocketService.subscribe(topic);\r\n        this.websocketService\r\n            .receive(topic)\r\n            .pipe(tap((archiveState: CourseExamArchiveState) => this.handleArchiveStateChanges(archiveState)))\r\n            .subscribe();\r\n    }\r\n\r\n    handleArchiveStateChanges(courseArchiveState: CourseExamArchiveState) {\r\n        const { exportState, message, subMessage } = courseArchiveState;\r\n        this.isBeingArchived = exportState === 'RUNNING';\r\n        this.archiveButtonText = exportState === 'RUNNING' ? message : this.getArchiveButtonText();\r\n        if (exportState === 'COMPLETED') {\r\n            this.alertService.success(this.getArchiveSuccessText());\r\n            this.reloadCourseOrExam();\r\n        } else if (exportState === 'COMPLETED_WITH_WARNINGS') {\r\n            this.archiveWarnings = message.split('\\n');\r\n            this.openModal(this.archiveCompleteWithWarningsModal);\r\n            this.reloadCourseOrExam();\r\n        } else if (exportState === 'COMPLETED_WITH_ERRORS') {\r\n            this.alertService.error(this.getArchiveErrorText(subMessage!));\r\n        }\r\n    }\r\n\r\n    reloadCourseOrExam() {\r\n        if (this.archiveMode === 'Exam' && this.exam) {\r\n            this.examService.find(this.course.id!, this.exam.id!).subscribe((res) => {\r\n                this.exam = res.body!;\r\n                this.displayDownloadArchiveButton = this.canDownloadArchive();\r\n            });\r\n        } else {\r\n            this.courseService.find(this.course.id!).subscribe((res) => {\r\n                this.course = res.body!;\r\n                this.displayDownloadArchiveButton = this.canDownloadArchive();\r\n            });\r\n        }\r\n    }\r\n\r\n    getArchiveSuccessText() {\r\n        if (this.archiveMode === 'Course') {\r\n            return this.translateService.instant('artemisApp.courseExamArchive.archiveCourseSuccess');\r\n        } else {\r\n            return this.translateService.instant('artemisApp.courseExamArchive.archiveExamSuccess');\r\n        }\r\n    }\r\n\r\n    getArchiveErrorText(message: string) {\r\n        if (this.archiveMode === 'Course') {\r\n            return this.translateService.instant(`artemisApp.courseExamArchive.archiveCourseError.${message}`, { courseName: this.course.title });\r\n        } else {\r\n            return this.translateService.instant('artemisApp.courseExamArchive.archiveExamError', { examName: this.exam?.title });\r\n        }\r\n    }\r\n\r\n    getArchiveButtonText() {\r\n        if (this.archiveMode === 'Course') {\r\n            return this.translateService.instant('artemisApp.courseExamArchive.archiveCourse');\r\n        } else {\r\n            return this.translateService.instant('artemisApp.courseExamArchive.archiveExam');\r\n        }\r\n    }\r\n\r\n    getArchiveStateTopic() {\r\n        if (this.archiveMode === 'Exam' && this.exam) {\r\n            return '/topic/exams/' + this.exam.id + '/export';\r\n        } else {\r\n            return '/topic/courses/' + this.course.id + '/export-course';\r\n        }\r\n    }\r\n\r\n    canArchive() {\r\n        let isOver: boolean;\r\n        if (this.archiveMode === 'Exam' && this.exam) {\r\n            isOver = !!this.exam.endDate?.isBefore(dayjs());\r\n        } else {\r\n            isOver = !!this.course.endDate?.isBefore(dayjs());\r\n        }\r\n        return this.accountService.isAtLeastInstructorInCourse(this.course) && isOver;\r\n    }\r\n\r\n    openModal(modalRef: TemplateRef<any>) {\r\n        this.modalService.open(modalRef).result.then(\r\n            (result: string) => {\r\n                if (result === 'archive-confirm' && this.canDownloadArchive()) {\r\n                    this.openModal(this.archiveConfirmModal);\r\n                }\r\n                if (result === 'archive' || !this.canDownloadArchive()) {\r\n                    this.archive();\r\n                }\r\n            },\r\n            () => {},\r\n        );\r\n    }\r\n\r\n    archive() {\r\n        if (this.archiveMode === 'Exam' && this.exam) {\r\n            this.examService.archiveExam(this.course.id!, this.exam.id!).subscribe();\r\n        } else {\r\n            this.courseService.archiveCourse(this.course.id!).subscribe();\r\n        }\r\n    }\r\n\r\n    canDownloadArchive() {\r\n        let hasArchive: boolean;\r\n        if (this.archiveMode === 'Exam' && this.exam) {\r\n            hasArchive = (this.exam.examArchivePath?.length ?? 0) > 0;\r\n        } else {\r\n            hasArchive = (this.course.courseArchivePath?.length ?? 0) > 0;\r\n        }\r\n        // You can only download one if the path to the archive is present\r\n        return this.accountService.isAtLeastInstructorInCourse(this.course) && hasArchive;\r\n    }\r\n\r\n    downloadArchive() {\r\n        if (this.archiveMode === 'Exam' && this.exam) {\r\n            this.examService.downloadExamArchive(this.course.id!, this.exam.id!);\r\n        } else {\r\n            this.courseService.downloadCourseArchive(this.course.id!);\r\n        }\r\n    }\r\n\r\n    canCleanup() {\r\n        let hasBeenArchived: boolean;\r\n        if (this.archiveMode === 'Exam' && this.exam) {\r\n            hasBeenArchived = !!this.exam.examArchivePath && this.exam.examArchivePath.length > 0;\r\n        } else {\r\n            hasBeenArchived = !!this.course.courseArchivePath && this.course.courseArchivePath.length > 0;\r\n        }\r\n        // A course / exam can only be cleaned up if the course / exam has been archived.\r\n        return this.accountService.isAtLeastInstructorInCourse(this.course) && hasBeenArchived;\r\n    }\r\n\r\n    cleanup() {\r\n        if (this.archiveMode === 'Exam' && this.exam) {\r\n            this.examService.cleanupExam(this.course.id!, this.exam.id!).subscribe({\r\n                next: () => {\r\n                    this.alertService.success('artemisApp.programmingExercise.cleanup.successMessageCleanup');\r\n                    this.dialogErrorSource.next('');\r\n                },\r\n                error: (error) => {\r\n                    this.dialogErrorSource.next(error.error.title);\r\n                },\r\n            });\r\n        } else {\r\n            this.courseService.cleanupCourse(this.course.id!).subscribe({\r\n                next: () => {\r\n                    this.alertService.success('artemisApp.programmingExercise.cleanup.successMessageCleanup');\r\n                    this.dialogErrorSource.next('');\r\n                },\r\n                error: (error) => {\r\n                    this.dialogErrorSource.next(error.error.title);\r\n                },\r\n            });\r\n        }\r\n    }\r\n}\r\n", "<ng-container>\r\n    <ng-template #archiveCompleteWithWarningsModal let-modal>\r\n        <div class=\"modal-header\">\r\n            <h4 class=\"modal-title\">\r\n                @if (archiveMode === 'Course') {\r\n                    <span [jhiTranslate]=\"'artemisApp.courseExamArchive.archiveCourseSuccess'\">The course has been archived!</span>\r\n                }\r\n                @if (archiveMode === 'Exam') {\r\n                    <span [jhiTranslate]=\"'artemisApp.courseExamArchive.archiveExamSuccess'\">The exam has been archived!</span>\r\n                }\r\n            </h4>\r\n            <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"modal.dismiss()\"></button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n            <ng-container>\r\n                <p [jhiTranslate]=\"'artemisApp.courseExamArchive.archiveSuccessWithWarnings'\">The archival process has completed with the following warnings:</p>\r\n                <br />\r\n                <ul style=\"height: 200px; overflow: auto\">\r\n                    @for (item of archiveWarnings; track item) {\r\n                        <li>{{ item }}</li>\r\n                    }\r\n                </ul>\r\n            </ng-container>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-warning\" (click)=\"modal.close()\">Close</button>\r\n        </div>\r\n    </ng-template>\r\n    <ng-template #archiveWarningPopup let-modal>\r\n        <div class=\"modal-header\">\r\n            <h4 class=\"modal-title\">\r\n                @if (archiveMode === 'Course') {\r\n                    <span [jhiTranslate]=\"'artemisApp.courseExamArchive.popup.course.title'\">Confirm Archive Course Operation</span>\r\n                }\r\n                @if (archiveMode === 'Exam') {\r\n                    <span [jhiTranslate]=\"'artemisApp.courseExamArchive.popup.exam.title'\">Confirm Archive Exam Operation</span>\r\n                }\r\n            </h4>\r\n            <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"modal.dismiss()\"></button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n            @if (archiveMode === 'Course') {\r\n                <p [jhiTranslate]=\"'artemisApp.courseExamArchive.popup.course.question'\" [translateValues]=\"{ title: course.title }\">Are you sure you want to archive??</p>\r\n                <p [jhiTranslate]=\"'artemisApp.courseExamArchive.popup.course.statement1'\">\r\n                    The process will compress all student code repositories, file upload exercises, modeling exercises, and text exercises for exercises and exams.\r\n                </p>\r\n            }\r\n            @if (archiveMode === 'Exam') {\r\n                <p [jhiTranslate]=\"'artemisApp.courseExamArchive.popup.exam.question'\" [translateValues]=\"{ title: exam?.title || '' }\">Are you sure you want to archive??</p>\r\n                <p [jhiTranslate]=\"'artemisApp.courseExamArchive.popup.exam.statement1'\">\r\n                    The process will compress all student code repositories, file upload exercises, modeling exercises, and text exercises in the exam.\r\n                </p>\r\n            }\r\n            <p [jhiTranslate]=\"'artemisApp.courseExamArchive.popup.statement2'\">\r\n                This process can take several hours depending on the number of students and programming exercises and will take up many server resources. Please start this process\r\n                only once when the server load is low (e.g. early in the morning)\r\n            </p>\r\n            <p [jhiTranslate]=\"'artemisApp.courseExamArchive.popup.footerStatement'\">\r\n                You will receive a notification when the process is finished. Then you can download the archive as zip file on this page.\r\n            </p>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n            <button\r\n                type=\"button\"\r\n                class=\"btn btn-warning\"\r\n                (click)=\"modal.close('archive-confirm')\"\r\n                [jhiTranslate]=\"archiveMode === 'Course' ? 'artemisApp.courseExamArchive.archiveCourse' : 'artemisApp.courseExamArchive.archiveExam'\"\r\n            >\r\n                Archive\r\n            </button>\r\n        </div>\r\n    </ng-template>\r\n    <ng-template #archiveConfirmModal let-modal>\r\n        <div class=\"modal-header\">\r\n            <h4 class=\"modal-title\">\r\n                <span [jhiTranslate]=\"'artemisApp.courseExamArchive.confirmArchive.title'\">Warning: an archive already exists!</span>\r\n            </h4>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n            <p [jhiTranslate]=\"'artemisApp.courseExamArchive.confirmArchive.message'\">\r\n                Warning! The course has already been archived. If you continue, the archive will be overwritten! Are you sure you want to continue?\r\n            </p>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-warning\" (click)=\"modal.close('archive')\" [jhiTranslate]=\"'global.generic.yes'\">Yes</button>\r\n            <button type=\"button\" class=\"btn btn-success\" [jhiTranslate]=\"'global.generic.no'\" (click)=\"modal.dismiss()\">No</button>\r\n        </div>\r\n    </ng-template>\r\n    @if (canArchive()) {\r\n        <button\r\n            [jhiFeatureToggle]=\"FeatureToggle.Exports\"\r\n            [overwriteDisabled]=\"isBeingArchived\"\r\n            type=\"button\"\r\n            [attr.data-mode]=\"archiveMode\"\r\n            id=\"archiveButton\"\r\n            class=\"btn btn-warning\"\r\n            (click)=\"openModal(archiveWarningPopup)\"\r\n        >\r\n            <fa-icon [hidden]=\"!isBeingArchived\" animation=\"spin\" [icon]=\"faCircleNotch\" />\r\n            <fa-icon [hidden]=\"isBeingArchived\" [icon]=\"faArchive\" />&nbsp;\r\n            <span>{{ archiveButtonText }}</span>\r\n        </button>\r\n    }\r\n    @if (displayDownloadArchiveButton) {\r\n        <button [disabled]=\"isBeingArchived\" type=\"button\" [attr.data-mode]=\"archiveMode\" class=\"btn btn-primary\" (click)=\"downloadArchive()\">\r\n            <fa-icon [icon]=\"faDownload\" />&nbsp;\r\n            <span jhiTranslate=\"artemisApp.courseExamArchive.downloadArchive\"></span>\r\n        </button>\r\n    }\r\n    @if (canCleanup() && archiveMode === 'Course') {\r\n        <button\r\n            [disabled]=\"isBeingArchived\"\r\n            [attr.data-mode]=\"archiveMode\"\r\n            jhiDeleteButton\r\n            [buttonSize]=\"ButtonSize.MEDIUM\"\r\n            [actionType]=\"ActionType.Cleanup\"\r\n            [entityTitle]=\"course.title!\"\r\n            deleteQuestion=\"artemisApp.course.cleanup.question\"\r\n            (delete)=\"cleanup()\"\r\n            [dialogError]=\"dialogError$\"\r\n            deleteConfirmationText=\"artemisApp.course.delete.typeNameToConfirm\"\r\n            style=\"margin-right: 0 !important\"\r\n        >\r\n            <fa-icon [icon]=\"faEraser\" />\r\n        </button>\r\n    }\r\n    @if (canCleanup() && archiveMode === 'Exam') {\r\n        <button\r\n            [disabled]=\"isBeingArchived\"\r\n            [attr.data-mode]=\"archiveMode\"\r\n            jhiDeleteButton\r\n            [buttonSize]=\"ButtonSize.MEDIUM\"\r\n            [actionType]=\"ActionType.Cleanup\"\r\n            [entityTitle]=\"exam!.title!\"\r\n            deleteQuestion=\"artemisApp.exam.cleanup.question\"\r\n            (delete)=\"cleanup()\"\r\n            [dialogError]=\"dialogError$\"\r\n            deleteConfirmationText=\"artemisApp.examManagement.delete.typeNameToConfirm\"\r\n            style=\"margin-right: 0 !important\"\r\n        >\r\n            <fa-icon [icon]=\"faEraser\" />\r\n        </button>\r\n    }\r\n</ng-container>\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "\u0275\u0275textInterpolate", "item_r3", "\u0275\u0275template", "CourseExamArchiveButtonComponent_ng_template_2_Conditional_5_Template", "CourseExamArchiveButtonComponent_ng_template_2_Conditional_6_Template", "\u0275\u0275listener", "modal_r2", "\u0275\u0275restoreView", "_r1", "$implicit", "\u0275\u0275resetView", "dismiss", "\u0275\u0275elementContainerStart", "\u0275\u0275element", "\u0275\u0275repeaterCreate", "CourseExamArchiveButtonComponent_ng_template_2_For_23_Template", "\u0275\u0275repeaterTrackByIdentity", "close", "\u0275\u0275conditional", "ctx_r3", "archiveMode", "\u0275\u0275repeater", "archiveWarnings", "\u0275\u0275pureFunction1", "_c2", "course", "title", "exam", "CourseExamArchiveButtonComponent_ng_template_5_Conditional_5_Template", "CourseExamArchiveButtonComponent_ng_template_5_Conditional_6_Template", "modal_r6", "_r5", "CourseExamArchiveButtonComponent_ng_template_5_Conditional_13_Template", "CourseExamArchiveButtonComponent_ng_template_5_Conditional_14_Template", "modal_r8", "_r7", "_r9", "\u0275\u0275nextContext", "archiveWarningPopup_r10", "\u0275\u0275reference", "openModal", "FeatureToggle", "Exports", "isBeingArchived", "faCircleNotch", "faArchive", "archiveButtonText", "_r11", "downloadArchive", "faDownload", "_r12", "cleanup", "ButtonSize", "MEDIUM", "ActionType", "Cleanup", "dialogError$", "faEraser", "_r13", "CourseExamArchiveButtonComponent", "courseService", "inject", "CourseManagementService", "examService", "ExamManagementService", "alertService", "AlertService", "websocketService", "WebsocketService", "translateService", "TranslateService", "modalService", "NgbModal", "accountService", "AccountService", "archiveCompleteWithWarningsModal", "archiveConfirmModal", "displayDownloadArchiveButton", "dialogErrorSource", "Subject", "asObservable", "ngOnInit", "registerArchiveWebsocket", "getArchiveButtonText", "canDownloadArchive", "onLangChange", "subscribe", "ngOnDestroy", "unsubscribe", "getArchiveStateTopic", "topic", "receive", "pipe", "tap", "archiveState", "handleArchiveStateChanges", "courseArchiveState", "exportState", "message", "subMessage", "success", "getArchiveSuccessText", "reloadCourseOrExam", "split", "error", "getArchiveErrorText", "find", "id", "res", "body", "instant", "courseName", "examName", "canArchive", "isOver", "endDate", "isBefore", "dayjs", "isAtLeastInstructorInCourse", "modalRef", "open", "result", "then", "archive", "archiveExam", "archiveCourse", "hasArchive", "examArchivePath", "length", "courseArchivePath", "downloadExamArchive", "downloadCourseArchive", "canCleanup", "hasBeenArchived", "cleanupExam", "next", "cleanupCourse", "selectors", "viewQuery", "rf", "ctx", "CourseExamArchiveButtonComponent_ng_template_2_Template", "\u0275\u0275templateRefExtractor", "CourseExamArchiveButtonComponent_ng_template_5_Template", "CourseExamArchiveButtonComponent_ng_template_8_Template", "CourseExamArchiveButtonComponent_Conditional_11_Template", "CourseExamArchiveButtonComponent_Conditional_12_Template", "CourseExamArchiveButtonComponent_Conditional_13_Template", "CourseExamArchiveButtonComponent_Conditional_14_Template", "TranslateDirective", "FeatureToggleDirective", "FaIconComponent", "DeleteButtonDirective", "styles"]
}
