{
  "version": 3,
  "sources": ["src/main/webapp/app/admin/metrics/metrics.model.ts"],
  "sourcesContent": ["export interface Metrics {\r\n    jvm: { [key: string]: JvmMetrics };\r\n    databases: Databases;\r\n    'http.server.requests': HttpServerRequests;\r\n    cache: { [key: string]: CacheMetrics };\r\n    garbageCollector: GarbageCollector;\r\n    services: Services;\r\n    processMetrics: ProcessMetrics;\r\n}\r\n\r\nexport interface JvmMetrics {\r\n    committed: number;\r\n    max: number;\r\n    used: number;\r\n}\r\n\r\nexport interface Databases {\r\n    min: Value;\r\n    idle: Value;\r\n    max: Value;\r\n    usage: MetricsWithPercentile;\r\n    pending: Value;\r\n    active: Value;\r\n    acquire: MetricsWithPercentile;\r\n    creation: MetricsWithPercentile;\r\n    connections: Value;\r\n}\r\n\r\nexport interface Value {\r\n    value: number;\r\n}\r\n\r\nexport interface MetricsWithPercentile {\r\n    '0.0': number;\r\n    '1.0': number;\r\n    max: number;\r\n    totalTime: number;\r\n    mean: number;\r\n    '0.5': number;\r\n    count: number;\r\n    '0.99': number;\r\n    '0.75': number;\r\n    '0.95': number;\r\n}\r\n\r\nexport interface HttpServerRequests {\r\n    all: {\r\n        count: number;\r\n    };\r\n    percode: { [key: string]: MaxMeanCount };\r\n}\r\n\r\nexport interface MaxMeanCount {\r\n    max: number;\r\n    mean: number;\r\n    count: number;\r\n}\r\n\r\nexport interface CacheMetrics {\r\n    'cache.gets.miss': number;\r\n    'cache.puts': number;\r\n    'cache.gets.hit': number;\r\n    'cache.removals': number;\r\n    'cache.evictions': number;\r\n}\r\n\r\nexport interface GarbageCollector {\r\n    'jvm.gc.max.data.size': number;\r\n    'jvm.gc.pause': MetricsWithPercentile;\r\n    'jvm.gc.memory.promoted': number;\r\n    'jvm.gc.memory.allocated': number;\r\n    classesLoaded: number;\r\n    'jvm.gc.live.data.size': number;\r\n    classesUnloaded: number;\r\n}\r\n\r\nexport interface Services {\r\n    [key: string]: {\r\n        [key in HttpMethod]?: MaxMeanCount;\r\n    };\r\n}\r\n\r\nexport enum HttpMethod {\r\n    Post = 'POST',\r\n    Get = 'GET',\r\n    Put = 'PUT',\r\n    Delete = 'DELETE',\r\n    Patch = 'PATCH',\r\n}\r\n\r\nexport interface ProcessMetrics {\r\n    'system.cpu.usage': number;\r\n    'system.cpu.count': number;\r\n    'system.load.average.1m'?: number;\r\n    'process.cpu.usage': number;\r\n    'process.files.max'?: number;\r\n    'process.files.open'?: number;\r\n    'process.start.time': number;\r\n    'process.uptime': number;\r\n}\r\n\r\nexport interface ThreadDump {\r\n    threads: Thread[];\r\n}\r\n\r\nexport interface Thread {\r\n    threadName: string;\r\n    threadId: number;\r\n    blockedTime: number;\r\n    blockedCount: number;\r\n    waitedTime: number;\r\n    waitedCount: number;\r\n    lockName: string | undefined;\r\n    lockOwnerId: number;\r\n    lockOwnerName: string | undefined;\r\n    daemon: boolean;\r\n    inNative: boolean;\r\n    suspended: boolean;\r\n    threadState: ThreadState;\r\n    priority: number;\r\n    stackTrace: StackTrace[];\r\n    lockedMonitors: LockedMonitor[];\r\n    lockedSynchronizers: string[];\r\n    lockInfo: LockInfo | undefined;\r\n    // custom field for showing-hiding thread dump\r\n    showThreadDump?: boolean;\r\n}\r\n\r\nexport interface LockInfo {\r\n    className: string;\r\n    identityHashCode: number;\r\n}\r\n\r\nexport interface LockedMonitor {\r\n    className: string;\r\n    identityHashCode: number;\r\n    lockedStackDepth: number;\r\n    lockedStackFrame: StackTrace;\r\n}\r\n\r\nexport interface StackTrace {\r\n    classLoaderName: string | undefined;\r\n    moduleName: string | undefined;\r\n    moduleVersion: string | undefined;\r\n    methodName: string;\r\n    fileName: string;\r\n    lineNumber: number;\r\n    className: string;\r\n    nativeMethod: boolean;\r\n}\r\n\r\nexport enum ThreadState {\r\n    Runnable = 'RUNNABLE',\r\n    TimedWaiting = 'TIMED_WAITING',\r\n    Waiting = 'WAITING',\r\n    Blocked = 'BLOCKED',\r\n    New = 'NEW',\r\n    Terminated = 'TERMINATED',\r\n}\r\n"],
  "mappings": "AAkFA,IAAYA,EAAZ,SAAYA,EAAU,CAClBA,OAAAA,EAAA,KAAA,OACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,OAAA,SACAA,EAAA,MAAA,QALQA,CAMZ,EANYA,GAAU,CAAA,CAAA,EAqEVC,EAAZ,SAAYA,EAAW,CACnBA,OAAAA,EAAA,SAAA,WACAA,EAAA,aAAA,gBACAA,EAAA,QAAA,UACAA,EAAA,QAAA,UACAA,EAAA,IAAA,MACAA,EAAA,WAAA,aANQA,CAOZ,EAPYA,GAAW,CAAA,CAAA",
  "names": ["HttpMethod", "ThreadState"]
}
