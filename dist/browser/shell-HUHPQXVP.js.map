{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/shell/shell.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.2(404545bded1df6ffa41ea0af4e8ddb219018c6c1)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/shell/shell.ts\nvar conf = {\n  comments: {\n    lineComment: \"#\"\n  },\n  brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]],\n  autoClosingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }, {\n    open: \"`\",\n    close: \"`\"\n  }],\n  surroundingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }, {\n    open: \"`\",\n    close: \"`\"\n  }]\n};\nvar language = {\n  defaultToken: \"\",\n  ignoreCase: true,\n  tokenPostfix: \".shell\",\n  brackets: [{\n    token: \"delimiter.bracket\",\n    open: \"{\",\n    close: \"}\"\n  }, {\n    token: \"delimiter.parenthesis\",\n    open: \"(\",\n    close: \")\"\n  }, {\n    token: \"delimiter.square\",\n    open: \"[\",\n    close: \"]\"\n  }],\n  keywords: [\"if\", \"then\", \"do\", \"else\", \"elif\", \"while\", \"until\", \"for\", \"in\", \"esac\", \"fi\", \"fin\", \"fil\", \"done\", \"exit\", \"set\", \"unset\", \"export\", \"function\"],\n  builtins: [\"ab\", \"awk\", \"bash\", \"beep\", \"cat\", \"cc\", \"cd\", \"chown\", \"chmod\", \"chroot\", \"clear\", \"cp\", \"curl\", \"cut\", \"diff\", \"echo\", \"find\", \"gawk\", \"gcc\", \"get\", \"git\", \"grep\", \"hg\", \"kill\", \"killall\", \"ln\", \"ls\", \"make\", \"mkdir\", \"openssl\", \"mv\", \"nc\", \"node\", \"npm\", \"ping\", \"ps\", \"restart\", \"rm\", \"rmdir\", \"sed\", \"service\", \"sh\", \"shopt\", \"shred\", \"source\", \"sort\", \"sleep\", \"ssh\", \"start\", \"stop\", \"su\", \"sudo\", \"svn\", \"tee\", \"telnet\", \"top\", \"touch\", \"vi\", \"vim\", \"wall\", \"wc\", \"wget\", \"who\", \"write\", \"yes\", \"zsh\"],\n  startingWithDash: /\\-+\\w+/,\n  identifiersWithDashes: /[a-zA-Z]\\w+(?:@startingWithDash)+/,\n  // we include these common regular expressions\n  symbols: /[=><!~?&|+\\-*\\/\\^;\\.,]+/,\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [[/@identifiersWithDashes/, \"\"], [/(\\s)((?:@startingWithDash)+)/, [\"white\", \"attribute.name\"]], [/[a-zA-Z]\\w*/, {\n      cases: {\n        \"@keywords\": \"keyword\",\n        \"@builtins\": \"type.identifier\",\n        \"@default\": \"\"\n      }\n    }], {\n      include: \"@whitespace\"\n    }, {\n      include: \"@strings\"\n    }, {\n      include: \"@parameters\"\n    }, {\n      include: \"@heredoc\"\n    }, [/[{}\\[\\]()]/, \"@brackets\"], [/@symbols/, \"delimiter\"], {\n      include: \"@numbers\"\n    }, [/[,;]/, \"delimiter\"]],\n    whitespace: [[/\\s+/, \"white\"], [/(^#!.*$)/, \"metatag\"], [/(^#.*$)/, \"comment\"]],\n    numbers: [[/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"], [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, \"number.hex\"], [/\\d+/, \"number\"]],\n    // Recognize strings, including those broken across lines\n    strings: [[/'/, \"string\", \"@stringBody\"], [/\"/, \"string\", \"@dblStringBody\"]],\n    stringBody: [[/'/, \"string\", \"@popall\"], [/./, \"string\"]],\n    dblStringBody: [[/\"/, \"string\", \"@popall\"], [/./, \"string\"]],\n    heredoc: [[/(<<[-<]?)(\\s*)(['\"`]?)([\\w\\-]+)(['\"`]?)/, [\"constants\", \"white\", \"string.heredoc.delimiter\", \"string.heredoc\", \"string.heredoc.delimiter\"]]],\n    parameters: [[/\\$\\d+/, \"variable.predefined\"], [/\\$\\w+/, \"variable\"], [/\\$[*@#?\\-$!0_]/, \"variable\"], [/\\$'/, \"variable\", \"@parameterBodyQuote\"], [/\\$\"/, \"variable\", \"@parameterBodyDoubleQuote\"], [/\\$\\(/, \"variable\", \"@parameterBodyParen\"], [/\\$\\{/, \"variable\", \"@parameterBodyCurlyBrace\"]],\n    parameterBodyQuote: [[/[^#:%*@\\-!_']+/, \"variable\"], [/[#:%*@\\-!_]/, \"delimiter\"], [/[']/, \"variable\", \"@pop\"]],\n    parameterBodyDoubleQuote: [[/[^#:%*@\\-!_\"]+/, \"variable\"], [/[#:%*@\\-!_]/, \"delimiter\"], [/[\"]/, \"variable\", \"@pop\"]],\n    parameterBodyParen: [[/[^#:%*@\\-!_)]+/, \"variable\"], [/[#:%*@\\-!_]/, \"delimiter\"], [/[)]/, \"variable\", \"@pop\"]],\n    parameterBodyCurlyBrace: [[/[^#:%*@\\-!_}]+/, \"variable\"], [/[#:%*@\\-!_]/, \"delimiter\"], [/[}]/, \"variable\", \"@pop\"]]\n  }\n};\nexport { conf, language };"],"mappings":"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","names":["conf","language"],"x_google_ignoreList":[0]}