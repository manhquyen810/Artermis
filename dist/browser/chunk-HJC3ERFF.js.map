{
  "version": 3,
  "sources": ["src/main/webapp/app/entities/iris/settings/iris-settings.model.ts", "src/main/webapp/app/iris/settings/iris-settings-update/iris-common-sub-settings-update/iris-common-sub-settings-update.component.ts", "src/main/webapp/app/iris/settings/iris-settings-update/iris-common-sub-settings-update/iris-common-sub-settings-update.component.html", "src/main/webapp/app/iris/settings/iris-settings-update/iris-settings-update.component.ts", "src/main/webapp/app/iris/settings/iris-settings-update/iris-settings-update.component.html"],
  "sourcesContent": ["import { BaseEntity } from 'app/shared/model/base-entity';\r\nimport {\r\n    IrisChatSubSettings,\r\n    IrisCompetencyGenerationSubSettings,\r\n    IrisCourseChatSubSettings,\r\n    IrisFaqIngestionSubSettings,\r\n    IrisLectureChatSubSettings,\r\n    IrisLectureIngestionSubSettings,\r\n    IrisTextExerciseChatSubSettings,\r\n} from 'app/entities/iris/settings/iris-sub-settings.model';\r\n\r\nexport enum IrisSettingsType {\r\n    GLOBAL = 'global',\r\n    COURSE = 'course',\r\n    EXERCISE = 'exercise',\r\n}\r\n\r\nexport abstract class IrisSettings implements BaseEntity {\r\n    id?: number;\r\n    type: IrisSettingsType;\r\n    irisChatSettings?: IrisChatSubSettings;\r\n    irisTextExerciseChatSettings?: IrisTextExerciseChatSubSettings;\r\n    irisLectureChatSettings?: IrisLectureChatSubSettings;\r\n    irisCourseChatSettings?: IrisCourseChatSubSettings;\r\n    irisLectureIngestionSettings?: IrisLectureIngestionSubSettings;\r\n    irisCompetencyGenerationSettings?: IrisCompetencyGenerationSubSettings;\r\n    irisFaqIngestionSettings?: IrisFaqIngestionSubSettings;\r\n}\r\n\r\nexport class IrisGlobalSettings implements IrisSettings {\r\n    id?: number;\r\n    type = IrisSettingsType.GLOBAL;\r\n    irisChatSettings?: IrisChatSubSettings;\r\n    irisTextExerciseChatSettings?: IrisTextExerciseChatSubSettings;\r\n    irisLectureChatSettings?: IrisLectureChatSubSettings;\r\n    irisCourseChatSettings?: IrisCourseChatSubSettings;\r\n    irisLectureIngestionSettings?: IrisLectureIngestionSubSettings;\r\n    irisCompetencyGenerationSettings?: IrisCompetencyGenerationSubSettings;\r\n    irisFaqIngestionSettings?: IrisFaqIngestionSubSettings;\r\n}\r\n\r\nexport class IrisCourseSettings implements IrisSettings {\r\n    id?: number;\r\n    type = IrisSettingsType.COURSE;\r\n    courseId?: number;\r\n    irisChatSettings?: IrisChatSubSettings;\r\n    irisTextExerciseChatSettings?: IrisTextExerciseChatSubSettings;\r\n    irisLectureChatSettings?: IrisLectureChatSubSettings;\r\n    irisCourseChatSettings?: IrisCourseChatSubSettings;\r\n    irisLectureIngestionSettings?: IrisLectureIngestionSubSettings;\r\n    irisCompetencyGenerationSettings?: IrisCompetencyGenerationSubSettings;\r\n    irisFaqIngestionSettings?: IrisFaqIngestionSubSettings;\r\n}\r\n\r\nexport class IrisExerciseSettings implements IrisSettings {\r\n    id?: number;\r\n    type = IrisSettingsType.EXERCISE;\r\n    exerciseId?: number;\r\n    irisChatSettings?: IrisChatSubSettings;\r\n    irisTextExerciseChatSettings?: IrisTextExerciseChatSubSettings;\r\n}\r\n", "import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, inject } from '@angular/core';\r\nimport { IrisEventType, IrisSubSettings, IrisSubSettingsType } from 'app/entities/iris/settings/iris-sub-settings.model';\r\nimport { IrisVariant } from 'app/entities/iris/settings/iris-variant';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\nimport { ButtonType } from 'app/shared/components/button.component';\r\nimport { faCircleExclamation, faQuestionCircle, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { IrisSettingsType } from 'app/entities/iris/settings/iris-settings.model';\r\nimport { IrisSettingsService } from 'app/iris/settings/shared/iris-settings.service';\r\nimport { CourseManagementService } from 'app/course/manage/course-management.service';\r\nimport { onError } from 'app/shared/util/global.utils';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { ExerciseService } from 'app/exercises/shared/exercise/exercise.service';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { NgClass } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { NgbDropdown, NgbDropdownButtonItem, NgbDropdownItem, NgbDropdownMenu, NgbDropdownToggle, NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-iris-common-sub-settings-update',\r\n    templateUrl: './iris-common-sub-settings-update.component.html',\r\n    imports: [\r\n        TranslateDirective,\r\n        NgClass,\r\n        FormsModule,\r\n        FaIconComponent,\r\n        NgbTooltip,\r\n        NgbDropdown,\r\n        NgbDropdownToggle,\r\n        NgbDropdownMenu,\r\n        NgbDropdownButtonItem,\r\n        NgbDropdownItem,\r\n        ArtemisTranslatePipe,\r\n    ],\r\n})\r\nexport class IrisCommonSubSettingsUpdateComponent implements OnInit, OnChanges {\r\n    private irisSettingsService = inject(IrisSettingsService);\r\n    private courseManagementService = inject(CourseManagementService);\r\n    private exerciseService = inject(ExerciseService);\r\n    private alertService = inject(AlertService);\r\n\r\n    @Input()\r\n    subSettings?: IrisSubSettings;\r\n\r\n    @Input()\r\n    parentSubSettings?: IrisSubSettings;\r\n\r\n    @Input()\r\n    settingsType: IrisSettingsType;\r\n\r\n    @Input()\r\n    courseId?: number;\r\n\r\n    @Output()\r\n    onChanges = new EventEmitter<IrisSubSettings>();\r\n\r\n    isAdmin: boolean;\r\n\r\n    inheritAllowedVariants: boolean;\r\n\r\n    eventInParentDisabledStatusMap = new Map<IrisEventType, boolean | undefined>();\r\n\r\n    availableVariants: IrisVariant[] = [];\r\n\r\n    allowedVariants: IrisVariant[] = [];\r\n\r\n    enabled: boolean;\r\n\r\n    categories: string[] = [];\r\n\r\n    exerciseChatEvents: IrisEventType[] = [IrisEventType.BUILD_FAILED, IrisEventType.PROGRESS_STALLED];\r\n\r\n    // Settings types\r\n    EXERCISE = IrisSettingsType.EXERCISE;\r\n    COURSE = IrisSettingsType.COURSE;\r\n    TEXT_EXERCISE_CHAT = IrisSubSettingsType.TEXT_EXERCISE_CHAT;\r\n    CHAT = IrisSubSettingsType.CHAT;\r\n    // Button types\r\n    WARNING = ButtonType.WARNING;\r\n    // Icons\r\n    readonly faTrash = faTrash;\r\n    readonly faQuestionCircle = faQuestionCircle;\r\n    readonly faCircleExclamation = faCircleExclamation;\r\n\r\n    protected readonly IrisSubSettings = IrisSubSettings;\r\n    protected readonly IrisSubSettingsType = IrisSubSettingsType;\r\n\r\n    protected readonly eventTranslationKeys = {\r\n        [IrisEventType.BUILD_FAILED]: 'artemisApp.iris.settings.subSettings.proactivityBuildFailedEventEnabled.label',\r\n        [IrisEventType.PROGRESS_STALLED]: 'artemisApp.iris.settings.subSettings.proactivityProgressStalledEventEnabled.label',\r\n    };\r\n\r\n    constructor() {\r\n        const accountService = inject(AccountService);\r\n\r\n        this.isAdmin = accountService.isAdmin();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.enabled = this.subSettings?.enabled ?? false;\r\n        this.loadCategories();\r\n        this.loadVariants();\r\n        this.inheritAllowedVariants = !!(!this.subSettings?.allowedVariants && this.parentSubSettings);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (!this.inheritAllowedVariants && changes.availableVariants) {\r\n            this.allowedVariants = this.getAllowedVariants();\r\n        }\r\n        if (changes.subSettings) {\r\n            this.enabled = this.subSettings?.enabled ?? false;\r\n        }\r\n        if (changes.parentSubSettings || changes.subSettings) {\r\n            this.updateEventDisabledStatus();\r\n        }\r\n    }\r\n\r\n    loadCategories() {\r\n        if (this.settingsType === this.COURSE) {\r\n            this.courseManagementService.findAllCategoriesOfCourse(this.courseId!).subscribe({\r\n                next: (response: HttpResponse<string[]>) => {\r\n                    this.categories = this.exerciseService\r\n                        .convertExerciseCategoriesAsStringFromServer(response.body!)\r\n                        .map((category) => category.category)\r\n                        .filter((category) => category !== undefined)\r\n                        .map((category) => category!);\r\n                    // Remove duplicate categories\r\n                    this.categories = Array.from(new Set(this.categories));\r\n                },\r\n                error: (error: HttpErrorResponse) => onError(this.alertService, error),\r\n            });\r\n        }\r\n    }\r\n\r\n    loadVariants(): void {\r\n        if (!this.subSettings?.type) {\r\n            return;\r\n        }\r\n        this.irisSettingsService.getVariantsForFeature(this.subSettings?.type).subscribe((variants) => {\r\n            this.availableVariants = variants ?? this.availableVariants;\r\n            this.allowedVariants = this.getAllowedVariants();\r\n        });\r\n    }\r\n\r\n    getAllowedVariants(): IrisVariant[] {\r\n        return this.availableVariants.filter((variant) => (this.subSettings?.allowedVariants ?? this.parentSubSettings?.allowedVariants ?? []).includes(variant.id));\r\n    }\r\n\r\n    getSelectedVariantName(): string | undefined {\r\n        return this.availableVariants.find((variant) => variant.id === this.subSettings?.selectedVariant)?.name ?? this.subSettings?.selectedVariant;\r\n    }\r\n\r\n    getSelectedVariantNameParent(): string | undefined {\r\n        return this.availableVariants.find((variant) => variant.id === this.parentSubSettings?.selectedVariant)?.name ?? this.parentSubSettings?.selectedVariant;\r\n    }\r\n\r\n    onAllowedIrisVariantsSelectionChange(variant: IrisVariant) {\r\n        this.inheritAllowedVariants = false;\r\n        if (this.allowedVariants.map((variant) => variant.id).includes(variant.id)) {\r\n            this.allowedVariants = this.allowedVariants.filter((m) => m.id !== variant.id);\r\n        } else {\r\n            this.allowedVariants.push(variant);\r\n        }\r\n        this.subSettings!.allowedVariants = this.allowedVariants.map((variant) => variant.id);\r\n    }\r\n\r\n    setVariant(variant: IrisVariant | undefined) {\r\n        this.subSettings!.selectedVariant = variant?.id;\r\n    }\r\n\r\n    onEnabledChange() {\r\n        this.subSettings!.enabled = this.enabled;\r\n    }\r\n\r\n    onEnable() {\r\n        this.enabled = true;\r\n        this.onEnabledChange();\r\n    }\r\n\r\n    onDisable() {\r\n        this.enabled = false;\r\n        this.onEnabledChange();\r\n    }\r\n\r\n    onInheritAllowedVariantsChange() {\r\n        if (this.inheritAllowedVariants) {\r\n            this.subSettings!.allowedVariants = undefined;\r\n            this.allowedVariants = this.getAllowedVariants();\r\n        } else {\r\n            this.subSettings!.allowedVariants = this.allowedVariants.map((variant) => variant.id);\r\n        }\r\n    }\r\n\r\n    onCategorySelectionChange(category: string) {\r\n        if (!this.subSettings) {\r\n            return;\r\n        }\r\n        if (!this.subSettings.enabledForCategories) {\r\n            this.subSettings.enabledForCategories = [];\r\n        }\r\n        if (this.subSettings.enabledForCategories?.includes(category)) {\r\n            this.subSettings.enabledForCategories = this.subSettings.enabledForCategories!.filter((c) => c !== category);\r\n        } else {\r\n            this.subSettings.enabledForCategories = [...(this.subSettings.enabledForCategories ?? []), category];\r\n        }\r\n    }\r\n\r\n    onEventToggleChange(event: IrisEventType) {\r\n        if (!this.subSettings) {\r\n            return;\r\n        }\r\n        if (!this.subSettings.disabledProactiveEvents) {\r\n            this.subSettings.disabledProactiveEvents = [];\r\n        }\r\n        if (this.subSettings.disabledProactiveEvents?.includes(event)) {\r\n            this.subSettings.disabledProactiveEvents = this.subSettings.disabledProactiveEvents!.filter((c) => c !== event);\r\n        } else {\r\n            this.subSettings.disabledProactiveEvents = [...(this.subSettings.disabledProactiveEvents ?? []), event] as IrisEventType[];\r\n        }\r\n    }\r\n\r\n    get inheritDisabled() {\r\n        if (this.parentSubSettings) {\r\n            return !this.parentSubSettings.enabled;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    get isSettingsSwitchDisabled() {\r\n        return this.inheritDisabled || (!this.isAdmin && this.settingsType !== this.EXERCISE);\r\n    }\r\n\r\n    /**\r\n     * Updates the event disabled status map based on the parent settings\r\n     * @private\r\n     */\r\n    private updateEventDisabledStatus(): void {\r\n        this.exerciseChatEvents.forEach((event) => {\r\n            const isDisabled =\r\n                !this.subSettings?.enabled ||\r\n                (this.parentSubSettings &&\r\n                    !this.subSettings?.disabledProactiveEvents?.includes(event) &&\r\n                    (this.parentSubSettings.disabledProactiveEvents?.includes(event) || !this.parentSubSettings.enabled));\r\n            this.eventInParentDisabledStatusMap.set(event, isDisabled);\r\n        });\r\n    }\r\n}\r\n", "@if (inheritDisabled) {\r\n    @switch (this.settingsType) {\r\n        @case (EXERCISE) {\r\n            <div jhiTranslate=\"artemisApp.iris.settings.subSettings.disabled.course\"></div>\r\n        }\r\n        @case (COURSE) {\r\n            <div jhiTranslate=\"artemisApp.iris.settings.subSettings.disabled.global\"></div>\r\n        }\r\n    }\r\n}\r\n<div class=\"btn-group\">\r\n    <div\r\n        class=\"btn\"\r\n        [ngClass]=\"{ 'btn-success selected': enabled, 'btn-default': !enabled }\"\r\n        [class.disabled]=\"isSettingsSwitchDisabled\"\r\n        (click)=\"onEnable()\"\r\n        jhiTranslate=\"artemisApp.iris.settings.subSettings.enabled.on\"\r\n    ></div>\r\n    <div\r\n        class=\"btn\"\r\n        [ngClass]=\"{ 'btn-danger selected': !enabled, 'btn-default': enabled }\"\r\n        [class.disabled]=\"isSettingsSwitchDisabled\"\r\n        (click)=\"onDisable()\"\r\n        jhiTranslate=\"artemisApp.iris.settings.subSettings.enabled.off\"\r\n    ></div>\r\n</div>\r\n@if (settingsType === COURSE && (subSettings?.type === CHAT || subSettings?.type === TEXT_EXERCISE_CHAT)) {\r\n    <h4 class=\"form-label mt-3\" jhiTranslate=\"artemisApp.iris.settings.subSettings.enabledForCategories\"></h4>\r\n    <div class=\"form-group\">\r\n        <div class=\"form-group\">\r\n            @for (category of categories; track category) {\r\n                <div class=\"form-check\">\r\n                    <input\r\n                        class=\"form-check-input\"\r\n                        type=\"checkbox\"\r\n                        id=\"{{ category }}\"\r\n                        [ngModel]=\"subSettings?.enabledForCategories?.includes(category)\"\r\n                        (ngModelChange)=\"onCategorySelectionChange(category)\"\r\n                    />\r\n                    <label class=\"form-check-label\" for=\"{{ category }}\">{{ category }}</label>\r\n                </div>\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n@if (subSettings?.type === CHAT) {\r\n    <div class=\"mt-3\">\r\n        <span class=\"form-label fs-4\" jhiTranslate=\"artemisApp.iris.settings.subSettings.proactivitySettings.title\"></span>\r\n        <fa-icon [icon]=\"faQuestionCircle\" [ngbTooltip]=\"'artemisApp.iris.settings.subSettings.proactivitySettings.tooltip' | artemisTranslate\" />\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <div class=\"form-group\">\r\n            @for (event of exerciseChatEvents; track event) {\r\n                <div class=\"form-check form-switch mt-2 flex items-center\">\r\n                    <input\r\n                        class=\"form-check-input\"\r\n                        type=\"checkbox\"\r\n                        id=\"{{ event }}\"\r\n                        [disabled]=\"!isAdmin && !parentSubSettings\"\r\n                        [ngModel]=\"!subSettings?.disabledProactiveEvents?.includes(event)\"\r\n                        (ngModelChange)=\"onEventToggleChange(event)\"\r\n                    />\r\n                    <label class=\"form-check-label\" for=\"{{ event }}\" [jhiTranslate]=\"eventTranslationKeys[event]\"></label>\r\n                    @if (eventInParentDisabledStatusMap.get(event)) {\r\n                        <fa-icon\r\n                            class=\"text-warning\"\r\n                            [icon]=\"faCircleExclamation\"\r\n                            [ngbTooltip]=\"'artemisApp.iris.settings.subSettings.proactivitySettings.parentDisabled' | artemisTranslate\"\r\n                        />\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n<h4 class=\"form-label mt-3\" jhiTranslate=\"artemisApp.iris.settings.subSettings.variants.title\"></h4>\r\n<span><span class=\"fw-bold fs-5\" jhiTranslate=\"artemisApp.iris.settings.subSettings.variants.allowedVariants.title\"></span>: </span>\r\n@if (parentSubSettings) {\r\n    <div class=\"form-check form-switch\">\r\n        <input\r\n            class=\"form-check-input\"\r\n            type=\"checkbox\"\r\n            id=\"inheritAllowedVariantsSwitch{{ subSettings?.type ?? '' }}\"\r\n            [disabled]=\"!isAdmin\"\r\n            [(ngModel)]=\"inheritAllowedVariants\"\r\n            (change)=\"onInheritAllowedVariantsChange()\"\r\n        />\r\n        <label\r\n            class=\"form-check-label\"\r\n            for=\"inheritAllowedVariantsSwitch{{ subSettings?.type ?? '' }}\"\r\n            jhiTranslate=\"artemisApp.iris.settings.subSettings.variants.allowedVariants.inheritSwitch\"\r\n        ></label>\r\n    </div>\r\n}\r\n<div class=\"form-group\">\r\n    @for (variant of availableVariants; track variant) {\r\n        <div class=\"form-check\">\r\n            <input\r\n                class=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                id=\"{{ variant.id }}{{ subSettings?.type ?? '' }}\"\r\n                [disabled]=\"!isAdmin || inheritAllowedVariants\"\r\n                [ngModel]=\"allowedVariants.includes(variant)\"\r\n                (ngModelChange)=\"onAllowedIrisVariantsSelectionChange(variant)\"\r\n            />\r\n            <label class=\"form-check-label\" for=\"{{ variant.id }}{{ subSettings?.type ?? '' }}\">\r\n                {{ variant.name }}\r\n            </label>\r\n        </div>\r\n    }\r\n</div>\r\n<h5 class=\"mt-3\"><span class=\"fw-bold\" jhiTranslate=\"artemisApp.iris.settings.subSettings.variants.selectedVariant.title\"></span>:</h5>\r\n<div class=\"d-flex align-items-center\">\r\n    <div ngbDropdown class=\"d-inline-block\">\r\n        <button class=\"btn btn-outline-primary w-100\" id=\"dropdownBasic1\" ngbDropdownToggle>\r\n            {{ getSelectedVariantName() ?? ('artemisApp.iris.settings.subSettings.variants.selectedVariant.inherit' | artemisTranslate) }}\r\n        </button>\r\n        <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\r\n            @if (parentSubSettings) {\r\n                <button (click)=\"setVariant(undefined)\" [class.selected]=\"subSettings?.selectedVariant === undefined\" ngbDropdownItem>\r\n                    {{ 'artemisApp.iris.settings.subSettings.variants.selectedVariant.inherit' | artemisTranslate }}\r\n                </button>\r\n            }\r\n            @for (model of allowedVariants; track model) {\r\n                <button (click)=\"setVariant(model)\" [class.selected]=\"model.id === subSettings?.selectedVariant\" [ngbTooltip]=\"model.description\" ngbDropdownItem>\r\n                    {{ model.name }}\r\n                </button>\r\n            }\r\n        </div>\r\n    </div>\r\n    @if (!subSettings?.selectedVariant) {\r\n        <span class=\"ps-2 text-secondary\">{{ getSelectedVariantNameParent() }}</span>\r\n    }\r\n</div>\r\n", "import { Component, DoCheck, Input, OnInit, inject } from '@angular/core';\r\nimport { IrisSettings, IrisSettingsType } from 'app/entities/iris/settings/iris-settings.model';\r\nimport { IrisSettingsService } from 'app/iris/settings/shared/iris-settings.service';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { ButtonType } from 'app/shared/components/button.component';\r\nimport { faRotate, faSave } from '@fortawesome/free-solid-svg-icons';\r\nimport { ComponentCanDeactivate } from 'app/shared/guard/can-deactivate.model';\r\nimport { cloneDeep, isEqual } from 'lodash-es';\r\nimport {\r\n    IrisChatSubSettings,\r\n    IrisCompetencyGenerationSubSettings,\r\n    IrisCourseChatSubSettings,\r\n    IrisFaqIngestionSubSettings,\r\n    IrisLectureChatSubSettings,\r\n    IrisLectureIngestionSubSettings,\r\n    IrisTextExerciseChatSubSettings,\r\n} from 'app/entities/iris/settings/iris-sub-settings.model';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\nimport { ButtonComponent } from 'app/shared/components/button.component';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { IrisCommonSubSettingsUpdateComponent } from './iris-common-sub-settings-update/iris-common-sub-settings-update.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { captureException } from '@sentry/angular';\r\n\r\n@Component({\r\n    selector: 'jhi-iris-settings-update',\r\n    templateUrl: './iris-settings-update.component.html',\r\n    imports: [ButtonComponent, TranslateDirective, IrisCommonSubSettingsUpdateComponent, FormsModule],\r\n})\r\nexport class IrisSettingsUpdateComponent implements OnInit, DoCheck, ComponentCanDeactivate {\r\n    private irisSettingsService = inject(IrisSettingsService);\r\n    private alertService = inject(AlertService);\r\n\r\n    @Input()\r\n    public settingsType: IrisSettingsType;\r\n    @Input()\r\n    public courseId?: number;\r\n    @Input()\r\n    public exerciseId?: number;\r\n    public irisSettings?: IrisSettings;\r\n    public parentIrisSettings?: IrisSettings;\r\n\r\n    originalIrisSettings?: IrisSettings;\r\n\r\n    public autoLectureIngestion = false;\r\n    public autoFaqIngestion = false;\r\n\r\n    // Status bools\r\n    isLoading = false;\r\n    isSaving = false;\r\n    isDirty = false;\r\n    isAdmin: boolean;\r\n    // Button types\r\n    PRIMARY = ButtonType.PRIMARY;\r\n    WARNING = ButtonType.WARNING;\r\n    SUCCESS = ButtonType.SUCCESS;\r\n    // Icons\r\n    faSave = faSave;\r\n    faRotate = faRotate;\r\n    // Settings types\r\n    GLOBAL = IrisSettingsType.GLOBAL;\r\n    COURSE = IrisSettingsType.COURSE;\r\n    EXERCISE = IrisSettingsType.EXERCISE;\r\n\r\n    constructor() {\r\n        const accountService = inject(AccountService);\r\n\r\n        this.isAdmin = accountService.isAdmin();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.loadIrisSettings();\r\n    }\r\n\r\n    ngDoCheck(): void {\r\n        if (!isEqual(this.irisSettings, this.originalIrisSettings)) {\r\n            this.isDirty = true;\r\n        }\r\n    }\r\n\r\n    canDeactivateWarning?: string;\r\n\r\n    canDeactivate(): boolean {\r\n        return !this.isDirty;\r\n    }\r\n\r\n    loadIrisSettings(): void {\r\n        this.isLoading = true;\r\n        this.loadIrisSettingsObservable().subscribe((settings) => {\r\n            //this.loadIrisModels();\r\n            this.isLoading = false;\r\n            if (!settings) {\r\n                this.alertService.error('artemisApp.iris.settings.error.noSettings');\r\n            }\r\n            this.irisSettings = settings;\r\n            this.fillEmptyIrisSubSettings();\r\n            this.originalIrisSettings = cloneDeep(settings);\r\n            this.autoLectureIngestion = this.irisSettings?.irisLectureIngestionSettings?.autoIngestOnLectureAttachmentUpload ?? false;\r\n            this.autoFaqIngestion = this.irisSettings?.irisFaqIngestionSettings?.autoIngestOnFaqCreation ?? false;\r\n            this.isDirty = false;\r\n        });\r\n        this.loadParentIrisSettingsObservable().subscribe((settings) => {\r\n            if (!settings) {\r\n                this.alertService.error('artemisApp.iris.settings.error.noParentSettings');\r\n            }\r\n            this.parentIrisSettings = settings;\r\n        });\r\n    }\r\n\r\n    fillEmptyIrisSubSettings(): void {\r\n        if (!this.irisSettings) {\r\n            return;\r\n        }\r\n        if (!this.irisSettings.irisChatSettings) {\r\n            this.irisSettings.irisChatSettings = new IrisChatSubSettings();\r\n        }\r\n        if (!this.irisSettings.irisTextExerciseChatSettings) {\r\n            this.irisSettings.irisTextExerciseChatSettings = new IrisTextExerciseChatSubSettings();\r\n        }\r\n        if (!this.irisSettings.irisLectureChatSettings) {\r\n            this.irisSettings.irisLectureChatSettings = new IrisLectureChatSubSettings();\r\n        }\r\n        if (!this.irisSettings.irisCourseChatSettings) {\r\n            this.irisSettings.irisCourseChatSettings = new IrisCourseChatSubSettings();\r\n        }\r\n        if (!this.irisSettings.irisLectureIngestionSettings) {\r\n            this.irisSettings.irisLectureIngestionSettings = new IrisLectureIngestionSubSettings();\r\n        }\r\n        if (!this.irisSettings.irisCompetencyGenerationSettings) {\r\n            this.irisSettings.irisCompetencyGenerationSettings = new IrisCompetencyGenerationSubSettings();\r\n        }\r\n        if (!this.irisSettings.irisFaqIngestionSettings) {\r\n            this.irisSettings.irisFaqIngestionSettings = new IrisFaqIngestionSubSettings();\r\n        }\r\n    }\r\n\r\n    saveIrisSettings(): void {\r\n        this.isSaving = true;\r\n        if (this.irisSettings && this.irisSettings.irisLectureIngestionSettings) {\r\n            this.irisSettings.irisLectureIngestionSettings.autoIngestOnLectureAttachmentUpload = this.autoLectureIngestion;\r\n        }\r\n        if (this.irisSettings && this.irisSettings.irisFaqIngestionSettings) {\r\n            this.irisSettings.irisFaqIngestionSettings.autoIngestOnFaqCreation = this.autoFaqIngestion;\r\n        }\r\n        this.saveIrisSettingsObservable().subscribe(\r\n            (response) => {\r\n                this.isSaving = false;\r\n                this.isDirty = false;\r\n                this.irisSettings = response.body ?? undefined;\r\n                this.fillEmptyIrisSubSettings();\r\n                this.originalIrisSettings = cloneDeep(this.irisSettings);\r\n                this.alertService.success('artemisApp.iris.settings.success');\r\n            },\r\n            (error) => {\r\n                this.isSaving = false;\r\n                captureException('Error saving iris settings', error);\r\n                if (error.status === 400 && error.error && error.error.message) {\r\n                    this.alertService.error(error.error.message);\r\n                } else {\r\n                    this.alertService.error('artemisApp.iris.settings.error.save');\r\n                }\r\n            },\r\n        );\r\n    }\r\n\r\n    loadParentIrisSettingsObservable(): Observable<IrisSettings | undefined> {\r\n        switch (this.settingsType) {\r\n            case IrisSettingsType.GLOBAL:\r\n                // Global settings have no parent\r\n                return new Observable<IrisSettings | undefined>();\r\n            case IrisSettingsType.COURSE:\r\n                return this.irisSettingsService.getGlobalSettings();\r\n            case IrisSettingsType.EXERCISE:\r\n                return this.irisSettingsService.getCombinedCourseSettings(this.courseId!);\r\n        }\r\n    }\r\n\r\n    loadIrisSettingsObservable(): Observable<IrisSettings | undefined> {\r\n        switch (this.settingsType) {\r\n            case IrisSettingsType.GLOBAL:\r\n                return this.irisSettingsService.getGlobalSettings();\r\n            case IrisSettingsType.COURSE:\r\n                return this.irisSettingsService.getUncombinedCourseSettings(this.courseId!);\r\n            case IrisSettingsType.EXERCISE:\r\n                return this.irisSettingsService.getUncombinedExerciseSettings(this.exerciseId!);\r\n        }\r\n    }\r\n\r\n    saveIrisSettingsObservable(): Observable<HttpResponse<IrisSettings | undefined>> {\r\n        switch (this.settingsType) {\r\n            case IrisSettingsType.GLOBAL:\r\n                return this.irisSettingsService.setGlobalSettings(this.irisSettings!);\r\n            case IrisSettingsType.COURSE:\r\n                return this.irisSettingsService.setCourseSettings(this.courseId!, this.irisSettings!);\r\n            case IrisSettingsType.EXERCISE:\r\n                return this.irisSettingsService.setExerciseSettings(this.exerciseId!, this.irisSettings!);\r\n        }\r\n    }\r\n}\r\n", "<div>\r\n    <jhi-button\r\n        id=\"reload\"\r\n        [btnType]=\"isDirty ? WARNING : PRIMARY\"\r\n        [isLoading]=\"isLoading\"\r\n        [icon]=\"faRotate\"\r\n        [title]=\"'artemisApp.iris.settings.button.reload'\"\r\n        (onClick)=\"loadIrisSettings()\"\r\n    />\r\n    <jhi-button id=\"save\" [btnType]=\"SUCCESS\" [isLoading]=\"isSaving\" [icon]=\"faSave\" [title]=\"'artemisApp.iris.settings.button.save'\" (onClick)=\"saveIrisSettings()\" />\r\n</div>\r\n@if (irisSettings) {\r\n    <div>\r\n        <h3 jhiTranslate=\"artemisApp.iris.settings.subSettings.chatSettings\"></h3>\r\n        <div>\r\n            <jhi-iris-common-sub-settings-update\r\n                [subSettings]=\"irisSettings?.irisChatSettings\"\r\n                [parentSubSettings]=\"parentIrisSettings?.irisChatSettings\"\r\n                [settingsType]=\"settingsType\"\r\n                [courseId]=\"courseId\"\r\n                (onChanges)=\"isDirty = true\"\r\n            />\r\n        </div>\r\n\r\n        <hr class=\"hr\" />\r\n\r\n        <h3 jhiTranslate=\"artemisApp.iris.settings.subSettings.textExerciseChatSettings\"></h3>\r\n        <div>\r\n            <jhi-iris-common-sub-settings-update\r\n                [subSettings]=\"irisSettings?.irisTextExerciseChatSettings\"\r\n                [parentSubSettings]=\"parentIrisSettings?.irisTextExerciseChatSettings\"\r\n                [settingsType]=\"settingsType\"\r\n                [courseId]=\"courseId\"\r\n                (onChanges)=\"isDirty = true\"\r\n            />\r\n        </div>\r\n\r\n        @if (settingsType !== EXERCISE) {\r\n            <hr class=\"hr\" />\r\n\r\n            <h3 jhiTranslate=\"artemisApp.iris.settings.subSettings.courseChatSettings\"></h3>\r\n            <div>\r\n                <jhi-iris-common-sub-settings-update\r\n                    [subSettings]=\"irisSettings?.irisCourseChatSettings\"\r\n                    [parentSubSettings]=\"parentIrisSettings?.irisCourseChatSettings\"\r\n                    [settingsType]=\"settingsType\"\r\n                    [courseId]=\"courseId\"\r\n                    (onChanges)=\"isDirty = true\"\r\n                />\r\n            </div>\r\n\r\n            <hr class=\"hr\" />\r\n\r\n            <div>\r\n                <hr class=\"hr\" />\r\n                <h3 jhiTranslate=\"artemisApp.iris.settings.subSettings.lectureChatSettings\"></h3>\r\n                <div>\r\n                    <jhi-iris-common-sub-settings-update\r\n                        [subSettings]=\"irisSettings?.irisLectureChatSettings\"\r\n                        [parentSubSettings]=\"parentIrisSettings?.irisLectureChatSettings\"\r\n                        [settingsType]=\"settingsType\"\r\n                        [courseId]=\"courseId\"\r\n                        (onChanges)=\"isDirty = true\"\r\n                    />\r\n                </div>\r\n\r\n                <hr class=\"hr\" />\r\n                <h3 jhiTranslate=\"artemisApp.iris.settings.subSettings.lectureIngestionSettings.title\"></h3>\r\n                <jhi-iris-common-sub-settings-update\r\n                    [subSettings]=\"irisSettings?.irisLectureIngestionSettings!\"\r\n                    [parentSubSettings]=\"parentIrisSettings?.irisLectureIngestionSettings\"\r\n                    [settingsType]=\"settingsType\"\r\n                    [courseId]=\"courseId\"\r\n                    (onChanges)=\"isDirty = true\"\r\n                />\r\n                <br />\r\n\r\n                @if (settingsType === COURSE) {\r\n                    <div class=\"form-check form-switch\">\r\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"autoLectureIngestion\" [disabled]=\"!isAdmin\" [(ngModel)]=\"autoLectureIngestion\" />\r\n                        <label\r\n                            class=\"form-check-label\"\r\n                            for=\"autoLectureIngestion\"\r\n                            jhiTranslate=\"artemisApp.iris.settings.subSettings.lectureIngestionSettings.autoIngestOnAttachmentUpload\"\r\n                        ></label>\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n            <hr class=\"hr\" />\r\n            <div>\r\n                <h3 jhiTranslate=\"artemisApp.iris.settings.subSettings.faqIngestionSettings.title\"></h3>\r\n                <jhi-iris-common-sub-settings-update\r\n                    [subSettings]=\"irisSettings?.irisFaqIngestionSettings!\"\r\n                    [parentSubSettings]=\"parentIrisSettings?.irisFaqIngestionSettings\"\r\n                    [settingsType]=\"settingsType\"\r\n                    [courseId]=\"courseId\"\r\n                    (onChanges)=\"isDirty = true\"\r\n                />\r\n                <br />\r\n                @if (settingsType === COURSE) {\r\n                    <div class=\"form-check form-switch\">\r\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"autoFaqIngestion\" [disabled]=\"!isAdmin\" [(ngModel)]=\"autoFaqIngestion\" />\r\n                        <label class=\"form-check-label\" for=\"autoLectureIngestion\" jhiTranslate=\"artemisApp.iris.settings.subSettings.faqIngestionSettings.autoIngest\"></label>\r\n                    </div>\r\n                }\r\n            </div>\r\n        }\r\n        @if (settingsType !== EXERCISE) {\r\n            <hr class=\"hr\" />\r\n\r\n            <div>\r\n                <h3 jhiTranslate=\"artemisApp.iris.settings.subSettings.competencyGenerationSettings\"></h3>\r\n                <jhi-iris-common-sub-settings-update\r\n                    [subSettings]=\"irisSettings?.irisCompetencyGenerationSettings!\"\r\n                    [parentSubSettings]=\"parentIrisSettings?.irisCompetencyGenerationSettings\"\r\n                    [settingsType]=\"settingsType\"\r\n                    [courseId]=\"courseId\"\r\n                    (onChanges)=\"isDirty = true\"\r\n                />\r\n            </div>\r\n        }\r\n    </div>\r\n}\r\n"],
  "mappings": "+oCAWA,IAAYA,EAAZ,SAAYA,EAAgB,CACxBA,OAAAA,EAAA,OAAA,SACAA,EAAA,OAAA,SACAA,EAAA,SAAA,WAHQA,CAIZ,EAJYA,GAAgB,CAAA,CAAA,0IERhBC,EAAA,EAAA;aAAA,EAAAC,EAAA,EAAA,MAAA,EAAA,EACJD,EAAA,EAAA;SAAA,0BAEIA,EAAA,EAAA;aAAA,EAAAC,EAAA,EAAA,MAAA,EAAA,EACJD,EAAA,EAAA;SAAA,6BANJA,EAAA,EAAA;KAAA,EACIE,EAAA,EAAAC,GAAA,EAAA,CAAA,EAAkB,EAAAC,GAAA,EAAA,CAAA,EAO1BJ,EAAA,EAAA;CAAA,oBARIK,EAAA,EAAAC,GAAAC,EAAAC,EAAAC,gBAAAD,EAAAE,SAAA,EAAAH,IAAAC,EAAAG,OAAA,EAAA,EAAA,sCA8BYX,EAAA,EAAA;iBAAA,EAAAY,EAAA,EAAA,MAAA,EAAA,EACIZ,EAAA,EAAA;qBAAA,EAAAY,EAAA,EAAA,QAAA,EAAA,EAKIC,EAAA,gBAAA,UAAA,CAAA,IAAAC,EAAAC,EAAAC,CAAA,EAAAC,UAAAT,EAAAU,EAAA,CAAA,EAAA,OAAAC,EAAiBX,EAAAY,0BAAAN,CAAA,CAAmC,CAAA,CAAA,EALxDO,EAAA,EAOArB,EAAA,EAAA;qBAAA,EAAAY,EAAA,EAAA,QAAA,EAAA,EAAqDZ,EAAA,CAAA,EAAcqB,EAAA,EACvErB,EAAA,EAAA;iBAAA,EAAAqB,EAAA,EACJrB,EAAA,EAAA;aAAA,mCANYK,EAAA,CAAA,EAAAiB,EAAA,KAAAR,CAAA,EACAS,EAAA,UAAAf,EAAAgB,aAAA,MAAAhB,EAAAgB,YAAAC,sBAAA,KAAA,KAAAjB,EAAAgB,YAAAC,qBAAAC,SAAAZ,CAAA,CAAA,EAG4BT,EAAA,CAAA,EAAAiB,EAAA,MAAAR,CAAA,EAAqBT,EAAA,EAAAsB,EAAAb,CAAA,6BAZrEd,EAAA,EAAA;KAAA,EAAAC,EAAA,EAAA,KAAA,EAAA,EACAD,EAAA,EAAA;KAAA,EAAAY,EAAA,EAAA,MAAA,CAAA,EACIZ,EAAA,EAAA;SAAA,EAAAY,EAAA,EAAA,MAAA,CAAA,EACIZ,EAAA,EAAA;aAAA,EAAA4B,EAAA,EAAAC,GAAA,EAAA,EAAA,KAAA,KAAAC,CAAA,EAYJT,EAAA,EACJrB,EAAA,EAAA;KAAA,EAAAqB,EAAA,EACJrB,EAAA,GAAA;CAAA,kBAdYK,EAAA,CAAA,EAAA0B,EAAAvB,EAAAwB,UAAA,6BAkCYhC,EAAA,EAAA;yBAAA,EAAAC,EAAA,EAAA,UAAA,EAAA,0BAKJD,EAAA,EAAA;qBAAA,mBAHQK,EAAA,EAAAkB,EAAA,OAAAf,EAAAyB,mBAAA,EAA4B,aAAAC,EAAA,EAAA,EAAA,yEAAA,CAAA,sCAbxClC,EAAA,EAAA;iBAAA,EAAAY,EAAA,EAAA,MAAA,EAAA,EACIZ,EAAA,EAAA;qBAAA,EAAAY,EAAA,EAAA,QAAA,EAAA,EAMIC,EAAA,gBAAA,UAAA,CAAA,IAAAsB,EAAApB,EAAAqB,CAAA,EAAAnB,UAAAT,EAAAU,EAAA,CAAA,EAAA,OAAAC,EAAiBX,EAAA6B,oBAAAF,CAAA,CAA0B,CAAA,CAAA,EAN/Cd,EAAA,EAQArB,EAAA,EAAA;qBAAA,EAAAC,EAAA,EAAA,QAAA,EAAA,EACAD,EAAA,EAAA;qBAAA,EAAAE,EAAA,EAAAoC,GAAA,EAAA,CAAA,EAOJjB,EAAA,EACJrB,EAAA,EAAA;aAAA,mCAdYK,EAAA,CAAA,EAAAiB,EAAA,KAAAa,CAAA,EACAZ,EAAA,WAAA,CAAAf,EAAA+B,SAAA,CAAA/B,EAAAgC,iBAAA,EAA2C,UAAA,EAAAhC,EAAAA,EAAAgB,aAAA,MAAAhB,EAAAgB,YAAAiB,yBAAA,OAAAjC,EAAAgB,YAAAiB,wBAAAf,SAAAS,CAAA,EAAA,EAIf9B,EAAA,CAAA,EAAAiB,EAAA,MAAAa,CAAA,EAAkBZ,EAAA,eAAAf,EAAAkC,qBAAAP,CAAA,CAAA,EAClD9B,EAAA,CAAA,EAAAC,EAAAE,EAAAmC,+BAAAC,IAAAT,CAAA,EAAA,EAAA,EAAA,6BAjBhBnC,EAAA,EAAA;KAAA,EAAAY,EAAA,EAAA,MAAA,CAAA,EACIZ,EAAA,EAAA;SAAA,EAAAC,EAAA,EAAA,OAAA,EAAA,EACAD,EAAA,EAAA;SAAA,EAAAC,EAAA,EAAA,UAAA,EAAA,0BACJD,EAAA,EAAA;KAAA,EAAAqB,EAAA,EACArB,EAAA,EAAA;KAAA,EAAAY,EAAA,EAAA,MAAA,CAAA,EACIZ,EAAA,GAAA;SAAA,EAAAY,EAAA,GAAA,MAAA,CAAA,EACIZ,EAAA,GAAA;aAAA,EAAA4B,EAAA,GAAAiB,GAAA,EAAA,EAAA,KAAA,KAAAf,CAAA,EAoBJT,EAAA,EACJrB,EAAA,GAAA;KAAA,EAAAqB,EAAA,EACJrB,EAAA,GAAA;CAAA,kBA1BiBK,EAAA,CAAA,EAAAkB,EAAA,OAAAf,EAAAsC,gBAAA,EAAyB,aAAAZ,EAAA,EAAA,EAAA,kEAAA,CAAA,EAI9B7B,EAAA,CAAA,EAAA0B,EAAAvB,EAAAuC,kBAAA,sCA0BR/C,EAAA,EAAA;KAAA,EAAAY,EAAA,EAAA,MAAA,EAAA,EACIZ,EAAA,EAAA;SAAA,EAAAY,EAAA,EAAA,QAAA,EAAA,EAKIoC,EAAA,gBAAA,SAAAC,EAAA,CAAAlC,EAAAmC,CAAA,EAAA,IAAA1C,EAAAU,EAAA,EAAAiC,OAAAC,EAAA5C,EAAA6C,uBAAAJ,CAAA,IAAAzC,EAAA6C,uBAAAJ,GAAA9B,EAAA8B,CAAA,CAAA,CAAA,EACApC,EAAA,SAAA,UAAA,CAAAE,EAAAmC,CAAA,EAAA,IAAA1C,EAAAU,EAAA,EAAA,OAAAC,EAAUX,EAAA8C,+BAAA,CAAgC,CAAA,CAAA,EAN9CjC,EAAA,EAQArB,EAAA,EAAA;SAAA,EAAAC,EAAA,EAAA,QAAA,EAAA,EAKJD,EAAA,EAAA;KAAA,EAAAqB,EAAA,EACJrB,EAAA,EAAA;CAAA,wBAXYK,EAAA,CAAA,EAAAkD,EAAA,KAAA,gCAAAhD,EAAAC,EAAAgB,aAAA,KAAA,KAAAhB,EAAAgB,YAAAgC,QAAA,MAAAjD,IAAAkD,OAAAlD,EAAA,GAAA,EAAA,EACAgB,EAAA,WAAA,CAAAf,EAAA+B,OAAA,EACAmB,EAAA,UAAAlD,EAAA6C,sBAAA,EAKAhD,EAAA,CAAA,EAAAkD,EAAA,MAAA,gCAAAI,EAAAnD,EAAAgB,aAAA,KAAA,KAAAhB,EAAAgB,YAAAgC,QAAA,MAAAG,IAAAF,OAAAE,EAAA,GAAA,EAAA,sCAOJ3D,EAAA,EAAA;SAAA,EAAAY,EAAA,EAAA,MAAA,EAAA,EACIZ,EAAA,EAAA;aAAA,EAAAY,EAAA,EAAA,QAAA,EAAA,EAMIC,EAAA,gBAAA,UAAA,CAAA,IAAA+C,EAAA7C,EAAA8C,CAAA,EAAA5C,UAAAT,EAAAU,EAAA,EAAA,OAAAC,EAAiBX,EAAAsD,qCAAAF,CAAA,CAA6C,CAAA,CAAA,EANlEvC,EAAA,EAQArB,EAAA,EAAA;aAAA,EAAAY,EAAA,EAAA,QAAA,EAAA,EACIZ,EAAA,CAAA,EACJqB,EAAA,EACJrB,EAAA,EAAA;SAAA,EAAAqB,EAAA,EACJrB,EAAA,EAAA;KAAA,sCATYK,EAAA,CAAA,EAAA0D,EAAA,KAAA,GAAAH,EAAAI,GAAA,IAAAC,EAAAzD,EAAAgB,aAAA,KAAA,KAAAhB,EAAAgB,YAAAgC,QAAA,MAAAS,IAAAR,OAAAQ,EAAA,GAAA,EAAA,EACA1C,EAAA,WAAA,CAAAf,EAAA+B,SAAA/B,EAAA6C,sBAAA,EAA+C,UAAA7C,EAAA0D,gBAAAxC,SAAAkC,CAAA,CAAA,EAInBvD,EAAA,CAAA,EAAA0D,EAAA,MAAA,GAAAH,EAAAI,GAAA,IAAAG,EAAA3D,EAAAgB,aAAA,KAAA,KAAAhB,EAAAgB,YAAAgC,QAAA,MAAAW,IAAAV,OAAAU,EAAA,GAAA,EAAA,EAC5B9D,EAAA,EAAA+D,EAAA;kBAAAR,EAAAS,KAAA;aAAA,sCAaArE,EAAA,EAAA;iBAAA,EAAAY,EAAA,EAAA,SAAA,EAAA,EAAQC,EAAA,QAAA,UAAA,CAAAE,EAAAuD,CAAA,EAAA,IAAA9D,EAAAU,EAAA,EAAA,OAAAC,EAASX,EAAA+D,WAAWd,MAAS,CAAC,CAAA,CAAA,EAClCzD,EAAA,CAAA,0BACJqB,EAAA,EACJrB,EAAA,EAAA;aAAA,oBAH4CK,EAAA,EAAAmE,EAAA,YAAAhE,EAAAgB,aAAA,KAAA,KAAAhB,EAAAgB,YAAAiD,mBAAAhB,MAAA,EACpCpD,EAAA,EAAA+D,EAAA;sBAAAlC,EAAA,EAAA,EAAA,uEAAA,EAAA;iBAAA,sCAIJlC,EAAA,EAAA;iBAAA,EAAAY,EAAA,EAAA,SAAA,EAAA,EAAQC,EAAA,QAAA,UAAA,CAAA,IAAA6D,EAAA3D,EAAA4D,CAAA,EAAA1D,UAAAT,EAAAU,EAAA,EAAA,OAAAC,EAASX,EAAA+D,WAAAG,CAAA,CAAiB,CAAA,CAAA,EAC9B1E,EAAA,CAAA,EACJqB,EAAA,EACJrB,EAAA,EAAA;aAAA,kCAHwCK,EAAA,EAAAmE,EAAA,WAAAE,EAAAV,MAAAxD,EAAAgB,aAAA,KAAA,KAAAhB,EAAAgB,YAAAiD,gBAAA,EAA6DlD,EAAA,aAAAmD,EAAAE,WAAA,EAC7FvE,EAAA,EAAA+D,EAAA;sBAAAM,EAAAL,KAAA;iBAAA,6BAMZrE,EAAA,EAAA;SAAA,EAAAY,EAAA,EAAA,OAAA,EAAA,EAAkCZ,EAAA,CAAA,EAAoCqB,EAAA,EAC1ErB,EAAA,EAAA;KAAA,kBADsCK,EAAA,CAAA,EAAAsB,EAAAnB,EAAAqE,6BAAA,CAAA,GD9F1C,IAAaC,IAAoC,IAAA,CAA3C,MAAOA,CAAoC,CACrCC,oBAAsBC,EAAOC,CAAmB,EAChDC,wBAA0BF,EAAOG,EAAuB,EACxDC,gBAAkBJ,EAAOK,EAAe,EACxCC,aAAeN,EAAOO,CAAY,EAG1C/D,YAGAgB,kBAGA/B,aAGA+E,SAGAC,UAAY,IAAIC,EAEhBnD,QAEAc,uBAEAV,+BAAiC,IAAIgD,IAErCC,kBAAmC,CAAA,EAEnC1B,gBAAiC,CAAA,EAEjC2B,QAEA7D,WAAuB,CAAA,EAEvBe,mBAAsC,CAAC+C,EAAcC,aAAcD,EAAcE,gBAAgB,EAGjGtF,SAAWuF,EAAiBvF,SAC5BC,OAASsF,EAAiBtF,OAC1BuF,mBAAqBC,EAAoBD,mBACzCE,KAAOD,EAAoBC,KAE3BC,QAAUC,EAAWD,QAEZE,QAAUA,GACVzD,iBAAmBA,GACnBb,oBAAsBA,GAEZuE,gBAAkBA,GAClBL,oBAAsBA,EAEtBzD,qBAAuB,CACtC,CAACoD,EAAcC,YAAY,EAAG,gFAC9B,CAACD,EAAcE,gBAAgB,EAAG,qFAGtCS,aAAA,CACI,IAAMC,EAAiB1B,EAAO2B,CAAc,EAE5C,KAAKpE,QAAUmE,EAAenE,QAAO,CACzC,CAEAqE,UAAQ,CACJ,KAAKf,QAAU,KAAKrE,aAAaqE,SAAW,GAC5C,KAAKgB,eAAc,EACnB,KAAKC,aAAY,EACjB,KAAKzD,uBAAyB,CAAC,EAAE,CAAC,KAAK7B,aAAa0C,iBAAmB,KAAK1B,kBAChF,CAEAuE,YAAYC,EAAsB,CAC1B,CAAC,KAAK3D,wBAA0B2D,EAAQpB,oBACxC,KAAK1B,gBAAkB,KAAK+C,mBAAkB,GAE9CD,EAAQxF,cACR,KAAKqE,QAAU,KAAKrE,aAAaqE,SAAW,KAE5CmB,EAAQxE,mBAAqBwE,EAAQxF,cACrC,KAAK0F,0BAAyB,CAEtC,CAEAL,gBAAc,CACN,KAAKpG,eAAiB,KAAKE,QAC3B,KAAKuE,wBAAwBiC,0BAA0B,KAAK3B,QAAS,EAAE4B,UAAU,CAC7EC,KAAOC,GAAoC,CACvC,KAAKtF,WAAa,KAAKoD,gBAClBmC,4CAA4CD,EAASE,IAAK,EAC1DC,IAAKC,GAAaA,EAASA,QAAQ,EACnCC,OAAQD,GAAaA,IAAajE,MAAS,EAC3CgE,IAAKC,GAAaA,CAAS,EAEhC,KAAK1F,WAAa4F,MAAMC,KAAK,IAAIC,IAAI,KAAK9F,UAAU,CAAC,CACzD,EACA+F,MAAQA,GAA6BC,GAAQ,KAAK1C,aAAcyC,CAAK,EACxE,CAET,CAEAjB,cAAY,CACH,KAAKtF,aAAagC,MAGvB,KAAKuB,oBAAoBkD,sBAAsB,KAAKzG,aAAagC,IAAI,EAAE4D,UAAWc,GAAY,CAC1F,KAAKtC,kBAAoBsC,GAAY,KAAKtC,kBAC1C,KAAK1B,gBAAkB,KAAK+C,mBAAkB,CAClD,CAAC,CACL,CAEAA,oBAAkB,CACd,OAAO,KAAKrB,kBAAkB+B,OAAQQ,IAAa,KAAK3G,aAAa0C,iBAAmB,KAAK1B,mBAAmB0B,iBAAmB,CAAA,GAAIxC,SAASyG,EAAQnE,EAAE,CAAC,CAC/J,CAEAoE,wBAAsB,CAClB,OAAO,KAAKxC,kBAAkByC,KAAMF,GAAYA,EAAQnE,KAAO,KAAKxC,aAAaiD,eAAe,GAAGJ,MAAQ,KAAK7C,aAAaiD,eACjI,CAEAI,8BAA4B,CACxB,OAAO,KAAKe,kBAAkByC,KAAMF,GAAYA,EAAQnE,KAAO,KAAKxB,mBAAmBiC,eAAe,GAAGJ,MAAQ,KAAK7B,mBAAmBiC,eAC7I,CAEAX,qCAAqCqE,EAAoB,CACrD,KAAK9E,uBAAyB,GAC1B,KAAKa,gBAAgBuD,IAAKU,GAAYA,EAAQnE,EAAE,EAAEtC,SAASyG,EAAQnE,EAAE,EACrE,KAAKE,gBAAkB,KAAKA,gBAAgByD,OAAQW,GAAMA,EAAEtE,KAAOmE,EAAQnE,EAAE,EAE7E,KAAKE,gBAAgBqE,KAAKJ,CAAO,EAErC,KAAK3G,YAAa0C,gBAAkB,KAAKA,gBAAgBuD,IAAKU,GAAYA,EAAQnE,EAAE,CACxF,CAEAO,WAAW4D,EAAgC,CACvC,KAAK3G,YAAaiD,gBAAkB0D,GAASnE,EACjD,CAEAwE,iBAAe,CACX,KAAKhH,YAAaqE,QAAU,KAAKA,OACrC,CAEA4C,UAAQ,CACJ,KAAK5C,QAAU,GACf,KAAK2C,gBAAe,CACxB,CAEAE,WAAS,CACL,KAAK7C,QAAU,GACf,KAAK2C,gBAAe,CACxB,CAEAlF,gCAA8B,CACtB,KAAKD,wBACL,KAAK7B,YAAa0C,gBAAkBT,OACpC,KAAKS,gBAAkB,KAAK+C,mBAAkB,GAE9C,KAAKzF,YAAa0C,gBAAkB,KAAKA,gBAAgBuD,IAAKU,GAAYA,EAAQnE,EAAE,CAE5F,CAEA5C,0BAA0BsG,EAAgB,CACjC,KAAKlG,cAGL,KAAKA,YAAYC,uBAClB,KAAKD,YAAYC,qBAAuB,CAAA,GAExC,KAAKD,YAAYC,sBAAsBC,SAASgG,CAAQ,EACxD,KAAKlG,YAAYC,qBAAuB,KAAKD,YAAYC,qBAAsBkG,OAAQgB,GAAMA,IAAMjB,CAAQ,EAE3G,KAAKlG,YAAYC,qBAAuB,CAAC,GAAI,KAAKD,YAAYC,sBAAwB,CAAA,EAAKiG,CAAQ,EAE3G,CAEArF,oBAAoBuG,EAAoB,CAC/B,KAAKpH,cAGL,KAAKA,YAAYiB,0BAClB,KAAKjB,YAAYiB,wBAA0B,CAAA,GAE3C,KAAKjB,YAAYiB,yBAAyBf,SAASkH,CAAK,EACxD,KAAKpH,YAAYiB,wBAA0B,KAAKjB,YAAYiB,wBAAyBkF,OAAQgB,GAAMA,IAAMC,CAAK,EAE9G,KAAKpH,YAAYiB,wBAA0B,CAAC,GAAI,KAAKjB,YAAYiB,yBAA2B,CAAA,EAAKmG,CAAK,EAE9G,CAEA,IAAIC,iBAAe,CACf,OAAI,KAAKrG,kBACE,CAAC,KAAKA,kBAAkBqD,QAE5B,EACX,CAEA,IAAIiD,0BAAwB,CACxB,OAAO,KAAKD,iBAAoB,CAAC,KAAKtG,SAAW,KAAK9B,eAAiB,KAAKC,QAChF,CAMQwG,2BAAyB,CAC7B,KAAKnE,mBAAmBgG,QAASH,GAAS,CACtC,IAAMI,EACF,CAAC,KAAKxH,aAAaqE,SAClB,KAAKrD,mBACF,CAAC,KAAKhB,aAAaiB,yBAAyBf,SAASkH,CAAK,IACzD,KAAKpG,kBAAkBC,yBAAyBf,SAASkH,CAAK,GAAK,CAAC,KAAKpG,kBAAkBqD,SACpG,KAAKlD,+BAA+BsG,IAAIL,EAAOI,CAAU,CAC7D,CAAC,CACL,4CAlNSlE,EAAoC,2BAApCA,EAAoCoE,UAAA,CAAA,CAAA,qCAAA,CAAA,EAAAC,OAAA,CAAA3H,YAAA,cAAAgB,kBAAA,oBAAA/B,aAAA,eAAA+E,SAAA,UAAA,EAAA4D,QAAA,CAAA3D,UAAA,WAAA,EAAA4D,SAAA,CAAAC,CAAA,EAAAC,MAAA,GAAAC,KAAA,GAAAC,OAAA,CAAA,CAAA,EAAA,WAAA,EAAA,CAAA,eAAA,kDAAA,EAAA,MAAA,EAAA,QAAA,SAAA,EAAA,CAAA,eAAA,mDAAA,EAAA,MAAA,EAAA,QAAA,SAAA,EAAA,CAAA,eAAA,sDAAA,EAAA,aAAA,MAAA,EAAA,CAAA,eAAA,sEAAA,EAAA,UAAA,MAAA,EAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,eAAA,sEAAA,EAAA,SAAA,EAAA,CAAA,EAAA,SAAA,oBAAA,EAAA,CAAA,cAAA,GAAA,EAAA,gBAAA,EAAA,CAAA,KAAA,iBAAA,oBAAA,GAAA,EAAA,MAAA,sBAAA,OAAA,EAAA,CAAA,kBAAA,GAAA,kBAAA,gBAAA,EAAA,CAAA,eAAA,sDAAA,EAAA,CAAA,eAAA,sDAAA,EAAA,CAAA,eAAA,4DAAA,EAAA,aAAA,MAAA,EAAA,CAAA,EAAA,YAAA,EAAA,CAAA,OAAA,WAAA,EAAA,mBAAA,EAAA,gBAAA,KAAA,SAAA,EAAA,CAAA,EAAA,mBAAA,EAAA,KAAA,EAAA,CAAA,eAAA,iEAAA,EAAA,aAAA,MAAA,EAAA,CAAA,EAAA,OAAA,YAAA,EAAA,CAAA,EAAA,aAAA,cAAA,OAAA,OAAA,cAAA,EAAA,CAAA,OAAA,WAAA,EAAA,mBAAA,EAAA,gBAAA,KAAA,WAAA,SAAA,EAAA,CAAA,EAAA,mBAAA,EAAA,MAAA,cAAA,EAAA,CAAA,EAAA,eAAA,EAAA,OAAA,YAAA,EAAA,CAAA,EAAA,aAAA,aAAA,EAAA,CAAA,OAAA,WAAA,EAAA,mBAAA,EAAA,gBAAA,SAAA,KAAA,WAAA,SAAA,EAAA,CAAA,eAAA,8EAAA,EAAA,mBAAA,EAAA,KAAA,EAAA,CAAA,kBAAA,GAAA,EAAA,OAAA,EAAA,CAAA,kBAAA,GAAA,EAAA,QAAA,YAAA,EAAA,CAAA,EAAA,OAAA,gBAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,IAAAD,EAAA,ICrCjDzJ,EAAA,EAAA2J,GAAA,EAAA,CAAA,EAUAjJ,EAAA,EAAA,MAAA,CAAA,EACIZ,EAAA,EAAA;KAAA,EAAAY,EAAA,EAAA,MAAA,CAAA,EAIIC,EAAA,QAAA,UAAA,CAAA,OAAS+I,EAAAnB,SAAA,CAAU,CAAA,EAEtBpH,EAAA,EACDrB,EAAA,EAAA;KAAA,EAAAY,EAAA,EAAA,MAAA,CAAA,EAIIC,EAAA,QAAA,UAAA,CAAA,OAAS+I,EAAAlB,UAAA,CAAW,CAAA,EAEvBrH,EAAA,EACLrB,EAAA,EAAA;CAAA,EAAAqB,EAAA,EACArB,EAAA,EAAA;CAAA,EAAAE,EAAA,EAAA4J,GAAA,GAAA,CAAA,EAA2G,EAAAC,GAAA,GAAA,CAAA,EAiD3G9J,EAAA,GAAA,KAAA,CAAA,EACAD,EAAA,GAAA;CAAA,EAAAY,EAAA,GAAA,MAAA,EAAMX,EAAA,GAAA,OAAA,CAAA,EAAqHD,EAAA,GAAA,IAAA,EAAEqB,EAAA,EAC7HrB,EAAA,GAAA;CAAA,EAAAE,EAAA,GAAA8J,GAAA,EAAA,CAAA,EAiBApJ,EAAA,GAAA,MAAA,CAAA,EACIZ,EAAA,GAAA;KAAA,EAAA4B,EAAA,GAAAqI,GAAA,EAAA,EAAA,KAAA,KAAAnI,CAAA,EAeJT,EAAA,EACArB,EAAA,GAAA;CAAA,EAAAY,EAAA,GAAA,KAAA,CAAA,EAAiBX,EAAA,GAAA,OAAA,CAAA,EAAgHD,EAAA,GAAA,GAAA,EAACqB,EAAA,EAClIrB,EAAA,GAAA;CAAA,EAAAY,EAAA,GAAA,MAAA,CAAA,EACIZ,EAAA,GAAA;KAAA,EAAAY,EAAA,GAAA,MAAA,CAAA,EACIZ,EAAA,GAAA;SAAA,EAAAY,EAAA,GAAA,SAAA,EAAA,EACIZ,EAAA,EAAA,2BACJqB,EAAA,EACArB,EAAA,GAAA;SAAA,EAAAY,EAAA,GAAA,MAAA,EAAA,EACIZ,EAAA,GAAA;aAAA,EAAAE,EAAA,GAAAgK,GAAA,EAAA,CAAA,EAKAtI,EAAA,GAAAuI,GAAA,EAAA,EAAA,KAAA,KAAArI,CAAA,EAKJT,EAAA,EACJrB,EAAA,GAAA;KAAA,EAAAqB,EAAA,EACArB,EAAA,GAAA;KAAA,EAAAE,EAAA,GAAAkK,GAAA,EAAA,CAAA,EAGJ/I,EAAA,EACArB,EAAA,GAAA;CAAA,cAtIAM,EAAAsJ,EAAAf,gBAAA,EAAA,EAAA,EAcQxI,EAAA,CAAA,EAAAmE,EAAA,WAAAoF,EAAAd,wBAAA,EADAvH,EAAA,UAAA8I,EAAA,GAAAC,GAAAV,EAAA/D,QAAA,CAAA+D,EAAA/D,OAAA,CAAA,EAQAxF,EAAA,CAAA,EAAAmE,EAAA,WAAAoF,EAAAd,wBAAA,EADAvH,EAAA,UAAA8I,EAAA,GAAAE,GAAA,CAAAX,EAAA/D,QAAA+D,EAAA/D,OAAA,CAAA,EAMRxF,EAAA,CAAA,EAAAC,EAAAsJ,EAAAnJ,eAAAmJ,EAAAjJ,UAAAiJ,EAAApI,aAAA,KAAA,KAAAoI,EAAApI,YAAAgC,QAAAoG,EAAAxD,OAAAwD,EAAApI,aAAA,KAAA,KAAAoI,EAAApI,YAAAgC,QAAAoG,EAAA1D,oBAAA,EAAA,EAAA,EAmBA7F,EAAA,EAAAC,GAAAsJ,EAAApI,aAAA,KAAA,KAAAoI,EAAApI,YAAAgC,QAAAoG,EAAAxD,KAAA,EAAA,EAAA,EAgCA/F,EAAA,CAAA,EAAAC,EAAAsJ,EAAApH,kBAAA,GAAA,EAAA,EAkBInC,EAAA,CAAA,EAAA0B,EAAA6H,EAAAhE,iBAAA,EAoBQvF,EAAA,EAAA,EAAA+D,EAAA;eAAAoG,EAAAZ,EAAAxB,uBAAA,KAAA,MAAAoC,IAAA/G,OAAA+G,EAAAtI,EAAA,GAAA,GAAA,uEAAA,EAAA;SAAA,EAGA7B,EAAA,CAAA,EAAAC,EAAAsJ,EAAApH,kBAAA,GAAA,EAAA,EAKAnC,EAAA,EAAA0B,EAAA6H,EAAA1F,eAAA,EAOR7D,EAAA,CAAA,EAAAC,EAAAsJ,EAAApI,aAAA,MAAAoI,EAAApI,YAAAiD,gBAAA,GAAA,EAAA,kBD1GIgG,EACAC,EACAC,EAAWC,EAAAC,EAAAC,EACXC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,EACAC,EAAoB,EAAAC,cAAA,CAAA,CAAA,SAGfzG,CAAoC,GAAA,qCGyC7B0G,EAAA,EAAA;qBAAA,EAAAC,EAAA,EAAA,MAAA,EAAA,EACID,EAAA,EAAA;yBAAA,EAAAC,EAAA,EAAA,QAAA,EAAA,EAAgGC,EAAA,gBAAA,SAAAC,EAAA,CAAAC,EAAAC,CAAA,EAAA,IAAAC,EAAAC,EAAA,CAAA,EAAAC,OAAAC,EAAAH,EAAAI,qBAAAP,CAAA,IAAAG,EAAAI,qBAAAP,GAAAQ,EAAAR,CAAA,CAAA,CAAA,EAAhGS,EAAA,EACAZ,EAAA,EAAA;yBAAA,EAAAa,EAAA,EAAA,QAAA,EAAA,EAKJb,EAAA,EAAA;qBAAA,EAAAY,EAAA,EACJZ,EAAA,EAAA;iBAAA,qBAPkFc,EAAA,CAAA,EAAAC,EAAA,WAAA,CAAAT,EAAAU,OAAA,EAAsBC,EAAA,UAAAX,EAAAI,oBAAA,sCAsBpGV,EAAA,EAAA;qBAAA,EAAAC,EAAA,EAAA,MAAA,EAAA,EACID,EAAA,EAAA;yBAAA,EAAAC,EAAA,EAAA,QAAA,EAAA,EAA4FC,EAAA,gBAAA,SAAAC,EAAA,CAAAC,EAAAc,CAAA,EAAA,IAAAZ,EAAAC,EAAA,CAAA,EAAAC,OAAAC,EAAAH,EAAAa,iBAAAhB,CAAA,IAAAG,EAAAa,iBAAAhB,GAAAQ,EAAAR,CAAA,CAAA,CAAA,EAA5FS,EAAA,EACAZ,EAAA,EAAA;yBAAA,EAAAa,EAAA,EAAA,QAAA,EAAA,EACJb,EAAA,EAAA;qBAAA,EAAAY,EAAA,EACJZ,EAAA,EAAA;iBAAA,qBAH8Ec,EAAA,CAAA,EAAAC,EAAA,WAAA,CAAAT,EAAAU,OAAA,EAAsBC,EAAA,UAAAX,EAAAa,gBAAA,sCAhExGnB,EAAA,EAAA;aAAA,EAAAa,EAAA,EAAA,KAAA,CAAA,EAEAb,EAAA,EAAA;;aAAA,EAAAa,EAAA,EAAA,KAAA,CAAA,EACAb,EAAA,EAAA;aAAA,EAAAC,EAAA,EAAA,KAAA,EACID,EAAA,EAAA;iBAAA,EAAAC,EAAA,EAAA,sCAAA,CAAA,EAKImB,EAAA,YAAA,UAAA,CAAAhB,EAAAiB,CAAA,EAAA,IAAAf,EAAAC,EAAA,CAAA,EAAA,OAAAI,EAAAL,EAAAgB,QAAuB,EAAI,CAAA,CAAA,EAL/BV,EAAA,EAOJZ,EAAA,EAAA;aAAA,EAAAY,EAAA,EAEAZ,EAAA,EAAA;;aAAA,EAAAa,EAAA,GAAA,KAAA,CAAA,EAEAb,EAAA,GAAA;;aAAA,EAAAC,EAAA,GAAA,KAAA,EACID,EAAA,GAAA;iBAAA,EAAAa,EAAA,GAAA,KAAA,CAAA,EACAb,EAAA,GAAA;iBAAA,EAAAa,EAAA,GAAA,KAAA,CAAA,EACAb,EAAA,GAAA;iBAAA,EAAAC,EAAA,GAAA,KAAA,EACID,EAAA,GAAA;qBAAA,EAAAC,EAAA,GAAA,sCAAA,CAAA,EAKImB,EAAA,YAAA,UAAA,CAAAhB,EAAAiB,CAAA,EAAA,IAAAf,EAAAC,EAAA,CAAA,EAAA,OAAAI,EAAAL,EAAAgB,QAAuB,EAAI,CAAA,CAAA,EAL/BV,EAAA,EAOJZ,EAAA,GAAA;iBAAA,EAAAY,EAAA,EAEAZ,EAAA,GAAA;;iBAAA,EAAAa,EAAA,GAAA,KAAA,CAAA,EACAb,EAAA,GAAA;iBAAA,EAAAa,EAAA,GAAA,KAAA,CAAA,EACAb,EAAA,GAAA;iBAAA,EAAAC,EAAA,GAAA,sCAAA,CAAA,EAKImB,EAAA,YAAA,UAAA,CAAAhB,EAAAiB,CAAA,EAAA,IAAAf,EAAAC,EAAA,CAAA,EAAA,OAAAI,EAAAL,EAAAgB,QAAuB,EAAI,CAAA,CAAA,EAL/BV,EAAA,EAOAZ,EAAA,GAAA;iBAAA,EAAAa,EAAA,GAAA,IAAA,EAEAb,EAAA,GAAA;;iBAAA,EAAAuB,EAAA,GAAAC,GAAA,EAAA,CAAA,EAUJZ,EAAA,EAEAZ,EAAA,GAAA;;aAAA,EAAAa,EAAA,GAAA,KAAA,CAAA,EACAb,EAAA,GAAA;aAAA,EAAAC,EAAA,GAAA,KAAA,EACID,EAAA,GAAA;iBAAA,EAAAa,EAAA,GAAA,KAAA,CAAA,EACAb,EAAA,GAAA;iBAAA,EAAAC,EAAA,GAAA,sCAAA,CAAA,EAKImB,EAAA,YAAA,UAAA,CAAAhB,EAAAiB,CAAA,EAAA,IAAAf,EAAAC,EAAA,CAAA,EAAA,OAAAI,EAAAL,EAAAgB,QAAuB,EAAI,CAAA,CAAA,EAL/BV,EAAA,EAOAZ,EAAA,GAAA;iBAAA,EAAAa,EAAA,GAAA,IAAA,EACAb,EAAA,GAAA;iBAAA,EAAAuB,EAAA,GAAAE,GAAA,EAAA,CAAA,EAMJb,EAAA,EACJZ,EAAA,GAAA;SAAA,qBAhEYc,EAAA,CAAA,EAAAC,EAAA,cAAAT,EAAAoB,cAAA,KAAA,KAAApB,EAAAoB,aAAAC,sBAAA,EAAoD,oBAAArB,EAAAsB,oBAAA,KAAA,KAAAtB,EAAAsB,mBAAAD,sBAAA,EACY,eAAArB,EAAAuB,YAAA,EACnC,WAAAvB,EAAAwB,QAAA,EAazBhB,EAAA,EAAA,EAAAC,EAAA,cAAAT,EAAAoB,cAAA,KAAA,KAAApB,EAAAoB,aAAAK,uBAAA,EAAqD,oBAAAzB,EAAAsB,oBAAA,KAAA,KAAAtB,EAAAsB,mBAAAG,uBAAA,EACY,eAAAzB,EAAAuB,YAAA,EACpC,WAAAvB,EAAAwB,QAAA,EASjChB,EAAA,CAAA,EAAAC,EAAA,cAAAT,EAAAoB,cAAA,KAAA,KAAApB,EAAAoB,aAAAM,4BAAA,EAA2D,oBAAA1B,EAAAsB,oBAAA,KAAA,KAAAtB,EAAAsB,mBAAAI,4BAAA,EACW,eAAA1B,EAAAuB,YAAA,EACzC,WAAAvB,EAAAwB,QAAA,EAMjChB,EAAA,CAAA,EAAAmB,EAAA3B,EAAAuB,eAAAvB,EAAA4B,OAAA,GAAA,EAAA,EAgBIpB,EAAA,CAAA,EAAAC,EAAA,cAAAT,EAAAoB,cAAA,KAAA,KAAApB,EAAAoB,aAAAS,wBAAA,EAAuD,oBAAA7B,EAAAsB,oBAAA,KAAA,KAAAtB,EAAAsB,mBAAAO,wBAAA,EACW,eAAA7B,EAAAuB,YAAA,EACrC,WAAAvB,EAAAwB,QAAA,EAKjChB,EAAA,CAAA,EAAAmB,EAAA3B,EAAAuB,eAAAvB,EAAA4B,OAAA,GAAA,EAAA,sCASJlC,EAAA,EAAA;aAAA,EAAAa,EAAA,EAAA,KAAA,CAAA,EAEAb,EAAA,EAAA;;aAAA,EAAAC,EAAA,EAAA,KAAA,EACID,EAAA,EAAA;iBAAA,EAAAa,EAAA,EAAA,KAAA,EAAA,EACAb,EAAA,EAAA;iBAAA,EAAAC,EAAA,EAAA,sCAAA,CAAA,EAKImB,EAAA,YAAA,UAAA,CAAAhB,EAAAgC,CAAA,EAAA,IAAA9B,EAAAC,EAAA,CAAA,EAAA,OAAAI,EAAAL,EAAAgB,QAAuB,EAAI,CAAA,CAAA,EAL/BV,EAAA,EAOJZ,EAAA,EAAA;aAAA,EAAAY,EAAA,EACJZ,EAAA,EAAA;SAAA,qBAPYc,EAAA,CAAA,EAAAC,EAAA,cAAAT,EAAAoB,cAAA,KAAA,KAAApB,EAAAoB,aAAAW,gCAAA,EAA+D,oBAAA/B,EAAAsB,oBAAA,KAAA,KAAAtB,EAAAsB,mBAAAS,gCAAA,EACW,eAAA/B,EAAAuB,YAAA,EAC7C,WAAAvB,EAAAwB,QAAA,sCAxG7C9B,EAAA,EAAA;KAAA,EAAAC,EAAA,EAAA,KAAA,EACID,EAAA,EAAA;SAAA,EAAAa,EAAA,EAAA,KAAA,CAAA,EACAb,EAAA,EAAA;SAAA,EAAAC,EAAA,EAAA,KAAA,EACID,EAAA,EAAA;aAAA,EAAAC,EAAA,EAAA,sCAAA,CAAA,EAKImB,EAAA,YAAA,UAAA,CAAAhB,EAAAkC,CAAA,EAAA,IAAAhC,EAAAC,EAAA,EAAA,OAAAI,EAAAL,EAAAgB,QAAuB,EAAI,CAAA,CAAA,EAL/BV,EAAA,EAOJZ,EAAA,EAAA;SAAA,EAAAY,EAAA,EAEAZ,EAAA,EAAA;;SAAA,EAAAa,EAAA,GAAA,KAAA,CAAA,EAEAb,EAAA,GAAA;;SAAA,EAAAa,EAAA,GAAA,KAAA,CAAA,EACAb,EAAA,GAAA;SAAA,EAAAC,EAAA,GAAA,KAAA,EACID,EAAA,GAAA;aAAA,EAAAC,EAAA,GAAA,sCAAA,CAAA,EAKImB,EAAA,YAAA,UAAA,CAAAhB,EAAAkC,CAAA,EAAA,IAAAhC,EAAAC,EAAA,EAAA,OAAAI,EAAAL,EAAAgB,QAAuB,EAAI,CAAA,CAAA,EAL/BV,EAAA,EAOJZ,EAAA,GAAA;SAAA,EAAAY,EAAA,EAEAZ,EAAA,GAAA;;SAAA,EAAAuB,EAAA,GAAAgB,GAAA,GAAA,EAAA,EAAiC,GAAAC,GAAA,GAAA,CAAA,EAqFrC5B,EAAA,EACJZ,EAAA,GAAA;CAAA,oBA3GgBc,EAAA,CAAA,EAAAC,EAAA,cAAAT,EAAAoB,cAAA,KAAA,KAAApB,EAAAoB,aAAAe,gBAAA,EAA8C,oBAAAnC,EAAAsB,oBAAA,KAAA,KAAAtB,EAAAsB,mBAAAa,gBAAA,EACY,eAAAnC,EAAAuB,YAAA,EAC7B,WAAAvB,EAAAwB,QAAA,EAW7BhB,EAAA,CAAA,EAAAC,EAAA,cAAAT,EAAAoB,cAAA,KAAA,KAAApB,EAAAoB,aAAAgB,4BAAA,EAA0D,oBAAApC,EAAAsB,oBAAA,KAAA,KAAAtB,EAAAsB,mBAAAc,4BAAA,EACY,eAAApC,EAAAuB,YAAA,EACzC,WAAAvB,EAAAwB,QAAA,EAMrChB,EAAA,CAAA,EAAAmB,EAAA3B,EAAAuB,eAAAvB,EAAAqC,SAAA,GAAA,EAAA,EAuEA7B,EAAA,EAAAmB,EAAA3B,EAAAuB,eAAAvB,EAAAqC,SAAA,GAAA,EAAA,GD7ER,IAAaC,IAA2B,IAAA,CAAlC,MAAOA,CAA2B,CAC5BC,oBAAsBC,EAAOC,CAAmB,EAChDC,aAAeF,EAAOG,CAAY,EAGnCpB,aAEAC,SAEAoB,WACAxB,aACAE,mBAEPuB,qBAEOzC,qBAAuB,GACvBS,iBAAmB,GAG1BiC,UAAY,GACZC,SAAW,GACX/B,QAAU,GACVN,QAEAsC,QAAUC,EAAWD,QACrBE,QAAUD,EAAWC,QACrBC,QAAUF,EAAWE,QAErBC,OAASA,GACTC,SAAWA,GAEXC,OAASC,EAAiBD,OAC1B1B,OAAS2B,EAAiB3B,OAC1BS,SAAWkB,EAAiBlB,SAE5BmB,aAAA,CACI,IAAMC,EAAiBjB,EAAOkB,CAAc,EAE5C,KAAKhD,QAAU+C,EAAe/C,QAAO,CACzC,CAEAiD,UAAQ,CACJ,KAAKC,iBAAgB,CACzB,CAEAC,WAAS,CACAC,GAAQ,KAAK1C,aAAc,KAAKyB,oBAAoB,IACrD,KAAK7B,QAAU,GAEvB,CAEA+C,qBAEAC,eAAa,CACT,MAAO,CAAC,KAAKhD,OACjB,CAEA4C,kBAAgB,CACZ,KAAKd,UAAY,GACjB,KAAKmB,2BAA0B,EAAGC,UAAWC,GAAY,CAErD,KAAKrB,UAAY,GACZqB,GACD,KAAKzB,aAAa0B,MAAM,2CAA2C,EAEvE,KAAKhD,aAAe+C,EACpB,KAAKE,yBAAwB,EAC7B,KAAKxB,qBAAuByB,EAAUH,CAAQ,EAC9C,KAAK/D,qBAAuB,KAAKgB,cAAcM,8BAA8B6C,qCAAuC,GACpH,KAAK1D,iBAAmB,KAAKO,cAAcS,0BAA0B2C,yBAA2B,GAChG,KAAKxD,QAAU,EACnB,CAAC,EACD,KAAKyD,iCAAgC,EAAGP,UAAWC,GAAY,CACtDA,GACD,KAAKzB,aAAa0B,MAAM,iDAAiD,EAE7E,KAAK9C,mBAAqB6C,CAC9B,CAAC,CACL,CAEAE,0BAAwB,CACf,KAAKjD,eAGL,KAAKA,aAAae,mBACnB,KAAKf,aAAae,iBAAmB,IAAIuC,IAExC,KAAKtD,aAAagB,+BACnB,KAAKhB,aAAagB,6BAA+B,IAAIuC,IAEpD,KAAKvD,aAAaK,0BACnB,KAAKL,aAAaK,wBAA0B,IAAImD,IAE/C,KAAKxD,aAAaC,yBACnB,KAAKD,aAAaC,uBAAyB,IAAIwD,IAE9C,KAAKzD,aAAaM,+BACnB,KAAKN,aAAaM,6BAA+B,IAAIoD,IAEpD,KAAK1D,aAAaW,mCACnB,KAAKX,aAAaW,iCAAmC,IAAIgD,IAExD,KAAK3D,aAAaS,2BACnB,KAAKT,aAAaS,yBAA2B,IAAImD,IAEzD,CAEAC,kBAAgB,CACZ,KAAKlC,SAAW,GACZ,KAAK3B,cAAgB,KAAKA,aAAaM,+BACvC,KAAKN,aAAaM,6BAA6B6C,oCAAsC,KAAKnE,sBAE1F,KAAKgB,cAAgB,KAAKA,aAAaS,2BACvC,KAAKT,aAAaS,yBAAyB2C,wBAA0B,KAAK3D,kBAE9E,KAAKqE,2BAA0B,EAAGhB,UAC7BiB,GAAY,CACT,KAAKpC,SAAW,GAChB,KAAK/B,QAAU,GACf,KAAKI,aAAe+D,EAASC,MAAQC,OACrC,KAAKhB,yBAAwB,EAC7B,KAAKxB,qBAAuByB,EAAU,KAAKlD,YAAY,EACvD,KAAKsB,aAAa4C,QAAQ,kCAAkC,CAChE,EACClB,GAAS,CACN,KAAKrB,SAAW,GAChBwC,GAAiB,6BAA8BnB,CAAK,EAChDA,EAAMoB,SAAW,KAAOpB,EAAMA,OAASA,EAAMA,MAAMqB,QACnD,KAAK/C,aAAa0B,MAAMA,EAAMA,MAAMqB,OAAO,EAE3C,KAAK/C,aAAa0B,MAAM,qCAAqC,CAErE,CAAC,CAET,CAEAK,kCAAgC,CAC5B,OAAQ,KAAKlD,aAAY,CACrB,KAAKgC,EAAiBD,OAElB,OAAO,IAAIoC,EACf,KAAKnC,EAAiB3B,OAClB,OAAO,KAAKW,oBAAoBoD,kBAAiB,EACrD,KAAKpC,EAAiBlB,SAClB,OAAO,KAAKE,oBAAoBqD,0BAA0B,KAAKpE,QAAS,CAChF,CACJ,CAEAyC,4BAA0B,CACtB,OAAQ,KAAK1C,aAAY,CACrB,KAAKgC,EAAiBD,OAClB,OAAO,KAAKf,oBAAoBoD,kBAAiB,EACrD,KAAKpC,EAAiB3B,OAClB,OAAO,KAAKW,oBAAoBsD,4BAA4B,KAAKrE,QAAS,EAC9E,KAAK+B,EAAiBlB,SAClB,OAAO,KAAKE,oBAAoBuD,8BAA8B,KAAKlD,UAAW,CACtF,CACJ,CAEAsC,4BAA0B,CACtB,OAAQ,KAAK3D,aAAY,CACrB,KAAKgC,EAAiBD,OAClB,OAAO,KAAKf,oBAAoBwD,kBAAkB,KAAK3E,YAAa,EACxE,KAAKmC,EAAiB3B,OAClB,OAAO,KAAKW,oBAAoByD,kBAAkB,KAAKxE,SAAW,KAAKJ,YAAa,EACxF,KAAKmC,EAAiBlB,SAClB,OAAO,KAAKE,oBAAoB0D,oBAAoB,KAAKrD,WAAa,KAAKxB,YAAa,CAChG,CACJ,4CAxKSkB,EAA2B,2BAA3BA,EAA2B4D,UAAA,CAAA,CAAA,0BAAA,CAAA,EAAAC,OAAA,CAAA5E,aAAA,eAAAC,SAAA,WAAAoB,WAAA,YAAA,EAAAwD,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,KAAA,SAAA,EAAA,UAAA,UAAA,YAAA,OAAA,OAAA,EAAA,CAAA,KAAA,OAAA,EAAA,UAAA,UAAA,YAAA,OAAA,OAAA,EAAA,CAAA,eAAA,mDAAA,EAAA,CAAA,EAAA,YAAA,cAAA,oBAAA,eAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,eAAA,+DAAA,EAAA,CAAA,eAAA,yDAAA,EAAA,CAAA,eAAA,0DAAA,EAAA,CAAA,eAAA,qEAAA,EAAA,CAAA,eAAA,iEAAA,EAAA,CAAA,EAAA,aAAA,aAAA,EAAA,CAAA,OAAA,WAAA,KAAA,uBAAA,EAAA,mBAAA,EAAA,gBAAA,WAAA,SAAA,EAAA,CAAA,MAAA,uBAAA,eAAA,6FAAA,EAAA,kBAAA,EAAA,CAAA,OAAA,WAAA,KAAA,mBAAA,EAAA,mBAAA,EAAA,gBAAA,WAAA,SAAA,EAAA,CAAA,MAAA,uBAAA,eAAA,uEAAA,EAAA,kBAAA,EAAA,CAAA,eAAA,mEAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,IC/BxC7G,EAAA,EAAA,KAAA,EACID,EAAA,EAAA;KAAA,EAAAC,EAAA,EAAA,aAAA,CAAA,EAMImB,EAAA,UAAA,UAAA,CAAA,OAAW2F,EAAA7C,iBAAA,CAAkB,CAAA,EANjCtD,EAAA,EAQAZ,EAAA,EAAA;KAAA,EAAAC,EAAA,EAAA,aAAA,CAAA,EAAkImB,EAAA,UAAA,UAAA,CAAA,OAAW2F,EAAAxB,iBAAA,CAAkB,CAAA,EAA/J3E,EAAA,EACJZ,EAAA,EAAA;CAAA,EAAAY,EAAA,EACAZ,EAAA,EAAA;CAAA,EAAAuB,EAAA,EAAAyF,GAAA,GAAA,EAAA,SARQlG,EAAA,CAAA,EAAAC,EAAA,UAAAgG,EAAAzF,QAAAyF,EAAAvD,QAAAuD,EAAAzD,OAAA,EAAuC,YAAAyD,EAAA3D,SAAA,EAChB,OAAA2D,EAAApD,QAAA,EACN,QAAA,wCAAA,EAIC7C,EAAA,CAAA,EAAAC,EAAA,UAAAgG,EAAAtD,OAAA,EAAmB,YAAAsD,EAAA1D,QAAA,EAAuB,OAAA0D,EAAArD,MAAA,EAAgB,QAAA,sCAAA,EAEpF5C,EAAA,CAAA,EAAAmB,EAAA8E,EAAArF,aAAA,EAAA,EAAA,kBDkBcuF,GAAiBC,EAAoBC,GAAsCC,EAAWC,EAAAC,EAAAC,CAAA,EAAAC,cAAA,CAAA,CAAA,SAEvF5E,CAA2B,GAAA",
  "names": ["IrisSettingsType", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275template", "IrisCommonSubSettingsUpdateComponent_Conditional_0_Case_1_Template", "IrisCommonSubSettingsUpdateComponent_Conditional_0_Case_2_Template", "\u0275\u0275advance", "\u0275\u0275conditional", "tmp_1_0", "ctx_r0", "settingsType", "EXERCISE", "COURSE", "\u0275\u0275elementStart", "\u0275\u0275listener", "category_r3", "\u0275\u0275restoreView", "_r2", "$implicit", "\u0275\u0275nextContext", "\u0275\u0275resetView", "onCategorySelectionChange", "\u0275\u0275elementEnd", "\u0275\u0275propertyInterpolate", "\u0275\u0275property", "subSettings", "enabledForCategories", "includes", "\u0275\u0275textInterpolate", "\u0275\u0275repeaterCreate", "IrisCommonSubSettingsUpdateComponent_Conditional_8_For_8_Template", "\u0275\u0275repeaterTrackByIdentity", "\u0275\u0275repeater", "categories", "faCircleExclamation", "\u0275\u0275pipeBind1", "event_r5", "_r4", "onEventToggleChange", "IrisCommonSubSettingsUpdateComponent_Conditional_9_For_14_Conditional_7_Template", "isAdmin", "parentSubSettings", "disabledProactiveEvents", "eventTranslationKeys", "eventInParentDisabledStatusMap", "get", "IrisCommonSubSettingsUpdateComponent_Conditional_9_For_14_Template", "faQuestionCircle", "exerciseChatEvents", "\u0275\u0275twoWayListener", "$event", "_r6", "i0", "\u0275\u0275twoWayBindingSet", "inheritAllowedVariants", "onInheritAllowedVariantsChange", "\u0275\u0275propertyInterpolate1", "type", "undefined", "\u0275\u0275twoWayProperty", "tmp_4_0", "variant_r8", "_r7", "onAllowedIrisVariantsSelectionChange", "\u0275\u0275propertyInterpolate2", "id", "tmp_10_0", "allowedVariants", "tmp_13_0", "\u0275\u0275textInterpolate1", "name", "_r9", "setVariant", "\u0275\u0275classProp", "selectedVariant", "model_r11", "_r10", "description", "getSelectedVariantNameParent", "IrisCommonSubSettingsUpdateComponent", "irisSettingsService", "inject", "IrisSettingsService", "courseManagementService", "CourseManagementService", "exerciseService", "ExerciseService", "alertService", "AlertService", "courseId", "onChanges", "EventEmitter", "Map", "availableVariants", "enabled", "IrisEventType", "BUILD_FAILED", "PROGRESS_STALLED", "IrisSettingsType", "TEXT_EXERCISE_CHAT", "IrisSubSettingsType", "CHAT", "WARNING", "ButtonType", "faTrash", "IrisSubSettings", "constructor", "accountService", "AccountService", "ngOnInit", "loadCategories", "loadVariants", "ngOnChanges", "changes", "getAllowedVariants", "updateEventDisabledStatus", "findAllCategoriesOfCourse", "subscribe", "next", "response", "convertExerciseCategoriesAsStringFromServer", "body", "map", "category", "filter", "Array", "from", "Set", "error", "onError", "getVariantsForFeature", "variants", "variant", "getSelectedVariantName", "find", "m", "push", "onEnabledChange", "onEnable", "onDisable", "c", "event", "inheritDisabled", "isSettingsSwitchDisabled", "forEach", "isDisabled", "set", "selectors", "inputs", "outputs", "features", "\u0275\u0275NgOnChangesFeature", "decls", "vars", "consts", "template", "rf", "ctx", "IrisCommonSubSettingsUpdateComponent_Conditional_0_Template", "IrisCommonSubSettingsUpdateComponent_Conditional_8_Template", "IrisCommonSubSettingsUpdateComponent_Conditional_9_Template", "IrisCommonSubSettingsUpdateComponent_Conditional_16_Template", "IrisCommonSubSettingsUpdateComponent_For_20_Template", "IrisCommonSubSettingsUpdateComponent_Conditional_36_Template", "IrisCommonSubSettingsUpdateComponent_For_38_Template", "IrisCommonSubSettingsUpdateComponent_Conditional_41_Template", "\u0275\u0275pureFunction2", "_c0", "_c1", "tmp_9_0", "TranslateDirective", "NgClass", "FormsModule", "CheckboxControlValueAccessor", "NgControlStatus", "NgModel", "FaIconComponent", "NgbTooltip", "NgbDropdown", "NgbDropdownToggle", "NgbDropdownMenu", "NgbDropdownButtonItem", "NgbDropdownItem", "ArtemisTranslatePipe", "encapsulation", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275twoWayListener", "$event", "\u0275\u0275restoreView", "_r4", "ctx_r1", "\u0275\u0275nextContext", "i0", "\u0275\u0275twoWayBindingSet", "autoLectureIngestion", "\u0275\u0275resetView", "\u0275\u0275elementEnd", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275property", "isAdmin", "\u0275\u0275twoWayProperty", "_r5", "autoFaqIngestion", "\u0275\u0275listener", "_r3", "isDirty", "\u0275\u0275template", "IrisSettingsUpdateComponent_Conditional_7_Conditional_19_Conditional_31_Template", "IrisSettingsUpdateComponent_Conditional_7_Conditional_19_Conditional_43_Template", "irisSettings", "irisCourseChatSettings", "parentIrisSettings", "settingsType", "courseId", "irisLectureChatSettings", "irisLectureIngestionSettings", "\u0275\u0275conditional", "COURSE", "irisFaqIngestionSettings", "_r6", "irisCompetencyGenerationSettings", "_r1", "IrisSettingsUpdateComponent_Conditional_7_Conditional_19_Template", "IrisSettingsUpdateComponent_Conditional_7_Conditional_20_Template", "irisChatSettings", "irisTextExerciseChatSettings", "EXERCISE", "IrisSettingsUpdateComponent", "irisSettingsService", "inject", "IrisSettingsService", "alertService", "AlertService", "exerciseId", "originalIrisSettings", "isLoading", "isSaving", "PRIMARY", "ButtonType", "WARNING", "SUCCESS", "faSave", "faRotate", "GLOBAL", "IrisSettingsType", "constructor", "accountService", "AccountService", "ngOnInit", "loadIrisSettings", "ngDoCheck", "isEqual", "canDeactivateWarning", "canDeactivate", "loadIrisSettingsObservable", "subscribe", "settings", "error", "fillEmptyIrisSubSettings", "cloneDeep", "autoIngestOnLectureAttachmentUpload", "autoIngestOnFaqCreation", "loadParentIrisSettingsObservable", "IrisChatSubSettings", "IrisTextExerciseChatSubSettings", "IrisLectureChatSubSettings", "IrisCourseChatSubSettings", "IrisLectureIngestionSubSettings", "IrisCompetencyGenerationSubSettings", "IrisFaqIngestionSubSettings", "saveIrisSettings", "saveIrisSettingsObservable", "response", "body", "undefined", "success", "captureException", "status", "message", "Observable", "getGlobalSettings", "getCombinedCourseSettings", "getUncombinedCourseSettings", "getUncombinedExerciseSettings", "setGlobalSettings", "setCourseSettings", "setExerciseSettings", "selectors", "inputs", "decls", "vars", "consts", "template", "rf", "ctx", "IrisSettingsUpdateComponent_Conditional_7_Template", "ButtonComponent", "TranslateDirective", "IrisCommonSubSettingsUpdateComponent", "FormsModule", "CheckboxControlValueAccessor", "NgControlStatus", "NgModel", "encapsulation"]
}
