{
  "version": 3,
  "sources": ["src/main/webapp/app/overview/course-faq/course-faq-accordion-component.ts", "src/main/webapp/app/overview/course-faq/course-faq-accordion.component.html", "src/main/webapp/app/overview/course-faq/course-faq.component.ts", "src/main/webapp/app/overview/course-faq/course-faq.component.html"],
  "sourcesContent": ["import { Component, OnDestroy, input } from '@angular/core';\r\nimport { Faq } from 'app/entities/faq.model';\r\nimport { CustomExerciseCategoryBadgeComponent } from 'app/shared/exercise-categories/custom-exercise-category-badge/custom-exercise-category-badge.component';\r\nimport { Subject } from 'rxjs/internal/Subject';\r\nimport { HtmlForMarkdownPipe } from 'app/shared/pipes/html-for-markdown.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-course-faq-accordion',\r\n    templateUrl: './course-faq-accordion.component.html',\r\n    styleUrl: './course-faq-accordion.component.scss',\r\n    imports: [CustomExerciseCategoryBadgeComponent, HtmlForMarkdownPipe],\r\n})\r\nexport class CourseFaqAccordionComponent implements OnDestroy {\r\n    private ngUnsubscribe = new Subject<void>();\r\n    faq = input.required<Faq>();\r\n\r\n    ngOnDestroy(): void {\r\n        this.ngUnsubscribe.next();\r\n        this.ngUnsubscribe.complete();\r\n    }\r\n}\r\n", "<div>\r\n    <div class=\"faq-container\">\r\n        <h5 class=\"markdown-preview mb-0\">{{ faq().questionTitle }}</h5>\r\n\r\n        <div class=\"badge-container\">\r\n            @for (category of faq().categories; track category) {\r\n                <jhi-custom-exercise-category-badge [category]=\"category\" class=\"mt-2 ms-1\" />\r\n            }\r\n        </div>\r\n    </div>\r\n    <div [innerHTML]=\"faq().questionAnswer | htmlForMarkdown\"></div>\r\n    <hr class=\"mt-0\" />\r\n</div>\r\n", "import { Component, ElementRef, OnDestroy, OnInit, Renderer2, ViewEncapsulation, effect, inject, viewChildren } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { debounceTime, map, takeUntil } from 'rxjs/operators';\r\nimport { BehaviorSubject, Subject, Subscription } from 'rxjs';\r\nimport { faFilter } from '@fortawesome/free-solid-svg-icons';\r\nimport { ButtonType } from 'app/shared/components/button.component';\r\n\r\nimport { CourseFaqAccordionComponent } from 'app/overview/course-faq/course-faq-accordion-component';\r\nimport { Faq, FaqState } from 'app/entities/faq.model';\r\nimport { FaqService } from 'app/faq/faq.service';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { FaqCategory } from 'app/entities/faq-category.model';\r\nimport { loadCourseFaqCategories } from 'app/faq/faq.utils';\r\nimport { CustomExerciseCategoryBadgeComponent } from 'app/shared/exercise-categories/custom-exercise-category-badge/custom-exercise-category-badge.component';\r\nimport { onError } from 'app/shared/util/global.utils';\r\nimport { SearchFilterComponent } from 'app/shared/search-filter/search-filter.component';\r\nimport { SortService } from 'app/shared/service/sort.service';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n    selector: 'jhi-course-faq',\r\n    templateUrl: './course-faq.component.html',\r\n    styleUrls: ['../course-overview.scss', 'course-faq.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    imports: [CourseFaqAccordionComponent, CustomExerciseCategoryBadgeComponent, SearchFilterComponent, NgbModule, TranslateDirective, FontAwesomeModule, CommonModule],\r\n})\r\nexport class CourseFaqComponent implements OnInit, OnDestroy {\r\n    faqElements = viewChildren<ElementRef>('faqElement');\r\n    private ngUnsubscribe = new Subject<void>();\r\n    private parentParamSubscription: Subscription;\r\n\r\n    courseId: number;\r\n    referencedFaqId: number;\r\n    faqs: Faq[];\r\n    faqState = FaqState.ACCEPTED;\r\n\r\n    filteredFaqs: Faq[];\r\n    existingCategories: FaqCategory[];\r\n    activeFilters = new Set<string>();\r\n\r\n    hasCategories = false;\r\n    isCollapsed = false;\r\n\r\n    searchInput = new BehaviorSubject<string>('');\r\n\r\n    readonly ButtonType = ButtonType;\r\n\r\n    // Icons\r\n    readonly faFilter = faFilter;\r\n\r\n    private route = inject(ActivatedRoute);\r\n\r\n    private faqService = inject(FaqService);\r\n    private alertService = inject(AlertService);\r\n    private sortService = inject(SortService);\r\n    private renderer = inject(Renderer2);\r\n\r\n    constructor() {\r\n        effect(() => {\r\n            if (this.referencedFaqId) {\r\n                this.scrollToFaq(this.referencedFaqId);\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.parentParamSubscription = this.route.parent!.params.subscribe((params) => {\r\n            this.courseId = Number(params.courseId);\r\n            this.loadFaqs();\r\n            this.loadCourseExerciseCategories(this.courseId);\r\n        });\r\n\r\n        this.route.queryParams.pipe(takeUntil(this.ngUnsubscribe)).subscribe((params) => {\r\n            this.referencedFaqId = params['faqId'];\r\n        });\r\n\r\n        this.searchInput.pipe(debounceTime(300)).subscribe((searchTerm: string) => {\r\n            this.refreshFaqList(searchTerm);\r\n        });\r\n    }\r\n\r\n    private loadCourseExerciseCategories(courseId: number) {\r\n        loadCourseFaqCategories(courseId, this.alertService, this.faqService, this.faqState).subscribe((existingCategories) => {\r\n            this.existingCategories = existingCategories;\r\n            this.hasCategories = existingCategories.length > 0;\r\n        });\r\n    }\r\n\r\n    private loadFaqs() {\r\n        this.faqService\r\n            .findAllByCourseIdAndState(this.courseId, this.faqState)\r\n            .pipe(map((res: HttpResponse<Faq[]>) => res.body))\r\n            .subscribe({\r\n                next: (res: Faq[]) => {\r\n                    this.faqs = res;\r\n                    this.applyFilters();\r\n                    this.sortFaqs();\r\n                },\r\n                error: (res: HttpErrorResponse) => onError(this.alertService, res),\r\n            });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.ngUnsubscribe.next();\r\n        this.ngUnsubscribe.complete();\r\n        this.parentParamSubscription?.unsubscribe();\r\n        this.searchInput.complete();\r\n    }\r\n\r\n    toggleFilters(category: string) {\r\n        this.activeFilters = this.faqService.toggleFilter(category, this.activeFilters);\r\n        this.refreshFaqList(this.searchInput.getValue());\r\n    }\r\n\r\n    private applyFilters(): void {\r\n        this.filteredFaqs = this.faqService.applyFilters(this.activeFilters, this.faqs);\r\n    }\r\n\r\n    private applySearch(searchTerm: string) {\r\n        this.filteredFaqs = this.filteredFaqs.filter((faq) => {\r\n            return this.faqService.hasSearchTokens(faq, searchTerm);\r\n        });\r\n    }\r\n\r\n    setSearchValue(searchValue: string) {\r\n        this.searchInput.next(searchValue);\r\n    }\r\n\r\n    refreshFaqList(searchTerm: string) {\r\n        this.applyFilters();\r\n        this.applySearch(searchTerm);\r\n    }\r\n\r\n    sortFaqs() {\r\n        this.sortService.sortByProperty(this.filteredFaqs, 'id', true);\r\n    }\r\n\r\n    scrollToFaq(faqId: number): void {\r\n        const faqElement = this.faqElements().find((faq) => faq.nativeElement.id === 'faq-' + String(faqId));\r\n        if (faqElement) {\r\n            this.renderer.selectRootElement(faqElement.nativeElement, true).scrollIntoView({ behavior: 'smooth', block: 'start' });\r\n        }\r\n    }\r\n}\r\n", "<div>\r\n    <div class=\"input-group mb-2 rounded-3 p-2 me-2 module-bg d-flex justify-content-between\">\r\n        <jhi-search-filter class=\"flex-grow-1\" (newSearchEvent)=\"setSearchValue($event)\" />\r\n        <div class=\"ms-2 me-2\" aria-label=\"Filter Dropdown\" ngbDropdown>\r\n            <button class=\"btn\" [ngClass]=\"{ 'btn-secondary': activeFilters.size === 0, 'btn-success': activeFilters.size > 0 }\" ngbDropdownToggle id=\"filter-dropdown-button\">\r\n                <fa-icon [icon]=\"faFilter\" />\r\n                <span class=\"d-s-none d-md-inline\" jhiTranslate=\"artemisApp.courseOverview.exerciseList.filter\" [translateValues]=\"{ num: activeFilters.size }\"></span>\r\n            </button>\r\n            @if (hasCategories) {\r\n                <ul ngbDropdownMenu class=\"checkbox-menu text-nowrap pe-2\" aria-labelledby=\"filter-dropdown-button\">\r\n                    @for (category of existingCategories; track category) {\r\n                        <li>\r\n                            <label class=\"d-flex align-items-center\">\r\n                                <input\r\n                                    id=\"filter-{{ category.category }}\"\r\n                                    class=\"ms-2 form-check-input\"\r\n                                    (change)=\"toggleFilters(category.category!)\"\r\n                                    [checked]=\"activeFilters.has(category.category!)\"\r\n                                    type=\"checkbox\"\r\n                                />\r\n                                <jhi-custom-exercise-category-badge [category]=\"category\" class=\"mt-2 ms-1\" />\r\n                            </label>\r\n                        </li>\r\n                    }\r\n                </ul>\r\n            }\r\n        </div>\r\n    </div>\r\n    <hr />\r\n    @if (faqs?.length === 0) {\r\n        <h2 class=\"markdown-preview\" jhiTranslate=\"artemisApp.faq.noExisting\"></h2>\r\n    }\r\n    <div>\r\n        @for (faq of this.filteredFaqs; track faq) {\r\n            <div #faqElement id=\"faq-{{ faq.id }}\">\r\n                <jhi-course-faq-accordion [faq]=\"faq\" />\r\n            </div>\r\n        }\r\n    </div>\r\n    @if (filteredFaqs?.length === 0 && faqs.length > 0) {\r\n        <h2 class=\"markdown-preview\" jhiTranslate=\"artemisApp.faq.noMatching\"></h2>\r\n    }\r\n</div>\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275property", "category_r1", "CourseFaqAccordionComponent", "ngUnsubscribe", "Subject", "faq", "input", "required", "ngOnDestroy", "next", "complete", "selectors", "inputs", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275repeaterCreate", "CourseFaqAccordionComponent_For_10_Template", "\u0275\u0275repeaterTrackByIdentity", "\u0275\u0275textInterpolate", "questionTitle", "\u0275\u0275repeater", "categories", "\u0275\u0275pipeBind1", "questionAnswer", "\u0275\u0275sanitizeHtml", "CustomExerciseCategoryBadgeComponent", "HtmlForMarkdownPipe", "styles", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275listener", "category_r2", "\u0275\u0275restoreView", "_r1", "$implicit", "ctx_r2", "\u0275\u0275nextContext", "\u0275\u0275resetView", "toggleFilters", "category", "\u0275\u0275elementEnd", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275propertyInterpolate1", "\u0275\u0275property", "activeFilters", "has", "\u0275\u0275repeaterCreate", "CourseFaqComponent_Conditional_15_For_4_Template", "\u0275\u0275repeaterTrackByIdentity", "\u0275\u0275repeater", "existingCategories", "faq_r4", "id", "CourseFaqComponent", "faqElements", "viewChildren", "ngUnsubscribe", "Subject", "parentParamSubscription", "courseId", "referencedFaqId", "faqs", "faqState", "FaqState", "ACCEPTED", "filteredFaqs", "Set", "hasCategories", "isCollapsed", "searchInput", "BehaviorSubject", "ButtonType", "faFilter", "route", "inject", "ActivatedRoute", "faqService", "FaqService", "alertService", "AlertService", "sortService", "SortService", "renderer", "Renderer2", "constructor", "effect", "scrollToFaq", "ngOnInit", "parent", "params", "subscribe", "Number", "loadFaqs", "loadCourseExerciseCategories", "queryParams", "pipe", "takeUntil", "debounceTime", "searchTerm", "refreshFaqList", "loadCourseFaqCategories", "length", "findAllByCourseIdAndState", "map", "res", "body", "next", "applyFilters", "sortFaqs", "error", "onError", "ngOnDestroy", "complete", "unsubscribe", "toggleFilter", "getValue", "applySearch", "filter", "faq", "hasSearchTokens", "setSearchValue", "searchValue", "sortByProperty", "faqId", "faqElement", "find", "nativeElement", "String", "selectRootElement", "scrollIntoView", "behavior", "block", "selectors", "viewQuery", "rf", "ctx", "$event", "\u0275\u0275template", "CourseFaqComponent_Conditional_15_Template", "CourseFaqComponent_Conditional_20_Template", "CourseFaqComponent_For_24_Template", "CourseFaqComponent_Conditional_26_Template", "\u0275\u0275pureFunction2", "_c1", "size", "\u0275\u0275pureFunction1", "_c2", "\u0275\u0275conditional", "CourseFaqAccordionComponent", "CustomExerciseCategoryBadgeComponent", "SearchFilterComponent", "NgbModule", "NgbDropdown", "NgbDropdownToggle", "NgbDropdownMenu", "TranslateDirective", "FontAwesomeModule", "FaIconComponent", "CommonModule", "NgClass", "styles", "encapsulation"]
}
