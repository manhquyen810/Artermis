import{i as x}from"./chunk-PUNMJFMR.js";import{a as b,b as E}from"./chunk-XBLNBTXN.js";import{a as h}from"./chunk-G3JOQOSD.js";import{a as p,b as n}from"./chunk-EELXLOHY.js";import{b as v}from"./chunk-R5BZWVRQ.js";import{p as $}from"./chunk-DID2YGL7.js";import{O as d}from"./chunk-IOA4DPXY.js";import{Ea as u,L as c,ra as m,ya as l,z as o}from"./chunk-5LC5EQRR.js";var k=(()=>{class a{http=u(d);accountService=u(v);entityTitleService=u(E);resourceUrl="api/exam/courses";adminResourceUrl="api/exam/admin/courses";create(e,s){let t=a.convertExamDatesFromClient(s);return this.http.post(`${this.resourceUrl}/${e}/exams`,t,{observe:"response"}).pipe(o(r=>this.processExamResponseFromServer(r)))}update(e,s){let t=a.convertExamDatesFromClient(s);return this.http.put(`${this.resourceUrl}/${e}/exams`,t,{observe:"response"}).pipe(o(r=>this.processExamResponseFromServer(r)))}updateWorkingTime(e,s,t){return this.http.patch(`${this.resourceUrl}/${e}/exams/${s}/working-time`,t,{observe:"response"}).pipe(o(r=>this.processExamResponseFromServer(r)))}createAnnouncement(e,s,t){return this.http.post(`${this.resourceUrl}/${e}/exams/${s}/announcements`,t,{observe:"response"}).pipe(o(r=>{let i=r.body;return i.createdDate=n(i.createdDate),i}))}import(e,s){let t=a.convertExamDatesFromClient(s);return this.http.post(`${this.resourceUrl}/${e}/exam-import`,t,{observe:"response"}).pipe(o(r=>this.processExamResponseFromServer(r)))}importExerciseGroup(e,s,t){return this.http.post(`${this.resourceUrl}/${e}/exams/${s}/import-exercise-group`,t,{observe:"response"})}find(e,s,t=!1,r=!1){let i=h({withStudents:t,withExerciseGroups:r});return this.http.get(`${this.resourceUrl}/${e}/exams/${s}`,{params:i,observe:"response"}).pipe(o(S=>this.processExamResponseFromServer(S)))}findWithExercisesAndWithoutCourseId(e){return this.http.get(`api/exam/exams/${e}`,{observe:"response"}).pipe(o(s=>this.processExamResponseFromServer(s)))}getExamScores(e,s){return this.http.get(`${this.resourceUrl}/${e}/exams/${s}/scores`,{observe:"response"})}getExamStatistics(e,s){return this.http.get(`${this.resourceUrl}/${e}/exams/${s}/statistics`,{observe:"response"})}getStatsForExamAssessmentDashboard(e,s){return this.http.get(`${this.resourceUrl}/${e}/exams/${s}/stats-for-exam-assessment-dashboard`,{observe:"response"})}findAllExamsForCourse(e){return this.http.get(`${this.resourceUrl}/${e}/exams`,{observe:"response"}).pipe(o(s=>this.processExamArrayResponseFromServer(s)))}findAllExamsAccessibleToUser(e){return this.http.get(`${this.resourceUrl}/${e}/exams-for-user`,{observe:"response"}).pipe(o(s=>this.processExamArrayResponseFromServer(s)))}findAllCurrentAndUpcomingExams(){return this.http.get(`${this.adminResourceUrl}/upcoming-exams`,{observe:"response"}).pipe(o(e=>this.processExamArrayResponseFromServer(e)))}getExamWithInterestingExercisesForAssessmentDashboard(e,s,t){let r;return t?r=`${this.resourceUrl}/${e}/exams/${s}/exam-for-test-run-assessment-dashboard`:r=`${this.resourceUrl}/${e}/exams/${s}/exam-for-assessment-dashboard`,this.http.get(r,{observe:"response"}).pipe(o(i=>this.processExamResponseFromServer(i)))}getLatestIndividualEndDateOfExam(e,s){let t=`${this.resourceUrl}/${e}/exams/${s}/latest-end-date`;return this.http.get(t,{observe:"response"}).pipe(o(r=>(r.body.latestIndividualEndDate=$(r.body.latestIndividualEndDate),r)))}getDeletionSummary(e,s){return this.http.get(`${this.resourceUrl}/${e}/exams/${s}/deletion-summary`,{observe:"response"})}delete(e,s){return this.http.delete(`${this.resourceUrl}/${e}/exams/${s}`,{observe:"response"})}addStudentToExam(e,s,t){return this.http.post(`${this.resourceUrl}/${e}/exams/${s}/students/${t}`,void 0,{observe:"response"})}addStudentsToExam(e,s,t){return this.http.post(`${this.resourceUrl}/${e}/exams/${s}/students`,t,{observe:"response"})}addAllStudentsOfCourseToExam(e,s){return this.http.post(`${this.resourceUrl}/${e}/exams/${s}/register-course-students`,{observe:"response"})}saveImages(e,s,t){return this.http.post(`${this.resourceUrl}/${e}/exams/${s}/exam-users-save-images`,t,{observe:"response"})}isAttendanceChecked(e,s){return this.http.get(`${this.resourceUrl}/${e}/exams/${s}/attendance`,{observe:"response"})}verifyExamUserAttendance(e,s){return this.http.get(`${this.resourceUrl}/${e}/exams/${s}/verify-exam-users`,{observe:"response"})}removeStudentFromExam(e,s,t,r=!1){let i=h({withParticipationsAndSubmission:r});return this.http.delete(`${this.resourceUrl}/${e}/exams/${s}/students/${t}`,{params:i,observe:"response"})}removeAllStudentsFromExam(e,s,t=!1){let r=h({withParticipationsAndSubmission:t});return this.http.delete(`${this.resourceUrl}/${e}/exams/${s}/students`,{params:r,observe:"response"})}generateStudentExams(e,s){return this.http.post(`${this.resourceUrl}/${e}/exams/${s}/generate-student-exams`,{},{observe:"response"})}createTestRun(e,s,t){return this.http.post(`${this.resourceUrl}/${e}/exams/${s}/test-run`,t,{observe:"response"})}deleteTestRun(e,s,t){return this.http.delete(`${this.resourceUrl}/${e}/exams/${s}/test-run/${t}`,{observe:"response"})}findAllTestRunsForExam(e,s){return this.http.get(`${this.resourceUrl}/${e}/exams/${s}/test-runs`,{observe:"response"})}generateMissingStudentExams(e,s){return this.http.post(`${this.resourceUrl}/${e}/exams/${s}/generate-missing-student-exams`,{},{observe:"response"})}startExercises(e,s){return this.http.post(`${this.resourceUrl}/${e}/exams/${s}/student-exams/start-exercises`,{},{observe:"response"})}getExerciseStartStatus(e,s){return this.http.get(`${this.resourceUrl}/${e}/exams/${s}/student-exams/start-exercises/status`,{observe:"response"}).pipe(m(t=>{t.body&&(t.body.startedAt=n(t.body.startedAt))}))}evaluateQuizExercises(e,s){return this.http.post(`${this.resourceUrl}/${e}/exams/${s}/student-exams/evaluate-quiz-exercises`,{},{observe:"response"})}assessUnsubmittedExamModelingAndTextParticipations(e,s){return this.http.post(`${this.resourceUrl}/${e}/exams/${s}/student-exams/assess-unsubmitted-and-empty-student-exams`,{},{observe:"response"})}unlockAllRepositories(e,s){return this.http.post(`${this.resourceUrl}/${e}/exams/${s}/unlock-all-repositories`,{},{observe:"response"})}lockAllRepositories(e,s){return this.http.post(`${this.resourceUrl}/${e}/exams/${s}/lock-all-repositories`,{},{observe:"response"})}updateOrder(e,s,t){return this.http.put(`${this.resourceUrl}/${e}/exams/${s}/exercise-groups-order`,t,{observe:"response"})}reset(e,s){return this.http.delete(`${this.resourceUrl}/${e}/exams/${s}/reset`,{observe:"response"}).pipe(o(t=>this.processExamResponseFromServer(t)))}static convertExamDatesFromClient(e){return Object.assign({},e,{startDate:p(e.startDate),endDate:p(e.endDate),visibleDate:p(e.visibleDate),publishResultsDate:p(e.publishResultsDate),examStudentReviewStart:p(e.examStudentReviewStart),examStudentReviewEnd:p(e.examStudentReviewEnd)})}processExamResponseFromServer(e){return e.body&&this.convertExamFromServerAndSendTitles(e.body),e}processExamArrayResponseFromServer(e){return e.body&&e.body.forEach(this.convertExamFromServerAndSendTitles.bind(this)),e}convertExamFromServerAndSendTitles(e){e.startDate=n(e.startDate),e.endDate=n(e.endDate),e.visibleDate=n(e.visibleDate),e.publishResultsDate=n(e.publishResultsDate),e.examStudentReviewStart=n(e.examStudentReviewStart),e.examStudentReviewEnd=n(e.examStudentReviewEnd),e.course&&this.accountService.setAccessRightsForCourse(e.course),this.sendTitlesToEntityTitleService(e)}findAllLockedSubmissionsOfExam(e,s){return this.http.get(`${this.resourceUrl}/${e}/exams/${s}/locked-submissions`,{observe:"response"}).pipe(c(t=>!!t.body),m(t=>x(t.body)))}downloadExamArchive(e,s){let t=`${this.resourceUrl}/${e}/exams/${s}/download-archive`;window.open(t,"_blank")}archiveExam(e,s){return this.http.put(`${this.resourceUrl}/${e}/exams/${s}/archive`,{},{observe:"response"})}cleanupExam(e,s){return this.http.delete(`${this.resourceUrl}/${e}/exams/${s}/cleanup`,{observe:"response"})}sendTitlesToEntityTitleService(e){this.entityTitleService.setTitle(b.EXAM,[e?.id],e?.title)}getExercisesWithPotentialPlagiarismForExam(e,s){return this.http.get(`${this.resourceUrl}/${e}/exams/${s}/exercises-with-potential-plagiarism`)}static \u0275fac=function(s){return new(s||a)};static \u0275prov=l({token:a,factory:a.\u0275fac,providedIn:"root"})}return a})();export{k as a};
//# sourceMappingURL=chunk-BIK4CL5A.js.map
