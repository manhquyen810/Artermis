{
  "version": 3,
  "sources": ["src/main/webapp/app/assessment/assessment-locks/assessment-locks.component.ts", "src/main/webapp/app/assessment/assessment-locks/assessment-locks.component.html"],
  "sourcesContent": ["import { Component, OnInit, inject } from '@angular/core';\r\nimport { ActivatedRoute, RouterLink } from '@angular/router';\r\nimport { FileUploadAssessmentService } from 'app/exercises/file-upload/assess/file-upload-assessment.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Submission, SubmissionExerciseType } from 'app/entities/submission.model';\r\nimport { CourseManagementService } from 'app/course/manage/course-management.service';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { Exercise, ExerciseType, getIcon, getIconTooltip } from 'app/entities/exercise.model';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { ModelingAssessmentService } from 'app/exercises/modeling/assess/modeling-assessment.service';\r\nimport { TextAssessmentService } from 'app/exercises/text/assess/text-assessment.service';\r\nimport { ProgrammingAssessmentManualResultService } from 'app/exercises/programming/assess/manual-result/programming-assessment-manual-result.service';\r\nimport { ExamManagementService } from 'app/exam/manage/exam-management.service';\r\nimport { faBan, faFolderOpen } from '@fortawesome/free-solid-svg-icons';\r\nimport { combineLatest } from 'rxjs';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-assessment-locks',\r\n    templateUrl: './assessment-locks.component.html',\r\n    imports: [TranslateDirective, FaIconComponent, NgbTooltip, RouterLink, ArtemisDatePipe, ArtemisTranslatePipe],\r\n})\r\nexport class AssessmentLocksComponent implements OnInit {\r\n    private route = inject(ActivatedRoute);\r\n    private alertService = inject(AlertService);\r\n    private modelingAssessmentService = inject(ModelingAssessmentService);\r\n    private textAssessmentService = inject(TextAssessmentService);\r\n    private fileUploadAssessmentService = inject(FileUploadAssessmentService);\r\n    private programmingAssessmentService = inject(ProgrammingAssessmentManualResultService);\r\n    private courseService = inject(CourseManagementService);\r\n    private examManagementService = inject(ExamManagementService);\r\n\r\n    readonly ExerciseType = ExerciseType;\r\n\r\n    course: Course;\r\n    courseId: number;\r\n    tutorId: number;\r\n    examId?: number;\r\n    showAll = false;\r\n    exercises: Exercise[] = [];\r\n\r\n    submissions: Submission[] = [];\r\n\r\n    private cancelConfirmationText: string;\r\n\r\n    getIcon = getIcon;\r\n    getIconTooltip = getIconTooltip;\r\n\r\n    // Icons\r\n    faBan = faBan;\r\n    faFolderOpen = faFolderOpen;\r\n\r\n    constructor() {\r\n        const translateService = inject(TranslateService);\r\n        translateService.get('artemisApp.assessment.messages.confirmCancel').subscribe((text) => (this.cancelConfirmationText = text));\r\n    }\r\n\r\n    public ngOnInit() {\r\n        combineLatest([this.route.params, this.route.queryParams]).subscribe(([params, queryParams]) => {\r\n            this.courseId = Number(params['courseId']);\r\n            this.examId = Number(params['examId']);\r\n            this.tutorId = Number(queryParams['tutorId']);\r\n\r\n            this.getAllLockedSubmissions();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get all locked submissions for course and user.\r\n     */\r\n    getAllLockedSubmissions() {\r\n        let lockedSubmissionsObservable;\r\n        if (this.examId) {\r\n            lockedSubmissionsObservable = this.examManagementService.findAllLockedSubmissionsOfExam(this.courseId, this.examId);\r\n            this.showAll = true;\r\n        } else {\r\n            lockedSubmissionsObservable = this.courseService.findAllLockedSubmissionsOfCourse(this.courseId);\r\n        }\r\n        lockedSubmissionsObservable.subscribe({\r\n            next: (response: HttpResponse<Submission[]>) => {\r\n                this.submissions.push(...(response.body ?? []));\r\n            },\r\n            error: (response: string) => this.onError(response),\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Cancel the current assessment.\r\n     * @param canceledSubmission submission\r\n     */\r\n    cancelAssessment(canceledSubmission: Submission) {\r\n        const confirmCancel = window.confirm(this.cancelConfirmationText);\r\n        if (confirmCancel) {\r\n            switch (canceledSubmission.submissionExerciseType) {\r\n                case SubmissionExerciseType.MODELING:\r\n                    this.modelingAssessmentService.cancelAssessment(canceledSubmission.id!).subscribe();\r\n                    break;\r\n                case SubmissionExerciseType.TEXT:\r\n                    if (canceledSubmission.participation?.exercise?.id) {\r\n                        this.textAssessmentService.cancelAssessment(canceledSubmission.participation.id!, canceledSubmission.id!).subscribe();\r\n                    }\r\n                    break;\r\n                case SubmissionExerciseType.FILE_UPLOAD:\r\n                    this.fileUploadAssessmentService.cancelAssessment(canceledSubmission.id!).subscribe();\r\n                    break;\r\n                case SubmissionExerciseType.PROGRAMMING:\r\n                    this.programmingAssessmentService.cancelAssessment(canceledSubmission.id!).subscribe();\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            this.submissions = this.submissions.filter((submission) => submission !== canceledSubmission);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Pass on an error to the browser console and the alertService.\r\n     * @param error\r\n     */\r\n    private onError(error: string) {\r\n        this.alertService.error(error);\r\n    }\r\n}\r\n", "<div class=\"course-info-bar\">\r\n    <div class=\"row justify-content-between\">\r\n        <div class=\"col-md-8\">\r\n            <h2>\r\n                <span>{{ 'artemisApp.assessment.locks.title' + (showAll ? 'All' : '') | artemisTranslate }}</span>\r\n            </h2>\r\n        </div>\r\n    </div>\r\n</div>\r\n@if (submissions.length > 0) {\r\n    <div>\r\n        <div class=\"table-responsive\">\r\n            <table class=\"table table-striped exercise-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th class=\"th-link\">Id</th>\r\n                        <th class=\"th-link\" jhiTranslate=\"artemisApp.assessment.locks.type\"></th>\r\n                        <th class=\"th-link\" jhiTranslate=\"artemisApp.assessment.locks.exercise\"></th>\r\n                        <th class=\"th-link\" jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionDate\"></th>\r\n                        <th class=\"th-link\" jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionCount\"></th>\r\n                        <th class=\"th-link\" jhiTranslate=\"artemisApp.assessment.dashboard.columns.score\"></th>\r\n                        <th class=\"th-link\" jhiTranslate=\"artemisApp.assessment.dashboard.columns.action\"></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    @for (submission of submissions; track submission; let i = $index) {\r\n                        <tr>\r\n                            <td>{{ submission.id }}</td>\r\n                            <td>\r\n                                <fa-icon\r\n                                    [icon]=\"getIcon(submission.participation!.exercise!.type)\"\r\n                                    placement=\"right auto\"\r\n                                    [ngbTooltip]=\"getIconTooltip(submission.participation!.exercise!.type) | artemisTranslate\"\r\n                                />\r\n                            </td>\r\n                            <td>{{ submission.participation!.exercise!.title || '' }}</td>\r\n                            <td>{{ submission.submissionDate | artemisDate: 'long-date' }}</td>\r\n                            <td>{{ submission.participation!.submissions ? submission.participation!.submissions.length : 0 }}</td>\r\n                            <td>\r\n                                @if (submission.latestResult?.score !== undefined) {\r\n                                    <span>{{ submission.latestResult!.score }}%</span>\r\n                                }\r\n                            </td>\r\n                            <td>\r\n                                <span>\r\n                                    @if (submission.participation!.exercise!.type === ExerciseType.TEXT) {\r\n                                        <a\r\n                                            [routerLink]=\"[\r\n                                                '/course-management',\r\n                                                courseId,\r\n                                                'text-exercises',\r\n                                                submission.participation!.exercise!.id!,\r\n                                                'participations',\r\n                                                submission.participation!.id!,\r\n                                                'submissions',\r\n                                                submission.id!,\r\n                                                'assessment',\r\n                                            ]\"\r\n                                            class=\"btn btn-outline-secondary btn-sm mb-1\"\r\n                                        >\r\n                                            <fa-icon [icon]=\"faFolderOpen\" [fixedWidth]=\"true\" />&nbsp;{{ 'artemisApp.assessment.dashboard.actions.open' | artemisTranslate }}\r\n                                        </a>\r\n                                    }\r\n                                    @if (submission.participation!.exercise!.type !== ExerciseType.TEXT) {\r\n                                        <a\r\n                                            [routerLink]=\"[\r\n                                                '/course-management',\r\n                                                courseId,\r\n                                                submission.participation!.exercise!.type + '-exercises',\r\n                                                submission.participation!.exercise!.id!,\r\n                                                'submissions',\r\n                                                submission.id,\r\n                                                'assessment',\r\n                                            ]\"\r\n                                            class=\"btn btn-outline-secondary btn-sm mb-1\"\r\n                                        >\r\n                                            <fa-icon [icon]=\"faFolderOpen\" [fixedWidth]=\"true\" />&nbsp;{{ 'artemisApp.assessment.dashboard.actions.open' | artemisTranslate }}\r\n                                        </a>\r\n                                    }\r\n                                </span>\r\n                                <span>\r\n                                    @if (!submission.latestResult!.completionDate) {\r\n                                        <button (click)=\"cancelAssessment(submission)\" class=\"btn btn-outline-secondary btn-sm mb-1\">\r\n                                            <fa-icon [icon]=\"faBan\" [fixedWidth]=\"true\" />&nbsp;{{ 'artemisApp.assessment.dashboard.actions.cancel' | artemisTranslate }}\r\n                                        </button>\r\n                                    }\r\n                                </span>\r\n                            </td>\r\n                        </tr>\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n}\r\n@if (submissions.length === 0) {\r\n    <div style=\"margin-top: 10px\">\r\n        <p jhiTranslate=\"artemisApp.assessment.locks.empty\"></p>\r\n    </div>\r\n}\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275textInterpolate1", "submission_r1", "latestResult", "score", "\u0275\u0275element", "\u0275\u0275property", "\u0275\u0275pureFunction4", "_c0", "ctx_r1", "courseId", "participation", "exercise", "id", "faFolderOpen", "\u0275\u0275pipeBind1", "_c1", "type", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r3", "\u0275\u0275nextContext", "$implicit", "\u0275\u0275resetView", "cancelAssessment", "faBan", "\u0275\u0275template", "AssessmentLocksComponent_Conditional_16_For_31_Conditional_24_Template", "AssessmentLocksComponent_Conditional_16_For_31_Conditional_30_Template", "AssessmentLocksComponent_Conditional_16_For_31_Conditional_31_Template", "AssessmentLocksComponent_Conditional_16_For_31_Conditional_35_Template", "\u0275\u0275textInterpolate", "getIcon", "getIconTooltip", "title", "\u0275\u0275pipeBind2", "submissionDate", "submissions", "length", "\u0275\u0275conditional", "undefined", "ExerciseType", "TEXT", "completionDate", "\u0275\u0275repeaterCreate", "AssessmentLocksComponent_Conditional_16_For_31_Template", "\u0275\u0275repeaterTrackByIdentity", "\u0275\u0275repeater", "AssessmentLocksComponent", "route", "inject", "ActivatedRoute", "alertService", "AlertService", "modelingAssessmentService", "ModelingAssessmentService", "textAssessmentService", "TextAssessmentService", "fileUploadAssessmentService", "FileUploadAssessmentService", "programmingAssessmentService", "ProgrammingAssessmentManualResultService", "courseService", "CourseManagementService", "examManagementService", "ExamManagementService", "course", "tutorId", "examId", "showAll", "exercises", "cancelConfirmationText", "constructor", "TranslateService", "get", "subscribe", "text", "ngOnInit", "combineLatest", "params", "queryParams", "Number", "getAllLockedSubmissions", "lockedSubmissionsObservable", "findAllLockedSubmissionsOfExam", "findAllLockedSubmissionsOfCourse", "next", "response", "push", "body", "error", "onError", "canceledSubmission", "window", "confirm", "submissionExerciseType", "filter", "submission", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "AssessmentLocksComponent_Conditional_16_Template", "AssessmentLocksComponent_Conditional_17_Template", "TranslateDirective", "FaIconComponent", "NgbTooltip", "RouterLink", "ArtemisDatePipe", "ArtemisTranslatePipe", "encapsulation"]
}
