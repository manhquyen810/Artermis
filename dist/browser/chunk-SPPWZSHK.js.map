{
  "version": 3,
  "sources": ["src/main/webapp/app/exercises/shared/exercise-headers/header-exercise-page-with-details.component.ts", "src/main/webapp/app/exercises/shared/exercise-headers/header-exercise-page-with-details.component.html"],
  "sourcesContent": ["import { Component, Input, OnChanges, OnInit, inject } from '@angular/core';\r\nimport { SortService } from 'app/shared/service/sort.service';\r\nimport dayjs from 'dayjs/esm';\r\nimport { Exercise, ExerciseType, IncludedInOverallScore, getCourseFromExercise, getIcon, getIconTooltip } from 'app/entities/exercise.model';\r\nimport { Exam } from 'app/entities/exam/exam.model';\r\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { ExerciseCategory } from 'app/entities/exercise-category.model';\r\nimport { SubmissionPolicy } from 'app/entities/submission-policy.model';\r\nimport { StudentParticipation } from 'app/entities/participation/student-participation.model';\r\nimport { getExerciseDueDate } from 'app/exercises/shared/exercise/exercise.utils';\r\nimport { faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { ProgrammingExercise } from 'app/entities/programming/programming-exercise.model';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { AssessmentType } from 'app/entities/assessment-type.model';\r\nimport { ComplaintService } from 'app/complaints/complaint.service';\r\nimport { SubmissionType } from 'app/entities/submission.model';\r\nimport { ProgrammingSubmission } from 'app/entities/programming/programming-submission.model';\r\nimport { roundValueSpecifiedByCourseSettings } from 'app/shared/util/utils';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ExerciseCategoriesComponent } from 'app/shared/exercise-categories/exercise-categories.component';\r\nimport { NgClass } from '@angular/common';\r\nimport { IncludedInScoreBadgeComponent } from './included-in-score-badge.component';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\nimport { ArtemisTimeAgoPipe } from 'app/shared/pipes/artemis-time-ago.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-header-exercise-page-with-details',\r\n    templateUrl: './header-exercise-page-with-details.component.html',\r\n    styleUrls: ['./header-exercise-page-with-details.component.scss'],\r\n    imports: [\r\n        FaIconComponent,\r\n        NgbTooltip,\r\n        ExerciseCategoriesComponent,\r\n        NgClass,\r\n        IncludedInScoreBadgeComponent,\r\n        TranslateDirective,\r\n        ArtemisDatePipe,\r\n        ArtemisTranslatePipe,\r\n        ArtemisTimeAgoPipe,\r\n    ],\r\n})\r\nexport class HeaderExercisePageWithDetailsComponent implements OnChanges, OnInit {\r\n    private sortService = inject(SortService);\r\n\r\n    readonly IncludedInOverallScore = IncludedInOverallScore;\r\n    readonly AssessmentType = AssessmentType;\r\n    readonly ExerciseType = ExerciseType;\r\n    readonly getIcon = getIcon;\r\n    readonly getIconTooltip = getIconTooltip;\r\n    readonly dayjs = dayjs;\r\n\r\n    @Input() public exercise: Exercise;\r\n    @Input() public studentParticipation?: StudentParticipation;\r\n    @Input() public title: string;\r\n    @Input() public exam?: Exam;\r\n    @Input() public course?: Course;\r\n    @Input() public isTestRun = false;\r\n    @Input() public submissionPolicy?: SubmissionPolicy;\r\n\r\n    public exerciseCategories: ExerciseCategory[];\r\n    public dueDate?: dayjs.Dayjs;\r\n    public isBeforeStartDate: boolean;\r\n    public programmingExercise?: ProgrammingExercise;\r\n    public individualComplaintDueDate?: dayjs.Dayjs;\r\n    public nextRelevantDate?: dayjs.Dayjs;\r\n    public nextRelevantDateLabel?: string;\r\n    public nextRelevantDateStatusBadge?: string;\r\n    public dueDateStatusBadge?: string;\r\n    public canComplainLaterOn: boolean;\r\n    public achievedPoints?: number;\r\n    public numberOfSubmissions: number;\r\n\r\n    icon: IconProp;\r\n\r\n    // Icons\r\n    faQuestionCircle = faQuestionCircle;\r\n\r\n    ngOnInit() {\r\n        this.exerciseCategories = this.exercise.categories || [];\r\n\r\n        if (this.exercise.type) {\r\n            this.icon = getIcon(this.exercise.type);\r\n        }\r\n\r\n        this.programmingExercise = this.exercise.type === ExerciseType.PROGRAMMING ? (this.exercise as ProgrammingExercise) : undefined;\r\n\r\n        if (this.exam) {\r\n            this.determineNextRelevantDateExamMode();\r\n        } else {\r\n            this.dueDate = getExerciseDueDate(this.exercise, this.studentParticipation);\r\n            this.isBeforeStartDate = this.exercise.startDate ? this.exercise.startDate.isAfter(dayjs()) : !!this.exercise.releaseDate?.isAfter(dayjs());\r\n            if (this.course?.maxComplaintTimeDays) {\r\n                this.individualComplaintDueDate = ComplaintService.getIndividualComplaintDueDate(\r\n                    this.exercise,\r\n                    this.course.maxComplaintTimeDays,\r\n                    this.studentParticipation?.results?.last(),\r\n                    this.studentParticipation,\r\n                );\r\n            }\r\n            // There is a submission where the student did not have the chance to complain yet\r\n            this.canComplainLaterOn =\r\n                !!this.studentParticipation?.submissionCount &&\r\n                !this.individualComplaintDueDate &&\r\n                (this.exercise.allowComplaintsForAutomaticAssessments || this.exercise.assessmentType !== AssessmentType.AUTOMATIC);\r\n\r\n            this.determineNextRelevantDateCourseMode();\r\n        }\r\n\r\n        if (this.dueDate) {\r\n            this.dueDateStatusBadge = dayjs().isBefore(this.dueDate) ? 'bg-success' : 'bg-danger';\r\n        }\r\n    }\r\n\r\n    ngOnChanges() {\r\n        this.course = this.course ?? getCourseFromExercise(this.exercise);\r\n\r\n        if (this.submissionPolicy?.active) {\r\n            this.countSubmissions();\r\n        }\r\n        if (this.studentParticipation?.results?.length) {\r\n            // The updated participation by the websocket is not guaranteed to be sorted, find the newest result (highest id)\r\n            this.sortService.sortByProperty(this.studentParticipation.results, 'id', false);\r\n\r\n            const latestRatedResult = this.studentParticipation.results.filter((result) => result.rated).first();\r\n            if (latestRatedResult) {\r\n                this.achievedPoints = roundValueSpecifiedByCourseSettings((latestRatedResult.score! * this.exercise.maxPoints!) / 100, this.course);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Determines the next date of the exam cycle. If none exists the latest date in the past is determined\r\n     */\r\n    private determineNextRelevantDateExamMode() {\r\n        const possibleDates = [this.exam?.endDate, this.exam?.publishResultsDate];\r\n        const possibleDatesLabels = ['endDate', 'publishResultsDate'];\r\n\r\n        this.determineNextDate(possibleDates, possibleDatesLabels, dayjs());\r\n    }\r\n\r\n    /**\r\n     * Determines the next date of the course exercise cycle. If none exists the latest date in the past is determined\r\n     */\r\n    private determineNextRelevantDateCourseMode() {\r\n        const possibleDates = [this.exercise.releaseDate, this.exercise.startDate, this.exercise.assessmentDueDate, this.individualComplaintDueDate];\r\n        const possibleDatesLabels = ['releaseDate', 'startDate', 'assessmentDue', 'complaintDue'];\r\n\r\n        this.determineNextDate(possibleDates, possibleDatesLabels, dayjs());\r\n    }\r\n\r\n    /**\r\n     * Iterates over the given dates and determines the first date that is in the future.\r\n     * If no such date exists, it is determined if the student can complaint later on.\r\n     * If that is also not the case, the latest date in the past is chosen that is after the due date.\r\n     * @param dates that should be iterated over. Can contain undefined if that date does not exist\r\n     * @param dateLabels the labels used to translate the given dates\r\n     * @param now the current date and time\r\n     */\r\n    private determineNextDate(dates: (dayjs.Dayjs | undefined)[], dateLabels: string[], now: dayjs.Dayjs) {\r\n        this.nextRelevantDate = undefined;\r\n        this.nextRelevantDateLabel = undefined;\r\n        this.nextRelevantDateStatusBadge = undefined;\r\n\r\n        for (let i = 0; i < dates.length; i++) {\r\n            if (dates[i] && now.isBefore(dates[i])) {\r\n                this.nextRelevantDate = dates[i]!;\r\n                this.nextRelevantDateLabel = dateLabels[i];\r\n                this.nextRelevantDateStatusBadge = 'bg-success';\r\n                return;\r\n            }\r\n        }\r\n        if (this.canComplainLaterOn) {\r\n            return;\r\n        }\r\n        for (let i = dates.length - 1; i >= 0; i--) {\r\n            if (dates[i]) {\r\n                if (this.dueDate && this.dueDate.isAfter(dates[i])) {\r\n                    return;\r\n                }\r\n\r\n                this.nextRelevantDate = dates[i]!;\r\n                this.nextRelevantDateLabel = dateLabels[i];\r\n                this.nextRelevantDateStatusBadge = 'bg-danger';\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    private countSubmissions() {\r\n        const commitHashSet = new Set<string>();\r\n\r\n        this.studentParticipation?.results\r\n            ?.map((result) => result.submission)\r\n            .filter((submission) => submission?.type === SubmissionType.MANUAL)\r\n            .map((submission) => (submission as ProgrammingSubmission).commitHash)\r\n            .forEach((commitHash: string) => commitHashSet.add(commitHash));\r\n\r\n        this.numberOfSubmissions = commitHashSet.size;\r\n    }\r\n}\r\n", "@if (exercise) {\r\n    <div class=\"course-info-bar\" id=\"exercise-header\">\r\n        <div class=\"left-col\">\r\n            <div class=\"title-row\">\r\n                <div class=\"inner-row\">\r\n                    @if (exercise.type) {\r\n                        <fa-icon [icon]=\"getIcon(exercise.type)\" [ngbTooltip]=\"getIconTooltip(exercise.type) | artemisTranslate\" />\r\n                    }\r\n                    &nbsp;\r\n                    <ng-content select=\"[pagetitle]\" />\r\n                </div>\r\n                @if ((exercise.releaseDate && dayjs(exercise.releaseDate).isAfter(dayjs())) || exercise.difficulty || exerciseCategories?.length) {\r\n                    <jhi-exercise-categories [exercise]=\"exercise\" [showTags]=\"{ difficulty: true, notReleased: true }\" [ngClass]=\"'badge-row'\" />\r\n                }\r\n            </div>\r\n            @if (exercise.maxPoints || (exercise.assessmentType && exercise.type === ExerciseType.PROGRAMMING)) {\r\n                <div class=\"points-assessment-row\">\r\n                    @if (exercise.maxPoints) {\r\n                        <span [style.margin-right]=\"exercise.maxPoints ? '30px' : null\">\r\n                            <span class=\"me-2\">\r\n                                {{ 'artemisApp.courseOverview.exerciseDetails.points' | artemisTranslate }}\r\n                                @if (achievedPoints !== undefined) {\r\n                                    {{ achievedPoints + ('artemisApp.courseOverview.exerciseDetails.of' | artemisTranslate) }}\r\n                                }\r\n                                {{ exercise.maxPoints }}\r\n                                @if (exercise.bonusPoints) {\r\n                                    <span>({{ 'artemisApp.courseOverview.exerciseDetails.bonus' | artemisTranslate }} {{ exercise.bonusPoints }})</span>\r\n                                }\r\n                            </span>\r\n                            @if (exercise.includedInOverallScore !== IncludedInOverallScore.INCLUDED_COMPLETELY) {\r\n                                <jhi-included-in-score-badge [includedInOverallScore]=\"exercise.includedInOverallScore\" class=\"me-2\" />\r\n                            }\r\n                        </span>\r\n                    }\r\n                    @if (exercise.assessmentType && exercise.type === ExerciseType.PROGRAMMING) {\r\n                        <span>\r\n                            <div>\r\n                                {{ 'artemisApp.courseOverview.exerciseDetails.assessmentType' | artemisTranslate }}\r\n                                {{ 'artemisApp.AssessmentType.forExerciseHeader.' + exercise.assessmentType | artemisTranslate }}\r\n                                <fa-icon [icon]=\"faQuestionCircle\" ngbTooltip=\"{{ 'artemisApp.AssessmentType.tooltip.' + exercise.assessmentType | artemisTranslate }}\" />\r\n                            </div>\r\n                        </span>\r\n                    }\r\n                </div>\r\n            }\r\n            @if (submissionPolicy && submissionPolicy.active) {\r\n                <div class=\"submission-row\">\r\n                    <div>{{ 'artemisApp.programmingExercise.submissionPolicy.submissionLimitTitle' | artemisTranslate }}:</div>\r\n                    <div>\r\n                        {{\r\n                            numberOfSubmissions +\r\n                                '/' +\r\n                                submissionPolicy.submissionLimit +\r\n                                (submissionPolicy.exceedingPenalty\r\n                                    ? ('artemisApp.programmingExercise.submissionPolicy.submissionPenalty.penaltyInfoLabel'\r\n                                      | artemisTranslate: { points: submissionPolicy.exceedingPenalty })\r\n                                    : '')\r\n                        }}\r\n                        <fa-icon\r\n                            [icon]=\"faQuestionCircle\"\r\n                            ngbTooltip=\"{{ 'artemisApp.programmingExercise.submissionPolicy.submissionPolicyType.' + submissionPolicy.type + '.tooltip' | artemisTranslate }}\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n        <div class=\"right-col\">\r\n            @if (!nextRelevantDateLabel || (nextRelevantDateLabel !== 'releaseDate' && nextRelevantDateLabel !== 'startDate')) {\r\n            } @else {\r\n                @if (nextRelevantDate && (!exam || !isTestRun)) {\r\n                    <div class=\"fw-500\">\r\n                        {{ 'artemisApp.courseOverview.exerciseDetails.' + nextRelevantDateLabel | artemisTranslate }}\r\n                        <span\r\n                            [ngClass]=\"nextRelevantDateStatusBadge\"\r\n                            class=\"badge\"\r\n                            [ngbTooltip]=\"\r\n                                'artemisApp.courseOverview.exerciseDetails.' + nextRelevantDateLabel + 'Tooltip' | artemisTranslate: { date: nextRelevantDate | artemisDate }\r\n                            \"\r\n                        >\r\n                            {{ nextRelevantDate | artemisTimeAgo }}\r\n                        </span>\r\n                    </div>\r\n                }\r\n                @if (exercise.presentationScoreEnabled) {\r\n                    <div>\r\n                        @if (course?.presentationScore) {\r\n                            {{ 'artemisApp.courseOverview.exerciseDetails.presented' | artemisTranslate }}\r\n                            @if ((studentParticipation?.presentationScore ?? 0) > 0) {\r\n                                <span class=\"badge bg-success\" jhiTranslate=\"global.generic.yes\"></span>\r\n                            }\r\n                            @if ((studentParticipation?.presentationScore ?? 0) <= 0) {\r\n                                <span class=\"badge bg-secondary\" jhiTranslate=\"global.generic.no\"></span>\r\n                            }\r\n                        } @else {\r\n                            {{ 'artemisApp.courseOverview.exerciseDetails.presentation' | artemisTranslate }}\r\n                            @if (studentParticipation?.presentationScore) {\r\n                                <span class=\"badge bg-success\">\r\n                                    {{ studentParticipation!.presentationScore + '%' }}\r\n                                </span>\r\n                            }\r\n                            @if (!studentParticipation?.presentationScore) {\r\n                                <span class=\"badge bg-secondary\" jhiTranslate=\"global.generic.unset\"></span>\r\n                            }\r\n                        }\r\n                    </div>\r\n                }\r\n            }\r\n            @if (dueDate) {\r\n                <div class=\"fw-500\">\r\n                    {{ 'artemisApp.courseOverview.exerciseDetails.submissionDue' | artemisTranslate }}\r\n                    <span\r\n                        [ngClass]=\"dueDateStatusBadge\"\r\n                        class=\"badge\"\r\n                        [ngbTooltip]=\"'artemisApp.courseOverview.exerciseDetails.submissionDueTooltip' | artemisTranslate: { date: dueDate | artemisDate }\"\r\n                    >\r\n                        {{ dueDate | artemisTimeAgo }}\r\n                    </span>\r\n                </div>\r\n            }\r\n            @if (!nextRelevantDateLabel || (nextRelevantDateLabel !== 'assessmentDue' && nextRelevantDateLabel !== 'complaintDue')) {\r\n            } @else {\r\n                @if (nextRelevantDate && (!exam || !isTestRun)) {\r\n                    <div class=\"fw-500\">\r\n                        {{ 'artemisApp.courseOverview.exerciseDetails.' + nextRelevantDateLabel | artemisTranslate }}\r\n                        <span\r\n                            [ngClass]=\"nextRelevantDateStatusBadge\"\r\n                            class=\"badge\"\r\n                            [ngbTooltip]=\"\r\n                                'artemisApp.courseOverview.exerciseDetails.' + nextRelevantDateLabel + 'Tooltip' | artemisTranslate: { date: nextRelevantDate | artemisDate }\r\n                            \"\r\n                        >\r\n                            {{ nextRelevantDate | artemisTimeAgo }}\r\n                        </span>\r\n                    </div>\r\n                }\r\n                @if (exercise.presentationScoreEnabled) {\r\n                    <div>\r\n                        @if (course?.presentationScore) {\r\n                            {{ 'artemisApp.courseOverview.exerciseDetails.presented' | artemisTranslate }}\r\n                            @if ((studentParticipation?.presentationScore ?? 0) > 0) {\r\n                                <span class=\"badge bg-success\" jhiTranslate=\"global.generic.yes\"></span>\r\n                            }\r\n                            @if ((studentParticipation?.presentationScore ?? 0) <= 0) {\r\n                                <span class=\"badge bg-secondary\" jhiTranslate=\"global.generic.no\"></span>\r\n                            }\r\n                        }\r\n                        @if (!course?.presentationScore) {\r\n                            {{ 'artemisApp.courseOverview.exerciseDetails.presentation' | artemisTranslate }}\r\n                            @if (studentParticipation?.presentationScore) {\r\n                                <span class=\"badge bg-success\">\r\n                                    {{ studentParticipation!.presentationScore + '%' }}\r\n                                </span>\r\n                            }\r\n                            @if (!studentParticipation?.presentationScore) {\r\n                                <span class=\"badge bg-secondary\" jhiTranslate=\"global.generic.unset\"></span>\r\n                            }\r\n                        }\r\n                    </div>\r\n                }\r\n            }\r\n            @if (!nextRelevantDate && canComplainLaterOn) {\r\n                <div class=\"fw-500\">\r\n                    {{ 'artemisApp.courseOverview.exerciseDetails.complaintPossible' | artemisTranslate }}\r\n                    <span\r\n                        class=\"badge bg-success\"\r\n                        [ngbTooltip]=\"'artemisApp.courseOverview.exerciseDetails.complaintPossibleTooltip' | artemisTranslate: { days: course?.maxComplaintTimeDays }\"\r\n                        jhiTranslate=\"global.generic.yes\"\r\n                    ></span>\r\n                </div>\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275property", "ctx_r0", "getIcon", "exercise", "type", "\u0275\u0275pipeBind1", "getIconTooltip", "\u0275\u0275pureFunction0", "_c2", "\u0275\u0275textInterpolate1", "achievedPoints", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275textInterpolate2", "bonusPoints", "includedInOverallScore", "\u0275\u0275template", "HeaderExercisePageWithDetailsComponent_Conditional_0_Conditional_15_Conditional_3_Conditional_6_Template", "HeaderExercisePageWithDetailsComponent_Conditional_0_Conditional_15_Conditional_3_Conditional_8_Template", "HeaderExercisePageWithDetailsComponent_Conditional_0_Conditional_15_Conditional_3_Conditional_10_Template", "\u0275\u0275styleProp", "maxPoints", "\u0275\u0275conditional", "undefined", "IncludedInOverallScore", "INCLUDED_COMPLETELY", "assessmentType", "\u0275\u0275propertyInterpolate", "faQuestionCircle", "HeaderExercisePageWithDetailsComponent_Conditional_0_Conditional_15_Conditional_3_Template", "HeaderExercisePageWithDetailsComponent_Conditional_0_Conditional_15_Conditional_4_Template", "ExerciseType", "PROGRAMMING", "numberOfSubmissions", "submissionPolicy", "submissionLimit", "exceedingPenalty", "\u0275\u0275pipeBind2", "\u0275\u0275pureFunction1", "_c3", "nextRelevantDateLabel", "nextRelevantDateStatusBadge", "_c4", "nextRelevantDate", "HeaderExercisePageWithDetailsComponent_Conditional_0_Conditional_21_Conditional_2_Conditional_3_Conditional_2_Template", "HeaderExercisePageWithDetailsComponent_Conditional_0_Conditional_21_Conditional_2_Conditional_3_Conditional_3_Template", "tmp_5_0", "studentParticipation", "presentationScore", "tmp_6_0", "HeaderExercisePageWithDetailsComponent_Conditional_0_Conditional_21_Conditional_2_Conditional_4_Conditional_2_Template", "HeaderExercisePageWithDetailsComponent_Conditional_0_Conditional_21_Conditional_2_Conditional_4_Conditional_3_Template", "HeaderExercisePageWithDetailsComponent_Conditional_0_Conditional_21_Conditional_2_Conditional_3_Template", "HeaderExercisePageWithDetailsComponent_Conditional_0_Conditional_21_Conditional_2_Conditional_4_Template", "course", "HeaderExercisePageWithDetailsComponent_Conditional_0_Conditional_21_Conditional_1_Template", "HeaderExercisePageWithDetailsComponent_Conditional_0_Conditional_21_Conditional_2_Template", "exam", "isTestRun", "presentationScoreEnabled", "dueDateStatusBadge", "dueDate", "HeaderExercisePageWithDetailsComponent_Conditional_0_Conditional_24_Conditional_2_Conditional_3_Conditional_2_Template", "HeaderExercisePageWithDetailsComponent_Conditional_0_Conditional_24_Conditional_2_Conditional_3_Conditional_3_Template", "HeaderExercisePageWithDetailsComponent_Conditional_0_Conditional_24_Conditional_2_Conditional_4_Conditional_2_Template", "HeaderExercisePageWithDetailsComponent_Conditional_0_Conditional_24_Conditional_2_Conditional_4_Conditional_3_Template", "HeaderExercisePageWithDetailsComponent_Conditional_0_Conditional_24_Conditional_2_Conditional_3_Template", "HeaderExercisePageWithDetailsComponent_Conditional_0_Conditional_24_Conditional_2_Conditional_4_Template", "HeaderExercisePageWithDetailsComponent_Conditional_0_Conditional_24_Conditional_1_Template", "HeaderExercisePageWithDetailsComponent_Conditional_0_Conditional_24_Conditional_2_Template", "_c5", "maxComplaintTimeDays", "HeaderExercisePageWithDetailsComponent_Conditional_0_Conditional_9_Template", "\u0275\u0275projection", "HeaderExercisePageWithDetailsComponent_Conditional_0_Conditional_13_Template", "HeaderExercisePageWithDetailsComponent_Conditional_0_Conditional_15_Template", "HeaderExercisePageWithDetailsComponent_Conditional_0_Conditional_16_Template", "HeaderExercisePageWithDetailsComponent_Conditional_0_Conditional_20_Template", "HeaderExercisePageWithDetailsComponent_Conditional_0_Conditional_21_Template", "HeaderExercisePageWithDetailsComponent_Conditional_0_Conditional_22_Template", "HeaderExercisePageWithDetailsComponent_Conditional_0_Conditional_23_Template", "HeaderExercisePageWithDetailsComponent_Conditional_0_Conditional_24_Template", "HeaderExercisePageWithDetailsComponent_Conditional_0_Conditional_25_Template", "releaseDate", "dayjs", "isAfter", "difficulty", "exerciseCategories", "length", "active", "canComplainLaterOn", "HeaderExercisePageWithDetailsComponent", "sortService", "inject", "SortService", "AssessmentType", "title", "isBeforeStartDate", "programmingExercise", "individualComplaintDueDate", "icon", "ngOnInit", "categories", "determineNextRelevantDateExamMode", "getExerciseDueDate", "startDate", "ComplaintService", "getIndividualComplaintDueDate", "results", "last", "submissionCount", "allowComplaintsForAutomaticAssessments", "AUTOMATIC", "determineNextRelevantDateCourseMode", "isBefore", "ngOnChanges", "getCourseFromExercise", "countSubmissions", "sortByProperty", "latestRatedResult", "filter", "result", "rated", "first", "roundValueSpecifiedByCourseSettings", "score", "possibleDates", "endDate", "publishResultsDate", "possibleDatesLabels", "determineNextDate", "assessmentDueDate", "dates", "dateLabels", "now", "i", "commitHashSet", "Set", "map", "submission", "commitHash", "forEach", "add", "size", "selectors", "inputs", "features", "\u0275\u0275NgOnChangesFeature", "ngContentSelectors", "_c1", "decls", "vars", "consts", "template", "rf", "ctx", "HeaderExercisePageWithDetailsComponent_Conditional_0_Template", "FaIconComponent", "NgbTooltip", "ExerciseCategoriesComponent", "NgClass", "IncludedInScoreBadgeComponent", "TranslateDirective", "ArtemisDatePipe", "ArtemisTranslatePipe", "ArtemisTimeAgoPipe", "styles"]
}
