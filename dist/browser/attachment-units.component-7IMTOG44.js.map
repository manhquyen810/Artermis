{
  "version": 3,
  "sources": ["src/main/webapp/app/lecture/lecture-unit/lecture-unit-management/attachment-units/attachment-units.component.ts", "src/main/webapp/app/lecture/lecture-unit/lecture-unit-management/attachment-units/attachment-units.component.html"],
  "sourcesContent": ["import { Component, OnInit, inject } from '@angular/core';\r\nimport { faBan, faExclamationTriangle, faPlus, faQuestionCircle, faSave, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { onError } from 'app/shared/util/global.utils';\r\nimport { AttachmentUnitService } from 'app/lecture/lecture-unit/lecture-unit-management/attachmentUnit.service';\r\nimport { combineLatest } from 'rxjs';\r\nimport dayjs from 'dayjs/esm';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, repeat, switchMap } from 'rxjs/operators';\r\nimport { LectureUnitLayoutComponent } from '../lecture-unit-layout/lecture-unit-layout.component';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FormDateTimePickerComponent } from 'app/shared/date-time-picker/date-time-picker.component';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\nexport type LectureUnitDTOS = {\r\n    unitName: string;\r\n    releaseDate?: dayjs.Dayjs;\r\n    startPage: number;\r\n    endPage: number;\r\n};\r\n\r\nexport type LectureUnitInformationDTO = {\r\n    units: LectureUnitDTOS[];\r\n    numberOfPages: number;\r\n    removeSlidesCommaSeparatedKeyPhrases: string;\r\n};\r\n\r\n@Component({\r\n    selector: 'jhi-attachment-units',\r\n    templateUrl: './attachment-units.component.html',\r\n    styleUrls: [],\r\n    imports: [LectureUnitLayoutComponent, TranslateDirective, FormsModule, FormDateTimePickerComponent, FaIconComponent, NgbTooltip, ArtemisTranslatePipe],\r\n})\r\nexport class AttachmentUnitsComponent implements OnInit {\r\n    private activatedRoute = inject(ActivatedRoute);\r\n    private router = inject(Router);\r\n    private attachmentUnitService = inject(AttachmentUnitService);\r\n    private alertService = inject(AlertService);\r\n    private translateService = inject(TranslateService);\r\n\r\n    lectureId: number;\r\n    courseId: number;\r\n    isLoading: boolean;\r\n    isProcessingMode: boolean;\r\n    units: LectureUnitDTOS[] = [];\r\n    numberOfPages: number;\r\n    faSave = faSave;\r\n    faBan = faBan;\r\n    faTimes = faTimes;\r\n    faPlus = faPlus;\r\n    faExclamationTriangle = faExclamationTriangle;\r\n    faQuestionCircle = faQuestionCircle;\r\n\r\n    invalidUnitTableMessage?: string;\r\n    //Comma-seperated keyphrases used to detect slides to be removed\r\n    keyphrases: string;\r\n    private search = new Subject<void>();\r\n    removedSlidesNumbers: number[];\r\n\r\n    file: File;\r\n    filename: string;\r\n    //time until the file gets uploaded again. Must be less or equal than minutesUntilDeletion in AttachmentUnitResource.java\r\n    readonly MINUTES_UNTIL_DELETION = 29;\r\n\r\n    constructor() {\r\n        this.file = this.router.getCurrentNavigation()?.extras?.state?.file;\r\n        const lectureRoute = this.activatedRoute.parent!.parent!;\r\n        combineLatest([lectureRoute.paramMap, lectureRoute.parent!.paramMap]).subscribe(([params]) => {\r\n            this.lectureId = Number(params.get('lectureId'));\r\n            this.courseId = Number(params.get('courseId'));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Life cycle hook called by Angular to indicate that Angular is done creating the component\r\n     */\r\n    ngOnInit(): void {\r\n        this.keyphrases = '';\r\n        this.removedSlidesNumbers = [];\r\n        this.isLoading = true;\r\n        this.isProcessingMode = true;\r\n\r\n        if (!this.file) {\r\n            this.alertService.error(this.translateService.instant(`artemisApp.attachmentUnit.createAttachmentUnits.noFile`));\r\n            this.isLoading = true;\r\n            return;\r\n        }\r\n\r\n        //regularly re-upload the file when it gets deleted in the backend\r\n        setTimeout(\r\n            () => {\r\n                this.attachmentUnitService\r\n                    .uploadSlidesForProcessing(this.lectureId, this.file)\r\n                    .pipe(repeat({ delay: 1000 * 60 * this.MINUTES_UNTIL_DELETION }))\r\n                    .subscribe({\r\n                        next: (res) => {\r\n                            this.filename = res.body!;\r\n                        },\r\n                        error: (res: HttpErrorResponse) => {\r\n                            onError(this.alertService, res);\r\n                            this.isLoading = false;\r\n                        },\r\n                    });\r\n            },\r\n            1000 * 60 * this.MINUTES_UNTIL_DELETION,\r\n        );\r\n\r\n        this.attachmentUnitService\r\n            .uploadSlidesForProcessing(this.lectureId, this.file)\r\n            .pipe(\r\n                switchMap((res) => {\r\n                    if (res instanceof HttpErrorResponse) {\r\n                        throw new Error(res.message);\r\n                    } else {\r\n                        this.filename = res.body!;\r\n                        return this.attachmentUnitService.getSplitUnitsData(this.lectureId, this.filename);\r\n                    }\r\n                }),\r\n            )\r\n            .subscribe({\r\n                next: (res) => {\r\n                    this.units = res.body!.units || this.units;\r\n                    this.numberOfPages = res.body!.numberOfPages;\r\n                    this.isLoading = false;\r\n                },\r\n                error: (res: HttpErrorResponse) => {\r\n                    onError(this.alertService, res);\r\n                    this.isLoading = false;\r\n                },\r\n            });\r\n\r\n        this.search\r\n            .pipe(\r\n                debounceTime(500),\r\n                switchMap(() => {\r\n                    return this.attachmentUnitService.getSlidesToRemove(this.lectureId, this.filename, this.keyphrases);\r\n                }),\r\n            )\r\n            .subscribe({\r\n                next: (res) => {\r\n                    if (res.body) {\r\n                        this.removedSlidesNumbers = res.body.map((n) => n + 1);\r\n                    }\r\n                },\r\n                error: (res: HttpErrorResponse) => {\r\n                    onError(this.alertService, res);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Creates the attachment units with the information given on this page\r\n     */\r\n    createAttachmentUnits(): void {\r\n        if (this.validUnitInformation()) {\r\n            this.isLoading = true;\r\n            const lectureUnitInformation: LectureUnitInformationDTO = {\r\n                units: this.units,\r\n                numberOfPages: this.numberOfPages,\r\n                removeSlidesCommaSeparatedKeyPhrases: this.keyphrases,\r\n            };\r\n\r\n            this.attachmentUnitService.createUnits(this.lectureId, this.filename, lectureUnitInformation).subscribe({\r\n                next: () => {\r\n                    this.router.navigate(['../../'], { relativeTo: this.activatedRoute });\r\n                    this.isLoading = false;\r\n                },\r\n                error: (res: HttpErrorResponse) => {\r\n                    onError(this.alertService, res);\r\n                },\r\n            });\r\n        }\r\n    }\r\n\r\n    set searchTerm(searchTerm: string) {\r\n        //only consider non-empty searches for slide removal\r\n        if (searchTerm.trim() !== '') {\r\n            this.keyphrases = searchTerm;\r\n            this.search.next();\r\n        } else {\r\n            this.removedSlidesNumbers = [];\r\n        }\r\n    }\r\n\r\n    get searchTerm(): string {\r\n        return this.keyphrases;\r\n    }\r\n\r\n    /**\r\n     * Go back to the lecture page\r\n     */\r\n    cancelSplit() {\r\n        this.router.navigate(['course-management', this.courseId.toString(), 'lectures', this.lectureId.toString()]);\r\n    }\r\n\r\n    addRow() {\r\n        const unitDynamic = {\r\n            unitName: '',\r\n            startPage: 0,\r\n            endPage: 0,\r\n        };\r\n        this.units.push(unitDynamic);\r\n        return true;\r\n    }\r\n\r\n    deleteRow(i: number) {\r\n        if (this.units.length === 1) {\r\n            return false;\r\n        } else {\r\n            this.units.splice(i, 1);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    validUnitInformation(): boolean {\r\n        for (const unit of this.units) {\r\n            if (!unit.unitName) {\r\n                this.invalidUnitTableMessage = this.translateService.instant(`artemisApp.attachmentUnit.createAttachmentUnits.validation.empty.unitName`);\r\n                return false;\r\n            }\r\n\r\n            if (unit.startPage === null) {\r\n                this.invalidUnitTableMessage = this.translateService.instant(`artemisApp.attachmentUnit.createAttachmentUnits.validation.empty.startPage`);\r\n                return false;\r\n            }\r\n\r\n            if (unit.endPage === null) {\r\n                this.invalidUnitTableMessage = this.translateService.instant(`artemisApp.attachmentUnit.createAttachmentUnits.validation.empty.endPage`);\r\n                return false;\r\n            }\r\n\r\n            if (unit.startPage < 1) {\r\n                this.invalidUnitTableMessage = this.translateService.instant(`artemisApp.attachmentUnit.createAttachmentUnits.validation.startPage`);\r\n                return false;\r\n            }\r\n\r\n            if (unit.startPage > this.numberOfPages) {\r\n                this.invalidUnitTableMessage = this.translateService.instant(`artemisApp.attachmentUnit.createAttachmentUnits.validation.startPageBigger`, {\r\n                    max: this.numberOfPages ?? '',\r\n                });\r\n                return false;\r\n            }\r\n\r\n            if (unit.endPage < 1) {\r\n                this.invalidUnitTableMessage = this.translateService.instant(`artemisApp.attachmentUnit.createAttachmentUnits.validation.endPageLower`);\r\n                return false;\r\n            }\r\n\r\n            if (unit.endPage > this.numberOfPages) {\r\n                this.invalidUnitTableMessage = this.translateService.instant(`artemisApp.attachmentUnit.createAttachmentUnits.validation.endPage`, {\r\n                    max: this.numberOfPages ?? '',\r\n                });\r\n                return false;\r\n            }\r\n\r\n            if (unit.startPage > unit.endPage) {\r\n                this.invalidUnitTableMessage = this.translateService.instant(`artemisApp.attachmentUnit.createAttachmentUnits.validation.invalidPages`, {\r\n                    unitName: unit.unitName ?? '',\r\n                });\r\n                return false;\r\n            }\r\n        }\r\n\r\n        this.invalidUnitTableMessage = undefined;\r\n        return true;\r\n    }\r\n}\r\n", "<jhi-lecture-unit-layout [isLoading]=\"isLoading\">\r\n    <div class=\"col-4\">\r\n        <h2 id=\"page-heading\">\r\n            <span jhiTranslate=\"artemisApp.attachmentUnit.createAttachmentUnits.split.unit\"></span>\r\n        </h2>\r\n    </div>\r\n    <div class=\"table-responsive\">\r\n        <table class=\"table table-striped\">\r\n            <thead>\r\n                <tr>\r\n                    <th><span jhiTranslate=\"artemisApp.attachmentUnit.createAttachmentUnits.split.unitName\"></span></th>\r\n                    <th>\r\n                        <span jhiTranslate=\"artemisApp.attachmentUnit.createAttachmentUnits.split.releaseDate\"></span>\r\n                    </th>\r\n                    <th><span jhiTranslate=\"artemisApp.attachmentUnit.createAttachmentUnits.split.startPage\"></span></th>\r\n                    <th><span jhiTranslate=\"artemisApp.attachmentUnit.createAttachmentUnits.split.endPage\"></span></th>\r\n                    <th></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody class=\"table-body\" id=\"lecture-preview\">\r\n                @for (unit of units; track unit; let i = $index) {\r\n                    <tr id=\"unit-row-{{ i }}\">\r\n                        <td>\r\n                            <input\r\n                                required\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                name=\"unitName\"\r\n                                placeholder=\"Unit Name\"\r\n                                autocomplete=\"off\"\r\n                                [defaultValue]=\"unit.unitName\"\r\n                                [(ngModel)]=\"units[i].unitName\"\r\n                            />\r\n                        </td>\r\n                        <td>\r\n                            <jhi-date-time-picker [shouldDisplayTimeZoneWarning]=\"false\" [(ngModel)]=\"units[i].releaseDate\" name=\"releaseDate\" id=\"release-date\" />\r\n                        </td>\r\n                        <td>\r\n                            <input\r\n                                required\r\n                                [max]=\"unit.endPage\"\r\n                                [min]=\"1\"\r\n                                type=\"number\"\r\n                                class=\"form-control\"\r\n                                name=\"startPage\"\r\n                                placeholder=\"Start Page\"\r\n                                autocomplete=\"off\"\r\n                                [defaultValue]=\"unit.startPage\"\r\n                                [(ngModel)]=\"unit.startPage\"\r\n                            />\r\n                        </td>\r\n                        <td>\r\n                            <input\r\n                                required\r\n                                [max]=\"numberOfPages\"\r\n                                [min]=\"unit.startPage\"\r\n                                type=\"number\"\r\n                                class=\"form-control\"\r\n                                name=\"endPage\"\r\n                                placeholder=\"End Page\"\r\n                                autocomplete=\"off\"\r\n                                [defaultValue]=\"unit.endPage\"\r\n                                [(ngModel)]=\"unit.endPage\"\r\n                            />\r\n                        </td>\r\n                        <td>\r\n                            <div class=\"text-center\">\r\n                                <button [disabled]=\"units && units.length === 1\" (click)=\"deleteRow(i)\" class=\"btn btn-danger\"><fa-icon [icon]=\"faTimes\" /></button>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                }\r\n                <button (click)=\"addRow()\" class=\"btn btn-success mt-2\">\r\n                    <fa-icon [icon]=\"faPlus\" />{{ 'artemisApp.attachmentUnit.createAttachmentUnits.addUnit' | artemisTranslate }}\r\n                </button>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n    <div class=\"mt-3 mb-3\">\r\n        <span class=\"px-1\" jhiTranslate=\"artemisApp.attachmentUnit.createAttachmentUnits.removeSlides\"></span>\r\n        <div>\r\n            <div class=\"alert alert-warning mt-3 ml-3\">\r\n                <ul>\r\n                    <li jhiTranslate=\"artemisApp.attachmentUnit.createAttachmentUnits.removeSlidesInfo.firstLine\"></li>\r\n                    <li jhiTranslate=\"artemisApp.attachmentUnit.createAttachmentUnits.removeSlidesInfo.secondLine\"></li>\r\n                    <li>\r\n                        {{ 'artemisApp.attachmentUnit.createAttachmentUnits.removeSlidesInfo.thirdLine' | artemisTranslate }}\r\n                        {{ removedSlidesNumbers.length > 0 ? removedSlidesNumbers : '-' }}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"removeSlidesCommaSeparatedKeyPhrases\"\r\n                placeholder=\"{{ 'artemisApp.attachmentUnit.createAttachmentUnits.removeSlidesPlaceholder' | artemisTranslate }}\"\r\n                autocomplete=\"off\"\r\n                [(ngModel)]=\"searchTerm\"\r\n            />\r\n        </div>\r\n    </div>\r\n    @if (units.length < 1) {\r\n        <div class=\"alert alert-danger mt-3\">\r\n            <fa-icon [icon]=\"faExclamationTriangle\" />\r\n            {{ 'artemisApp.attachmentUnit.createAttachmentUnits.noUnitDetected' | artemisTranslate }}\r\n        </div>\r\n    }\r\n    <button\r\n        [ngbTooltip]=\"'artemisApp.attachmentUnit.createAttachmentUnits.processTimeInfo' | artemisTranslate\"\r\n        type=\"button\"\r\n        (click)=\"createAttachmentUnits()\"\r\n        [disabled]=\"units.length < 1\"\r\n        class=\"btn btn-primary\"\r\n    >\r\n        <span jhiTranslate=\"entity.action.submit\"></span>\r\n    </button>\r\n    <button (click)=\"cancelSplit()\" class=\"btn btn-secondary\"><fa-icon [icon]=\"faBan\" />&nbsp;<span jhiTranslate=\"entity.action.cancel\"></span></button>\r\n    @if (invalidUnitTableMessage) {\r\n        <div class=\"alert alert-warning mt-3\">\r\n            <fa-icon [icon]=\"faExclamationTriangle\" />\r\n            <span>\r\n                {{ invalidUnitTableMessage }}\r\n            </span>\r\n        </div>\r\n    }\r\n</jhi-lecture-unit-layout>\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275twoWayListener", "$event", "\u0275$index_57_r2", "\u0275\u0275restoreView", "_r1", "$index", "ctx_r2", "\u0275\u0275nextContext", "i0", "\u0275\u0275twoWayBindingSet", "units", "unitName", "\u0275\u0275resetView", "\u0275\u0275elementEnd", "releaseDate", "unit_r4", "$implicit", "startPage", "endPage", "\u0275\u0275listener", "deleteRow", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275propertyInterpolate1", "\u0275\u0275property", "\u0275\u0275twoWayProperty", "numberOfPages", "length", "faTimes", "faExclamationTriangle", "\u0275\u0275textInterpolate1", "\u0275\u0275pipeBind1", "invalidUnitTableMessage", "AttachmentUnitsComponent", "activatedRoute", "inject", "ActivatedRoute", "router", "Router", "attachmentUnitService", "AttachmentUnitService", "alertService", "AlertService", "translateService", "TranslateService", "lectureId", "courseId", "isLoading", "isProcessingMode", "faSave", "faBan", "faPlus", "faQuestionCircle", "keyphrases", "search", "Subject", "removedSlidesNumbers", "file", "filename", "MINUTES_UNTIL_DELETION", "constructor", "getCurrentNavigation", "extras", "state", "lectureRoute", "parent", "combineLatest", "paramMap", "subscribe", "params", "Number", "get", "ngOnInit", "error", "instant", "setTimeout", "uploadSlidesForProcessing", "pipe", "repeat", "delay", "next", "res", "body", "onError", "switchMap", "HttpErrorResponse", "Error", "message", "getSplitUnitsData", "debounceTime", "getSlidesToRemove", "map", "n", "createAttachmentUnits", "validUnitInformation", "lectureUnitInformation", "removeSlidesCommaSeparatedKeyPhrases", "createUnits", "navigate", "relativeTo", "searchTerm", "trim", "cancelSplit", "toString", "addRow", "unitDynamic", "push", "i", "splice", "unit", "max", "undefined", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275repeaterCreate", "AttachmentUnitsComponent_For_39_Template", "\u0275\u0275repeaterTrackByIdentity", "\u0275\u0275template", "AttachmentUnitsComponent_Conditional_74_Template", "AttachmentUnitsComponent_Conditional_86_Template", "\u0275\u0275repeater", "\u0275\u0275textInterpolate2", "\u0275\u0275propertyInterpolate", "\u0275\u0275conditional", "LectureUnitLayoutComponent", "TranslateDirective", "FormsModule", "DefaultValueAccessor", "NumberValueAccessor", "NgControlStatus", "RequiredValidator", "MinValidator", "MaxValidator", "NgModel", "FormDateTimePickerComponent", "FaIconComponent", "NgbTooltip", "ArtemisTranslatePipe", "encapsulation"]
}
