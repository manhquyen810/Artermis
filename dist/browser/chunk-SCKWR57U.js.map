{
  "version": 3,
  "sources": ["src/main/webapp/app/lecture/lecture-attachments.component.ts", "src/main/webapp/app/lecture/lecture-attachments.component.html"],
  "sourcesContent": ["import { Component, ElementRef, OnDestroy, ViewChild, computed, effect, inject, input, signal, viewChild } from '@angular/core';\r\nimport { ActivatedRoute, RouterLink } from '@angular/router';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { Lecture } from 'app/entities/lecture.model';\r\nimport dayjs from 'dayjs/esm';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { FileService } from 'app/shared/http/file.service';\r\nimport { Attachment, AttachmentType } from 'app/entities/attachment.model';\r\nimport { AttachmentService } from 'app/lecture/attachment.service';\r\nimport { faEye, faPaperclip, faPencilAlt, faQuestionCircle, faSpinner, faTimes, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { ACCEPTED_FILE_EXTENSIONS_FILE_BROWSER, ALLOWED_FILE_EXTENSIONS_HUMAN_READABLE } from 'app/shared/constants/file-extensions.constants';\r\nimport { LectureService } from 'app/lecture/lecture.service';\r\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { toSignal } from '@angular/core/rxjs-interop';\r\nimport { FormDateTimePickerComponent } from 'app/shared/date-time-picker/date-time-picker.component';\r\nimport { TranslateDirective } from '../shared/language/translate.directive';\r\nimport { NgClass } from '@angular/common';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { DeleteButtonDirective } from '../shared/delete-dialog/delete-button.directive';\r\nimport { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\r\nimport { ArtemisTranslatePipe } from '../shared/pipes/artemis-translate.pipe';\r\nimport { HtmlForMarkdownPipe } from '../shared/pipes/html-for-markdown.pipe';\r\n\r\nexport interface LectureAttachmentFormData {\r\n    attachmentName?: string;\r\n    attachmentFileName?: string;\r\n    releaseDate?: dayjs.Dayjs;\r\n    notificationText?: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'jhi-lecture-attachments',\r\n    templateUrl: './lecture-attachments.component.html',\r\n    styleUrls: ['./lecture-attachments.component.scss'],\r\n    imports: [\r\n        TranslateDirective,\r\n        NgClass,\r\n        FaIconComponent,\r\n        RouterLink,\r\n        NgbTooltip,\r\n        DeleteButtonDirective,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        FormDateTimePickerComponent,\r\n        ArtemisDatePipe,\r\n        ArtemisTranslatePipe,\r\n        HtmlForMarkdownPipe,\r\n    ],\r\n})\r\nexport class LectureAttachmentsComponent implements OnDestroy {\r\n    protected readonly faSpinner = faSpinner;\r\n    protected readonly faTimes = faTimes;\r\n    protected readonly faTrash = faTrash;\r\n    protected readonly faPencilAlt = faPencilAlt;\r\n    protected readonly faPaperclip = faPaperclip;\r\n    protected readonly faQuestionCircle = faQuestionCircle;\r\n    protected readonly faEye = faEye;\r\n\r\n    protected readonly allowedFileExtensions = ALLOWED_FILE_EXTENSIONS_HUMAN_READABLE;\r\n    protected readonly acceptedFileExtensionsFileBrowser = ACCEPTED_FILE_EXTENSIONS_FILE_BROWSER;\r\n\r\n    private readonly activatedRoute = inject(ActivatedRoute);\r\n    private readonly attachmentService = inject(AttachmentService);\r\n    private readonly lectureService = inject(LectureService);\r\n    private readonly fileService = inject(FileService);\r\n    private readonly formBuilder = inject(FormBuilder);\r\n\r\n    @ViewChild('fileInput', { static: false }) fileInput: ElementRef;\r\n    datePickerComponent = viewChild(FormDateTimePickerComponent);\r\n\r\n    lectureId = input<number>();\r\n    showHeader = input<boolean>(true);\r\n\r\n    lecture = signal<Lecture>(new Lecture());\r\n    attachments: Attachment[] = [];\r\n    attachmentToBeUpdatedOrCreated = signal<Attachment | undefined>(undefined);\r\n    attachmentBackup?: Attachment;\r\n    attachmentFile = signal<File | undefined>(undefined);\r\n    isDownloadingAttachmentLink?: string;\r\n    notificationText?: string;\r\n    erroredFile?: File;\r\n    errorMessage?: string;\r\n    viewButtonAvailable: Record<number, boolean> = {};\r\n\r\n    private dialogErrorSource = new Subject<string>();\r\n    dialogError$ = this.dialogErrorSource.asObservable();\r\n\r\n    private routeDataSubscription?: Subscription;\r\n\r\n    form: FormGroup = this.formBuilder.group({\r\n        attachmentName: [undefined as string | undefined, [Validators.required]],\r\n        attachmentFileName: [undefined as string | undefined],\r\n        releaseDate: [undefined as dayjs.Dayjs | undefined],\r\n        notificationText: [undefined as string | undefined],\r\n    });\r\n\r\n    isFileSelectionValid = computed(() => {\r\n        return this.attachmentFile() || this.attachmentToBeUpdatedOrCreated()?.link;\r\n    });\r\n\r\n    private readonly statusChanges = toSignal(this.form.statusChanges ?? 'INVALID');\r\n    isFormValid = computed(\r\n        () => !this.attachmentToBeUpdatedOrCreated() || (this.statusChanges() === 'VALID' && this.isFileSelectionValid() && this.datePickerComponent()?.isValid()),\r\n    );\r\n\r\n    constructor() {\r\n        effect(() => {\r\n            this.notificationText = undefined;\r\n            this.routeDataSubscription?.unsubscribe(); // in case the subscription was already defined\r\n            this.routeDataSubscription = this.activatedRoute.parent!.data.subscribe(({ lecture }) => {\r\n                if (this.lectureId()) {\r\n                    this.lectureService.findWithDetails(this.lectureId()!).subscribe((lectureResponse: HttpResponse<Lecture>) => {\r\n                        this.lecture.set(lectureResponse.body!);\r\n                        this.loadAttachments();\r\n                    });\r\n                } else {\r\n                    this.lecture.set(lecture);\r\n                    this.loadAttachments();\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    loadAttachments(): void {\r\n        this.attachmentService.findAllByLectureId(this.lecture().id!).subscribe((attachmentsResponse: HttpResponse<Attachment[]>) => {\r\n            this.attachments = attachmentsResponse.body!;\r\n            this.attachments.forEach((attachment) => {\r\n                this.viewButtonAvailable[attachment.id!] = this.isViewButtonAvailable(attachment.link!);\r\n            });\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.dialogErrorSource.unsubscribe();\r\n        this.routeDataSubscription?.unsubscribe();\r\n    }\r\n\r\n    isViewButtonAvailable(attachmentLink: string): boolean {\r\n        return attachmentLink.endsWith('.pdf') ?? false;\r\n    }\r\n\r\n    addAttachment(): void {\r\n        const newAttachment = new Attachment();\r\n        newAttachment.lecture = this.lecture();\r\n        newAttachment.attachmentType = AttachmentType.FILE;\r\n        newAttachment.version = 0;\r\n        newAttachment.uploadDate = dayjs();\r\n        this.attachmentToBeUpdatedOrCreated.set(newAttachment);\r\n    }\r\n\r\n    /**\r\n     * If there is an attachment to save, it will be created or updated depending on its current state. The file will be automatically provided with the request.\r\n     */\r\n    saveAttachment(): void {\r\n        if (!this.attachmentToBeUpdatedOrCreated()) {\r\n            return;\r\n        }\r\n        this.attachmentToBeUpdatedOrCreated()!.version!++;\r\n        this.attachmentToBeUpdatedOrCreated()!.uploadDate = dayjs();\r\n        this.attachmentToBeUpdatedOrCreated()!.name = this.form.value.attachmentName ?? undefined;\r\n        this.attachmentToBeUpdatedOrCreated()!.releaseDate = this.form.value.releaseDate ?? undefined;\r\n        this.notificationText = this.form.value.notificationText ?? undefined;\r\n\r\n        if (!this.attachmentFile() && !this.attachmentToBeUpdatedOrCreated()!.id) {\r\n            return;\r\n        }\r\n\r\n        if (this.attachmentToBeUpdatedOrCreated()!.id) {\r\n            const requestOptions = {} as any;\r\n            if (this.notificationText) {\r\n                requestOptions.notificationText = this.notificationText;\r\n            }\r\n            this.attachmentService.update(this.attachmentToBeUpdatedOrCreated()!.id!, this.attachmentToBeUpdatedOrCreated()!, this.attachmentFile(), requestOptions).subscribe({\r\n                next: (attachmentRes: HttpResponse<Attachment>) => {\r\n                    this.resetAttachmentFormVariables();\r\n                    this.notificationText = undefined;\r\n                    this.attachments = this.attachments.map((el) => {\r\n                        return el.id === attachmentRes.body!.id ? attachmentRes.body! : el;\r\n                    });\r\n                },\r\n                error: (error: HttpErrorResponse) => this.handleFailedUpload(error),\r\n            });\r\n        } else {\r\n            this.attachmentService.create(this.attachmentToBeUpdatedOrCreated()!, this.attachmentFile()!).subscribe({\r\n                next: (attachmentRes: HttpResponse<Attachment>) => {\r\n                    this.attachments.push(attachmentRes.body!);\r\n                    this.lectureService.findWithDetails(this.lecture().id!).subscribe((lectureResponse: HttpResponse<Lecture>) => {\r\n                        this.lecture.set(lectureResponse.body!);\r\n                    });\r\n                    this.loadAttachments();\r\n                    this.resetAttachmentFormVariables();\r\n                },\r\n                error: (error: HttpErrorResponse) => this.handleFailedUpload(error),\r\n            });\r\n        }\r\n    }\r\n\r\n    private clearFormValues(): void {\r\n        this.form.reset({\r\n            attachmentName: undefined,\r\n            attachmentFileName: undefined,\r\n            releaseDate: undefined,\r\n            notificationText: undefined,\r\n        });\r\n    }\r\n\r\n    private resetAttachmentFormVariables() {\r\n        this.attachmentFile.set(undefined);\r\n        this.attachmentToBeUpdatedOrCreated.set(undefined);\r\n        this.attachmentBackup = undefined;\r\n        this.clearFormValues();\r\n    }\r\n\r\n    private handleFailedUpload(error: HttpErrorResponse): void {\r\n        this.errorMessage = error.message;\r\n        this.erroredFile = this.attachmentFile();\r\n        this.fileInput.nativeElement.value = '';\r\n        this.attachmentFile.set(undefined);\r\n        this.resetAttachment();\r\n    }\r\n\r\n    private setFormValues(formValues: LectureAttachmentFormData): void {\r\n        this.form.patchValue(formValues);\r\n    }\r\n\r\n    editAttachment(attachment: Attachment): void {\r\n        if (this.fileInput) {\r\n            this.fileInput.nativeElement.value = '';\r\n        }\r\n\r\n        // attachmentFileName can only be set to an empty string due to security reasons in current angular version (18)\r\n        this.setFormValues({\r\n            attachmentName: attachment?.name,\r\n            releaseDate: dayjs(attachment?.releaseDate),\r\n            notificationText: this.notificationText,\r\n        });\r\n\r\n        this.attachmentToBeUpdatedOrCreated.set(attachment);\r\n        this.attachmentBackup = Object.assign({}, attachment, {});\r\n    }\r\n\r\n    deleteAttachment(attachment: Attachment): void {\r\n        this.attachmentService.delete(attachment.id!).subscribe({\r\n            next: () => {\r\n                this.attachments = this.attachments.filter((attachmentEl) => attachmentEl.id !== attachment.id);\r\n                this.dialogErrorSource.next('');\r\n            },\r\n            error: (error: HttpErrorResponse) => this.dialogErrorSource.next(error.message),\r\n        });\r\n    }\r\n\r\n    cancel(): void {\r\n        if (this.attachmentBackup) {\r\n            this.resetAttachment();\r\n        }\r\n        this.attachmentToBeUpdatedOrCreated.set(undefined);\r\n        this.erroredFile = undefined;\r\n        this.resetAttachmentFormVariables();\r\n    }\r\n\r\n    resetAttachment(): void {\r\n        if (this.attachmentBackup) {\r\n            this.attachments = this.attachments.map((attachment) => {\r\n                if (attachment.id === this.attachmentBackup!.id) {\r\n                    attachment = this.attachmentBackup as Attachment;\r\n                }\r\n                return attachment;\r\n            });\r\n            this.attachmentBackup = undefined;\r\n        }\r\n    }\r\n\r\n    trackId(_index: number, item: Attachment): number | undefined {\r\n        return item.id;\r\n    }\r\n\r\n    downloadAttachment(downloadName: string, downloadUrl: string): void {\r\n        if (!this.isDownloadingAttachmentLink) {\r\n            this.isDownloadingAttachmentLink = downloadUrl;\r\n            this.fileService.downloadFileByAttachmentName(downloadUrl, downloadName);\r\n            this.isDownloadingAttachmentLink = undefined;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @function setLectureAttachment\r\n     * @param event {object} Event object which contains the uploaded file\r\n     */\r\n    setLectureAttachment(event: Event): void {\r\n        const input = event.target as HTMLInputElement;\r\n        if (!input.files?.length) {\r\n            return;\r\n        }\r\n        const file = input.files[0];\r\n        this.attachmentFile.set(file);\r\n        this.attachmentToBeUpdatedOrCreated()!.link = file.name;\r\n\r\n        this.attachmentToBeUpdatedOrCreated()!.name = this.form.value.attachmentName ?? undefined;\r\n        if (!this.attachmentToBeUpdatedOrCreated()!.name) {\r\n            const derivedFileName = this.determineAttachmentNameBasedOnFileName(file.name);\r\n            this.attachmentToBeUpdatedOrCreated()!.name = derivedFileName;\r\n            this.form.patchValue({ attachmentName: derivedFileName });\r\n        }\r\n    }\r\n\r\n    private determineAttachmentNameBasedOnFileName(fileName: string): string {\r\n        const FILE_EXTENSION_REGEX = /\\.[^/.]+$/;\r\n        return fileName.replace(FILE_EXTENSION_REGEX, '');\r\n    }\r\n}\r\n", "<div class=\"row justify-content-center\">\r\n    <div class=\"col-12\">\r\n        @if (lecture()) {\r\n            <div>\r\n                @if (showHeader()) {\r\n                    <div>\r\n                        <h2><span jhiTranslate=\"artemisApp.lecture.attachments.title\"></span>: {{ lecture().title }} - {{ lecture().course?.shortName }}</h2>\r\n                        <hr />\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6\">\r\n                                <dt><span jhiTranslate=\"artemisApp.lecture.startDate\"></span></dt>\r\n                                <dd>\r\n                                    <span>{{ lecture().startDate | artemisDate }}</span>\r\n                                </dd>\r\n                            </div>\r\n                            <div class=\"col-6\">\r\n                                <dt><span jhiTranslate=\"artemisApp.lecture.endDate\"></span></dt>\r\n                                <dd>\r\n                                    <span>{{ lecture().endDate | artemisDate }}</span>\r\n                                </dd>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12\">\r\n                                <dt><span jhiTranslate=\"artemisApp.lecture.description\"></span></dt>\r\n                                <dd class=\"markdown-preview editor-outline-background\" [innerHTML]=\"lecture().description | htmlForMarkdown\"></dd>\r\n                            </div>\r\n                        </div>\r\n                        <hr class=\"mt-2 mb-2\" />\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12\">\r\n                                <h4 jhiTranslate=\"artemisApp.lecture.attachments.attachments\"></h4>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        @if (attachments && attachments.length > 0) {\r\n                            <td class=\"table-responsive\">\r\n                                <table class=\"table table-striped position-relative\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th><span jhiTranslate=\"global.field.id\"></span></th>\r\n                                            <th><span jhiTranslate=\"artemisApp.lecture.attachments.name\"></span></th>\r\n                                            <th><span jhiTranslate=\"artemisApp.lecture.attachments.type\"></span></th>\r\n                                            <th><span jhiTranslate=\"artemisApp.lecture.attachments.releaseDate\"></span></th>\r\n                                            <th><span jhiTranslate=\"artemisApp.lecture.attachments.uploadDate\"></span></th>\r\n                                            <th><span jhiTranslate=\"artemisApp.lecture.attachments.version\"></span></th>\r\n                                            <th></th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        @for (attachment of attachments; track trackId($index, attachment)) {\r\n                                            <tr [ngClass]=\"{ 'edit-overlay-container': attachmentToBeUpdatedOrCreated()?.id === attachment?.id }\">\r\n                                                <td>\r\n                                                    {{ attachment.id }}\r\n                                                </td>\r\n                                                <td>\r\n                                                    @if (!isDownloadingAttachmentLink) {\r\n                                                        <a class=\"text-primary\" (click)=\"downloadAttachment(attachment.name || '', attachment.link || '')\">\r\n                                                            {{ attachment.name }}\r\n                                                        </a>\r\n                                                    } @else if (isDownloadingAttachmentLink === attachment.link) {\r\n                                                        <a class=\"text-primary\">\r\n                                                            <fa-icon [icon]=\"faSpinner\" animation=\"spin\" />\r\n                                                            {{ 'artemisApp.courseOverview.lectureDetails.isDownloading' | artemisTranslate }}\r\n                                                        </a>\r\n                                                    } @else {\r\n                                                        {{ attachment.name }}\r\n                                                    }\r\n                                                </td>\r\n                                                <td>{{ attachment.attachmentType }}</td>\r\n                                                <td>{{ attachment.releaseDate | artemisDate }}</td>\r\n                                                <td>{{ attachment.uploadDate | artemisDate }}</td>\r\n                                                <td>\r\n                                                    {{ attachment.version }}\r\n                                                </td>\r\n                                                <td class=\"text-end\">\r\n                                                    <div class=\"flex-btn-group-container\">\r\n                                                        @if (viewButtonAvailable[attachment.id!]) {\r\n                                                            <button\r\n                                                                type=\"button\"\r\n                                                                class=\"btn btn-primary btn-sm me-1\"\r\n                                                                [routerLink]=\"['/course-management', lecture().course?.id, 'lectures', lecture().id, 'attachments', attachment.id]\"\r\n                                                                [ngbTooltip]=\"'entity.action.view' | artemisTranslate\"\r\n                                                            >\r\n                                                                <fa-icon [icon]=\"faEye\" />\r\n                                                                <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.view\"></span>\r\n                                                            </button>\r\n                                                        }\r\n                                                        <button\r\n                                                            [disabled]=\"attachmentToBeUpdatedOrCreated()?.id === attachment?.id\"\r\n                                                            type=\"button\"\r\n                                                            (click)=\"editAttachment(attachment)\"\r\n                                                            class=\"btn btn-primary btn-sm me-1\"\r\n                                                        >\r\n                                                            <fa-icon [icon]=\"faPencilAlt\" />\r\n                                                            <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.edit\"></span>\r\n                                                        </button>\r\n                                                        @if (lecture().isAtLeastInstructor) {\r\n                                                            <button\r\n                                                                type=\"button\"\r\n                                                                [disabled]=\"attachmentToBeUpdatedOrCreated()?.id === attachment?.id\"\r\n                                                                jhiDeleteButton\r\n                                                                [entityTitle]=\"attachment?.name || ''\"\r\n                                                                deleteQuestion=\"artemisApp.attachment.deleteQuestion\"\r\n                                                                (delete)=\"deleteAttachment(attachment)\"\r\n                                                                [dialogError]=\"dialogError$\"\r\n                                                            >\r\n                                                                <fa-icon [icon]=\"faTrash\" />\r\n                                                            </button>\r\n                                                        }\r\n                                                    </div>\r\n                                                </td>\r\n                                                @if (attachmentToBeUpdatedOrCreated()?.id === attachment?.id) {\r\n                                                    <div class=\"edit-overlay\" jhiTranslate=\"artemisApp.lecture.attachments.isBeingEdited\"></div>\r\n                                                }\r\n                                            </tr>\r\n                                        }\r\n                                    </tbody>\r\n                                </table>\r\n                            </td>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                @if (attachmentToBeUpdatedOrCreated()) {\r\n                    <form [formGroup]=\"form\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12\">\r\n                                @if (!attachmentToBeUpdatedOrCreated()!.id) {\r\n                                    <h4 jhiTranslate=\"artemisApp.lecture.attachments.newAttachment\"></h4>\r\n                                } @else {\r\n                                    <h4 jhiTranslate=\"artemisApp.lecture.attachments.editAttachment\"></h4>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12 col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"attachmentName\" jhiTranslate=\"artemisApp.lecture.attachments.name\"></label>\r\n                                    <input type=\"text\" class=\"form-control\" id=\"attachmentName\" name=\"attachmentName\" formControlName=\"attachmentName\" />\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label\r\n                                        for=\"lectureAttachmentInput{{ attachmentToBeUpdatedOrCreated()!.name }}\"\r\n                                        class=\"form-control-label\"\r\n                                        jhiTranslate=\"artemisApp.lecture.attachments.file\"\r\n                                        >File</label\r\n                                    >\r\n                                    <small id=\"fileHelp\" class=\"form-text text-body-secondary\" jhiTranslate=\"artemisApp.lecture.attachments.fileLimitation\"></small>\r\n                                    <fa-icon\r\n                                        [icon]=\"faQuestionCircle\"\r\n                                        [ngbTooltip]=\"'artemisApp.lecture.attachments.fileLimitationTooltip' | artemisTranslate: { extensions: allowedFileExtensions }\"\r\n                                    />\r\n                                    <div class=\"input-group background-file\">\r\n                                        <div class=\"custom-file overflow-ellipsis\">\r\n                                            <input\r\n                                                #fileInput\r\n                                                id=\"lectureAttachmentInput{{ attachmentToBeUpdatedOrCreated()!.name }}\"\r\n                                                type=\"file\"\r\n                                                class=\"custom-file-input\"\r\n                                                [accept]=\"acceptedFileExtensionsFileBrowser\"\r\n                                                [placeholder]=\"'artemisApp.lecture.attachments.chooseFile' | artemisTranslate\"\r\n                                                (change)=\"setLectureAttachment($event)\"\r\n                                                [class.ng-invalid]=\"!isFileSelectionValid()\"\r\n                                                [class.invalid-file-input-margin]=\"!isFileSelectionValid()\"\r\n                                                formControlName=\"attachmentFileName\"\r\n                                                aria-describedby=\"fileHelp\"\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    @if (erroredFile) {\r\n                                        <div id=\"too-large-file-alert\" class=\"alert alert-danger\">\r\n                                            {{ errorMessage }}\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <jhi-date-time-picker labelName=\"{{ 'artemisApp.lecture.attachments.releaseDate' | artemisTranslate }}\" formControlName=\"releaseDate\" />\r\n                                </div>\r\n                                @if (attachmentToBeUpdatedOrCreated()!.id) {\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"attachmentName\" jhiTranslate=\"artemisApp.lecture.attachments.notificationText\"></label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            class=\"form-control\"\r\n                                            id=\"notificationText\"\r\n                                            formControlName=\"notificationText\"\r\n                                            [placeholder]=\"'artemisApp.lecture.attachments.notificationPlaceholder' | artemisTranslate\"\r\n                                        />\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12\">\r\n                                <button id=\"upload-attachment\" type=\"button\" [disabled]=\"!isFormValid()\" (click)=\"saveAttachment()\" class=\"btn btn-primary me-2\">\r\n                                    <fa-icon [icon]=\"faPaperclip\" />&nbsp;\r\n                                    <span jhiTranslate=\"entity.action.saveAttachment\"></span>\r\n                                </button>\r\n                                <button type=\"button\" (click)=\"cancel()\" class=\"btn btn-secondary\">\r\n                                    <fa-icon [icon]=\"faTimes\" />&nbsp;<span jhiTranslate=\"entity.action.cancel\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                } @else {\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                            <button type=\"button\" (click)=\"addAttachment()\" class=\"btn btn-primary\" id=\"add-attachment\">\r\n                                <fa-icon [icon]=\"faPaperclip\" />&nbsp;<span jhiTranslate=\"entity.action.addAttachment\"></span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        }\r\n    </div>\r\n</div>\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275textInterpolate2", "ctx_r0", "lecture", "title", "tmp_2_0", "course", "shortName", "\u0275\u0275textInterpolate", "\u0275\u0275pipeBind1", "startDate", "endDate", "\u0275\u0275property", "description", "\u0275\u0275sanitizeHtml", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r3", "attachment_r4", "\u0275\u0275nextContext", "$implicit", "\u0275\u0275resetView", "downloadAttachment", "name", "link", "\u0275\u0275textInterpolate1", "faSpinner", "\u0275\u0275pureFunction3", "_c2", "tmp_13_0", "id", "faEye", "_r5", "deleteAttachment", "attachmentToBeUpdatedOrCreated", "dialogError$", "faTrash", "\u0275\u0275template", "LectureAttachmentsComponent_Conditional_4_Conditional_8_For_34_Conditional_8_Template", "LectureAttachmentsComponent_Conditional_4_Conditional_8_For_34_Conditional_9_Template", "LectureAttachmentsComponent_Conditional_4_Conditional_8_For_34_Conditional_10_Template", "LectureAttachmentsComponent_Conditional_4_Conditional_8_For_34_Conditional_30_Template", "_r2", "editAttachment", "LectureAttachmentsComponent_Conditional_4_Conditional_8_For_34_Conditional_38_Template", "LectureAttachmentsComponent_Conditional_4_Conditional_8_For_34_Conditional_41_Template", "\u0275\u0275pureFunction1", "_c1", "tmp_12_0", "\u0275\u0275conditional", "isDownloadingAttachmentLink", "attachmentType", "releaseDate", "uploadDate", "version", "viewButtonAvailable", "tmp_20_0", "faPencilAlt", "isAtLeastInstructor", "tmp_23_0", "\u0275\u0275repeaterCreate", "LectureAttachmentsComponent_Conditional_4_Conditional_8_For_34_Template", "\u0275\u0275componentInstance", "trackId", "\u0275\u0275repeater", "attachments", "errorMessage", "LectureAttachmentsComponent_Conditional_4_Conditional_11_Conditional_7_Template", "LectureAttachmentsComponent_Conditional_4_Conditional_11_Conditional_8_Template", "$event", "_r6", "setLectureAttachment", "LectureAttachmentsComponent_Conditional_4_Conditional_11_Conditional_42_Template", "LectureAttachmentsComponent_Conditional_4_Conditional_11_Conditional_50_Template", "saveAttachment", "cancel", "form", "\u0275\u0275propertyInterpolate1", "faQuestionCircle", "\u0275\u0275pipeBind2", "_c3", "allowedFileExtensions", "\u0275\u0275classProp", "isFileSelectionValid", "acceptedFileExtensionsFileBrowser", "erroredFile", "\u0275\u0275propertyInterpolate", "isFormValid", "faPaperclip", "faTimes", "_r7", "addAttachment", "LectureAttachmentsComponent_Conditional_4_Conditional_3_Template", "LectureAttachmentsComponent_Conditional_4_Conditional_8_Template", "LectureAttachmentsComponent_Conditional_4_Conditional_11_Template", "LectureAttachmentsComponent_Conditional_4_Conditional_12_Template", "showHeader", "length", "LectureAttachmentsComponent", "ALLOWED_FILE_EXTENSIONS_HUMAN_READABLE", "ACCEPTED_FILE_EXTENSIONS_FILE_BROWSER", "activatedRoute", "inject", "ActivatedRoute", "attachmentService", "AttachmentService", "lectureService", "LectureService", "fileService", "FileService", "formBuilder", "FormBuilder", "fileInput", "datePickerComponent", "viewChild", "FormDateTimePickerComponent", "lectureId", "input", "signal", "Lecture", "undefined", "attachmentBackup", "attachmentFile", "notificationText", "dialogErrorSource", "Subject", "asObservable", "routeDataSubscription", "group", "attachmentName", "Validators", "required", "attachmentFileName", "computed", "statusChanges", "toSignal", "isValid", "constructor", "effect", "unsubscribe", "parent", "data", "subscribe", "findWithDetails", "lectureResponse", "set", "body", "loadAttachments", "findAllByLectureId", "attachmentsResponse", "forEach", "attachment", "isViewButtonAvailable", "ngOnDestroy", "attachmentLink", "endsWith", "newAttachment", "Attachment", "dayjs", "value", "requestOptions", "update", "next", "attachmentRes", "resetAttachmentFormVariables", "map", "el", "error", "handleFailedUpload", "create", "push", "clearFormValues", "reset", "message", "nativeElement", "resetAttachment", "setFormValues", "formValues", "patchValue", "Object", "assign", "delete", "filter", "attachmentEl", "_index", "item", "downloadName", "downloadUrl", "downloadFileByAttachmentName", "event", "target", "files", "file", "derivedFileName", "determineAttachmentNameBasedOnFileName", "fileName", "FILE_EXTENSION_REGEX", "replace", "selectors", "viewQuery", "rf", "ctx", "LectureAttachmentsComponent_Conditional_4_Template", "TranslateDirective", "NgClass", "FaIconComponent", "RouterLink", "NgbTooltip", "DeleteButtonDirective", "FormsModule", "\u0275NgNoValidate", "DefaultValueAccessor", "NgControlStatus", "NgControlStatusGroup", "ReactiveFormsModule", "FormGroupDirective", "FormControlName", "ArtemisDatePipe", "ArtemisTranslatePipe", "HtmlForMarkdownPipe", "styles"]
}
