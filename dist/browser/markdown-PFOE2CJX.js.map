{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/markdown/markdown.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.2(404545bded1df6ffa41ea0af4e8ddb219018c6c1)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/markdown/markdown.ts\nvar conf = {\n  comments: {\n    blockComment: [\"<!--\", \"-->\"]\n  },\n  brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]],\n  autoClosingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: \"<\",\n    close: \">\",\n    notIn: [\"string\"]\n  }],\n  surroundingPairs: [{\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"`\",\n    close: \"`\"\n  }],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*<!--\\\\s*#?region\\\\b.*-->\"),\n      end: new RegExp(\"^\\\\s*<!--\\\\s*#?endregion\\\\b.*-->\")\n    }\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".md\",\n  // escape codes\n  control: /[\\\\`*_\\[\\]{}()#+\\-\\.!]/,\n  noncontrol: /[^\\\\`*_\\[\\]{}()#+\\-\\.!]/,\n  escapes: /\\\\(?:@control)/,\n  // escape codes for javascript/CSS strings\n  jsescapes: /\\\\(?:[btnfr\\\\\"']|[0-7][0-7]?|[0-3][0-7]{2})/,\n  // non matched elements\n  empty: [\"area\", \"base\", \"basefont\", \"br\", \"col\", \"frame\", \"hr\", \"img\", \"input\", \"isindex\", \"link\", \"meta\", \"param\"],\n  tokenizer: {\n    root: [\n    // markdown tables\n    [/^\\s*\\|/, \"@rematch\", \"@table_header\"],\n    // headers (with #)\n    [/^(\\s{0,3})(#+)((?:[^\\\\#]|@escapes)+)((?:#+)?)/, [\"white\", \"keyword\", \"keyword\", \"keyword\"]],\n    // headers (with =)\n    [/^\\s*(=+|\\-+)\\s*$/, \"keyword\"],\n    // headers (with ***)\n    [/^\\s*((\\*[ ]?)+)\\s*$/, \"meta.separator\"],\n    // quote\n    [/^\\s*>+/, \"comment\"],\n    // list (starting with * or number)\n    [/^\\s*([\\*\\-+:]|\\d+\\.)\\s/, \"keyword\"],\n    // code block (4 spaces indent)\n    [/^(\\t|[ ]{4})[^ ].*$/, \"string\"],\n    // code block (3 tilde)\n    [/^\\s*~~~\\s*((?:\\w|[\\/\\-#])+)?\\s*$/, {\n      token: \"string\",\n      next: \"@codeblock\"\n    }],\n    // github style code blocks (with backticks and language)\n    [/^\\s*```\\s*((?:\\w|[\\/\\-#])+).*$/, {\n      token: \"string\",\n      next: \"@codeblockgh\",\n      nextEmbedded: \"$1\"\n    }],\n    // github style code blocks (with backticks but no language)\n    [/^\\s*```\\s*$/, {\n      token: \"string\",\n      next: \"@codeblock\"\n    }],\n    // markup within lines\n    {\n      include: \"@linecontent\"\n    }],\n    table_header: [{\n      include: \"@table_common\"\n    }, [/[^\\|]+/, \"keyword.table.header\"]\n    // table header\n    ],\n    table_body: [{\n      include: \"@table_common\"\n    }, {\n      include: \"@linecontent\"\n    }],\n    table_common: [[/\\s*[\\-:]+\\s*/, {\n      token: \"keyword\",\n      switchTo: \"table_body\"\n    }],\n    // header-divider\n    [/^\\s*\\|/, \"keyword.table.left\"],\n    // opening |\n    [/^\\s*[^\\|]/, \"@rematch\", \"@pop\"],\n    // exiting\n    [/^\\s*$/, \"@rematch\", \"@pop\"],\n    // exiting\n    [/\\|/, {\n      cases: {\n        \"@eos\": \"keyword.table.right\",\n        // closing |\n        \"@default\": \"keyword.table.middle\"\n        // inner |\n      }\n    }]],\n    codeblock: [[/^\\s*~~~\\s*$/, {\n      token: \"string\",\n      next: \"@pop\"\n    }], [/^\\s*```\\s*$/, {\n      token: \"string\",\n      next: \"@pop\"\n    }], [/.*$/, \"variable.source\"]],\n    // github style code blocks\n    codeblockgh: [[/```\\s*$/, {\n      token: \"string\",\n      next: \"@pop\",\n      nextEmbedded: \"@pop\"\n    }], [/[^`]+/, \"variable.source\"]],\n    linecontent: [\n    // escapes\n    [/&\\w+;/, \"string.escape\"], [/@escapes/, \"escape\"],\n    // various markup\n    [/\\b__([^\\\\_]|@escapes|_(?!_))+__\\b/, \"strong\"], [/\\*\\*([^\\\\*]|@escapes|\\*(?!\\*))+\\*\\*/, \"strong\"], [/\\b_[^_]+_\\b/, \"emphasis\"], [/\\*([^\\\\*]|@escapes)+\\*/, \"emphasis\"], [/`([^\\\\`]|@escapes)+`/, \"variable\"],\n    // links\n    [/\\{+[^}]+\\}+/, \"string.target\"], [/(!?\\[)((?:[^\\]\\\\]|@escapes)*)(\\]\\([^\\)]+\\))/, [\"string.link\", \"\", \"string.link\"]], [/(!?\\[)((?:[^\\]\\\\]|@escapes)*)(\\])/, \"string.link\"],\n    // or html\n    {\n      include: \"html\"\n    }],\n    // Note: it is tempting to rather switch to the real HTML mode instead of building our own here\n    // but currently there is a limitation in Monarch that prevents us from doing it: The opening\n    // '<' would start the HTML mode, however there is no way to jump 1 character back to let the\n    // HTML mode also tokenize the opening angle bracket. Thus, even though we could jump to HTML,\n    // we cannot correctly tokenize it in that mode yet.\n    html: [\n    // html tags\n    [/<(\\w+)\\/>/, \"tag\"], [/<(\\w+)(\\-|\\w)*/, {\n      cases: {\n        \"@empty\": {\n          token: \"tag\",\n          next: \"@tag.$1\"\n        },\n        \"@default\": {\n          token: \"tag\",\n          next: \"@tag.$1\"\n        }\n      }\n    }], [/<\\/(\\w+)(\\-|\\w)*\\s*>/, {\n      token: \"tag\"\n    }], [/<!--/, \"comment\", \"@comment\"]],\n    comment: [[/[^<\\-]+/, \"comment.content\"], [/-->/, \"comment\", \"@pop\"], [/<!--/, \"comment.content.invalid\"], [/[<\\-]/, \"comment.content\"]],\n    // Almost full HTML tag matching, complete with embedded scripts & styles\n    tag: [[/[ \\t\\r\\n]+/, \"white\"], [/(type)(\\s*=\\s*)(\")([^\"]+)(\")/, [\"attribute.name.html\", \"delimiter.html\", \"string.html\", {\n      token: \"string.html\",\n      switchTo: \"@tag.$S2.$4\"\n    }, \"string.html\"]], [/(type)(\\s*=\\s*)(')([^']+)(')/, [\"attribute.name.html\", \"delimiter.html\", \"string.html\", {\n      token: \"string.html\",\n      switchTo: \"@tag.$S2.$4\"\n    }, \"string.html\"]], [/(\\w+)(\\s*=\\s*)(\"[^\"]*\"|'[^']*')/, [\"attribute.name.html\", \"delimiter.html\", \"string.html\"]], [/\\w+/, \"attribute.name.html\"], [/\\/>/, \"tag\", \"@pop\"], [/>/, {\n      cases: {\n        \"$S2==style\": {\n          token: \"tag\",\n          switchTo: \"embeddedStyle\",\n          nextEmbedded: \"text/css\"\n        },\n        \"$S2==script\": {\n          cases: {\n            $S3: {\n              token: \"tag\",\n              switchTo: \"embeddedScript\",\n              nextEmbedded: \"$S3\"\n            },\n            \"@default\": {\n              token: \"tag\",\n              switchTo: \"embeddedScript\",\n              nextEmbedded: \"text/javascript\"\n            }\n          }\n        },\n        \"@default\": {\n          token: \"tag\",\n          next: \"@pop\"\n        }\n      }\n    }]],\n    embeddedStyle: [[/[^<]+/, \"\"], [/<\\/style\\s*>/, {\n      token: \"@rematch\",\n      next: \"@pop\",\n      nextEmbedded: \"@pop\"\n    }], [/</, \"\"]],\n    embeddedScript: [[/[^<]+/, \"\"], [/<\\/script\\s*>/, {\n      token: \"@rematch\",\n      next: \"@pop\",\n      nextEmbedded: \"@pop\"\n    }], [/</, \"\"]]\n  }\n};\nexport { conf, language };"],"mappings":"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","names":["conf","language"],"x_google_ignoreList":[0]}