{
  "version": 3,
  "sources": ["src/main/webapp/app/entities/team.model.ts", "src/main/webapp/app/exercises/shared/team/team-owner-search/team-owner-search.component.ts", "src/main/webapp/app/exercises/shared/team/team-owner-search/team-owner-search.component.html", "src/main/webapp/app/exercises/shared/team/team-student-search/team-student-search.component.ts", "src/main/webapp/app/exercises/shared/team/team-student-search/team-student-search.component.html", "src/main/webapp/app/exercises/shared/team/team-update-dialog/team-update-dialog.component.ts", "src/main/webapp/app/exercises/shared/team/team-update-dialog/team-update-dialog.component.html", "src/main/webapp/app/exercises/shared/team/team-update-dialog/team-update-button.component.ts", "src/main/webapp/app/exercises/shared/team/team-update-dialog/team-delete-button.component.ts"],
  "sourcesContent": ["import { User } from 'app/core/user/user.model';\r\nimport { StudentParticipation } from 'app/entities/participation/student-participation.model';\r\nimport { BaseEntity } from 'app/shared/model/base-entity';\r\nimport dayjs from 'dayjs/esm';\r\n\r\nexport enum TeamImportStrategyType {\r\n    PURGE_EXISTING = 'PURGE_EXISTING',\r\n    CREATE_ONLY = 'CREATE_ONLY',\r\n}\r\n\r\nexport class OnlineTeamStudent {\r\n    public login: string;\r\n    public lastTypingDate: dayjs.Dayjs;\r\n    public lastActionDate: dayjs.Dayjs;\r\n}\r\n\r\nexport class TeamAssignmentPayload {\r\n    public exerciseId: number;\r\n    public teamId?: number;\r\n    public studentParticipations: StudentParticipation[];\r\n}\r\n\r\nexport class Team implements BaseEntity {\r\n    public id?: number;\r\n    public name?: string;\r\n    public shortName?: string;\r\n    public image?: string;\r\n    public students?: User[];\r\n    public owner?: User;\r\n\r\n    public createdBy?: string;\r\n    public createdDate?: dayjs.Dayjs;\r\n    public lastModifiedBy?: string;\r\n    public lastModifiedDate?: dayjs.Dayjs;\r\n\r\n    constructor() {\r\n        this.students = []; // default value\r\n    }\r\n}\r\n\r\n/**\r\n * This class is used for importing teams from a file\r\n * Either registration number or login must be set\r\n * Additionally student has teamName to identify which team he/she belongs to\r\n */\r\nexport class StudentWithTeam {\r\n    public firstName?: string;\r\n    public lastName?: string;\r\n    public registrationNumber?: string;\r\n    public teamName: string;\r\n    public username?: string;\r\n}\r\n", "import { Component, EventEmitter, Input, OnInit, Output, ViewChild, inject } from '@angular/core';\r\nimport { Observable, Subject, combineLatest, merge, of } from 'rxjs';\r\nimport { User } from 'app/core/user/user.model';\r\nimport { catchError, filter, map, switchMap, tap } from 'rxjs/operators';\r\nimport { Course, CourseGroup } from 'app/entities/course.model';\r\nimport { Exercise } from 'app/entities/exercise.model';\r\nimport { Team } from 'app/entities/team.model';\r\nimport { CourseManagementService } from 'app/course/manage/course-management.service';\r\nimport { cloneDeep } from 'lodash-es';\r\nimport { NgbTypeahead } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-team-owner-search',\r\n    templateUrl: './team-owner-search.component.html',\r\n    imports: [FormsModule, NgbTypeahead, ArtemisTranslatePipe],\r\n})\r\nexport class TeamOwnerSearchComponent implements OnInit {\r\n    private courseService = inject(CourseManagementService);\r\n\r\n    @ViewChild('instance', { static: true }) ngbTypeahead: NgbTypeahead;\r\n    focus = new Subject<string>();\r\n    click = new Subject<string>();\r\n\r\n    @Input() inputDisabled: boolean;\r\n\r\n    @Input() course: Course;\r\n    @Input() exercise: Exercise;\r\n    @Input() team: Team;\r\n\r\n    @Output() selectOwner = new EventEmitter<User>();\r\n    @Output() searching = new EventEmitter<boolean>();\r\n    @Output() searchQueryTooShort = new EventEmitter<boolean>();\r\n    @Output() searchFailed = new EventEmitter<boolean>();\r\n    @Output() searchNoResults = new EventEmitter<string | undefined>();\r\n\r\n    owner: User;\r\n    ownerOptions: User[] = [];\r\n    ownerOptionsLoaded = false;\r\n\r\n    inputDisplayValue: string;\r\n\r\n    /**\r\n     * Life cycle hook to indicate component creation is done\r\n     */\r\n    ngOnInit() {\r\n        if (this.team.owner) {\r\n            this.owner = cloneDeep(this.team.owner);\r\n            this.inputDisplayValue = this.searchResultFormatter(this.owner);\r\n        }\r\n    }\r\n\r\n    onAutocompleteSelect = (owner: User) => {\r\n        this.inputDisplayValue = this.searchResultFormatter(owner);\r\n        this.selectOwner.emit(owner);\r\n    };\r\n\r\n    searchInputFormatter = () => {\r\n        return this.inputDisplayValue;\r\n    };\r\n\r\n    searchResultFormatter = (owner: User): string => {\r\n        const { login, name } = owner;\r\n        return `${name} (${login})`;\r\n    };\r\n\r\n    /**\r\n     * Check if a given login/name is included in a given user\r\n     * @param {string} loginOrName - login/name to search for\r\n     * @param {User} user - User to search through\r\n     */\r\n    searchMatchesUser(loginOrName: string, user: User) {\r\n        return [user.login, user.name].some((field) => {\r\n            return (field || '').toLowerCase().includes(loginOrName.toLowerCase());\r\n        });\r\n    }\r\n\r\n    onSearch = (text$: Observable<string>) => {\r\n        const clicksWithClosedPopup$ = this.click.pipe(filter(() => !this.ngbTypeahead.isPopupOpen()));\r\n        const inputFocus$ = this.focus;\r\n\r\n        return merge(text$, inputFocus$, clicksWithClosedPopup$).pipe(\r\n            tap(() => {\r\n                this.searchNoResults.emit(undefined);\r\n            }),\r\n            switchMap((loginOrName) => {\r\n                this.searchFailed.emit(false);\r\n                this.searching.emit(true);\r\n                // If owner options have already been loaded once, do not load them again and reuse the already loaded ones\r\n                const ownerOptionsSource$ = this.ownerOptionsLoaded ? of(this.ownerOptions) : this.loadOwnerOptions();\r\n                return combineLatest([of(loginOrName), ownerOptionsSource$]);\r\n            }),\r\n            tap(() => this.searching.emit(false)),\r\n            switchMap(([loginOrName, ownerOptions]) => {\r\n                // Filter list of all owner options by the search term\r\n                const match = (user: User) => this.searchMatchesUser(loginOrName, user);\r\n                return combineLatest([of(loginOrName), of(!ownerOptions ? ownerOptions : ownerOptions.filter(match))]);\r\n            }),\r\n            tap(([loginOrName, ownerOptions]) => {\r\n                if (ownerOptions && ownerOptions.length === 0) {\r\n                    this.searchNoResults.emit(loginOrName);\r\n                }\r\n            }),\r\n            map(([, ownerOptions]) => ownerOptions || []),\r\n        );\r\n    };\r\n\r\n    /**\r\n     * Load options of team owner\r\n     */\r\n    loadOwnerOptions() {\r\n        return this.courseService.getAllUsersInCourseGroup(this.course.id!, CourseGroup.TUTORS).pipe(\r\n            map((usersResponse) => usersResponse.body!),\r\n            tap((ownerOptions) => {\r\n                this.ownerOptions = ownerOptions;\r\n                this.ownerOptionsLoaded = true;\r\n            }),\r\n            catchError(() => {\r\n                this.ownerOptionsLoaded = false;\r\n                this.searchFailed.emit(true);\r\n                return of(undefined);\r\n            }),\r\n        );\r\n    }\r\n}\r\n", "<input\r\n    #instance=\"ngbTypeahead\"\r\n    id=\"owner-search-input\"\r\n    type=\"text\"\r\n    class=\"form-control\"\r\n    [disabled]=\"inputDisabled\"\r\n    [placeholder]=\"'artemisApp.team.selectOwnerForTeam' | artemisTranslate\"\r\n    [(ngModel)]=\"owner\"\r\n    (selectItem)=\"onAutocompleteSelect($event.item)\"\r\n    (focus)=\"focus.next('')\"\r\n    (click)=\"click.next('')\"\r\n    [ngbTypeahead]=\"onSearch\"\r\n    [resultFormatter]=\"searchResultFormatter\"\r\n    [inputFormatter]=\"searchInputFormatter\"\r\n/>\r\n", "import { Component, ElementRef, EventEmitter, Input, Output, ViewChild, inject } from '@angular/core';\r\nimport { Observable, combineLatest, of } from 'rxjs';\r\nimport { User } from 'app/core/user/user.model';\r\nimport { catchError, debounceTime, distinctUntilChanged, map, switchMap, tap } from 'rxjs/operators';\r\nimport { get } from 'lodash-es';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { Exercise } from 'app/entities/exercise.model';\r\nimport { TeamService } from 'app/exercises/shared/team/team.service';\r\nimport { TeamSearchUser } from 'app/entities/team-search-user.model';\r\nimport { Team } from 'app/entities/team.model';\r\nimport { NgbTypeahead } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-team-student-search',\r\n    templateUrl: './team-student-search.component.html',\r\n    imports: [NgbTypeahead, ArtemisTranslatePipe],\r\n})\r\nexport class TeamStudentSearchComponent {\r\n    private teamService = inject(TeamService);\r\n\r\n    @ViewChild('ngbTypeahead', { static: false }) ngbTypeahead: ElementRef;\r\n\r\n    @Input() course: Course;\r\n    @Input() exercise: Exercise;\r\n    @Input() team: Team;\r\n    @Input() studentsFromPendingTeam: User[] = [];\r\n\r\n    @Output() selectStudent = new EventEmitter<User>();\r\n    @Output() searching = new EventEmitter<boolean>();\r\n    @Output() searchQueryTooShort = new EventEmitter<boolean>();\r\n    @Output() searchFailed = new EventEmitter<boolean>();\r\n    @Output() searchNoResults = new EventEmitter<string | undefined>();\r\n\r\n    inputDisplayValue: string;\r\n\r\n    onAutocompleteSelect = (student: User) => {\r\n        this.inputDisplayValue = '';\r\n        this.selectStudent.emit(student);\r\n    };\r\n\r\n    searchInputFormatter = () => {\r\n        return this.inputDisplayValue;\r\n    };\r\n\r\n    searchResultFormatter = (student: User) => {\r\n        const { login, name } = student;\r\n        return `${name} (${login})`;\r\n    };\r\n\r\n    onSearch = (text$: Observable<string>) => {\r\n        return text$.pipe(\r\n            debounceTime(200),\r\n            distinctUntilChanged(),\r\n            tap(() => {\r\n                this.searchQueryTooShort.emit(false);\r\n                this.searchFailed.emit(false);\r\n                this.searchNoResults.emit(undefined);\r\n            }),\r\n            tap(() => this.searching.emit(true)),\r\n            switchMap((loginOrName) => {\r\n                if (loginOrName.length < 3) {\r\n                    this.searchQueryTooShort.emit(true);\r\n                    return combineLatest([of(loginOrName), of(undefined)]);\r\n                }\r\n                return combineLatest([\r\n                    of(loginOrName),\r\n                    this.teamService\r\n                        .searchInCourseForExerciseTeam(this.course, this.exercise, loginOrName)\r\n                        .pipe(map((usersResponse) => usersResponse.body!))\r\n                        .pipe(\r\n                            catchError(() => {\r\n                                this.searchFailed.emit(true);\r\n                                return of(undefined);\r\n                            }),\r\n                        ),\r\n                ]);\r\n            }),\r\n            tap(() => this.searching.emit(false)),\r\n            tap(([loginOrName, users]) => {\r\n                // \"Query too short\" (no request performed) or \"Search request failed\" => {users} will be undefined\r\n                // \"Successful search request\" => {users} will be an array (length 0 if no students were found)\r\n                if (users && users.length === 0) {\r\n                    this.searchNoResults.emit(loginOrName);\r\n                }\r\n            }),\r\n            map(([, users]) => users || []),\r\n            tap((users) => {\r\n                setTimeout(() => {\r\n                    for (let i = 0; i < this.typeaheadButtons.length; i++) {\r\n                        if (!this.userCanBeAddedToPendingTeam(users[i])) {\r\n                            this.typeaheadButtons[i].setAttribute('disabled', '');\r\n                        }\r\n                    }\r\n                });\r\n            }),\r\n        );\r\n    };\r\n\r\n    private userCanBeAddedToPendingTeam(user: TeamSearchUser): boolean {\r\n        if (this.studentsFromPendingTeam.map((s) => s.id).includes(user.id)) {\r\n            // If a student is already part of the pending team, they cannot (!) be added again\r\n            return false;\r\n        } else if (!user.assignedTeamId) {\r\n            // If a student is not yet assigned to any team, they can be added\r\n            return true;\r\n        } else if (!this.team.id) {\r\n            // If a student is assigned to an existing team but this team is just being created, they cannot (!) be added\r\n            return false;\r\n        }\r\n        // If a student is assigned to a team, they can only be added if they are assigned to this team itself\r\n        // This can happen if they were removed from the pending team and are then added back again\r\n        return user.assignedTeamId === this.team.id;\r\n    }\r\n\r\n    private get typeaheadButtons() {\r\n        return get(this.ngbTypeahead, 'nativeElement.nextSibling.children', []);\r\n    }\r\n}\r\n", "<input\r\n    #ngbTypeahead\r\n    id=\"student-search-input\"\r\n    type=\"text\"\r\n    class=\"form-control\"\r\n    [placeholder]=\"'artemisApp.team.addStudentToTeam' | artemisTranslate\"\r\n    (selectItem)=\"onAutocompleteSelect($event.item)\"\r\n    [ngbTypeahead]=\"onSearch\"\r\n    [resultFormatter]=\"searchResultFormatter\"\r\n    [inputFormatter]=\"searchInputFormatter\"\r\n/>\r\n", "import { Component, Input, OnInit, ViewChild, ViewEncapsulation, inject } from '@angular/core';\r\nimport { AbstractControl, FormsModule, NgForm } from '@angular/forms';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { TeamService } from 'app/exercises/shared/team/team.service';\r\nimport { Team } from 'app/entities/team.model';\r\nimport { User } from 'app/core/user/user.model';\r\nimport { cloneDeep, isEmpty, omit } from 'lodash-es';\r\nimport { TeamAssignmentConfig } from 'app/entities/team-assignment-config.model';\r\nimport { debounceTime, switchMap } from 'rxjs/operators';\r\nimport { Exercise } from 'app/entities/exercise.model';\r\nimport { SHORT_NAME_PATTERN } from 'app/shared/constants/input.constants';\r\nimport { faBan, faExclamationTriangle, faSave, faSpinner, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { HelpIconComponent } from 'app/shared/components/help-icon.component';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { TeamOwnerSearchComponent } from '../team-owner-search/team-owner-search.component';\r\nimport { TeamStudentSearchComponent } from '../team-student-search/team-student-search.component';\r\nimport { KeyValuePipe } from '@angular/common';\r\nimport { RemoveKeysPipe } from 'app/shared/pipes/remove-keys.pipe';\r\n\r\nexport type StudentTeamConflict = { studentLogin: string; teamId: string };\r\n\r\n@Component({\r\n    selector: 'jhi-team-update-dialog',\r\n    templateUrl: './team-update-dialog.component.html',\r\n    styleUrls: ['./team-update-dialog.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    imports: [FormsModule, TranslateDirective, HelpIconComponent, FaIconComponent, TeamOwnerSearchComponent, TeamStudentSearchComponent, KeyValuePipe, RemoveKeysPipe],\r\n})\r\nexport class TeamUpdateDialogComponent implements OnInit {\r\n    private teamService = inject(TeamService);\r\n    private activeModal = inject(NgbActiveModal);\r\n\r\n    @ViewChild('editForm', { static: false }) editForm: NgForm;\r\n\r\n    @Input() team: Team;\r\n    @Input() exercise: Exercise;\r\n\r\n    pendingTeam: Team;\r\n    isSaving = false;\r\n\r\n    searchingStudents = false;\r\n    searchingStudentsQueryTooShort = false;\r\n    searchingStudentsFailed = false;\r\n    searchingStudentsNoResultsForQuery?: string;\r\n\r\n    searchingOwner = false;\r\n    searchingOwnerQueryTooShort = false;\r\n    searchingOwnerFailed = false;\r\n    searchingOwnerNoResultsForQuery?: string;\r\n\r\n    studentTeamConflicts: StudentTeamConflict[] = [];\r\n    ignoreTeamSizeRecommendation = false;\r\n\r\n    private shortNameValidator = new Subject<string>();\r\n    readonly SHORT_NAME_ALREADY_TAKEN_ERROR_CODE = 'alreadyTaken';\r\n    readonly SHORT_NAME_PATTERN = SHORT_NAME_PATTERN; // must start with a letter and cannot contain special characters\r\n\r\n    // Icons\r\n    faSave = faSave;\r\n    faBan = faBan;\r\n    faSpinner = faSpinner;\r\n    faExclamationTriangle = faExclamationTriangle;\r\n    faTrashAlt = faTrashAlt;\r\n\r\n    /**\r\n     * Life cycle hook to indicate component creation is done\r\n     */\r\n    ngOnInit(): void {\r\n        this.initPendingTeam();\r\n        this.shortNameValidation(this.shortNameValidator);\r\n    }\r\n\r\n    private initPendingTeam() {\r\n        this.pendingTeam = cloneDeep(this.team);\r\n    }\r\n\r\n    /**\r\n     * Hook to indicate a short team name change\r\n     * @param {string} shortName - new short name of the team\r\n     */\r\n    onTeamShortNameChanged(shortName: string) {\r\n        // automatically convert shortName to lowercase characters\r\n        this.pendingTeam.shortName = shortName.toLowerCase();\r\n\r\n        // check that no other team already uses this short name\r\n        this.shortNameValidator.next(this.pendingTeam.shortName);\r\n    }\r\n\r\n    /**\r\n     * Hook to indicate a team name change\r\n     * @param {string} name - new team name\r\n     */\r\n    onTeamNameChanged(name: string) {\r\n        if (!this.shortNameReadOnly) {\r\n            // automatically set the shortName based on the name (stripping all non-alphanumeric characters)\r\n            const shortName = name.replace(/[^0-9a-z]/gi, '');\r\n            this.onTeamShortNameChanged(shortName);\r\n            this.shortNameControl.markAsTouched();\r\n        }\r\n    }\r\n\r\n    get shortNameReadOnly(): boolean {\r\n        return !!this.pendingTeam.id;\r\n    }\r\n\r\n    get shortNameControl(): AbstractControl {\r\n        return this.editForm.control.get('shortName')!;\r\n    }\r\n\r\n    get config(): TeamAssignmentConfig {\r\n        return this.exercise.teamAssignmentConfig!;\r\n    }\r\n\r\n    get showIgnoreTeamSizeRecommendationOption(): boolean {\r\n        return !this.recommendedTeamSize;\r\n    }\r\n\r\n    get teamSizeViolationUnconfirmed(): boolean {\r\n        return this.showIgnoreTeamSizeRecommendationOption && !this.ignoreTeamSizeRecommendation;\r\n    }\r\n\r\n    private get recommendedTeamSize(): boolean {\r\n        const pendingTeamSize = this.pendingTeam.students?.length || 0;\r\n        return pendingTeamSize >= this.config.minTeamSize! && pendingTeamSize <= this.config.maxTeamSize!;\r\n    }\r\n\r\n    /**\r\n     * Check if a given user has a conflicting team\r\n     * @param {User} student - User to search for\r\n     */\r\n    hasConflictingTeam(student: User): boolean {\r\n        return this.findStudentTeamConflict(student) !== undefined;\r\n    }\r\n\r\n    /**\r\n     * Get conflicting team of a given user\r\n     * @param {User} student - User to search for\r\n     */\r\n    getConflictingTeam(student: User) {\r\n        const conflict = this.findStudentTeamConflict(student);\r\n        return conflict ? conflict['teamId'] : undefined;\r\n    }\r\n\r\n    private findStudentTeamConflict(student: User) {\r\n        return this.studentTeamConflicts.find((conflict) => conflict.studentLogin === student.login);\r\n    }\r\n\r\n    private resetStudentTeamConflict(student: User) {\r\n        return (this.studentTeamConflicts = this.studentTeamConflicts.filter((conflict) => conflict.studentLogin !== student.login));\r\n    }\r\n\r\n    private isStudentAlreadyInPendingTeam(student: User): boolean {\r\n        return this.pendingTeam.students?.find((stud) => stud.id === student.id) !== undefined;\r\n    }\r\n\r\n    /**\r\n     * Hook to indicate a student was added to a team\r\n     * @param {User} student - Added user\r\n     */\r\n    onAddStudent(student: User) {\r\n        if (!this.isStudentAlreadyInPendingTeam(student)) {\r\n            if (!this.pendingTeam.students) {\r\n                this.pendingTeam.students = [];\r\n            }\r\n            this.pendingTeam.students!.push(student);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Hook to indicate a student was removed of a team\r\n     * @param {User} student - removed user\r\n     */\r\n    onRemoveStudent(student: User) {\r\n        this.pendingTeam.students = this.pendingTeam.students?.filter((user) => user.id !== student.id);\r\n        this.resetStudentTeamConflict(student); // conflict might no longer exist when the student is added again\r\n    }\r\n\r\n    /**\r\n     * Hook to indicate the team owner was selected\r\n     * @param {User} owner - User to select as owner\r\n     */\r\n    onSelectOwner(owner: User) {\r\n        this.pendingTeam.owner = owner;\r\n    }\r\n\r\n    /**\r\n     * Cancel the update-dialog\r\n     */\r\n    clear() {\r\n        this.activeModal.dismiss('cancel');\r\n    }\r\n\r\n    /**\r\n     * Save changes made to the team\r\n     */\r\n    save() {\r\n        if (this.teamSizeViolationUnconfirmed) {\r\n            return;\r\n        }\r\n\r\n        this.team = cloneDeep(this.pendingTeam);\r\n\r\n        if (this.team.id !== undefined) {\r\n            this.subscribeToSaveResponse(this.teamService.update(this.exercise, this.team));\r\n        } else {\r\n            this.subscribeToSaveResponse(this.teamService.create(this.exercise, this.team));\r\n        }\r\n    }\r\n\r\n    private subscribeToSaveResponse(team: Observable<HttpResponse<Team>>) {\r\n        this.isSaving = true;\r\n        team.subscribe({\r\n            next: (res) => this.onSaveSuccess(res),\r\n            error: (error) => this.onSaveError(error),\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hook to indicate the saving was successful\r\n     * @param {HttpResponse<Team>}team - The successful updated team\r\n     */\r\n    onSaveSuccess(team: HttpResponse<Team>) {\r\n        this.activeModal.close(team.body);\r\n        this.isSaving = false;\r\n    }\r\n\r\n    /**\r\n     * Hook to indicate a save error occurred\r\n     * @param {HttpErrorResponse} httpErrorResponse - The occurred error\r\n     */\r\n    onSaveError(httpErrorResponse: HttpErrorResponse) {\r\n        this.isSaving = false;\r\n\r\n        const { errorKey, params } = httpErrorResponse.error;\r\n\r\n        switch (errorKey) {\r\n            case 'studentsAlreadyAssignedToTeams':\r\n                const { conflicts } = params;\r\n                this.studentTeamConflicts = conflicts;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    private shortNameValidation(shortName$: Subject<string>) {\r\n        shortName$\r\n            .pipe(\r\n                debounceTime(500),\r\n                switchMap((shortName) => this.teamService.existsByShortName(this.exercise.course!, shortName)),\r\n            )\r\n            .subscribe((alreadyTakenResponse) => {\r\n                const alreadyTaken = alreadyTakenResponse.body;\r\n                const errors = alreadyTaken\r\n                    ? { ...this.shortNameControl.errors, [this.SHORT_NAME_ALREADY_TAKEN_ERROR_CODE]: alreadyTaken }\r\n                    : omit(this.shortNameControl.errors, this.SHORT_NAME_ALREADY_TAKEN_ERROR_CODE);\r\n                this.shortNameControl.setErrors(isEmpty(errors) ? null : errors);\r\n            });\r\n    }\r\n}\r\n", "<form id=\"teamUpdateDialogForm\" name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" #editForm=\"ngForm\">\r\n    <div class=\"modal-header\">\r\n        <h4 class=\"modal-title\">\r\n            <span [jhiTranslate]=\"pendingTeam.id ? 'artemisApp.team.updateTeam.label' : 'artemisApp.team.createTeam.label'\">\r\n                {{ pendingTeam.id ? 'Update Team' : 'Create Team' }}\r\n            </span>\r\n            <span>({{ exercise.title }})</span>\r\n        </h4>\r\n        <button type=\"button\" class=\"btn-close\" data-dismiss=\"modal\" aria-hidden=\"true\" (click)=\"clear()\"></button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <div class=\"form-group\">\r\n            <label class=\"label-narrow\" jhiTranslate=\"artemisApp.team.name.label\" for=\"teamName\"></label>\r\n            <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                name=\"name\"\r\n                id=\"teamName\"\r\n                required\r\n                minlength=\"3\"\r\n                [(ngModel)]=\"pendingTeam.name\"\r\n                (ngModelChange)=\"onTeamNameChanged($event)\"\r\n                #name=\"ngModel\"\r\n            />\r\n            @for (e of name.errors! | keyvalue | removekeys: ['required']; track e) {\r\n                @if (name.invalid && (name.dirty || name.touched)) {\r\n                    <div class=\"form-control-error text-danger\">\r\n                        <span [jhiTranslate]=\"'artemisApp.team.name' + '.' + e.key\"></span>\r\n                    </div>\r\n                }\r\n            }\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <div>\r\n                <label class=\"label-narrow\" jhiTranslate=\"artemisApp.team.shortName.label\" for=\"teamShortName\"></label>\r\n                <jhi-help-icon text=\"artemisApp.team.shortName.tooltip\" />\r\n            </div>\r\n            <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                name=\"shortName\"\r\n                id=\"teamShortName\"\r\n                required\r\n                minlength=\"3\"\r\n                [pattern]=\"SHORT_NAME_PATTERN\"\r\n                [(ngModel)]=\"pendingTeam.shortName\"\r\n                (ngModelChange)=\"onTeamShortNameChanged($event)\"\r\n                [disabled]=\"shortNameReadOnly\"\r\n                [readOnly]=\"shortNameReadOnly\"\r\n                #shortName=\"ngModel\"\r\n            />\r\n            @for (e of shortName.errors! | keyvalue | removekeys: ['required']; track e) {\r\n                @if (shortName.invalid && (shortName.dirty || shortName.touched)) {\r\n                    <div class=\"form-control-error text-danger\">\r\n                        <span [jhiTranslate]=\"'artemisApp.team.shortName' + '.' + e.key\"></span>\r\n                    </div>\r\n                }\r\n            }\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <div class=\"d-flex align-items-end\">\r\n                <div>\r\n                    <label class=\"label-narrow\" jhiTranslate=\"artemisApp.team.owner.label\"></label>\r\n                    <jhi-help-icon text=\"artemisApp.team.owner.tooltip\" class=\"me-1\" />\r\n                </div>\r\n                @if (searchingOwner) {\r\n                    <fa-icon class=\"search-searching\" [icon]=\"faSpinner\" animation=\"spin\" />\r\n                }\r\n                @if (searchingOwnerQueryTooShort) {\r\n                    <span class=\"label-inline-message text-danger\" jhiTranslate=\"artemisApp.team.ownerSearch.queryTooShort\"></span>\r\n                }\r\n                @if (searchingOwnerNoResultsForQuery) {\r\n                    <span class=\"label-inline-message text-danger\">\r\n                        <span jhiTranslate=\"artemisApp.team.ownerSearch.noResults\"></span>\r\n                        <strong>{{ searchingOwnerNoResultsForQuery }}</strong>\r\n                    </span>\r\n                }\r\n                @if (searchingOwnerFailed) {\r\n                    <span class=\"label-inline-message text-danger\" jhiTranslate=\"artemisApp.team.ownerSearch.failed\"></span>\r\n                }\r\n                @if (team.id && team.owner?.id !== pendingTeam.owner?.id) {\r\n                    <span jhiTranslate=\"artemisApp.team.ownerChangeWarning\" [translateValues]=\"{ shortName: team.shortName }\" class=\"label-inline-message text-danger\">\r\n                        This will change the tutor for the team {{ team.shortName }} in the whole course!\r\n                    </span>\r\n                }\r\n            </div>\r\n            <jhi-team-owner-search\r\n                id=\"teamOwner\"\r\n                [inputDisabled]=\"!exercise.isAtLeastInstructor\"\r\n                [course]=\"exercise.course!\"\r\n                [exercise]=\"exercise\"\r\n                [team]=\"team\"\r\n                (selectOwner)=\"onSelectOwner($event)\"\r\n                (searching)=\"searchingOwner = $event\"\r\n                (searchQueryTooShort)=\"searchingOwnerQueryTooShort = $event\"\r\n                (searchNoResults)=\"searchingOwnerNoResultsForQuery = $event\"\r\n                (searchFailed)=\"searchingOwnerFailed = $event\"\r\n            />\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <div class=\"d-flex align-items-end\">\r\n                <label class=\"label-narrow me-1\" jhiTranslate=\"artemisApp.team.students\"></label>\r\n                @if (searchingStudents) {\r\n                    <fa-icon class=\"search-searching\" [icon]=\"faSpinner\" animation=\"spin\" />\r\n                }\r\n                @if (searchingStudentsQueryTooShort) {\r\n                    <span class=\"label-inline-message text-danger\" jhiTranslate=\"artemisApp.team.studentSearch.queryTooShort\"></span>\r\n                }\r\n                @if (searchingStudentsNoResultsForQuery) {\r\n                    <span class=\"label-inline-message text-danger\">\r\n                        <span jhiTranslate=\"artemisApp.team.studentSearch.noResults\"></span>\r\n                        <strong>{{ searchingStudentsNoResultsForQuery }}</strong>\r\n                    </span>\r\n                }\r\n                @if (searchingStudentsFailed) {\r\n                    <span class=\"label-inline-message text-danger\" jhiTranslate=\"artemisApp.team.studentSearch.failed\"></span>\r\n                }\r\n            </div>\r\n            <jhi-team-student-search\r\n                id=\"teamStudents\"\r\n                [course]=\"exercise.course!\"\r\n                [exercise]=\"exercise\"\r\n                [team]=\"team\"\r\n                [studentsFromPendingTeam]=\"pendingTeam.students || []\"\r\n                (selectStudent)=\"onAddStudent($event)\"\r\n                (searching)=\"searchingStudents = $event\"\r\n                (searchQueryTooShort)=\"searchingStudentsQueryTooShort = $event\"\r\n                (searchNoResults)=\"searchingStudentsNoResultsForQuery = $event\"\r\n                (searchFailed)=\"searchingStudentsFailed = $event\"\r\n            />\r\n            <ul class=\"list-group list-group--students my-3\">\r\n                @for (student of pendingTeam.students; track student; let i = $index) {\r\n                    <li class=\"list-group-item-container d-flex align-items-center\">\r\n                        <div class=\"list-group-item-index\">\r\n                            {{ i + 1 }}\r\n                        </div>\r\n                        <div class=\"list-group-item d-flex align-items-center\" [class.has-error]=\"hasConflictingTeam(student)\">\r\n                            <div class=\"student-name\">{{ student.name }} ({{ student.login }})</div>\r\n                            <button class=\"jest-student-remove-link student-remove-link ms-4\" (click)=\"onRemoveStudent(student)\">\r\n                                <fa-icon [icon]=\"faTrashAlt\" />\r\n                            </button>\r\n                        </div>\r\n                        @if (hasConflictingTeam(student)) {\r\n                            <div class=\"list-group-item-error hidden-md-down\">\r\n                                <fa-icon class=\"me-1\" [icon]=\"faExclamationTriangle\" />\r\n                                Already assigned to team with id {{ getConflictingTeam(student) }}.\r\n                            </div>\r\n                        }\r\n                    </li>\r\n                }\r\n                @if (pendingTeam.students && pendingTeam.students.length === 0) {\r\n                    <li class=\"list-group-item-container d-flex align-items-center\">\r\n                        <div class=\"list-group-item-index text-body-secondary\">1</div>\r\n                        <div class=\"list-group-item d-flex align-items-center\">\r\n                            <div class=\"text-body-secondary\" jhiTranslate=\"artemisApp.team.noStudentsAddedYet\"></div>\r\n                        </div>\r\n                    </li>\r\n                }\r\n            </ul>\r\n            <div class=\"alert mt-3\" [class.alert-info]=\"!showIgnoreTeamSizeRecommendationOption\" [class.alert-warning]=\"showIgnoreTeamSizeRecommendationOption\" role=\"alert\">\r\n                <div class=\"d-flex justify-content-between\">\r\n                    <div>\r\n                        <span class=\"font-weight-bold\" jhiTranslate=\"artemisApp.team.teamSizeNote\"></span>\r\n                        {{ config.minTeamSize }} - {{ config.maxTeamSize }}\r\n                        <span jhiTranslate=\"artemisApp.team.teamSizeUnit\"></span>\r\n                    </div>\r\n                    @if (showIgnoreTeamSizeRecommendationOption) {\r\n                        <div class=\"form-check\">\r\n                            <input\r\n                                id=\"ignoreTeamSizeRecommendation\"\r\n                                class=\"form-check-input\"\r\n                                type=\"checkbox\"\r\n                                value=\"\"\r\n                                [(ngModel)]=\"ignoreTeamSizeRecommendation\"\r\n                                [ngModelOptions]=\"{ standalone: true }\"\r\n                            />\r\n                            <label class=\"form-check-label\" for=\"ignoreTeamSizeRecommendation\">\r\n                                <span jhiTranslate=\"artemisApp.team.ignoreTeamSizeRecommendation\"></span>\r\n                                <fa-icon class=\"ms-1\" [icon]=\"faExclamationTriangle\" />\r\n                            </label>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary cancel\" data-dismiss=\"modal\" (click)=\"clear()\">\r\n            <fa-icon [icon]=\"faBan\" />&nbsp;<span jhiTranslate=\"entity.action.cancel\"></span>\r\n        </button>\r\n        <button type=\"submit\" [disabled]=\"editForm.invalid || isSaving || teamSizeViolationUnconfirmed\" class=\"btn btn-primary\">\r\n            <fa-icon [icon]=\"faSave\" />&nbsp;<span jhiTranslate=\"entity.action.save\"></span>\r\n        </button>\r\n    </div>\r\n</form>\r\n", "import { Component, EventEmitter, Input, Output, inject } from '@angular/core';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TeamUpdateDialogComponent } from 'app/exercises/shared/team/team-update-dialog/team-update-dialog.component';\r\nimport { Team } from 'app/entities/team.model';\r\nimport { Exercise } from 'app/entities/exercise.model';\r\nimport { ButtonSize, ButtonType } from 'app/shared/components/button.component';\r\nimport { faPencilAlt, faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { ButtonComponent } from 'app/shared/components/button.component';\r\n\r\n@Component({\r\n    selector: 'jhi-team-update-button',\r\n    template: `\r\n        <jhi-button\r\n            [btnType]=\"ButtonType.PRIMARY\"\r\n            [btnSize]=\"buttonSize\"\r\n            [icon]=\"team ? faPencilAlt : faPlus\"\r\n            [title]=\"team ? 'artemisApp.team.updateTeam.label' : 'artemisApp.team.createTeam.label'\"\r\n            (onClick)=\"openTeamCreateDialog($event)\"\r\n        />\r\n    `,\r\n    imports: [ButtonComponent],\r\n})\r\nexport class TeamUpdateButtonComponent {\r\n    private modalService = inject(NgbModal);\r\n\r\n    ButtonType = ButtonType;\r\n    ButtonSize = ButtonSize;\r\n\r\n    @Input() team: Team | undefined;\r\n    @Input() exercise: Exercise;\r\n    @Input() buttonSize: ButtonSize = ButtonSize.SMALL;\r\n\r\n    @Output() save: EventEmitter<Team> = new EventEmitter();\r\n\r\n    // Icons\r\n    faPencilAlt = faPencilAlt;\r\n    faPlus = faPlus;\r\n\r\n    /**\r\n     * Open the dialog for team creation\r\n     * @param {MouseEvent} event - Occurred Mouse Event\r\n     */\r\n    openTeamCreateDialog(event: MouseEvent) {\r\n        event.stopPropagation();\r\n        const modalRef: NgbModalRef = this.modalService.open(TeamUpdateDialogComponent, { keyboard: true, size: 'lg', backdrop: 'static' });\r\n        modalRef.componentInstance.team = this.team || new Team();\r\n        modalRef.componentInstance.exercise = this.exercise;\r\n\r\n        modalRef.result.then(\r\n            (team: Team) => this.save.emit(team),\r\n            () => {},\r\n        );\r\n    }\r\n}\r\n", "import { Component, EventEmitter, Input, OnDestroy, Output, inject } from '@angular/core';\r\nimport { Team } from 'app/entities/team.model';\r\nimport { Subject } from 'rxjs';\r\nimport { ButtonSize, ButtonType } from 'app/shared/components/button.component';\r\nimport { TeamService } from 'app/exercises/shared/team/team.service';\r\nimport { Exercise } from 'app/entities/exercise.model';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { DeleteButtonDirective } from 'app/shared/delete-dialog/delete-button.directive';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\n\r\n@Component({\r\n    selector: 'jhi-team-delete-button',\r\n    template: `\r\n        @if (exercise.isAtLeastInstructor) {\r\n            <button\r\n                jhiDeleteButton\r\n                [buttonSize]=\"buttonSize\"\r\n                [entityTitle]=\"team.shortName || ''\"\r\n                deleteQuestion=\"artemisApp.team.delete.question\"\r\n                deleteConfirmationText=\"artemisApp.team.delete.typeNameToConfirm\"\r\n                (delete)=\"removeTeam()\"\r\n                [dialogError]=\"dialogError$\"\r\n            >\r\n                <fa-icon [icon]=\"faTrashAlt\" class=\"me-1\" />\r\n            </button>\r\n        }\r\n    `,\r\n    imports: [DeleteButtonDirective, FaIconComponent],\r\n})\r\nexport class TeamDeleteButtonComponent implements OnDestroy {\r\n    private alertService = inject(AlertService);\r\n    private teamService = inject(TeamService);\r\n\r\n    ButtonType = ButtonType;\r\n    ButtonSize = ButtonSize;\r\n\r\n    @Input() team: Team;\r\n    @Input() exercise: Exercise;\r\n    @Input() buttonSize: ButtonSize = ButtonSize.SMALL;\r\n\r\n    @Output() delete = new EventEmitter<Team>();\r\n\r\n    private dialogErrorSource = new Subject<string>();\r\n    dialogError$ = this.dialogErrorSource.asObservable();\r\n\r\n    // Icons\r\n    faTrashAlt = faTrashAlt;\r\n\r\n    /**\r\n     * Life cycle hook to indicate component creation is done\r\n     */\r\n    ngOnDestroy(): void {\r\n        this.dialogErrorSource.unsubscribe();\r\n    }\r\n\r\n    /**\r\n     * Deletes the provided team on the server and emits the delete event\r\n     *\r\n     */\r\n    removeTeam = () => {\r\n        this.teamService.delete(this.exercise, this.team.id!).subscribe({\r\n            next: () => {\r\n                this.delete.emit(this.team);\r\n                this.dialogErrorSource.next('');\r\n            },\r\n            error: () => this.alertService.error('artemisApp.team.removeTeam.error'),\r\n        });\r\n    };\r\n}\r\n"],
  "mappings": "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",
  "names": ["TeamImportStrategyType", "Team", "id", "name", "shortName", "image", "students", "owner", "createdBy", "createdDate", "lastModifiedBy", "lastModifiedDate", "constructor", "TeamOwnerSearchComponent", "courseService", "inject", "CourseManagementService", "ngbTypeahead", "focus", "Subject", "click", "inputDisabled", "course", "exercise", "team", "selectOwner", "EventEmitter", "searching", "searchQueryTooShort", "searchFailed", "searchNoResults", "owner", "ownerOptions", "ownerOptionsLoaded", "inputDisplayValue", "ngOnInit", "cloneDeep", "searchResultFormatter", "onAutocompleteSelect", "emit", "searchInputFormatter", "login", "name", "searchMatchesUser", "loginOrName", "user", "some", "field", "toLowerCase", "includes", "onSearch", "text$", "clicksWithClosedPopup$", "pipe", "filter", "isPopupOpen", "inputFocus$", "merge", "tap", "undefined", "switchMap", "ownerOptionsSource$", "of", "loadOwnerOptions", "combineLatest", "match", "length", "map", "getAllUsersInCourseGroup", "id", "usersResponse", "body", "catchError", "selectors", "viewQuery", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275twoWayListener", "$event", "i0", "\u0275\u0275restoreView", "_r1", "\u0275\u0275twoWayBindingSet", "\u0275\u0275resetView", "\u0275\u0275listener", "item", "next", "\u0275\u0275elementEnd", "\u0275\u0275text", "\u0275\u0275property", "\u0275\u0275pipeBind1", "\u0275\u0275twoWayProperty", "FormsModule", "DefaultValueAccessor", "NgControlStatus", "NgModel", "NgbTypeahead", "ArtemisTranslatePipe", "encapsulation", "TeamStudentSearchComponent", "teamService", "inject", "TeamService", "ngbTypeahead", "course", "exercise", "team", "studentsFromPendingTeam", "selectStudent", "EventEmitter", "searching", "searchQueryTooShort", "searchFailed", "searchNoResults", "inputDisplayValue", "onAutocompleteSelect", "student", "emit", "searchInputFormatter", "searchResultFormatter", "login", "name", "onSearch", "text$", "pipe", "debounceTime", "distinctUntilChanged", "tap", "undefined", "switchMap", "loginOrName", "length", "combineLatest", "of", "searchInCourseForExerciseTeam", "map", "usersResponse", "body", "catchError", "users", "setTimeout", "i", "typeaheadButtons", "userCanBeAddedToPendingTeam", "setAttribute", "user", "s", "id", "includes", "assignedTeamId", "get", "selectors", "viewQuery", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275listener", "$event", "i0", "\u0275\u0275restoreView", "_r1", "\u0275\u0275resetView", "item", "\u0275\u0275elementEnd", "\u0275\u0275text", "\u0275\u0275property", "\u0275\u0275pipeBind1", "NgbTypeahead", "ArtemisTranslatePipe", "encapsulation", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "e_r2", "key", "\u0275\u0275template", "TeamUpdateDialogComponent_For_27_Conditional_1_Template", "\u0275\u0275conditional", "name_r3", "invalid", "dirty", "touched", "e_r4", "TeamUpdateDialogComponent_For_44_Conditional_1_Template", "shortName_r5", "ctx_r5", "faSpinner", "\u0275\u0275textInterpolate", "searchingOwnerNoResultsForQuery", "\u0275\u0275pureFunction1", "_c3", "team", "shortName", "\u0275\u0275textInterpolate1", "searchingStudentsNoResultsForQuery", "faExclamationTriangle", "getConflictingTeam", "student_r8", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r7", "$implicit", "\u0275\u0275nextContext", "\u0275\u0275resetView", "onRemoveStudent", "TeamUpdateDialogComponent_For_84_Conditional_17_Template", "\u0275$index_178_r9", "\u0275\u0275classProp", "hasConflictingTeam", "\u0275\u0275textInterpolate2", "name", "login", "faTrashAlt", "\u0275\u0275twoWayListener", "$event", "_r10", "i0", "\u0275\u0275twoWayBindingSet", "ignoreTeamSizeRecommendation", "\u0275\u0275twoWayProperty", "\u0275\u0275pureFunction0", "_c4", "TeamUpdateDialogComponent", "teamService", "inject", "TeamService", "activeModal", "NgbActiveModal", "editForm", "exercise", "pendingTeam", "isSaving", "searchingStudents", "searchingStudentsQueryTooShort", "searchingStudentsFailed", "searchingOwner", "searchingOwnerQueryTooShort", "searchingOwnerFailed", "studentTeamConflicts", "shortNameValidator", "Subject", "SHORT_NAME_ALREADY_TAKEN_ERROR_CODE", "SHORT_NAME_PATTERN", "faSave", "faBan", "ngOnInit", "initPendingTeam", "shortNameValidation", "cloneDeep", "onTeamShortNameChanged", "toLowerCase", "next", "onTeamNameChanged", "shortNameReadOnly", "replace", "shortNameControl", "markAsTouched", "id", "control", "get", "config", "teamAssignmentConfig", "showIgnoreTeamSizeRecommendationOption", "recommendedTeamSize", "teamSizeViolationUnconfirmed", "pendingTeamSize", "students", "length", "minTeamSize", "maxTeamSize", "student", "findStudentTeamConflict", "undefined", "conflict", "find", "studentLogin", "resetStudentTeamConflict", "filter", "isStudentAlreadyInPendingTeam", "stud", "onAddStudent", "push", "user", "onSelectOwner", "owner", "clear", "dismiss", "save", "subscribeToSaveResponse", "update", "create", "subscribe", "res", "onSaveSuccess", "error", "onSaveError", "close", "body", "httpErrorResponse", "errorKey", "params", "conflicts", "shortName$", "pipe", "debounceTime", "switchMap", "existsByShortName", "course", "alreadyTakenResponse", "alreadyTaken", "errors", "__spreadProps", "__spreadValues", "omit", "setErrors", "isEmpty", "selectors", "viewQuery", "rf", "ctx", "_r1", "\u0275\u0275repeaterCreate", "TeamUpdateDialogComponent_For_27_Template", "\u0275\u0275repeaterTrackByIdentity", "TeamUpdateDialogComponent_For_44_Template", "TeamUpdateDialogComponent_Conditional_59_Template", "TeamUpdateDialogComponent_Conditional_60_Template", "TeamUpdateDialogComponent_Conditional_61_Template", "TeamUpdateDialogComponent_Conditional_62_Template", "TeamUpdateDialogComponent_Conditional_63_Template", "TeamUpdateDialogComponent_Conditional_74_Template", "TeamUpdateDialogComponent_Conditional_75_Template", "TeamUpdateDialogComponent_Conditional_76_Template", "TeamUpdateDialogComponent_Conditional_77_Template", "TeamUpdateDialogComponent_For_84_Template", "TeamUpdateDialogComponent_Conditional_85_Template", "TeamUpdateDialogComponent_Conditional_98_Template", "title", "\u0275\u0275repeater", "\u0275\u0275pipeBind2", "\u0275\u0275pipeBind1", "_c1", "isAtLeastInstructor", "_c2", "editForm_r11", "FormsModule", "\u0275NgNoValidate", "DefaultValueAccessor", "CheckboxControlValueAccessor", "NgControlStatus", "NgControlStatusGroup", "RequiredValidator", "MinLengthValidator", "PatternValidator", "NgModel", "NgForm", "TranslateDirective", "HelpIconComponent", "FaIconComponent", "TeamOwnerSearchComponent", "TeamStudentSearchComponent", "KeyValuePipe", "RemoveKeysPipe", "styles", "encapsulation", "TeamUpdateButtonComponent", "modalService", "inject", "NgbModal", "ButtonType", "ButtonSize", "team", "exercise", "buttonSize", "SMALL", "save", "EventEmitter", "faPencilAlt", "faPlus", "openTeamCreateDialog", "event", "stopPropagation", "modalRef", "open", "TeamUpdateDialogComponent", "keyboard", "size", "backdrop", "componentInstance", "Team", "result", "then", "emit", "selectors", "inputs", "outputs", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275listener", "$event", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "PRIMARY", "ButtonComponent", "encapsulation", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "removeTeam", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "buttonSize", "team", "shortName", "dialogError$", "faTrashAlt", "TeamDeleteButtonComponent", "alertService", "inject", "AlertService", "teamService", "TeamService", "ButtonType", "ButtonSize", "exercise", "SMALL", "delete", "EventEmitter", "dialogErrorSource", "Subject", "asObservable", "ngOnDestroy", "unsubscribe", "id", "subscribe", "next", "emit", "error", "selectors", "inputs", "outputs", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275template", "TeamDeleteButtonComponent_Conditional_1_Template", "\u0275\u0275conditional", "isAtLeastInstructor", "DeleteButtonDirective", "FaIconComponent", "encapsulation"]
}
