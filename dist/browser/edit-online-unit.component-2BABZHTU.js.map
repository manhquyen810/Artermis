{
  "version": 3,
  "sources": ["src/main/webapp/app/lecture/lecture-unit/lecture-unit-management/edit-online-unit/edit-online-unit.component.ts", "src/main/webapp/app/lecture/lecture-unit/lecture-unit-management/edit-online-unit/edit-online-unit.component.html"],
  "sourcesContent": ["import { Component, OnInit, inject } from '@angular/core';\r\nimport { OnlineUnit } from 'app/entities/lecture-unit/onlineUnit.model';\r\nimport { OnlineUnitFormData } from 'app/lecture/lecture-unit/lecture-unit-management/online-unit-form/online-unit-form.component';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { OnlineUnitService } from 'app/lecture/lecture-unit/lecture-unit-management/onlineUnit.service';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { onError } from 'app/shared/util/global.utils';\r\nimport { finalize, switchMap, take } from 'rxjs/operators';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { combineLatest } from 'rxjs';\r\nimport { LectureUnitLayoutComponent } from '../lecture-unit-layout/lecture-unit-layout.component';\r\nimport { OnlineUnitFormComponent } from '../online-unit-form/online-unit-form.component';\r\n\r\n@Component({\r\n    selector: 'jhi-edit-online-unit',\r\n    templateUrl: './edit-online-unit.component.html',\r\n    imports: [LectureUnitLayoutComponent, OnlineUnitFormComponent],\r\n})\r\nexport class EditOnlineUnitComponent implements OnInit {\r\n    private activatedRoute = inject(ActivatedRoute);\r\n    private router = inject(Router);\r\n    private onlineUnitService = inject(OnlineUnitService);\r\n    private alertService = inject(AlertService);\r\n\r\n    isLoading = false;\r\n    onlineUnit: OnlineUnit;\r\n    formData: OnlineUnitFormData;\r\n    lectureId: number;\r\n\r\n    ngOnInit(): void {\r\n        this.isLoading = true;\r\n        const lectureRoute = this.activatedRoute.parent!.parent!;\r\n        combineLatest([this.activatedRoute.paramMap, lectureRoute.paramMap])\r\n            .pipe(\r\n                take(1),\r\n                switchMap(([params, parentParams]) => {\r\n                    const onlineUnitId = Number(params.get('onlineUnitId'));\r\n                    this.lectureId = Number(parentParams.get('lectureId'));\r\n                    return this.onlineUnitService.findById(onlineUnitId, this.lectureId);\r\n                }),\r\n                finalize(() => {\r\n                    this.isLoading = false;\r\n                }),\r\n            )\r\n            .subscribe({\r\n                next: (onlineUnitResponse: HttpResponse<OnlineUnit>) => {\r\n                    this.onlineUnit = onlineUnitResponse.body!;\r\n\r\n                    this.formData = {\r\n                        name: this.onlineUnit.name,\r\n                        description: this.onlineUnit.description,\r\n                        releaseDate: this.onlineUnit.releaseDate,\r\n                        source: this.onlineUnit.source,\r\n                        competencyLinks: this.onlineUnit.competencyLinks,\r\n                    };\r\n                },\r\n                error: (res: HttpErrorResponse) => onError(this.alertService, res),\r\n            });\r\n    }\r\n\r\n    updateOnlineUnit(formData: OnlineUnitFormData) {\r\n        const { name, description, releaseDate, source, competencyLinks } = formData;\r\n        this.onlineUnit.name = name;\r\n        this.onlineUnit.description = description;\r\n        this.onlineUnit.releaseDate = releaseDate;\r\n        this.onlineUnit.source = source;\r\n        this.onlineUnit.competencyLinks = competencyLinks;\r\n        this.isLoading = true;\r\n        this.onlineUnitService\r\n            .update(this.onlineUnit, this.lectureId)\r\n            .pipe(\r\n                finalize(() => {\r\n                    this.isLoading = false;\r\n                    // navigate back to unit-management from :courseId/lectures/:lectureId/unit-management/online-units/:onlineUnitId/edit\r\n                    this.router.navigate(['../../../'], { relativeTo: this.activatedRoute });\r\n                }),\r\n            )\r\n            .subscribe({\r\n                error: (res: HttpErrorResponse) => onError(this.alertService, res),\r\n            });\r\n    }\r\n}\r\n", "<jhi-lecture-unit-layout [isLoading]=\"isLoading\">\r\n    <jhi-online-unit-form [formData]=\"formData\" (formSubmitted)=\"updateOnlineUnit($event)\" [isEditMode]=\"true\" />\r\n</jhi-lecture-unit-layout>\r\n"],
  "mappings": "ikDAkBA,IAAaA,GAAuB,IAAA,CAA9B,MAAOA,CAAuB,CACxBC,eAAiBC,EAAOC,CAAc,EACtCC,OAASF,EAAOG,CAAM,EACtBC,kBAAoBJ,EAAOK,CAAiB,EAC5CC,aAAeN,EAAOO,CAAY,EAE1CC,UAAY,GACZC,WACAC,SACAC,UAEAC,UAAQ,CACJ,KAAKJ,UAAY,GACjB,IAAMK,EAAe,KAAKd,eAAee,OAAQA,OACjDC,EAAc,CAAC,KAAKhB,eAAeiB,SAAUH,EAAaG,QAAQ,CAAC,EAC9DC,KACGC,EAAK,CAAC,EACNC,EAAU,CAAC,CAACC,EAAQC,CAAY,IAAK,CACjC,IAAMC,EAAeC,OAAOH,EAAOI,IAAI,cAAc,CAAC,EACtD,YAAKb,UAAYY,OAAOF,EAAaG,IAAI,WAAW,CAAC,EAC9C,KAAKpB,kBAAkBqB,SAASH,EAAc,KAAKX,SAAS,CACvE,CAAC,EACDe,EAAS,IAAK,CACV,KAAKlB,UAAY,EACrB,CAAC,CAAC,EAELmB,UAAU,CACPC,KAAOC,GAAgD,CACnD,KAAKpB,WAAaoB,EAAmBC,KAErC,KAAKpB,SAAW,CACZqB,KAAM,KAAKtB,WAAWsB,KACtBC,YAAa,KAAKvB,WAAWuB,YAC7BC,YAAa,KAAKxB,WAAWwB,YAC7BC,OAAQ,KAAKzB,WAAWyB,OACxBC,gBAAiB,KAAK1B,WAAW0B,gBAEzC,EACAC,MAAQC,GAA2BC,EAAQ,KAAKhC,aAAc+B,CAAG,EACpE,CACT,CAEAE,iBAAiB7B,EAA4B,CACzC,GAAM,CAAEqB,KAAAA,EAAMC,YAAAA,EAAaC,YAAAA,EAAaC,OAAAA,EAAQC,gBAAAA,CAAe,EAAKzB,EACpE,KAAKD,WAAWsB,KAAOA,EACvB,KAAKtB,WAAWuB,YAAcA,EAC9B,KAAKvB,WAAWwB,YAAcA,EAC9B,KAAKxB,WAAWyB,OAASA,EACzB,KAAKzB,WAAW0B,gBAAkBA,EAClC,KAAK3B,UAAY,GACjB,KAAKJ,kBACAoC,OAAO,KAAK/B,WAAY,KAAKE,SAAS,EACtCM,KACGS,EAAS,IAAK,CACV,KAAKlB,UAAY,GAEjB,KAAKN,OAAOuC,SAAS,CAAC,WAAW,EAAG,CAAEC,WAAY,KAAK3C,cAAc,CAAE,CAC3E,CAAC,CAAC,EAEL4B,UAAU,CACPS,MAAQC,GAA2BC,EAAQ,KAAKhC,aAAc+B,CAAG,EACpE,CACT,4CA9DSvC,EAAuB,2BAAvBA,EAAuB6C,UAAA,CAAA,CAAA,sBAAA,CAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,WAAA,EAAA,CAAA,EAAA,gBAAA,WAAA,YAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,IClBpCE,EAAA,EAAA,0BAAA,CAAA,EACIC,EAAA,EAAA;KAAA,EAAAD,EAAA,EAAA,uBAAA,CAAA,EAA4CE,EAAA,gBAAA,SAAAC,EAAA,CAAA,OAAiBJ,EAAAV,iBAAAc,CAAA,CAAwB,CAAA,EAArFC,EAAA,EACJH,EAAA,EAAA;CAAA,EAAAG,EAAA,EACAH,EAAA,EAAA;CAAA,SAHyBI,EAAA,YAAAN,EAAAzC,SAAA,EACCgD,EAAA,CAAA,EAAAD,EAAA,WAAAN,EAAAvC,QAAA,EAAqB,aAAA,EAAA,kBDejC+C,EAA4BC,CAAuB,EAAAC,cAAA,CAAA,CAAA,SAEpD7D,CAAuB,GAAA",
  "names": ["EditOnlineUnitComponent", "activatedRoute", "inject", "ActivatedRoute", "router", "Router", "onlineUnitService", "OnlineUnitService", "alertService", "AlertService", "isLoading", "onlineUnit", "formData", "lectureId", "ngOnInit", "lectureRoute", "parent", "combineLatest", "paramMap", "pipe", "take", "switchMap", "params", "parentParams", "onlineUnitId", "Number", "get", "findById", "finalize", "subscribe", "next", "onlineUnitResponse", "body", "name", "description", "releaseDate", "source", "competencyLinks", "error", "res", "onError", "updateOnlineUnit", "update", "navigate", "relativeTo", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275listener", "$event", "\u0275\u0275elementEnd", "\u0275\u0275property", "\u0275\u0275advance", "LectureUnitLayoutComponent", "OnlineUnitFormComponent", "encapsulation"]
}
