import{c as d}from"./chunk-MBS3WUDO.js";import{c as s}from"./chunk-CK7FH6VF.js";import{a}from"./chunk-G3JOQOSD.js";import{O as m}from"./chunk-IOA4DPXY.js";import{Ea as p,ra as u,ya as h,z as o}from"./chunk-5LC5EQRR.js";import{a as l}from"./chunk-3E746U5Y.js";var E=(()=>{class n{http=p(m);exerciseService=p(s);resourceUrl="api/modeling/modeling-exercises";adminResourceUrl="api/modeling/admin/modeling-exercises";constructor(){let e=this.exerciseService;this.exerciseService=e}create(e){let r=s.convertExerciseDatesFromClient(e);return r=s.setBonusPointsConstrainedByIncludedInOverallScore(r),r.categories=s.stringifyExerciseCategories(r),this.http.post(this.resourceUrl,r,{observe:"response"}).pipe(o(t=>this.exerciseService.processExerciseEntityResponse(t)))}update(e,r){let t=a(r),i=s.convertExerciseDatesFromClient(e);return i=s.setBonusPointsConstrainedByIncludedInOverallScore(i),i.categories=s.stringifyExerciseCategories(i),this.http.put(this.resourceUrl,i,{params:t,observe:"response"}).pipe(o(c=>this.exerciseService.processExerciseEntityResponse(c)))}find(e,r=!1){return this.http.get(`${this.resourceUrl}/${e}`,{observe:"response",params:{withPlagiarismDetectionConfig:r}}).pipe(o(t=>this.exerciseService.processExerciseEntityResponse(t)))}delete(e){return this.http.delete(`${this.resourceUrl}/${e}`,{observe:"response"})}import(e){let r=s.convertExerciseDatesFromClient(e);return r=s.setBonusPointsConstrainedByIncludedInOverallScore(r),r.categories=s.stringifyExerciseCategories(r),this.http.post(`${this.resourceUrl}/import/${e.id}`,r,{observe:"response"}).pipe(o(t=>this.exerciseService.processExerciseEntityResponse(t)))}checkPlagiarism(e,r){return this.http.get(`${this.resourceUrl}/${e}/check-plagiarism`,{observe:"response",params:l({},r?.toParams())}).pipe(o(t=>t.body))}convertToPdf(e,r){return this.http.post("api/modeling/apollon/convert-to-pdf",{model:e},{observe:"response",responseType:"blob"}).pipe(u(t=>d(t.body,"application/pdf",r)))}getLatestPlagiarismResult(e){return this.http.get(`${this.resourceUrl}/${e}/plagiarism-result`,{observe:"response"}).pipe(o(r=>r.body))}getNumberOfClusters(e){return this.http.get(`${this.adminResourceUrl}/${e}/check-clusters`,{observe:"response"})}buildClusters(e){return this.http.post(`${this.adminResourceUrl}/${e}/trigger-automatic-assessment`,{observe:"response"})}deleteClusters(e){return this.http.delete(`${this.adminResourceUrl}/${e}/clusters`,{observe:"response"})}reevaluateAndUpdate(e,r){let t=a(r),i=s.convertExerciseDatesFromClient(e);return i=s.setBonusPointsConstrainedByIncludedInOverallScore(i),i.categories=s.stringifyExerciseCategories(i),this.http.put(`${this.resourceUrl}/${e.id}/re-evaluate`,i,{params:t,observe:"response"}).pipe(o(c=>this.exerciseService.processExerciseEntityResponse(c)))}static \u0275fac=function(r){return new(r||n)};static \u0275prov=h({token:n,factory:n.\u0275fac,providedIn:"root"})}return n})();export{E as a};
//# sourceMappingURL=chunk-YUF2Y3HT.js.map
