{
  "version": 3,
  "sources": ["src/main/webapp/app/exercises/programming/shared/lifecycle/programming-exercise-test-schedule-date-picker.component.ts", "src/main/webapp/app/exercises/programming/shared/lifecycle/programming-exercise-test-schedule-date-picker.component.html", "src/main/webapp/app/exercises/programming/shared/lifecycle/programming-exercise-lifecycle.component.ts", "src/main/webapp/app/exercises/programming/shared/lifecycle/programming-exercise-lifecycle.component.html"],
  "sourcesContent": ["import { Component, EventEmitter, Input, Output, ViewChild, forwardRef } from '@angular/core';\r\nimport { ControlValueAccessor, FormsModule, NG_VALUE_ACCESSOR, NgModel } from '@angular/forms';\r\nimport dayjs from 'dayjs/esm';\r\nimport { isDate } from 'app/shared/util/utils';\r\nimport { faCalendarCheck, faCalendarMinus, faCalendarPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { HelpIconComponent } from 'app/shared/components/help-icon.component';\r\nimport { OwlDateTimeModule } from '@danielmoncada/angular-datetime-picker';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-programming-exercise-test-schedule-date-picker',\r\n    templateUrl: './programming-exercise-test-schedule-date-picker.component.html',\r\n    providers: [\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            multi: true,\r\n            useExisting: forwardRef(() => ProgrammingExerciseTestScheduleDatePickerComponent),\r\n        },\r\n    ],\r\n    styleUrls: ['./programming-exercise-test-schedule-picker.scss'],\r\n    imports: [TranslateDirective, HelpIconComponent, FormsModule, OwlDateTimeModule, FaIconComponent, ArtemisDatePipe],\r\n})\r\nexport class ProgrammingExerciseTestScheduleDatePickerComponent implements ControlValueAccessor {\r\n    @ViewChild('dateInput', { static: false }) dateInput: NgModel;\r\n    @Input() selectedDate?: Date;\r\n    @Input() startAt?: dayjs.Dayjs;\r\n    @Input() min?: dayjs.Dayjs;\r\n    @Input() max?: dayjs.Dayjs;\r\n    @Input() label: string;\r\n    @Input() tooltipText: string;\r\n    @Input() readOnly: boolean;\r\n    @Output() onDateReset = new EventEmitter();\r\n\r\n    // Icons\r\n    faCalendarMinus = faCalendarMinus;\r\n    faCalendarCheck = faCalendarCheck;\r\n    faCalendarPlus = faCalendarPlus;\r\n\r\n    _onChange: any = () => {};\r\n\r\n    registerOnChange(fn: any): void {\r\n        this._onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(): void {}\r\n\r\n    setDisabledState(): void {}\r\n\r\n    writeValue(obj: any): void {\r\n        if (this.selectedDate !== obj) {\r\n            this.selectedDate = !obj || isDate(obj) ? obj : obj.toDate();\r\n            this.selectedDate?.setSeconds(0, 0);\r\n            this._onChange(obj);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Resets the date and informs parent components that the date has been reset.\r\n     * This makes it easier to also reset date, that can only be selected if the current date is not set\r\n     */\r\n    resetDate() {\r\n        this.writeValue(undefined);\r\n        this.onDateReset.emit();\r\n    }\r\n}\r\n", "<div class=\"test-schedule-date-content\">\r\n    <div class=\"mb-2 test-schedule-date-title\">\r\n        <span [jhiTranslate]=\"label\"></span>\r\n        @if (tooltipText) {\r\n            <jhi-help-icon [text]=\"tooltipText\" />\r\n        }\r\n    </div>\r\n    <div class=\"invisible-date-time-picker\">\r\n        <input #dateInput=\"ngModel\" class=\"form-control\" [ngModel]=\"selectedDate\" [min]=\"min\" [max]=\"max\" (ngModelChange)=\"writeValue($event)\" [owlDateTime]=\"dt\" />\r\n    </div>\r\n    @if (!selectedDate && readOnly) {\r\n        <button type=\"button\" class=\"btn btn-light btn-lifecycle\" [class.btn-lifecycle--deactivated]=\"!selectedDate\" [class.btn-lifecycle--disabled]=\"readOnly\">\r\n            <fa-icon class=\"icon-calendar-plus\" [icon]=\"faCalendarPlus\" size=\"2x\" />\r\n        </button>\r\n    }\r\n    @if (!selectedDate && !readOnly) {\r\n        <button\r\n            [owlDateTimeTrigger]=\"dt\"\r\n            type=\"button\"\r\n            class=\"btn btn-light btn-lifecycle\"\r\n            [class.btn-lifecycle--deactivated]=\"!selectedDate\"\r\n            [class.btn-lifecycle--disabled]=\"readOnly\"\r\n        >\r\n            <fa-icon class=\"icon-calendar-plus\" [icon]=\"faCalendarPlus\" size=\"2x\" />\r\n        </button>\r\n    }\r\n    @if (selectedDate && readOnly) {\r\n        <button (click)=\"!readOnly && resetDate()\" type=\"button\" class=\"btn btn-light btn-lifecycle btn-lifecycle--disabled\">\r\n            <fa-icon class=\"icon-static\" [icon]=\"faCalendarCheck\" size=\"2x\" />\r\n        </button>\r\n    }\r\n    @if (selectedDate && !readOnly) {\r\n        <button (click)=\"!readOnly && resetDate()\" type=\"button\" class=\"btn btn-light btn-lifecycle calendar-event-toggle\">\r\n            <fa-icon class=\"icon-static\" [icon]=\"faCalendarCheck\" size=\"2x\" />\r\n            <fa-icon class=\"icon-remove\" [icon]=\"faCalendarMinus\" size=\"2x\" />\r\n        </button>\r\n    }\r\n    @if (selectedDate) {\r\n        <div class=\"mt-2\">\r\n            {{ selectedDate | artemisDate: 'long-date' }}<br />\r\n            {{ selectedDate | artemisDate: 'time' }}\r\n        </div>\r\n    }\r\n    @if (!selectedDate) {\r\n        <div class=\"mt-2 text-danger\" jhiTranslate=\"artemisApp.programmingExercise.timeline.notSet\"></div>\r\n    }\r\n    <owl-date-time [startAt]=\"startAt\" #dt />\r\n</div>\r\n", "import { AfterViewInit, Component, Input, OnChanges, OnDestroy, OnInit, QueryList, SimpleChanges, ViewChildren, inject, input } from '@angular/core';\r\nimport { ExerciseFeedbackSuggestionOptionsComponent } from 'app/exercises/shared/feedback-suggestion/exercise-feedback-suggestion-options.component';\r\nimport dayjs from 'dayjs/esm';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AssessmentType } from 'app/entities/assessment-type.model';\r\nimport { ProgrammingExercise } from 'app/entities/programming/programming-exercise.model';\r\nimport { faCogs, faUserCheck, faUserSlash } from '@fortawesome/free-solid-svg-icons';\r\nimport { ExerciseService } from 'app/exercises/shared/exercise/exercise.service';\r\nimport { IncludedInOverallScore } from 'app/entities/exercise.model';\r\nimport { Observable, Subject, Subscription } from 'rxjs';\r\nimport { AthenaService } from 'app/assessment/athena.service';\r\nimport { ProgrammingExerciseTestScheduleDatePickerComponent } from 'app/exercises/programming/shared/lifecycle/programming-exercise-test-schedule-date-picker.component';\r\nimport { every } from 'lodash-es';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { tap } from 'rxjs/operators';\r\nimport { ImportOptions } from 'app/types/programming-exercises';\r\nimport { ProgrammingExerciseInputField } from 'app/exercises/programming/manage/update/programming-exercise-update.helper';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { HelpIconComponent } from 'app/shared/components/help-icon.component';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { AsyncPipe, NgStyle } from '@angular/common';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-programming-exercise-lifecycle',\r\n    templateUrl: './programming-exercise-lifecycle.component.html',\r\n    styleUrls: ['./programming-exercise-test-schedule-picker.scss'],\r\n    imports: [\r\n        ProgrammingExerciseTestScheduleDatePickerComponent,\r\n        FormsModule,\r\n        TranslateDirective,\r\n        HelpIconComponent,\r\n        FaIconComponent,\r\n        NgStyle,\r\n        ExerciseFeedbackSuggestionOptionsComponent,\r\n        AsyncPipe,\r\n        ArtemisTranslatePipe,\r\n    ],\r\n})\r\nexport class ProgrammingExerciseLifecycleComponent implements AfterViewInit, OnDestroy, OnInit, OnChanges {\r\n    private translateService = inject(TranslateService);\r\n    private exerciseService = inject(ExerciseService);\r\n    private athenaService = inject(AthenaService);\r\n    private activatedRoute = inject(ActivatedRoute);\r\n\r\n    protected readonly assessmentType = AssessmentType;\r\n    protected readonly IncludedInOverallScore = IncludedInOverallScore;\r\n    protected readonly faCogs = faCogs;\r\n    protected readonly faUserCheck = faUserCheck;\r\n    protected readonly faUserSlash = faUserSlash;\r\n\r\n    @Input() exercise: ProgrammingExercise;\r\n    @Input() isExamMode: boolean;\r\n    @Input() readOnly: boolean;\r\n    @Input() importOptions?: ImportOptions;\r\n    isEditFieldDisplayedRecord = input<Record<ProgrammingExerciseInputField, boolean>>();\r\n\r\n    @ViewChildren(ProgrammingExerciseTestScheduleDatePickerComponent) datePickerComponents: QueryList<ProgrammingExerciseTestScheduleDatePickerComponent>;\r\n\r\n    formValid: boolean;\r\n    formEmpty: boolean;\r\n    formValidChanges = new Subject<boolean>();\r\n\r\n    inputfieldSubscriptions: (Subscription | undefined)[] = [];\r\n    datePickerChildrenSubscription?: Subscription;\r\n\r\n    isAthenaEnabled$: Observable<boolean> | undefined;\r\n\r\n    isImport = false;\r\n    private urlSubscription: Subscription;\r\n\r\n    /**\r\n     * If the programming exercise does not have an id, set the assessment Type to AUTOMATIC\r\n     */\r\n    ngOnInit(): void {\r\n        if (!this.exercise.id) {\r\n            this.exercise.assessmentType = AssessmentType.AUTOMATIC;\r\n        }\r\n        this.isAthenaEnabled$ = this.athenaService.isEnabled();\r\n\r\n        this.updateIsImportBasedOnUrl();\r\n    }\r\n\r\n    private updateIsImportBasedOnUrl() {\r\n        let isImportFromExistingExercise = false;\r\n        this.urlSubscription = this.activatedRoute.url\r\n            .pipe(\r\n                tap((segments) => {\r\n                    isImportFromExistingExercise = segments.some((segment) => segment.path === 'import');\r\n                    // currently not supported for imports from files, issue https://github.com/ls1intum/Artemis/issues/8562 should be fixed first\r\n                    // isImportFromFile = segments.some((segment) => segment.path === 'import-from-file');\r\n                }),\r\n            )\r\n            .subscribe(() => {\r\n                this.isImport = isImportFromExistingExercise;\r\n            });\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.setupDateFieldSubscriptions();\r\n        this.datePickerChildrenSubscription = this.datePickerComponents.changes.subscribe(() => this.setupDateFieldSubscriptions());\r\n    }\r\n\r\n    ngOnChanges(simpleChanges: SimpleChanges) {\r\n        if (simpleChanges.exercise) {\r\n            const newExercise = simpleChanges.exercise.currentValue;\r\n            if (this.exerciseService.hasDueDateError(newExercise)) {\r\n                // Checking for due date errors and ordering the calls to avoid updating exampleSolutionPublicationDate twice.\r\n                this.updateReleaseDate(newExercise.releaseDate);\r\n                this.updateExampleSolutionPublicationDate(newExercise.dueDate);\r\n            } else {\r\n                this.updateExampleSolutionPublicationDate(newExercise.dueDate);\r\n                this.updateReleaseDate(newExercise.releaseDate);\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.datePickerChildrenSubscription?.unsubscribe();\r\n        this.unsubscribeDateFieldSubscriptions();\r\n        this.urlSubscription?.unsubscribe();\r\n    }\r\n\r\n    calculateFormStatus() {\r\n        const datePickers = this.datePickerComponents.toArray();\r\n        this.formValid = every(datePickers, (picker) => picker?.dateInput?.valid ?? true);\r\n        this.formEmpty = !every(datePickers, (picker) => {\r\n            if (picker instanceof ProgrammingExerciseTestScheduleDatePickerComponent) {\r\n                return picker.selectedDate;\r\n            }\r\n            return false;\r\n        });\r\n        this.formValidChanges.next(this.formValid);\r\n    }\r\n\r\n    setupDateFieldSubscriptions() {\r\n        this.unsubscribeDateFieldSubscriptions();\r\n        this.datePickerComponents\r\n            .toArray()\r\n            .forEach((picker) => this.inputfieldSubscriptions.push(picker.dateInput?.valueChanges?.subscribe(() => setTimeout(() => this.calculateFormStatus()))));\r\n    }\r\n\r\n    unsubscribeDateFieldSubscriptions() {\r\n        for (const subscription of this.inputfieldSubscriptions) {\r\n            subscription?.unsubscribe();\r\n        }\r\n    }\r\n\r\n    toggleSetTestCaseVisibilityToAfterDueDate() {\r\n        if (this.importOptions) {\r\n            this.importOptions.setTestCaseVisibilityToAfterDueDate = !this.importOptions.setTestCaseVisibilityToAfterDueDate;\r\n        }\r\n    }\r\n\r\n    toggleFeedbackRequests() {\r\n        this.exercise.allowFeedbackRequests = !this.exercise.allowFeedbackRequests;\r\n        if (this.exercise.allowFeedbackRequests) {\r\n            this.exercise.assessmentDueDate = undefined;\r\n            this.exercise.buildAndTestStudentSubmissionsAfterDueDate = undefined;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Toggles the assessment type between AUTOMATIC (only tests in repo will be run using build plans) and\r\n     * SEMI_AUTOMATIC (After all automatic tests have been run, the tutors will have to make a final manual assessment)\r\n     *\r\n     */\r\n    toggleAssessmentType() {\r\n        if (this.exercise.assessmentType === AssessmentType.SEMI_AUTOMATIC) {\r\n            this.exercise.assessmentType = AssessmentType.AUTOMATIC;\r\n            this.exercise.assessmentDueDate = undefined;\r\n            this.exercise.allowComplaintsForAutomaticAssessments = false;\r\n            this.exercise.feedbackSuggestionModule = undefined;\r\n        } else {\r\n            this.exercise.assessmentType = AssessmentType.SEMI_AUTOMATIC;\r\n            this.exercise.allowComplaintsForAutomaticAssessments = false;\r\n            this.exercise.allowFeedbackRequests = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Toggles the value for allowing complaints for automatic assessment between true and false\r\n     */\r\n    toggleComplaintsType() {\r\n        this.exercise.allowComplaintsForAutomaticAssessments = !this.exercise.allowComplaintsForAutomaticAssessments;\r\n    }\r\n\r\n    /**\r\n     * Toggles the value for allowing complaints for automatic assessment between true and false\r\n     */\r\n    toggleReleaseTests() {\r\n        this.exercise.releaseTestsWithExampleSolution = !this.exercise.releaseTestsWithExampleSolution;\r\n    }\r\n\r\n    /**\r\n     * Sets the new release date and updates \"start date\", \"due date\" and \"after due date\" if the release date is after them\r\n     * Does not propagate changes to dates other than release date if readOnly is true.\r\n     *\r\n     * @param newReleaseDate The new release date\r\n     */\r\n    updateReleaseDate(newReleaseDate?: dayjs.Dayjs) {\r\n        this.exercise.releaseDate = newReleaseDate;\r\n        if (this.readOnly) {\r\n            // Changes from parent component are allowed but no cascading changes should be made in read-only mode.\r\n            return;\r\n        }\r\n        if (this.exerciseService.hasStartDateError(this.exercise)) {\r\n            this.updateStartDate(newReleaseDate);\r\n            // Will handle due date and example solution\r\n            return;\r\n        }\r\n        const safeStartOrReleaseDate = this.exercise.startDate ?? newReleaseDate;\r\n        if (this.exerciseService.hasDueDateError(this.exercise) && safeStartOrReleaseDate) {\r\n            this.updateDueDate(safeStartOrReleaseDate);\r\n        }\r\n        this.updateExampleSolutionPublicationDate(safeStartOrReleaseDate);\r\n    }\r\n\r\n    /**\r\n     * Sets the new start date and updates \"due date\" and \"after due date\" if the start date is after the due date\r\n     * Does not propagate changes to dates other than start date if readOnly is true.\r\n     *\r\n     * @param newStartDate The new start date\r\n     */\r\n    updateStartDate(newStartDate?: dayjs.Dayjs) {\r\n        this.exercise.startDate = newStartDate;\r\n        if (this.readOnly) {\r\n            // Changes from parent component are allowed but no cascading changes should be made in read-only mode.\r\n            return;\r\n        }\r\n        if (this.exerciseService.hasDueDateError(this.exercise)) {\r\n            this.updateDueDate(newStartDate!);\r\n        }\r\n        this.updateExampleSolutionPublicationDate(newStartDate);\r\n    }\r\n\r\n    /**\r\n     * Updates the due Date of the programming exercise\r\n     * @param dueDate the new dueDate\r\n     */\r\n    private updateDueDate(dueDate: dayjs.Dayjs) {\r\n        alert(this.translateService.instant('artemisApp.programmingExercise.timeline.alertNewDueDate'));\r\n        this.exercise.dueDate = dueDate;\r\n\r\n        // If the new due date is after the \"After Due Date\", then we have to set the \"After Due Date\" to the new due date\r\n        const afterDue = this.exercise.buildAndTestStudentSubmissionsAfterDueDate;\r\n        if (afterDue && dueDate.isAfter(afterDue)) {\r\n            this.exercise.buildAndTestStudentSubmissionsAfterDueDate = dueDate;\r\n            alert(this.translateService.instant('artemisApp.programmingExercise.timeline.alertNewAfterDueDate'));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Updates the example solution publication date of the programming exercise if it is set and not after release or due date.\r\n     * Due date check is not performed if exercise is not included in the grade.\r\n     * This method is a no-op if readOnly is true.\r\n     *\r\n     * @param newReleaseOrDueDate the new exampleSolutionPublicationDate if it is after the current exampleSolutionPublicationDate\r\n     */\r\n    updateExampleSolutionPublicationDate(newReleaseOrDueDate?: dayjs.Dayjs) {\r\n        if (!this.readOnly && this.exerciseService.hasExampleSolutionPublicationDateError(this.exercise)) {\r\n            const message =\r\n                newReleaseOrDueDate && dayjs(newReleaseOrDueDate).isSame(this.exercise.dueDate)\r\n                    ? 'artemisApp.programmingExercise.timeline.alertNewExampleSolutionPublicationDateAsDueDate'\r\n                    : 'artemisApp.programmingExercise.timeline.alertNewExampleSolutionPublicationDateAsReleaseDate';\r\n            alert(this.translateService.instant(message));\r\n            this.exercise.exampleSolutionPublicationDate = newReleaseOrDueDate;\r\n            if (!newReleaseOrDueDate) {\r\n                this.exercise.releaseTestsWithExampleSolution = false;\r\n            }\r\n        }\r\n    }\r\n}\r\n", "<div class=\"timeline-box\">\r\n    <div class=\"test-schedule\">\r\n        <div class=\"test-schedule-row d-flex justify-content-around\">\r\n            @if ((isEditFieldDisplayedRecord()?.releaseDate || !isEditFieldDisplayedRecord()) && !isExamMode) {\r\n                <jhi-programming-exercise-test-schedule-date-picker\r\n                    [(ngModel)]=\"exercise.releaseDate\"\r\n                    (ngModelChange)=\"updateReleaseDate($event)\"\r\n                    [readOnly]=\"readOnly\"\r\n                    class=\"test-schedule-date px-1\"\r\n                    label=\"artemisApp.exercise.releaseDate\"\r\n                    tooltipText=\"artemisApp.programmingExercise.timeline.releaseDateTooltip\"\r\n                />\r\n            }\r\n            @if ((isEditFieldDisplayedRecord()?.startDate || !isEditFieldDisplayedRecord()) && !isExamMode) {\r\n                <jhi-programming-exercise-test-schedule-date-picker\r\n                    [(ngModel)]=\"exercise.startDate\"\r\n                    (ngModelChange)=\"updateStartDate($event)\"\r\n                    (onDateReset)=\"exercise.startDate = undefined\"\r\n                    [startAt]=\"exercise.releaseDate\"\r\n                    [min]=\"exercise.releaseDate\"\r\n                    [readOnly]=\"readOnly\"\r\n                    class=\"test-schedule-date px-1\"\r\n                    label=\"artemisApp.exercise.startDate\"\r\n                    tooltipText=\"artemisApp.programmingExercise.timeline.startDateTooltip\"\r\n                />\r\n            }\r\n            <div class=\"test-schedule-date px-1\">\r\n                <div class=\"test-schedule-date-title test-schedule-date-title-small-button\">\r\n                    <span jhiTranslate=\"artemisApp.programmingExercise.timeline.automaticTests\"></span>\r\n                    <jhi-help-icon text=\"artemisApp.programmingExercise.timeline.automaticTestsMandatoryTooltip\" />\r\n                </div>\r\n                <div class=\"btn btn-light scheduled-test btn-lifecycle\" [class.btn-lifecycle--disabled]=\"readOnly\">\r\n                    <fa-icon [icon]=\"faCogs\" size=\"lg\" />\r\n                </div>\r\n            </div>\r\n            @if ((isEditFieldDisplayedRecord()?.dueDate || !isEditFieldDisplayedRecord()) && !isExamMode) {\r\n                <jhi-programming-exercise-test-schedule-date-picker\r\n                    [(ngModel)]=\"exercise.dueDate\"\r\n                    (ngModelChange)=\"updateExampleSolutionPublicationDate($event)\"\r\n                    (onDateReset)=\"exercise.buildAndTestStudentSubmissionsAfterDueDate = undefined\"\r\n                    [startAt]=\"exercise.startDate ?? exercise.releaseDate\"\r\n                    [min]=\"exercise.startDate ?? exercise.releaseDate\"\r\n                    [readOnly]=\"readOnly\"\r\n                    class=\"test-schedule-date px-1\"\r\n                    label=\"artemisApp.exercise.dueDate\"\r\n                    tooltipText=\"artemisApp.programmingExercise.timeline.dueDateTooltip\"\r\n                    id=\"programming-exercise-due-date-picker\"\r\n                />\r\n            }\r\n            @if ((isEditFieldDisplayedRecord()?.runTestsAfterDueDate || !isEditFieldDisplayedRecord()) && (isExamMode || exercise.dueDate)) {\r\n                <jhi-programming-exercise-test-schedule-date-picker\r\n                    class=\"test-schedule-date px-1\"\r\n                    [(ngModel)]=\"exercise.buildAndTestStudentSubmissionsAfterDueDate\"\r\n                    [startAt]=\"exercise.dueDate\"\r\n                    [min]=\"exercise.dueDate\"\r\n                    [readOnly]=\"readOnly\"\r\n                    label=\"artemisApp.programmingExercise.timeline.afterDueDate\"\r\n                    tooltipText=\"artemisApp.programmingExercise.timeline.afterDueDateTooltip\"\r\n                />\r\n            }\r\n            @if ((isEditFieldDisplayedRecord()?.assessmentDueDate || !isEditFieldDisplayedRecord()) && (isExamMode || exercise.dueDate)) {\r\n                <div>\r\n                    <div class=\"test-schedule-date px-1\">\r\n                        <div class=\"test-schedule-date-title test-schedule-date-title-small-button\">\r\n                            <span jhiTranslate=\"artemisApp.programmingExercise.timeline.assessmentType\"></span>\r\n                            <jhi-help-icon\r\n                                [text]=\"\r\n                                    'artemisApp.programmingExercise.timeline.' +\r\n                                    (exercise.assessmentType === assessmentType.SEMI_AUTOMATIC\r\n                                        ? 'assessmentTypeTooltipManualAssessment'\r\n                                        : 'assessmentTypeTooltipAutomaticAssessment')\r\n                                \"\r\n                            />\r\n                        </div>\r\n                        <div\r\n                            class=\"btn btn-light scheduled-test scheduled-test--can-toggle btn-lifecycle calendar-event-toggle\"\r\n                            [class.btn-lifecycle--disabled]=\"readOnly\"\r\n                            (click)=\"!readOnly && toggleAssessmentType()\"\r\n                        >\r\n                            <fa-icon [icon]=\"exercise.assessmentType === assessmentType.SEMI_AUTOMATIC ? faUserCheck : faUserSlash\" size=\"lg\" />\r\n                        </div>\r\n                        <div class=\"mt-2\">\r\n                            {{\r\n                                'artemisApp.programmingExercise.timeline.' +\r\n                                    (exercise.assessmentType === assessmentType.SEMI_AUTOMATIC ? 'manualAssessment' : 'automaticAssessment') | artemisTranslate\r\n                            }}\r\n                        </div>\r\n                    </div>\r\n                    @if (exercise.assessmentType === assessmentType.SEMI_AUTOMATIC && !isExamMode && !exercise.allowFeedbackRequests) {\r\n                        <jhi-programming-exercise-test-schedule-date-picker\r\n                            class=\"test-schedule-date\"\r\n                            [(ngModel)]=\"exercise.assessmentDueDate\"\r\n                            [startAt]=\"exercise.dueDate\"\r\n                            [min]=\"exercise.dueDate\"\r\n                            [readOnly]=\"readOnly\"\r\n                            label=\"artemisApp.programmingExercise.timeline.assessmentDueDate\"\r\n                            tooltipText=\"artemisApp.programmingExercise.timeline.assessmentDueDateTooltip\"\r\n                        />\r\n                    }\r\n                </div>\r\n            }\r\n            @if ((isEditFieldDisplayedRecord()?.exampleSolutionPublicationDate || !isEditFieldDisplayedRecord()) && !isExamMode) {\r\n                <div>\r\n                    <jhi-programming-exercise-test-schedule-date-picker\r\n                        [(ngModel)]=\"exercise.exampleSolutionPublicationDate\"\r\n                        [readOnly]=\"readOnly\"\r\n                        [startAt]=\"exercise.dueDate ?? exercise.startDate ?? exercise.releaseDate\"\r\n                        [min]=\"\r\n                            (exercise.includedInOverallScore !== IncludedInOverallScore.NOT_INCLUDED ? exercise.dueDate : undefined) ?? exercise.startDate ?? exercise.releaseDate\r\n                        \"\r\n                        class=\"test-schedule-date px-1\"\r\n                        label=\"artemisApp.exercise.exampleSolutionPublicationDate\"\r\n                        tooltipText=\"artemisApp.programmingExercise.timeline.exampleSolutionPublicationDateTooltip\"\r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    </div>\r\n    @if (\r\n        !readOnly &&\r\n        (!isEditFieldDisplayedRecord() ||\r\n            isEditFieldDisplayedRecord()?.complaintOnAutomaticAssessment ||\r\n            isEditFieldDisplayedRecord()?.manualFeedbackRequests ||\r\n            isEditFieldDisplayedRecord()?.showTestNamesToStudents ||\r\n            isEditFieldDisplayedRecord()?.includeTestsIntoExampleSolution)\r\n    ) {\r\n        <h6 jhiTranslate=\"artemisApp.assessment.assessment\"></h6>\r\n        @if ((isEditFieldDisplayedRecord()?.complaintOnAutomaticAssessment || !isEditFieldDisplayedRecord()) && (isExamMode || exercise.course?.complaintsEnabled)) {\r\n            <div class=\"form-check\">\r\n                <input\r\n                    type=\"checkbox\"\r\n                    class=\"form-check-input\"\r\n                    name=\"allowComplaintsForAutomaticAssessment\"\r\n                    [checked]=\"exercise.allowComplaintsForAutomaticAssessments\"\r\n                    [disabled]=\"exercise.assessmentType !== assessmentType.AUTOMATIC || (!isExamMode && !exercise.dueDate)\"\r\n                    id=\"allowComplaintsForAutomaticAssessment\"\r\n                    (change)=\"toggleComplaintsType()\"\r\n                />\r\n                <label\r\n                    [ngStyle]=\"exercise.assessmentType !== assessmentType.AUTOMATIC || (!isExamMode && !exercise.dueDate) ? { color: 'grey' } : {}\"\r\n                    class=\"form-control-label\"\r\n                    for=\"allowComplaintsForAutomaticAssessment\"\r\n                    jhiTranslate=\"artemisApp.programmingExercise.timeline.complaintOnAutomaticAssessment\"\r\n                ></label>\r\n                <jhi-help-icon placement=\"right auto\" [text]=\"'artemisApp.programmingExercise.timeline.complaintOnAutomaticAssessmentTooltip'\" />\r\n            </div>\r\n        }\r\n        @if (isExamMode && isImport && importOptions) {\r\n            <div class=\"form-check\">\r\n                <input\r\n                    type=\"checkbox\"\r\n                    class=\"form-check-input\"\r\n                    name=\"setTestCaseVisibilityToAfterDueDate\"\r\n                    [checked]=\"importOptions.setTestCaseVisibilityToAfterDueDate\"\r\n                    id=\"setTestCaseVisibilityToAfterDueDate-checkbox\"\r\n                    (change)=\"toggleSetTestCaseVisibilityToAfterDueDate()\"\r\n                />\r\n                <label\r\n                    class=\"form-control-label\"\r\n                    for=\"setTestCaseVisibilityToAfterDueDate-checkbox\"\r\n                    jhiTranslate=\"artemisApp.programmingExercise.timeline.setTestCaseVisibilityToAfterReleaseDateOfResults\"\r\n                ></label>\r\n                <jhi-help-icon placement=\"right auto\" [text]=\"'artemisApp.programmingExercise.timeline.setTestCaseVisibilityToAfterReleaseDateOfResultsTooltip'\" />\r\n            </div>\r\n        }\r\n        @if ((isEditFieldDisplayedRecord()?.manualFeedbackRequests || !isEditFieldDisplayedRecord()) && !isExamMode) {\r\n            <div class=\"form-check\">\r\n                <input\r\n                    type=\"checkbox\"\r\n                    class=\"form-check-input\"\r\n                    name=\"allowFeedbackRequests\"\r\n                    [checked]=\"exercise.allowFeedbackRequests\"\r\n                    [disabled]=\"exercise.assessmentType !== assessmentType.SEMI_AUTOMATIC\"\r\n                    id=\"allowFeedbackRequests\"\r\n                    (change)=\"toggleFeedbackRequests()\"\r\n                />\r\n                @if (isAthenaEnabled$ | async) {\r\n                    <label\r\n                        [ngStyle]=\"exercise.assessmentType !== assessmentType.SEMI_AUTOMATIC ? { color: 'grey' } : {}\"\r\n                        class=\"form-control-label\"\r\n                        for=\"allowFeedbackRequests\"\r\n                        jhiTranslate=\"artemisApp.programmingExercise.timeline.allowFeedbackRequests\"\r\n                    ></label>\r\n                    <jhi-help-icon placement=\"right auto\" [text]=\"'artemisApp.programmingExercise.timeline.allowFeedbackRequestsTooltip'\" />\r\n                } @else {\r\n                    <label\r\n                        [ngStyle]=\"exercise.assessmentType !== assessmentType.SEMI_AUTOMATIC ? { color: 'grey' } : {}\"\r\n                        class=\"form-control-label\"\r\n                        for=\"allowFeedbackRequests\"\r\n                        jhiTranslate=\"artemisApp.programmingExercise.timeline.manualFeedbackRequests\"\r\n                    ></label>\r\n                    <jhi-help-icon placement=\"right auto\" [text]=\"'artemisApp.programmingExercise.timeline.manualFeedbackRequestsTooltip'\" />\r\n                }\r\n            </div>\r\n        }\r\n        @if (isEditFieldDisplayedRecord()?.showTestNamesToStudents || !isEditFieldDisplayedRecord()) {\r\n            <div class=\"form-check\">\r\n                <input\r\n                    class=\"form-check-input\"\r\n                    type=\"checkbox\"\r\n                    name=\"showTestNamesToStudents\"\r\n                    id=\"field_showTestNamesToStudents\"\r\n                    [disabled]=\"readOnly\"\r\n                    [(ngModel)]=\"exercise.showTestNamesToStudents\"\r\n                    checked\r\n                />\r\n                <label class=\"form-control-label\" for=\"field_showTestNamesToStudents\" jhiTranslate=\"artemisApp.programmingExercise.showTestNamesToStudents\"></label>\r\n                <jhi-help-icon placement=\"right auto\" [text]=\"'artemisApp.programmingExercise.showTestNamesToStudentsTooltip'\" />\r\n            </div>\r\n        }\r\n        @if (isEditFieldDisplayedRecord()?.includeTestsIntoExampleSolution || !isEditFieldDisplayedRecord()) {\r\n            <div class=\"form-check\">\r\n                <input\r\n                    type=\"checkbox\"\r\n                    class=\"form-check-input\"\r\n                    name=\"releaseTestsWithExampleSolution\"\r\n                    [checked]=\"exercise.releaseTestsWithExampleSolution\"\r\n                    [disabled]=\"!exercise.exampleSolutionPublicationDate && !exercise.exerciseGroup?.exam?.exampleSolutionPublicationDate\"\r\n                    id=\"releaseTestsWithExampleSolution\"\r\n                    (change)=\"toggleReleaseTests()\"\r\n                />\r\n                <label\r\n                    [ngStyle]=\"!exercise.exampleSolutionPublicationDate && !exercise.exerciseGroup?.exam?.exampleSolutionPublicationDate ? { color: 'grey' } : {}\"\r\n                    class=\"form-control-label\"\r\n                    for=\"releaseTestsWithExampleSolution\"\r\n                    jhiTranslate=\"artemisApp.programmingExercise.timeline.releaseTestsWithExampleSolution\"\r\n                ></label>\r\n                <jhi-help-icon placement=\"right auto\" [text]=\"'artemisApp.programmingExercise.timeline.releaseTestsWithExampleSolutionTooltip'\" />\r\n            </div>\r\n        }\r\n        @if (!isExamMode) {\r\n            <jhi-exercise-feedback-suggestion-options [exercise]=\"exercise\" [dueDate]=\"exercise.dueDate\" [readOnly]=\"readOnly\" />\r\n        }\r\n    }\r\n</div>\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275property", "ctx_r1", "tooltipText", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275classProp", "selectedDate", "readOnly", "faCalendarPlus", "dt_r3", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r4", "\u0275\u0275nextContext", "\u0275\u0275resetView", "resetDate", "faCalendarCheck", "_r5", "faCalendarMinus", "\u0275\u0275textInterpolate1", "\u0275\u0275pipeBind2", "ProgrammingExerciseTestScheduleDatePickerComponent", "dateInput", "startAt", "min", "max", "label", "onDateReset", "EventEmitter", "_onChange", "registerOnChange", "fn", "registerOnTouched", "setDisabledState", "writeValue", "obj", "isDate", "toDate", "setSeconds", "undefined", "emit", "selectors", "viewQuery", "rf", "ctx", "provide", "NG_VALUE_ACCESSOR", "multi", "useExisting", "forwardRef", "decls", "vars", "consts", "template", "\u0275\u0275template", "ProgrammingExerciseTestScheduleDatePickerComponent_Conditional_6_Template", "$event", "i0", "_r1", "ProgrammingExerciseTestScheduleDatePickerComponent_Conditional_14_Template", "ProgrammingExerciseTestScheduleDatePickerComponent_Conditional_15_Template", "ProgrammingExerciseTestScheduleDatePickerComponent_Conditional_16_Template", "ProgrammingExerciseTestScheduleDatePickerComponent_Conditional_17_Template", "ProgrammingExerciseTestScheduleDatePickerComponent_Conditional_18_Template", "ProgrammingExerciseTestScheduleDatePickerComponent_Conditional_19_Template", "\u0275\u0275conditional", "TranslateDirective", "HelpIconComponent", "FormsModule", "DefaultValueAccessor", "NgControlStatus", "NgModel", "OwlDateTimeModule", "OwlDateTimeTriggerDirective", "OwlDateTimeInputDirective", "OwlDateTimeComponent", "FaIconComponent", "ArtemisDatePipe", "styles", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275twoWayListener", "$event", "\u0275\u0275restoreView", "_r1", "ctx_r1", "\u0275\u0275nextContext", "i0", "\u0275\u0275twoWayBindingSet", "exercise", "releaseDate", "\u0275\u0275resetView", "\u0275\u0275listener", "updateReleaseDate", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275twoWayProperty", "\u0275\u0275property", "readOnly", "_r3", "startDate", "updateStartDate", "undefined", "_r4", "dueDate", "updateExampleSolutionPublicationDate", "buildAndTestStudentSubmissionsAfterDueDate", "tmp_2_0", "tmp_3_0", "_r5", "_r7", "assessmentDueDate", "\u0275\u0275element", "_r6", "toggleAssessmentType", "\u0275\u0275template", "ProgrammingExerciseLifecycleComponent_Conditional_25_Conditional_22_Template", "assessmentType", "SEMI_AUTOMATIC", "\u0275\u0275classProp", "faUserCheck", "faUserSlash", "\u0275\u0275textInterpolate1", "\u0275\u0275pipeBind1", "\u0275\u0275conditional", "isExamMode", "allowFeedbackRequests", "_r8", "exampleSolutionPublicationDate", "tmp_4_0", "includedInOverallScore", "IncludedInOverallScore", "NOT_INCLUDED", "_r9", "toggleComplaintsType", "allowComplaintsForAutomaticAssessments", "AUTOMATIC", "\u0275\u0275pureFunction0", "_c0", "_c1", "_r10", "toggleSetTestCaseVisibilityToAfterDueDate", "importOptions", "setTestCaseVisibilityToAfterDueDate", "_r11", "toggleFeedbackRequests", "ProgrammingExerciseLifecycleComponent_Conditional_29_Conditional_5_Conditional_5_Template", "ProgrammingExerciseLifecycleComponent_Conditional_29_Conditional_5_Conditional_7_Template", "isAthenaEnabled$", "_r12", "showTestNamesToStudents", "_r13", "toggleReleaseTests", "releaseTestsWithExampleSolution", "exerciseGroup", "exam", "ProgrammingExerciseLifecycleComponent_Conditional_29_Conditional_3_Template", "ProgrammingExerciseLifecycleComponent_Conditional_29_Conditional_4_Template", "ProgrammingExerciseLifecycleComponent_Conditional_29_Conditional_5_Template", "ProgrammingExerciseLifecycleComponent_Conditional_29_Conditional_6_Template", "ProgrammingExerciseLifecycleComponent_Conditional_29_Conditional_7_Template", "ProgrammingExerciseLifecycleComponent_Conditional_29_Conditional_8_Template", "tmp_1_0", "isEditFieldDisplayedRecord", "complaintOnAutomaticAssessment", "course", "complaintsEnabled", "isImport", "manualFeedbackRequests", "tmp_5_0", "includeTestsIntoExampleSolution", "ProgrammingExerciseLifecycleComponent", "translateService", "inject", "TranslateService", "exerciseService", "ExerciseService", "athenaService", "AthenaService", "activatedRoute", "ActivatedRoute", "AssessmentType", "faCogs", "input", "datePickerComponents", "formValid", "formEmpty", "formValidChanges", "Subject", "inputfieldSubscriptions", "datePickerChildrenSubscription", "urlSubscription", "ngOnInit", "id", "isEnabled", "updateIsImportBasedOnUrl", "isImportFromExistingExercise", "url", "pipe", "tap", "segments", "some", "segment", "path", "subscribe", "ngAfterViewInit", "setupDateFieldSubscriptions", "changes", "ngOnChanges", "simpleChanges", "newExercise", "currentValue", "hasDueDateError", "ngOnDestroy", "unsubscribe", "unsubscribeDateFieldSubscriptions", "calculateFormStatus", "datePickers", "toArray", "every", "picker", "dateInput", "valid", "ProgrammingExerciseTestScheduleDatePickerComponent", "selectedDate", "next", "forEach", "push", "valueChanges", "setTimeout", "subscription", "feedbackSuggestionModule", "newReleaseDate", "hasStartDateError", "safeStartOrReleaseDate", "updateDueDate", "newStartDate", "alert", "instant", "afterDue", "isAfter", "newReleaseOrDueDate", "hasExampleSolutionPublicationDateError", "message", "dayjs", "isSame", "selectors", "viewQuery", "rf", "ctx", "ProgrammingExerciseLifecycleComponent_Conditional_6_Template", "ProgrammingExerciseLifecycleComponent_Conditional_7_Template", "ProgrammingExerciseLifecycleComponent_Conditional_23_Template", "ProgrammingExerciseLifecycleComponent_Conditional_24_Template", "ProgrammingExerciseLifecycleComponent_Conditional_25_Template", "ProgrammingExerciseLifecycleComponent_Conditional_26_Template", "ProgrammingExerciseLifecycleComponent_Conditional_29_Template", "tmp_0_0", "runTestsAfterDueDate", "tmp_6_0", "tmp_7_0", "tmp_8_0", "FormsModule", "CheckboxControlValueAccessor", "NgControlStatus", "NgModel", "TranslateDirective", "HelpIconComponent", "FaIconComponent", "NgStyle", "ExerciseFeedbackSuggestionOptionsComponent", "AsyncPipe", "ArtemisTranslatePipe", "styles"]
}
