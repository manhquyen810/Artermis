{
  "version": 3,
  "sources": ["src/main/webapp/app/exam/manage/exercise-groups/programming-exercise-cell/programming-exercise-group-cell.component.ts", "src/main/webapp/app/exam/manage/exercise-groups/programming-exercise-cell/programming-exercise-group-cell.component.html", "src/main/webapp/app/exam/manage/exercise-groups/quiz-exercise-cell/quiz-exercise-group-cell.component.ts", "src/main/webapp/app/exam/manage/exercise-groups/quiz-exercise-cell/quiz-exercise-group-cell.component.html", "src/main/webapp/app/exam/manage/exercise-groups/modeling-exercise-cell/modeling-exercise-group-cell.component.ts", "src/main/webapp/app/exam/manage/exercise-groups/modeling-exercise-cell/modeling-exercise-group-cell.component.html", "src/main/webapp/app/exam/manage/exercise-groups/file-upload-exercise-cell/file-upload-exercise-group-cell.component.ts", "src/main/webapp/app/exam/manage/exercise-groups/file-upload-exercise-cell/file-upload-exercise-group-cell.component.html", "src/main/webapp/app/exercises/shared/exam-exercise-row-buttons/exam-exercise-row-buttons.component.ts", "src/main/webapp/app/exercises/shared/exam-exercise-row-buttons/exam-exercise-row-buttons.component.html", "src/main/webapp/app/exam/manage/exercise-groups/exercise-groups.component.ts", "src/main/webapp/app/exam/manage/exercise-groups/exercise-groups.component.html"],
  "sourcesContent": ["import { Component, OnInit, inject, input } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { ProgrammingExercise } from 'app/entities/programming/programming-exercise.model';\r\nimport { ProgrammingExerciseParticipationType } from 'app/entities/programming/programming-exercise-participation.model';\r\nimport { ProfileService } from 'app/shared/layouts/profiles/profile.service';\r\nimport { createBuildPlanUrl } from 'app/exercises/programming/shared/utils/programming-exercise.utils';\r\nimport { ProgrammingExerciseService } from 'app/exercises/programming/manage/services/programming-exercise.service';\r\nimport { downloadZipFileFromResponse } from 'app/shared/util/download.util';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { faDownload } from '@fortawesome/free-solid-svg-icons';\r\nimport { PROFILE_LOCALVC, PROFILE_THEIA } from 'app/app.constants';\r\nimport { RouterLink } from '@angular/router';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { ProgrammingExerciseInstructorStatusComponent } from 'app/exercises/programming/manage/status/programming-exercise-instructor-status.component';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { RepositoryType } from 'app/exercises/programming/shared/code-editor/model/code-editor.model';\r\n\r\n@Component({\r\n    selector: 'jhi-programming-exercise-group-cell',\r\n    templateUrl: './programming-exercise-group-cell.component.html',\r\n    styles: [':host{display: contents}'],\r\n    imports: [RouterLink, FaIconComponent, ProgrammingExerciseInstructorStatusComponent, TranslateDirective],\r\n})\r\nexport class ProgrammingExerciseGroupCellComponent implements OnInit {\r\n    private profileService = inject(ProfileService);\r\n    private programmingExerciseService = inject(ProgrammingExerciseService);\r\n    private alertService = inject(AlertService);\r\n\r\n    participationType = ProgrammingExerciseParticipationType;\r\n\r\n    protected readonly RepositoryType = RepositoryType;\r\n\r\n    localVCEnabled = false;\r\n    onlineIdeEnabled = false;\r\n\r\n    displayShortName = input(false);\r\n    displayRepositoryUri = input(false);\r\n    displayTemplateUrls = input(false);\r\n    displayEditorModus = input(false);\r\n    exercise = input.required<ProgrammingExercise>();\r\n\r\n    faDownload = faDownload;\r\n\r\n    ngOnInit(): void {\r\n        this.profileService.getProfileInfo().subscribe((profileInfo) => {\r\n            this.localVCEnabled = profileInfo.activeProfiles.includes(PROFILE_LOCALVC);\r\n            this.onlineIdeEnabled = profileInfo.activeProfiles.includes(PROFILE_THEIA);\r\n\r\n            const projectKey = this.exercise()?.projectKey;\r\n            if (projectKey) {\r\n                const solutionParticipation = this.exercise()?.solutionParticipation;\r\n                if (solutionParticipation?.buildPlanId) {\r\n                    solutionParticipation.buildPlanUrl = createBuildPlanUrl(profileInfo.buildPlanURLTemplate, projectKey, solutionParticipation.buildPlanId);\r\n                }\r\n\r\n                const templateParticipation = this.exercise()?.templateParticipation;\r\n                if (templateParticipation?.buildPlanId) {\r\n                    templateParticipation.buildPlanUrl = createBuildPlanUrl(profileInfo.buildPlanURLTemplate, projectKey, templateParticipation.buildPlanId);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Downloads the instructor repository. Used when the \"localvc\" profile is active.\r\n     * For the local VCS, linking to an external site displaying the repository does not work.\r\n     * Instead, the repository is downloaded.\r\n     *\r\n     * @param repositoryType\r\n     */\r\n    downloadRepository(repositoryType: RepositoryType): void {\r\n        const programmingExerciseId = this.exercise()?.id;\r\n        if (programmingExerciseId) {\r\n            // Repository type cannot be 'AUXILIARY' as auxiliary repositories are currently not supported for the local VCS.\r\n            this.programmingExerciseService.exportInstructorRepository(programmingExerciseId, repositoryType, undefined).subscribe((response: HttpResponse<Blob>) => {\r\n                downloadZipFileFromResponse(response);\r\n                this.alertService.success('artemisApp.programmingExercise.export.successMessageRepos');\r\n            });\r\n        }\r\n    }\r\n}\r\n", "@if (exercise()) {\r\n    @if (displayShortName()) {\r\n        <div>\r\n            {{ exercise().shortName || '' }}\r\n        </div>\r\n    }\r\n    @if (displayRepositoryUri()) {\r\n        <div>\r\n            <div>\r\n                @if (exercise().templateParticipation?.repositoryUri) {\r\n                    <!--Checks if the programming exercise has a setup with VCS and CI, if this not the case\r\n                                            the links/clone-buttons are disabled--->\r\n                    @if (!localVCEnabled) {\r\n                        <span>\r\n                            <a href=\"{{ exercise().templateParticipation?.repositoryUri || '' }}\" target=\"_blank\">Template</a>\r\n                        </span>\r\n                    } @else {\r\n                        <a [routerLink]=\"\" (click)=\"downloadRepository(RepositoryType.TEMPLATE)\"> <fa-icon [icon]=\"faDownload\" /> Template </a>\r\n                    }\r\n                }\r\n                @if (exercise().templateParticipation?.results?.length) {\r\n                    <jhi-programming-exercise-instructor-status\r\n                        [participationType]=\"participationType.TEMPLATE\"\r\n                        [participation]=\"exercise().templateParticipation!\"\r\n                        [exercise]=\"exercise()\"\r\n                    />\r\n                }\r\n            </div>\r\n            <div>\r\n                @if (exercise().solutionParticipation?.repositoryUri) {\r\n                    @if (!localVCEnabled) {\r\n                        <span>\r\n                            <a href=\"{{ exercise().solutionParticipation?.repositoryUri || '' }}\" target=\"_blank\">Solution</a>\r\n                        </span>\r\n                    } @else {\r\n                        <a [routerLink]=\"\" (click)=\"downloadRepository(RepositoryType.SOLUTION)\"> <fa-icon [icon]=\"faDownload\" /> Solution </a>\r\n                    }\r\n                }\r\n                @if (exercise().solutionParticipation?.results?.length) {\r\n                    <jhi-programming-exercise-instructor-status\r\n                        [participationType]=\"participationType.SOLUTION\"\r\n                        [participation]=\"exercise().solutionParticipation!\"\r\n                        [exercise]=\"exercise()\"\r\n                    />\r\n                }\r\n            </div>\r\n            <div>\r\n                @if (exercise().testRepositoryUri) {\r\n                    @if (!localVCEnabled) {\r\n                        <span>\r\n                            <a href=\"{{ exercise().testRepositoryUri }}\" target=\"_blank\">Test</a>\r\n                        </span>\r\n                    } @else {\r\n                        <a [routerLink]=\"\" (click)=\"downloadRepository(RepositoryType.TESTS)\"> <fa-icon [icon]=\"faDownload\" /> Test </a>\r\n                    }\r\n                }\r\n            </div>\r\n        </div>\r\n    }\r\n    @if (displayTemplateUrls()) {\r\n        <div>\r\n            @if (exercise().templateParticipation?.buildPlanId) {\r\n                <span>\r\n                    @if (!localVCEnabled) {\r\n                        <a target=\"_blank\" rel=\"noreferrer\" href=\"{{ exercise().templateParticipation!.buildPlanUrl }}\">Template</a>\r\n                    } @else {\r\n                        {{ exercise().templateParticipation!.buildPlanId }}\r\n                    }\r\n                </span>\r\n            }\r\n            <br />\r\n            @if (exercise().solutionParticipation?.buildPlanId) {\r\n                <span>\r\n                    @if (!localVCEnabled) {\r\n                        <a target=\"_blank\" rel=\"noreferrer\" href=\"{{ exercise().solutionParticipation!.buildPlanUrl }}\">Solution</a>\r\n                    } @else {\r\n                        {{ exercise().solutionParticipation!.buildPlanId }}\r\n                    }\r\n                </span>\r\n            }\r\n            <br />\r\n        </div>\r\n    }\r\n    @if (displayEditorModus()) {\r\n        <div>\r\n            <div class=\"d-flex justify-content-between\">\r\n                <span class=\"colon-suffix\" [jhiTranslate]=\"'artemisApp.programmingExercise.offlineIde'\"></span>\r\n                <span [jhiTranslate]=\"exercise().allowOfflineIde ? 'artemisApp.exercise.yes' : 'artemisApp.exercise.no'\"></span>\r\n            </div>\r\n            <div class=\"d-flex justify-content-between\">\r\n                <span class=\"colon-suffix\" [jhiTranslate]=\"'artemisApp.programmingExercise.onlineEditor'\"></span>\r\n                <span [jhiTranslate]=\"exercise().allowOnlineEditor ? 'artemisApp.exercise.yes' : 'artemisApp.exercise.no'\"></span>\r\n            </div>\r\n            @if (onlineIdeEnabled) {\r\n                <div class=\"d-flex justify-content-between\">\r\n                    <span class=\"colon-suffix\" [jhiTranslate]=\"'artemisApp.programmingExercise.onlineIde'\"></span>\r\n                    <span [jhiTranslate]=\"exercise().allowOnlineIde ? 'artemisApp.exercise.yes' : 'artemisApp.exercise.no'\"></span>\r\n                </div>\r\n            }\r\n        </div>\r\n    }\r\n}\r\n", "import { Component, input } from '@angular/core';\r\nimport { ExerciseType } from 'app/entities/exercise.model';\r\nimport { QuizExercise } from 'app/entities/quiz/quiz-exercise.model';\r\n\r\n@Component({\r\n    selector: 'jhi-quiz-exercise-group-cell',\r\n    templateUrl: './quiz-exercise-group-cell.component.html',\r\n    styles: [':host{display: contents}'],\r\n})\r\nexport class QuizExerciseGroupCellComponent {\r\n    exerciseType = ExerciseType;\r\n    exercise = input.required<QuizExercise>();\r\n}\r\n", "@if (exercise().type === exerciseType.QUIZ) {\r\n    {{ exercise().quizQuestions?.length || 0 }}\r\n}\r\n", "import { Component, input } from '@angular/core';\r\nimport { ExerciseType } from 'app/entities/exercise.model';\r\nimport { ModelingExercise } from 'app/entities/modeling-exercise.model';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-modeling-exercise-group-cell',\r\n    templateUrl: './modeling-exercise-group-cell.component.html',\r\n    styles: [':host{display: contents}'],\r\n    imports: [ArtemisTranslatePipe],\r\n})\r\nexport class ModelingExerciseGroupCellComponent {\r\n    exerciseType = ExerciseType;\r\n    exercise = input.required<ModelingExercise>();\r\n}\r\n", "@if (exercise().type === exerciseType.MODELING) {\r\n    {{ 'artemisApp.DiagramType.' + exercise().diagramType | artemisTranslate }}\r\n}\r\n", "import { Component, input } from '@angular/core';\r\nimport { ExerciseType } from 'app/entities/exercise.model';\r\nimport { FileUploadExercise } from 'app/entities/file-upload-exercise.model';\r\n\r\n@Component({\r\n    selector: 'jhi-file-upload-exercise-group-cell',\r\n    templateUrl: './file-upload-exercise-group-cell.component.html',\r\n    styles: [':host{display: contents}'],\r\n})\r\nexport class FileUploadExerciseGroupCellComponent {\r\n    exerciseType = ExerciseType;\r\n    exercise = input.required<FileUploadExercise>();\r\n}\r\n", "@if (exercise().type === exerciseType.FILE_UPLOAD) {\r\n    {{ exercise().filePattern || '' }}\r\n}\r\n", "import { Component, EventEmitter, Input, OnInit, Output, inject } from '@angular/core';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { Subject } from 'rxjs';\r\nimport { Exercise, ExerciseType } from 'app/entities/exercise.model';\r\nimport { TextExerciseService } from 'app/exercises/text/manage/text-exercise/text-exercise.service';\r\nimport { FileUploadExerciseService } from 'app/exercises/file-upload/manage/file-upload-exercise.service';\r\nimport { QuizExerciseService } from 'app/exercises/quiz/manage/quiz-exercise.service';\r\nimport { ProgrammingExerciseService } from 'app/exercises/programming/manage/services/programming-exercise.service';\r\nimport { ModelingExerciseService } from 'app/exercises/modeling/manage/modeling-exercise.service';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { Exam } from 'app/entities/exam/exam.model';\r\nimport dayjs from 'dayjs/esm';\r\nimport { QuizExercise } from 'app/entities/quiz/quiz-exercise.model';\r\nimport { EventManager } from 'app/core/util/event-manager.service';\r\nimport { faBook, faExclamationTriangle, faEye, faFileExport, faFileSignature, faPencilAlt, faSignal, faTable, faTrash, faUsers, faWrench } from '@fortawesome/free-solid-svg-icons';\r\nimport { faListAlt } from '@fortawesome/free-regular-svg-icons';\r\nimport { PROFILE_LOCALCI, PROFILE_LOCALVC } from 'app/app.constants';\r\nimport { ProfileService } from 'app/shared/layouts/profiles/profile.service';\r\nimport { RouterLink } from '@angular/router';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { DeleteButtonDirective } from 'app/shared/delete-dialog/delete-button.directive';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\nimport { RepositoryType } from 'app/exercises/programming/shared/code-editor/model/code-editor.model';\r\n\r\n@Component({\r\n    selector: 'jhi-exam-exercise-row-buttons',\r\n    templateUrl: './exam-exercise-row-buttons.component.html',\r\n    imports: [RouterLink, FaIconComponent, TranslateDirective, NgbTooltip, DeleteButtonDirective, ArtemisTranslatePipe],\r\n})\r\nexport class ExamExerciseRowButtonsComponent implements OnInit {\r\n    private textExerciseService = inject(TextExerciseService);\r\n    private fileUploadExerciseService = inject(FileUploadExerciseService);\r\n    private programmingExerciseService = inject(ProgrammingExerciseService);\r\n    private modelingExerciseService = inject(ModelingExerciseService);\r\n    private quizExerciseService = inject(QuizExerciseService);\r\n    private eventManager = inject(EventManager);\r\n    private profileService = inject(ProfileService);\r\n\r\n    @Input() course: Course;\r\n    @Input() exercise: Exercise;\r\n    @Input() exam: Exam;\r\n    @Input() exerciseGroupId: number;\r\n    @Input() latestIndividualEndDate: dayjs.Dayjs | undefined;\r\n    @Output() onDeleteExercise = new EventEmitter<void>();\r\n    private dialogErrorSource = new Subject<string>();\r\n    dialogError$ = this.dialogErrorSource.asObservable();\r\n    exerciseType = ExerciseType;\r\n\r\n    // Icons\r\n    faTrash = faTrash;\r\n    faBook = faBook;\r\n    faEye = faEye;\r\n    faWrench = faWrench;\r\n    faUsers = faUsers;\r\n    faTable = faTable;\r\n    faExclamationTriangle = faExclamationTriangle;\r\n    faSignal = faSignal;\r\n    faPencilAlt = faPencilAlt;\r\n    faFileExport = faFileExport;\r\n    faFileSignature = faFileSignature;\r\n    farListAlt = faListAlt;\r\n\r\n    localVCEnabled = false;\r\n    localCIEnabled = false;\r\n\r\n    ngOnInit(): void {\r\n        this.profileService.getProfileInfo().subscribe((profileInfo) => {\r\n            this.localVCEnabled = profileInfo.activeProfiles.includes(PROFILE_LOCALVC);\r\n            this.localCIEnabled = profileInfo.activeProfiles.includes(PROFILE_LOCALCI);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Checks whether the exam is over using the latestIndividualEndDate\r\n     */\r\n    isExamOver() {\r\n        return this.latestIndividualEndDate ? this.latestIndividualEndDate.isBefore(dayjs()) : false;\r\n    }\r\n\r\n    /**\r\n     * Checks whether the exam has started\r\n     */\r\n    hasExamStarted() {\r\n        return this.exam.startDate ? this.exam.startDate.isBefore(dayjs()) : false;\r\n    }\r\n\r\n    /**\r\n     * Deletes an exercise. ExerciseType is used to choose the right service for deletion.\r\n     */\r\n    deleteExercise() {\r\n        switch (this.exercise.type) {\r\n            case ExerciseType.TEXT:\r\n                this.deleteTextExercise();\r\n                break;\r\n            case ExerciseType.FILE_UPLOAD:\r\n                this.deleteFileUploadExercise();\r\n                break;\r\n            case ExerciseType.QUIZ:\r\n                this.deleteQuizExercise();\r\n                break;\r\n            case ExerciseType.MODELING:\r\n                this.deleteModelingExercise();\r\n                break;\r\n        }\r\n    }\r\n\r\n    private deleteTextExercise() {\r\n        this.textExerciseService.delete(this.exercise.id!).subscribe({\r\n            next: () => {\r\n                this.eventManager.broadcast({\r\n                    name: 'textExerciseListModification',\r\n                    content: 'Deleted a textExercise',\r\n                });\r\n                this.dialogErrorSource.next('');\r\n                this.onDeleteExercise.emit();\r\n            },\r\n            error: (error: HttpErrorResponse) => this.dialogErrorSource.next(error.message),\r\n        });\r\n    }\r\n\r\n    private deleteModelingExercise() {\r\n        this.modelingExerciseService.delete(this.exercise.id!).subscribe({\r\n            next: () => {\r\n                this.eventManager.broadcast({\r\n                    name: 'modelingExerciseListModification',\r\n                    content: 'Deleted a modelingExercise',\r\n                });\r\n                this.dialogErrorSource.next('');\r\n                this.onDeleteExercise.emit();\r\n            },\r\n            error: (error: HttpErrorResponse) => this.dialogErrorSource.next(error.message),\r\n        });\r\n    }\r\n\r\n    private deleteFileUploadExercise() {\r\n        this.fileUploadExerciseService.delete(this.exercise.id!).subscribe({\r\n            next: () => {\r\n                this.eventManager.broadcast({\r\n                    name: 'fileUploadExerciseListModification',\r\n                    content: 'Deleted a fileUploadExercise',\r\n                });\r\n                this.dialogErrorSource.next('');\r\n                this.onDeleteExercise.emit();\r\n            },\r\n            error: (error: HttpErrorResponse) => this.dialogErrorSource.next(error.message),\r\n        });\r\n    }\r\n\r\n    private deleteQuizExercise() {\r\n        this.quizExerciseService.delete(this.exercise.id!).subscribe({\r\n            next: () => {\r\n                this.eventManager.broadcast({\r\n                    name: 'quizExerciseListModification',\r\n                    content: 'Deleted a quiz',\r\n                });\r\n                this.dialogErrorSource.next('');\r\n                this.onDeleteExercise.emit();\r\n            },\r\n            error: (error: HttpErrorResponse) => this.dialogErrorSource.next(error.message),\r\n        });\r\n    }\r\n\r\n    public deleteProgrammingExercise(event: { [key: string]: boolean }) {\r\n        this.programmingExerciseService.delete(this.exercise.id!, event.deleteStudentReposBuildPlans, event.deleteBaseReposBuildPlans).subscribe({\r\n            next: () => {\r\n                this.eventManager.broadcast({\r\n                    name: 'programmingExerciseListModification',\r\n                    content: 'Deleted a programming exercise',\r\n                });\r\n                this.dialogErrorSource.next('');\r\n                this.onDeleteExercise.emit();\r\n            },\r\n            error: (error: HttpErrorResponse) => this.dialogErrorSource.next(error.message),\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Exports questions for the given quiz exercise in json file\r\n     * @param exportAll If true exports all questions, else exports only those whose export flag is true\r\n     */\r\n    exportQuizById(exportAll: boolean) {\r\n        this.quizExerciseService.find(this.exercise.id!).subscribe((res: HttpResponse<QuizExercise>) => {\r\n            const exercise = res.body!;\r\n            this.quizExerciseService.exportQuiz(exercise.quizQuestions, exportAll, exercise.title);\r\n        });\r\n    }\r\n\r\n    protected readonly RepositoryType = RepositoryType;\r\n}\r\n", "<div class=\"btn-group flex-btn-group-container\">\r\n    @if (course.isAtLeastInstructor) {\r\n        <a\r\n            [routerLink]=\"['/course-management', course.id, 'exams', exam.id, 'exercise-groups', exerciseGroupId, exercise.type + '-exercises', exercise.id, 'participations']\"\r\n            class=\"btn btn-primary btn-sm me-1\"\r\n        >\r\n            <fa-icon [icon]=\"farListAlt\" />\r\n            <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.exercise.participations\"></span>\r\n        </a>\r\n    }\r\n    @if (course.isAtLeastInstructor) {\r\n        <a\r\n            [routerLink]=\"['/course-management', course.id, 'exams', exam.id, 'exercise-groups', exerciseGroupId, exercise.type + '-exercises', exercise.id, 'scores']\"\r\n            class=\"btn btn-info btn-sm me-1\"\r\n        >\r\n            <fa-icon [icon]=\"faTable\" />\r\n            <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.scores\"></span>\r\n        </a>\r\n    }\r\n    @if (course.isAtLeastEditor && exercise.type === exerciseType.PROGRAMMING) {\r\n        <a\r\n            [routerLink]=\"['/course-management', course.id, 'exams', exam.id, 'exercise-groups', exerciseGroupId, 'programming-exercises', exercise.id, 'grading', 'test-cases']\"\r\n            class=\"btn btn-warning btn-sm me-1\"\r\n        >\r\n            <fa-icon [icon]=\"faFileSignature\" />\r\n            <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.programmingExercise.configureGrading.shortTitle\"></span>\r\n        </a>\r\n    }\r\n    <!-- Example Submission -->\r\n    @if (course.isAtLeastEditor && exercise.type !== exerciseType.QUIZ && exercise.type !== exerciseType.PROGRAMMING && exercise.type !== exerciseType.FILE_UPLOAD) {\r\n        <a\r\n            [routerLink]=\"['/course-management', course.id, 'exams', exam.id, 'exercise-groups', exerciseGroupId, exercise.type + '-exercises', exercise.id, 'example-submissions']\"\r\n            class=\"btn btn-success btn-sm me-1\"\r\n        >\r\n            <fa-icon [icon]=\"faBook\" />\r\n            <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.exampleSubmissions\"></span>\r\n        </a>\r\n    }\r\n    @if (course.isAtLeastInstructor && exercise.type === exerciseType.QUIZ) {\r\n        <a\r\n            [routerLink]=\"['/course-management', course.id, 'exams', exam.id, 'exercise-groups', exerciseGroupId, 'quiz-exercises', exercise.id, 'quiz-point-statistic']\"\r\n            class=\"btn btn-info btn-sm me-1\"\r\n        >\r\n            <fa-icon [icon]=\"faSignal\" />\r\n            <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.quizExercise.statistics\"></span>\r\n        </a>\r\n    }\r\n    @if (course.isAtLeastInstructor && exercise.teamMode) {\r\n        <a [routerLink]=\"['/course-management', course.id, 'exercises', exercise.id, 'teams']\" class=\"btn btn-primary btn-sm me-1\">\r\n            <fa-icon [icon]=\"faUsers\" />\r\n            <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.exercise.teams\"></span>\r\n        </a>\r\n    }\r\n    <!-- The route expects a preferred participationId. As we only have Exercises and not ProgrammingExercises with\r\n  participation, we pass a hardcoded number. The code editor component will load the proper ProgrammingExercise, choose\r\n  a participation and update the url displayed in the browser -->\r\n    @if (course.isAtLeastEditor && exercise.type === exerciseType.PROGRAMMING) {\r\n        <a [routerLink]=\"['/course-management', course.id, 'programming-exercises', exercise.id, 'code-editor', RepositoryType.TEMPLATE, -1]\" class=\"btn btn-warning btn-sm me-1\">\r\n            <fa-icon [icon]=\"faPencilAlt\" />\r\n            <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.editInEditor\"></span>\r\n        </a>\r\n    }\r\n    @if (course.isAtLeastEditor && exercise.type === exerciseType.QUIZ) {\r\n        <a\r\n            [routerLink]=\"['/course-management', course.id, 'exams', exam.id, 'exercise-groups', exerciseGroupId, 'quiz-exercises', exercise.id, 'preview']\"\r\n            class=\"btn btn-success btn-sm me-1\"\r\n        >\r\n            <fa-icon [icon]=\"faEye\" />\r\n            <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.quizExercise.preview\"></span>\r\n        </a>\r\n    }\r\n    @if (course.isAtLeastEditor && exercise.type === exerciseType.QUIZ) {\r\n        <a\r\n            [routerLink]=\"['/course-management', course.id, 'exams', exam.id, 'exercise-groups', exerciseGroupId, 'quiz-exercises', exercise.id, 'solution']\"\r\n            class=\"btn btn-success btn-sm me-1\"\r\n        >\r\n            <fa-icon [icon]=\"faEye\" />\r\n            <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.quizExercise.solution\"></span>\r\n        </a>\r\n    }\r\n    @if (course.isAtLeastEditor && exercise.type === exerciseType.QUIZ) {\r\n        <button class=\"btn btn-warning btn-sm me-1\" (click)=\"exportQuizById(true)\">\r\n            <fa-icon [icon]=\"faFileExport\" />\r\n            <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.export\"></span>\r\n        </button>\r\n    }\r\n    <!-- Edit or re-evaluate for quizzes -->\r\n    @if (course.isAtLeastEditor && exercise.type === exerciseType.QUIZ) {\r\n        <!-- Only show the re-evaluate button after the exam has ended -->\r\n        @if (isExamOver() && course.isAtLeastInstructor) {\r\n            <a\r\n                [routerLink]=\"['/course-management', course.id, 'exams', exam.id, 'exercise-groups', exerciseGroupId, 'quiz-exercises', exercise.id, 're-evaluate']\"\r\n                class=\"btn btn-warning btn-sm me-1\"\r\n            >\r\n                <fa-icon [icon]=\"faWrench\" />\r\n                <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.re-evaluate\"></span>\r\n            </a>\r\n        }\r\n        <!-- Only show the edit button if the exam has not ended. Disable the button if the exam is running -->\r\n        @if (!isExamOver()) {\r\n            <div style=\"display: flex\">\r\n                <!-- Display a warning next to the edit button if test run participations for this exercise exist -->\r\n                @if (exercise.testRunParticipationsExist) {\r\n                    <fa-icon\r\n                        style=\"margin: 0.3em\"\r\n                        [icon]=\"faExclamationTriangle\"\r\n                        class=\"text-warning\"\r\n                        [ngbTooltip]=\"'artemisApp.quizExercise.edit.testRunSubmissionsExist' | artemisTranslate\"\r\n                    />\r\n                }\r\n                <a\r\n                    [class.disabled]=\"hasExamStarted()\"\r\n                    [routerLink]=\"['/course-management', course.id, 'exams', exam.id, 'exercise-groups', exerciseGroupId, exercise.type + '-exercises', exercise.id, 'edit']\"\r\n                    class=\"btn btn-warning btn-sm me-1\"\r\n                >\r\n                    <fa-icon [icon]=\"faWrench\" />\r\n                    <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.edit\"></span>\r\n                </a>\r\n            </div>\r\n        }\r\n    }\r\n    @if (course.isAtLeastEditor && exercise.type !== exerciseType.QUIZ) {\r\n        <a\r\n            [routerLink]=\"['/course-management', course.id, 'exams', exam.id, 'exercise-groups', exerciseGroupId, exercise.type + '-exercises', exercise.id, 'edit']\"\r\n            class=\"btn btn-warning btn-sm me-1\"\r\n        >\r\n            <fa-icon [icon]=\"faWrench\" />\r\n            <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.edit\"></span>\r\n        </a>\r\n    }\r\n    @if (course.isAtLeastInstructor && exercise.type !== exerciseType.PROGRAMMING) {\r\n        <button\r\n            jhiDeleteButton\r\n            [entityTitle]=\"exercise.title || ''\"\r\n            deleteQuestion=\"artemisApp.exercise.delete.question\"\r\n            deleteConfirmationText=\"artemisApp.exercise.delete.typeNameToConfirm\"\r\n            (delete)=\"deleteExercise()\"\r\n            [dialogError]=\"dialogError$\"\r\n        >\r\n            <fa-icon [icon]=\"faTrash\" />\r\n        </button>\r\n    }\r\n    @if (course.isAtLeastInstructor && exercise.type === exerciseType.PROGRAMMING) {\r\n        <button\r\n            jhiDeleteButton\r\n            [entityTitle]=\"exercise.title || ''\"\r\n            deleteQuestion=\"{{ localVCEnabled ? 'artemisApp.programmingExercise.delete.questionLocalVC.single' : 'artemisApp.programmingExercise.delete.question' }}\"\r\n            (delete)=\"deleteProgrammingExercise($event)\"\r\n            [dialogError]=\"dialogError$\"\r\n            deleteConfirmationText=\"artemisApp.exercise.delete.typeNameToConfirm\"\r\n            [additionalChecks]=\"\r\n                localCIEnabled\r\n                    ? {}\r\n                    : {\r\n                          deleteStudentReposBuildPlans: 'artemisApp.programmingExercise.delete.studentReposBuildPlans',\r\n                          deleteBaseReposBuildPlans: 'artemisApp.programmingExercise.delete.baseReposBuildPlans',\r\n                      }\r\n            \"\r\n        >\r\n            <fa-icon [icon]=\"faTrash\" />\r\n        </button>\r\n    }\r\n</div>\r\n", "import { Component, OnInit, inject } from '@angular/core';\r\nimport { ActivatedRoute, Router, RouterLink } from '@angular/router';\r\nimport { Subject, forkJoin, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { ExerciseGroupService } from 'app/exam/manage/exercise-groups/exercise-group.service';\r\nimport { ExerciseGroup } from 'app/entities/exercise-group.model';\r\nimport { Exercise, ExerciseType } from 'app/entities/exercise.model';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { onError } from 'app/shared/util/global.utils';\r\nimport { ExamManagementService } from 'app/exam/manage/exam-management.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { Exam } from 'app/entities/exam/exam.model';\r\nimport dayjs from 'dayjs/esm';\r\nimport { ExerciseService } from 'app/exercises/shared/exercise/exercise.service';\r\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { EventManager } from 'app/core/util/event-manager.service';\r\nimport {\r\n    faAngleDown,\r\n    faAngleUp,\r\n    faCheckDouble,\r\n    faFileImport,\r\n    faFileUpload,\r\n    faFont,\r\n    faKeyboard,\r\n    faPlus,\r\n    faProjectDiagram,\r\n    faTrash,\r\n    faWrench,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { ExamImportComponent } from 'app/exam/manage/exams/exam-import/exam-import.component';\r\nimport { ExerciseImportWrapperComponent } from 'app/exercises/shared/import/exercise-import-wrapper/exercise-import-wrapper.component';\r\nimport { ProfileService } from 'app/shared/layouts/profiles/profile.service';\r\nimport { PROFILE_LOCALCI, PROFILE_LOCALVC } from 'app/app.constants';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { HelpIconComponent } from 'app/shared/components/help-icon.component';\r\nimport { DeleteButtonDirective } from 'app/shared/delete-dialog/delete-button.directive';\r\nimport { ProgrammingExerciseGroupCellComponent } from './programming-exercise-cell/programming-exercise-group-cell.component';\r\nimport { QuizExerciseGroupCellComponent } from './quiz-exercise-cell/quiz-exercise-group-cell.component';\r\nimport { ModelingExerciseGroupCellComponent } from './modeling-exercise-cell/modeling-exercise-group-cell.component';\r\nimport { FileUploadExerciseGroupCellComponent } from './file-upload-exercise-cell/file-upload-exercise-group-cell.component';\r\nimport { ExamExerciseRowButtonsComponent } from 'app/exercises/shared/exam-exercise-row-buttons/exam-exercise-row-buttons.component';\r\nimport { LowerCasePipe } from '@angular/common';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-exercise-groups',\r\n    templateUrl: './exercise-groups.component.html',\r\n    styleUrls: ['./exercise-groups.component.scss'],\r\n    imports: [\r\n        TranslateDirective,\r\n        FaIconComponent,\r\n        RouterLink,\r\n        HelpIconComponent,\r\n        DeleteButtonDirective,\r\n        ProgrammingExerciseGroupCellComponent,\r\n        QuizExerciseGroupCellComponent,\r\n        ModelingExerciseGroupCellComponent,\r\n        FileUploadExerciseGroupCellComponent,\r\n        ExamExerciseRowButtonsComponent,\r\n        LowerCasePipe,\r\n        ArtemisTranslatePipe,\r\n    ],\r\n})\r\nexport class ExerciseGroupsComponent implements OnInit {\r\n    private route = inject(ActivatedRoute);\r\n    private exerciseGroupService = inject(ExerciseGroupService);\r\n    exerciseService = inject(ExerciseService);\r\n    private examManagementService = inject(ExamManagementService);\r\n    private eventManager = inject(EventManager);\r\n    private alertService = inject(AlertService);\r\n    private modalService = inject(NgbModal);\r\n    private router = inject(Router);\r\n    private profileService = inject(ProfileService);\r\n\r\n    courseId: number;\r\n    course: Course;\r\n    examId: number;\r\n    exam: Exam;\r\n    exerciseGroups?: ExerciseGroup[];\r\n    dialogErrorSource = new Subject<string>();\r\n    dialogError = this.dialogErrorSource.asObservable();\r\n    exerciseType = ExerciseType;\r\n    latestIndividualEndDate?: dayjs.Dayjs;\r\n    exerciseGroupToExerciseTypesDict = new Map<number, ExerciseType[]>();\r\n\r\n    localVCEnabled = false;\r\n    localCIEnabled = false;\r\n\r\n    // Icons\r\n    faPlus = faPlus;\r\n    faTrash = faTrash;\r\n    faFont = faFont;\r\n    faWrench = faWrench;\r\n    faCheckDouble = faCheckDouble;\r\n    faFileUpload = faFileUpload;\r\n    faKeyboard = faKeyboard;\r\n    faProjectDiagram = faProjectDiagram;\r\n    faAngleUp = faAngleUp;\r\n    faAngleDown = faAngleDown;\r\n    faFileImport = faFileImport;\r\n\r\n    /**\r\n     * Initialize the courseId and examId. Get all exercise groups for the exam. Setup dictionary for exercise groups which contain programming exercises.\r\n     * See {@link setupExerciseGroupToExerciseTypesDict}.\r\n     */\r\n    ngOnInit(): void {\r\n        this.courseId = Number(this.route.snapshot.paramMap.get('courseId'));\r\n        this.examId = Number(this.route.snapshot.paramMap.get('examId'));\r\n        // Only take action when a response was received for both requests\r\n        forkJoin([this.loadExerciseGroups(), this.loadLatestIndividualEndDateOfExam()]).subscribe({\r\n            next: ([examRes, examInfoDTO]) => {\r\n                this.exam = examRes.body!;\r\n                this.exerciseGroups = this.exam.exerciseGroups;\r\n                this.course = this.exam.course!;\r\n                this.latestIndividualEndDate = examInfoDTO ? examInfoDTO.body!.latestIndividualEndDate : undefined;\r\n                this.setupExerciseGroupToExerciseTypesDict();\r\n            },\r\n            error: (res: HttpErrorResponse) => onError(this.alertService, res),\r\n        });\r\n        this.profileService.getProfileInfo().subscribe((profileInfo) => {\r\n            this.localVCEnabled = profileInfo.activeProfiles.includes(PROFILE_LOCALVC);\r\n            this.localCIEnabled = profileInfo.activeProfiles.includes(PROFILE_LOCALCI);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Load the latest individual end date of the exam. If this the HTTP response is erroneous, an observables emitting\r\n     * null will be returned\r\n     */\r\n    loadLatestIndividualEndDateOfExam() {\r\n        return this.examManagementService.getLatestIndividualEndDateOfExam(this.courseId, this.examId).pipe(\r\n            // When the exam start date was not set properly an error will be thrown.\r\n            // Catch this in the inner observable otherwise forkJoin won't return data\r\n            catchError(() => {\r\n                return of(null);\r\n            }),\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Load all exercise groups of the current exam.\r\n     */\r\n    loadExerciseGroups() {\r\n        return this.examManagementService.find(this.courseId, this.examId, false, true);\r\n    }\r\n\r\n    /**\r\n     * Remove the exercise with the given exerciseId from the exercise group with the given exerciseGroupId. In case the removed exercise was a Programming Exercise,\r\n     * it calls {@link setupExerciseGroupToExerciseTypesDict} to update the dictionary\r\n     * @param exerciseId\r\n     * @param exerciseGroupId\r\n     */\r\n    removeExercise(exerciseId: number, exerciseGroupId: number) {\r\n        if (this.exerciseGroups) {\r\n            this.exerciseGroups.forEach((exerciseGroup) => {\r\n                if (exerciseGroup.id === exerciseGroupId && exerciseGroup.exercises && exerciseGroup.exercises.length > 0) {\r\n                    exerciseGroup.exercises = exerciseGroup.exercises.filter((exercise) => exercise.id !== exerciseId);\r\n                    this.setupExerciseGroupToExerciseTypesDict();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Delete the exercise group with the given id.\r\n     * @param exerciseGroupId {number}\r\n     * @param event representation of users choices to delete the student repositories and base repositories\r\n     */\r\n    deleteExerciseGroup(exerciseGroupId: number, event: { [key: string]: boolean }) {\r\n        this.exerciseGroupService.delete(this.courseId, this.examId, exerciseGroupId, event.deleteStudentReposBuildPlans, event.deleteBaseReposBuildPlans).subscribe({\r\n            next: () => {\r\n                this.eventManager.broadcast({\r\n                    name: 'exerciseGroupOverviewModification',\r\n                    content: 'Deleted an exercise group',\r\n                });\r\n                this.dialogErrorSource.next('');\r\n                this.exerciseGroups = this.exerciseGroups!.filter((exerciseGroup) => exerciseGroup.id !== exerciseGroupId);\r\n                this.exerciseGroupToExerciseTypesDict.delete(exerciseGroupId);\r\n            },\r\n            error: (error: HttpErrorResponse) => this.dialogErrorSource.next(error.message),\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get an icon for the type of the given exercise.\r\n     * @param exercise {Exercise}\r\n     */\r\n    exerciseIcon(exercise: Exercise): IconProp {\r\n        switch (exercise.type) {\r\n            case ExerciseType.QUIZ:\r\n                return faCheckDouble;\r\n            case ExerciseType.FILE_UPLOAD:\r\n                return faFileUpload;\r\n            case ExerciseType.MODELING:\r\n                return faProjectDiagram;\r\n            case ExerciseType.PROGRAMMING:\r\n                return faKeyboard;\r\n            default:\r\n                return faFont;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Opens the import module for a specific exercise type\r\n     * @param exerciseGroup The current exercise group\r\n     * @param exerciseType The exercise type you want to import\r\n     */\r\n    openImportModal(exerciseGroup: ExerciseGroup, exerciseType: ExerciseType) {\r\n        const importBaseRoute = ['/course-management', this.courseId, 'exams', this.examId, 'exercise-groups', exerciseGroup.id, `${exerciseType}-exercises`];\r\n\r\n        const importModalRef = this.modalService.open(ExerciseImportWrapperComponent, {\r\n            size: 'lg',\r\n            backdrop: 'static',\r\n        });\r\n        importModalRef.componentInstance.exerciseType = exerciseType;\r\n        importModalRef.result.then((result: Exercise) => {\r\n            if (result.id) {\r\n                importBaseRoute.push('import', result.id);\r\n                this.router.navigate(importBaseRoute);\r\n            } else {\r\n                // we know it must be a programming exercise, because only programming exercises can be imported from a file\r\n                importBaseRoute.push('import-from-file');\r\n                this.router.navigate(importBaseRoute, {\r\n                    state: {\r\n                        programmingExerciseForImportFromFile: result,\r\n                    },\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Move the exercise group up one position in the order\r\n     * @param index of the exercise group in the exerciseGroups array\r\n     */\r\n    moveUp(index: number): void {\r\n        if (this.exerciseGroups) {\r\n            [this.exerciseGroups[index], this.exerciseGroups[index - 1]] = [this.exerciseGroups[index - 1], this.exerciseGroups[index]];\r\n        }\r\n        this.saveOrder();\r\n    }\r\n\r\n    /**\r\n     * Move the exercise group down one position in the order\r\n     * @param index of the exercise group in the exerciseGroups array\r\n     */\r\n    moveDown(index: number): void {\r\n        if (this.exerciseGroups) {\r\n            [this.exerciseGroups[index], this.exerciseGroups[index + 1]] = [this.exerciseGroups[index + 1], this.exerciseGroups[index]];\r\n        }\r\n        this.saveOrder();\r\n    }\r\n\r\n    private saveOrder(): void {\r\n        this.examManagementService.updateOrder(this.courseId, this.examId, this.exerciseGroups!).subscribe({\r\n            next: (res) => (this.exerciseGroups = res.body!),\r\n            error: () => this.alertService.error('artemisApp.examManagement.exerciseGroup.orderCouldNotBeSaved'),\r\n        });\r\n    }\r\n\r\n    /**\r\n     * sets up {@link exerciseGroupToExerciseTypesDict} that maps the exercise group id to whether the said exercise group contains a specific exercise type.\r\n     * Used to show the correct modal for deleting exercises and to show only relevant information in the exercise tables.\r\n     * E.g. in case programming exercises are present, the user must decide whether (s)he wants to delete the build plans.\r\n     */\r\n    setupExerciseGroupToExerciseTypesDict() {\r\n        this.exerciseGroupToExerciseTypesDict = new Map<number, ExerciseType[]>();\r\n        if (!this.exerciseGroups) {\r\n            return;\r\n        } else {\r\n            for (const exerciseGroup of this.exerciseGroups) {\r\n                this.exerciseGroupToExerciseTypesDict.set(exerciseGroup.id!, []);\r\n                if (exerciseGroup.exercises) {\r\n                    for (const exercise of exerciseGroup.exercises) {\r\n                        this.exerciseGroupToExerciseTypesDict.get(exerciseGroup.id!)!.push(exercise.type!);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Opens the import module for an exam import\r\n     */\r\n    openExerciseGroupImportModal() {\r\n        const examImportModalRef = this.modalService.open(ExamImportComponent, {\r\n            size: 'xl',\r\n            backdrop: 'static',\r\n        });\r\n        // The Exercise Group selection is performed within the exam-update.component afterwards\r\n        examImportModalRef.componentInstance.subsequentExerciseGroupSelection.set(true);\r\n        examImportModalRef.componentInstance.targetCourseId.set(this.courseId);\r\n        examImportModalRef.componentInstance.targetExamId.set(this.examId);\r\n\r\n        examImportModalRef.result.then((exerciseGroups: ExerciseGroup[]) => {\r\n            if (exerciseGroups) {\r\n                this.exerciseGroups = exerciseGroups;\r\n                this.alertService.success('artemisApp.examManagement.exerciseGroup.importSuccessful');\r\n            }\r\n        });\r\n    }\r\n}\r\n", "<div class=\"d-flex pb-3 border-bottom mb-2\">\r\n    <div class=\"d-flex flex-column justify-content-center\">\r\n        <h4 class=\"mb-0\" jhiTranslate=\"artemisApp.examManagement.exerciseGroups\"></h4>\r\n    </div>\r\n    @if (course?.isAtLeastEditor) {\r\n        <div class=\"ms-auto d-flex flex-wrap\">\r\n            <a class=\"btn btn-primary me-1\" id=\"import-group\" (click)=\"openExerciseGroupImportModal()\">\r\n                <fa-icon [icon]=\"faFileImport\" />\r\n                <span class=\"hidden-sm-down\" jhiTranslate=\"artemisApp.examManagement.exerciseGroup.import\"></span>\r\n            </a>\r\n            <a class=\"btn btn-primary jh-create-entity create-course\" id=\"create-new-group\" routerLink=\"new\">\r\n                <fa-icon [icon]=\"faPlus\" />\r\n                <span class=\"hidden-sm-down\" jhiTranslate=\"artemisApp.examManagement.exerciseGroup.create\"></span>\r\n            </a>\r\n        </div>\r\n    }\r\n</div>\r\n<div class=\"mt-3 text-end\" id=\"number-groups\" style=\"font-size: 0.85rem\">\r\n    {{ 'artemisApp.examManagement.numberOfExerciseGroups' | artemisTranslate }} {{ exerciseGroups ? exerciseGroups.length : 0 }}\r\n</div>\r\n@for (exerciseGroup of exerciseGroups; track exerciseGroup; let i = $index) {\r\n    <div class=\"exercise-group mt-3\" id=\"{{ 'group-' + exerciseGroup.id }}\">\r\n        <div class=\"d-flex p-3 header flex-wrap\">\r\n            <div class=\"me-3 d-flex justify-content-center\" style=\"align-items: center\">\r\n                <a (click)=\"moveUp(i)\" [class.disabled]=\"i === 0\" class=\"border-0 p-0 me-1 bg-transparent\">\r\n                    <fa-icon [icon]=\"faAngleUp\" style=\"font-size: 1.3rem\" />\r\n                </a>\r\n                <a (click)=\"moveDown(i)\" [class.disabled]=\"i >= exerciseGroups!.length - 1\" class=\"border-0 p-0 bg-transparent\">\r\n                    <fa-icon [icon]=\"faAngleDown\" style=\"font-size: 1.3rem\" />\r\n                </a>\r\n            </div>\r\n            <div class=\"d-flex flex-column justify-content-center\">\r\n                <h5 class=\"group-title font-weight-bold mb-0\">{{ exerciseGroup.title }}</h5>\r\n            </div>\r\n            <div class=\"d-flex flex-column justify-content-center ms-1\">\r\n                <jhi-help-icon text=\"artemisApp.examManagement.exerciseGroup.titleInfo\" />\r\n            </div>\r\n            <div class=\"d-flex flex-column justify-content-center ms-3\">\r\n                <span class=\"d-block rounded px-2 py-1 opt-badge\" style=\"font-size: 0.85rem\">\r\n                    {{\r\n                        (exerciseGroup.isMandatory ? 'artemisApp.examManagement.exerciseGroup.mandatory' : 'artemisApp.examManagement.exerciseGroup.optional')\r\n                            | artemisTranslate\r\n                            | lowercase\r\n                    }}\r\n                </span>\r\n            </div>\r\n            <div class=\"d-flex justify-content-end\" style=\"flex: 1\">\r\n                <div class=\"d-flex flex-column justify-content-center\">\r\n                    <div class=\"btn-group flex-btn-group-container\">\r\n                        @if (course?.isAtLeastEditor) {\r\n                            <div class=\"btn-group-vertical me-1 mb-1\" style=\"justify-content: end\">\r\n                                <a [routerLink]=\"[exerciseGroup.id, 'file-upload-exercises', 'new']\" class=\"btn btn-info btn-sm me-1 mb-1\" style=\"max-height: 44%\">\r\n                                    <fa-icon [icon]=\"faPlus\" />\r\n                                    <span class=\"d-none d-xl-inline\" jhiTranslate=\"artemisApp.fileUploadExercise.home.createLabel\"></span>\r\n                                    <fa-icon [icon]=\"faFileUpload\" />\r\n                                </a>\r\n                                <a (click)=\"openImportModal(exerciseGroup, exerciseType.FILE_UPLOAD)\" class=\"btn btn-info btn-sm me-1 mb-1\">\r\n                                    <fa-icon [icon]=\"faFileImport\" />\r\n                                    <span class=\"d-none d-xl-inline\" jhiTranslate=\"artemisApp.fileUploadExercise.home.importLabel\"></span>\r\n                                    <fa-icon [icon]=\"faFileUpload\" />\r\n                                </a>\r\n                            </div>\r\n                        }\r\n                        @if (course?.isAtLeastEditor) {\r\n                            <div class=\"btn-group-vertical me-1 mb-1\" style=\"justify-content: end\">\r\n                                <a [routerLink]=\"[exerciseGroup.id, 'quiz-exercises', 'new']\" class=\"add-quiz-exercise btn btn-info btn-sm me-1 mb-1\" style=\"max-height: 44%\">\r\n                                    <fa-icon [icon]=\"faPlus\" />\r\n                                    <span class=\"d-none d-xl-inline\" jhiTranslate=\"artemisApp.quizExercise.home.createLabel\"></span>\r\n                                    <fa-icon [icon]=\"faCheckDouble\" />\r\n                                </a>\r\n                                <a (click)=\"openImportModal(exerciseGroup, exerciseType.QUIZ)\" class=\"btn btn-info btn-sm me-1 mb-1\">\r\n                                    <fa-icon [icon]=\"faFileImport\" />\r\n                                    <span class=\"d-none d-xl-inline\" jhiTranslate=\"artemisApp.quizExercise.home.importLabel\"></span>\r\n                                    <fa-icon [icon]=\"faCheckDouble\" />\r\n                                </a>\r\n                            </div>\r\n                        }\r\n                        @if (course?.isAtLeastEditor) {\r\n                            <div class=\"btn-group-vertical me-1 mb-1\">\r\n                                <a [routerLink]=\"[exerciseGroup.id, 'text-exercises', 'new']\" class=\"add-text-exercise btn btn-info btn-sm me-1 mb-1\">\r\n                                    <fa-icon [icon]=\"faPlus\" />\r\n                                    <span class=\"d-none d-xl-inline\" jhiTranslate=\"artemisApp.textExercise.home.createLabel\"></span>\r\n                                    <fa-icon [icon]=\"faFont\" />\r\n                                </a>\r\n                                <a (click)=\"openImportModal(exerciseGroup, exerciseType.TEXT)\" class=\"btn btn-info btn-sm me-1 mb-1\">\r\n                                    <fa-icon [icon]=\"faFileImport\" />\r\n                                    <span class=\"d-none d-xl-inline\" jhiTranslate=\"artemisApp.textExercise.home.importLabel\"></span>\r\n                                    <fa-icon [icon]=\"faFont\" />\r\n                                </a>\r\n                            </div>\r\n                        }\r\n                        @if (course?.isAtLeastEditor) {\r\n                            <div class=\"btn-group-vertical me-1 mb-1\">\r\n                                <a [routerLink]=\"[exerciseGroup.id, 'modeling-exercises', 'new']\" class=\"add-modeling-exercise btn btn-info btn-sm me-1 mb-1\">\r\n                                    <fa-icon [icon]=\"faPlus\" />\r\n                                    <span class=\"d-none d-xl-inline\" jhiTranslate=\"artemisApp.modelingExercise.home.createLabel\"></span>\r\n                                    <fa-icon [icon]=\"faProjectDiagram\" />\r\n                                </a>\r\n                                <a (click)=\"openImportModal(exerciseGroup, exerciseType.MODELING)\" class=\"btn btn-info btn-sm me-1 mb-1\">\r\n                                    <fa-icon [icon]=\"faFileImport\" />\r\n                                    <span class=\"d-none d-xl-inline\" jhiTranslate=\"artemisApp.modelingExercise.home.importLabel\"></span>\r\n                                    <fa-icon [icon]=\"faProjectDiagram\" />\r\n                                </a>\r\n                            </div>\r\n                        }\r\n                        @if (course?.isAtLeastEditor) {\r\n                            <div class=\"btn-group-vertical me-1 mb-1\">\r\n                                <a [routerLink]=\"[exerciseGroup.id, 'programming-exercises', 'new']\" class=\"add-programming-exercise btn btn-info btn-sm me-1 mb-1\">\r\n                                    <fa-icon [icon]=\"faPlus\" />\r\n                                    <span class=\"d-none d-xl-inline\" jhiTranslate=\"artemisApp.programmingExercise.home.createLabel\"></span>\r\n                                    <fa-icon [icon]=\"faKeyboard\" />\r\n                                </a>\r\n                                <a (click)=\"openImportModal(exerciseGroup, exerciseType.PROGRAMMING)\" class=\"btn btn-info btn-sm me-1 mb-1\">\r\n                                    <fa-icon [icon]=\"faFileImport\" />\r\n                                    <span class=\"d-none d-xl-inline\" jhiTranslate=\"artemisApp.programmingExercise.home.importLabel\"></span>\r\n                                    <fa-icon [icon]=\"faKeyboard\" />\r\n                                </a>\r\n                            </div>\r\n                        }\r\n                        <div class=\"btn-group-vertical me-1 mb-1\">\r\n                            @if (course?.isAtLeastEditor) {\r\n                                <div class=\"d-flex flex-column me-1 mb-1\">\r\n                                    <a [routerLink]=\"[exerciseGroup.id, 'edit']\" class=\"edit-group btn btn-warning btn-sm me-1 mb-1\">\r\n                                        <fa-icon [icon]=\"faWrench\" />\r\n                                        <span class=\"d-none d-xl-inline\" jhiTranslate=\"entity.action.edit\"></span>\r\n                                    </a>\r\n                                    @if (\r\n                                        exerciseGroup.id &&\r\n                                        course?.isAtLeastInstructor &&\r\n                                        exerciseGroupToExerciseTypesDict.get(exerciseGroup.id)?.includes(exerciseType.PROGRAMMING)\r\n                                    ) {\r\n                                        <button\r\n                                            jhiDeleteButton\r\n                                            [entityTitle]=\"exerciseGroup.title || ''\"\r\n                                            deleteQuestion=\"{{\r\n                                                localVCEnabled\r\n                                                    ? 'artemisApp.examManagement.exerciseGroup.delete.questionLocalVC'\r\n                                                    : 'artemisApp.examManagement.exerciseGroup.delete.question'\r\n                                            }}\"\r\n                                            deleteConfirmationText=\"artemisApp.examManagement.exerciseGroup.delete.typeNameToConfirm\"\r\n                                            [additionalChecks]=\"\r\n                                                localCIEnabled\r\n                                                    ? {}\r\n                                                    : {\r\n                                                          deleteStudentReposBuildPlans: 'artemisApp.programmingExercise.delete.studentReposBuildPlans',\r\n                                                          deleteBaseReposBuildPlans: 'artemisApp.programmingExercise.delete.baseReposBuildPlans',\r\n                                                      }\r\n                                            \"\r\n                                            (delete)=\"deleteExerciseGroup(exerciseGroup.id, $event)\"\r\n                                            [dialogError]=\"dialogError\"\r\n                                            class=\"delete-group mb-0\"\r\n                                        >\r\n                                            <fa-icon [icon]=\"faTrash\" />\r\n                                        </button>\r\n                                    } @else {\r\n                                        @if (exerciseGroup.id && course?.isAtLeastInstructor) {\r\n                                            <button\r\n                                                jhiDeleteButton\r\n                                                [entityTitle]=\"exerciseGroup.title || ''\"\r\n                                                deleteQuestion=\"artemisApp.examManagement.exerciseGroup.delete.question\"\r\n                                                deleteConfirmationText=\"artemisApp.examManagement.exerciseGroup.delete.typeNameToConfirm\"\r\n                                                (delete)=\"deleteExerciseGroup(exerciseGroup.id, $event)\"\r\n                                                [dialogError]=\"dialogError\"\r\n                                                class=\"delete-group mb-0\"\r\n                                            >\r\n                                                <fa-icon [icon]=\"faTrash\" />\r\n                                            </button>\r\n                                        }\r\n                                    }\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"p-3\">\r\n            @if (exerciseGroup.exercises) {\r\n                <div style=\"overflow-x: auto\">\r\n                    <table class=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th class=\"d-md-table-cell\">\r\n                                    <span jhiTranslate=\"global.field.id\"></span>\r\n                                </th>\r\n                                <th>\r\n                                    <span jhiTranslate=\"artemisApp.examManagement.exerciseGroup.type\"></span>\r\n                                </th>\r\n                                <th>\r\n                                    <span jhiTranslate=\"artemisApp.examManagement.exerciseGroup.title\"></span>\r\n                                </th>\r\n                                <th>\r\n                                    <span jhiTranslate=\"artemisApp.examManagement.exerciseGroup.points\"></span>\r\n                                </th>\r\n                                <th>\r\n                                    <span jhiTranslate=\"artemisApp.exercise.bonus\"></span>\r\n                                </th>\r\n                                <th>\r\n                                    <span jhiTranslate=\"artemisApp.exercise.includedCompletely\"></span>\r\n                                </th>\r\n                                @if (exerciseGroup.id && exerciseGroupToExerciseTypesDict.get(exerciseGroup.id!)?.includes(exerciseType.PROGRAMMING)) {\r\n                                    <th>\r\n                                        <span jhiTranslate=\"artemisApp.exercise.shortName\"></span>\r\n                                    </th>\r\n                                    <th>\r\n                                        <span jhiTranslate=\"artemisApp.programmingExercise.repositories\"></span>\r\n                                    </th>\r\n                                    <th>\r\n                                        <span jhiTranslate=\"artemisApp.programmingExercise.buildplans\"></span>\r\n                                    </th>\r\n                                    <th>\r\n                                        <span jhiTranslate=\"artemisApp.programmingExercise.participationMode\"></span>\r\n                                    </th>\r\n                                }\r\n                                @if (exerciseGroup.id && exerciseGroupToExerciseTypesDict.get(exerciseGroup.id)?.includes(exerciseType.QUIZ)) {\r\n                                    <th>\r\n                                        <span jhiTranslate=\"artemisApp.quizExercise.questions\"></span>\r\n                                    </th>\r\n                                }\r\n                                @if (exerciseGroup.id && exerciseGroupToExerciseTypesDict.get(exerciseGroup.id)?.includes(exerciseType.MODELING)) {\r\n                                    <th>\r\n                                        <span jhiTranslate=\"artemisApp.modelingExercise.diagramType\"></span>\r\n                                    </th>\r\n                                }\r\n                                @if (exerciseGroup.id && exerciseGroupToExerciseTypesDict.get(exerciseGroup.id)?.includes(exerciseType.FILE_UPLOAD)) {\r\n                                    <th>\r\n                                        <span jhiTranslate=\"artemisApp.fileUploadExercise.filePattern\"></span>\r\n                                    </th>\r\n                                }\r\n                                @if (\r\n                                    exerciseGroup.id &&\r\n                                    (exerciseGroupToExerciseTypesDict.get(exerciseGroup.id)?.includes(exerciseType.PROGRAMMING) ||\r\n                                        exerciseGroupToExerciseTypesDict.get(exerciseGroup.id)?.includes(exerciseType.TEXT) ||\r\n                                        exerciseGroupToExerciseTypesDict.get(exerciseGroup.id)?.includes(exerciseType.MODELING))\r\n                                ) {\r\n                                    <th>\r\n                                        <span jhiTranslate=\"artemisApp.assessmentMode\"></span>\r\n                                    </th>\r\n                                }\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody id=\"exercises\">\r\n                            @for (exercise of exerciseGroup.exercises; track exercise) {\r\n                                <tr id=\"{{ 'exercise-' + exercise.id }}\">\r\n                                    <td class=\"align-middle\">\r\n                                        @if (course.isAtLeastEditor) {\r\n                                            <a\r\n                                                [routerLink]=\"[\r\n                                                    '/course-management',\r\n                                                    course.id,\r\n                                                    'exams',\r\n                                                    examId,\r\n                                                    'exercise-groups',\r\n                                                    exerciseGroup.id,\r\n                                                    exercise.type + '-exercises',\r\n                                                    exercise.id,\r\n                                                ]\"\r\n                                            >\r\n                                                <span>{{ exercise.id }}</span>\r\n                                            </a>\r\n                                        }\r\n                                        @if (!course.isAtLeastEditor) {\r\n                                            <span>{{ exercise.id }}</span>\r\n                                        }\r\n                                    </td>\r\n                                    <td class=\"align-middle\" style=\"font-size: 1.35rem\">\r\n                                        <fa-icon [icon]=\"exerciseIcon(exercise)\" />\r\n                                    </td>\r\n                                    <td class=\"align-middle\">\r\n                                        @if (course.isAtLeastEditor) {\r\n                                            <a\r\n                                                [routerLink]=\"[\r\n                                                    '/course-management',\r\n                                                    course.id,\r\n                                                    'exams',\r\n                                                    examId,\r\n                                                    'exercise-groups',\r\n                                                    exerciseGroup.id,\r\n                                                    exercise.type + '-exercises',\r\n                                                    exercise.id,\r\n                                                ]\"\r\n                                            >\r\n                                                <span>{{ exercise.title }}</span>\r\n                                            </a>\r\n                                        }\r\n                                        @if (!course.isAtLeastEditor) {\r\n                                            <span>{{ exercise.title }}</span>\r\n                                        }\r\n                                    </td>\r\n                                    <td class=\"align-middle\">\r\n                                        {{ exercise.maxPoints }}\r\n                                    </td>\r\n                                    <td class=\"align-middle\">{{ exercise.bonusPoints }}</td>\r\n                                    <td class=\"align-middle\">{{ exerciseService.isIncludedInScore(exercise) }}</td>\r\n                                    <!-- Programming exercise specific cells -->\r\n                                    @if (exerciseGroup.id && exerciseGroupToExerciseTypesDict.get(exerciseGroup.id)?.includes(exerciseType.PROGRAMMING)) {\r\n                                        <td class=\"align-middle\">\r\n                                            @if (exercise.type === exerciseType.PROGRAMMING) {\r\n                                                <jhi-programming-exercise-group-cell [exercise]=\"exercise\" [displayShortName]=\"true\" />\r\n                                            }\r\n                                        </td>\r\n                                        <td class=\"align-middle\">\r\n                                            @if (exercise.type === exerciseType.PROGRAMMING) {\r\n                                                <jhi-programming-exercise-group-cell [exercise]=\"exercise\" [displayRepositoryUri]=\"true\" />\r\n                                            }\r\n                                        </td>\r\n                                        <td class=\"align-middle\">\r\n                                            @if (exercise.type === exerciseType.PROGRAMMING) {\r\n                                                <jhi-programming-exercise-group-cell [exercise]=\"exercise\" [displayTemplateUrls]=\"true\" />\r\n                                            }\r\n                                        </td>\r\n                                        <td class=\"align-middle\">\r\n                                            @if (exercise.type === exerciseType.PROGRAMMING) {\r\n                                                <jhi-programming-exercise-group-cell [exercise]=\"exercise\" [displayEditorModus]=\"true\" />\r\n                                            }\r\n                                        </td>\r\n                                    }\r\n                                    @if (exerciseGroup.id && exerciseGroupToExerciseTypesDict.get(exerciseGroup.id!)?.includes(exerciseType.QUIZ)) {\r\n                                        <td class=\"align-middle\">\r\n                                            <jhi-quiz-exercise-group-cell [exercise]=\"exercise\" />\r\n                                        </td>\r\n                                    }\r\n                                    @if (exerciseGroup.id && exerciseGroupToExerciseTypesDict.get(exerciseGroup.id!)?.includes(exerciseType.MODELING)) {\r\n                                        <td class=\"align-middle\">\r\n                                            <jhi-modeling-exercise-group-cell [exercise]=\"exercise\" />\r\n                                        </td>\r\n                                    }\r\n                                    @if (exerciseGroup.id && exerciseGroupToExerciseTypesDict.get(exerciseGroup.id!)?.includes(exerciseType.FILE_UPLOAD)) {\r\n                                        <td class=\"align-middle\">\r\n                                            <jhi-file-upload-exercise-group-cell [exercise]=\"exercise\" />\r\n                                        </td>\r\n                                    }\r\n                                    @if (\r\n                                        exerciseGroup.id &&\r\n                                        (exerciseGroupToExerciseTypesDict.get(exerciseGroup.id!)?.includes(exerciseType.PROGRAMMING) ||\r\n                                            exerciseGroupToExerciseTypesDict.get(exerciseGroup.id!)?.includes(exerciseType.TEXT) ||\r\n                                            exerciseGroupToExerciseTypesDict.get(exerciseGroup.id!)?.includes(exerciseType.MODELING))\r\n                                    ) {\r\n                                        <td class=\"align-middle\">\r\n                                            @if (exercise.type === exerciseType.PROGRAMMING || exercise.type === exerciseType.MODELING || exercise.type === exerciseType.TEXT) {\r\n                                                <div>\r\n                                                    {{ 'artemisApp.AssessmentType.' + exercise.assessmentType | artemisTranslate }}\r\n                                                </div>\r\n                                            }\r\n                                        </td>\r\n                                    }\r\n                                    <td class=\"align-middle\">\r\n                                        @if (exercise.id && exerciseGroup.id) {\r\n                                            <jhi-exam-exercise-row-buttons\r\n                                                class=\"d-flex justify-content-end\"\r\n                                                [course]=\"course\"\r\n                                                [exam]=\"exam\"\r\n                                                [exercise]=\"exercise\"\r\n                                                [exerciseGroupId]=\"exerciseGroup.id\"\r\n                                                [latestIndividualEndDate]=\"latestIndividualEndDate\"\r\n                                                (onDeleteExercise)=\"removeExercise(exercise.id, exerciseGroup.id)\"\r\n                                            />\r\n                                        }\r\n                                    </td>\r\n                                </tr>\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            }\r\n            @if (!exerciseGroup.exercises) {\r\n                <div jhiTranslate=\"artemisApp.examManagement.exerciseGroup.noExercises\"></div>\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275textInterpolate1", "ctx_r0", "exercise", "shortName", "\u0275\u0275propertyInterpolate", "tmp_4_0", "templateParticipation", "repositoryUri", "\u0275\u0275sanitizeUrl", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r2", "\u0275\u0275nextContext", "\u0275\u0275resetView", "downloadRepository", "RepositoryType", "TEMPLATE", "\u0275\u0275element", "\u0275\u0275property", "faDownload", "\u0275\u0275template", "ProgrammingExerciseGroupCellComponent_Conditional_0_Conditional_2_Conditional_5_Conditional_2_Template", "ProgrammingExerciseGroupCellComponent_Conditional_0_Conditional_2_Conditional_5_Conditional_3_Template", "\u0275\u0275conditional", "localVCEnabled", "participationType", "solutionParticipation", "_r3", "SOLUTION", "ProgrammingExerciseGroupCellComponent_Conditional_0_Conditional_2_Conditional_10_Conditional_1_Template", "ProgrammingExerciseGroupCellComponent_Conditional_0_Conditional_2_Conditional_10_Conditional_2_Template", "testRepositoryUri", "_r4", "TESTS", "ProgrammingExerciseGroupCellComponent_Conditional_0_Conditional_2_Conditional_15_Conditional_1_Template", "ProgrammingExerciseGroupCellComponent_Conditional_0_Conditional_2_Conditional_15_Conditional_2_Template", "ProgrammingExerciseGroupCellComponent_Conditional_0_Conditional_2_Conditional_5_Template", "ProgrammingExerciseGroupCellComponent_Conditional_0_Conditional_2_Conditional_6_Template", "ProgrammingExerciseGroupCellComponent_Conditional_0_Conditional_2_Conditional_10_Template", "ProgrammingExerciseGroupCellComponent_Conditional_0_Conditional_2_Conditional_11_Template", "ProgrammingExerciseGroupCellComponent_Conditional_0_Conditional_2_Conditional_15_Template", "tmp_2_0", "tmp_3_0", "results", "length", "tmp_5_0", "buildPlanUrl", "buildPlanId", "ProgrammingExerciseGroupCellComponent_Conditional_0_Conditional_3_Conditional_3_Conditional_3_Template", "ProgrammingExerciseGroupCellComponent_Conditional_0_Conditional_3_Conditional_3_Conditional_4_Template", "ProgrammingExerciseGroupCellComponent_Conditional_0_Conditional_3_Conditional_6_Conditional_3_Template", "ProgrammingExerciseGroupCellComponent_Conditional_0_Conditional_3_Conditional_6_Conditional_4_Template", "ProgrammingExerciseGroupCellComponent_Conditional_0_Conditional_3_Conditional_3_Template", "ProgrammingExerciseGroupCellComponent_Conditional_0_Conditional_3_Conditional_6_Template", "allowOnlineIde", "ProgrammingExerciseGroupCellComponent_Conditional_0_Conditional_4_Conditional_17_Template", "allowOfflineIde", "allowOnlineEditor", "onlineIdeEnabled", "ProgrammingExerciseGroupCellComponent_Conditional_0_Conditional_1_Template", "ProgrammingExerciseGroupCellComponent_Conditional_0_Conditional_2_Template", "ProgrammingExerciseGroupCellComponent_Conditional_0_Conditional_3_Template", "ProgrammingExerciseGroupCellComponent_Conditional_0_Conditional_4_Template", "displayShortName", "displayRepositoryUri", "displayTemplateUrls", "displayEditorModus", "ProgrammingExerciseGroupCellComponent", "profileService", "inject", "ProfileService", "programmingExerciseService", "ProgrammingExerciseService", "alertService", "AlertService", "ProgrammingExerciseParticipationType", "input", "required", "ngOnInit", "getProfileInfo", "subscribe", "profileInfo", "activeProfiles", "includes", "PROFILE_LOCALVC", "PROFILE_THEIA", "projectKey", "createBuildPlanUrl", "buildPlanURLTemplate", "repositoryType", "programmingExerciseId", "id", "exportInstructorRepository", "undefined", "response", "downloadZipFileFromResponse", "success", "selectors", "inputs", "decls", "vars", "consts", "template", "rf", "ctx", "ProgrammingExerciseGroupCellComponent_Conditional_0_Template", "RouterLink", "FaIconComponent", "ProgrammingExerciseInstructorStatusComponent", "TranslateDirective", "styles", "\u0275\u0275text", "\u0275\u0275textInterpolate1", "tmp_1_0", "ctx_r0", "exercise", "quizQuestions", "length", "QuizExerciseGroupCellComponent", "exerciseType", "ExerciseType", "input", "required", "selectors", "inputs", "decls", "vars", "template", "rf", "ctx", "\u0275\u0275template", "QuizExerciseGroupCellComponent_Conditional_0_Template", "\u0275\u0275conditional", "type", "QUIZ", "\u0275\u0275text", "\u0275\u0275textInterpolate1", "\u0275\u0275pipeBind1", "ctx_r0", "exercise", "diagramType", "ModelingExerciseGroupCellComponent", "exerciseType", "ExerciseType", "input", "required", "selectors", "inputs", "decls", "vars", "template", "rf", "ctx", "\u0275\u0275template", "ModelingExerciseGroupCellComponent_Conditional_0_Template", "\u0275\u0275conditional", "type", "MODELING", "ArtemisTranslatePipe", "styles", "\u0275\u0275text", "\u0275\u0275textInterpolate1", "ctx_r0", "exercise", "filePattern", "FileUploadExerciseGroupCellComponent", "exerciseType", "ExerciseType", "input", "required", "selectors", "inputs", "decls", "vars", "template", "rf", "ctx", "\u0275\u0275template", "FileUploadExerciseGroupCellComponent_Conditional_0_Template", "\u0275\u0275conditional", "type", "FILE_UPLOAD", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "\u0275\u0275pureFunction5", "_c0", "ctx_r0", "course", "id", "exam", "exerciseGroupId", "exercise", "type", "farListAlt", "_c1", "faTable", "\u0275\u0275pureFunction4", "_c2", "faFileSignature", "_c3", "faBook", "_c4", "faSignal", "\u0275\u0275pureFunction2", "_c5", "faUsers", "_c6", "RepositoryType", "TEMPLATE", "faPencilAlt", "_c7", "faEye", "_c8", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r2", "\u0275\u0275nextContext", "\u0275\u0275resetView", "exportQuizById", "faFileExport", "_c9", "faWrench", "faExclamationTriangle", "\u0275\u0275pipeBind1", "\u0275\u0275template", "ExamExerciseRowButtonsComponent_Conditional_12_Conditional_3_Conditional_4_Template", "\u0275\u0275conditional", "testRunParticipationsExist", "\u0275\u0275classProp", "hasExamStarted", "_c10", "ExamExerciseRowButtonsComponent_Conditional_12_Conditional_2_Template", "ExamExerciseRowButtonsComponent_Conditional_12_Conditional_3_Template", "isExamOver", "isAtLeastInstructor", "_r3", "deleteExercise", "title", "dialogError$", "faTrash", "$event", "_r4", "deleteProgrammingExercise", "\u0275\u0275propertyInterpolate", "localVCEnabled", "localCIEnabled", "\u0275\u0275pureFunction0", "_c11", "_c12", "ExamExerciseRowButtonsComponent", "textExerciseService", "inject", "TextExerciseService", "fileUploadExerciseService", "FileUploadExerciseService", "programmingExerciseService", "ProgrammingExerciseService", "modelingExerciseService", "ModelingExerciseService", "quizExerciseService", "QuizExerciseService", "eventManager", "EventManager", "profileService", "ProfileService", "latestIndividualEndDate", "onDeleteExercise", "EventEmitter", "dialogErrorSource", "Subject", "asObservable", "exerciseType", "ExerciseType", "faListAlt", "ngOnInit", "getProfileInfo", "subscribe", "profileInfo", "activeProfiles", "includes", "PROFILE_LOCALVC", "PROFILE_LOCALCI", "isBefore", "dayjs", "startDate", "TEXT", "deleteTextExercise", "FILE_UPLOAD", "deleteFileUploadExercise", "QUIZ", "deleteQuizExercise", "MODELING", "deleteModelingExercise", "delete", "next", "broadcast", "name", "content", "emit", "error", "message", "event", "deleteStudentReposBuildPlans", "deleteBaseReposBuildPlans", "exportAll", "find", "res", "body", "exportQuiz", "quizQuestions", "selectors", "inputs", "outputs", "decls", "vars", "consts", "template", "rf", "ctx", "ExamExerciseRowButtonsComponent_Conditional_2_Template", "ExamExerciseRowButtonsComponent_Conditional_3_Template", "ExamExerciseRowButtonsComponent_Conditional_4_Template", "ExamExerciseRowButtonsComponent_Conditional_5_Template", "ExamExerciseRowButtonsComponent_Conditional_6_Template", "ExamExerciseRowButtonsComponent_Conditional_7_Template", "ExamExerciseRowButtonsComponent_Conditional_8_Template", "ExamExerciseRowButtonsComponent_Conditional_9_Template", "ExamExerciseRowButtonsComponent_Conditional_10_Template", "ExamExerciseRowButtonsComponent_Conditional_11_Template", "ExamExerciseRowButtonsComponent_Conditional_12_Template", "ExamExerciseRowButtonsComponent_Conditional_13_Template", "ExamExerciseRowButtonsComponent_Conditional_14_Template", "ExamExerciseRowButtonsComponent_Conditional_15_Template", "isAtLeastEditor", "PROGRAMMING", "teamMode", "RouterLink", "FaIconComponent", "TranslateDirective", "NgbTooltip", "DeleteButtonDirective", "ArtemisTranslatePipe", "encapsulation", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "openExerciseGroupImportModal", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "faFileImport", "faPlus", "_r5", "exerciseGroup_r6", "$implicit", "openImportModal", "exerciseType", "FILE_UPLOAD", "\u0275\u0275pureFunction1", "_c0", "id", "faFileUpload", "_r7", "QUIZ", "_c1", "faCheckDouble", "_r8", "TEXT", "_c2", "faFont", "_r9", "MODELING", "_c3", "faProjectDiagram", "_r10", "PROGRAMMING", "_c4", "faKeyboard", "$event", "_r11", "deleteExerciseGroup", "\u0275\u0275propertyInterpolate", "localVCEnabled", "title", "localCIEnabled", "\u0275\u0275pureFunction0", "_c6", "_c7", "dialogError", "faTrash", "_r12", "\u0275\u0275template", "ExerciseGroupsComponent_For_14_Conditional_50_Conditional_11_Conditional_1_Template", "\u0275\u0275conditional", "course", "isAtLeastInstructor", "ExerciseGroupsComponent_For_14_Conditional_50_Conditional_10_Template", "ExerciseGroupsComponent_For_14_Conditional_50_Conditional_11_Template", "_c5", "faWrench", "tmp_14_0", "exerciseGroupToExerciseTypesDict", "get", "includes", "\u0275\u0275pureFunction5", "_c8", "examId", "exercise_r13", "type", "\u0275\u0275textInterpolate", "ExerciseGroupsComponent_For_14_Conditional_58_For_51_Conditional_28_Conditional_3_Template", "ExerciseGroupsComponent_For_14_Conditional_58_For_51_Conditional_28_Conditional_7_Template", "ExerciseGroupsComponent_For_14_Conditional_58_For_51_Conditional_28_Conditional_11_Template", "ExerciseGroupsComponent_For_14_Conditional_58_For_51_Conditional_28_Conditional_15_Template", "\u0275\u0275textInterpolate1", "\u0275\u0275pipeBind1", "assessmentType", "ExerciseGroupsComponent_For_14_Conditional_58_For_51_Conditional_32_Conditional_3_Template", "_r14", "removeExercise", "exam", "latestIndividualEndDate", "ExerciseGroupsComponent_For_14_Conditional_58_For_51_Conditional_5_Template", "ExerciseGroupsComponent_For_14_Conditional_58_For_51_Conditional_6_Template", "ExerciseGroupsComponent_For_14_Conditional_58_For_51_Conditional_15_Template", "ExerciseGroupsComponent_For_14_Conditional_58_For_51_Conditional_16_Template", "ExerciseGroupsComponent_For_14_Conditional_58_For_51_Conditional_28_Template", "ExerciseGroupsComponent_For_14_Conditional_58_For_51_Conditional_29_Template", "ExerciseGroupsComponent_For_14_Conditional_58_For_51_Conditional_30_Template", "ExerciseGroupsComponent_For_14_Conditional_58_For_51_Conditional_31_Template", "ExerciseGroupsComponent_For_14_Conditional_58_For_51_Conditional_32_Template", "ExerciseGroupsComponent_For_14_Conditional_58_For_51_Conditional_35_Template", "isAtLeastEditor", "exerciseIcon", "maxPoints", "bonusPoints", "exerciseService", "isIncludedInScore", "tmp_31_0", "tmp_32_0", "tmp_33_0", "tmp_34_0", "tmp_35_0", "ExerciseGroupsComponent_For_14_Conditional_58_Conditional_39_Template", "ExerciseGroupsComponent_For_14_Conditional_58_Conditional_40_Template", "ExerciseGroupsComponent_For_14_Conditional_58_Conditional_41_Template", "ExerciseGroupsComponent_For_14_Conditional_58_Conditional_42_Template", "ExerciseGroupsComponent_For_14_Conditional_58_Conditional_43_Template", "\u0275\u0275repeaterCreate", "ExerciseGroupsComponent_For_14_Conditional_58_For_51_Template", "\u0275\u0275repeaterTrackByIdentity", "tmp_12_0", "tmp_13_0", "tmp_15_0", "tmp_16_0", "\u0275\u0275repeater", "exercises", "\u0275$index_43_r4", "_r3", "$index", "moveUp", "moveDown", "ExerciseGroupsComponent_For_14_Conditional_43_Template", "ExerciseGroupsComponent_For_14_Conditional_44_Template", "ExerciseGroupsComponent_For_14_Conditional_45_Template", "ExerciseGroupsComponent_For_14_Conditional_46_Template", "ExerciseGroupsComponent_For_14_Conditional_47_Template", "ExerciseGroupsComponent_For_14_Conditional_50_Template", "ExerciseGroupsComponent_For_14_Conditional_58_Template", "ExerciseGroupsComponent_For_14_Conditional_59_Template", "\u0275\u0275classProp", "faAngleUp", "exerciseGroups", "length", "faAngleDown", "isMandatory", "ExerciseGroupsComponent", "route", "inject", "ActivatedRoute", "exerciseGroupService", "ExerciseGroupService", "ExerciseService", "examManagementService", "ExamManagementService", "eventManager", "EventManager", "alertService", "AlertService", "modalService", "NgbModal", "router", "Router", "profileService", "ProfileService", "courseId", "dialogErrorSource", "Subject", "asObservable", "ExerciseType", "Map", "ngOnInit", "Number", "snapshot", "paramMap", "forkJoin", "loadExerciseGroups", "loadLatestIndividualEndDateOfExam", "subscribe", "next", "examRes", "examInfoDTO", "body", "undefined", "setupExerciseGroupToExerciseTypesDict", "error", "res", "onError", "getProfileInfo", "profileInfo", "activeProfiles", "PROFILE_LOCALVC", "PROFILE_LOCALCI", "getLatestIndividualEndDateOfExam", "pipe", "catchError", "of", "find", "exerciseId", "exerciseGroupId", "forEach", "exerciseGroup", "filter", "exercise", "event", "delete", "deleteStudentReposBuildPlans", "deleteBaseReposBuildPlans", "broadcast", "name", "content", "message", "importBaseRoute", "importModalRef", "open", "ExerciseImportWrapperComponent", "size", "backdrop", "componentInstance", "result", "then", "push", "navigate", "state", "programmingExerciseForImportFromFile", "index", "saveOrder", "updateOrder", "set", "examImportModalRef", "ExamImportComponent", "subsequentExerciseGroupSelection", "targetCourseId", "targetExamId", "success", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "ExerciseGroupsComponent_Conditional_7_Template", "ExerciseGroupsComponent_For_14_Template", "\u0275\u0275textInterpolate2", "TranslateDirective", "FaIconComponent", "RouterLink", "HelpIconComponent", "DeleteButtonDirective", "ProgrammingExerciseGroupCellComponent", "QuizExerciseGroupCellComponent", "ModelingExerciseGroupCellComponent", "FileUploadExerciseGroupCellComponent", "ExamExerciseRowButtonsComponent", "LowerCasePipe", "ArtemisTranslatePipe", "styles"]
}
