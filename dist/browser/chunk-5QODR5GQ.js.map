{"version":3,"sources":["node_modules/graphemer/lib/boundaries.js","node_modules/graphemer/lib/GraphemerHelper.js","node_modules/graphemer/lib/GraphemerIterator.js","node_modules/graphemer/lib/Graphemer.js","node_modules/graphemer/lib/index.js","node_modules/emoji-js/lib/emoji.js","src/main/webapp/app/shared/monaco-editor/model/actions/monaco-editor.util.ts","src/main/webapp/app/shared/monaco-editor/model/actions/adapter/text-editor-position.model.ts","src/main/webapp/app/shared/monaco-editor/model/actions/adapter/text-editor-range.model.ts","src/main/webapp/app/shared/monaco-editor/model/actions/adapter/text-editor-completion-item.model.ts","src/main/webapp/app/shared/monaco-editor/model/actions/adapter/text-editor-keybinding.model.ts","src/main/webapp/app/shared/monaco-editor/model/actions/adapter/monaco-text-editor.adapter.ts","src/main/webapp/app/shared/monaco-editor/model/monaco-code-editor-element.model.ts","src/main/webapp/app/shared/monaco-editor/model/monaco-editor-glyph-margin-widget.model.ts","src/main/webapp/app/shared/monaco-editor/model/monaco-editor-build-annotation.model.ts","src/main/webapp/app/shared/monaco-editor/model/monaco-editor-view-zone.model.ts","src/main/webapp/app/shared/monaco-editor/model/monaco-editor-overlay-widget.model.ts","src/main/webapp/app/shared/monaco-editor/model/monaco-editor-inline-widget.model.ts","src/main/webapp/app/shared/monaco-editor/model/monaco-editor-line-highlight.model.ts","src/main/webapp/app/shared/monaco-editor/monaco-editor.component.ts","src/main/webapp/app/shared/monaco-editor/model/monaco-editor-line-decorations-hover-button.model.ts"],"sourcesContent":["\"use strict\";\n\n/**\n * The Grapheme_Cluster_Break property value\n * @see https://www.unicode.org/reports/tr29/#Default_Grapheme_Cluster_Table\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EXTENDED_PICTOGRAPHIC = exports.CLUSTER_BREAK = void 0;\nvar CLUSTER_BREAK;\n(function (CLUSTER_BREAK) {\n  CLUSTER_BREAK[CLUSTER_BREAK[\"CR\"] = 0] = \"CR\";\n  CLUSTER_BREAK[CLUSTER_BREAK[\"LF\"] = 1] = \"LF\";\n  CLUSTER_BREAK[CLUSTER_BREAK[\"CONTROL\"] = 2] = \"CONTROL\";\n  CLUSTER_BREAK[CLUSTER_BREAK[\"EXTEND\"] = 3] = \"EXTEND\";\n  CLUSTER_BREAK[CLUSTER_BREAK[\"REGIONAL_INDICATOR\"] = 4] = \"REGIONAL_INDICATOR\";\n  CLUSTER_BREAK[CLUSTER_BREAK[\"SPACINGMARK\"] = 5] = \"SPACINGMARK\";\n  CLUSTER_BREAK[CLUSTER_BREAK[\"L\"] = 6] = \"L\";\n  CLUSTER_BREAK[CLUSTER_BREAK[\"V\"] = 7] = \"V\";\n  CLUSTER_BREAK[CLUSTER_BREAK[\"T\"] = 8] = \"T\";\n  CLUSTER_BREAK[CLUSTER_BREAK[\"LV\"] = 9] = \"LV\";\n  CLUSTER_BREAK[CLUSTER_BREAK[\"LVT\"] = 10] = \"LVT\";\n  CLUSTER_BREAK[CLUSTER_BREAK[\"OTHER\"] = 11] = \"OTHER\";\n  CLUSTER_BREAK[CLUSTER_BREAK[\"PREPEND\"] = 12] = \"PREPEND\";\n  CLUSTER_BREAK[CLUSTER_BREAK[\"E_BASE\"] = 13] = \"E_BASE\";\n  CLUSTER_BREAK[CLUSTER_BREAK[\"E_MODIFIER\"] = 14] = \"E_MODIFIER\";\n  CLUSTER_BREAK[CLUSTER_BREAK[\"ZWJ\"] = 15] = \"ZWJ\";\n  CLUSTER_BREAK[CLUSTER_BREAK[\"GLUE_AFTER_ZWJ\"] = 16] = \"GLUE_AFTER_ZWJ\";\n  CLUSTER_BREAK[CLUSTER_BREAK[\"E_BASE_GAZ\"] = 17] = \"E_BASE_GAZ\";\n})(CLUSTER_BREAK = exports.CLUSTER_BREAK || (exports.CLUSTER_BREAK = {}));\n/**\n * The Emoji character property is an extension of UCD but shares the same namespace and structure\n * @see http://www.unicode.org/reports/tr51/tr51-14.html#Emoji_Properties_and_Data_Files\n *\n * Here we model Extended_Pictograhpic only to implement UAX #29 GB11\n * \\p{Extended_Pictographic} Extend* ZWJ\t×\t\\p{Extended_Pictographic}\n *\n * The Emoji character property should not be mixed with Grapheme_Cluster_Break since they are not exclusive\n */\nexports.EXTENDED_PICTOGRAPHIC = 101;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst boundaries_1 = require(\"./boundaries\");\n// BreakTypes\n// @type {BreakType}\nconst NotBreak = 0;\nconst BreakStart = 1;\nconst Break = 2;\nconst BreakLastRegional = 3;\nconst BreakPenultimateRegional = 4;\nclass GraphemerHelper {\n  /**\n   * Check if the the character at the position {pos} of the string is surrogate\n   * @param str {string}\n   * @param pos {number}\n   * @returns {boolean}\n   */\n  static isSurrogate(str, pos) {\n    return 0xd800 <= str.charCodeAt(pos) && str.charCodeAt(pos) <= 0xdbff && 0xdc00 <= str.charCodeAt(pos + 1) && str.charCodeAt(pos + 1) <= 0xdfff;\n  }\n  /**\n   * The String.prototype.codePointAt polyfill\n   * Private function, gets a Unicode code point from a JavaScript UTF-16 string\n   * handling surrogate pairs appropriately\n   * @param str {string}\n   * @param idx {number}\n   * @returns {number}\n   */\n  static codePointAt(str, idx) {\n    if (idx === undefined) {\n      idx = 0;\n    }\n    const code = str.charCodeAt(idx);\n    // if a high surrogate\n    if (0xd800 <= code && code <= 0xdbff && idx < str.length - 1) {\n      const hi = code;\n      const low = str.charCodeAt(idx + 1);\n      if (0xdc00 <= low && low <= 0xdfff) {\n        return (hi - 0xd800) * 0x400 + (low - 0xdc00) + 0x10000;\n      }\n      return hi;\n    }\n    // if a low surrogate\n    if (0xdc00 <= code && code <= 0xdfff && idx >= 1) {\n      const hi = str.charCodeAt(idx - 1);\n      const low = code;\n      if (0xd800 <= hi && hi <= 0xdbff) {\n        return (hi - 0xd800) * 0x400 + (low - 0xdc00) + 0x10000;\n      }\n      return low;\n    }\n    // just return the char if an unmatched surrogate half or a\n    // single-char codepoint\n    return code;\n  }\n  //\n  /**\n   * Private function, returns whether a break is allowed between the two given grapheme breaking classes\n   * Implemented the UAX #29 3.1.1 Grapheme Cluster Boundary Rules on extended grapheme clusters\n   * @param start {number}\n   * @param mid {Array<number>}\n   * @param end {number}\n   * @param startEmoji {number}\n   * @param midEmoji {Array<number>}\n   * @param endEmoji {number}\n   * @returns {number}\n   */\n  static shouldBreak(start, mid, end, startEmoji, midEmoji, endEmoji) {\n    const all = [start].concat(mid).concat([end]);\n    const allEmoji = [startEmoji].concat(midEmoji).concat([endEmoji]);\n    const previous = all[all.length - 2];\n    const next = end;\n    const nextEmoji = endEmoji;\n    // Lookahead terminator for:\n    // GB12. ^ (RI RI)* RI ? RI\n    // GB13. [^RI] (RI RI)* RI ? RI\n    const rIIndex = all.lastIndexOf(boundaries_1.CLUSTER_BREAK.REGIONAL_INDICATOR);\n    if (rIIndex > 0 && all.slice(1, rIIndex).every(function (c) {\n      return c === boundaries_1.CLUSTER_BREAK.REGIONAL_INDICATOR;\n    }) && [boundaries_1.CLUSTER_BREAK.PREPEND, boundaries_1.CLUSTER_BREAK.REGIONAL_INDICATOR].indexOf(previous) === -1) {\n      if (all.filter(function (c) {\n        return c === boundaries_1.CLUSTER_BREAK.REGIONAL_INDICATOR;\n      }).length % 2 === 1) {\n        return BreakLastRegional;\n      } else {\n        return BreakPenultimateRegional;\n      }\n    }\n    // GB3. CR × LF\n    if (previous === boundaries_1.CLUSTER_BREAK.CR && next === boundaries_1.CLUSTER_BREAK.LF) {\n      return NotBreak;\n    }\n    // GB4. (Control|CR|LF) ÷\n    else if (previous === boundaries_1.CLUSTER_BREAK.CONTROL || previous === boundaries_1.CLUSTER_BREAK.CR || previous === boundaries_1.CLUSTER_BREAK.LF) {\n      return BreakStart;\n    }\n    // GB5. ÷ (Control|CR|LF)\n    else if (next === boundaries_1.CLUSTER_BREAK.CONTROL || next === boundaries_1.CLUSTER_BREAK.CR || next === boundaries_1.CLUSTER_BREAK.LF) {\n      return BreakStart;\n    }\n    // GB6. L × (L|V|LV|LVT)\n    else if (previous === boundaries_1.CLUSTER_BREAK.L && (next === boundaries_1.CLUSTER_BREAK.L || next === boundaries_1.CLUSTER_BREAK.V || next === boundaries_1.CLUSTER_BREAK.LV || next === boundaries_1.CLUSTER_BREAK.LVT)) {\n      return NotBreak;\n    }\n    // GB7. (LV|V) × (V|T)\n    else if ((previous === boundaries_1.CLUSTER_BREAK.LV || previous === boundaries_1.CLUSTER_BREAK.V) && (next === boundaries_1.CLUSTER_BREAK.V || next === boundaries_1.CLUSTER_BREAK.T)) {\n      return NotBreak;\n    }\n    // GB8. (LVT|T) × (T)\n    else if ((previous === boundaries_1.CLUSTER_BREAK.LVT || previous === boundaries_1.CLUSTER_BREAK.T) && next === boundaries_1.CLUSTER_BREAK.T) {\n      return NotBreak;\n    }\n    // GB9. × (Extend|ZWJ)\n    else if (next === boundaries_1.CLUSTER_BREAK.EXTEND || next === boundaries_1.CLUSTER_BREAK.ZWJ) {\n      return NotBreak;\n    }\n    // GB9a. × SpacingMark\n    else if (next === boundaries_1.CLUSTER_BREAK.SPACINGMARK) {\n      return NotBreak;\n    }\n    // GB9b. Prepend ×\n    else if (previous === boundaries_1.CLUSTER_BREAK.PREPEND) {\n      return NotBreak;\n    }\n    // GB11. \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n    const previousNonExtendIndex = allEmoji.slice(0, -1).lastIndexOf(boundaries_1.EXTENDED_PICTOGRAPHIC);\n    if (previousNonExtendIndex !== -1 && allEmoji[previousNonExtendIndex] === boundaries_1.EXTENDED_PICTOGRAPHIC && all.slice(previousNonExtendIndex + 1, -2).every(function (c) {\n      return c === boundaries_1.CLUSTER_BREAK.EXTEND;\n    }) && previous === boundaries_1.CLUSTER_BREAK.ZWJ && nextEmoji === boundaries_1.EXTENDED_PICTOGRAPHIC) {\n      return NotBreak;\n    }\n    // GB12. ^ (RI RI)* RI × RI\n    // GB13. [^RI] (RI RI)* RI × RI\n    if (mid.indexOf(boundaries_1.CLUSTER_BREAK.REGIONAL_INDICATOR) !== -1) {\n      return Break;\n    }\n    if (previous === boundaries_1.CLUSTER_BREAK.REGIONAL_INDICATOR && next === boundaries_1.CLUSTER_BREAK.REGIONAL_INDICATOR) {\n      return NotBreak;\n    }\n    // GB999. Any ? Any\n    return BreakStart;\n  }\n}\nexports.default = GraphemerHelper;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * GraphemerIterator\n *\n * Takes a string and a \"BreakHandler\" method during initialisation\n * and creates an iterable object that returns individual graphemes.\n *\n * @param str {string}\n * @return GraphemerIterator\n */\nclass GraphemerIterator {\n  constructor(str, nextBreak) {\n    this._index = 0;\n    this._str = str;\n    this._nextBreak = nextBreak;\n  }\n  [Symbol.iterator]() {\n    return this;\n  }\n  next() {\n    let brk;\n    if ((brk = this._nextBreak(this._str, this._index)) < this._str.length) {\n      const value = this._str.slice(this._index, brk);\n      this._index = brk;\n      return {\n        value: value,\n        done: false\n      };\n    }\n    if (this._index < this._str.length) {\n      const value = this._str.slice(this._index);\n      this._index = this._str.length;\n      return {\n        value: value,\n        done: false\n      };\n    }\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n}\nexports.default = GraphemerIterator;","\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst boundaries_1 = require(\"./boundaries\");\nconst GraphemerHelper_1 = __importDefault(require(\"./GraphemerHelper\"));\nconst GraphemerIterator_1 = __importDefault(require(\"./GraphemerIterator\"));\nclass Graphemer {\n  /**\n   * Returns the next grapheme break in the string after the given index\n   * @param string {string}\n   * @param index {number}\n   * @returns {number}\n   */\n  static nextBreak(string, index) {\n    if (index === undefined) {\n      index = 0;\n    }\n    if (index < 0) {\n      return 0;\n    }\n    if (index >= string.length - 1) {\n      return string.length;\n    }\n    const prevCP = GraphemerHelper_1.default.codePointAt(string, index);\n    const prev = Graphemer.getGraphemeBreakProperty(prevCP);\n    const prevEmoji = Graphemer.getEmojiProperty(prevCP);\n    const mid = [];\n    const midEmoji = [];\n    for (let i = index + 1; i < string.length; i++) {\n      // check for already processed low surrogates\n      if (GraphemerHelper_1.default.isSurrogate(string, i - 1)) {\n        continue;\n      }\n      const nextCP = GraphemerHelper_1.default.codePointAt(string, i);\n      const next = Graphemer.getGraphemeBreakProperty(nextCP);\n      const nextEmoji = Graphemer.getEmojiProperty(nextCP);\n      if (GraphemerHelper_1.default.shouldBreak(prev, mid, next, prevEmoji, midEmoji, nextEmoji)) {\n        return i;\n      }\n      mid.push(next);\n      midEmoji.push(nextEmoji);\n    }\n    return string.length;\n  }\n  /**\n   * Breaks the given string into an array of grapheme clusters\n   * @param str {string}\n   * @returns {string[]}\n   */\n  splitGraphemes(str) {\n    const res = [];\n    let index = 0;\n    let brk;\n    while ((brk = Graphemer.nextBreak(str, index)) < str.length) {\n      res.push(str.slice(index, brk));\n      index = brk;\n    }\n    if (index < str.length) {\n      res.push(str.slice(index));\n    }\n    return res;\n  }\n  /**\n   * Returns an iterator of grapheme clusters in the given string\n   * @param str {string}\n   * @returns {GraphemerIterator}\n   */\n  iterateGraphemes(str) {\n    return new GraphemerIterator_1.default(str, Graphemer.nextBreak);\n  }\n  /**\n   * Returns the number of grapheme clusters in the given string\n   * @param str {string}\n   * @returns {number}\n   */\n  countGraphemes(str) {\n    let count = 0;\n    let index = 0;\n    let brk;\n    while ((brk = Graphemer.nextBreak(str, index)) < str.length) {\n      index = brk;\n      count++;\n    }\n    if (index < str.length) {\n      count++;\n    }\n    return count;\n  }\n  /**\n   * Given a Unicode code point, determines this symbol's grapheme break property\n   * @param code {number} Unicode code point\n   * @returns {number}\n   */\n  static getGraphemeBreakProperty(code) {\n    // Grapheme break property taken from:\n    // https://www.unicode.org/Public/UCD/latest/ucd/auxiliary/GraphemeBreakProperty.txt\n    // and generated by\n    // node ./scripts/generate-grapheme-break.js\n    if (code < 0xbf09) {\n      if (code < 0xac54) {\n        if (code < 0x102d) {\n          if (code < 0xb02) {\n            if (code < 0x93b) {\n              if (code < 0x6df) {\n                if (code < 0x5bf) {\n                  if (code < 0x7f) {\n                    if (code < 0xb) {\n                      if (code < 0xa) {\n                        // Cc  [10] <control-0000>..<control-0009>\n                        if (0x0 <= code && code <= 0x9) {\n                          return boundaries_1.CLUSTER_BREAK.CONTROL;\n                        }\n                      } else {\n                        // Cc       <control-000A>\n                        if (0xa === code) {\n                          return boundaries_1.CLUSTER_BREAK.LF;\n                        }\n                      }\n                    } else {\n                      if (code < 0xd) {\n                        // Cc   [2] <control-000B>..<control-000C>\n                        if (0xb <= code && code <= 0xc) {\n                          return boundaries_1.CLUSTER_BREAK.CONTROL;\n                        }\n                      } else {\n                        if (code < 0xe) {\n                          // Cc       <control-000D>\n                          if (0xd === code) {\n                            return boundaries_1.CLUSTER_BREAK.CR;\n                          }\n                        } else {\n                          // Cc  [18] <control-000E>..<control-001F>\n                          if (0xe <= code && code <= 0x1f) {\n                            return boundaries_1.CLUSTER_BREAK.CONTROL;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0x300) {\n                      if (code < 0xad) {\n                        // Cc  [33] <control-007F>..<control-009F>\n                        if (0x7f <= code && code <= 0x9f) {\n                          return boundaries_1.CLUSTER_BREAK.CONTROL;\n                        }\n                      } else {\n                        // Cf       SOFT HYPHEN\n                        if (0xad === code) {\n                          return boundaries_1.CLUSTER_BREAK.CONTROL;\n                        }\n                      }\n                    } else {\n                      if (code < 0x483) {\n                        // Mn [112] COMBINING GRAVE ACCENT..COMBINING LATIN SMALL LETTER X\n                        if (0x300 <= code && code <= 0x36f) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x591) {\n                          // Mn   [5] COMBINING CYRILLIC TITLO..COMBINING CYRILLIC POKRYTIE\n                          // Me   [2] COMBINING CYRILLIC HUNDRED THOUSANDS SIGN..COMBINING CYRILLIC MILLIONS SIGN\n                          if (0x483 <= code && code <= 0x489) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mn  [45] HEBREW ACCENT ETNAHTA..HEBREW POINT METEG\n                          if (0x591 <= code && code <= 0x5bd) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0x610) {\n                    if (code < 0x5c4) {\n                      if (code < 0x5c1) {\n                        // Mn       HEBREW POINT RAFE\n                        if (0x5bf === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        // Mn   [2] HEBREW POINT SHIN DOT..HEBREW POINT SIN DOT\n                        if (0x5c1 <= code && code <= 0x5c2) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    } else {\n                      if (code < 0x5c7) {\n                        // Mn   [2] HEBREW MARK UPPER DOT..HEBREW MARK LOWER DOT\n                        if (0x5c4 <= code && code <= 0x5c5) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x600) {\n                          // Mn       HEBREW POINT QAMATS QATAN\n                          if (0x5c7 === code) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Cf   [6] ARABIC NUMBER SIGN..ARABIC NUMBER MARK ABOVE\n                          if (0x600 <= code && code <= 0x605) {\n                            return boundaries_1.CLUSTER_BREAK.PREPEND;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0x670) {\n                      if (code < 0x61c) {\n                        // Mn  [11] ARABIC SIGN SALLALLAHOU ALAYHE WASSALLAM..ARABIC SMALL KASRA\n                        if (0x610 <= code && code <= 0x61a) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x64b) {\n                          // Cf       ARABIC LETTER MARK\n                          if (0x61c === code) {\n                            return boundaries_1.CLUSTER_BREAK.CONTROL;\n                          }\n                        } else {\n                          // Mn  [21] ARABIC FATHATAN..ARABIC WAVY HAMZA BELOW\n                          if (0x64b <= code && code <= 0x65f) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0x6d6) {\n                        // Mn       ARABIC LETTER SUPERSCRIPT ALEF\n                        if (0x670 === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x6dd) {\n                          // Mn   [7] ARABIC SMALL HIGH LIGATURE SAD WITH LAM WITH ALEF MAKSURA..ARABIC SMALL HIGH SEEN\n                          if (0x6d6 <= code && code <= 0x6dc) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Cf       ARABIC END OF AYAH\n                          if (0x6dd === code) {\n                            return boundaries_1.CLUSTER_BREAK.PREPEND;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              } else {\n                if (code < 0x81b) {\n                  if (code < 0x730) {\n                    if (code < 0x6ea) {\n                      if (code < 0x6e7) {\n                        // Mn   [6] ARABIC SMALL HIGH ROUNDED ZERO..ARABIC SMALL HIGH MADDA\n                        if (0x6df <= code && code <= 0x6e4) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        // Mn   [2] ARABIC SMALL HIGH YEH..ARABIC SMALL HIGH NOON\n                        if (0x6e7 <= code && code <= 0x6e8) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    } else {\n                      if (code < 0x70f) {\n                        // Mn   [4] ARABIC EMPTY CENTRE LOW STOP..ARABIC SMALL LOW MEEM\n                        if (0x6ea <= code && code <= 0x6ed) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        // Cf       SYRIAC ABBREVIATION MARK\n                        if (0x70f === code) {\n                          return boundaries_1.CLUSTER_BREAK.PREPEND;\n                        }\n                        // Mn       SYRIAC LETTER SUPERSCRIPT ALAPH\n                        if (0x711 === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0x7eb) {\n                      if (code < 0x7a6) {\n                        // Mn  [27] SYRIAC PTHAHA ABOVE..SYRIAC BARREKH\n                        if (0x730 <= code && code <= 0x74a) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        // Mn  [11] THAANA ABAFILI..THAANA SUKUN\n                        if (0x7a6 <= code && code <= 0x7b0) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    } else {\n                      if (code < 0x7fd) {\n                        // Mn   [9] NKO COMBINING SHORT HIGH TONE..NKO COMBINING DOUBLE DOT ABOVE\n                        if (0x7eb <= code && code <= 0x7f3) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x816) {\n                          // Mn       NKO DANTAYALAN\n                          if (0x7fd === code) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mn   [4] SAMARITAN MARK IN..SAMARITAN MARK DAGESH\n                          if (0x816 <= code && code <= 0x819) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0x898) {\n                    if (code < 0x829) {\n                      if (code < 0x825) {\n                        // Mn   [9] SAMARITAN MARK EPENTHETIC YUT..SAMARITAN VOWEL SIGN A\n                        if (0x81b <= code && code <= 0x823) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        // Mn   [3] SAMARITAN VOWEL SIGN SHORT A..SAMARITAN VOWEL SIGN U\n                        if (0x825 <= code && code <= 0x827) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    } else {\n                      if (code < 0x859) {\n                        // Mn   [5] SAMARITAN VOWEL SIGN LONG I..SAMARITAN MARK NEQUDAA\n                        if (0x829 <= code && code <= 0x82d) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x890) {\n                          // Mn   [3] MANDAIC AFFRICATION MARK..MANDAIC GEMINATION MARK\n                          if (0x859 <= code && code <= 0x85b) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Cf   [2] ARABIC POUND MARK ABOVE..ARABIC PIASTRE MARK ABOVE\n                          if (0x890 <= code && code <= 0x891) {\n                            return boundaries_1.CLUSTER_BREAK.PREPEND;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0x8e3) {\n                      if (code < 0x8ca) {\n                        // Mn   [8] ARABIC SMALL HIGH WORD AL-JUZ..ARABIC HALF MADDA OVER MADDA\n                        if (0x898 <= code && code <= 0x89f) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x8e2) {\n                          // Mn  [24] ARABIC SMALL HIGH FARSI YEH..ARABIC SMALL HIGH SIGN SAFHA\n                          if (0x8ca <= code && code <= 0x8e1) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Cf       ARABIC DISPUTED END OF AYAH\n                          if (0x8e2 === code) {\n                            return boundaries_1.CLUSTER_BREAK.PREPEND;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0x903) {\n                        // Mn  [32] ARABIC TURNED DAMMA BELOW..DEVANAGARI SIGN ANUSVARA\n                        if (0x8e3 <= code && code <= 0x902) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        // Mc       DEVANAGARI SIGN VISARGA\n                        if (0x903 === code) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                        // Mn       DEVANAGARI VOWEL SIGN OE\n                        if (0x93a === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            } else {\n              if (code < 0xa01) {\n                if (code < 0x982) {\n                  if (code < 0x94d) {\n                    if (code < 0x93e) {\n                      // Mc       DEVANAGARI VOWEL SIGN OOE\n                      if (0x93b === code) {\n                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                      }\n                      // Mn       DEVANAGARI SIGN NUKTA\n                      if (0x93c === code) {\n                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                      }\n                    } else {\n                      if (code < 0x941) {\n                        // Mc   [3] DEVANAGARI VOWEL SIGN AA..DEVANAGARI VOWEL SIGN II\n                        if (0x93e <= code && code <= 0x940) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        if (code < 0x949) {\n                          // Mn   [8] DEVANAGARI VOWEL SIGN U..DEVANAGARI VOWEL SIGN AI\n                          if (0x941 <= code && code <= 0x948) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mc   [4] DEVANAGARI VOWEL SIGN CANDRA O..DEVANAGARI VOWEL SIGN AU\n                          if (0x949 <= code && code <= 0x94c) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0x951) {\n                      if (code < 0x94e) {\n                        // Mn       DEVANAGARI SIGN VIRAMA\n                        if (0x94d === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        // Mc   [2] DEVANAGARI VOWEL SIGN PRISHTHAMATRA E..DEVANAGARI VOWEL SIGN AW\n                        if (0x94e <= code && code <= 0x94f) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      }\n                    } else {\n                      if (code < 0x962) {\n                        // Mn   [7] DEVANAGARI STRESS SIGN UDATTA..DEVANAGARI VOWEL SIGN UUE\n                        if (0x951 <= code && code <= 0x957) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x981) {\n                          // Mn   [2] DEVANAGARI VOWEL SIGN VOCALIC L..DEVANAGARI VOWEL SIGN VOCALIC LL\n                          if (0x962 <= code && code <= 0x963) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mn       BENGALI SIGN CANDRABINDU\n                          if (0x981 === code) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0x9c7) {\n                    if (code < 0x9be) {\n                      if (code < 0x9bc) {\n                        // Mc   [2] BENGALI SIGN ANUSVARA..BENGALI SIGN VISARGA\n                        if (0x982 <= code && code <= 0x983) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        // Mn       BENGALI SIGN NUKTA\n                        if (0x9bc === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    } else {\n                      if (code < 0x9bf) {\n                        // Mc       BENGALI VOWEL SIGN AA\n                        if (0x9be === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x9c1) {\n                          // Mc   [2] BENGALI VOWEL SIGN I..BENGALI VOWEL SIGN II\n                          if (0x9bf <= code && code <= 0x9c0) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        } else {\n                          // Mn   [4] BENGALI VOWEL SIGN U..BENGALI VOWEL SIGN VOCALIC RR\n                          if (0x9c1 <= code && code <= 0x9c4) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0x9d7) {\n                      if (code < 0x9cb) {\n                        // Mc   [2] BENGALI VOWEL SIGN E..BENGALI VOWEL SIGN AI\n                        if (0x9c7 <= code && code <= 0x9c8) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        if (code < 0x9cd) {\n                          // Mc   [2] BENGALI VOWEL SIGN O..BENGALI VOWEL SIGN AU\n                          if (0x9cb <= code && code <= 0x9cc) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        } else {\n                          // Mn       BENGALI SIGN VIRAMA\n                          if (0x9cd === code) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0x9e2) {\n                        // Mc       BENGALI AU LENGTH MARK\n                        if (0x9d7 === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x9fe) {\n                          // Mn   [2] BENGALI VOWEL SIGN VOCALIC L..BENGALI VOWEL SIGN VOCALIC LL\n                          if (0x9e2 <= code && code <= 0x9e3) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mn       BENGALI SANDHI MARK\n                          if (0x9fe === code) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              } else {\n                if (code < 0xa83) {\n                  if (code < 0xa47) {\n                    if (code < 0xa3c) {\n                      if (code < 0xa03) {\n                        // Mn   [2] GURMUKHI SIGN ADAK BINDI..GURMUKHI SIGN BINDI\n                        if (0xa01 <= code && code <= 0xa02) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        // Mc       GURMUKHI SIGN VISARGA\n                        if (0xa03 === code) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      }\n                    } else {\n                      if (code < 0xa3e) {\n                        // Mn       GURMUKHI SIGN NUKTA\n                        if (0xa3c === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0xa41) {\n                          // Mc   [3] GURMUKHI VOWEL SIGN AA..GURMUKHI VOWEL SIGN II\n                          if (0xa3e <= code && code <= 0xa40) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        } else {\n                          // Mn   [2] GURMUKHI VOWEL SIGN U..GURMUKHI VOWEL SIGN UU\n                          if (0xa41 <= code && code <= 0xa42) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xa70) {\n                      if (code < 0xa4b) {\n                        // Mn   [2] GURMUKHI VOWEL SIGN EE..GURMUKHI VOWEL SIGN AI\n                        if (0xa47 <= code && code <= 0xa48) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0xa51) {\n                          // Mn   [3] GURMUKHI VOWEL SIGN OO..GURMUKHI SIGN VIRAMA\n                          if (0xa4b <= code && code <= 0xa4d) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mn       GURMUKHI SIGN UDAAT\n                          if (0xa51 === code) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xa75) {\n                        // Mn   [2] GURMUKHI TIPPI..GURMUKHI ADDAK\n                        if (0xa70 <= code && code <= 0xa71) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0xa81) {\n                          // Mn       GURMUKHI SIGN YAKASH\n                          if (0xa75 === code) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mn   [2] GUJARATI SIGN CANDRABINDU..GUJARATI SIGN ANUSVARA\n                          if (0xa81 <= code && code <= 0xa82) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0xac9) {\n                    if (code < 0xabe) {\n                      // Mc       GUJARATI SIGN VISARGA\n                      if (0xa83 === code) {\n                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                      }\n                      // Mn       GUJARATI SIGN NUKTA\n                      if (0xabc === code) {\n                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                      }\n                    } else {\n                      if (code < 0xac1) {\n                        // Mc   [3] GUJARATI VOWEL SIGN AA..GUJARATI VOWEL SIGN II\n                        if (0xabe <= code && code <= 0xac0) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        if (code < 0xac7) {\n                          // Mn   [5] GUJARATI VOWEL SIGN U..GUJARATI VOWEL SIGN CANDRA E\n                          if (0xac1 <= code && code <= 0xac5) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mn   [2] GUJARATI VOWEL SIGN E..GUJARATI VOWEL SIGN AI\n                          if (0xac7 <= code && code <= 0xac8) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xae2) {\n                      if (code < 0xacb) {\n                        // Mc       GUJARATI VOWEL SIGN CANDRA O\n                        if (0xac9 === code) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        if (code < 0xacd) {\n                          // Mc   [2] GUJARATI VOWEL SIGN O..GUJARATI VOWEL SIGN AU\n                          if (0xacb <= code && code <= 0xacc) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        } else {\n                          // Mn       GUJARATI SIGN VIRAMA\n                          if (0xacd === code) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xafa) {\n                        // Mn   [2] GUJARATI VOWEL SIGN VOCALIC L..GUJARATI VOWEL SIGN VOCALIC LL\n                        if (0xae2 <= code && code <= 0xae3) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0xb01) {\n                          // Mn   [6] GUJARATI SIGN SUKUN..GUJARATI SIGN TWO-CIRCLE NUKTA ABOVE\n                          if (0xafa <= code && code <= 0xaff) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mn       ORIYA SIGN CANDRABINDU\n                          if (0xb01 === code) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          } else {\n            if (code < 0xcf3) {\n              if (code < 0xc04) {\n                if (code < 0xb82) {\n                  if (code < 0xb47) {\n                    if (code < 0xb3e) {\n                      if (code < 0xb3c) {\n                        // Mc   [2] ORIYA SIGN ANUSVARA..ORIYA SIGN VISARGA\n                        if (0xb02 <= code && code <= 0xb03) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        // Mn       ORIYA SIGN NUKTA\n                        if (0xb3c === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    } else {\n                      if (code < 0xb40) {\n                        // Mc       ORIYA VOWEL SIGN AA\n                        // Mn       ORIYA VOWEL SIGN I\n                        if (0xb3e <= code && code <= 0xb3f) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0xb41) {\n                          // Mc       ORIYA VOWEL SIGN II\n                          if (0xb40 === code) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        } else {\n                          // Mn   [4] ORIYA VOWEL SIGN U..ORIYA VOWEL SIGN VOCALIC RR\n                          if (0xb41 <= code && code <= 0xb44) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xb4d) {\n                      if (code < 0xb4b) {\n                        // Mc   [2] ORIYA VOWEL SIGN E..ORIYA VOWEL SIGN AI\n                        if (0xb47 <= code && code <= 0xb48) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        // Mc   [2] ORIYA VOWEL SIGN O..ORIYA VOWEL SIGN AU\n                        if (0xb4b <= code && code <= 0xb4c) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      }\n                    } else {\n                      if (code < 0xb55) {\n                        // Mn       ORIYA SIGN VIRAMA\n                        if (0xb4d === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0xb62) {\n                          // Mn   [2] ORIYA SIGN OVERLINE..ORIYA AI LENGTH MARK\n                          // Mc       ORIYA AU LENGTH MARK\n                          if (0xb55 <= code && code <= 0xb57) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mn   [2] ORIYA VOWEL SIGN VOCALIC L..ORIYA VOWEL SIGN VOCALIC LL\n                          if (0xb62 <= code && code <= 0xb63) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0xbc6) {\n                    if (code < 0xbbf) {\n                      // Mn       TAMIL SIGN ANUSVARA\n                      if (0xb82 === code) {\n                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                      }\n                      // Mc       TAMIL VOWEL SIGN AA\n                      if (0xbbe === code) {\n                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                      }\n                    } else {\n                      if (code < 0xbc0) {\n                        // Mc       TAMIL VOWEL SIGN I\n                        if (0xbbf === code) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        if (code < 0xbc1) {\n                          // Mn       TAMIL VOWEL SIGN II\n                          if (0xbc0 === code) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mc   [2] TAMIL VOWEL SIGN U..TAMIL VOWEL SIGN UU\n                          if (0xbc1 <= code && code <= 0xbc2) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xbd7) {\n                      if (code < 0xbca) {\n                        // Mc   [3] TAMIL VOWEL SIGN E..TAMIL VOWEL SIGN AI\n                        if (0xbc6 <= code && code <= 0xbc8) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        if (code < 0xbcd) {\n                          // Mc   [3] TAMIL VOWEL SIGN O..TAMIL VOWEL SIGN AU\n                          if (0xbca <= code && code <= 0xbcc) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        } else {\n                          // Mn       TAMIL SIGN VIRAMA\n                          if (0xbcd === code) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xc00) {\n                        // Mc       TAMIL AU LENGTH MARK\n                        if (0xbd7 === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0xc01) {\n                          // Mn       TELUGU SIGN COMBINING CANDRABINDU ABOVE\n                          if (0xc00 === code) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mc   [3] TELUGU SIGN CANDRABINDU..TELUGU SIGN VISARGA\n                          if (0xc01 <= code && code <= 0xc03) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              } else {\n                if (code < 0xcbe) {\n                  if (code < 0xc4a) {\n                    if (code < 0xc3e) {\n                      // Mn       TELUGU SIGN COMBINING ANUSVARA ABOVE\n                      if (0xc04 === code) {\n                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                      }\n                      // Mn       TELUGU SIGN NUKTA\n                      if (0xc3c === code) {\n                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                      }\n                    } else {\n                      if (code < 0xc41) {\n                        // Mn   [3] TELUGU VOWEL SIGN AA..TELUGU VOWEL SIGN II\n                        if (0xc3e <= code && code <= 0xc40) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0xc46) {\n                          // Mc   [4] TELUGU VOWEL SIGN U..TELUGU VOWEL SIGN VOCALIC RR\n                          if (0xc41 <= code && code <= 0xc44) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        } else {\n                          // Mn   [3] TELUGU VOWEL SIGN E..TELUGU VOWEL SIGN AI\n                          if (0xc46 <= code && code <= 0xc48) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xc81) {\n                      if (code < 0xc55) {\n                        // Mn   [4] TELUGU VOWEL SIGN O..TELUGU SIGN VIRAMA\n                        if (0xc4a <= code && code <= 0xc4d) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0xc62) {\n                          // Mn   [2] TELUGU LENGTH MARK..TELUGU AI LENGTH MARK\n                          if (0xc55 <= code && code <= 0xc56) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mn   [2] TELUGU VOWEL SIGN VOCALIC L..TELUGU VOWEL SIGN VOCALIC LL\n                          if (0xc62 <= code && code <= 0xc63) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xc82) {\n                        // Mn       KANNADA SIGN CANDRABINDU\n                        if (0xc81 === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0xcbc) {\n                          // Mc   [2] KANNADA SIGN ANUSVARA..KANNADA SIGN VISARGA\n                          if (0xc82 <= code && code <= 0xc83) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        } else {\n                          // Mn       KANNADA SIGN NUKTA\n                          if (0xcbc === code) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0xcc6) {\n                    if (code < 0xcc0) {\n                      // Mc       KANNADA VOWEL SIGN AA\n                      if (0xcbe === code) {\n                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                      }\n                      // Mn       KANNADA VOWEL SIGN I\n                      if (0xcbf === code) {\n                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                      }\n                    } else {\n                      if (code < 0xcc2) {\n                        // Mc   [2] KANNADA VOWEL SIGN II..KANNADA VOWEL SIGN U\n                        if (0xcc0 <= code && code <= 0xcc1) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        if (code < 0xcc3) {\n                          // Mc       KANNADA VOWEL SIGN UU\n                          if (0xcc2 === code) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mc   [2] KANNADA VOWEL SIGN VOCALIC R..KANNADA VOWEL SIGN VOCALIC RR\n                          if (0xcc3 <= code && code <= 0xcc4) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xccc) {\n                      if (code < 0xcc7) {\n                        // Mn       KANNADA VOWEL SIGN E\n                        if (0xcc6 === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0xcca) {\n                          // Mc   [2] KANNADA VOWEL SIGN EE..KANNADA VOWEL SIGN AI\n                          if (0xcc7 <= code && code <= 0xcc8) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        } else {\n                          // Mc   [2] KANNADA VOWEL SIGN O..KANNADA VOWEL SIGN OO\n                          if (0xcca <= code && code <= 0xccb) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xcd5) {\n                        // Mn   [2] KANNADA VOWEL SIGN AU..KANNADA SIGN VIRAMA\n                        if (0xccc <= code && code <= 0xccd) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0xce2) {\n                          // Mc   [2] KANNADA LENGTH MARK..KANNADA AI LENGTH MARK\n                          if (0xcd5 <= code && code <= 0xcd6) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mn   [2] KANNADA VOWEL SIGN VOCALIC L..KANNADA VOWEL SIGN VOCALIC LL\n                          if (0xce2 <= code && code <= 0xce3) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            } else {\n              if (code < 0xddf) {\n                if (code < 0xd4e) {\n                  if (code < 0xd3f) {\n                    if (code < 0xd02) {\n                      if (code < 0xd00) {\n                        // Mc       KANNADA SIGN COMBINING ANUSVARA ABOVE RIGHT\n                        if (0xcf3 === code) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        // Mn   [2] MALAYALAM SIGN COMBINING ANUSVARA ABOVE..MALAYALAM SIGN CANDRABINDU\n                        if (0xd00 <= code && code <= 0xd01) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    } else {\n                      if (code < 0xd3b) {\n                        // Mc   [2] MALAYALAM SIGN ANUSVARA..MALAYALAM SIGN VISARGA\n                        if (0xd02 <= code && code <= 0xd03) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        if (code < 0xd3e) {\n                          // Mn   [2] MALAYALAM SIGN VERTICAL BAR VIRAMA..MALAYALAM SIGN CIRCULAR VIRAMA\n                          if (0xd3b <= code && code <= 0xd3c) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mc       MALAYALAM VOWEL SIGN AA\n                          if (0xd3e === code) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xd46) {\n                      if (code < 0xd41) {\n                        // Mc   [2] MALAYALAM VOWEL SIGN I..MALAYALAM VOWEL SIGN II\n                        if (0xd3f <= code && code <= 0xd40) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        // Mn   [4] MALAYALAM VOWEL SIGN U..MALAYALAM VOWEL SIGN VOCALIC RR\n                        if (0xd41 <= code && code <= 0xd44) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    } else {\n                      if (code < 0xd4a) {\n                        // Mc   [3] MALAYALAM VOWEL SIGN E..MALAYALAM VOWEL SIGN AI\n                        if (0xd46 <= code && code <= 0xd48) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        if (code < 0xd4d) {\n                          // Mc   [3] MALAYALAM VOWEL SIGN O..MALAYALAM VOWEL SIGN AU\n                          if (0xd4a <= code && code <= 0xd4c) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        } else {\n                          // Mn       MALAYALAM SIGN VIRAMA\n                          if (0xd4d === code) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0xdca) {\n                    if (code < 0xd62) {\n                      // Lo       MALAYALAM LETTER DOT REPH\n                      if (0xd4e === code) {\n                        return boundaries_1.CLUSTER_BREAK.PREPEND;\n                      }\n                      // Mc       MALAYALAM AU LENGTH MARK\n                      if (0xd57 === code) {\n                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                      }\n                    } else {\n                      if (code < 0xd81) {\n                        // Mn   [2] MALAYALAM VOWEL SIGN VOCALIC L..MALAYALAM VOWEL SIGN VOCALIC LL\n                        if (0xd62 <= code && code <= 0xd63) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0xd82) {\n                          // Mn       SINHALA SIGN CANDRABINDU\n                          if (0xd81 === code) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mc   [2] SINHALA SIGN ANUSVARAYA..SINHALA SIGN VISARGAYA\n                          if (0xd82 <= code && code <= 0xd83) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xdd2) {\n                      if (code < 0xdcf) {\n                        // Mn       SINHALA SIGN AL-LAKUNA\n                        if (0xdca === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0xdd0) {\n                          // Mc       SINHALA VOWEL SIGN AELA-PILLA\n                          if (0xdcf === code) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mc   [2] SINHALA VOWEL SIGN KETTI AEDA-PILLA..SINHALA VOWEL SIGN DIGA AEDA-PILLA\n                          if (0xdd0 <= code && code <= 0xdd1) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xdd6) {\n                        // Mn   [3] SINHALA VOWEL SIGN KETTI IS-PILLA..SINHALA VOWEL SIGN KETTI PAA-PILLA\n                        if (0xdd2 <= code && code <= 0xdd4) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0xdd8) {\n                          // Mn       SINHALA VOWEL SIGN DIGA PAA-PILLA\n                          if (0xdd6 === code) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mc   [7] SINHALA VOWEL SIGN GAETTA-PILLA..SINHALA VOWEL SIGN KOMBUVA HAA GAYANUKITTA\n                          if (0xdd8 <= code && code <= 0xdde) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              } else {\n                if (code < 0xf35) {\n                  if (code < 0xe47) {\n                    if (code < 0xe31) {\n                      if (code < 0xdf2) {\n                        // Mc       SINHALA VOWEL SIGN GAYANUKITTA\n                        if (0xddf === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        // Mc   [2] SINHALA VOWEL SIGN DIGA GAETTA-PILLA..SINHALA VOWEL SIGN DIGA GAYANUKITTA\n                        if (0xdf2 <= code && code <= 0xdf3) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      }\n                    } else {\n                      if (code < 0xe33) {\n                        // Mn       THAI CHARACTER MAI HAN-AKAT\n                        if (0xe31 === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0xe34) {\n                          // Lo       THAI CHARACTER SARA AM\n                          if (0xe33 === code) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        } else {\n                          // Mn   [7] THAI CHARACTER SARA I..THAI CHARACTER PHINTHU\n                          if (0xe34 <= code && code <= 0xe3a) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xeb4) {\n                      if (code < 0xeb1) {\n                        // Mn   [8] THAI CHARACTER MAITAIKHU..THAI CHARACTER YAMAKKAN\n                        if (0xe47 <= code && code <= 0xe4e) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        // Mn       LAO VOWEL SIGN MAI KAN\n                        if (0xeb1 === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                        // Lo       LAO VOWEL SIGN AM\n                        if (0xeb3 === code) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      }\n                    } else {\n                      if (code < 0xec8) {\n                        // Mn   [9] LAO VOWEL SIGN I..LAO SEMIVOWEL SIGN LO\n                        if (0xeb4 <= code && code <= 0xebc) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0xf18) {\n                          // Mn   [7] LAO TONE MAI EK..LAO YAMAKKAN\n                          if (0xec8 <= code && code <= 0xece) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mn   [2] TIBETAN ASTROLOGICAL SIGN -KHYUD PA..TIBETAN ASTROLOGICAL SIGN SDONG TSHUGS\n                          if (0xf18 <= code && code <= 0xf19) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0xf7f) {\n                    if (code < 0xf39) {\n                      // Mn       TIBETAN MARK NGAS BZUNG NYI ZLA\n                      if (0xf35 === code) {\n                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                      }\n                      // Mn       TIBETAN MARK NGAS BZUNG SGOR RTAGS\n                      if (0xf37 === code) {\n                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                      }\n                    } else {\n                      if (code < 0xf3e) {\n                        // Mn       TIBETAN MARK TSA -PHRU\n                        if (0xf39 === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0xf71) {\n                          // Mc   [2] TIBETAN SIGN YAR TSHES..TIBETAN SIGN MAR TSHES\n                          if (0xf3e <= code && code <= 0xf3f) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        } else {\n                          // Mn  [14] TIBETAN VOWEL SIGN AA..TIBETAN SIGN RJES SU NGA RO\n                          if (0xf71 <= code && code <= 0xf7e) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xf8d) {\n                      if (code < 0xf80) {\n                        // Mc       TIBETAN SIGN RNAM BCAD\n                        if (0xf7f === code) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        if (code < 0xf86) {\n                          // Mn   [5] TIBETAN VOWEL SIGN REVERSED I..TIBETAN MARK HALANTA\n                          if (0xf80 <= code && code <= 0xf84) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mn   [2] TIBETAN SIGN LCI RTAGS..TIBETAN SIGN YANG RTAGS\n                          if (0xf86 <= code && code <= 0xf87) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xf99) {\n                        // Mn  [11] TIBETAN SUBJOINED SIGN LCE TSA CAN..TIBETAN SUBJOINED LETTER JA\n                        if (0xf8d <= code && code <= 0xf97) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0xfc6) {\n                          // Mn  [36] TIBETAN SUBJOINED LETTER NYA..TIBETAN SUBJOINED LETTER FIXED-FORM RA\n                          if (0xf99 <= code && code <= 0xfbc) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mn       TIBETAN SYMBOL PADMA GDAN\n                          if (0xfc6 === code) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        } else {\n          if (code < 0x1c24) {\n            if (code < 0x1930) {\n              if (code < 0x1732) {\n                if (code < 0x1082) {\n                  if (code < 0x103d) {\n                    if (code < 0x1032) {\n                      if (code < 0x1031) {\n                        // Mn   [4] MYANMAR VOWEL SIGN I..MYANMAR VOWEL SIGN UU\n                        if (0x102d <= code && code <= 0x1030) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        // Mc       MYANMAR VOWEL SIGN E\n                        if (0x1031 === code) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      }\n                    } else {\n                      if (code < 0x1039) {\n                        // Mn   [6] MYANMAR VOWEL SIGN AI..MYANMAR SIGN DOT BELOW\n                        if (0x1032 <= code && code <= 0x1037) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x103b) {\n                          // Mn   [2] MYANMAR SIGN VIRAMA..MYANMAR SIGN ASAT\n                          if (0x1039 <= code && code <= 0x103a) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mc   [2] MYANMAR CONSONANT SIGN MEDIAL YA..MYANMAR CONSONANT SIGN MEDIAL RA\n                          if (0x103b <= code && code <= 0x103c) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0x1058) {\n                      if (code < 0x1056) {\n                        // Mn   [2] MYANMAR CONSONANT SIGN MEDIAL WA..MYANMAR CONSONANT SIGN MEDIAL HA\n                        if (0x103d <= code && code <= 0x103e) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        // Mc   [2] MYANMAR VOWEL SIGN VOCALIC R..MYANMAR VOWEL SIGN VOCALIC RR\n                        if (0x1056 <= code && code <= 0x1057) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      }\n                    } else {\n                      if (code < 0x105e) {\n                        // Mn   [2] MYANMAR VOWEL SIGN VOCALIC L..MYANMAR VOWEL SIGN VOCALIC LL\n                        if (0x1058 <= code && code <= 0x1059) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x1071) {\n                          // Mn   [3] MYANMAR CONSONANT SIGN MON MEDIAL NA..MYANMAR CONSONANT SIGN MON MEDIAL LA\n                          if (0x105e <= code && code <= 0x1060) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mn   [4] MYANMAR VOWEL SIGN GEBA KAREN I..MYANMAR VOWEL SIGN KAYAH EE\n                          if (0x1071 <= code && code <= 0x1074) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0x1100) {\n                    if (code < 0x1085) {\n                      // Mn       MYANMAR CONSONANT SIGN SHAN MEDIAL WA\n                      if (0x1082 === code) {\n                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                      }\n                      // Mc       MYANMAR VOWEL SIGN SHAN E\n                      if (0x1084 === code) {\n                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                      }\n                    } else {\n                      if (code < 0x108d) {\n                        // Mn   [2] MYANMAR VOWEL SIGN SHAN E ABOVE..MYANMAR VOWEL SIGN SHAN FINAL Y\n                        if (0x1085 <= code && code <= 0x1086) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        // Mn       MYANMAR SIGN SHAN COUNCIL EMPHATIC TONE\n                        if (0x108d === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                        // Mn       MYANMAR VOWEL SIGN AITON AI\n                        if (0x109d === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0x135d) {\n                      if (code < 0x1160) {\n                        // Lo  [96] HANGUL CHOSEONG KIYEOK..HANGUL CHOSEONG FILLER\n                        if (0x1100 <= code && code <= 0x115f) {\n                          return boundaries_1.CLUSTER_BREAK.L;\n                        }\n                      } else {\n                        if (code < 0x11a8) {\n                          // Lo  [72] HANGUL JUNGSEONG FILLER..HANGUL JUNGSEONG O-YAE\n                          if (0x1160 <= code && code <= 0x11a7) {\n                            return boundaries_1.CLUSTER_BREAK.V;\n                          }\n                        } else {\n                          // Lo  [88] HANGUL JONGSEONG KIYEOK..HANGUL JONGSEONG SSANGNIEUN\n                          if (0x11a8 <= code && code <= 0x11ff) {\n                            return boundaries_1.CLUSTER_BREAK.T;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0x1712) {\n                        // Mn   [3] ETHIOPIC COMBINING GEMINATION AND VOWEL LENGTH MARK..ETHIOPIC COMBINING GEMINATION MARK\n                        if (0x135d <= code && code <= 0x135f) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x1715) {\n                          // Mn   [3] TAGALOG VOWEL SIGN I..TAGALOG SIGN VIRAMA\n                          if (0x1712 <= code && code <= 0x1714) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mc       TAGALOG SIGN PAMUDPOD\n                          if (0x1715 === code) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              } else {\n                if (code < 0x17c9) {\n                  if (code < 0x17b6) {\n                    if (code < 0x1752) {\n                      if (code < 0x1734) {\n                        // Mn   [2] HANUNOO VOWEL SIGN I..HANUNOO VOWEL SIGN U\n                        if (0x1732 <= code && code <= 0x1733) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        // Mc       HANUNOO SIGN PAMUDPOD\n                        if (0x1734 === code) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      }\n                    } else {\n                      if (code < 0x1772) {\n                        // Mn   [2] BUHID VOWEL SIGN I..BUHID VOWEL SIGN U\n                        if (0x1752 <= code && code <= 0x1753) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x17b4) {\n                          // Mn   [2] TAGBANWA VOWEL SIGN I..TAGBANWA VOWEL SIGN U\n                          if (0x1772 <= code && code <= 0x1773) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mn   [2] KHMER VOWEL INHERENT AQ..KHMER VOWEL INHERENT AA\n                          if (0x17b4 <= code && code <= 0x17b5) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0x17be) {\n                      if (code < 0x17b7) {\n                        // Mc       KHMER VOWEL SIGN AA\n                        if (0x17b6 === code) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        // Mn   [7] KHMER VOWEL SIGN I..KHMER VOWEL SIGN UA\n                        if (0x17b7 <= code && code <= 0x17bd) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    } else {\n                      if (code < 0x17c6) {\n                        // Mc   [8] KHMER VOWEL SIGN OE..KHMER VOWEL SIGN AU\n                        if (0x17be <= code && code <= 0x17c5) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        if (code < 0x17c7) {\n                          // Mn       KHMER SIGN NIKAHIT\n                          if (0x17c6 === code) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mc   [2] KHMER SIGN REAHMUK..KHMER SIGN YUUKALEAPINTU\n                          if (0x17c7 <= code && code <= 0x17c8) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0x1885) {\n                    if (code < 0x180b) {\n                      if (code < 0x17dd) {\n                        // Mn  [11] KHMER SIGN MUUSIKATOAN..KHMER SIGN BATHAMASAT\n                        if (0x17c9 <= code && code <= 0x17d3) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        // Mn       KHMER SIGN ATTHACAN\n                        if (0x17dd === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    } else {\n                      if (code < 0x180e) {\n                        // Mn   [3] MONGOLIAN FREE VARIATION SELECTOR ONE..MONGOLIAN FREE VARIATION SELECTOR THREE\n                        if (0x180b <= code && code <= 0x180d) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        // Cf       MONGOLIAN VOWEL SEPARATOR\n                        if (0x180e === code) {\n                          return boundaries_1.CLUSTER_BREAK.CONTROL;\n                        }\n                        // Mn       MONGOLIAN FREE VARIATION SELECTOR FOUR\n                        if (0x180f === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0x1923) {\n                      if (code < 0x18a9) {\n                        // Mn   [2] MONGOLIAN LETTER ALI GALI BALUDA..MONGOLIAN LETTER ALI GALI THREE BALUDA\n                        if (0x1885 <= code && code <= 0x1886) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x1920) {\n                          // Mn       MONGOLIAN LETTER ALI GALI DAGALGA\n                          if (0x18a9 === code) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mn   [3] LIMBU VOWEL SIGN A..LIMBU VOWEL SIGN U\n                          if (0x1920 <= code && code <= 0x1922) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0x1927) {\n                        // Mc   [4] LIMBU VOWEL SIGN EE..LIMBU VOWEL SIGN AU\n                        if (0x1923 <= code && code <= 0x1926) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        if (code < 0x1929) {\n                          // Mn   [2] LIMBU VOWEL SIGN E..LIMBU VOWEL SIGN O\n                          if (0x1927 <= code && code <= 0x1928) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mc   [3] LIMBU SUBJOINED LETTER YA..LIMBU SUBJOINED LETTER WA\n                          if (0x1929 <= code && code <= 0x192b) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            } else {\n              if (code < 0x1b3b) {\n                if (code < 0x1a58) {\n                  if (code < 0x1a19) {\n                    if (code < 0x1933) {\n                      if (code < 0x1932) {\n                        // Mc   [2] LIMBU SMALL LETTER KA..LIMBU SMALL LETTER NGA\n                        if (0x1930 <= code && code <= 0x1931) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        // Mn       LIMBU SMALL LETTER ANUSVARA\n                        if (0x1932 === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    } else {\n                      if (code < 0x1939) {\n                        // Mc   [6] LIMBU SMALL LETTER TA..LIMBU SMALL LETTER LA\n                        if (0x1933 <= code && code <= 0x1938) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        if (code < 0x1a17) {\n                          // Mn   [3] LIMBU SIGN MUKPHRENG..LIMBU SIGN SA-I\n                          if (0x1939 <= code && code <= 0x193b) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mn   [2] BUGINESE VOWEL SIGN I..BUGINESE VOWEL SIGN U\n                          if (0x1a17 <= code && code <= 0x1a18) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0x1a55) {\n                      if (code < 0x1a1b) {\n                        // Mc   [2] BUGINESE VOWEL SIGN E..BUGINESE VOWEL SIGN O\n                        if (0x1a19 <= code && code <= 0x1a1a) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        // Mn       BUGINESE VOWEL SIGN AE\n                        if (0x1a1b === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    } else {\n                      if (code < 0x1a56) {\n                        // Mc       TAI THAM CONSONANT SIGN MEDIAL RA\n                        if (0x1a55 === code) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        // Mn       TAI THAM CONSONANT SIGN MEDIAL LA\n                        if (0x1a56 === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                        // Mc       TAI THAM CONSONANT SIGN LA TANG LAI\n                        if (0x1a57 === code) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0x1a73) {\n                    if (code < 0x1a62) {\n                      if (code < 0x1a60) {\n                        // Mn   [7] TAI THAM SIGN MAI KANG LAI..TAI THAM CONSONANT SIGN SA\n                        if (0x1a58 <= code && code <= 0x1a5e) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        // Mn       TAI THAM SIGN SAKOT\n                        if (0x1a60 === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    } else {\n                      if (code < 0x1a65) {\n                        // Mn       TAI THAM VOWEL SIGN MAI SAT\n                        if (0x1a62 === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x1a6d) {\n                          // Mn   [8] TAI THAM VOWEL SIGN I..TAI THAM VOWEL SIGN OA BELOW\n                          if (0x1a65 <= code && code <= 0x1a6c) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mc   [6] TAI THAM VOWEL SIGN OY..TAI THAM VOWEL SIGN THAM AI\n                          if (0x1a6d <= code && code <= 0x1a72) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0x1b00) {\n                      if (code < 0x1a7f) {\n                        // Mn  [10] TAI THAM VOWEL SIGN OA ABOVE..TAI THAM SIGN KHUEN-LUE KARAN\n                        if (0x1a73 <= code && code <= 0x1a7c) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x1ab0) {\n                          // Mn       TAI THAM COMBINING CRYPTOGRAMMIC DOT\n                          if (0x1a7f === code) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mn  [14] COMBINING DOUBLED CIRCUMFLEX ACCENT..COMBINING PARENTHESES BELOW\n                          // Me       COMBINING PARENTHESES OVERLAY\n                          // Mn  [16] COMBINING LATIN SMALL LETTER W BELOW..COMBINING LATIN SMALL LETTER INSULAR T\n                          if (0x1ab0 <= code && code <= 0x1ace) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0x1b04) {\n                        // Mn   [4] BALINESE SIGN ULU RICEM..BALINESE SIGN SURANG\n                        if (0x1b00 <= code && code <= 0x1b03) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x1b34) {\n                          // Mc       BALINESE SIGN BISAH\n                          if (0x1b04 === code) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        } else {\n                          // Mn       BALINESE SIGN REREKAN\n                          // Mc       BALINESE VOWEL SIGN TEDUNG\n                          // Mn   [5] BALINESE VOWEL SIGN ULU..BALINESE VOWEL SIGN RA REPA\n                          if (0x1b34 <= code && code <= 0x1b3a) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              } else {\n                if (code < 0x1ba8) {\n                  if (code < 0x1b6b) {\n                    if (code < 0x1b3d) {\n                      // Mc       BALINESE VOWEL SIGN RA REPA TEDUNG\n                      if (0x1b3b === code) {\n                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                      }\n                      // Mn       BALINESE VOWEL SIGN LA LENGA\n                      if (0x1b3c === code) {\n                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                      }\n                    } else {\n                      if (code < 0x1b42) {\n                        // Mc   [5] BALINESE VOWEL SIGN LA LENGA TEDUNG..BALINESE VOWEL SIGN TALING REPA TEDUNG\n                        if (0x1b3d <= code && code <= 0x1b41) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        if (code < 0x1b43) {\n                          // Mn       BALINESE VOWEL SIGN PEPET\n                          if (0x1b42 === code) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mc   [2] BALINESE VOWEL SIGN PEPET TEDUNG..BALINESE ADEG ADEG\n                          if (0x1b43 <= code && code <= 0x1b44) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0x1ba1) {\n                      if (code < 0x1b80) {\n                        // Mn   [9] BALINESE MUSICAL SYMBOL COMBINING TEGEH..BALINESE MUSICAL SYMBOL COMBINING GONG\n                        if (0x1b6b <= code && code <= 0x1b73) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x1b82) {\n                          // Mn   [2] SUNDANESE SIGN PANYECEK..SUNDANESE SIGN PANGLAYAR\n                          if (0x1b80 <= code && code <= 0x1b81) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mc       SUNDANESE SIGN PANGWISAD\n                          if (0x1b82 === code) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0x1ba2) {\n                        // Mc       SUNDANESE CONSONANT SIGN PAMINGKAL\n                        if (0x1ba1 === code) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        if (code < 0x1ba6) {\n                          // Mn   [4] SUNDANESE CONSONANT SIGN PANYAKRA..SUNDANESE VOWEL SIGN PANYUKU\n                          if (0x1ba2 <= code && code <= 0x1ba5) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mc   [2] SUNDANESE VOWEL SIGN PANAELAENG..SUNDANESE VOWEL SIGN PANOLONG\n                          if (0x1ba6 <= code && code <= 0x1ba7) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0x1be8) {\n                    if (code < 0x1bab) {\n                      if (code < 0x1baa) {\n                        // Mn   [2] SUNDANESE VOWEL SIGN PAMEPET..SUNDANESE VOWEL SIGN PANEULEUNG\n                        if (0x1ba8 <= code && code <= 0x1ba9) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        // Mc       SUNDANESE SIGN PAMAAEH\n                        if (0x1baa === code) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      }\n                    } else {\n                      if (code < 0x1be6) {\n                        // Mn   [3] SUNDANESE SIGN VIRAMA..SUNDANESE CONSONANT SIGN PASANGAN WA\n                        if (0x1bab <= code && code <= 0x1bad) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        // Mn       BATAK SIGN TOMPI\n                        if (0x1be6 === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                        // Mc       BATAK VOWEL SIGN E\n                        if (0x1be7 === code) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0x1bee) {\n                      if (code < 0x1bea) {\n                        // Mn   [2] BATAK VOWEL SIGN PAKPAK E..BATAK VOWEL SIGN EE\n                        if (0x1be8 <= code && code <= 0x1be9) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x1bed) {\n                          // Mc   [3] BATAK VOWEL SIGN I..BATAK VOWEL SIGN O\n                          if (0x1bea <= code && code <= 0x1bec) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        } else {\n                          // Mn       BATAK VOWEL SIGN KARO O\n                          if (0x1bed === code) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0x1bef) {\n                        // Mc       BATAK VOWEL SIGN U\n                        if (0x1bee === code) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        if (code < 0x1bf2) {\n                          // Mn   [3] BATAK VOWEL SIGN U FOR SIMALUNGUN SA..BATAK CONSONANT SIGN H\n                          if (0x1bef <= code && code <= 0x1bf1) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mc   [2] BATAK PANGOLAT..BATAK PANONGONAN\n                          if (0x1bf2 <= code && code <= 0x1bf3) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          } else {\n            if (code < 0xa952) {\n              if (code < 0x2d7f) {\n                if (code < 0x1cf7) {\n                  if (code < 0x1cd4) {\n                    if (code < 0x1c34) {\n                      if (code < 0x1c2c) {\n                        // Mc   [8] LEPCHA SUBJOINED LETTER YA..LEPCHA VOWEL SIGN UU\n                        if (0x1c24 <= code && code <= 0x1c2b) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        // Mn   [8] LEPCHA VOWEL SIGN E..LEPCHA CONSONANT SIGN T\n                        if (0x1c2c <= code && code <= 0x1c33) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    } else {\n                      if (code < 0x1c36) {\n                        // Mc   [2] LEPCHA CONSONANT SIGN NYIN-DO..LEPCHA CONSONANT SIGN KANG\n                        if (0x1c34 <= code && code <= 0x1c35) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        if (code < 0x1cd0) {\n                          // Mn   [2] LEPCHA SIGN RAN..LEPCHA SIGN NUKTA\n                          if (0x1c36 <= code && code <= 0x1c37) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mn   [3] VEDIC TONE KARSHANA..VEDIC TONE PRENKHA\n                          if (0x1cd0 <= code && code <= 0x1cd2) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0x1ce2) {\n                      if (code < 0x1ce1) {\n                        // Mn  [13] VEDIC SIGN YAJURVEDIC MIDLINE SVARITA..VEDIC TONE RIGVEDIC KASHMIRI INDEPENDENT SVARITA\n                        if (0x1cd4 <= code && code <= 0x1ce0) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        // Mc       VEDIC TONE ATHARVAVEDIC INDEPENDENT SVARITA\n                        if (0x1ce1 === code) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      }\n                    } else {\n                      if (code < 0x1ced) {\n                        // Mn   [7] VEDIC SIGN VISARGA SVARITA..VEDIC SIGN VISARGA ANUDATTA WITH TAIL\n                        if (0x1ce2 <= code && code <= 0x1ce8) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        // Mn       VEDIC SIGN TIRYAK\n                        if (0x1ced === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                        // Mn       VEDIC TONE CANDRA ABOVE\n                        if (0x1cf4 === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0x200d) {\n                    if (code < 0x1dc0) {\n                      if (code < 0x1cf8) {\n                        // Mc       VEDIC SIGN ATIKRAMA\n                        if (0x1cf7 === code) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        // Mn   [2] VEDIC TONE RING ABOVE..VEDIC TONE DOUBLE RING ABOVE\n                        if (0x1cf8 <= code && code <= 0x1cf9) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    } else {\n                      if (code < 0x200b) {\n                        // Mn  [64] COMBINING DOTTED GRAVE ACCENT..COMBINING RIGHT ARROWHEAD AND DOWN ARROWHEAD BELOW\n                        if (0x1dc0 <= code && code <= 0x1dff) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        // Cf       ZERO WIDTH SPACE\n                        if (0x200b === code) {\n                          return boundaries_1.CLUSTER_BREAK.CONTROL;\n                        }\n                        // Cf       ZERO WIDTH NON-JOINER\n                        if (0x200c === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0x2060) {\n                      if (code < 0x200e) {\n                        // Cf       ZERO WIDTH JOINER\n                        if (0x200d === code) {\n                          return boundaries_1.CLUSTER_BREAK.ZWJ;\n                        }\n                      } else {\n                        if (code < 0x2028) {\n                          // Cf   [2] LEFT-TO-RIGHT MARK..RIGHT-TO-LEFT MARK\n                          if (0x200e <= code && code <= 0x200f) {\n                            return boundaries_1.CLUSTER_BREAK.CONTROL;\n                          }\n                        } else {\n                          // Zl       LINE SEPARATOR\n                          // Zp       PARAGRAPH SEPARATOR\n                          // Cf   [5] LEFT-TO-RIGHT EMBEDDING..RIGHT-TO-LEFT OVERRIDE\n                          if (0x2028 <= code && code <= 0x202e) {\n                            return boundaries_1.CLUSTER_BREAK.CONTROL;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0x20d0) {\n                        // Cf   [5] WORD JOINER..INVISIBLE PLUS\n                        // Cn       <reserved-2065>\n                        // Cf  [10] LEFT-TO-RIGHT ISOLATE..NOMINAL DIGIT SHAPES\n                        if (0x2060 <= code && code <= 0x206f) {\n                          return boundaries_1.CLUSTER_BREAK.CONTROL;\n                        }\n                      } else {\n                        if (code < 0x2cef) {\n                          // Mn  [13] COMBINING LEFT HARPOON ABOVE..COMBINING FOUR DOTS ABOVE\n                          // Me   [4] COMBINING ENCLOSING CIRCLE..COMBINING ENCLOSING CIRCLE BACKSLASH\n                          // Mn       COMBINING LEFT RIGHT ARROW ABOVE\n                          // Me   [3] COMBINING ENCLOSING SCREEN..COMBINING ENCLOSING UPWARD POINTING TRIANGLE\n                          // Mn  [12] COMBINING REVERSE SOLIDUS OVERLAY..COMBINING ASTERISK ABOVE\n                          if (0x20d0 <= code && code <= 0x20f0) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mn   [3] COPTIC COMBINING NI ABOVE..COPTIC COMBINING SPIRITUS LENIS\n                          if (0x2cef <= code && code <= 0x2cf1) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              } else {\n                if (code < 0xa823) {\n                  if (code < 0xa674) {\n                    if (code < 0x302a) {\n                      if (code < 0x2de0) {\n                        // Mn       TIFINAGH CONSONANT JOINER\n                        if (0x2d7f === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        // Mn  [32] COMBINING CYRILLIC LETTER BE..COMBINING CYRILLIC LETTER IOTIFIED BIG YUS\n                        if (0x2de0 <= code && code <= 0x2dff) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    } else {\n                      if (code < 0x3099) {\n                        // Mn   [4] IDEOGRAPHIC LEVEL TONE MARK..IDEOGRAPHIC ENTERING TONE MARK\n                        // Mc   [2] HANGUL SINGLE DOT TONE MARK..HANGUL DOUBLE DOT TONE MARK\n                        if (0x302a <= code && code <= 0x302f) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0xa66f) {\n                          // Mn   [2] COMBINING KATAKANA-HIRAGANA VOICED SOUND MARK..COMBINING KATAKANA-HIRAGANA SEMI-VOICED SOUND MARK\n                          if (0x3099 <= code && code <= 0x309a) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mn       COMBINING CYRILLIC VZMET\n                          // Me   [3] COMBINING CYRILLIC TEN MILLIONS SIGN..COMBINING CYRILLIC THOUSAND MILLIONS SIGN\n                          if (0xa66f <= code && code <= 0xa672) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xa802) {\n                      if (code < 0xa69e) {\n                        // Mn  [10] COMBINING CYRILLIC LETTER UKRAINIAN IE..COMBINING CYRILLIC PAYEROK\n                        if (0xa674 <= code && code <= 0xa67d) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0xa6f0) {\n                          // Mn   [2] COMBINING CYRILLIC LETTER EF..COMBINING CYRILLIC LETTER IOTIFIED E\n                          if (0xa69e <= code && code <= 0xa69f) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mn   [2] BAMUM COMBINING MARK KOQNDON..BAMUM COMBINING MARK TUKWENTIS\n                          if (0xa6f0 <= code && code <= 0xa6f1) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xa806) {\n                        // Mn       SYLOTI NAGRI SIGN DVISVARA\n                        if (0xa802 === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        // Mn       SYLOTI NAGRI SIGN HASANTA\n                        if (0xa806 === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                        // Mn       SYLOTI NAGRI SIGN ANUSVARA\n                        if (0xa80b === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0xa8b4) {\n                    if (code < 0xa827) {\n                      if (code < 0xa825) {\n                        // Mc   [2] SYLOTI NAGRI VOWEL SIGN A..SYLOTI NAGRI VOWEL SIGN I\n                        if (0xa823 <= code && code <= 0xa824) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        // Mn   [2] SYLOTI NAGRI VOWEL SIGN U..SYLOTI NAGRI VOWEL SIGN E\n                        if (0xa825 <= code && code <= 0xa826) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    } else {\n                      if (code < 0xa82c) {\n                        // Mc       SYLOTI NAGRI VOWEL SIGN OO\n                        if (0xa827 === code) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        if (code < 0xa880) {\n                          // Mn       SYLOTI NAGRI SIGN ALTERNATE HASANTA\n                          if (0xa82c === code) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mc   [2] SAURASHTRA SIGN ANUSVARA..SAURASHTRA SIGN VISARGA\n                          if (0xa880 <= code && code <= 0xa881) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xa8ff) {\n                      if (code < 0xa8c4) {\n                        // Mc  [16] SAURASHTRA CONSONANT SIGN HAARU..SAURASHTRA VOWEL SIGN AU\n                        if (0xa8b4 <= code && code <= 0xa8c3) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        if (code < 0xa8e0) {\n                          // Mn   [2] SAURASHTRA SIGN VIRAMA..SAURASHTRA SIGN CANDRABINDU\n                          if (0xa8c4 <= code && code <= 0xa8c5) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mn  [18] COMBINING DEVANAGARI DIGIT ZERO..COMBINING DEVANAGARI SIGN AVAGRAHA\n                          if (0xa8e0 <= code && code <= 0xa8f1) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xa926) {\n                        // Mn       DEVANAGARI VOWEL SIGN AY\n                        if (0xa8ff === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0xa947) {\n                          // Mn   [8] KAYAH LI VOWEL UE..KAYAH LI TONE CALYA PLOPHU\n                          if (0xa926 <= code && code <= 0xa92d) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mn  [11] REJANG VOWEL SIGN I..REJANG CONSONANT SIGN R\n                          if (0xa947 <= code && code <= 0xa951) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            } else {\n              if (code < 0xaab2) {\n                if (code < 0xa9e5) {\n                  if (code < 0xa9b4) {\n                    if (code < 0xa980) {\n                      if (code < 0xa960) {\n                        // Mc   [2] REJANG CONSONANT SIGN H..REJANG VIRAMA\n                        if (0xa952 <= code && code <= 0xa953) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        // Lo  [29] HANGUL CHOSEONG TIKEUT-MIEUM..HANGUL CHOSEONG SSANGYEORINHIEUH\n                        if (0xa960 <= code && code <= 0xa97c) {\n                          return boundaries_1.CLUSTER_BREAK.L;\n                        }\n                      }\n                    } else {\n                      if (code < 0xa983) {\n                        // Mn   [3] JAVANESE SIGN PANYANGGA..JAVANESE SIGN LAYAR\n                        if (0xa980 <= code && code <= 0xa982) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        // Mc       JAVANESE SIGN WIGNYAN\n                        if (0xa983 === code) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                        // Mn       JAVANESE SIGN CECAK TELU\n                        if (0xa9b3 === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xa9ba) {\n                      if (code < 0xa9b6) {\n                        // Mc   [2] JAVANESE VOWEL SIGN TARUNG..JAVANESE VOWEL SIGN TOLONG\n                        if (0xa9b4 <= code && code <= 0xa9b5) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        // Mn   [4] JAVANESE VOWEL SIGN WULU..JAVANESE VOWEL SIGN SUKU MENDUT\n                        if (0xa9b6 <= code && code <= 0xa9b9) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    } else {\n                      if (code < 0xa9bc) {\n                        // Mc   [2] JAVANESE VOWEL SIGN TALING..JAVANESE VOWEL SIGN DIRGA MURE\n                        if (0xa9ba <= code && code <= 0xa9bb) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        if (code < 0xa9be) {\n                          // Mn   [2] JAVANESE VOWEL SIGN PEPET..JAVANESE CONSONANT SIGN KERET\n                          if (0xa9bc <= code && code <= 0xa9bd) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mc   [3] JAVANESE CONSONANT SIGN PENGKAL..JAVANESE PANGKON\n                          if (0xa9be <= code && code <= 0xa9c0) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0xaa35) {\n                    if (code < 0xaa2f) {\n                      if (code < 0xaa29) {\n                        // Mn       MYANMAR SIGN SHAN SAW\n                        if (0xa9e5 === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        // Mn   [6] CHAM VOWEL SIGN AA..CHAM VOWEL SIGN OE\n                        if (0xaa29 <= code && code <= 0xaa2e) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    } else {\n                      if (code < 0xaa31) {\n                        // Mc   [2] CHAM VOWEL SIGN O..CHAM VOWEL SIGN AI\n                        if (0xaa2f <= code && code <= 0xaa30) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        if (code < 0xaa33) {\n                          // Mn   [2] CHAM VOWEL SIGN AU..CHAM VOWEL SIGN UE\n                          if (0xaa31 <= code && code <= 0xaa32) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mc   [2] CHAM CONSONANT SIGN YA..CHAM CONSONANT SIGN RA\n                          if (0xaa33 <= code && code <= 0xaa34) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xaa4d) {\n                      if (code < 0xaa43) {\n                        // Mn   [2] CHAM CONSONANT SIGN LA..CHAM CONSONANT SIGN WA\n                        if (0xaa35 <= code && code <= 0xaa36) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        // Mn       CHAM CONSONANT SIGN FINAL NG\n                        if (0xaa43 === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                        // Mn       CHAM CONSONANT SIGN FINAL M\n                        if (0xaa4c === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    } else {\n                      if (code < 0xaa7c) {\n                        // Mc       CHAM CONSONANT SIGN FINAL H\n                        if (0xaa4d === code) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        // Mn       MYANMAR SIGN TAI LAING TONE-2\n                        if (0xaa7c === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                        // Mn       TAI VIET MAI KANG\n                        if (0xaab0 === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    }\n                  }\n                }\n              } else {\n                if (code < 0xabe6) {\n                  if (code < 0xaaec) {\n                    if (code < 0xaabe) {\n                      if (code < 0xaab7) {\n                        // Mn   [3] TAI VIET VOWEL I..TAI VIET VOWEL U\n                        if (0xaab2 <= code && code <= 0xaab4) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        // Mn   [2] TAI VIET MAI KHIT..TAI VIET VOWEL IA\n                        if (0xaab7 <= code && code <= 0xaab8) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    } else {\n                      if (code < 0xaac1) {\n                        // Mn   [2] TAI VIET VOWEL AM..TAI VIET TONE MAI EK\n                        if (0xaabe <= code && code <= 0xaabf) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        // Mn       TAI VIET TONE MAI THO\n                        if (0xaac1 === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                        // Mc       MEETEI MAYEK VOWEL SIGN II\n                        if (0xaaeb === code) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xaaf6) {\n                      if (code < 0xaaee) {\n                        // Mn   [2] MEETEI MAYEK VOWEL SIGN UU..MEETEI MAYEK VOWEL SIGN AAI\n                        if (0xaaec <= code && code <= 0xaaed) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0xaaf5) {\n                          // Mc   [2] MEETEI MAYEK VOWEL SIGN AU..MEETEI MAYEK VOWEL SIGN AAU\n                          if (0xaaee <= code && code <= 0xaaef) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        } else {\n                          // Mc       MEETEI MAYEK VOWEL SIGN VISARGA\n                          if (0xaaf5 === code) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xabe3) {\n                        // Mn       MEETEI MAYEK VIRAMA\n                        if (0xaaf6 === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0xabe5) {\n                          // Mc   [2] MEETEI MAYEK VOWEL SIGN ONAP..MEETEI MAYEK VOWEL SIGN INAP\n                          if (0xabe3 <= code && code <= 0xabe4) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        } else {\n                          // Mn       MEETEI MAYEK VOWEL SIGN ANAP\n                          if (0xabe5 === code) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0xac00) {\n                    if (code < 0xabe9) {\n                      if (code < 0xabe8) {\n                        // Mc   [2] MEETEI MAYEK VOWEL SIGN YENAP..MEETEI MAYEK VOWEL SIGN SOUNAP\n                        if (0xabe6 <= code && code <= 0xabe7) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        // Mn       MEETEI MAYEK VOWEL SIGN UNAP\n                        if (0xabe8 === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    } else {\n                      if (code < 0xabec) {\n                        // Mc   [2] MEETEI MAYEK VOWEL SIGN CHEINAP..MEETEI MAYEK VOWEL SIGN NUNG\n                        if (0xabe9 <= code && code <= 0xabea) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        // Mc       MEETEI MAYEK LUM IYEK\n                        if (0xabec === code) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                        // Mn       MEETEI MAYEK APUN IYEK\n                        if (0xabed === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xac1d) {\n                      if (code < 0xac01) {\n                        // Lo       HANGUL SYLLABLE GA\n                        if (0xac00 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xac1c) {\n                          // Lo  [27] HANGUL SYLLABLE GAG..HANGUL SYLLABLE GAH\n                          if (0xac01 <= code && code <= 0xac1b) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE GAE\n                          if (0xac1c === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xac38) {\n                        // Lo  [27] HANGUL SYLLABLE GAEG..HANGUL SYLLABLE GAEH\n                        if (0xac1d <= code && code <= 0xac37) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xac39) {\n                          // Lo       HANGUL SYLLABLE GYA\n                          if (0xac38 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE GYAG..HANGUL SYLLABLE GYAH\n                          if (0xac39 <= code && code <= 0xac53) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      } else {\n        if (code < 0xb5a1) {\n          if (code < 0xb0ed) {\n            if (code < 0xaea0) {\n              if (code < 0xad6d) {\n                if (code < 0xace0) {\n                  if (code < 0xac8d) {\n                    if (code < 0xac70) {\n                      if (code < 0xac55) {\n                        // Lo       HANGUL SYLLABLE GYAE\n                        if (0xac54 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE GYAEG..HANGUL SYLLABLE GYAEH\n                        if (0xac55 <= code && code <= 0xac6f) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xac71) {\n                        // Lo       HANGUL SYLLABLE GEO\n                        if (0xac70 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xac8c) {\n                          // Lo  [27] HANGUL SYLLABLE GEOG..HANGUL SYLLABLE GEOH\n                          if (0xac71 <= code && code <= 0xac8b) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE GE\n                          if (0xac8c === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xaca9) {\n                      if (code < 0xaca8) {\n                        // Lo  [27] HANGUL SYLLABLE GEG..HANGUL SYLLABLE GEH\n                        if (0xac8d <= code && code <= 0xaca7) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE GYEO\n                        if (0xaca8 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xacc4) {\n                        // Lo  [27] HANGUL SYLLABLE GYEOG..HANGUL SYLLABLE GYEOH\n                        if (0xaca9 <= code && code <= 0xacc3) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xacc5) {\n                          // Lo       HANGUL SYLLABLE GYE\n                          if (0xacc4 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE GYEG..HANGUL SYLLABLE GYEH\n                          if (0xacc5 <= code && code <= 0xacdf) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0xad19) {\n                    if (code < 0xacfc) {\n                      if (code < 0xace1) {\n                        // Lo       HANGUL SYLLABLE GO\n                        if (0xace0 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE GOG..HANGUL SYLLABLE GOH\n                        if (0xace1 <= code && code <= 0xacfb) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xacfd) {\n                        // Lo       HANGUL SYLLABLE GWA\n                        if (0xacfc === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xad18) {\n                          // Lo  [27] HANGUL SYLLABLE GWAG..HANGUL SYLLABLE GWAH\n                          if (0xacfd <= code && code <= 0xad17) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE GWAE\n                          if (0xad18 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xad50) {\n                      if (code < 0xad34) {\n                        // Lo  [27] HANGUL SYLLABLE GWAEG..HANGUL SYLLABLE GWAEH\n                        if (0xad19 <= code && code <= 0xad33) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xad35) {\n                          // Lo       HANGUL SYLLABLE GOE\n                          if (0xad34 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE GOEG..HANGUL SYLLABLE GOEH\n                          if (0xad35 <= code && code <= 0xad4f) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xad51) {\n                        // Lo       HANGUL SYLLABLE GYO\n                        if (0xad50 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xad6c) {\n                          // Lo  [27] HANGUL SYLLABLE GYOG..HANGUL SYLLABLE GYOH\n                          if (0xad51 <= code && code <= 0xad6b) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE GU\n                          if (0xad6c === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              } else {\n                if (code < 0xadf9) {\n                  if (code < 0xadc0) {\n                    if (code < 0xad89) {\n                      if (code < 0xad88) {\n                        // Lo  [27] HANGUL SYLLABLE GUG..HANGUL SYLLABLE GUH\n                        if (0xad6d <= code && code <= 0xad87) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE GWEO\n                        if (0xad88 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xada4) {\n                        // Lo  [27] HANGUL SYLLABLE GWEOG..HANGUL SYLLABLE GWEOH\n                        if (0xad89 <= code && code <= 0xada3) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xada5) {\n                          // Lo       HANGUL SYLLABLE GWE\n                          if (0xada4 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE GWEG..HANGUL SYLLABLE GWEH\n                          if (0xada5 <= code && code <= 0xadbf) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xaddc) {\n                      if (code < 0xadc1) {\n                        // Lo       HANGUL SYLLABLE GWI\n                        if (0xadc0 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE GWIG..HANGUL SYLLABLE GWIH\n                        if (0xadc1 <= code && code <= 0xaddb) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xaddd) {\n                        // Lo       HANGUL SYLLABLE GYU\n                        if (0xaddc === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xadf8) {\n                          // Lo  [27] HANGUL SYLLABLE GYUG..HANGUL SYLLABLE GYUH\n                          if (0xaddd <= code && code <= 0xadf7) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE GEU\n                          if (0xadf8 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0xae4c) {\n                    if (code < 0xae15) {\n                      if (code < 0xae14) {\n                        // Lo  [27] HANGUL SYLLABLE GEUG..HANGUL SYLLABLE GEUH\n                        if (0xadf9 <= code && code <= 0xae13) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE GYI\n                        if (0xae14 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xae30) {\n                        // Lo  [27] HANGUL SYLLABLE GYIG..HANGUL SYLLABLE GYIH\n                        if (0xae15 <= code && code <= 0xae2f) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xae31) {\n                          // Lo       HANGUL SYLLABLE GI\n                          if (0xae30 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE GIG..HANGUL SYLLABLE GIH\n                          if (0xae31 <= code && code <= 0xae4b) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xae69) {\n                      if (code < 0xae4d) {\n                        // Lo       HANGUL SYLLABLE GGA\n                        if (0xae4c === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xae68) {\n                          // Lo  [27] HANGUL SYLLABLE GGAG..HANGUL SYLLABLE GGAH\n                          if (0xae4d <= code && code <= 0xae67) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE GGAE\n                          if (0xae68 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xae84) {\n                        // Lo  [27] HANGUL SYLLABLE GGAEG..HANGUL SYLLABLE GGAEH\n                        if (0xae69 <= code && code <= 0xae83) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xae85) {\n                          // Lo       HANGUL SYLLABLE GGYA\n                          if (0xae84 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE GGYAG..HANGUL SYLLABLE GGYAH\n                          if (0xae85 <= code && code <= 0xae9f) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            } else {\n              if (code < 0xafb9) {\n                if (code < 0xaf2c) {\n                  if (code < 0xaed9) {\n                    if (code < 0xaebc) {\n                      if (code < 0xaea1) {\n                        // Lo       HANGUL SYLLABLE GGYAE\n                        if (0xaea0 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE GGYAEG..HANGUL SYLLABLE GGYAEH\n                        if (0xaea1 <= code && code <= 0xaebb) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xaebd) {\n                        // Lo       HANGUL SYLLABLE GGEO\n                        if (0xaebc === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xaed8) {\n                          // Lo  [27] HANGUL SYLLABLE GGEOG..HANGUL SYLLABLE GGEOH\n                          if (0xaebd <= code && code <= 0xaed7) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE GGE\n                          if (0xaed8 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xaef5) {\n                      if (code < 0xaef4) {\n                        // Lo  [27] HANGUL SYLLABLE GGEG..HANGUL SYLLABLE GGEH\n                        if (0xaed9 <= code && code <= 0xaef3) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE GGYEO\n                        if (0xaef4 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xaf10) {\n                        // Lo  [27] HANGUL SYLLABLE GGYEOG..HANGUL SYLLABLE GGYEOH\n                        if (0xaef5 <= code && code <= 0xaf0f) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xaf11) {\n                          // Lo       HANGUL SYLLABLE GGYE\n                          if (0xaf10 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE GGYEG..HANGUL SYLLABLE GGYEH\n                          if (0xaf11 <= code && code <= 0xaf2b) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0xaf65) {\n                    if (code < 0xaf48) {\n                      if (code < 0xaf2d) {\n                        // Lo       HANGUL SYLLABLE GGO\n                        if (0xaf2c === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE GGOG..HANGUL SYLLABLE GGOH\n                        if (0xaf2d <= code && code <= 0xaf47) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xaf49) {\n                        // Lo       HANGUL SYLLABLE GGWA\n                        if (0xaf48 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xaf64) {\n                          // Lo  [27] HANGUL SYLLABLE GGWAG..HANGUL SYLLABLE GGWAH\n                          if (0xaf49 <= code && code <= 0xaf63) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE GGWAE\n                          if (0xaf64 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xaf9c) {\n                      if (code < 0xaf80) {\n                        // Lo  [27] HANGUL SYLLABLE GGWAEG..HANGUL SYLLABLE GGWAEH\n                        if (0xaf65 <= code && code <= 0xaf7f) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xaf81) {\n                          // Lo       HANGUL SYLLABLE GGOE\n                          if (0xaf80 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE GGOEG..HANGUL SYLLABLE GGOEH\n                          if (0xaf81 <= code && code <= 0xaf9b) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xaf9d) {\n                        // Lo       HANGUL SYLLABLE GGYO\n                        if (0xaf9c === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xafb8) {\n                          // Lo  [27] HANGUL SYLLABLE GGYOG..HANGUL SYLLABLE GGYOH\n                          if (0xaf9d <= code && code <= 0xafb7) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE GGU\n                          if (0xafb8 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              } else {\n                if (code < 0xb060) {\n                  if (code < 0xb00c) {\n                    if (code < 0xafd5) {\n                      if (code < 0xafd4) {\n                        // Lo  [27] HANGUL SYLLABLE GGUG..HANGUL SYLLABLE GGUH\n                        if (0xafb9 <= code && code <= 0xafd3) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE GGWEO\n                        if (0xafd4 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xaff0) {\n                        // Lo  [27] HANGUL SYLLABLE GGWEOG..HANGUL SYLLABLE GGWEOH\n                        if (0xafd5 <= code && code <= 0xafef) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xaff1) {\n                          // Lo       HANGUL SYLLABLE GGWE\n                          if (0xaff0 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE GGWEG..HANGUL SYLLABLE GGWEH\n                          if (0xaff1 <= code && code <= 0xb00b) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xb029) {\n                      if (code < 0xb00d) {\n                        // Lo       HANGUL SYLLABLE GGWI\n                        if (0xb00c === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xb028) {\n                          // Lo  [27] HANGUL SYLLABLE GGWIG..HANGUL SYLLABLE GGWIH\n                          if (0xb00d <= code && code <= 0xb027) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE GGYU\n                          if (0xb028 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xb044) {\n                        // Lo  [27] HANGUL SYLLABLE GGYUG..HANGUL SYLLABLE GGYUH\n                        if (0xb029 <= code && code <= 0xb043) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xb045) {\n                          // Lo       HANGUL SYLLABLE GGEU\n                          if (0xb044 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE GGEUG..HANGUL SYLLABLE GGEUH\n                          if (0xb045 <= code && code <= 0xb05f) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0xb099) {\n                    if (code < 0xb07c) {\n                      if (code < 0xb061) {\n                        // Lo       HANGUL SYLLABLE GGYI\n                        if (0xb060 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE GGYIG..HANGUL SYLLABLE GGYIH\n                        if (0xb061 <= code && code <= 0xb07b) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xb07d) {\n                        // Lo       HANGUL SYLLABLE GGI\n                        if (0xb07c === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xb098) {\n                          // Lo  [27] HANGUL SYLLABLE GGIG..HANGUL SYLLABLE GGIH\n                          if (0xb07d <= code && code <= 0xb097) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE NA\n                          if (0xb098 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xb0d0) {\n                      if (code < 0xb0b4) {\n                        // Lo  [27] HANGUL SYLLABLE NAG..HANGUL SYLLABLE NAH\n                        if (0xb099 <= code && code <= 0xb0b3) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xb0b5) {\n                          // Lo       HANGUL SYLLABLE NAE\n                          if (0xb0b4 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE NAEG..HANGUL SYLLABLE NAEH\n                          if (0xb0b5 <= code && code <= 0xb0cf) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xb0d1) {\n                        // Lo       HANGUL SYLLABLE NYA\n                        if (0xb0d0 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xb0ec) {\n                          // Lo  [27] HANGUL SYLLABLE NYAG..HANGUL SYLLABLE NYAH\n                          if (0xb0d1 <= code && code <= 0xb0eb) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE NYAE\n                          if (0xb0ec === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          } else {\n            if (code < 0xb354) {\n              if (code < 0xb220) {\n                if (code < 0xb179) {\n                  if (code < 0xb140) {\n                    if (code < 0xb109) {\n                      if (code < 0xb108) {\n                        // Lo  [27] HANGUL SYLLABLE NYAEG..HANGUL SYLLABLE NYAEH\n                        if (0xb0ed <= code && code <= 0xb107) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE NEO\n                        if (0xb108 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xb124) {\n                        // Lo  [27] HANGUL SYLLABLE NEOG..HANGUL SYLLABLE NEOH\n                        if (0xb109 <= code && code <= 0xb123) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xb125) {\n                          // Lo       HANGUL SYLLABLE NE\n                          if (0xb124 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE NEG..HANGUL SYLLABLE NEH\n                          if (0xb125 <= code && code <= 0xb13f) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xb15c) {\n                      if (code < 0xb141) {\n                        // Lo       HANGUL SYLLABLE NYEO\n                        if (0xb140 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE NYEOG..HANGUL SYLLABLE NYEOH\n                        if (0xb141 <= code && code <= 0xb15b) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xb15d) {\n                        // Lo       HANGUL SYLLABLE NYE\n                        if (0xb15c === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xb178) {\n                          // Lo  [27] HANGUL SYLLABLE NYEG..HANGUL SYLLABLE NYEH\n                          if (0xb15d <= code && code <= 0xb177) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE NO\n                          if (0xb178 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0xb1cc) {\n                    if (code < 0xb195) {\n                      if (code < 0xb194) {\n                        // Lo  [27] HANGUL SYLLABLE NOG..HANGUL SYLLABLE NOH\n                        if (0xb179 <= code && code <= 0xb193) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE NWA\n                        if (0xb194 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xb1b0) {\n                        // Lo  [27] HANGUL SYLLABLE NWAG..HANGUL SYLLABLE NWAH\n                        if (0xb195 <= code && code <= 0xb1af) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xb1b1) {\n                          // Lo       HANGUL SYLLABLE NWAE\n                          if (0xb1b0 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE NWAEG..HANGUL SYLLABLE NWAEH\n                          if (0xb1b1 <= code && code <= 0xb1cb) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xb1e9) {\n                      if (code < 0xb1cd) {\n                        // Lo       HANGUL SYLLABLE NOE\n                        if (0xb1cc === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xb1e8) {\n                          // Lo  [27] HANGUL SYLLABLE NOEG..HANGUL SYLLABLE NOEH\n                          if (0xb1cd <= code && code <= 0xb1e7) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE NYO\n                          if (0xb1e8 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xb204) {\n                        // Lo  [27] HANGUL SYLLABLE NYOG..HANGUL SYLLABLE NYOH\n                        if (0xb1e9 <= code && code <= 0xb203) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xb205) {\n                          // Lo       HANGUL SYLLABLE NU\n                          if (0xb204 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE NUG..HANGUL SYLLABLE NUH\n                          if (0xb205 <= code && code <= 0xb21f) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              } else {\n                if (code < 0xb2ad) {\n                  if (code < 0xb259) {\n                    if (code < 0xb23c) {\n                      if (code < 0xb221) {\n                        // Lo       HANGUL SYLLABLE NWEO\n                        if (0xb220 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE NWEOG..HANGUL SYLLABLE NWEOH\n                        if (0xb221 <= code && code <= 0xb23b) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xb23d) {\n                        // Lo       HANGUL SYLLABLE NWE\n                        if (0xb23c === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xb258) {\n                          // Lo  [27] HANGUL SYLLABLE NWEG..HANGUL SYLLABLE NWEH\n                          if (0xb23d <= code && code <= 0xb257) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE NWI\n                          if (0xb258 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xb290) {\n                      if (code < 0xb274) {\n                        // Lo  [27] HANGUL SYLLABLE NWIG..HANGUL SYLLABLE NWIH\n                        if (0xb259 <= code && code <= 0xb273) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xb275) {\n                          // Lo       HANGUL SYLLABLE NYU\n                          if (0xb274 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE NYUG..HANGUL SYLLABLE NYUH\n                          if (0xb275 <= code && code <= 0xb28f) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xb291) {\n                        // Lo       HANGUL SYLLABLE NEU\n                        if (0xb290 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xb2ac) {\n                          // Lo  [27] HANGUL SYLLABLE NEUG..HANGUL SYLLABLE NEUH\n                          if (0xb291 <= code && code <= 0xb2ab) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE NYI\n                          if (0xb2ac === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0xb300) {\n                    if (code < 0xb2c9) {\n                      if (code < 0xb2c8) {\n                        // Lo  [27] HANGUL SYLLABLE NYIG..HANGUL SYLLABLE NYIH\n                        if (0xb2ad <= code && code <= 0xb2c7) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE NI\n                        if (0xb2c8 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xb2e4) {\n                        // Lo  [27] HANGUL SYLLABLE NIG..HANGUL SYLLABLE NIH\n                        if (0xb2c9 <= code && code <= 0xb2e3) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xb2e5) {\n                          // Lo       HANGUL SYLLABLE DA\n                          if (0xb2e4 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE DAG..HANGUL SYLLABLE DAH\n                          if (0xb2e5 <= code && code <= 0xb2ff) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xb31d) {\n                      if (code < 0xb301) {\n                        // Lo       HANGUL SYLLABLE DAE\n                        if (0xb300 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xb31c) {\n                          // Lo  [27] HANGUL SYLLABLE DAEG..HANGUL SYLLABLE DAEH\n                          if (0xb301 <= code && code <= 0xb31b) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE DYA\n                          if (0xb31c === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xb338) {\n                        // Lo  [27] HANGUL SYLLABLE DYAG..HANGUL SYLLABLE DYAH\n                        if (0xb31d <= code && code <= 0xb337) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xb339) {\n                          // Lo       HANGUL SYLLABLE DYAE\n                          if (0xb338 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE DYAEG..HANGUL SYLLABLE DYAEH\n                          if (0xb339 <= code && code <= 0xb353) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            } else {\n              if (code < 0xb46d) {\n                if (code < 0xb3e0) {\n                  if (code < 0xb38d) {\n                    if (code < 0xb370) {\n                      if (code < 0xb355) {\n                        // Lo       HANGUL SYLLABLE DEO\n                        if (0xb354 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE DEOG..HANGUL SYLLABLE DEOH\n                        if (0xb355 <= code && code <= 0xb36f) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xb371) {\n                        // Lo       HANGUL SYLLABLE DE\n                        if (0xb370 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xb38c) {\n                          // Lo  [27] HANGUL SYLLABLE DEG..HANGUL SYLLABLE DEH\n                          if (0xb371 <= code && code <= 0xb38b) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE DYEO\n                          if (0xb38c === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xb3a9) {\n                      if (code < 0xb3a8) {\n                        // Lo  [27] HANGUL SYLLABLE DYEOG..HANGUL SYLLABLE DYEOH\n                        if (0xb38d <= code && code <= 0xb3a7) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE DYE\n                        if (0xb3a8 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xb3c4) {\n                        // Lo  [27] HANGUL SYLLABLE DYEG..HANGUL SYLLABLE DYEH\n                        if (0xb3a9 <= code && code <= 0xb3c3) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xb3c5) {\n                          // Lo       HANGUL SYLLABLE DO\n                          if (0xb3c4 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE DOG..HANGUL SYLLABLE DOH\n                          if (0xb3c5 <= code && code <= 0xb3df) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0xb419) {\n                    if (code < 0xb3fc) {\n                      if (code < 0xb3e1) {\n                        // Lo       HANGUL SYLLABLE DWA\n                        if (0xb3e0 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE DWAG..HANGUL SYLLABLE DWAH\n                        if (0xb3e1 <= code && code <= 0xb3fb) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xb3fd) {\n                        // Lo       HANGUL SYLLABLE DWAE\n                        if (0xb3fc === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xb418) {\n                          // Lo  [27] HANGUL SYLLABLE DWAEG..HANGUL SYLLABLE DWAEH\n                          if (0xb3fd <= code && code <= 0xb417) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE DOE\n                          if (0xb418 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xb450) {\n                      if (code < 0xb434) {\n                        // Lo  [27] HANGUL SYLLABLE DOEG..HANGUL SYLLABLE DOEH\n                        if (0xb419 <= code && code <= 0xb433) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xb435) {\n                          // Lo       HANGUL SYLLABLE DYO\n                          if (0xb434 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE DYOG..HANGUL SYLLABLE DYOH\n                          if (0xb435 <= code && code <= 0xb44f) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xb451) {\n                        // Lo       HANGUL SYLLABLE DU\n                        if (0xb450 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xb46c) {\n                          // Lo  [27] HANGUL SYLLABLE DUG..HANGUL SYLLABLE DUH\n                          if (0xb451 <= code && code <= 0xb46b) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE DWEO\n                          if (0xb46c === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              } else {\n                if (code < 0xb514) {\n                  if (code < 0xb4c0) {\n                    if (code < 0xb489) {\n                      if (code < 0xb488) {\n                        // Lo  [27] HANGUL SYLLABLE DWEOG..HANGUL SYLLABLE DWEOH\n                        if (0xb46d <= code && code <= 0xb487) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE DWE\n                        if (0xb488 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xb4a4) {\n                        // Lo  [27] HANGUL SYLLABLE DWEG..HANGUL SYLLABLE DWEH\n                        if (0xb489 <= code && code <= 0xb4a3) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xb4a5) {\n                          // Lo       HANGUL SYLLABLE DWI\n                          if (0xb4a4 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE DWIG..HANGUL SYLLABLE DWIH\n                          if (0xb4a5 <= code && code <= 0xb4bf) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xb4dd) {\n                      if (code < 0xb4c1) {\n                        // Lo       HANGUL SYLLABLE DYU\n                        if (0xb4c0 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xb4dc) {\n                          // Lo  [27] HANGUL SYLLABLE DYUG..HANGUL SYLLABLE DYUH\n                          if (0xb4c1 <= code && code <= 0xb4db) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE DEU\n                          if (0xb4dc === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xb4f8) {\n                        // Lo  [27] HANGUL SYLLABLE DEUG..HANGUL SYLLABLE DEUH\n                        if (0xb4dd <= code && code <= 0xb4f7) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xb4f9) {\n                          // Lo       HANGUL SYLLABLE DYI\n                          if (0xb4f8 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE DYIG..HANGUL SYLLABLE DYIH\n                          if (0xb4f9 <= code && code <= 0xb513) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0xb54d) {\n                    if (code < 0xb530) {\n                      if (code < 0xb515) {\n                        // Lo       HANGUL SYLLABLE DI\n                        if (0xb514 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE DIG..HANGUL SYLLABLE DIH\n                        if (0xb515 <= code && code <= 0xb52f) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xb531) {\n                        // Lo       HANGUL SYLLABLE DDA\n                        if (0xb530 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xb54c) {\n                          // Lo  [27] HANGUL SYLLABLE DDAG..HANGUL SYLLABLE DDAH\n                          if (0xb531 <= code && code <= 0xb54b) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE DDAE\n                          if (0xb54c === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xb584) {\n                      if (code < 0xb568) {\n                        // Lo  [27] HANGUL SYLLABLE DDAEG..HANGUL SYLLABLE DDAEH\n                        if (0xb54d <= code && code <= 0xb567) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xb569) {\n                          // Lo       HANGUL SYLLABLE DDYA\n                          if (0xb568 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE DDYAG..HANGUL SYLLABLE DDYAH\n                          if (0xb569 <= code && code <= 0xb583) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xb585) {\n                        // Lo       HANGUL SYLLABLE DDYAE\n                        if (0xb584 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xb5a0) {\n                          // Lo  [27] HANGUL SYLLABLE DDYAEG..HANGUL SYLLABLE DDYAEH\n                          if (0xb585 <= code && code <= 0xb59f) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE DDEO\n                          if (0xb5a0 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        } else {\n          if (code < 0xba55) {\n            if (code < 0xb808) {\n              if (code < 0xb6d4) {\n                if (code < 0xb62d) {\n                  if (code < 0xb5f4) {\n                    if (code < 0xb5bd) {\n                      if (code < 0xb5bc) {\n                        // Lo  [27] HANGUL SYLLABLE DDEOG..HANGUL SYLLABLE DDEOH\n                        if (0xb5a1 <= code && code <= 0xb5bb) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE DDE\n                        if (0xb5bc === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xb5d8) {\n                        // Lo  [27] HANGUL SYLLABLE DDEG..HANGUL SYLLABLE DDEH\n                        if (0xb5bd <= code && code <= 0xb5d7) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xb5d9) {\n                          // Lo       HANGUL SYLLABLE DDYEO\n                          if (0xb5d8 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE DDYEOG..HANGUL SYLLABLE DDYEOH\n                          if (0xb5d9 <= code && code <= 0xb5f3) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xb610) {\n                      if (code < 0xb5f5) {\n                        // Lo       HANGUL SYLLABLE DDYE\n                        if (0xb5f4 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE DDYEG..HANGUL SYLLABLE DDYEH\n                        if (0xb5f5 <= code && code <= 0xb60f) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xb611) {\n                        // Lo       HANGUL SYLLABLE DDO\n                        if (0xb610 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xb62c) {\n                          // Lo  [27] HANGUL SYLLABLE DDOG..HANGUL SYLLABLE DDOH\n                          if (0xb611 <= code && code <= 0xb62b) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE DDWA\n                          if (0xb62c === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0xb680) {\n                    if (code < 0xb649) {\n                      if (code < 0xb648) {\n                        // Lo  [27] HANGUL SYLLABLE DDWAG..HANGUL SYLLABLE DDWAH\n                        if (0xb62d <= code && code <= 0xb647) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE DDWAE\n                        if (0xb648 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xb664) {\n                        // Lo  [27] HANGUL SYLLABLE DDWAEG..HANGUL SYLLABLE DDWAEH\n                        if (0xb649 <= code && code <= 0xb663) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xb665) {\n                          // Lo       HANGUL SYLLABLE DDOE\n                          if (0xb664 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE DDOEG..HANGUL SYLLABLE DDOEH\n                          if (0xb665 <= code && code <= 0xb67f) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xb69d) {\n                      if (code < 0xb681) {\n                        // Lo       HANGUL SYLLABLE DDYO\n                        if (0xb680 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xb69c) {\n                          // Lo  [27] HANGUL SYLLABLE DDYOG..HANGUL SYLLABLE DDYOH\n                          if (0xb681 <= code && code <= 0xb69b) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE DDU\n                          if (0xb69c === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xb6b8) {\n                        // Lo  [27] HANGUL SYLLABLE DDUG..HANGUL SYLLABLE DDUH\n                        if (0xb69d <= code && code <= 0xb6b7) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xb6b9) {\n                          // Lo       HANGUL SYLLABLE DDWEO\n                          if (0xb6b8 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE DDWEOG..HANGUL SYLLABLE DDWEOH\n                          if (0xb6b9 <= code && code <= 0xb6d3) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              } else {\n                if (code < 0xb761) {\n                  if (code < 0xb70d) {\n                    if (code < 0xb6f0) {\n                      if (code < 0xb6d5) {\n                        // Lo       HANGUL SYLLABLE DDWE\n                        if (0xb6d4 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE DDWEG..HANGUL SYLLABLE DDWEH\n                        if (0xb6d5 <= code && code <= 0xb6ef) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xb6f1) {\n                        // Lo       HANGUL SYLLABLE DDWI\n                        if (0xb6f0 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xb70c) {\n                          // Lo  [27] HANGUL SYLLABLE DDWIG..HANGUL SYLLABLE DDWIH\n                          if (0xb6f1 <= code && code <= 0xb70b) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE DDYU\n                          if (0xb70c === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xb744) {\n                      if (code < 0xb728) {\n                        // Lo  [27] HANGUL SYLLABLE DDYUG..HANGUL SYLLABLE DDYUH\n                        if (0xb70d <= code && code <= 0xb727) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xb729) {\n                          // Lo       HANGUL SYLLABLE DDEU\n                          if (0xb728 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE DDEUG..HANGUL SYLLABLE DDEUH\n                          if (0xb729 <= code && code <= 0xb743) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xb745) {\n                        // Lo       HANGUL SYLLABLE DDYI\n                        if (0xb744 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xb760) {\n                          // Lo  [27] HANGUL SYLLABLE DDYIG..HANGUL SYLLABLE DDYIH\n                          if (0xb745 <= code && code <= 0xb75f) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE DDI\n                          if (0xb760 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0xb7b4) {\n                    if (code < 0xb77d) {\n                      if (code < 0xb77c) {\n                        // Lo  [27] HANGUL SYLLABLE DDIG..HANGUL SYLLABLE DDIH\n                        if (0xb761 <= code && code <= 0xb77b) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE RA\n                        if (0xb77c === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xb798) {\n                        // Lo  [27] HANGUL SYLLABLE RAG..HANGUL SYLLABLE RAH\n                        if (0xb77d <= code && code <= 0xb797) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xb799) {\n                          // Lo       HANGUL SYLLABLE RAE\n                          if (0xb798 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE RAEG..HANGUL SYLLABLE RAEH\n                          if (0xb799 <= code && code <= 0xb7b3) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xb7d1) {\n                      if (code < 0xb7b5) {\n                        // Lo       HANGUL SYLLABLE RYA\n                        if (0xb7b4 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xb7d0) {\n                          // Lo  [27] HANGUL SYLLABLE RYAG..HANGUL SYLLABLE RYAH\n                          if (0xb7b5 <= code && code <= 0xb7cf) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE RYAE\n                          if (0xb7d0 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xb7ec) {\n                        // Lo  [27] HANGUL SYLLABLE RYAEG..HANGUL SYLLABLE RYAEH\n                        if (0xb7d1 <= code && code <= 0xb7eb) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xb7ed) {\n                          // Lo       HANGUL SYLLABLE REO\n                          if (0xb7ec === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE REOG..HANGUL SYLLABLE REOH\n                          if (0xb7ed <= code && code <= 0xb807) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            } else {\n              if (code < 0xb921) {\n                if (code < 0xb894) {\n                  if (code < 0xb841) {\n                    if (code < 0xb824) {\n                      if (code < 0xb809) {\n                        // Lo       HANGUL SYLLABLE RE\n                        if (0xb808 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE REG..HANGUL SYLLABLE REH\n                        if (0xb809 <= code && code <= 0xb823) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xb825) {\n                        // Lo       HANGUL SYLLABLE RYEO\n                        if (0xb824 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xb840) {\n                          // Lo  [27] HANGUL SYLLABLE RYEOG..HANGUL SYLLABLE RYEOH\n                          if (0xb825 <= code && code <= 0xb83f) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE RYE\n                          if (0xb840 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xb85d) {\n                      if (code < 0xb85c) {\n                        // Lo  [27] HANGUL SYLLABLE RYEG..HANGUL SYLLABLE RYEH\n                        if (0xb841 <= code && code <= 0xb85b) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE RO\n                        if (0xb85c === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xb878) {\n                        // Lo  [27] HANGUL SYLLABLE ROG..HANGUL SYLLABLE ROH\n                        if (0xb85d <= code && code <= 0xb877) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xb879) {\n                          // Lo       HANGUL SYLLABLE RWA\n                          if (0xb878 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE RWAG..HANGUL SYLLABLE RWAH\n                          if (0xb879 <= code && code <= 0xb893) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0xb8cd) {\n                    if (code < 0xb8b0) {\n                      if (code < 0xb895) {\n                        // Lo       HANGUL SYLLABLE RWAE\n                        if (0xb894 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE RWAEG..HANGUL SYLLABLE RWAEH\n                        if (0xb895 <= code && code <= 0xb8af) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xb8b1) {\n                        // Lo       HANGUL SYLLABLE ROE\n                        if (0xb8b0 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xb8cc) {\n                          // Lo  [27] HANGUL SYLLABLE ROEG..HANGUL SYLLABLE ROEH\n                          if (0xb8b1 <= code && code <= 0xb8cb) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE RYO\n                          if (0xb8cc === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xb904) {\n                      if (code < 0xb8e8) {\n                        // Lo  [27] HANGUL SYLLABLE RYOG..HANGUL SYLLABLE RYOH\n                        if (0xb8cd <= code && code <= 0xb8e7) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xb8e9) {\n                          // Lo       HANGUL SYLLABLE RU\n                          if (0xb8e8 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE RUG..HANGUL SYLLABLE RUH\n                          if (0xb8e9 <= code && code <= 0xb903) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xb905) {\n                        // Lo       HANGUL SYLLABLE RWEO\n                        if (0xb904 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xb920) {\n                          // Lo  [27] HANGUL SYLLABLE RWEOG..HANGUL SYLLABLE RWEOH\n                          if (0xb905 <= code && code <= 0xb91f) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE RWE\n                          if (0xb920 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              } else {\n                if (code < 0xb9c8) {\n                  if (code < 0xb974) {\n                    if (code < 0xb93d) {\n                      if (code < 0xb93c) {\n                        // Lo  [27] HANGUL SYLLABLE RWEG..HANGUL SYLLABLE RWEH\n                        if (0xb921 <= code && code <= 0xb93b) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE RWI\n                        if (0xb93c === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xb958) {\n                        // Lo  [27] HANGUL SYLLABLE RWIG..HANGUL SYLLABLE RWIH\n                        if (0xb93d <= code && code <= 0xb957) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xb959) {\n                          // Lo       HANGUL SYLLABLE RYU\n                          if (0xb958 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE RYUG..HANGUL SYLLABLE RYUH\n                          if (0xb959 <= code && code <= 0xb973) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xb991) {\n                      if (code < 0xb975) {\n                        // Lo       HANGUL SYLLABLE REU\n                        if (0xb974 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xb990) {\n                          // Lo  [27] HANGUL SYLLABLE REUG..HANGUL SYLLABLE REUH\n                          if (0xb975 <= code && code <= 0xb98f) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE RYI\n                          if (0xb990 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xb9ac) {\n                        // Lo  [27] HANGUL SYLLABLE RYIG..HANGUL SYLLABLE RYIH\n                        if (0xb991 <= code && code <= 0xb9ab) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xb9ad) {\n                          // Lo       HANGUL SYLLABLE RI\n                          if (0xb9ac === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE RIG..HANGUL SYLLABLE RIH\n                          if (0xb9ad <= code && code <= 0xb9c7) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0xba01) {\n                    if (code < 0xb9e4) {\n                      if (code < 0xb9c9) {\n                        // Lo       HANGUL SYLLABLE MA\n                        if (0xb9c8 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE MAG..HANGUL SYLLABLE MAH\n                        if (0xb9c9 <= code && code <= 0xb9e3) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xb9e5) {\n                        // Lo       HANGUL SYLLABLE MAE\n                        if (0xb9e4 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xba00) {\n                          // Lo  [27] HANGUL SYLLABLE MAEG..HANGUL SYLLABLE MAEH\n                          if (0xb9e5 <= code && code <= 0xb9ff) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE MYA\n                          if (0xba00 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xba38) {\n                      if (code < 0xba1c) {\n                        // Lo  [27] HANGUL SYLLABLE MYAG..HANGUL SYLLABLE MYAH\n                        if (0xba01 <= code && code <= 0xba1b) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xba1d) {\n                          // Lo       HANGUL SYLLABLE MYAE\n                          if (0xba1c === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE MYAEG..HANGUL SYLLABLE MYAEH\n                          if (0xba1d <= code && code <= 0xba37) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xba39) {\n                        // Lo       HANGUL SYLLABLE MEO\n                        if (0xba38 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xba54) {\n                          // Lo  [27] HANGUL SYLLABLE MEOG..HANGUL SYLLABLE MEOH\n                          if (0xba39 <= code && code <= 0xba53) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE ME\n                          if (0xba54 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          } else {\n            if (code < 0xbcbc) {\n              if (code < 0xbb88) {\n                if (code < 0xbae1) {\n                  if (code < 0xbaa8) {\n                    if (code < 0xba71) {\n                      if (code < 0xba70) {\n                        // Lo  [27] HANGUL SYLLABLE MEG..HANGUL SYLLABLE MEH\n                        if (0xba55 <= code && code <= 0xba6f) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE MYEO\n                        if (0xba70 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xba8c) {\n                        // Lo  [27] HANGUL SYLLABLE MYEOG..HANGUL SYLLABLE MYEOH\n                        if (0xba71 <= code && code <= 0xba8b) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xba8d) {\n                          // Lo       HANGUL SYLLABLE MYE\n                          if (0xba8c === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE MYEG..HANGUL SYLLABLE MYEH\n                          if (0xba8d <= code && code <= 0xbaa7) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xbac4) {\n                      if (code < 0xbaa9) {\n                        // Lo       HANGUL SYLLABLE MO\n                        if (0xbaa8 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE MOG..HANGUL SYLLABLE MOH\n                        if (0xbaa9 <= code && code <= 0xbac3) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xbac5) {\n                        // Lo       HANGUL SYLLABLE MWA\n                        if (0xbac4 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xbae0) {\n                          // Lo  [27] HANGUL SYLLABLE MWAG..HANGUL SYLLABLE MWAH\n                          if (0xbac5 <= code && code <= 0xbadf) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE MWAE\n                          if (0xbae0 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0xbb34) {\n                    if (code < 0xbafd) {\n                      if (code < 0xbafc) {\n                        // Lo  [27] HANGUL SYLLABLE MWAEG..HANGUL SYLLABLE MWAEH\n                        if (0xbae1 <= code && code <= 0xbafb) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE MOE\n                        if (0xbafc === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xbb18) {\n                        // Lo  [27] HANGUL SYLLABLE MOEG..HANGUL SYLLABLE MOEH\n                        if (0xbafd <= code && code <= 0xbb17) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xbb19) {\n                          // Lo       HANGUL SYLLABLE MYO\n                          if (0xbb18 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE MYOG..HANGUL SYLLABLE MYOH\n                          if (0xbb19 <= code && code <= 0xbb33) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xbb51) {\n                      if (code < 0xbb35) {\n                        // Lo       HANGUL SYLLABLE MU\n                        if (0xbb34 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xbb50) {\n                          // Lo  [27] HANGUL SYLLABLE MUG..HANGUL SYLLABLE MUH\n                          if (0xbb35 <= code && code <= 0xbb4f) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE MWEO\n                          if (0xbb50 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xbb6c) {\n                        // Lo  [27] HANGUL SYLLABLE MWEOG..HANGUL SYLLABLE MWEOH\n                        if (0xbb51 <= code && code <= 0xbb6b) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xbb6d) {\n                          // Lo       HANGUL SYLLABLE MWE\n                          if (0xbb6c === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE MWEG..HANGUL SYLLABLE MWEH\n                          if (0xbb6d <= code && code <= 0xbb87) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              } else {\n                if (code < 0xbc15) {\n                  if (code < 0xbbc1) {\n                    if (code < 0xbba4) {\n                      if (code < 0xbb89) {\n                        // Lo       HANGUL SYLLABLE MWI\n                        if (0xbb88 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE MWIG..HANGUL SYLLABLE MWIH\n                        if (0xbb89 <= code && code <= 0xbba3) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xbba5) {\n                        // Lo       HANGUL SYLLABLE MYU\n                        if (0xbba4 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xbbc0) {\n                          // Lo  [27] HANGUL SYLLABLE MYUG..HANGUL SYLLABLE MYUH\n                          if (0xbba5 <= code && code <= 0xbbbf) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE MEU\n                          if (0xbbc0 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xbbf8) {\n                      if (code < 0xbbdc) {\n                        // Lo  [27] HANGUL SYLLABLE MEUG..HANGUL SYLLABLE MEUH\n                        if (0xbbc1 <= code && code <= 0xbbdb) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xbbdd) {\n                          // Lo       HANGUL SYLLABLE MYI\n                          if (0xbbdc === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE MYIG..HANGUL SYLLABLE MYIH\n                          if (0xbbdd <= code && code <= 0xbbf7) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xbbf9) {\n                        // Lo       HANGUL SYLLABLE MI\n                        if (0xbbf8 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xbc14) {\n                          // Lo  [27] HANGUL SYLLABLE MIG..HANGUL SYLLABLE MIH\n                          if (0xbbf9 <= code && code <= 0xbc13) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE BA\n                          if (0xbc14 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0xbc68) {\n                    if (code < 0xbc31) {\n                      if (code < 0xbc30) {\n                        // Lo  [27] HANGUL SYLLABLE BAG..HANGUL SYLLABLE BAH\n                        if (0xbc15 <= code && code <= 0xbc2f) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE BAE\n                        if (0xbc30 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xbc4c) {\n                        // Lo  [27] HANGUL SYLLABLE BAEG..HANGUL SYLLABLE BAEH\n                        if (0xbc31 <= code && code <= 0xbc4b) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xbc4d) {\n                          // Lo       HANGUL SYLLABLE BYA\n                          if (0xbc4c === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE BYAG..HANGUL SYLLABLE BYAH\n                          if (0xbc4d <= code && code <= 0xbc67) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xbc85) {\n                      if (code < 0xbc69) {\n                        // Lo       HANGUL SYLLABLE BYAE\n                        if (0xbc68 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xbc84) {\n                          // Lo  [27] HANGUL SYLLABLE BYAEG..HANGUL SYLLABLE BYAEH\n                          if (0xbc69 <= code && code <= 0xbc83) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE BEO\n                          if (0xbc84 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xbca0) {\n                        // Lo  [27] HANGUL SYLLABLE BEOG..HANGUL SYLLABLE BEOH\n                        if (0xbc85 <= code && code <= 0xbc9f) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xbca1) {\n                          // Lo       HANGUL SYLLABLE BE\n                          if (0xbca0 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE BEG..HANGUL SYLLABLE BEH\n                          if (0xbca1 <= code && code <= 0xbcbb) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            } else {\n              if (code < 0xbdd5) {\n                if (code < 0xbd48) {\n                  if (code < 0xbcf5) {\n                    if (code < 0xbcd8) {\n                      if (code < 0xbcbd) {\n                        // Lo       HANGUL SYLLABLE BYEO\n                        if (0xbcbc === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE BYEOG..HANGUL SYLLABLE BYEOH\n                        if (0xbcbd <= code && code <= 0xbcd7) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xbcd9) {\n                        // Lo       HANGUL SYLLABLE BYE\n                        if (0xbcd8 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xbcf4) {\n                          // Lo  [27] HANGUL SYLLABLE BYEG..HANGUL SYLLABLE BYEH\n                          if (0xbcd9 <= code && code <= 0xbcf3) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE BO\n                          if (0xbcf4 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xbd11) {\n                      if (code < 0xbd10) {\n                        // Lo  [27] HANGUL SYLLABLE BOG..HANGUL SYLLABLE BOH\n                        if (0xbcf5 <= code && code <= 0xbd0f) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE BWA\n                        if (0xbd10 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xbd2c) {\n                        // Lo  [27] HANGUL SYLLABLE BWAG..HANGUL SYLLABLE BWAH\n                        if (0xbd11 <= code && code <= 0xbd2b) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xbd2d) {\n                          // Lo       HANGUL SYLLABLE BWAE\n                          if (0xbd2c === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE BWAEG..HANGUL SYLLABLE BWAEH\n                          if (0xbd2d <= code && code <= 0xbd47) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0xbd81) {\n                    if (code < 0xbd64) {\n                      if (code < 0xbd49) {\n                        // Lo       HANGUL SYLLABLE BOE\n                        if (0xbd48 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE BOEG..HANGUL SYLLABLE BOEH\n                        if (0xbd49 <= code && code <= 0xbd63) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xbd65) {\n                        // Lo       HANGUL SYLLABLE BYO\n                        if (0xbd64 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xbd80) {\n                          // Lo  [27] HANGUL SYLLABLE BYOG..HANGUL SYLLABLE BYOH\n                          if (0xbd65 <= code && code <= 0xbd7f) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE BU\n                          if (0xbd80 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xbdb8) {\n                      if (code < 0xbd9c) {\n                        // Lo  [27] HANGUL SYLLABLE BUG..HANGUL SYLLABLE BUH\n                        if (0xbd81 <= code && code <= 0xbd9b) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xbd9d) {\n                          // Lo       HANGUL SYLLABLE BWEO\n                          if (0xbd9c === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE BWEOG..HANGUL SYLLABLE BWEOH\n                          if (0xbd9d <= code && code <= 0xbdb7) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xbdb9) {\n                        // Lo       HANGUL SYLLABLE BWE\n                        if (0xbdb8 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xbdd4) {\n                          // Lo  [27] HANGUL SYLLABLE BWEG..HANGUL SYLLABLE BWEH\n                          if (0xbdb9 <= code && code <= 0xbdd3) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE BWI\n                          if (0xbdd4 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              } else {\n                if (code < 0xbe7c) {\n                  if (code < 0xbe28) {\n                    if (code < 0xbdf1) {\n                      if (code < 0xbdf0) {\n                        // Lo  [27] HANGUL SYLLABLE BWIG..HANGUL SYLLABLE BWIH\n                        if (0xbdd5 <= code && code <= 0xbdef) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE BYU\n                        if (0xbdf0 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xbe0c) {\n                        // Lo  [27] HANGUL SYLLABLE BYUG..HANGUL SYLLABLE BYUH\n                        if (0xbdf1 <= code && code <= 0xbe0b) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xbe0d) {\n                          // Lo       HANGUL SYLLABLE BEU\n                          if (0xbe0c === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE BEUG..HANGUL SYLLABLE BEUH\n                          if (0xbe0d <= code && code <= 0xbe27) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xbe45) {\n                      if (code < 0xbe29) {\n                        // Lo       HANGUL SYLLABLE BYI\n                        if (0xbe28 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xbe44) {\n                          // Lo  [27] HANGUL SYLLABLE BYIG..HANGUL SYLLABLE BYIH\n                          if (0xbe29 <= code && code <= 0xbe43) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE BI\n                          if (0xbe44 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xbe60) {\n                        // Lo  [27] HANGUL SYLLABLE BIG..HANGUL SYLLABLE BIH\n                        if (0xbe45 <= code && code <= 0xbe5f) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xbe61) {\n                          // Lo       HANGUL SYLLABLE BBA\n                          if (0xbe60 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE BBAG..HANGUL SYLLABLE BBAH\n                          if (0xbe61 <= code && code <= 0xbe7b) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0xbeb5) {\n                    if (code < 0xbe98) {\n                      if (code < 0xbe7d) {\n                        // Lo       HANGUL SYLLABLE BBAE\n                        if (0xbe7c === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE BBAEG..HANGUL SYLLABLE BBAEH\n                        if (0xbe7d <= code && code <= 0xbe97) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xbe99) {\n                        // Lo       HANGUL SYLLABLE BBYA\n                        if (0xbe98 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xbeb4) {\n                          // Lo  [27] HANGUL SYLLABLE BBYAG..HANGUL SYLLABLE BBYAH\n                          if (0xbe99 <= code && code <= 0xbeb3) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE BBYAE\n                          if (0xbeb4 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xbeec) {\n                      if (code < 0xbed0) {\n                        // Lo  [27] HANGUL SYLLABLE BBYAEG..HANGUL SYLLABLE BBYAEH\n                        if (0xbeb5 <= code && code <= 0xbecf) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xbed1) {\n                          // Lo       HANGUL SYLLABLE BBEO\n                          if (0xbed0 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE BBEOG..HANGUL SYLLABLE BBEOH\n                          if (0xbed1 <= code && code <= 0xbeeb) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xbeed) {\n                        // Lo       HANGUL SYLLABLE BBE\n                        if (0xbeec === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xbf08) {\n                          // Lo  [27] HANGUL SYLLABLE BBEG..HANGUL SYLLABLE BBEH\n                          if (0xbeed <= code && code <= 0xbf07) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE BBYEO\n                          if (0xbf08 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    } else {\n      if (code < 0xd1d8) {\n        if (code < 0xc870) {\n          if (code < 0xc3bc) {\n            if (code < 0xc155) {\n              if (code < 0xc03c) {\n                if (code < 0xbf95) {\n                  if (code < 0xbf5c) {\n                    if (code < 0xbf25) {\n                      if (code < 0xbf24) {\n                        // Lo  [27] HANGUL SYLLABLE BBYEOG..HANGUL SYLLABLE BBYEOH\n                        if (0xbf09 <= code && code <= 0xbf23) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE BBYE\n                        if (0xbf24 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xbf40) {\n                        // Lo  [27] HANGUL SYLLABLE BBYEG..HANGUL SYLLABLE BBYEH\n                        if (0xbf25 <= code && code <= 0xbf3f) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xbf41) {\n                          // Lo       HANGUL SYLLABLE BBO\n                          if (0xbf40 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE BBOG..HANGUL SYLLABLE BBOH\n                          if (0xbf41 <= code && code <= 0xbf5b) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xbf78) {\n                      if (code < 0xbf5d) {\n                        // Lo       HANGUL SYLLABLE BBWA\n                        if (0xbf5c === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE BBWAG..HANGUL SYLLABLE BBWAH\n                        if (0xbf5d <= code && code <= 0xbf77) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xbf79) {\n                        // Lo       HANGUL SYLLABLE BBWAE\n                        if (0xbf78 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xbf94) {\n                          // Lo  [27] HANGUL SYLLABLE BBWAEG..HANGUL SYLLABLE BBWAEH\n                          if (0xbf79 <= code && code <= 0xbf93) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE BBOE\n                          if (0xbf94 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0xbfe8) {\n                    if (code < 0xbfb1) {\n                      if (code < 0xbfb0) {\n                        // Lo  [27] HANGUL SYLLABLE BBOEG..HANGUL SYLLABLE BBOEH\n                        if (0xbf95 <= code && code <= 0xbfaf) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE BBYO\n                        if (0xbfb0 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xbfcc) {\n                        // Lo  [27] HANGUL SYLLABLE BBYOG..HANGUL SYLLABLE BBYOH\n                        if (0xbfb1 <= code && code <= 0xbfcb) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xbfcd) {\n                          // Lo       HANGUL SYLLABLE BBU\n                          if (0xbfcc === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE BBUG..HANGUL SYLLABLE BBUH\n                          if (0xbfcd <= code && code <= 0xbfe7) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xc005) {\n                      if (code < 0xbfe9) {\n                        // Lo       HANGUL SYLLABLE BBWEO\n                        if (0xbfe8 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xc004) {\n                          // Lo  [27] HANGUL SYLLABLE BBWEOG..HANGUL SYLLABLE BBWEOH\n                          if (0xbfe9 <= code && code <= 0xc003) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE BBWE\n                          if (0xc004 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xc020) {\n                        // Lo  [27] HANGUL SYLLABLE BBWEG..HANGUL SYLLABLE BBWEH\n                        if (0xc005 <= code && code <= 0xc01f) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xc021) {\n                          // Lo       HANGUL SYLLABLE BBWI\n                          if (0xc020 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE BBWIG..HANGUL SYLLABLE BBWIH\n                          if (0xc021 <= code && code <= 0xc03b) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              } else {\n                if (code < 0xc0c8) {\n                  if (code < 0xc075) {\n                    if (code < 0xc058) {\n                      if (code < 0xc03d) {\n                        // Lo       HANGUL SYLLABLE BBYU\n                        if (0xc03c === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE BBYUG..HANGUL SYLLABLE BBYUH\n                        if (0xc03d <= code && code <= 0xc057) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xc059) {\n                        // Lo       HANGUL SYLLABLE BBEU\n                        if (0xc058 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xc074) {\n                          // Lo  [27] HANGUL SYLLABLE BBEUG..HANGUL SYLLABLE BBEUH\n                          if (0xc059 <= code && code <= 0xc073) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE BBYI\n                          if (0xc074 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xc091) {\n                      if (code < 0xc090) {\n                        // Lo  [27] HANGUL SYLLABLE BBYIG..HANGUL SYLLABLE BBYIH\n                        if (0xc075 <= code && code <= 0xc08f) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE BBI\n                        if (0xc090 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xc0ac) {\n                        // Lo  [27] HANGUL SYLLABLE BBIG..HANGUL SYLLABLE BBIH\n                        if (0xc091 <= code && code <= 0xc0ab) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xc0ad) {\n                          // Lo       HANGUL SYLLABLE SA\n                          if (0xc0ac === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE SAG..HANGUL SYLLABLE SAH\n                          if (0xc0ad <= code && code <= 0xc0c7) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0xc101) {\n                    if (code < 0xc0e4) {\n                      if (code < 0xc0c9) {\n                        // Lo       HANGUL SYLLABLE SAE\n                        if (0xc0c8 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE SAEG..HANGUL SYLLABLE SAEH\n                        if (0xc0c9 <= code && code <= 0xc0e3) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xc0e5) {\n                        // Lo       HANGUL SYLLABLE SYA\n                        if (0xc0e4 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xc100) {\n                          // Lo  [27] HANGUL SYLLABLE SYAG..HANGUL SYLLABLE SYAH\n                          if (0xc0e5 <= code && code <= 0xc0ff) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE SYAE\n                          if (0xc100 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xc138) {\n                      if (code < 0xc11c) {\n                        // Lo  [27] HANGUL SYLLABLE SYAEG..HANGUL SYLLABLE SYAEH\n                        if (0xc101 <= code && code <= 0xc11b) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xc11d) {\n                          // Lo       HANGUL SYLLABLE SEO\n                          if (0xc11c === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE SEOG..HANGUL SYLLABLE SEOH\n                          if (0xc11d <= code && code <= 0xc137) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xc139) {\n                        // Lo       HANGUL SYLLABLE SE\n                        if (0xc138 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xc154) {\n                          // Lo  [27] HANGUL SYLLABLE SEG..HANGUL SYLLABLE SEH\n                          if (0xc139 <= code && code <= 0xc153) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE SYEO\n                          if (0xc154 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            } else {\n              if (code < 0xc288) {\n                if (code < 0xc1e1) {\n                  if (code < 0xc1a8) {\n                    if (code < 0xc171) {\n                      if (code < 0xc170) {\n                        // Lo  [27] HANGUL SYLLABLE SYEOG..HANGUL SYLLABLE SYEOH\n                        if (0xc155 <= code && code <= 0xc16f) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE SYE\n                        if (0xc170 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xc18c) {\n                        // Lo  [27] HANGUL SYLLABLE SYEG..HANGUL SYLLABLE SYEH\n                        if (0xc171 <= code && code <= 0xc18b) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xc18d) {\n                          // Lo       HANGUL SYLLABLE SO\n                          if (0xc18c === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE SOG..HANGUL SYLLABLE SOH\n                          if (0xc18d <= code && code <= 0xc1a7) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xc1c4) {\n                      if (code < 0xc1a9) {\n                        // Lo       HANGUL SYLLABLE SWA\n                        if (0xc1a8 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE SWAG..HANGUL SYLLABLE SWAH\n                        if (0xc1a9 <= code && code <= 0xc1c3) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xc1c5) {\n                        // Lo       HANGUL SYLLABLE SWAE\n                        if (0xc1c4 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xc1e0) {\n                          // Lo  [27] HANGUL SYLLABLE SWAEG..HANGUL SYLLABLE SWAEH\n                          if (0xc1c5 <= code && code <= 0xc1df) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE SOE\n                          if (0xc1e0 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0xc234) {\n                    if (code < 0xc1fd) {\n                      if (code < 0xc1fc) {\n                        // Lo  [27] HANGUL SYLLABLE SOEG..HANGUL SYLLABLE SOEH\n                        if (0xc1e1 <= code && code <= 0xc1fb) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE SYO\n                        if (0xc1fc === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xc218) {\n                        // Lo  [27] HANGUL SYLLABLE SYOG..HANGUL SYLLABLE SYOH\n                        if (0xc1fd <= code && code <= 0xc217) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xc219) {\n                          // Lo       HANGUL SYLLABLE SU\n                          if (0xc218 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE SUG..HANGUL SYLLABLE SUH\n                          if (0xc219 <= code && code <= 0xc233) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xc251) {\n                      if (code < 0xc235) {\n                        // Lo       HANGUL SYLLABLE SWEO\n                        if (0xc234 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xc250) {\n                          // Lo  [27] HANGUL SYLLABLE SWEOG..HANGUL SYLLABLE SWEOH\n                          if (0xc235 <= code && code <= 0xc24f) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE SWE\n                          if (0xc250 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xc26c) {\n                        // Lo  [27] HANGUL SYLLABLE SWEG..HANGUL SYLLABLE SWEH\n                        if (0xc251 <= code && code <= 0xc26b) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xc26d) {\n                          // Lo       HANGUL SYLLABLE SWI\n                          if (0xc26c === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE SWIG..HANGUL SYLLABLE SWIH\n                          if (0xc26d <= code && code <= 0xc287) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              } else {\n                if (code < 0xc315) {\n                  if (code < 0xc2c1) {\n                    if (code < 0xc2a4) {\n                      if (code < 0xc289) {\n                        // Lo       HANGUL SYLLABLE SYU\n                        if (0xc288 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE SYUG..HANGUL SYLLABLE SYUH\n                        if (0xc289 <= code && code <= 0xc2a3) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xc2a5) {\n                        // Lo       HANGUL SYLLABLE SEU\n                        if (0xc2a4 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xc2c0) {\n                          // Lo  [27] HANGUL SYLLABLE SEUG..HANGUL SYLLABLE SEUH\n                          if (0xc2a5 <= code && code <= 0xc2bf) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE SYI\n                          if (0xc2c0 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xc2f8) {\n                      if (code < 0xc2dc) {\n                        // Lo  [27] HANGUL SYLLABLE SYIG..HANGUL SYLLABLE SYIH\n                        if (0xc2c1 <= code && code <= 0xc2db) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xc2dd) {\n                          // Lo       HANGUL SYLLABLE SI\n                          if (0xc2dc === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE SIG..HANGUL SYLLABLE SIH\n                          if (0xc2dd <= code && code <= 0xc2f7) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xc2f9) {\n                        // Lo       HANGUL SYLLABLE SSA\n                        if (0xc2f8 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xc314) {\n                          // Lo  [27] HANGUL SYLLABLE SSAG..HANGUL SYLLABLE SSAH\n                          if (0xc2f9 <= code && code <= 0xc313) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE SSAE\n                          if (0xc314 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0xc368) {\n                    if (code < 0xc331) {\n                      if (code < 0xc330) {\n                        // Lo  [27] HANGUL SYLLABLE SSAEG..HANGUL SYLLABLE SSAEH\n                        if (0xc315 <= code && code <= 0xc32f) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE SSYA\n                        if (0xc330 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xc34c) {\n                        // Lo  [27] HANGUL SYLLABLE SSYAG..HANGUL SYLLABLE SSYAH\n                        if (0xc331 <= code && code <= 0xc34b) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xc34d) {\n                          // Lo       HANGUL SYLLABLE SSYAE\n                          if (0xc34c === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE SSYAEG..HANGUL SYLLABLE SSYAEH\n                          if (0xc34d <= code && code <= 0xc367) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xc385) {\n                      if (code < 0xc369) {\n                        // Lo       HANGUL SYLLABLE SSEO\n                        if (0xc368 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xc384) {\n                          // Lo  [27] HANGUL SYLLABLE SSEOG..HANGUL SYLLABLE SSEOH\n                          if (0xc369 <= code && code <= 0xc383) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE SSE\n                          if (0xc384 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xc3a0) {\n                        // Lo  [27] HANGUL SYLLABLE SSEG..HANGUL SYLLABLE SSEH\n                        if (0xc385 <= code && code <= 0xc39f) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xc3a1) {\n                          // Lo       HANGUL SYLLABLE SSYEO\n                          if (0xc3a0 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE SSYEOG..HANGUL SYLLABLE SSYEOH\n                          if (0xc3a1 <= code && code <= 0xc3bb) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          } else {\n            if (code < 0xc609) {\n              if (code < 0xc4d5) {\n                if (code < 0xc448) {\n                  if (code < 0xc3f5) {\n                    if (code < 0xc3d8) {\n                      if (code < 0xc3bd) {\n                        // Lo       HANGUL SYLLABLE SSYE\n                        if (0xc3bc === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE SSYEG..HANGUL SYLLABLE SSYEH\n                        if (0xc3bd <= code && code <= 0xc3d7) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xc3d9) {\n                        // Lo       HANGUL SYLLABLE SSO\n                        if (0xc3d8 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xc3f4) {\n                          // Lo  [27] HANGUL SYLLABLE SSOG..HANGUL SYLLABLE SSOH\n                          if (0xc3d9 <= code && code <= 0xc3f3) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE SSWA\n                          if (0xc3f4 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xc411) {\n                      if (code < 0xc410) {\n                        // Lo  [27] HANGUL SYLLABLE SSWAG..HANGUL SYLLABLE SSWAH\n                        if (0xc3f5 <= code && code <= 0xc40f) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE SSWAE\n                        if (0xc410 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xc42c) {\n                        // Lo  [27] HANGUL SYLLABLE SSWAEG..HANGUL SYLLABLE SSWAEH\n                        if (0xc411 <= code && code <= 0xc42b) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xc42d) {\n                          // Lo       HANGUL SYLLABLE SSOE\n                          if (0xc42c === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE SSOEG..HANGUL SYLLABLE SSOEH\n                          if (0xc42d <= code && code <= 0xc447) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0xc481) {\n                    if (code < 0xc464) {\n                      if (code < 0xc449) {\n                        // Lo       HANGUL SYLLABLE SSYO\n                        if (0xc448 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE SSYOG..HANGUL SYLLABLE SSYOH\n                        if (0xc449 <= code && code <= 0xc463) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xc465) {\n                        // Lo       HANGUL SYLLABLE SSU\n                        if (0xc464 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xc480) {\n                          // Lo  [27] HANGUL SYLLABLE SSUG..HANGUL SYLLABLE SSUH\n                          if (0xc465 <= code && code <= 0xc47f) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE SSWEO\n                          if (0xc480 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xc4b8) {\n                      if (code < 0xc49c) {\n                        // Lo  [27] HANGUL SYLLABLE SSWEOG..HANGUL SYLLABLE SSWEOH\n                        if (0xc481 <= code && code <= 0xc49b) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xc49d) {\n                          // Lo       HANGUL SYLLABLE SSWE\n                          if (0xc49c === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE SSWEG..HANGUL SYLLABLE SSWEH\n                          if (0xc49d <= code && code <= 0xc4b7) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xc4b9) {\n                        // Lo       HANGUL SYLLABLE SSWI\n                        if (0xc4b8 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xc4d4) {\n                          // Lo  [27] HANGUL SYLLABLE SSWIG..HANGUL SYLLABLE SSWIH\n                          if (0xc4b9 <= code && code <= 0xc4d3) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE SSYU\n                          if (0xc4d4 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              } else {\n                if (code < 0xc57c) {\n                  if (code < 0xc528) {\n                    if (code < 0xc4f1) {\n                      if (code < 0xc4f0) {\n                        // Lo  [27] HANGUL SYLLABLE SSYUG..HANGUL SYLLABLE SSYUH\n                        if (0xc4d5 <= code && code <= 0xc4ef) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE SSEU\n                        if (0xc4f0 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xc50c) {\n                        // Lo  [27] HANGUL SYLLABLE SSEUG..HANGUL SYLLABLE SSEUH\n                        if (0xc4f1 <= code && code <= 0xc50b) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xc50d) {\n                          // Lo       HANGUL SYLLABLE SSYI\n                          if (0xc50c === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE SSYIG..HANGUL SYLLABLE SSYIH\n                          if (0xc50d <= code && code <= 0xc527) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xc545) {\n                      if (code < 0xc529) {\n                        // Lo       HANGUL SYLLABLE SSI\n                        if (0xc528 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xc544) {\n                          // Lo  [27] HANGUL SYLLABLE SSIG..HANGUL SYLLABLE SSIH\n                          if (0xc529 <= code && code <= 0xc543) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE A\n                          if (0xc544 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xc560) {\n                        // Lo  [27] HANGUL SYLLABLE AG..HANGUL SYLLABLE AH\n                        if (0xc545 <= code && code <= 0xc55f) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xc561) {\n                          // Lo       HANGUL SYLLABLE AE\n                          if (0xc560 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE AEG..HANGUL SYLLABLE AEH\n                          if (0xc561 <= code && code <= 0xc57b) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0xc5b5) {\n                    if (code < 0xc598) {\n                      if (code < 0xc57d) {\n                        // Lo       HANGUL SYLLABLE YA\n                        if (0xc57c === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE YAG..HANGUL SYLLABLE YAH\n                        if (0xc57d <= code && code <= 0xc597) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xc599) {\n                        // Lo       HANGUL SYLLABLE YAE\n                        if (0xc598 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xc5b4) {\n                          // Lo  [27] HANGUL SYLLABLE YAEG..HANGUL SYLLABLE YAEH\n                          if (0xc599 <= code && code <= 0xc5b3) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE EO\n                          if (0xc5b4 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xc5ec) {\n                      if (code < 0xc5d0) {\n                        // Lo  [27] HANGUL SYLLABLE EOG..HANGUL SYLLABLE EOH\n                        if (0xc5b5 <= code && code <= 0xc5cf) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xc5d1) {\n                          // Lo       HANGUL SYLLABLE E\n                          if (0xc5d0 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE EG..HANGUL SYLLABLE EH\n                          if (0xc5d1 <= code && code <= 0xc5eb) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xc5ed) {\n                        // Lo       HANGUL SYLLABLE YEO\n                        if (0xc5ec === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xc608) {\n                          // Lo  [27] HANGUL SYLLABLE YEOG..HANGUL SYLLABLE YEOH\n                          if (0xc5ed <= code && code <= 0xc607) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE YE\n                          if (0xc608 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            } else {\n              if (code < 0xc73c) {\n                if (code < 0xc695) {\n                  if (code < 0xc65c) {\n                    if (code < 0xc625) {\n                      if (code < 0xc624) {\n                        // Lo  [27] HANGUL SYLLABLE YEG..HANGUL SYLLABLE YEH\n                        if (0xc609 <= code && code <= 0xc623) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE O\n                        if (0xc624 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xc640) {\n                        // Lo  [27] HANGUL SYLLABLE OG..HANGUL SYLLABLE OH\n                        if (0xc625 <= code && code <= 0xc63f) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xc641) {\n                          // Lo       HANGUL SYLLABLE WA\n                          if (0xc640 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE WAG..HANGUL SYLLABLE WAH\n                          if (0xc641 <= code && code <= 0xc65b) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xc678) {\n                      if (code < 0xc65d) {\n                        // Lo       HANGUL SYLLABLE WAE\n                        if (0xc65c === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE WAEG..HANGUL SYLLABLE WAEH\n                        if (0xc65d <= code && code <= 0xc677) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xc679) {\n                        // Lo       HANGUL SYLLABLE OE\n                        if (0xc678 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xc694) {\n                          // Lo  [27] HANGUL SYLLABLE OEG..HANGUL SYLLABLE OEH\n                          if (0xc679 <= code && code <= 0xc693) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE YO\n                          if (0xc694 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0xc6e8) {\n                    if (code < 0xc6b1) {\n                      if (code < 0xc6b0) {\n                        // Lo  [27] HANGUL SYLLABLE YOG..HANGUL SYLLABLE YOH\n                        if (0xc695 <= code && code <= 0xc6af) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE U\n                        if (0xc6b0 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xc6cc) {\n                        // Lo  [27] HANGUL SYLLABLE UG..HANGUL SYLLABLE UH\n                        if (0xc6b1 <= code && code <= 0xc6cb) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xc6cd) {\n                          // Lo       HANGUL SYLLABLE WEO\n                          if (0xc6cc === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE WEOG..HANGUL SYLLABLE WEOH\n                          if (0xc6cd <= code && code <= 0xc6e7) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xc705) {\n                      if (code < 0xc6e9) {\n                        // Lo       HANGUL SYLLABLE WE\n                        if (0xc6e8 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xc704) {\n                          // Lo  [27] HANGUL SYLLABLE WEG..HANGUL SYLLABLE WEH\n                          if (0xc6e9 <= code && code <= 0xc703) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE WI\n                          if (0xc704 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xc720) {\n                        // Lo  [27] HANGUL SYLLABLE WIG..HANGUL SYLLABLE WIH\n                        if (0xc705 <= code && code <= 0xc71f) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xc721) {\n                          // Lo       HANGUL SYLLABLE YU\n                          if (0xc720 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE YUG..HANGUL SYLLABLE YUH\n                          if (0xc721 <= code && code <= 0xc73b) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              } else {\n                if (code < 0xc7c9) {\n                  if (code < 0xc775) {\n                    if (code < 0xc758) {\n                      if (code < 0xc73d) {\n                        // Lo       HANGUL SYLLABLE EU\n                        if (0xc73c === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE EUG..HANGUL SYLLABLE EUH\n                        if (0xc73d <= code && code <= 0xc757) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xc759) {\n                        // Lo       HANGUL SYLLABLE YI\n                        if (0xc758 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xc774) {\n                          // Lo  [27] HANGUL SYLLABLE YIG..HANGUL SYLLABLE YIH\n                          if (0xc759 <= code && code <= 0xc773) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE I\n                          if (0xc774 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xc7ac) {\n                      if (code < 0xc790) {\n                        // Lo  [27] HANGUL SYLLABLE IG..HANGUL SYLLABLE IH\n                        if (0xc775 <= code && code <= 0xc78f) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xc791) {\n                          // Lo       HANGUL SYLLABLE JA\n                          if (0xc790 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE JAG..HANGUL SYLLABLE JAH\n                          if (0xc791 <= code && code <= 0xc7ab) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xc7ad) {\n                        // Lo       HANGUL SYLLABLE JAE\n                        if (0xc7ac === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xc7c8) {\n                          // Lo  [27] HANGUL SYLLABLE JAEG..HANGUL SYLLABLE JAEH\n                          if (0xc7ad <= code && code <= 0xc7c7) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE JYA\n                          if (0xc7c8 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0xc81c) {\n                    if (code < 0xc7e5) {\n                      if (code < 0xc7e4) {\n                        // Lo  [27] HANGUL SYLLABLE JYAG..HANGUL SYLLABLE JYAH\n                        if (0xc7c9 <= code && code <= 0xc7e3) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE JYAE\n                        if (0xc7e4 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xc800) {\n                        // Lo  [27] HANGUL SYLLABLE JYAEG..HANGUL SYLLABLE JYAEH\n                        if (0xc7e5 <= code && code <= 0xc7ff) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xc801) {\n                          // Lo       HANGUL SYLLABLE JEO\n                          if (0xc800 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE JEOG..HANGUL SYLLABLE JEOH\n                          if (0xc801 <= code && code <= 0xc81b) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xc839) {\n                      if (code < 0xc81d) {\n                        // Lo       HANGUL SYLLABLE JE\n                        if (0xc81c === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xc838) {\n                          // Lo  [27] HANGUL SYLLABLE JEG..HANGUL SYLLABLE JEH\n                          if (0xc81d <= code && code <= 0xc837) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE JYEO\n                          if (0xc838 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xc854) {\n                        // Lo  [27] HANGUL SYLLABLE JYEOG..HANGUL SYLLABLE JYEOH\n                        if (0xc839 <= code && code <= 0xc853) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xc855) {\n                          // Lo       HANGUL SYLLABLE JYE\n                          if (0xc854 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE JYEG..HANGUL SYLLABLE JYEH\n                          if (0xc855 <= code && code <= 0xc86f) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        } else {\n          if (code < 0xcd24) {\n            if (code < 0xcabd) {\n              if (code < 0xc989) {\n                if (code < 0xc8fc) {\n                  if (code < 0xc8a9) {\n                    if (code < 0xc88c) {\n                      if (code < 0xc871) {\n                        // Lo       HANGUL SYLLABLE JO\n                        if (0xc870 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE JOG..HANGUL SYLLABLE JOH\n                        if (0xc871 <= code && code <= 0xc88b) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xc88d) {\n                        // Lo       HANGUL SYLLABLE JWA\n                        if (0xc88c === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xc8a8) {\n                          // Lo  [27] HANGUL SYLLABLE JWAG..HANGUL SYLLABLE JWAH\n                          if (0xc88d <= code && code <= 0xc8a7) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE JWAE\n                          if (0xc8a8 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xc8c5) {\n                      if (code < 0xc8c4) {\n                        // Lo  [27] HANGUL SYLLABLE JWAEG..HANGUL SYLLABLE JWAEH\n                        if (0xc8a9 <= code && code <= 0xc8c3) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE JOE\n                        if (0xc8c4 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xc8e0) {\n                        // Lo  [27] HANGUL SYLLABLE JOEG..HANGUL SYLLABLE JOEH\n                        if (0xc8c5 <= code && code <= 0xc8df) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xc8e1) {\n                          // Lo       HANGUL SYLLABLE JYO\n                          if (0xc8e0 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE JYOG..HANGUL SYLLABLE JYOH\n                          if (0xc8e1 <= code && code <= 0xc8fb) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0xc935) {\n                    if (code < 0xc918) {\n                      if (code < 0xc8fd) {\n                        // Lo       HANGUL SYLLABLE JU\n                        if (0xc8fc === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE JUG..HANGUL SYLLABLE JUH\n                        if (0xc8fd <= code && code <= 0xc917) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xc919) {\n                        // Lo       HANGUL SYLLABLE JWEO\n                        if (0xc918 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xc934) {\n                          // Lo  [27] HANGUL SYLLABLE JWEOG..HANGUL SYLLABLE JWEOH\n                          if (0xc919 <= code && code <= 0xc933) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE JWE\n                          if (0xc934 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xc96c) {\n                      if (code < 0xc950) {\n                        // Lo  [27] HANGUL SYLLABLE JWEG..HANGUL SYLLABLE JWEH\n                        if (0xc935 <= code && code <= 0xc94f) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xc951) {\n                          // Lo       HANGUL SYLLABLE JWI\n                          if (0xc950 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE JWIG..HANGUL SYLLABLE JWIH\n                          if (0xc951 <= code && code <= 0xc96b) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xc96d) {\n                        // Lo       HANGUL SYLLABLE JYU\n                        if (0xc96c === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xc988) {\n                          // Lo  [27] HANGUL SYLLABLE JYUG..HANGUL SYLLABLE JYUH\n                          if (0xc96d <= code && code <= 0xc987) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE JEU\n                          if (0xc988 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              } else {\n                if (code < 0xca30) {\n                  if (code < 0xc9dc) {\n                    if (code < 0xc9a5) {\n                      if (code < 0xc9a4) {\n                        // Lo  [27] HANGUL SYLLABLE JEUG..HANGUL SYLLABLE JEUH\n                        if (0xc989 <= code && code <= 0xc9a3) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE JYI\n                        if (0xc9a4 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xc9c0) {\n                        // Lo  [27] HANGUL SYLLABLE JYIG..HANGUL SYLLABLE JYIH\n                        if (0xc9a5 <= code && code <= 0xc9bf) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xc9c1) {\n                          // Lo       HANGUL SYLLABLE JI\n                          if (0xc9c0 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE JIG..HANGUL SYLLABLE JIH\n                          if (0xc9c1 <= code && code <= 0xc9db) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xc9f9) {\n                      if (code < 0xc9dd) {\n                        // Lo       HANGUL SYLLABLE JJA\n                        if (0xc9dc === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xc9f8) {\n                          // Lo  [27] HANGUL SYLLABLE JJAG..HANGUL SYLLABLE JJAH\n                          if (0xc9dd <= code && code <= 0xc9f7) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE JJAE\n                          if (0xc9f8 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xca14) {\n                        // Lo  [27] HANGUL SYLLABLE JJAEG..HANGUL SYLLABLE JJAEH\n                        if (0xc9f9 <= code && code <= 0xca13) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xca15) {\n                          // Lo       HANGUL SYLLABLE JJYA\n                          if (0xca14 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE JJYAG..HANGUL SYLLABLE JJYAH\n                          if (0xca15 <= code && code <= 0xca2f) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0xca69) {\n                    if (code < 0xca4c) {\n                      if (code < 0xca31) {\n                        // Lo       HANGUL SYLLABLE JJYAE\n                        if (0xca30 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE JJYAEG..HANGUL SYLLABLE JJYAEH\n                        if (0xca31 <= code && code <= 0xca4b) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xca4d) {\n                        // Lo       HANGUL SYLLABLE JJEO\n                        if (0xca4c === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xca68) {\n                          // Lo  [27] HANGUL SYLLABLE JJEOG..HANGUL SYLLABLE JJEOH\n                          if (0xca4d <= code && code <= 0xca67) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE JJE\n                          if (0xca68 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xcaa0) {\n                      if (code < 0xca84) {\n                        // Lo  [27] HANGUL SYLLABLE JJEG..HANGUL SYLLABLE JJEH\n                        if (0xca69 <= code && code <= 0xca83) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xca85) {\n                          // Lo       HANGUL SYLLABLE JJYEO\n                          if (0xca84 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE JJYEOG..HANGUL SYLLABLE JJYEOH\n                          if (0xca85 <= code && code <= 0xca9f) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xcaa1) {\n                        // Lo       HANGUL SYLLABLE JJYE\n                        if (0xcaa0 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xcabc) {\n                          // Lo  [27] HANGUL SYLLABLE JJYEG..HANGUL SYLLABLE JJYEH\n                          if (0xcaa1 <= code && code <= 0xcabb) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE JJO\n                          if (0xcabc === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            } else {\n              if (code < 0xcbf0) {\n                if (code < 0xcb49) {\n                  if (code < 0xcb10) {\n                    if (code < 0xcad9) {\n                      if (code < 0xcad8) {\n                        // Lo  [27] HANGUL SYLLABLE JJOG..HANGUL SYLLABLE JJOH\n                        if (0xcabd <= code && code <= 0xcad7) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE JJWA\n                        if (0xcad8 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xcaf4) {\n                        // Lo  [27] HANGUL SYLLABLE JJWAG..HANGUL SYLLABLE JJWAH\n                        if (0xcad9 <= code && code <= 0xcaf3) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xcaf5) {\n                          // Lo       HANGUL SYLLABLE JJWAE\n                          if (0xcaf4 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE JJWAEG..HANGUL SYLLABLE JJWAEH\n                          if (0xcaf5 <= code && code <= 0xcb0f) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xcb2c) {\n                      if (code < 0xcb11) {\n                        // Lo       HANGUL SYLLABLE JJOE\n                        if (0xcb10 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE JJOEG..HANGUL SYLLABLE JJOEH\n                        if (0xcb11 <= code && code <= 0xcb2b) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xcb2d) {\n                        // Lo       HANGUL SYLLABLE JJYO\n                        if (0xcb2c === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xcb48) {\n                          // Lo  [27] HANGUL SYLLABLE JJYOG..HANGUL SYLLABLE JJYOH\n                          if (0xcb2d <= code && code <= 0xcb47) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE JJU\n                          if (0xcb48 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0xcb9c) {\n                    if (code < 0xcb65) {\n                      if (code < 0xcb64) {\n                        // Lo  [27] HANGUL SYLLABLE JJUG..HANGUL SYLLABLE JJUH\n                        if (0xcb49 <= code && code <= 0xcb63) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE JJWEO\n                        if (0xcb64 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xcb80) {\n                        // Lo  [27] HANGUL SYLLABLE JJWEOG..HANGUL SYLLABLE JJWEOH\n                        if (0xcb65 <= code && code <= 0xcb7f) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xcb81) {\n                          // Lo       HANGUL SYLLABLE JJWE\n                          if (0xcb80 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE JJWEG..HANGUL SYLLABLE JJWEH\n                          if (0xcb81 <= code && code <= 0xcb9b) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xcbb9) {\n                      if (code < 0xcb9d) {\n                        // Lo       HANGUL SYLLABLE JJWI\n                        if (0xcb9c === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xcbb8) {\n                          // Lo  [27] HANGUL SYLLABLE JJWIG..HANGUL SYLLABLE JJWIH\n                          if (0xcb9d <= code && code <= 0xcbb7) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE JJYU\n                          if (0xcbb8 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xcbd4) {\n                        // Lo  [27] HANGUL SYLLABLE JJYUG..HANGUL SYLLABLE JJYUH\n                        if (0xcbb9 <= code && code <= 0xcbd3) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xcbd5) {\n                          // Lo       HANGUL SYLLABLE JJEU\n                          if (0xcbd4 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE JJEUG..HANGUL SYLLABLE JJEUH\n                          if (0xcbd5 <= code && code <= 0xcbef) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              } else {\n                if (code < 0xcc7d) {\n                  if (code < 0xcc29) {\n                    if (code < 0xcc0c) {\n                      if (code < 0xcbf1) {\n                        // Lo       HANGUL SYLLABLE JJYI\n                        if (0xcbf0 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE JJYIG..HANGUL SYLLABLE JJYIH\n                        if (0xcbf1 <= code && code <= 0xcc0b) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xcc0d) {\n                        // Lo       HANGUL SYLLABLE JJI\n                        if (0xcc0c === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xcc28) {\n                          // Lo  [27] HANGUL SYLLABLE JJIG..HANGUL SYLLABLE JJIH\n                          if (0xcc0d <= code && code <= 0xcc27) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE CA\n                          if (0xcc28 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xcc60) {\n                      if (code < 0xcc44) {\n                        // Lo  [27] HANGUL SYLLABLE CAG..HANGUL SYLLABLE CAH\n                        if (0xcc29 <= code && code <= 0xcc43) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xcc45) {\n                          // Lo       HANGUL SYLLABLE CAE\n                          if (0xcc44 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE CAEG..HANGUL SYLLABLE CAEH\n                          if (0xcc45 <= code && code <= 0xcc5f) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xcc61) {\n                        // Lo       HANGUL SYLLABLE CYA\n                        if (0xcc60 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xcc7c) {\n                          // Lo  [27] HANGUL SYLLABLE CYAG..HANGUL SYLLABLE CYAH\n                          if (0xcc61 <= code && code <= 0xcc7b) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE CYAE\n                          if (0xcc7c === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0xccd0) {\n                    if (code < 0xcc99) {\n                      if (code < 0xcc98) {\n                        // Lo  [27] HANGUL SYLLABLE CYAEG..HANGUL SYLLABLE CYAEH\n                        if (0xcc7d <= code && code <= 0xcc97) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE CEO\n                        if (0xcc98 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xccb4) {\n                        // Lo  [27] HANGUL SYLLABLE CEOG..HANGUL SYLLABLE CEOH\n                        if (0xcc99 <= code && code <= 0xccb3) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xccb5) {\n                          // Lo       HANGUL SYLLABLE CE\n                          if (0xccb4 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE CEG..HANGUL SYLLABLE CEH\n                          if (0xccb5 <= code && code <= 0xcccf) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xcced) {\n                      if (code < 0xccd1) {\n                        // Lo       HANGUL SYLLABLE CYEO\n                        if (0xccd0 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xccec) {\n                          // Lo  [27] HANGUL SYLLABLE CYEOG..HANGUL SYLLABLE CYEOH\n                          if (0xccd1 <= code && code <= 0xcceb) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE CYE\n                          if (0xccec === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xcd08) {\n                        // Lo  [27] HANGUL SYLLABLE CYEG..HANGUL SYLLABLE CYEH\n                        if (0xcced <= code && code <= 0xcd07) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xcd09) {\n                          // Lo       HANGUL SYLLABLE CO\n                          if (0xcd08 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE COG..HANGUL SYLLABLE COH\n                          if (0xcd09 <= code && code <= 0xcd23) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          } else {\n            if (code < 0xcf71) {\n              if (code < 0xce3d) {\n                if (code < 0xcdb0) {\n                  if (code < 0xcd5d) {\n                    if (code < 0xcd40) {\n                      if (code < 0xcd25) {\n                        // Lo       HANGUL SYLLABLE CWA\n                        if (0xcd24 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE CWAG..HANGUL SYLLABLE CWAH\n                        if (0xcd25 <= code && code <= 0xcd3f) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xcd41) {\n                        // Lo       HANGUL SYLLABLE CWAE\n                        if (0xcd40 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xcd5c) {\n                          // Lo  [27] HANGUL SYLLABLE CWAEG..HANGUL SYLLABLE CWAEH\n                          if (0xcd41 <= code && code <= 0xcd5b) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE COE\n                          if (0xcd5c === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xcd79) {\n                      if (code < 0xcd78) {\n                        // Lo  [27] HANGUL SYLLABLE COEG..HANGUL SYLLABLE COEH\n                        if (0xcd5d <= code && code <= 0xcd77) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE CYO\n                        if (0xcd78 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xcd94) {\n                        // Lo  [27] HANGUL SYLLABLE CYOG..HANGUL SYLLABLE CYOH\n                        if (0xcd79 <= code && code <= 0xcd93) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xcd95) {\n                          // Lo       HANGUL SYLLABLE CU\n                          if (0xcd94 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE CUG..HANGUL SYLLABLE CUH\n                          if (0xcd95 <= code && code <= 0xcdaf) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0xcde9) {\n                    if (code < 0xcdcc) {\n                      if (code < 0xcdb1) {\n                        // Lo       HANGUL SYLLABLE CWEO\n                        if (0xcdb0 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE CWEOG..HANGUL SYLLABLE CWEOH\n                        if (0xcdb1 <= code && code <= 0xcdcb) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xcdcd) {\n                        // Lo       HANGUL SYLLABLE CWE\n                        if (0xcdcc === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xcde8) {\n                          // Lo  [27] HANGUL SYLLABLE CWEG..HANGUL SYLLABLE CWEH\n                          if (0xcdcd <= code && code <= 0xcde7) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE CWI\n                          if (0xcde8 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xce20) {\n                      if (code < 0xce04) {\n                        // Lo  [27] HANGUL SYLLABLE CWIG..HANGUL SYLLABLE CWIH\n                        if (0xcde9 <= code && code <= 0xce03) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xce05) {\n                          // Lo       HANGUL SYLLABLE CYU\n                          if (0xce04 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE CYUG..HANGUL SYLLABLE CYUH\n                          if (0xce05 <= code && code <= 0xce1f) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xce21) {\n                        // Lo       HANGUL SYLLABLE CEU\n                        if (0xce20 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xce3c) {\n                          // Lo  [27] HANGUL SYLLABLE CEUG..HANGUL SYLLABLE CEUH\n                          if (0xce21 <= code && code <= 0xce3b) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE CYI\n                          if (0xce3c === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              } else {\n                if (code < 0xcee4) {\n                  if (code < 0xce90) {\n                    if (code < 0xce59) {\n                      if (code < 0xce58) {\n                        // Lo  [27] HANGUL SYLLABLE CYIG..HANGUL SYLLABLE CYIH\n                        if (0xce3d <= code && code <= 0xce57) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE CI\n                        if (0xce58 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xce74) {\n                        // Lo  [27] HANGUL SYLLABLE CIG..HANGUL SYLLABLE CIH\n                        if (0xce59 <= code && code <= 0xce73) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xce75) {\n                          // Lo       HANGUL SYLLABLE KA\n                          if (0xce74 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE KAG..HANGUL SYLLABLE KAH\n                          if (0xce75 <= code && code <= 0xce8f) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xcead) {\n                      if (code < 0xce91) {\n                        // Lo       HANGUL SYLLABLE KAE\n                        if (0xce90 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xceac) {\n                          // Lo  [27] HANGUL SYLLABLE KAEG..HANGUL SYLLABLE KAEH\n                          if (0xce91 <= code && code <= 0xceab) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE KYA\n                          if (0xceac === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xcec8) {\n                        // Lo  [27] HANGUL SYLLABLE KYAG..HANGUL SYLLABLE KYAH\n                        if (0xcead <= code && code <= 0xcec7) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xcec9) {\n                          // Lo       HANGUL SYLLABLE KYAE\n                          if (0xcec8 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE KYAEG..HANGUL SYLLABLE KYAEH\n                          if (0xcec9 <= code && code <= 0xcee3) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0xcf1d) {\n                    if (code < 0xcf00) {\n                      if (code < 0xcee5) {\n                        // Lo       HANGUL SYLLABLE KEO\n                        if (0xcee4 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE KEOG..HANGUL SYLLABLE KEOH\n                        if (0xcee5 <= code && code <= 0xceff) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xcf01) {\n                        // Lo       HANGUL SYLLABLE KE\n                        if (0xcf00 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xcf1c) {\n                          // Lo  [27] HANGUL SYLLABLE KEG..HANGUL SYLLABLE KEH\n                          if (0xcf01 <= code && code <= 0xcf1b) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE KYEO\n                          if (0xcf1c === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xcf54) {\n                      if (code < 0xcf38) {\n                        // Lo  [27] HANGUL SYLLABLE KYEOG..HANGUL SYLLABLE KYEOH\n                        if (0xcf1d <= code && code <= 0xcf37) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xcf39) {\n                          // Lo       HANGUL SYLLABLE KYE\n                          if (0xcf38 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE KYEG..HANGUL SYLLABLE KYEH\n                          if (0xcf39 <= code && code <= 0xcf53) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xcf55) {\n                        // Lo       HANGUL SYLLABLE KO\n                        if (0xcf54 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xcf70) {\n                          // Lo  [27] HANGUL SYLLABLE KOG..HANGUL SYLLABLE KOH\n                          if (0xcf55 <= code && code <= 0xcf6f) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE KWA\n                          if (0xcf70 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            } else {\n              if (code < 0xd0a4) {\n                if (code < 0xcffd) {\n                  if (code < 0xcfc4) {\n                    if (code < 0xcf8d) {\n                      if (code < 0xcf8c) {\n                        // Lo  [27] HANGUL SYLLABLE KWAG..HANGUL SYLLABLE KWAH\n                        if (0xcf71 <= code && code <= 0xcf8b) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE KWAE\n                        if (0xcf8c === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xcfa8) {\n                        // Lo  [27] HANGUL SYLLABLE KWAEG..HANGUL SYLLABLE KWAEH\n                        if (0xcf8d <= code && code <= 0xcfa7) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xcfa9) {\n                          // Lo       HANGUL SYLLABLE KOE\n                          if (0xcfa8 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE KOEG..HANGUL SYLLABLE KOEH\n                          if (0xcfa9 <= code && code <= 0xcfc3) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xcfe0) {\n                      if (code < 0xcfc5) {\n                        // Lo       HANGUL SYLLABLE KYO\n                        if (0xcfc4 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE KYOG..HANGUL SYLLABLE KYOH\n                        if (0xcfc5 <= code && code <= 0xcfdf) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xcfe1) {\n                        // Lo       HANGUL SYLLABLE KU\n                        if (0xcfe0 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xcffc) {\n                          // Lo  [27] HANGUL SYLLABLE KUG..HANGUL SYLLABLE KUH\n                          if (0xcfe1 <= code && code <= 0xcffb) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE KWEO\n                          if (0xcffc === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0xd050) {\n                    if (code < 0xd019) {\n                      if (code < 0xd018) {\n                        // Lo  [27] HANGUL SYLLABLE KWEOG..HANGUL SYLLABLE KWEOH\n                        if (0xcffd <= code && code <= 0xd017) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE KWE\n                        if (0xd018 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xd034) {\n                        // Lo  [27] HANGUL SYLLABLE KWEG..HANGUL SYLLABLE KWEH\n                        if (0xd019 <= code && code <= 0xd033) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xd035) {\n                          // Lo       HANGUL SYLLABLE KWI\n                          if (0xd034 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE KWIG..HANGUL SYLLABLE KWIH\n                          if (0xd035 <= code && code <= 0xd04f) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xd06d) {\n                      if (code < 0xd051) {\n                        // Lo       HANGUL SYLLABLE KYU\n                        if (0xd050 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xd06c) {\n                          // Lo  [27] HANGUL SYLLABLE KYUG..HANGUL SYLLABLE KYUH\n                          if (0xd051 <= code && code <= 0xd06b) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE KEU\n                          if (0xd06c === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xd088) {\n                        // Lo  [27] HANGUL SYLLABLE KEUG..HANGUL SYLLABLE KEUH\n                        if (0xd06d <= code && code <= 0xd087) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xd089) {\n                          // Lo       HANGUL SYLLABLE KYI\n                          if (0xd088 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE KYIG..HANGUL SYLLABLE KYIH\n                          if (0xd089 <= code && code <= 0xd0a3) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              } else {\n                if (code < 0xd131) {\n                  if (code < 0xd0dd) {\n                    if (code < 0xd0c0) {\n                      if (code < 0xd0a5) {\n                        // Lo       HANGUL SYLLABLE KI\n                        if (0xd0a4 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE KIG..HANGUL SYLLABLE KIH\n                        if (0xd0a5 <= code && code <= 0xd0bf) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xd0c1) {\n                        // Lo       HANGUL SYLLABLE TA\n                        if (0xd0c0 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xd0dc) {\n                          // Lo  [27] HANGUL SYLLABLE TAG..HANGUL SYLLABLE TAH\n                          if (0xd0c1 <= code && code <= 0xd0db) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE TAE\n                          if (0xd0dc === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xd114) {\n                      if (code < 0xd0f8) {\n                        // Lo  [27] HANGUL SYLLABLE TAEG..HANGUL SYLLABLE TAEH\n                        if (0xd0dd <= code && code <= 0xd0f7) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xd0f9) {\n                          // Lo       HANGUL SYLLABLE TYA\n                          if (0xd0f8 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE TYAG..HANGUL SYLLABLE TYAH\n                          if (0xd0f9 <= code && code <= 0xd113) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xd115) {\n                        // Lo       HANGUL SYLLABLE TYAE\n                        if (0xd114 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xd130) {\n                          // Lo  [27] HANGUL SYLLABLE TYAEG..HANGUL SYLLABLE TYAEH\n                          if (0xd115 <= code && code <= 0xd12f) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE TEO\n                          if (0xd130 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0xd184) {\n                    if (code < 0xd14d) {\n                      if (code < 0xd14c) {\n                        // Lo  [27] HANGUL SYLLABLE TEOG..HANGUL SYLLABLE TEOH\n                        if (0xd131 <= code && code <= 0xd14b) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE TE\n                        if (0xd14c === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xd168) {\n                        // Lo  [27] HANGUL SYLLABLE TEG..HANGUL SYLLABLE TEH\n                        if (0xd14d <= code && code <= 0xd167) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xd169) {\n                          // Lo       HANGUL SYLLABLE TYEO\n                          if (0xd168 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE TYEOG..HANGUL SYLLABLE TYEOH\n                          if (0xd169 <= code && code <= 0xd183) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xd1a1) {\n                      if (code < 0xd185) {\n                        // Lo       HANGUL SYLLABLE TYE\n                        if (0xd184 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xd1a0) {\n                          // Lo  [27] HANGUL SYLLABLE TYEG..HANGUL SYLLABLE TYEH\n                          if (0xd185 <= code && code <= 0xd19f) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE TO\n                          if (0xd1a0 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xd1bc) {\n                        // Lo  [27] HANGUL SYLLABLE TOG..HANGUL SYLLABLE TOH\n                        if (0xd1a1 <= code && code <= 0xd1bb) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xd1bd) {\n                          // Lo       HANGUL SYLLABLE TWA\n                          if (0xd1bc === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE TWAG..HANGUL SYLLABLE TWAH\n                          if (0xd1bd <= code && code <= 0xd1d7) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      } else {\n        if (code < 0x1133b) {\n          if (code < 0xd671) {\n            if (code < 0xd424) {\n              if (code < 0xd2f1) {\n                if (code < 0xd264) {\n                  if (code < 0xd211) {\n                    if (code < 0xd1f4) {\n                      if (code < 0xd1d9) {\n                        // Lo       HANGUL SYLLABLE TWAE\n                        if (0xd1d8 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE TWAEG..HANGUL SYLLABLE TWAEH\n                        if (0xd1d9 <= code && code <= 0xd1f3) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xd1f5) {\n                        // Lo       HANGUL SYLLABLE TOE\n                        if (0xd1f4 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xd210) {\n                          // Lo  [27] HANGUL SYLLABLE TOEG..HANGUL SYLLABLE TOEH\n                          if (0xd1f5 <= code && code <= 0xd20f) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE TYO\n                          if (0xd210 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xd22d) {\n                      if (code < 0xd22c) {\n                        // Lo  [27] HANGUL SYLLABLE TYOG..HANGUL SYLLABLE TYOH\n                        if (0xd211 <= code && code <= 0xd22b) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE TU\n                        if (0xd22c === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xd248) {\n                        // Lo  [27] HANGUL SYLLABLE TUG..HANGUL SYLLABLE TUH\n                        if (0xd22d <= code && code <= 0xd247) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xd249) {\n                          // Lo       HANGUL SYLLABLE TWEO\n                          if (0xd248 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE TWEOG..HANGUL SYLLABLE TWEOH\n                          if (0xd249 <= code && code <= 0xd263) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0xd29d) {\n                    if (code < 0xd280) {\n                      if (code < 0xd265) {\n                        // Lo       HANGUL SYLLABLE TWE\n                        if (0xd264 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE TWEG..HANGUL SYLLABLE TWEH\n                        if (0xd265 <= code && code <= 0xd27f) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xd281) {\n                        // Lo       HANGUL SYLLABLE TWI\n                        if (0xd280 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xd29c) {\n                          // Lo  [27] HANGUL SYLLABLE TWIG..HANGUL SYLLABLE TWIH\n                          if (0xd281 <= code && code <= 0xd29b) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE TYU\n                          if (0xd29c === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xd2d4) {\n                      if (code < 0xd2b8) {\n                        // Lo  [27] HANGUL SYLLABLE TYUG..HANGUL SYLLABLE TYUH\n                        if (0xd29d <= code && code <= 0xd2b7) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xd2b9) {\n                          // Lo       HANGUL SYLLABLE TEU\n                          if (0xd2b8 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE TEUG..HANGUL SYLLABLE TEUH\n                          if (0xd2b9 <= code && code <= 0xd2d3) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xd2d5) {\n                        // Lo       HANGUL SYLLABLE TYI\n                        if (0xd2d4 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xd2f0) {\n                          // Lo  [27] HANGUL SYLLABLE TYIG..HANGUL SYLLABLE TYIH\n                          if (0xd2d5 <= code && code <= 0xd2ef) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE TI\n                          if (0xd2f0 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              } else {\n                if (code < 0xd37d) {\n                  if (code < 0xd344) {\n                    if (code < 0xd30d) {\n                      if (code < 0xd30c) {\n                        // Lo  [27] HANGUL SYLLABLE TIG..HANGUL SYLLABLE TIH\n                        if (0xd2f1 <= code && code <= 0xd30b) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE PA\n                        if (0xd30c === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xd328) {\n                        // Lo  [27] HANGUL SYLLABLE PAG..HANGUL SYLLABLE PAH\n                        if (0xd30d <= code && code <= 0xd327) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xd329) {\n                          // Lo       HANGUL SYLLABLE PAE\n                          if (0xd328 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE PAEG..HANGUL SYLLABLE PAEH\n                          if (0xd329 <= code && code <= 0xd343) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xd360) {\n                      if (code < 0xd345) {\n                        // Lo       HANGUL SYLLABLE PYA\n                        if (0xd344 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE PYAG..HANGUL SYLLABLE PYAH\n                        if (0xd345 <= code && code <= 0xd35f) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xd361) {\n                        // Lo       HANGUL SYLLABLE PYAE\n                        if (0xd360 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xd37c) {\n                          // Lo  [27] HANGUL SYLLABLE PYAEG..HANGUL SYLLABLE PYAEH\n                          if (0xd361 <= code && code <= 0xd37b) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE PEO\n                          if (0xd37c === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0xd3d0) {\n                    if (code < 0xd399) {\n                      if (code < 0xd398) {\n                        // Lo  [27] HANGUL SYLLABLE PEOG..HANGUL SYLLABLE PEOH\n                        if (0xd37d <= code && code <= 0xd397) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE PE\n                        if (0xd398 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xd3b4) {\n                        // Lo  [27] HANGUL SYLLABLE PEG..HANGUL SYLLABLE PEH\n                        if (0xd399 <= code && code <= 0xd3b3) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xd3b5) {\n                          // Lo       HANGUL SYLLABLE PYEO\n                          if (0xd3b4 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE PYEOG..HANGUL SYLLABLE PYEOH\n                          if (0xd3b5 <= code && code <= 0xd3cf) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xd3ed) {\n                      if (code < 0xd3d1) {\n                        // Lo       HANGUL SYLLABLE PYE\n                        if (0xd3d0 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xd3ec) {\n                          // Lo  [27] HANGUL SYLLABLE PYEG..HANGUL SYLLABLE PYEH\n                          if (0xd3d1 <= code && code <= 0xd3eb) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE PO\n                          if (0xd3ec === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xd408) {\n                        // Lo  [27] HANGUL SYLLABLE POG..HANGUL SYLLABLE POH\n                        if (0xd3ed <= code && code <= 0xd407) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xd409) {\n                          // Lo       HANGUL SYLLABLE PWA\n                          if (0xd408 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE PWAG..HANGUL SYLLABLE PWAH\n                          if (0xd409 <= code && code <= 0xd423) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            } else {\n              if (code < 0xd53d) {\n                if (code < 0xd4b0) {\n                  if (code < 0xd45d) {\n                    if (code < 0xd440) {\n                      if (code < 0xd425) {\n                        // Lo       HANGUL SYLLABLE PWAE\n                        if (0xd424 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE PWAEG..HANGUL SYLLABLE PWAEH\n                        if (0xd425 <= code && code <= 0xd43f) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xd441) {\n                        // Lo       HANGUL SYLLABLE POE\n                        if (0xd440 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xd45c) {\n                          // Lo  [27] HANGUL SYLLABLE POEG..HANGUL SYLLABLE POEH\n                          if (0xd441 <= code && code <= 0xd45b) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE PYO\n                          if (0xd45c === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xd479) {\n                      if (code < 0xd478) {\n                        // Lo  [27] HANGUL SYLLABLE PYOG..HANGUL SYLLABLE PYOH\n                        if (0xd45d <= code && code <= 0xd477) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE PU\n                        if (0xd478 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xd494) {\n                        // Lo  [27] HANGUL SYLLABLE PUG..HANGUL SYLLABLE PUH\n                        if (0xd479 <= code && code <= 0xd493) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xd495) {\n                          // Lo       HANGUL SYLLABLE PWEO\n                          if (0xd494 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE PWEOG..HANGUL SYLLABLE PWEOH\n                          if (0xd495 <= code && code <= 0xd4af) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0xd4e9) {\n                    if (code < 0xd4cc) {\n                      if (code < 0xd4b1) {\n                        // Lo       HANGUL SYLLABLE PWE\n                        if (0xd4b0 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE PWEG..HANGUL SYLLABLE PWEH\n                        if (0xd4b1 <= code && code <= 0xd4cb) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xd4cd) {\n                        // Lo       HANGUL SYLLABLE PWI\n                        if (0xd4cc === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xd4e8) {\n                          // Lo  [27] HANGUL SYLLABLE PWIG..HANGUL SYLLABLE PWIH\n                          if (0xd4cd <= code && code <= 0xd4e7) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE PYU\n                          if (0xd4e8 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xd520) {\n                      if (code < 0xd504) {\n                        // Lo  [27] HANGUL SYLLABLE PYUG..HANGUL SYLLABLE PYUH\n                        if (0xd4e9 <= code && code <= 0xd503) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xd505) {\n                          // Lo       HANGUL SYLLABLE PEU\n                          if (0xd504 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE PEUG..HANGUL SYLLABLE PEUH\n                          if (0xd505 <= code && code <= 0xd51f) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xd521) {\n                        // Lo       HANGUL SYLLABLE PYI\n                        if (0xd520 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xd53c) {\n                          // Lo  [27] HANGUL SYLLABLE PYIG..HANGUL SYLLABLE PYIH\n                          if (0xd521 <= code && code <= 0xd53b) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE PI\n                          if (0xd53c === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              } else {\n                if (code < 0xd5e4) {\n                  if (code < 0xd590) {\n                    if (code < 0xd559) {\n                      if (code < 0xd558) {\n                        // Lo  [27] HANGUL SYLLABLE PIG..HANGUL SYLLABLE PIH\n                        if (0xd53d <= code && code <= 0xd557) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE HA\n                        if (0xd558 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xd574) {\n                        // Lo  [27] HANGUL SYLLABLE HAG..HANGUL SYLLABLE HAH\n                        if (0xd559 <= code && code <= 0xd573) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xd575) {\n                          // Lo       HANGUL SYLLABLE HAE\n                          if (0xd574 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE HAEG..HANGUL SYLLABLE HAEH\n                          if (0xd575 <= code && code <= 0xd58f) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xd5ad) {\n                      if (code < 0xd591) {\n                        // Lo       HANGUL SYLLABLE HYA\n                        if (0xd590 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xd5ac) {\n                          // Lo  [27] HANGUL SYLLABLE HYAG..HANGUL SYLLABLE HYAH\n                          if (0xd591 <= code && code <= 0xd5ab) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE HYAE\n                          if (0xd5ac === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xd5c8) {\n                        // Lo  [27] HANGUL SYLLABLE HYAEG..HANGUL SYLLABLE HYAEH\n                        if (0xd5ad <= code && code <= 0xd5c7) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xd5c9) {\n                          // Lo       HANGUL SYLLABLE HEO\n                          if (0xd5c8 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE HEOG..HANGUL SYLLABLE HEOH\n                          if (0xd5c9 <= code && code <= 0xd5e3) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0xd61d) {\n                    if (code < 0xd600) {\n                      if (code < 0xd5e5) {\n                        // Lo       HANGUL SYLLABLE HE\n                        if (0xd5e4 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE HEG..HANGUL SYLLABLE HEH\n                        if (0xd5e5 <= code && code <= 0xd5ff) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xd601) {\n                        // Lo       HANGUL SYLLABLE HYEO\n                        if (0xd600 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xd61c) {\n                          // Lo  [27] HANGUL SYLLABLE HYEOG..HANGUL SYLLABLE HYEOH\n                          if (0xd601 <= code && code <= 0xd61b) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE HYE\n                          if (0xd61c === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xd654) {\n                      if (code < 0xd638) {\n                        // Lo  [27] HANGUL SYLLABLE HYEG..HANGUL SYLLABLE HYEH\n                        if (0xd61d <= code && code <= 0xd637) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xd639) {\n                          // Lo       HANGUL SYLLABLE HO\n                          if (0xd638 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE HOG..HANGUL SYLLABLE HOH\n                          if (0xd639 <= code && code <= 0xd653) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xd655) {\n                        // Lo       HANGUL SYLLABLE HWA\n                        if (0xd654 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xd670) {\n                          // Lo  [27] HANGUL SYLLABLE HWAG..HANGUL SYLLABLE HWAH\n                          if (0xd655 <= code && code <= 0xd66f) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE HWAE\n                          if (0xd670 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          } else {\n            if (code < 0x11000) {\n              if (code < 0xd7b0) {\n                if (code < 0xd6fd) {\n                  if (code < 0xd6c4) {\n                    if (code < 0xd68d) {\n                      if (code < 0xd68c) {\n                        // Lo  [27] HANGUL SYLLABLE HWAEG..HANGUL SYLLABLE HWAEH\n                        if (0xd671 <= code && code <= 0xd68b) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE HOE\n                        if (0xd68c === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xd6a8) {\n                        // Lo  [27] HANGUL SYLLABLE HOEG..HANGUL SYLLABLE HOEH\n                        if (0xd68d <= code && code <= 0xd6a7) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xd6a9) {\n                          // Lo       HANGUL SYLLABLE HYO\n                          if (0xd6a8 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE HYOG..HANGUL SYLLABLE HYOH\n                          if (0xd6a9 <= code && code <= 0xd6c3) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xd6e0) {\n                      if (code < 0xd6c5) {\n                        // Lo       HANGUL SYLLABLE HU\n                        if (0xd6c4 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        // Lo  [27] HANGUL SYLLABLE HUG..HANGUL SYLLABLE HUH\n                        if (0xd6c5 <= code && code <= 0xd6df) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      }\n                    } else {\n                      if (code < 0xd6e1) {\n                        // Lo       HANGUL SYLLABLE HWEO\n                        if (0xd6e0 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xd6fc) {\n                          // Lo  [27] HANGUL SYLLABLE HWEOG..HANGUL SYLLABLE HWEOH\n                          if (0xd6e1 <= code && code <= 0xd6fb) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE HWE\n                          if (0xd6fc === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0xd750) {\n                    if (code < 0xd719) {\n                      if (code < 0xd718) {\n                        // Lo  [27] HANGUL SYLLABLE HWEG..HANGUL SYLLABLE HWEH\n                        if (0xd6fd <= code && code <= 0xd717) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        // Lo       HANGUL SYLLABLE HWI\n                        if (0xd718 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      }\n                    } else {\n                      if (code < 0xd734) {\n                        // Lo  [27] HANGUL SYLLABLE HWIG..HANGUL SYLLABLE HWIH\n                        if (0xd719 <= code && code <= 0xd733) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xd735) {\n                          // Lo       HANGUL SYLLABLE HYU\n                          if (0xd734 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE HYUG..HANGUL SYLLABLE HYUH\n                          if (0xd735 <= code && code <= 0xd74f) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xd76d) {\n                      if (code < 0xd751) {\n                        // Lo       HANGUL SYLLABLE HEU\n                        if (0xd750 === code) {\n                          return boundaries_1.CLUSTER_BREAK.LV;\n                        }\n                      } else {\n                        if (code < 0xd76c) {\n                          // Lo  [27] HANGUL SYLLABLE HEUG..HANGUL SYLLABLE HEUH\n                          if (0xd751 <= code && code <= 0xd76b) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        } else {\n                          // Lo       HANGUL SYLLABLE HYI\n                          if (0xd76c === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xd788) {\n                        // Lo  [27] HANGUL SYLLABLE HYIG..HANGUL SYLLABLE HYIH\n                        if (0xd76d <= code && code <= 0xd787) {\n                          return boundaries_1.CLUSTER_BREAK.LVT;\n                        }\n                      } else {\n                        if (code < 0xd789) {\n                          // Lo       HANGUL SYLLABLE HI\n                          if (0xd788 === code) {\n                            return boundaries_1.CLUSTER_BREAK.LV;\n                          }\n                        } else {\n                          // Lo  [27] HANGUL SYLLABLE HIG..HANGUL SYLLABLE HIH\n                          if (0xd789 <= code && code <= 0xd7a3) {\n                            return boundaries_1.CLUSTER_BREAK.LVT;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              } else {\n                if (code < 0x10a01) {\n                  if (code < 0xfeff) {\n                    if (code < 0xfb1e) {\n                      if (code < 0xd7cb) {\n                        // Lo  [23] HANGUL JUNGSEONG O-YEO..HANGUL JUNGSEONG ARAEA-E\n                        if (0xd7b0 <= code && code <= 0xd7c6) {\n                          return boundaries_1.CLUSTER_BREAK.V;\n                        }\n                      } else {\n                        // Lo  [49] HANGUL JONGSEONG NIEUN-RIEUL..HANGUL JONGSEONG PHIEUPH-THIEUTH\n                        if (0xd7cb <= code && code <= 0xd7fb) {\n                          return boundaries_1.CLUSTER_BREAK.T;\n                        }\n                      }\n                    } else {\n                      if (code < 0xfe00) {\n                        // Mn       HEBREW POINT JUDEO-SPANISH VARIKA\n                        if (0xfb1e === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0xfe20) {\n                          // Mn  [16] VARIATION SELECTOR-1..VARIATION SELECTOR-16\n                          if (0xfe00 <= code && code <= 0xfe0f) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mn  [16] COMBINING LIGATURE LEFT HALF..COMBINING CYRILLIC TITLO RIGHT HALF\n                          if (0xfe20 <= code && code <= 0xfe2f) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0x101fd) {\n                      if (code < 0xff9e) {\n                        // Cf       ZERO WIDTH NO-BREAK SPACE\n                        if (0xfeff === code) {\n                          return boundaries_1.CLUSTER_BREAK.CONTROL;\n                        }\n                      } else {\n                        if (code < 0xfff0) {\n                          // Lm   [2] HALFWIDTH KATAKANA VOICED SOUND MARK..HALFWIDTH KATAKANA SEMI-VOICED SOUND MARK\n                          if (0xff9e <= code && code <= 0xff9f) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Cn   [9] <reserved-FFF0>..<reserved-FFF8>\n                          // Cf   [3] INTERLINEAR ANNOTATION ANCHOR..INTERLINEAR ANNOTATION TERMINATOR\n                          if (0xfff0 <= code && code <= 0xfffb) {\n                            return boundaries_1.CLUSTER_BREAK.CONTROL;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0x102e0) {\n                        // Mn       PHAISTOS DISC SIGN COMBINING OBLIQUE STROKE\n                        if (0x101fd === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x10376) {\n                          // Mn       COPTIC EPACT THOUSANDS MARK\n                          if (0x102e0 === code) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mn   [5] COMBINING OLD PERMIC LETTER AN..COMBINING OLD PERMIC LETTER SII\n                          if (0x10376 <= code && code <= 0x1037a) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0x10ae5) {\n                    if (code < 0x10a0c) {\n                      if (code < 0x10a05) {\n                        // Mn   [3] KHAROSHTHI VOWEL SIGN I..KHAROSHTHI VOWEL SIGN VOCALIC R\n                        if (0x10a01 <= code && code <= 0x10a03) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        // Mn   [2] KHAROSHTHI VOWEL SIGN E..KHAROSHTHI VOWEL SIGN O\n                        if (0x10a05 <= code && code <= 0x10a06) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    } else {\n                      if (code < 0x10a38) {\n                        // Mn   [4] KHAROSHTHI VOWEL LENGTH MARK..KHAROSHTHI SIGN VISARGA\n                        if (0x10a0c <= code && code <= 0x10a0f) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x10a3f) {\n                          // Mn   [3] KHAROSHTHI SIGN BAR ABOVE..KHAROSHTHI SIGN DOT BELOW\n                          if (0x10a38 <= code && code <= 0x10a3a) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mn       KHAROSHTHI VIRAMA\n                          if (0x10a3f === code) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0x10efd) {\n                      if (code < 0x10d24) {\n                        // Mn   [2] MANICHAEAN ABBREVIATION MARK ABOVE..MANICHAEAN ABBREVIATION MARK BELOW\n                        if (0x10ae5 <= code && code <= 0x10ae6) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x10eab) {\n                          // Mn   [4] HANIFI ROHINGYA SIGN HARBAHAY..HANIFI ROHINGYA SIGN TASSI\n                          if (0x10d24 <= code && code <= 0x10d27) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mn   [2] YEZIDI COMBINING HAMZA MARK..YEZIDI COMBINING MADDA MARK\n                          if (0x10eab <= code && code <= 0x10eac) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0x10f46) {\n                        // Mn   [3] ARABIC SMALL LOW WORD SAKTA..ARABIC SMALL LOW WORD MADDA\n                        if (0x10efd <= code && code <= 0x10eff) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x10f82) {\n                          // Mn  [11] SOGDIAN COMBINING DOT BELOW..SOGDIAN COMBINING STROKE BELOW\n                          if (0x10f46 <= code && code <= 0x10f50) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mn   [4] OLD UYGHUR COMBINING DOT ABOVE..OLD UYGHUR COMBINING TWO DOTS BELOW\n                          if (0x10f82 <= code && code <= 0x10f85) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            } else {\n              if (code < 0x11180) {\n                if (code < 0x110b7) {\n                  if (code < 0x11073) {\n                    if (code < 0x11002) {\n                      // Mc       BRAHMI SIGN CANDRABINDU\n                      if (0x11000 === code) {\n                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                      }\n                      // Mn       BRAHMI SIGN ANUSVARA\n                      if (0x11001 === code) {\n                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                      }\n                    } else {\n                      if (code < 0x11038) {\n                        // Mc       BRAHMI SIGN VISARGA\n                        if (0x11002 === code) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        if (code < 0x11070) {\n                          // Mn  [15] BRAHMI VOWEL SIGN AA..BRAHMI VIRAMA\n                          if (0x11038 <= code && code <= 0x11046) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mn       BRAHMI SIGN OLD TAMIL VIRAMA\n                          if (0x11070 === code) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0x11082) {\n                      if (code < 0x1107f) {\n                        // Mn   [2] BRAHMI VOWEL SIGN OLD TAMIL SHORT E..BRAHMI VOWEL SIGN OLD TAMIL SHORT O\n                        if (0x11073 <= code && code <= 0x11074) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        // Mn   [3] BRAHMI NUMBER JOINER..KAITHI SIGN ANUSVARA\n                        if (0x1107f <= code && code <= 0x11081) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    } else {\n                      if (code < 0x110b0) {\n                        // Mc       KAITHI SIGN VISARGA\n                        if (0x11082 === code) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        if (code < 0x110b3) {\n                          // Mc   [3] KAITHI VOWEL SIGN AA..KAITHI VOWEL SIGN II\n                          if (0x110b0 <= code && code <= 0x110b2) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        } else {\n                          // Mn   [4] KAITHI VOWEL SIGN U..KAITHI VOWEL SIGN AI\n                          if (0x110b3 <= code && code <= 0x110b6) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0x11100) {\n                    if (code < 0x110bd) {\n                      if (code < 0x110b9) {\n                        // Mc   [2] KAITHI VOWEL SIGN O..KAITHI VOWEL SIGN AU\n                        if (0x110b7 <= code && code <= 0x110b8) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        // Mn   [2] KAITHI SIGN VIRAMA..KAITHI SIGN NUKTA\n                        if (0x110b9 <= code && code <= 0x110ba) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    } else {\n                      if (code < 0x110c2) {\n                        // Cf       KAITHI NUMBER SIGN\n                        if (0x110bd === code) {\n                          return boundaries_1.CLUSTER_BREAK.PREPEND;\n                        }\n                      } else {\n                        // Mn       KAITHI VOWEL SIGN VOCALIC R\n                        if (0x110c2 === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                        // Cf       KAITHI NUMBER SIGN ABOVE\n                        if (0x110cd === code) {\n                          return boundaries_1.CLUSTER_BREAK.PREPEND;\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0x1112d) {\n                      if (code < 0x11127) {\n                        // Mn   [3] CHAKMA SIGN CANDRABINDU..CHAKMA SIGN VISARGA\n                        if (0x11100 <= code && code <= 0x11102) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x1112c) {\n                          // Mn   [5] CHAKMA VOWEL SIGN A..CHAKMA VOWEL SIGN UU\n                          if (0x11127 <= code && code <= 0x1112b) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mc       CHAKMA VOWEL SIGN E\n                          if (0x1112c === code) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0x11145) {\n                        // Mn   [8] CHAKMA VOWEL SIGN AI..CHAKMA MAAYYAA\n                        if (0x1112d <= code && code <= 0x11134) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x11173) {\n                          // Mc   [2] CHAKMA VOWEL SIGN AA..CHAKMA VOWEL SIGN EI\n                          if (0x11145 <= code && code <= 0x11146) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        } else {\n                          // Mn       MAHAJANI SIGN NUKTA\n                          if (0x11173 === code) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              } else {\n                if (code < 0x11232) {\n                  if (code < 0x111c2) {\n                    if (code < 0x111b3) {\n                      if (code < 0x11182) {\n                        // Mn   [2] SHARADA SIGN CANDRABINDU..SHARADA SIGN ANUSVARA\n                        if (0x11180 <= code && code <= 0x11181) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        // Mc       SHARADA SIGN VISARGA\n                        if (0x11182 === code) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      }\n                    } else {\n                      if (code < 0x111b6) {\n                        // Mc   [3] SHARADA VOWEL SIGN AA..SHARADA VOWEL SIGN II\n                        if (0x111b3 <= code && code <= 0x111b5) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        if (code < 0x111bf) {\n                          // Mn   [9] SHARADA VOWEL SIGN U..SHARADA VOWEL SIGN O\n                          if (0x111b6 <= code && code <= 0x111be) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mc   [2] SHARADA VOWEL SIGN AU..SHARADA SIGN VIRAMA\n                          if (0x111bf <= code && code <= 0x111c0) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0x111cf) {\n                      if (code < 0x111c9) {\n                        // Lo   [2] SHARADA SIGN JIHVAMULIYA..SHARADA SIGN UPADHMANIYA\n                        if (0x111c2 <= code && code <= 0x111c3) {\n                          return boundaries_1.CLUSTER_BREAK.PREPEND;\n                        }\n                      } else {\n                        if (code < 0x111ce) {\n                          // Mn   [4] SHARADA SANDHI MARK..SHARADA EXTRA SHORT VOWEL MARK\n                          if (0x111c9 <= code && code <= 0x111cc) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mc       SHARADA VOWEL SIGN PRISHTHAMATRA E\n                          if (0x111ce === code) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0x1122c) {\n                        // Mn       SHARADA SIGN INVERTED CANDRABINDU\n                        if (0x111cf === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x1122f) {\n                          // Mc   [3] KHOJKI VOWEL SIGN AA..KHOJKI VOWEL SIGN II\n                          if (0x1122c <= code && code <= 0x1122e) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        } else {\n                          // Mn   [3] KHOJKI VOWEL SIGN U..KHOJKI VOWEL SIGN AI\n                          if (0x1122f <= code && code <= 0x11231) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0x11241) {\n                    if (code < 0x11235) {\n                      if (code < 0x11234) {\n                        // Mc   [2] KHOJKI VOWEL SIGN O..KHOJKI VOWEL SIGN AU\n                        if (0x11232 <= code && code <= 0x11233) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        // Mn       KHOJKI SIGN ANUSVARA\n                        if (0x11234 === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    } else {\n                      if (code < 0x11236) {\n                        // Mc       KHOJKI SIGN VIRAMA\n                        if (0x11235 === code) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        if (code < 0x1123e) {\n                          // Mn   [2] KHOJKI SIGN NUKTA..KHOJKI SIGN SHADDA\n                          if (0x11236 <= code && code <= 0x11237) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mn       KHOJKI SIGN SUKUN\n                          if (0x1123e === code) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0x112e3) {\n                      if (code < 0x112df) {\n                        // Mn       KHOJKI VOWEL SIGN VOCALIC R\n                        if (0x11241 === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x112e0) {\n                          // Mn       KHUDAWADI SIGN ANUSVARA\n                          if (0x112df === code) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mc   [3] KHUDAWADI VOWEL SIGN AA..KHUDAWADI VOWEL SIGN II\n                          if (0x112e0 <= code && code <= 0x112e2) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0x11300) {\n                        // Mn   [8] KHUDAWADI VOWEL SIGN U..KHUDAWADI SIGN VIRAMA\n                        if (0x112e3 <= code && code <= 0x112ea) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x11302) {\n                          // Mn   [2] GRANTHA SIGN COMBINING ANUSVARA ABOVE..GRANTHA SIGN CANDRABINDU\n                          if (0x11300 <= code && code <= 0x11301) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mc   [2] GRANTHA SIGN ANUSVARA..GRANTHA SIGN VISARGA\n                          if (0x11302 <= code && code <= 0x11303) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        } else {\n          if (code < 0x11a97) {\n            if (code < 0x116ab) {\n              if (code < 0x114b9) {\n                if (code < 0x11370) {\n                  if (code < 0x11347) {\n                    if (code < 0x1133f) {\n                      if (code < 0x1133e) {\n                        // Mn   [2] COMBINING BINDU BELOW..GRANTHA SIGN NUKTA\n                        if (0x1133b <= code && code <= 0x1133c) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        // Mc       GRANTHA VOWEL SIGN AA\n                        if (0x1133e === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    } else {\n                      if (code < 0x11340) {\n                        // Mc       GRANTHA VOWEL SIGN I\n                        if (0x1133f === code) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        if (code < 0x11341) {\n                          // Mn       GRANTHA VOWEL SIGN II\n                          if (0x11340 === code) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mc   [4] GRANTHA VOWEL SIGN U..GRANTHA VOWEL SIGN VOCALIC RR\n                          if (0x11341 <= code && code <= 0x11344) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0x11357) {\n                      if (code < 0x1134b) {\n                        // Mc   [2] GRANTHA VOWEL SIGN EE..GRANTHA VOWEL SIGN AI\n                        if (0x11347 <= code && code <= 0x11348) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        // Mc   [3] GRANTHA VOWEL SIGN OO..GRANTHA SIGN VIRAMA\n                        if (0x1134b <= code && code <= 0x1134d) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      }\n                    } else {\n                      if (code < 0x11362) {\n                        // Mc       GRANTHA AU LENGTH MARK\n                        if (0x11357 === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x11366) {\n                          // Mc   [2] GRANTHA VOWEL SIGN VOCALIC L..GRANTHA VOWEL SIGN VOCALIC LL\n                          if (0x11362 <= code && code <= 0x11363) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        } else {\n                          // Mn   [7] COMBINING GRANTHA DIGIT ZERO..COMBINING GRANTHA DIGIT SIX\n                          if (0x11366 <= code && code <= 0x1136c) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0x11445) {\n                    if (code < 0x11438) {\n                      if (code < 0x11435) {\n                        // Mn   [5] COMBINING GRANTHA LETTER A..COMBINING GRANTHA LETTER PA\n                        if (0x11370 <= code && code <= 0x11374) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        // Mc   [3] NEWA VOWEL SIGN AA..NEWA VOWEL SIGN II\n                        if (0x11435 <= code && code <= 0x11437) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      }\n                    } else {\n                      if (code < 0x11440) {\n                        // Mn   [8] NEWA VOWEL SIGN U..NEWA VOWEL SIGN AI\n                        if (0x11438 <= code && code <= 0x1143f) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x11442) {\n                          // Mc   [2] NEWA VOWEL SIGN O..NEWA VOWEL SIGN AU\n                          if (0x11440 <= code && code <= 0x11441) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        } else {\n                          // Mn   [3] NEWA SIGN VIRAMA..NEWA SIGN ANUSVARA\n                          if (0x11442 <= code && code <= 0x11444) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0x114b0) {\n                      if (code < 0x11446) {\n                        // Mc       NEWA SIGN VISARGA\n                        if (0x11445 === code) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        // Mn       NEWA SIGN NUKTA\n                        if (0x11446 === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                        // Mn       NEWA SANDHI MARK\n                        if (0x1145e === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    } else {\n                      if (code < 0x114b1) {\n                        // Mc       TIRHUTA VOWEL SIGN AA\n                        if (0x114b0 === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x114b3) {\n                          // Mc   [2] TIRHUTA VOWEL SIGN I..TIRHUTA VOWEL SIGN II\n                          if (0x114b1 <= code && code <= 0x114b2) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        } else {\n                          // Mn   [6] TIRHUTA VOWEL SIGN U..TIRHUTA VOWEL SIGN VOCALIC LL\n                          if (0x114b3 <= code && code <= 0x114b8) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              } else {\n                if (code < 0x115b8) {\n                  if (code < 0x114bf) {\n                    if (code < 0x114bb) {\n                      // Mc       TIRHUTA VOWEL SIGN E\n                      if (0x114b9 === code) {\n                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                      }\n                      // Mn       TIRHUTA VOWEL SIGN SHORT E\n                      if (0x114ba === code) {\n                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                      }\n                    } else {\n                      if (code < 0x114bd) {\n                        // Mc   [2] TIRHUTA VOWEL SIGN AI..TIRHUTA VOWEL SIGN O\n                        if (0x114bb <= code && code <= 0x114bc) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        // Mc       TIRHUTA VOWEL SIGN SHORT O\n                        if (0x114bd === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                        // Mc       TIRHUTA VOWEL SIGN AU\n                        if (0x114be === code) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0x115af) {\n                      if (code < 0x114c1) {\n                        // Mn   [2] TIRHUTA SIGN CANDRABINDU..TIRHUTA SIGN ANUSVARA\n                        if (0x114bf <= code && code <= 0x114c0) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x114c2) {\n                          // Mc       TIRHUTA SIGN VISARGA\n                          if (0x114c1 === code) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        } else {\n                          // Mn   [2] TIRHUTA SIGN VIRAMA..TIRHUTA SIGN NUKTA\n                          if (0x114c2 <= code && code <= 0x114c3) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0x115b0) {\n                        // Mc       SIDDHAM VOWEL SIGN AA\n                        if (0x115af === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x115b2) {\n                          // Mc   [2] SIDDHAM VOWEL SIGN I..SIDDHAM VOWEL SIGN II\n                          if (0x115b0 <= code && code <= 0x115b1) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        } else {\n                          // Mn   [4] SIDDHAM VOWEL SIGN U..SIDDHAM VOWEL SIGN VOCALIC RR\n                          if (0x115b2 <= code && code <= 0x115b5) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0x11630) {\n                    if (code < 0x115be) {\n                      if (code < 0x115bc) {\n                        // Mc   [4] SIDDHAM VOWEL SIGN E..SIDDHAM VOWEL SIGN AU\n                        if (0x115b8 <= code && code <= 0x115bb) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        // Mn   [2] SIDDHAM SIGN CANDRABINDU..SIDDHAM SIGN ANUSVARA\n                        if (0x115bc <= code && code <= 0x115bd) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    } else {\n                      if (code < 0x115bf) {\n                        // Mc       SIDDHAM SIGN VISARGA\n                        if (0x115be === code) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        if (code < 0x115dc) {\n                          // Mn   [2] SIDDHAM SIGN VIRAMA..SIDDHAM SIGN NUKTA\n                          if (0x115bf <= code && code <= 0x115c0) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mn   [2] SIDDHAM VOWEL SIGN ALTERNATE U..SIDDHAM VOWEL SIGN ALTERNATE UU\n                          if (0x115dc <= code && code <= 0x115dd) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0x1163d) {\n                      if (code < 0x11633) {\n                        // Mc   [3] MODI VOWEL SIGN AA..MODI VOWEL SIGN II\n                        if (0x11630 <= code && code <= 0x11632) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        if (code < 0x1163b) {\n                          // Mn   [8] MODI VOWEL SIGN U..MODI VOWEL SIGN AI\n                          if (0x11633 <= code && code <= 0x1163a) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mc   [2] MODI VOWEL SIGN O..MODI VOWEL SIGN AU\n                          if (0x1163b <= code && code <= 0x1163c) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0x1163e) {\n                        // Mn       MODI SIGN ANUSVARA\n                        if (0x1163d === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x1163f) {\n                          // Mc       MODI SIGN VISARGA\n                          if (0x1163e === code) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        } else {\n                          // Mn   [2] MODI SIGN VIRAMA..MODI SIGN ARDHACANDRA\n                          if (0x1163f <= code && code <= 0x11640) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            } else {\n              if (code < 0x1193f) {\n                if (code < 0x11727) {\n                  if (code < 0x116b6) {\n                    if (code < 0x116ad) {\n                      // Mn       TAKRI SIGN ANUSVARA\n                      if (0x116ab === code) {\n                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                      }\n                      // Mc       TAKRI SIGN VISARGA\n                      if (0x116ac === code) {\n                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                      }\n                    } else {\n                      if (code < 0x116ae) {\n                        // Mn       TAKRI VOWEL SIGN AA\n                        if (0x116ad === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x116b0) {\n                          // Mc   [2] TAKRI VOWEL SIGN I..TAKRI VOWEL SIGN II\n                          if (0x116ae <= code && code <= 0x116af) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        } else {\n                          // Mn   [6] TAKRI VOWEL SIGN U..TAKRI VOWEL SIGN AU\n                          if (0x116b0 <= code && code <= 0x116b5) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0x1171d) {\n                      // Mc       TAKRI SIGN VIRAMA\n                      if (0x116b6 === code) {\n                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                      }\n                      // Mn       TAKRI SIGN NUKTA\n                      if (0x116b7 === code) {\n                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                      }\n                    } else {\n                      if (code < 0x11722) {\n                        // Mn   [3] AHOM CONSONANT SIGN MEDIAL LA..AHOM CONSONANT SIGN MEDIAL LIGATING RA\n                        if (0x1171d <= code && code <= 0x1171f) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x11726) {\n                          // Mn   [4] AHOM VOWEL SIGN I..AHOM VOWEL SIGN UU\n                          if (0x11722 <= code && code <= 0x11725) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mc       AHOM VOWEL SIGN E\n                          if (0x11726 === code) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0x11930) {\n                    if (code < 0x1182f) {\n                      if (code < 0x1182c) {\n                        // Mn   [5] AHOM VOWEL SIGN AW..AHOM SIGN KILLER\n                        if (0x11727 <= code && code <= 0x1172b) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        // Mc   [3] DOGRA VOWEL SIGN AA..DOGRA VOWEL SIGN II\n                        if (0x1182c <= code && code <= 0x1182e) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      }\n                    } else {\n                      if (code < 0x11838) {\n                        // Mn   [9] DOGRA VOWEL SIGN U..DOGRA SIGN ANUSVARA\n                        if (0x1182f <= code && code <= 0x11837) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x11839) {\n                          // Mc       DOGRA SIGN VISARGA\n                          if (0x11838 === code) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        } else {\n                          // Mn   [2] DOGRA SIGN VIRAMA..DOGRA SIGN NUKTA\n                          if (0x11839 <= code && code <= 0x1183a) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0x1193b) {\n                      if (code < 0x11931) {\n                        // Mc       DIVES AKURU VOWEL SIGN AA\n                        if (0x11930 === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x11937) {\n                          // Mc   [5] DIVES AKURU VOWEL SIGN I..DIVES AKURU VOWEL SIGN E\n                          if (0x11931 <= code && code <= 0x11935) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        } else {\n                          // Mc   [2] DIVES AKURU VOWEL SIGN AI..DIVES AKURU VOWEL SIGN O\n                          if (0x11937 <= code && code <= 0x11938) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0x1193d) {\n                        // Mn   [2] DIVES AKURU SIGN ANUSVARA..DIVES AKURU SIGN CANDRABINDU\n                        if (0x1193b <= code && code <= 0x1193c) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        // Mc       DIVES AKURU SIGN HALANTA\n                        if (0x1193d === code) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                        // Mn       DIVES AKURU VIRAMA\n                        if (0x1193e === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    }\n                  }\n                }\n              } else {\n                if (code < 0x11a01) {\n                  if (code < 0x119d1) {\n                    if (code < 0x11941) {\n                      // Lo       DIVES AKURU PREFIXED NASAL SIGN\n                      if (0x1193f === code) {\n                        return boundaries_1.CLUSTER_BREAK.PREPEND;\n                      }\n                      // Mc       DIVES AKURU MEDIAL YA\n                      if (0x11940 === code) {\n                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                      }\n                    } else {\n                      if (code < 0x11942) {\n                        // Lo       DIVES AKURU INITIAL RA\n                        if (0x11941 === code) {\n                          return boundaries_1.CLUSTER_BREAK.PREPEND;\n                        }\n                      } else {\n                        // Mc       DIVES AKURU MEDIAL RA\n                        if (0x11942 === code) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                        // Mn       DIVES AKURU SIGN NUKTA\n                        if (0x11943 === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0x119dc) {\n                      if (code < 0x119d4) {\n                        // Mc   [3] NANDINAGARI VOWEL SIGN AA..NANDINAGARI VOWEL SIGN II\n                        if (0x119d1 <= code && code <= 0x119d3) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        if (code < 0x119da) {\n                          // Mn   [4] NANDINAGARI VOWEL SIGN U..NANDINAGARI VOWEL SIGN VOCALIC RR\n                          if (0x119d4 <= code && code <= 0x119d7) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mn   [2] NANDINAGARI VOWEL SIGN E..NANDINAGARI VOWEL SIGN AI\n                          if (0x119da <= code && code <= 0x119db) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0x119e0) {\n                        // Mc   [4] NANDINAGARI VOWEL SIGN O..NANDINAGARI SIGN VISARGA\n                        if (0x119dc <= code && code <= 0x119df) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        // Mn       NANDINAGARI SIGN VIRAMA\n                        if (0x119e0 === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                        // Mc       NANDINAGARI VOWEL SIGN PRISHTHAMATRA E\n                        if (0x119e4 === code) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0x11a47) {\n                    if (code < 0x11a39) {\n                      if (code < 0x11a33) {\n                        // Mn  [10] ZANABAZAR SQUARE VOWEL SIGN I..ZANABAZAR SQUARE VOWEL LENGTH MARK\n                        if (0x11a01 <= code && code <= 0x11a0a) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        // Mn   [6] ZANABAZAR SQUARE FINAL CONSONANT MARK..ZANABAZAR SQUARE SIGN ANUSVARA\n                        if (0x11a33 <= code && code <= 0x11a38) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    } else {\n                      if (code < 0x11a3a) {\n                        // Mc       ZANABAZAR SQUARE SIGN VISARGA\n                        if (0x11a39 === code) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        if (code < 0x11a3b) {\n                          // Lo       ZANABAZAR SQUARE CLUSTER-INITIAL LETTER RA\n                          if (0x11a3a === code) {\n                            return boundaries_1.CLUSTER_BREAK.PREPEND;\n                          }\n                        } else {\n                          // Mn   [4] ZANABAZAR SQUARE CLUSTER-FINAL LETTER YA..ZANABAZAR SQUARE CLUSTER-FINAL LETTER VA\n                          if (0x11a3b <= code && code <= 0x11a3e) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0x11a59) {\n                      if (code < 0x11a51) {\n                        // Mn       ZANABAZAR SQUARE SUBJOINER\n                        if (0x11a47 === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x11a57) {\n                          // Mn   [6] SOYOMBO VOWEL SIGN I..SOYOMBO VOWEL SIGN OE\n                          if (0x11a51 <= code && code <= 0x11a56) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mc   [2] SOYOMBO VOWEL SIGN AI..SOYOMBO VOWEL SIGN AU\n                          if (0x11a57 <= code && code <= 0x11a58) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0x11a84) {\n                        // Mn   [3] SOYOMBO VOWEL SIGN VOCALIC R..SOYOMBO VOWEL LENGTH MARK\n                        if (0x11a59 <= code && code <= 0x11a5b) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x11a8a) {\n                          // Lo   [6] SOYOMBO SIGN JIHVAMULIYA..SOYOMBO CLUSTER-INITIAL LETTER SA\n                          if (0x11a84 <= code && code <= 0x11a89) {\n                            return boundaries_1.CLUSTER_BREAK.PREPEND;\n                          }\n                        } else {\n                          // Mn  [13] SOYOMBO FINAL CONSONANT SIGN G..SOYOMBO SIGN ANUSVARA\n                          if (0x11a8a <= code && code <= 0x11a96) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          } else {\n            if (code < 0x16f51) {\n              if (code < 0x11d90) {\n                if (code < 0x11cb1) {\n                  if (code < 0x11c3e) {\n                    if (code < 0x11c2f) {\n                      if (code < 0x11a98) {\n                        // Mc       SOYOMBO SIGN VISARGA\n                        if (0x11a97 === code) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        // Mn   [2] SOYOMBO GEMINATION MARK..SOYOMBO SUBJOINER\n                        if (0x11a98 <= code && code <= 0x11a99) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    } else {\n                      if (code < 0x11c30) {\n                        // Mc       BHAIKSUKI VOWEL SIGN AA\n                        if (0x11c2f === code) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        if (code < 0x11c38) {\n                          // Mn   [7] BHAIKSUKI VOWEL SIGN I..BHAIKSUKI VOWEL SIGN VOCALIC L\n                          if (0x11c30 <= code && code <= 0x11c36) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mn   [6] BHAIKSUKI VOWEL SIGN E..BHAIKSUKI SIGN ANUSVARA\n                          if (0x11c38 <= code && code <= 0x11c3d) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0x11c92) {\n                      // Mc       BHAIKSUKI SIGN VISARGA\n                      if (0x11c3e === code) {\n                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                      }\n                      // Mn       BHAIKSUKI SIGN VIRAMA\n                      if (0x11c3f === code) {\n                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                      }\n                    } else {\n                      if (code < 0x11ca9) {\n                        // Mn  [22] MARCHEN SUBJOINED LETTER KA..MARCHEN SUBJOINED LETTER ZA\n                        if (0x11c92 <= code && code <= 0x11ca7) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x11caa) {\n                          // Mc       MARCHEN SUBJOINED LETTER YA\n                          if (0x11ca9 === code) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        } else {\n                          // Mn   [7] MARCHEN SUBJOINED LETTER RA..MARCHEN VOWEL SIGN AA\n                          if (0x11caa <= code && code <= 0x11cb0) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0x11d3a) {\n                    if (code < 0x11cb4) {\n                      if (code < 0x11cb2) {\n                        // Mc       MARCHEN VOWEL SIGN I\n                        if (0x11cb1 === code) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        // Mn   [2] MARCHEN VOWEL SIGN U..MARCHEN VOWEL SIGN E\n                        if (0x11cb2 <= code && code <= 0x11cb3) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    } else {\n                      if (code < 0x11cb5) {\n                        // Mc       MARCHEN VOWEL SIGN O\n                        if (0x11cb4 === code) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        if (code < 0x11d31) {\n                          // Mn   [2] MARCHEN SIGN ANUSVARA..MARCHEN SIGN CANDRABINDU\n                          if (0x11cb5 <= code && code <= 0x11cb6) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mn   [6] MASARAM GONDI VOWEL SIGN AA..MASARAM GONDI VOWEL SIGN VOCALIC R\n                          if (0x11d31 <= code && code <= 0x11d36) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0x11d46) {\n                      if (code < 0x11d3c) {\n                        // Mn       MASARAM GONDI VOWEL SIGN E\n                        if (0x11d3a === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x11d3f) {\n                          // Mn   [2] MASARAM GONDI VOWEL SIGN AI..MASARAM GONDI VOWEL SIGN O\n                          if (0x11d3c <= code && code <= 0x11d3d) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mn   [7] MASARAM GONDI VOWEL SIGN AU..MASARAM GONDI VIRAMA\n                          if (0x11d3f <= code && code <= 0x11d45) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0x11d47) {\n                        // Lo       MASARAM GONDI REPHA\n                        if (0x11d46 === code) {\n                          return boundaries_1.CLUSTER_BREAK.PREPEND;\n                        }\n                      } else {\n                        if (code < 0x11d8a) {\n                          // Mn       MASARAM GONDI RA-KARA\n                          if (0x11d47 === code) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mc   [5] GUNJALA GONDI VOWEL SIGN AA..GUNJALA GONDI VOWEL SIGN UU\n                          if (0x11d8a <= code && code <= 0x11d8e) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              } else {\n                if (code < 0x11f36) {\n                  if (code < 0x11ef3) {\n                    if (code < 0x11d95) {\n                      if (code < 0x11d93) {\n                        // Mn   [2] GUNJALA GONDI VOWEL SIGN EE..GUNJALA GONDI VOWEL SIGN AI\n                        if (0x11d90 <= code && code <= 0x11d91) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        // Mc   [2] GUNJALA GONDI VOWEL SIGN OO..GUNJALA GONDI VOWEL SIGN AU\n                        if (0x11d93 <= code && code <= 0x11d94) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      }\n                    } else {\n                      if (code < 0x11d96) {\n                        // Mn       GUNJALA GONDI SIGN ANUSVARA\n                        if (0x11d95 === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        // Mc       GUNJALA GONDI SIGN VISARGA\n                        if (0x11d96 === code) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                        // Mn       GUNJALA GONDI VIRAMA\n                        if (0x11d97 === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0x11f02) {\n                      if (code < 0x11ef5) {\n                        // Mn   [2] MAKASAR VOWEL SIGN I..MAKASAR VOWEL SIGN U\n                        if (0x11ef3 <= code && code <= 0x11ef4) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x11f00) {\n                          // Mc   [2] MAKASAR VOWEL SIGN E..MAKASAR VOWEL SIGN O\n                          if (0x11ef5 <= code && code <= 0x11ef6) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        } else {\n                          // Mn   [2] KAWI SIGN CANDRABINDU..KAWI SIGN ANUSVARA\n                          if (0x11f00 <= code && code <= 0x11f01) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0x11f03) {\n                        // Lo       KAWI SIGN REPHA\n                        if (0x11f02 === code) {\n                          return boundaries_1.CLUSTER_BREAK.PREPEND;\n                        }\n                      } else {\n                        if (code < 0x11f34) {\n                          // Mc       KAWI SIGN VISARGA\n                          if (0x11f03 === code) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        } else {\n                          // Mc   [2] KAWI VOWEL SIGN AA..KAWI VOWEL SIGN ALTERNATE AA\n                          if (0x11f34 <= code && code <= 0x11f35) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0x13430) {\n                    if (code < 0x11f40) {\n                      if (code < 0x11f3e) {\n                        // Mn   [5] KAWI VOWEL SIGN I..KAWI VOWEL SIGN VOCALIC R\n                        if (0x11f36 <= code && code <= 0x11f3a) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        // Mc   [2] KAWI VOWEL SIGN E..KAWI VOWEL SIGN AI\n                        if (0x11f3e <= code && code <= 0x11f3f) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      }\n                    } else {\n                      if (code < 0x11f41) {\n                        // Mn       KAWI VOWEL SIGN EU\n                        if (0x11f40 === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        // Mc       KAWI SIGN KILLER\n                        if (0x11f41 === code) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                        // Mn       KAWI CONJOINER\n                        if (0x11f42 === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0x16af0) {\n                      if (code < 0x13440) {\n                        // Cf  [16] EGYPTIAN HIEROGLYPH VERTICAL JOINER..EGYPTIAN HIEROGLYPH END WALLED ENCLOSURE\n                        if (0x13430 <= code && code <= 0x1343f) {\n                          return boundaries_1.CLUSTER_BREAK.CONTROL;\n                        }\n                      } else {\n                        if (code < 0x13447) {\n                          // Mn       EGYPTIAN HIEROGLYPH MIRROR HORIZONTALLY\n                          if (0x13440 === code) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mn  [15] EGYPTIAN HIEROGLYPH MODIFIER DAMAGED AT TOP START..EGYPTIAN HIEROGLYPH MODIFIER DAMAGED\n                          if (0x13447 <= code && code <= 0x13455) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0x16b30) {\n                        // Mn   [5] BASSA VAH COMBINING HIGH TONE..BASSA VAH COMBINING HIGH-LOW TONE\n                        if (0x16af0 <= code && code <= 0x16af4) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x16f4f) {\n                          // Mn   [7] PAHAWH HMONG MARK CIM TUB..PAHAWH HMONG MARK CIM TAUM\n                          if (0x16b30 <= code && code <= 0x16b36) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mn       MIAO SIGN CONSONANT MODIFIER BAR\n                          if (0x16f4f === code) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            } else {\n              if (code < 0x1da84) {\n                if (code < 0x1d167) {\n                  if (code < 0x1bca0) {\n                    if (code < 0x16fe4) {\n                      if (code < 0x16f8f) {\n                        // Mc  [55] MIAO SIGN ASPIRATION..MIAO VOWEL SIGN UI\n                        if (0x16f51 <= code && code <= 0x16f87) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      } else {\n                        // Mn   [4] MIAO TONE RIGHT..MIAO TONE BELOW\n                        if (0x16f8f <= code && code <= 0x16f92) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    } else {\n                      if (code < 0x16ff0) {\n                        // Mn       KHITAN SMALL SCRIPT FILLER\n                        if (0x16fe4 === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x1bc9d) {\n                          // Mc   [2] VIETNAMESE ALTERNATE READING MARK CA..VIETNAMESE ALTERNATE READING MARK NHAY\n                          if (0x16ff0 <= code && code <= 0x16ff1) {\n                            return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                          }\n                        } else {\n                          // Mn   [2] DUPLOYAN THICK LETTER SELECTOR..DUPLOYAN DOUBLE MARK\n                          if (0x1bc9d <= code && code <= 0x1bc9e) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0x1cf30) {\n                      if (code < 0x1cf00) {\n                        // Cf   [4] SHORTHAND FORMAT LETTER OVERLAP..SHORTHAND FORMAT UP STEP\n                        if (0x1bca0 <= code && code <= 0x1bca3) {\n                          return boundaries_1.CLUSTER_BREAK.CONTROL;\n                        }\n                      } else {\n                        // Mn  [46] ZNAMENNY COMBINING MARK GORAZDO NIZKO S KRYZHEM ON LEFT..ZNAMENNY COMBINING MARK KRYZH ON LEFT\n                        if (0x1cf00 <= code && code <= 0x1cf2d) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    } else {\n                      if (code < 0x1d165) {\n                        // Mn  [23] ZNAMENNY COMBINING TONAL RANGE MARK MRACHNO..ZNAMENNY PRIZNAK MODIFIER ROG\n                        if (0x1cf30 <= code && code <= 0x1cf46) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        // Mc       MUSICAL SYMBOL COMBINING STEM\n                        if (0x1d165 === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                        // Mc       MUSICAL SYMBOL COMBINING SPRECHGESANG STEM\n                        if (0x1d166 === code) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0x1d185) {\n                    if (code < 0x1d16e) {\n                      if (code < 0x1d16d) {\n                        // Mn   [3] MUSICAL SYMBOL COMBINING TREMOLO-1..MUSICAL SYMBOL COMBINING TREMOLO-3\n                        if (0x1d167 <= code && code <= 0x1d169) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        // Mc       MUSICAL SYMBOL COMBINING AUGMENTATION DOT\n                        if (0x1d16d === code) {\n                          return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                        }\n                      }\n                    } else {\n                      if (code < 0x1d173) {\n                        // Mc   [5] MUSICAL SYMBOL COMBINING FLAG-1..MUSICAL SYMBOL COMBINING FLAG-5\n                        if (0x1d16e <= code && code <= 0x1d172) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x1d17b) {\n                          // Cf   [8] MUSICAL SYMBOL BEGIN BEAM..MUSICAL SYMBOL END PHRASE\n                          if (0x1d173 <= code && code <= 0x1d17a) {\n                            return boundaries_1.CLUSTER_BREAK.CONTROL;\n                          }\n                        } else {\n                          // Mn   [8] MUSICAL SYMBOL COMBINING ACCENT..MUSICAL SYMBOL COMBINING LOURE\n                          if (0x1d17b <= code && code <= 0x1d182) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0x1da00) {\n                      if (code < 0x1d1aa) {\n                        // Mn   [7] MUSICAL SYMBOL COMBINING DOIT..MUSICAL SYMBOL COMBINING TRIPLE TONGUE\n                        if (0x1d185 <= code && code <= 0x1d18b) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x1d242) {\n                          // Mn   [4] MUSICAL SYMBOL COMBINING DOWN BOW..MUSICAL SYMBOL COMBINING SNAP PIZZICATO\n                          if (0x1d1aa <= code && code <= 0x1d1ad) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mn   [3] COMBINING GREEK MUSICAL TRISEME..COMBINING GREEK MUSICAL PENTASEME\n                          if (0x1d242 <= code && code <= 0x1d244) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0x1da3b) {\n                        // Mn  [55] SIGNWRITING HEAD RIM..SIGNWRITING AIR SUCKING IN\n                        if (0x1da00 <= code && code <= 0x1da36) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x1da75) {\n                          // Mn  [50] SIGNWRITING MOUTH CLOSED NEUTRAL..SIGNWRITING EXCITEMENT\n                          if (0x1da3b <= code && code <= 0x1da6c) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mn       SIGNWRITING UPPER BODY TILTING FROM HIP JOINTS\n                          if (0x1da75 === code) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              } else {\n                if (code < 0x1e2ec) {\n                  if (code < 0x1e01b) {\n                    if (code < 0x1daa1) {\n                      if (code < 0x1da9b) {\n                        // Mn       SIGNWRITING LOCATION HEAD NECK\n                        if (0x1da84 === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        // Mn   [5] SIGNWRITING FILL MODIFIER-2..SIGNWRITING FILL MODIFIER-6\n                        if (0x1da9b <= code && code <= 0x1da9f) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    } else {\n                      if (code < 0x1e000) {\n                        // Mn  [15] SIGNWRITING ROTATION MODIFIER-2..SIGNWRITING ROTATION MODIFIER-16\n                        if (0x1daa1 <= code && code <= 0x1daaf) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x1e008) {\n                          // Mn   [7] COMBINING GLAGOLITIC LETTER AZU..COMBINING GLAGOLITIC LETTER ZHIVETE\n                          if (0x1e000 <= code && code <= 0x1e006) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mn  [17] COMBINING GLAGOLITIC LETTER ZEMLJA..COMBINING GLAGOLITIC LETTER HERU\n                          if (0x1e008 <= code && code <= 0x1e018) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0x1e08f) {\n                      if (code < 0x1e023) {\n                        // Mn   [7] COMBINING GLAGOLITIC LETTER SHTA..COMBINING GLAGOLITIC LETTER YATI\n                        if (0x1e01b <= code && code <= 0x1e021) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x1e026) {\n                          // Mn   [2] COMBINING GLAGOLITIC LETTER YU..COMBINING GLAGOLITIC LETTER SMALL YUS\n                          if (0x1e023 <= code && code <= 0x1e024) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mn   [5] COMBINING GLAGOLITIC LETTER YO..COMBINING GLAGOLITIC LETTER FITA\n                          if (0x1e026 <= code && code <= 0x1e02a) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0x1e130) {\n                        // Mn       COMBINING CYRILLIC SMALL LETTER BYELORUSSIAN-UKRAINIAN I\n                        if (0x1e08f === code) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x1e2ae) {\n                          // Mn   [7] NYIAKENG PUACHUE HMONG TONE-B..NYIAKENG PUACHUE HMONG TONE-D\n                          if (0x1e130 <= code && code <= 0x1e136) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Mn       TOTO SIGN RISING TONE\n                          if (0x1e2ae === code) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    }\n                  }\n                } else {\n                  if (code < 0x1f3fb) {\n                    if (code < 0x1e8d0) {\n                      if (code < 0x1e4ec) {\n                        // Mn   [4] WANCHO TONE TUP..WANCHO TONE KOINI\n                        if (0x1e2ec <= code && code <= 0x1e2ef) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        // Mn   [4] NAG MUNDARI SIGN MUHOR..NAG MUNDARI SIGN SUTUH\n                        if (0x1e4ec <= code && code <= 0x1e4ef) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      }\n                    } else {\n                      if (code < 0x1e944) {\n                        // Mn   [7] MENDE KIKAKUI COMBINING NUMBER TEENS..MENDE KIKAKUI COMBINING NUMBER MILLIONS\n                        if (0x1e8d0 <= code && code <= 0x1e8d6) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0x1f1e6) {\n                          // Mn   [7] ADLAM ALIF LENGTHENER..ADLAM NUKTA\n                          if (0x1e944 <= code && code <= 0x1e94a) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // So  [26] REGIONAL INDICATOR SYMBOL LETTER A..REGIONAL INDICATOR SYMBOL LETTER Z\n                          if (0x1f1e6 <= code && code <= 0x1f1ff) {\n                            return boundaries_1.CLUSTER_BREAK.REGIONAL_INDICATOR;\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    if (code < 0xe0080) {\n                      if (code < 0xe0000) {\n                        // Sk   [5] EMOJI MODIFIER FITZPATRICK TYPE-1-2..EMOJI MODIFIER FITZPATRICK TYPE-6\n                        if (0x1f3fb <= code && code <= 0x1f3ff) {\n                          return boundaries_1.CLUSTER_BREAK.EXTEND;\n                        }\n                      } else {\n                        if (code < 0xe0020) {\n                          // Cn       <reserved-E0000>\n                          // Cf       LANGUAGE TAG\n                          // Cn  [30] <reserved-E0002>..<reserved-E001F>\n                          if (0xe0000 <= code && code <= 0xe001f) {\n                            return boundaries_1.CLUSTER_BREAK.CONTROL;\n                          }\n                        } else {\n                          // Cf  [96] TAG SPACE..CANCEL TAG\n                          if (0xe0020 <= code && code <= 0xe007f) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        }\n                      }\n                    } else {\n                      if (code < 0xe0100) {\n                        // Cn [128] <reserved-E0080>..<reserved-E00FF>\n                        if (0xe0080 <= code && code <= 0xe00ff) {\n                          return boundaries_1.CLUSTER_BREAK.CONTROL;\n                        }\n                      } else {\n                        if (code < 0xe01f0) {\n                          // Mn [240] VARIATION SELECTOR-17..VARIATION SELECTOR-256\n                          if (0xe0100 <= code && code <= 0xe01ef) {\n                            return boundaries_1.CLUSTER_BREAK.EXTEND;\n                          }\n                        } else {\n                          // Cn [3600] <reserved-E01F0>..<reserved-E0FFF>\n                          if (0xe01f0 <= code && code <= 0xe0fff) {\n                            return boundaries_1.CLUSTER_BREAK.CONTROL;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    // unlisted code points are treated as a break property of \"Other\"\n    return boundaries_1.CLUSTER_BREAK.OTHER;\n  }\n  /**\n   * Given a Unicode code point, returns if symbol is an extended pictographic or some other break\n   * @param code {number} Unicode code point\n   * @returns {number}\n   */\n  static getEmojiProperty(code) {\n    // emoji property taken from:\n    // https://www.unicode.org/Public/UCD/latest/ucd/emoji/emoji-data.txt\n    // and generated by\n    // node ./scripts/generate-emoji-extended-pictographic.js\n    if (code < 0x27b0) {\n      if (code < 0x2600) {\n        if (code < 0x2328) {\n          if (code < 0x2122) {\n            if (code < 0x203c) {\n              // E0.6   [1] (©️)       copyright\n              if (0xa9 === code) {\n                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n              }\n              // E0.6   [1] (®️)       registered\n              if (0xae === code) {\n                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n              }\n            } else {\n              // E0.6   [1] (‼️)       double exclamation mark\n              if (0x203c === code) {\n                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n              }\n              // E0.6   [1] (⁉️)       exclamation question mark\n              if (0x2049 === code) {\n                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n              }\n            }\n          } else {\n            if (code < 0x2194) {\n              // E0.6   [1] (™️)       trade mark\n              if (0x2122 === code) {\n                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n              }\n              // E0.6   [1] (ℹ️)       information\n              if (0x2139 === code) {\n                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n              }\n            } else {\n              if (code < 0x21a9) {\n                // E0.6   [6] (↔️..↙️)    left-right arrow..down-left arrow\n                if (0x2194 <= code && code <= 0x2199) {\n                  return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                }\n              } else {\n                if (code < 0x231a) {\n                  // E0.6   [2] (↩️..↪️)    right arrow curving left..left arrow curving right\n                  if (0x21a9 <= code && code <= 0x21aa) {\n                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                  }\n                } else {\n                  // E0.6   [2] (⌚..⌛)    watch..hourglass done\n                  if (0x231a <= code && code <= 0x231b) {\n                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                  }\n                }\n              }\n            }\n          }\n        } else {\n          if (code < 0x24c2) {\n            if (code < 0x23cf) {\n              // E1.0   [1] (⌨️)       keyboard\n              if (0x2328 === code) {\n                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n              }\n              // E0.0   [1] (⎈)       HELM SYMBOL\n              if (0x2388 === code) {\n                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n              }\n            } else {\n              if (code < 0x23e9) {\n                // E1.0   [1] (⏏️)       eject button\n                if (0x23cf === code) {\n                  return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                }\n              } else {\n                if (code < 0x23f8) {\n                  // E0.6   [4] (⏩..⏬)    fast-forward button..fast down button\n                  // E0.7   [2] (⏭️..⏮️)    next track button..last track button\n                  // E1.0   [1] (⏯️)       play or pause button\n                  // E0.6   [1] (⏰)       alarm clock\n                  // E1.0   [2] (⏱️..⏲️)    stopwatch..timer clock\n                  // E0.6   [1] (⏳)       hourglass not done\n                  if (0x23e9 <= code && code <= 0x23f3) {\n                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                  }\n                } else {\n                  // E0.7   [3] (⏸️..⏺️)    pause button..record button\n                  if (0x23f8 <= code && code <= 0x23fa) {\n                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                  }\n                }\n              }\n            }\n          } else {\n            if (code < 0x25b6) {\n              if (code < 0x25aa) {\n                // E0.6   [1] (Ⓜ️)       circled M\n                if (0x24c2 === code) {\n                  return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                }\n              } else {\n                // E0.6   [2] (▪️..▫️)    black small square..white small square\n                if (0x25aa <= code && code <= 0x25ab) {\n                  return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                }\n              }\n            } else {\n              if (code < 0x25c0) {\n                // E0.6   [1] (▶️)       play button\n                if (0x25b6 === code) {\n                  return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                }\n              } else {\n                if (code < 0x25fb) {\n                  // E0.6   [1] (◀️)       reverse button\n                  if (0x25c0 === code) {\n                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                  }\n                } else {\n                  // E0.6   [4] (◻️..◾)    white medium square..black medium-small square\n                  if (0x25fb <= code && code <= 0x25fe) {\n                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                  }\n                }\n              }\n            }\n          }\n        }\n      } else {\n        if (code < 0x2733) {\n          if (code < 0x2714) {\n            if (code < 0x2614) {\n              if (code < 0x2607) {\n                // E0.6   [2] (☀️..☁️)    sun..cloud\n                // E0.7   [2] (☂️..☃️)    umbrella..snowman\n                // E1.0   [1] (☄️)       comet\n                // E0.0   [1] (★)       BLACK STAR\n                if (0x2600 <= code && code <= 0x2605) {\n                  return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                }\n              } else {\n                // E0.0   [7] (☇..☍)    LIGHTNING..OPPOSITION\n                // E0.6   [1] (☎️)       telephone\n                // E0.0   [2] (☏..☐)    WHITE TELEPHONE..BALLOT BOX\n                // E0.6   [1] (☑️)       check box with check\n                // E0.0   [1] (☒)       BALLOT BOX WITH X\n                if (0x2607 <= code && code <= 0x2612) {\n                  return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                }\n              }\n            } else {\n              if (code < 0x2690) {\n                // E0.6   [2] (☔..☕)    umbrella with rain drops..hot beverage\n                // E0.0   [2] (☖..☗)    WHITE SHOGI PIECE..BLACK SHOGI PIECE\n                // E1.0   [1] (☘️)       shamrock\n                // E0.0   [4] (☙..☜)    REVERSED ROTATED FLORAL HEART BULLET..WHITE LEFT POINTING INDEX\n                // E0.6   [1] (☝️)       index pointing up\n                // E0.0   [2] (☞..☟)    WHITE RIGHT POINTING INDEX..WHITE DOWN POINTING INDEX\n                // E1.0   [1] (☠️)       skull and crossbones\n                // E0.0   [1] (☡)       CAUTION SIGN\n                // E1.0   [2] (☢️..☣️)    radioactive..biohazard\n                // E0.0   [2] (☤..☥)    CADUCEUS..ANKH\n                // E1.0   [1] (☦️)       orthodox cross\n                // E0.0   [3] (☧..☩)    CHI RHO..CROSS OF JERUSALEM\n                // E0.7   [1] (☪️)       star and crescent\n                // E0.0   [3] (☫..☭)    FARSI SYMBOL..HAMMER AND SICKLE\n                // E1.0   [1] (☮️)       peace symbol\n                // E0.7   [1] (☯️)       yin yang\n                // E0.0   [8] (☰..☷)    TRIGRAM FOR HEAVEN..TRIGRAM FOR EARTH\n                // E0.7   [2] (☸️..☹️)    wheel of dharma..frowning face\n                // E0.6   [1] (☺️)       smiling face\n                // E0.0   [5] (☻..☿)    BLACK SMILING FACE..MERCURY\n                // E4.0   [1] (♀️)       female sign\n                // E0.0   [1] (♁)       EARTH\n                // E4.0   [1] (♂️)       male sign\n                // E0.0   [5] (♃..♇)    JUPITER..PLUTO\n                // E0.6  [12] (♈..♓)    Aries..Pisces\n                // E0.0  [11] (♔..♞)    WHITE CHESS KING..BLACK CHESS KNIGHT\n                // E11.0  [1] (♟️)       chess pawn\n                // E0.6   [1] (♠️)       spade suit\n                // E0.0   [2] (♡..♢)    WHITE HEART SUIT..WHITE DIAMOND SUIT\n                // E0.6   [1] (♣️)       club suit\n                // E0.0   [1] (♤)       WHITE SPADE SUIT\n                // E0.6   [2] (♥️..♦️)    heart suit..diamond suit\n                // E0.0   [1] (♧)       WHITE CLUB SUIT\n                // E0.6   [1] (♨️)       hot springs\n                // E0.0  [18] (♩..♺)    QUARTER NOTE..RECYCLING SYMBOL FOR GENERIC MATERIALS\n                // E0.6   [1] (♻️)       recycling symbol\n                // E0.0   [2] (♼..♽)    RECYCLED PAPER SYMBOL..PARTIALLY-RECYCLED PAPER SYMBOL\n                // E11.0  [1] (♾️)       infinity\n                // E0.6   [1] (♿)       wheelchair symbol\n                // E0.0   [6] (⚀..⚅)    DIE FACE-1..DIE FACE-6\n                if (0x2614 <= code && code <= 0x2685) {\n                  return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                }\n              } else {\n                if (code < 0x2708) {\n                  // E0.0   [2] (⚐..⚑)    WHITE FLAG..BLACK FLAG\n                  // E1.0   [1] (⚒️)       hammer and pick\n                  // E0.6   [1] (⚓)       anchor\n                  // E1.0   [1] (⚔️)       crossed swords\n                  // E4.0   [1] (⚕️)       medical symbol\n                  // E1.0   [2] (⚖️..⚗️)    balance scale..alembic\n                  // E0.0   [1] (⚘)       FLOWER\n                  // E1.0   [1] (⚙️)       gear\n                  // E0.0   [1] (⚚)       STAFF OF HERMES\n                  // E1.0   [2] (⚛️..⚜️)    atom symbol..fleur-de-lis\n                  // E0.0   [3] (⚝..⚟)    OUTLINED WHITE STAR..THREE LINES CONVERGING LEFT\n                  // E0.6   [2] (⚠️..⚡)    warning..high voltage\n                  // E0.0   [5] (⚢..⚦)    DOUBLED FEMALE SIGN..MALE WITH STROKE SIGN\n                  // E13.0  [1] (⚧️)       transgender symbol\n                  // E0.0   [2] (⚨..⚩)    VERTICAL MALE WITH STROKE SIGN..HORIZONTAL MALE WITH STROKE SIGN\n                  // E0.6   [2] (⚪..⚫)    white circle..black circle\n                  // E0.0   [4] (⚬..⚯)    MEDIUM SMALL WHITE CIRCLE..UNMARRIED PARTNERSHIP SYMBOL\n                  // E1.0   [2] (⚰️..⚱️)    coffin..funeral urn\n                  // E0.0  [11] (⚲..⚼)    NEUTER..SESQUIQUADRATE\n                  // E0.6   [2] (⚽..⚾)    soccer ball..baseball\n                  // E0.0   [5] (⚿..⛃)    SQUARED KEY..BLACK DRAUGHTS KING\n                  // E0.6   [2] (⛄..⛅)    snowman without snow..sun behind cloud\n                  // E0.0   [2] (⛆..⛇)    RAIN..BLACK SNOWMAN\n                  // E0.7   [1] (⛈️)       cloud with lightning and rain\n                  // E0.0   [5] (⛉..⛍)    TURNED WHITE SHOGI PIECE..DISABLED CAR\n                  // E0.6   [1] (⛎)       Ophiuchus\n                  // E0.7   [1] (⛏️)       pick\n                  // E0.0   [1] (⛐)       CAR SLIDING\n                  // E0.7   [1] (⛑️)       rescue worker’s helmet\n                  // E0.0   [1] (⛒)       CIRCLED CROSSING LANES\n                  // E0.7   [1] (⛓️)       chains\n                  // E0.6   [1] (⛔)       no entry\n                  // E0.0  [20] (⛕..⛨)    ALTERNATE ONE-WAY LEFT WAY TRAFFIC..BLACK CROSS ON SHIELD\n                  // E0.7   [1] (⛩️)       shinto shrine\n                  // E0.6   [1] (⛪)       church\n                  // E0.0   [5] (⛫..⛯)    CASTLE..MAP SYMBOL FOR LIGHTHOUSE\n                  // E0.7   [2] (⛰️..⛱️)    mountain..umbrella on ground\n                  // E0.6   [2] (⛲..⛳)    fountain..flag in hole\n                  // E0.7   [1] (⛴️)       ferry\n                  // E0.6   [1] (⛵)       sailboat\n                  // E0.0   [1] (⛶)       SQUARE FOUR CORNERS\n                  // E0.7   [3] (⛷️..⛹️)    skier..person bouncing ball\n                  // E0.6   [1] (⛺)       tent\n                  // E0.0   [2] (⛻..⛼)    JAPANESE BANK SYMBOL..HEADSTONE GRAVEYARD SYMBOL\n                  // E0.6   [1] (⛽)       fuel pump\n                  // E0.0   [4] (⛾..✁)    CUP ON BLACK SQUARE..UPPER BLADE SCISSORS\n                  // E0.6   [1] (✂️)       scissors\n                  // E0.0   [2] (✃..✄)    LOWER BLADE SCISSORS..WHITE SCISSORS\n                  // E0.6   [1] (✅)       check mark button\n                  if (0x2690 <= code && code <= 0x2705) {\n                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                  }\n                } else {\n                  // E0.6   [5] (✈️..✌️)    airplane..victory hand\n                  // E0.7   [1] (✍️)       writing hand\n                  // E0.0   [1] (✎)       LOWER RIGHT PENCIL\n                  // E0.6   [1] (✏️)       pencil\n                  // E0.0   [2] (✐..✑)    UPPER RIGHT PENCIL..WHITE NIB\n                  // E0.6   [1] (✒️)       black nib\n                  if (0x2708 <= code && code <= 0x2712) {\n                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                  }\n                }\n              }\n            }\n          } else {\n            if (code < 0x271d) {\n              // E0.6   [1] (✔️)       check mark\n              if (0x2714 === code) {\n                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n              }\n              // E0.6   [1] (✖️)       multiply\n              if (0x2716 === code) {\n                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n              }\n            } else {\n              if (code < 0x2721) {\n                // E0.7   [1] (✝️)       latin cross\n                if (0x271d === code) {\n                  return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                }\n              } else {\n                // E0.7   [1] (✡️)       star of David\n                if (0x2721 === code) {\n                  return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                }\n                // E0.6   [1] (✨)       sparkles\n                if (0x2728 === code) {\n                  return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                }\n              }\n            }\n          }\n        } else {\n          if (code < 0x2753) {\n            if (code < 0x2747) {\n              if (code < 0x2744) {\n                // E0.6   [2] (✳️..✴️)    eight-spoked asterisk..eight-pointed star\n                if (0x2733 <= code && code <= 0x2734) {\n                  return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                }\n              } else {\n                // E0.6   [1] (❄️)       snowflake\n                if (0x2744 === code) {\n                  return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                }\n              }\n            } else {\n              if (code < 0x274c) {\n                // E0.6   [1] (❇️)       sparkle\n                if (0x2747 === code) {\n                  return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                }\n              } else {\n                // E0.6   [1] (❌)       cross mark\n                if (0x274c === code) {\n                  return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                }\n                // E0.6   [1] (❎)       cross mark button\n                if (0x274e === code) {\n                  return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                }\n              }\n            }\n          } else {\n            if (code < 0x2763) {\n              if (code < 0x2757) {\n                // E0.6   [3] (❓..❕)    red question mark..white exclamation mark\n                if (0x2753 <= code && code <= 0x2755) {\n                  return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                }\n              } else {\n                // E0.6   [1] (❗)       red exclamation mark\n                if (0x2757 === code) {\n                  return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                }\n              }\n            } else {\n              if (code < 0x2795) {\n                // E1.0   [1] (❣️)       heart exclamation\n                // E0.6   [1] (❤️)       red heart\n                // E0.0   [3] (❥..❧)    ROTATED HEAVY BLACK HEART BULLET..ROTATED FLORAL HEART BULLET\n                if (0x2763 <= code && code <= 0x2767) {\n                  return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                }\n              } else {\n                if (code < 0x27a1) {\n                  // E0.6   [3] (➕..➗)    plus..divide\n                  if (0x2795 <= code && code <= 0x2797) {\n                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                  }\n                } else {\n                  // E0.6   [1] (➡️)       right arrow\n                  if (0x27a1 === code) {\n                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    } else {\n      if (code < 0x1f201) {\n        if (code < 0x3297) {\n          if (code < 0x2b1b) {\n            if (code < 0x2934) {\n              // E0.6   [1] (➰)       curly loop\n              if (0x27b0 === code) {\n                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n              }\n              // E1.0   [1] (➿)       double curly loop\n              if (0x27bf === code) {\n                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n              }\n            } else {\n              if (code < 0x2b05) {\n                // E0.6   [2] (⤴️..⤵️)    right arrow curving up..right arrow curving down\n                if (0x2934 <= code && code <= 0x2935) {\n                  return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                }\n              } else {\n                // E0.6   [3] (⬅️..⬇️)    left arrow..down arrow\n                if (0x2b05 <= code && code <= 0x2b07) {\n                  return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                }\n              }\n            }\n          } else {\n            if (code < 0x2b55) {\n              if (code < 0x2b50) {\n                // E0.6   [2] (⬛..⬜)    black large square..white large square\n                if (0x2b1b <= code && code <= 0x2b1c) {\n                  return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                }\n              } else {\n                // E0.6   [1] (⭐)       star\n                if (0x2b50 === code) {\n                  return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                }\n              }\n            } else {\n              if (code < 0x3030) {\n                // E0.6   [1] (⭕)       hollow red circle\n                if (0x2b55 === code) {\n                  return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                }\n              } else {\n                // E0.6   [1] (〰️)       wavy dash\n                if (0x3030 === code) {\n                  return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                }\n                // E0.6   [1] (〽️)       part alternation mark\n                if (0x303d === code) {\n                  return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                }\n              }\n            }\n          }\n        } else {\n          if (code < 0x1f16c) {\n            if (code < 0x1f000) {\n              // E0.6   [1] (㊗️)       Japanese “congratulations” button\n              if (0x3297 === code) {\n                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n              }\n              // E0.6   [1] (㊙️)       Japanese “secret” button\n              if (0x3299 === code) {\n                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n              }\n            } else {\n              if (code < 0x1f10d) {\n                // E0.0   [4] (🀀..🀃)    MAHJONG TILE EAST WIND..MAHJONG TILE NORTH WIND\n                // E0.6   [1] (🀄)       mahjong red dragon\n                // E0.0 [202] (🀅..🃎)    MAHJONG TILE GREEN DRAGON..PLAYING CARD KING OF DIAMONDS\n                // E0.6   [1] (🃏)       joker\n                // E0.0  [48] (🃐..🃿)    <reserved-1F0D0>..<reserved-1F0FF>\n                if (0x1f000 <= code && code <= 0x1f0ff) {\n                  return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                }\n              } else {\n                if (code < 0x1f12f) {\n                  // E0.0   [3] (🄍..🄏)    CIRCLED ZERO WITH SLASH..CIRCLED DOLLAR SIGN WITH OVERLAID BACKSLASH\n                  if (0x1f10d <= code && code <= 0x1f10f) {\n                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                  }\n                } else {\n                  // E0.0   [1] (🄯)       COPYLEFT SYMBOL\n                  if (0x1f12f === code) {\n                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                  }\n                }\n              }\n            }\n          } else {\n            if (code < 0x1f18e) {\n              if (code < 0x1f17e) {\n                // E0.0   [4] (🅬..🅯)    RAISED MR SIGN..CIRCLED HUMAN FIGURE\n                // E0.6   [2] (🅰️..🅱️)    A button (blood type)..B button (blood type)\n                if (0x1f16c <= code && code <= 0x1f171) {\n                  return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                }\n              } else {\n                // E0.6   [2] (🅾️..🅿️)    O button (blood type)..P button\n                if (0x1f17e <= code && code <= 0x1f17f) {\n                  return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                }\n              }\n            } else {\n              if (code < 0x1f191) {\n                // E0.6   [1] (🆎)       AB button (blood type)\n                if (0x1f18e === code) {\n                  return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                }\n              } else {\n                if (code < 0x1f1ad) {\n                  // E0.6  [10] (🆑..🆚)    CL button..VS button\n                  if (0x1f191 <= code && code <= 0x1f19a) {\n                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                  }\n                } else {\n                  // E0.0  [57] (🆭..🇥)    MASK WORK SYMBOL..<reserved-1F1E5>\n                  if (0x1f1ad <= code && code <= 0x1f1e5) {\n                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                  }\n                }\n              }\n            }\n          }\n        }\n      } else {\n        if (code < 0x1f7d5) {\n          if (code < 0x1f249) {\n            if (code < 0x1f22f) {\n              if (code < 0x1f21a) {\n                // E0.6   [2] (🈁..🈂️)    Japanese “here” button..Japanese “service charge” button\n                // E0.0  [13] (🈃..🈏)    <reserved-1F203>..<reserved-1F20F>\n                if (0x1f201 <= code && code <= 0x1f20f) {\n                  return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                }\n              } else {\n                // E0.6   [1] (🈚)       Japanese “free of charge” button\n                if (0x1f21a === code) {\n                  return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                }\n              }\n            } else {\n              if (code < 0x1f232) {\n                // E0.6   [1] (🈯)       Japanese “reserved” button\n                if (0x1f22f === code) {\n                  return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                }\n              } else {\n                if (code < 0x1f23c) {\n                  // E0.6   [9] (🈲..🈺)    Japanese “prohibited” button..Japanese “open for business” button\n                  if (0x1f232 <= code && code <= 0x1f23a) {\n                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                  }\n                } else {\n                  // E0.0   [4] (🈼..🈿)    <reserved-1F23C>..<reserved-1F23F>\n                  if (0x1f23c <= code && code <= 0x1f23f) {\n                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                  }\n                }\n              }\n            }\n          } else {\n            if (code < 0x1f546) {\n              if (code < 0x1f400) {\n                // E0.0   [7] (🉉..🉏)    <reserved-1F249>..<reserved-1F24F>\n                // E0.6   [2] (🉐..🉑)    Japanese “bargain” button..Japanese “acceptable” button\n                // E0.0 [174] (🉒..🋿)    <reserved-1F252>..<reserved-1F2FF>\n                // E0.6  [13] (🌀..🌌)    cyclone..milky way\n                // E0.7   [2] (🌍..🌎)    globe showing Europe-Africa..globe showing Americas\n                // E0.6   [1] (🌏)       globe showing Asia-Australia\n                // E1.0   [1] (🌐)       globe with meridians\n                // E0.6   [1] (🌑)       new moon\n                // E1.0   [1] (🌒)       waxing crescent moon\n                // E0.6   [3] (🌓..🌕)    first quarter moon..full moon\n                // E1.0   [3] (🌖..🌘)    waning gibbous moon..waning crescent moon\n                // E0.6   [1] (🌙)       crescent moon\n                // E1.0   [1] (🌚)       new moon face\n                // E0.6   [1] (🌛)       first quarter moon face\n                // E0.7   [1] (🌜)       last quarter moon face\n                // E1.0   [2] (🌝..🌞)    full moon face..sun with face\n                // E0.6   [2] (🌟..🌠)    glowing star..shooting star\n                // E0.7   [1] (🌡️)       thermometer\n                // E0.0   [2] (🌢..🌣)    BLACK DROPLET..WHITE SUN\n                // E0.7   [9] (🌤️..🌬️)    sun behind small cloud..wind face\n                // E1.0   [3] (🌭..🌯)    hot dog..burrito\n                // E0.6   [2] (🌰..🌱)    chestnut..seedling\n                // E1.0   [2] (🌲..🌳)    evergreen tree..deciduous tree\n                // E0.6   [2] (🌴..🌵)    palm tree..cactus\n                // E0.7   [1] (🌶️)       hot pepper\n                // E0.6  [20] (🌷..🍊)    tulip..tangerine\n                // E1.0   [1] (🍋)       lemon\n                // E0.6   [4] (🍌..🍏)    banana..green apple\n                // E1.0   [1] (🍐)       pear\n                // E0.6  [43] (🍑..🍻)    peach..clinking beer mugs\n                // E1.0   [1] (🍼)       baby bottle\n                // E0.7   [1] (🍽️)       fork and knife with plate\n                // E1.0   [2] (🍾..🍿)    bottle with popping cork..popcorn\n                // E0.6  [20] (🎀..🎓)    ribbon..graduation cap\n                // E0.0   [2] (🎔..🎕)    HEART WITH TIP ON THE LEFT..BOUQUET OF FLOWERS\n                // E0.7   [2] (🎖️..🎗️)    military medal..reminder ribbon\n                // E0.0   [1] (🎘)       MUSICAL KEYBOARD WITH JACKS\n                // E0.7   [3] (🎙️..🎛️)    studio microphone..control knobs\n                // E0.0   [2] (🎜..🎝)    BEAMED ASCENDING MUSICAL NOTES..BEAMED DESCENDING MUSICAL NOTES\n                // E0.7   [2] (🎞️..🎟️)    film frames..admission tickets\n                // E0.6  [37] (🎠..🏄)    carousel horse..person surfing\n                // E1.0   [1] (🏅)       sports medal\n                // E0.6   [1] (🏆)       trophy\n                // E1.0   [1] (🏇)       horse racing\n                // E0.6   [1] (🏈)       american football\n                // E1.0   [1] (🏉)       rugby football\n                // E0.6   [1] (🏊)       person swimming\n                // E0.7   [4] (🏋️..🏎️)    person lifting weights..racing car\n                // E1.0   [5] (🏏..🏓)    cricket game..ping pong\n                // E0.7  [12] (🏔️..🏟️)    snow-capped mountain..stadium\n                // E0.6   [4] (🏠..🏣)    house..Japanese post office\n                // E1.0   [1] (🏤)       post office\n                // E0.6  [12] (🏥..🏰)    hospital..castle\n                // E0.0   [2] (🏱..🏲)    WHITE PENNANT..BLACK PENNANT\n                // E0.7   [1] (🏳️)       white flag\n                // E1.0   [1] (🏴)       black flag\n                // E0.7   [1] (🏵️)       rosette\n                // E0.0   [1] (🏶)       BLACK ROSETTE\n                // E0.7   [1] (🏷️)       label\n                // E1.0   [3] (🏸..🏺)    badminton..amphora\n                if (0x1f249 <= code && code <= 0x1f3fa) {\n                  return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                }\n              } else {\n                // E1.0   [8] (🐀..🐇)    rat..rabbit\n                // E0.7   [1] (🐈)       cat\n                // E1.0   [3] (🐉..🐋)    dragon..whale\n                // E0.6   [3] (🐌..🐎)    snail..horse\n                // E1.0   [2] (🐏..🐐)    ram..goat\n                // E0.6   [2] (🐑..🐒)    ewe..monkey\n                // E1.0   [1] (🐓)       rooster\n                // E0.6   [1] (🐔)       chicken\n                // E0.7   [1] (🐕)       dog\n                // E1.0   [1] (🐖)       pig\n                // E0.6  [19] (🐗..🐩)    boar..poodle\n                // E1.0   [1] (🐪)       camel\n                // E0.6  [20] (🐫..🐾)    two-hump camel..paw prints\n                // E0.7   [1] (🐿️)       chipmunk\n                // E0.6   [1] (👀)       eyes\n                // E0.7   [1] (👁️)       eye\n                // E0.6  [35] (👂..👤)    ear..bust in silhouette\n                // E1.0   [1] (👥)       busts in silhouette\n                // E0.6   [6] (👦..👫)    boy..woman and man holding hands\n                // E1.0   [2] (👬..👭)    men holding hands..women holding hands\n                // E0.6  [63] (👮..💬)    police officer..speech balloon\n                // E1.0   [1] (💭)       thought balloon\n                // E0.6   [8] (💮..💵)    white flower..dollar banknote\n                // E1.0   [2] (💶..💷)    euro banknote..pound banknote\n                // E0.6  [52] (💸..📫)    money with wings..closed mailbox with raised flag\n                // E0.7   [2] (📬..📭)    open mailbox with raised flag..open mailbox with lowered flag\n                // E0.6   [1] (📮)       postbox\n                // E1.0   [1] (📯)       postal horn\n                // E0.6   [5] (📰..📴)    newspaper..mobile phone off\n                // E1.0   [1] (📵)       no mobile phones\n                // E0.6   [2] (📶..📷)    antenna bars..camera\n                // E1.0   [1] (📸)       camera with flash\n                // E0.6   [4] (📹..📼)    video camera..videocassette\n                // E0.7   [1] (📽️)       film projector\n                // E0.0   [1] (📾)       PORTABLE STEREO\n                // E1.0   [4] (📿..🔂)    prayer beads..repeat single button\n                // E0.6   [1] (🔃)       clockwise vertical arrows\n                // E1.0   [4] (🔄..🔇)    counterclockwise arrows button..muted speaker\n                // E0.7   [1] (🔈)       speaker low volume\n                // E1.0   [1] (🔉)       speaker medium volume\n                // E0.6  [11] (🔊..🔔)    speaker high volume..bell\n                // E1.0   [1] (🔕)       bell with slash\n                // E0.6  [22] (🔖..🔫)    bookmark..water pistol\n                // E1.0   [2] (🔬..🔭)    microscope..telescope\n                // E0.6  [16] (🔮..🔽)    crystal ball..downwards button\n                if (0x1f400 <= code && code <= 0x1f53d) {\n                  return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                }\n              }\n            } else {\n              if (code < 0x1f680) {\n                // E0.0   [3] (🕆..🕈)    WHITE LATIN CROSS..CELTIC CROSS\n                // E0.7   [2] (🕉️..🕊️)    om..dove\n                // E1.0   [4] (🕋..🕎)    kaaba..menorah\n                // E0.0   [1] (🕏)       BOWL OF HYGIEIA\n                // E0.6  [12] (🕐..🕛)    one o’clock..twelve o’clock\n                // E0.7  [12] (🕜..🕧)    one-thirty..twelve-thirty\n                // E0.0   [7] (🕨..🕮)    RIGHT SPEAKER..BOOK\n                // E0.7   [2] (🕯️..🕰️)    candle..mantelpiece clock\n                // E0.0   [2] (🕱..🕲)    BLACK SKULL AND CROSSBONES..NO PIRACY\n                // E0.7   [7] (🕳️..🕹️)    hole..joystick\n                // E3.0   [1] (🕺)       man dancing\n                // E0.0  [12] (🕻..🖆)    LEFT HAND TELEPHONE RECEIVER..PEN OVER STAMPED ENVELOPE\n                // E0.7   [1] (🖇️)       linked paperclips\n                // E0.0   [2] (🖈..🖉)    BLACK PUSHPIN..LOWER LEFT PENCIL\n                // E0.7   [4] (🖊️..🖍️)    pen..crayon\n                // E0.0   [2] (🖎..🖏)    LEFT WRITING HAND..TURNED OK HAND SIGN\n                // E0.7   [1] (🖐️)       hand with fingers splayed\n                // E0.0   [4] (🖑..🖔)    REVERSED RAISED HAND WITH FINGERS SPLAYED..REVERSED VICTORY HAND\n                // E1.0   [2] (🖕..🖖)    middle finger..vulcan salute\n                // E0.0  [13] (🖗..🖣)    WHITE DOWN POINTING LEFT HAND INDEX..BLACK DOWN POINTING BACKHAND INDEX\n                // E3.0   [1] (🖤)       black heart\n                // E0.7   [1] (🖥️)       desktop computer\n                // E0.0   [2] (🖦..🖧)    KEYBOARD AND MOUSE..THREE NETWORKED COMPUTERS\n                // E0.7   [1] (🖨️)       printer\n                // E0.0   [8] (🖩..🖰)    POCKET CALCULATOR..TWO BUTTON MOUSE\n                // E0.7   [2] (🖱️..🖲️)    computer mouse..trackball\n                // E0.0   [9] (🖳..🖻)    OLD PERSONAL COMPUTER..DOCUMENT WITH PICTURE\n                // E0.7   [1] (🖼️)       framed picture\n                // E0.0   [5] (🖽..🗁)    FRAME WITH TILES..OPEN FOLDER\n                // E0.7   [3] (🗂️..🗄️)    card index dividers..file cabinet\n                // E0.0  [12] (🗅..🗐)    EMPTY NOTE..PAGES\n                // E0.7   [3] (🗑️..🗓️)    wastebasket..spiral calendar\n                // E0.0   [8] (🗔..🗛)    DESKTOP WINDOW..DECREASE FONT SIZE SYMBOL\n                // E0.7   [3] (🗜️..🗞️)    clamp..rolled-up newspaper\n                // E0.0   [2] (🗟..🗠)    PAGE WITH CIRCLED TEXT..STOCK CHART\n                // E0.7   [1] (🗡️)       dagger\n                // E0.0   [1] (🗢)       LIPS\n                // E0.7   [1] (🗣️)       speaking head\n                // E0.0   [4] (🗤..🗧)    THREE RAYS ABOVE..THREE RAYS RIGHT\n                // E2.0   [1] (🗨️)       left speech bubble\n                // E0.0   [6] (🗩..🗮)    RIGHT SPEECH BUBBLE..LEFT ANGER BUBBLE\n                // E0.7   [1] (🗯️)       right anger bubble\n                // E0.0   [3] (🗰..🗲)    MOOD BUBBLE..LIGHTNING MOOD\n                // E0.7   [1] (🗳️)       ballot box with ballot\n                // E0.0   [6] (🗴..🗹)    BALLOT SCRIPT X..BALLOT BOX WITH BOLD CHECK\n                // E0.7   [1] (🗺️)       world map\n                // E0.6   [5] (🗻..🗿)    mount fuji..moai\n                // E1.0   [1] (😀)       grinning face\n                // E0.6   [6] (😁..😆)    beaming face with smiling eyes..grinning squinting face\n                // E1.0   [2] (😇..😈)    smiling face with halo..smiling face with horns\n                // E0.6   [5] (😉..😍)    winking face..smiling face with heart-eyes\n                // E1.0   [1] (😎)       smiling face with sunglasses\n                // E0.6   [1] (😏)       smirking face\n                // E0.7   [1] (😐)       neutral face\n                // E1.0   [1] (😑)       expressionless face\n                // E0.6   [3] (😒..😔)    unamused face..pensive face\n                // E1.0   [1] (😕)       confused face\n                // E0.6   [1] (😖)       confounded face\n                // E1.0   [1] (😗)       kissing face\n                // E0.6   [1] (😘)       face blowing a kiss\n                // E1.0   [1] (😙)       kissing face with smiling eyes\n                // E0.6   [1] (😚)       kissing face with closed eyes\n                // E1.0   [1] (😛)       face with tongue\n                // E0.6   [3] (😜..😞)    winking face with tongue..disappointed face\n                // E1.0   [1] (😟)       worried face\n                // E0.6   [6] (😠..😥)    angry face..sad but relieved face\n                // E1.0   [2] (😦..😧)    frowning face with open mouth..anguished face\n                // E0.6   [4] (😨..😫)    fearful face..tired face\n                // E1.0   [1] (😬)       grimacing face\n                // E0.6   [1] (😭)       loudly crying face\n                // E1.0   [2] (😮..😯)    face with open mouth..hushed face\n                // E0.6   [4] (😰..😳)    anxious face with sweat..flushed face\n                // E1.0   [1] (😴)       sleeping face\n                // E0.6   [1] (😵)       face with crossed-out eyes\n                // E1.0   [1] (😶)       face without mouth\n                // E0.6  [10] (😷..🙀)    face with medical mask..weary cat\n                // E1.0   [4] (🙁..🙄)    slightly frowning face..face with rolling eyes\n                // E0.6  [11] (🙅..🙏)    person gesturing NO..folded hands\n                if (0x1f546 <= code && code <= 0x1f64f) {\n                  return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                }\n              } else {\n                if (code < 0x1f774) {\n                  // E0.6   [1] (🚀)       rocket\n                  // E1.0   [2] (🚁..🚂)    helicopter..locomotive\n                  // E0.6   [3] (🚃..🚅)    railway car..bullet train\n                  // E1.0   [1] (🚆)       train\n                  // E0.6   [1] (🚇)       metro\n                  // E1.0   [1] (🚈)       light rail\n                  // E0.6   [1] (🚉)       station\n                  // E1.0   [2] (🚊..🚋)    tram..tram car\n                  // E0.6   [1] (🚌)       bus\n                  // E0.7   [1] (🚍)       oncoming bus\n                  // E1.0   [1] (🚎)       trolleybus\n                  // E0.6   [1] (🚏)       bus stop\n                  // E1.0   [1] (🚐)       minibus\n                  // E0.6   [3] (🚑..🚓)    ambulance..police car\n                  // E0.7   [1] (🚔)       oncoming police car\n                  // E0.6   [1] (🚕)       taxi\n                  // E1.0   [1] (🚖)       oncoming taxi\n                  // E0.6   [1] (🚗)       automobile\n                  // E0.7   [1] (🚘)       oncoming automobile\n                  // E0.6   [2] (🚙..🚚)    sport utility vehicle..delivery truck\n                  // E1.0   [7] (🚛..🚡)    articulated lorry..aerial tramway\n                  // E0.6   [1] (🚢)       ship\n                  // E1.0   [1] (🚣)       person rowing boat\n                  // E0.6   [2] (🚤..🚥)    speedboat..horizontal traffic light\n                  // E1.0   [1] (🚦)       vertical traffic light\n                  // E0.6   [7] (🚧..🚭)    construction..no smoking\n                  // E1.0   [4] (🚮..🚱)    litter in bin sign..non-potable water\n                  // E0.6   [1] (🚲)       bicycle\n                  // E1.0   [3] (🚳..🚵)    no bicycles..person mountain biking\n                  // E0.6   [1] (🚶)       person walking\n                  // E1.0   [2] (🚷..🚸)    no pedestrians..children crossing\n                  // E0.6   [6] (🚹..🚾)    men’s room..water closet\n                  // E1.0   [1] (🚿)       shower\n                  // E0.6   [1] (🛀)       person taking bath\n                  // E1.0   [5] (🛁..🛅)    bathtub..left luggage\n                  // E0.0   [5] (🛆..🛊)    TRIANGLE WITH ROUNDED CORNERS..GIRLS SYMBOL\n                  // E0.7   [1] (🛋️)       couch and lamp\n                  // E1.0   [1] (🛌)       person in bed\n                  // E0.7   [3] (🛍️..🛏️)    shopping bags..bed\n                  // E1.0   [1] (🛐)       place of worship\n                  // E3.0   [2] (🛑..🛒)    stop sign..shopping cart\n                  // E0.0   [2] (🛓..🛔)    STUPA..PAGODA\n                  // E12.0  [1] (🛕)       hindu temple\n                  // E13.0  [2] (🛖..🛗)    hut..elevator\n                  // E0.0   [4] (🛘..🛛)    <reserved-1F6D8>..<reserved-1F6DB>\n                  // E15.0  [1] (🛜)       wireless\n                  // E14.0  [3] (🛝..🛟)    playground slide..ring buoy\n                  // E0.7   [6] (🛠️..🛥️)    hammer and wrench..motor boat\n                  // E0.0   [3] (🛦..🛨)    UP-POINTING MILITARY AIRPLANE..UP-POINTING SMALL AIRPLANE\n                  // E0.7   [1] (🛩️)       small airplane\n                  // E0.0   [1] (🛪)       NORTHEAST-POINTING AIRPLANE\n                  // E1.0   [2] (🛫..🛬)    airplane departure..airplane arrival\n                  // E0.0   [3] (🛭..🛯)    <reserved-1F6ED>..<reserved-1F6EF>\n                  // E0.7   [1] (🛰️)       satellite\n                  // E0.0   [2] (🛱..🛲)    ONCOMING FIRE ENGINE..DIESEL LOCOMOTIVE\n                  // E0.7   [1] (🛳️)       passenger ship\n                  // E3.0   [3] (🛴..🛶)    kick scooter..canoe\n                  // E5.0   [2] (🛷..🛸)    sled..flying saucer\n                  // E11.0  [1] (🛹)       skateboard\n                  // E12.0  [1] (🛺)       auto rickshaw\n                  // E13.0  [2] (🛻..🛼)    pickup truck..roller skate\n                  // E0.0   [3] (🛽..🛿)    <reserved-1F6FD>..<reserved-1F6FF>\n                  if (0x1f680 <= code && code <= 0x1f6ff) {\n                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                  }\n                } else {\n                  // E0.0  [12] (🝴..🝿)    LOT OF FORTUNE..ORCUS\n                  if (0x1f774 <= code && code <= 0x1f77f) {\n                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                  }\n                }\n              }\n            }\n          }\n        } else {\n          if (code < 0x1f8ae) {\n            if (code < 0x1f848) {\n              if (code < 0x1f80c) {\n                // E0.0  [11] (🟕..🟟)    CIRCLED TRIANGLE..<reserved-1F7DF>\n                // E12.0 [12] (🟠..🟫)    orange circle..brown square\n                // E0.0   [4] (🟬..🟯)    <reserved-1F7EC>..<reserved-1F7EF>\n                // E14.0  [1] (🟰)       heavy equals sign\n                // E0.0  [15] (🟱..🟿)    <reserved-1F7F1>..<reserved-1F7FF>\n                if (0x1f7d5 <= code && code <= 0x1f7ff) {\n                  return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                }\n              } else {\n                // E0.0   [4] (🠌..🠏)    <reserved-1F80C>..<reserved-1F80F>\n                if (0x1f80c <= code && code <= 0x1f80f) {\n                  return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                }\n              }\n            } else {\n              if (code < 0x1f85a) {\n                // E0.0   [8] (🡈..🡏)    <reserved-1F848>..<reserved-1F84F>\n                if (0x1f848 <= code && code <= 0x1f84f) {\n                  return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                }\n              } else {\n                if (code < 0x1f888) {\n                  // E0.0   [6] (🡚..🡟)    <reserved-1F85A>..<reserved-1F85F>\n                  if (0x1f85a <= code && code <= 0x1f85f) {\n                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                  }\n                } else {\n                  // E0.0   [8] (🢈..🢏)    <reserved-1F888>..<reserved-1F88F>\n                  if (0x1f888 <= code && code <= 0x1f88f) {\n                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                  }\n                }\n              }\n            }\n          } else {\n            if (code < 0x1f93c) {\n              if (code < 0x1f90c) {\n                // E0.0  [82] (🢮..🣿)    <reserved-1F8AE>..<reserved-1F8FF>\n                if (0x1f8ae <= code && code <= 0x1f8ff) {\n                  return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                }\n              } else {\n                // E13.0  [1] (🤌)       pinched fingers\n                // E12.0  [3] (🤍..🤏)    white heart..pinching hand\n                // E1.0   [9] (🤐..🤘)    zipper-mouth face..sign of the horns\n                // E3.0   [6] (🤙..🤞)    call me hand..crossed fingers\n                // E5.0   [1] (🤟)       love-you gesture\n                // E3.0   [8] (🤠..🤧)    cowboy hat face..sneezing face\n                // E5.0   [8] (🤨..🤯)    face with raised eyebrow..exploding head\n                // E3.0   [1] (🤰)       pregnant woman\n                // E5.0   [2] (🤱..🤲)    breast-feeding..palms up together\n                // E3.0   [8] (🤳..🤺)    selfie..person fencing\n                if (0x1f90c <= code && code <= 0x1f93a) {\n                  return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                }\n              }\n            } else {\n              if (code < 0x1f947) {\n                // E3.0   [3] (🤼..🤾)    people wrestling..person playing handball\n                // E12.0  [1] (🤿)       diving mask\n                // E3.0   [6] (🥀..🥅)    wilted flower..goal net\n                if (0x1f93c <= code && code <= 0x1f945) {\n                  return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                }\n              } else {\n                if (code < 0x1fc00) {\n                  // E3.0   [5] (🥇..🥋)    1st place medal..martial arts uniform\n                  // E5.0   [1] (🥌)       curling stone\n                  // E11.0  [3] (🥍..🥏)    lacrosse..flying disc\n                  // E3.0  [15] (🥐..🥞)    croissant..pancakes\n                  // E5.0  [13] (🥟..🥫)    dumpling..canned food\n                  // E11.0  [5] (🥬..🥰)    leafy green..smiling face with hearts\n                  // E12.0  [1] (🥱)       yawning face\n                  // E13.0  [1] (🥲)       smiling face with tear\n                  // E11.0  [4] (🥳..🥶)    partying face..cold face\n                  // E13.0  [2] (🥷..🥸)    ninja..disguised face\n                  // E14.0  [1] (🥹)       face holding back tears\n                  // E11.0  [1] (🥺)       pleading face\n                  // E12.0  [1] (🥻)       sari\n                  // E11.0  [4] (🥼..🥿)    lab coat..flat shoe\n                  // E1.0   [5] (🦀..🦄)    crab..unicorn\n                  // E3.0  [13] (🦅..🦑)    eagle..squid\n                  // E5.0   [6] (🦒..🦗)    giraffe..cricket\n                  // E11.0 [11] (🦘..🦢)    kangaroo..swan\n                  // E13.0  [2] (🦣..🦤)    mammoth..dodo\n                  // E12.0  [6] (🦥..🦪)    sloth..oyster\n                  // E13.0  [3] (🦫..🦭)    beaver..seal\n                  // E12.0  [2] (🦮..🦯)    guide dog..white cane\n                  // E11.0 [10] (🦰..🦹)    red hair..supervillain\n                  // E12.0  [6] (🦺..🦿)    safety vest..mechanical leg\n                  // E1.0   [1] (🧀)       cheese wedge\n                  // E11.0  [2] (🧁..🧂)    cupcake..salt\n                  // E12.0  [8] (🧃..🧊)    beverage box..ice\n                  // E13.0  [1] (🧋)       bubble tea\n                  // E14.0  [1] (🧌)       troll\n                  // E12.0  [3] (🧍..🧏)    person standing..deaf person\n                  // E5.0  [23] (🧐..🧦)    face with monocle..socks\n                  // E11.0 [25] (🧧..🧿)    red envelope..nazar amulet\n                  // E0.0 [112] (🨀..🩯)    NEUTRAL CHESS KING..<reserved-1FA6F>\n                  // E12.0  [4] (🩰..🩳)    ballet shoes..shorts\n                  // E13.0  [1] (🩴)       thong sandal\n                  // E15.0  [3] (🩵..🩷)    light blue heart..pink heart\n                  // E12.0  [3] (🩸..🩺)    drop of blood..stethoscope\n                  // E14.0  [2] (🩻..🩼)    x-ray..crutch\n                  // E0.0   [3] (🩽..🩿)    <reserved-1FA7D>..<reserved-1FA7F>\n                  // E12.0  [3] (🪀..🪂)    yo-yo..parachute\n                  // E13.0  [4] (🪃..🪆)    boomerang..nesting dolls\n                  // E15.0  [2] (🪇..🪈)    maracas..flute\n                  // E0.0   [7] (🪉..🪏)    <reserved-1FA89>..<reserved-1FA8F>\n                  // E12.0  [6] (🪐..🪕)    ringed planet..banjo\n                  // E13.0 [19] (🪖..🪨)    military helmet..rock\n                  // E14.0  [4] (🪩..🪬)    mirror ball..hamsa\n                  // E15.0  [3] (🪭..🪯)    folding hand fan..khanda\n                  // E13.0  [7] (🪰..🪶)    fly..feather\n                  // E14.0  [4] (🪷..🪺)    lotus..nest with eggs\n                  // E15.0  [3] (🪻..🪽)    hyacinth..wing\n                  // E0.0   [1] (🪾)       <reserved-1FABE>\n                  // E15.0  [1] (🪿)       goose\n                  // E13.0  [3] (🫀..🫂)    anatomical heart..people hugging\n                  // E14.0  [3] (🫃..🫅)    pregnant man..person with crown\n                  // E0.0   [8] (🫆..🫍)    <reserved-1FAC6>..<reserved-1FACD>\n                  // E15.0  [2] (🫎..🫏)    moose..donkey\n                  // E13.0  [7] (🫐..🫖)    blueberries..teapot\n                  // E14.0  [3] (🫗..🫙)    pouring liquid..jar\n                  // E15.0  [2] (🫚..🫛)    ginger root..pea pod\n                  // E0.0   [4] (🫜..🫟)    <reserved-1FADC>..<reserved-1FADF>\n                  // E14.0  [8] (🫠..🫧)    melting face..bubbles\n                  // E15.0  [1] (🫨)       shaking face\n                  // E0.0   [7] (🫩..🫯)    <reserved-1FAE9>..<reserved-1FAEF>\n                  // E14.0  [7] (🫰..🫶)    hand with index finger and thumb crossed..heart hands\n                  // E15.0  [2] (🫷..🫸)    leftwards pushing hand..rightwards pushing hand\n                  // E0.0   [7] (🫹..🫿)    <reserved-1FAF9>..<reserved-1FAFF>\n                  if (0x1f947 <= code && code <= 0x1faff) {\n                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                  }\n                } else {\n                  // E0.0[1022] (🰀..🿽)    <reserved-1FC00>..<reserved-1FFFD>\n                  if (0x1fc00 <= code && code <= 0x1fffd) {\n                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    // unlisted code points are treated as a break property of \"Other\"\n    return boundaries_1.CLUSTER_BREAK.OTHER;\n  }\n}\nexports.default = Graphemer;","\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst Graphemer_1 = __importDefault(require(\"./Graphemer\"));\nexports.default = Graphemer_1.default;","\"use strict\";\n\n;\n(function () {\n  var root = this;\n  var previous_emoji = root.EmojiConvertor;\n\n  /**\n   * @global\n   * @namespace\n   */\n\n  var emoji = function () {\n    var self = this;\n\n    /**\n     * The set of images to use for graphical emoji.\n     *\n     * @memberof emoji\n     * @type {string}\n     */\n    self.img_set = 'apple';\n\n    /**\n     * Configuration details for different image sets. This includes a path to a directory containing the\n     * individual images (`path`) and a URL to sprite sheets (`sheet`). All of these images can be found\n     * in the [emoji-data repository]{@link https://github.com/iamcal/emoji-data}. Using a CDN for these\n     * is not a bad idea.\n     *\n     * @memberof emoji\n     * @type {object}\n     */\n    self.img_sets = {\n      'apple': {\n        'path': '/emoji-data/img-apple-64/',\n        'sheet': '/emoji-data/sheet_apple_64.png',\n        'sheet_size': 64,\n        'mask': 1\n      },\n      'google': {\n        'path': '/emoji-data/img-google-64/',\n        'sheet': '/emoji-data/sheet_google_64.png',\n        'sheet_size': 64,\n        'mask': 2\n      },\n      'twitter': {\n        'path': '/emoji-data/img-twitter-64/',\n        'sheet': '/emoji-data/sheet_twitter_64.png',\n        'sheet_size': 64,\n        'mask': 4\n      },\n      'facebook': {\n        'path': '/emoji-data/img-facebook-64/',\n        'sheet': '/emoji-data/sheet_facebook_64.png',\n        'sheet_size': 64,\n        'mask': 8\n      }\n    };\n\n    /**\n     * Use a CSS class instead of specifying a sprite or background image for\n     * the span representing the emoticon. This requires a CSS sheet with\n     * emoticon data-uris.\n     *\n     * @memberof emoji\n     * @type bool\n     * @todo document how to build the CSS stylesheet self requires.\n     */\n    self.use_css_imgs = false;\n\n    /**\n     * Instead of replacing emoticons with the appropriate representations,\n     * replace them with their colon string representation.\n     * @memberof emoji\n     * @type bool\n     */\n    self.colons_mode = false;\n    self.text_mode = false;\n\n    /**\n     * If true, sets the \"title\" property on the span or image that gets\n     * inserted for the emoticon.\n     * @memberof emoji\n     * @type bool\n     */\n    self.include_title = false;\n\n    /**\n     * If true, sets the text of the span or image that gets inserted for the\n     * emoticon.\n     * @memberof emoji\n     * @type bool\n     */\n    self.include_text = false;\n\n    /**\n     * If the platform supports native emoticons, use those instead\n     * of the fallbacks.\n     * @memberof emoji\n     * @type bool\n     */\n    self.allow_native = true;\n\n    /**\n     * Wrap native with a <span class=\"emoji-native\"></span> to allow styling\n     * @memberof emoji\n     * @type bool\n     */\n    self.wrap_native = false;\n\n    /**\n     * Set to true to use CSS sprites instead of individual images on\n     * platforms that support it.\n     *\n     * @memberof emoji\n     * @type bool\n     */\n    self.use_sheet = false;\n\n    /**\n     *\n     * Set to true to avoid black & white native Windows emoji being used.\n     *\n     * @memberof emoji\n     * @type bool\n     */\n    self.avoid_ms_emoji = true;\n\n    /**\n     *\n     * Set to true to allow :CAPITALIZATION:\n     *\n     * @memberof emoji\n     * @type bool\n     */\n    self.allow_caps = false;\n\n    /**\n     *\n     * Suffix to allow for individual image cache busting\n     *\n     * @memberof emoji\n     * @type string\n     */\n    self.img_suffix = '';\n\n    // Keeps track of what has been initialized.\n    /** @private */\n    self.inits = {};\n    self.map = {};\n\n    // discover the environment settings\n    self.init_env();\n    return self;\n  };\n  emoji.prototype.noConflict = function () {\n    root.EmojiConvertor = previous_emoji;\n    return emoji;\n  };\n\n  /**\n   * @memberof emoji\n   * @param {string} str A string potentially containing ascii emoticons\n   * (ie. `:)`)\n   *\n   * @returns {string} A new string with all emoticons in `str`\n   * replaced by a representatation that's supported by the current\n   * environtment.\n   */\n  emoji.prototype.replace_emoticons = function (str) {\n    var self = this;\n    var colonized = self.replace_emoticons_with_colons(str);\n    return self.replace_colons(colonized);\n  };\n\n  /**\n   * @memberof emoji\n   * @param {string} str A string potentially containing ascii emoticons\n   * (ie. `:)`)\n   *\n   * @returns {string} A new string with all emoticons in `str`\n   * replaced by their colon string representations (ie. `:smile:`)\n   */\n  emoji.prototype.replace_emoticons_with_colons = function (str) {\n    var self = this;\n    self.init_emoticons();\n    var _prev_offset = 0;\n    var emoticons_with_parens = [];\n    var str_replaced = str.replace(self.rx_emoticons, function (m, $1, emoticon, offset) {\n      var prev_offset = _prev_offset;\n      _prev_offset = offset + m.length;\n      var has_open_paren = emoticon.indexOf('(') !== -1;\n      var has_close_paren = emoticon.indexOf(')') !== -1;\n\n      /*\n       * Track paren-having emoticons for fixing later\n       */\n      if ((has_open_paren || has_close_paren) && emoticons_with_parens.indexOf(emoticon) == -1) {\n        emoticons_with_parens.push(emoticon);\n      }\n\n      /*\n       * Look for preceding open paren for emoticons that contain a close paren\n       * This prevents matching \"8)\" inside \"(around 7 - 8)\"\n       */\n      if (has_close_paren && !has_open_paren) {\n        var piece = str.substring(prev_offset, offset);\n        if (piece.indexOf('(') !== -1 && piece.indexOf(')') === -1) return m;\n      }\n\n      /*\n       * See if we're in a numbered list\n       * This prevents matching \"8)\" inside \"7) foo\\n8) bar\"\n       */\n      if (m === '\\n8)') {\n        var before_match = str.substring(0, offset);\n        if (/\\n?(6\\)|7\\))/.test(before_match)) return m;\n      }\n      var val = self.data[self.map.emoticons[emoticon]][3][0];\n      return val ? $1 + ':' + val + ':' : m;\n    });\n\n    /*\n     * Come back and fix emoticons we ignored because they were inside parens.\n     * It's useful to do self at the end so we don't get tripped up by other,\n     * normal emoticons\n     */\n    if (emoticons_with_parens.length) {\n      var escaped_emoticons = emoticons_with_parens.map(self.escape_rx);\n      var parenthetical_rx = new RegExp('(\\\\(.+)(' + escaped_emoticons.join('|') + ')(.+\\\\))', 'g');\n      str_replaced = str_replaced.replace(parenthetical_rx, function (m, $1, emoticon, $2) {\n        var val = self.data[self.map.emoticons[emoticon]][3][0];\n        return val ? $1 + ':' + val + ':' + $2 : m;\n      });\n    }\n    return str_replaced;\n  };\n\n  /**\n   * @memberof emoji\n   * @param {string} str A string potentially containing colon string\n   * representations of emoticons (ie. `:smile:`)\n   *\n   * @returns {string} A new string with all colon string emoticons replaced\n   * with the appropriate representation.\n   */\n  emoji.prototype.replace_colons = function (str) {\n    var self = this;\n    self.init_colons();\n    return str.replace(self.rx_colons, function (m) {\n      var idx = m.substr(1, m.length - 2);\n      if (self.allow_caps) idx = idx.toLowerCase();\n\n      // special case - an emoji with a skintone modified\n      if (idx.indexOf('::skin-tone-') > -1) {\n        var skin_tone = idx.substr(-1, 1);\n        var skin_idx = 'skin-tone-' + skin_tone;\n        var skin_val = self.map.colons[skin_idx];\n        idx = idx.substr(0, idx.length - 13);\n        var val = self.map.colons[idx];\n        if (val) {\n          return self.replacement(val, idx, ':', {\n            'idx': skin_val,\n            'actual': skin_idx,\n            'wrapper': ':'\n          });\n        } else {\n          return ':' + idx + ':' + self.replacement(skin_val, skin_idx, ':');\n        }\n      } else {\n        var val = self.map.colons[idx];\n        return val ? self.replacement(val, idx, ':') : m;\n      }\n    });\n  };\n\n  /**\n   * @memberof emoji\n   * @param {string} str A string potentially containing unified unicode\n   * emoticons. (ie. 😄)\n   *\n   * @returns {string} A new string with all unicode emoticons replaced with\n   * the appropriate representation for the current environment.\n   */\n  emoji.prototype.replace_unified = function (str) {\n    var self = this;\n    self.init_unified();\n    return str.replace(self.rx_unified, function (m, p1, p2) {\n      var val = self.map.unified[p1];\n      if (val) {\n        var idx = null;\n        if (p2 == '\\uD83C\\uDFFB') idx = '1f3fb';\n        if (p2 == '\\uD83C\\uDFFC') idx = '1f3fc';\n        if (p2 == '\\uD83C\\uDFFD') idx = '1f3fd';\n        if (p2 == '\\uD83C\\uDFFE') idx = '1f3fe';\n        if (p2 == '\\uD83C\\uDFFF') idx = '1f3ff';\n        if (idx) {\n          return self.replacement(val, null, null, {\n            idx: idx,\n            actual: p2,\n            wrapper: ''\n          });\n        }\n        return self.replacement(val);\n      }\n      val = self.map.unified_vars[p1];\n      if (val) {\n        return self.replacement(val[0], null, null, {\n          'idx': val[1],\n          'actual': '',\n          'wrapper': ''\n        });\n      }\n      return m;\n    });\n  };\n  emoji.prototype.addAliases = function (map) {\n    var self = this;\n    self.init_colons();\n    for (var i in map) {\n      self.map.colons[i] = map[i];\n    }\n  };\n  emoji.prototype.removeAliases = function (list) {\n    var self = this;\n    for (var i = 0; i < list.length; i++) {\n      var alias = list[i];\n\n      // first, delete the alias mapping\n      delete self.map.colons[alias];\n\n      // now reset it to the default, if one exists\n      finder_block: {\n        for (var j in self.data) {\n          for (var k = 0; k < self.data[j][3].length; k++) {\n            if (alias == self.data[j][3][k]) {\n              self.map.colons[alias] = j;\n              break finder_block;\n            }\n          }\n        }\n      }\n    }\n  };\n\n  // Does the actual replacement of a character with the appropriate\n  /** @private */\n  emoji.prototype.replacement = function (idx, actual, wrapper, variation, is_extra) {\n    var self = this;\n    var full_idx = idx;\n\n    // for emoji with variation modifiers, set `extra` to the standalone output for the\n    // modifier (used if we can't combine the glyph) and set variation_idx to key of the\n    // variation modifier (used below)\n    var extra = '';\n    var var_idx = null;\n    if (typeof variation === 'object') {\n      extra = self.replacement(variation.idx, variation.actual, variation.wrapper, undefined, true);\n      var_idx = variation.idx;\n    }\n\n    // deal with simple modes (colons and text) first\n    wrapper = wrapper || '';\n    if (self.colons_mode) return ':' + self.data[idx][3][0] + ':' + extra;\n    var text_name = actual ? wrapper + actual + wrapper : self.data[idx][8] || wrapper + self.data[idx][3][0] + wrapper;\n    if (self.text_mode) return text_name + extra;\n\n    // figure out which images and code points to use, based on the skin variations. this information is also used for\n    // unified native output mode\n    var img = self.find_image(idx, var_idx);\n\n    // native modes next.\n    // for variations selectors, we just need to output them raw, which `extra` will contain. since softbank and google don't\n    // support skin variations, we'll keep `extra` around, every if we have a valid variation selector\n    self.init_env();\n    if (self.replace_mode == 'softbank' && self.allow_native && self.data[idx][1]) return self.format_native(self.data[idx][1] + extra, !is_extra);\n    if (self.replace_mode == 'google' && self.allow_native && self.data[idx][2]) return self.format_native(self.data[idx][2] + extra, !is_extra);\n\n    // for unified (and images, below), we can use the variation info and throw away the `extra` contents\n    if (img.is_var) {\n      extra = '';\n    }\n    if (self.replace_mode == 'unified' && self.allow_native) return self.format_native(img.unified + extra, !is_extra);\n\n    // finally deal with image modes.\n    // the call to .find_image() earlier checked if the image set and particular emoji supports variations,\n    // otherwise we can return it as a separate image (already calculated in `extra`).\n    // first we set up the params we'll use if we can't use a variation.\n    var title = self.include_title ? ' title=\"' + (actual || self.data[idx][3][0]) + '\"' : '';\n    var text = self.include_text ? wrapper + (actual || self.data[idx][3][0]) + wrapper : '';\n\n    // custom image for this glyph?\n    if (self.data[idx][7]) {\n      img.path = self.data[idx][7];\n      img.px = null;\n      img.py = null;\n      img.is_var = false;\n    }\n\n    // if we're displaying a variation, include it in the text\n    if (img.is_var && self.include_text && variation && variation.actual && variation.wrapper) {\n      text += variation.wrapper + variation.actual + variation.wrapper;\n    }\n\n    // output\n    if (self.replace_mode == 'css') {\n      if (self.use_sheet && img.px != null && img.py != null) {\n        // simplified calculation of `100 * (position * sprite_size) / ( (sheet_size * sprite_size) - sprite_size )`\n        var sheet_x = 100 * img.px / (self.sheet_size - 1);\n        var sheet_y = 100 * img.py / (self.sheet_size - 1);\n        var sheet_sz = 100 * self.sheet_size;\n        var style = 'background: url(' + img.sheet + ');background-position:' + sheet_x + '% ' + sheet_y + '%;background-size:' + sheet_sz + '% ' + sheet_sz + '%';\n        return '<span class=\"emoji-outer emoji-sizer\"><span class=\"emoji-inner\" style=\"' + style + '\"' + title + ' data-codepoints=\"' + img.full_idx + '\">' + text + '</span></span>' + extra;\n      } else if (self.use_css_imgs) {\n        return '<span class=\"emoji emoji-' + idx + '\"' + title + ' data-codepoints=\"' + img.full_idx + '\">' + text + '</span>' + extra;\n      } else {\n        return '<span class=\"emoji emoji-sizer\" style=\"background-image:url(' + img.path + ')\"' + title + ' data-codepoints=\"' + img.full_idx + '\">' + text + '</span>' + extra;\n      }\n    }\n    return '<img src=\"' + img.path + '\" class=\"emoji\" data-codepoints=\"' + img.full_idx + '\" ' + title + '/>' + extra;\n  };\n\n  // Wraps the output of a native endpoint, if configured\n  /** @private */\n  emoji.prototype.format_native = function (native, allow_wrap) {\n    var self = this;\n    if (self.wrap_native && allow_wrap) {\n      return '<span class=\"emoji-native\">' + native + '</span>';\n    }\n    return native;\n  };\n\n  // Finds the best image to display, taking into account image set precedence and obsoletes\n  /** @private */\n  emoji.prototype.find_image = function (idx, var_idx) {\n    var self = this;\n\n    // set up some initial state\n    var out = {\n      'path': '',\n      'sheet': '',\n      'sheet_size': 0,\n      'px': self.data[idx][4],\n      'py': self.data[idx][5],\n      'full_idx': idx,\n      'is_var': false,\n      'unified': self.data[idx][0][0]\n    };\n    var use_mask = self.data[idx][6];\n\n    // can we use a variation?\n    if (var_idx && self.variations_data[idx] && self.variations_data[idx][var_idx]) {\n      var var_data = self.variations_data[idx][var_idx];\n      out.px = var_data[1];\n      out.py = var_data[2];\n      out.full_idx = var_data[0];\n      out.is_var = true;\n      out.unified = var_data[4][0];\n      use_mask = var_data[3];\n    }\n\n    // this matches `build/build_image.php` `in emoji-data`, so that sheet and images modes always\n    // agree about the image to use.\n    var try_order = [self.img_set, 'apple', 'google', 'twitter', 'facebook', 'messenger'];\n\n    // for each image set, see if we have the image we need. otherwise check for an obsolete in\n    // that image set\n    for (var j = 0; j < try_order.length; j++) {\n      // check we haven't passed in a bad value for img_set, or messed up the img_sets hash\n      if (!self.img_sets[try_order[j]]) {\n        throw Error(\"Invalid value for img_set\");\n      }\n      if (use_mask & self.img_sets[try_order[j]].mask) {\n        out.path = self.img_sets[try_order[j]].path + out.full_idx + '.png' + self.img_suffix;\n        // if we're not changing glyph, use our base set for sheets - it has every glyph\n        out.sheet = self.img_sets[self.img_set].sheet;\n        out.sheet_size = self.img_sets[self.img_set].sheet_size;\n        return out;\n      }\n      if (self.obsoletes_data[out.full_idx]) {\n        var ob_data = self.obsoletes_data[out.full_idx];\n        if (ob_data[3] & self.img_sets[try_order[j]].mask) {\n          out.path = self.img_sets[try_order[j]].path + ob_data[0] + '.png' + self.img_suffix;\n          out.sheet = self.img_sets[try_order[j]].sheet;\n          out.sheet_size = self.img_sets[try_order[j]].sheet_size;\n          out.px = ob_data[1];\n          out.py = ob_data[2];\n          return out;\n        }\n      }\n    }\n    return out;\n  };\n\n  // Initializes the text emoticon data\n  /** @private */\n  emoji.prototype.init_emoticons = function () {\n    var self = this;\n    if (self.inits.emoticons) return;\n    self.init_colons(); // we require this for the emoticons map\n    self.inits.emoticons = 1;\n    var a = [];\n    self.map.emoticons = {};\n    for (var i in self.emoticons_data) {\n      // because we never see some characters in our text except as entities, we must do some replacing\n      var emoticon = i.replace(/\\&/g, '&amp;').replace(/\\</g, '&lt;').replace(/\\>/g, '&gt;');\n      if (!self.map.colons[self.emoticons_data[i]]) continue;\n      self.map.emoticons[emoticon] = self.map.colons[self.emoticons_data[i]];\n      a.push(self.escape_rx(emoticon));\n    }\n    self.rx_emoticons = new RegExp('(^|\\\\s)(' + a.join('|') + ')(?=$|[\\\\s|\\\\?\\\\.,!])', 'g');\n  };\n\n  // Initializes the colon string data\n  /** @private */\n  emoji.prototype.init_colons = function () {\n    var self = this;\n    if (self.inits.colons) return;\n    self.inits.colons = 1;\n    self.rx_colons = new RegExp('\\:[a-zA-Z0-9-_+]+\\:(\\:skin-tone-[2-6]\\:)?', 'g');\n    self.map.colons = {};\n    for (var i in self.data) {\n      for (var j = 0; j < self.data[i][3].length; j++) {\n        self.map.colons[self.data[i][3][j]] = i;\n      }\n    }\n  };\n\n  // initializes the unified unicode emoticon data\n  /** @private */\n  emoji.prototype.init_unified = function () {\n    var self = this;\n    if (self.inits.unified) return;\n    self.inits.unified = 1;\n    var a = [];\n    self.map.unified = {};\n    self.map.unified_vars = {};\n    for (var i in self.data) {\n      for (var j = 0; j < self.data[i][0].length; j++) {\n        a.push(self.data[i][0][j].replace('*', '\\\\*'));\n        self.map.unified[self.data[i][0][j]] = i;\n      }\n    }\n    for (var i in self.variations_data) {\n      // skip simple append-style skin tones\n      if (self.variations_data[i]['1f3fb']) {\n        if (self.variations_data[i]['1f3fb'][0] == i + '-1f3fb') continue;\n      }\n      for (var k in self.variations_data[i]) {\n        for (var j = 0; j < self.variations_data[i][k][4].length; j++) {\n          a.push(self.variations_data[i][k][4][j].replace('*', '\\\\*'));\n          self.map.unified_vars[self.variations_data[i][k][4][j]] = [i, k];\n        }\n      }\n    }\n    a = a.sort(function (a, b) {\n      return b.length - a.length;\n    });\n    self.rx_unified = new RegExp('(' + a.join('|') + ')(\\uD83C[\\uDFFB-\\uDFFF])?', \"g\");\n  };\n\n  // initializes the environment, figuring out what representation\n  // of emoticons is best.\n  /** @private */\n  emoji.prototype.init_env = function () {\n    var self = this;\n    if (self.inits.env) return;\n    self.inits.env = 1;\n    self.replace_mode = 'img';\n    var supports_css = false;\n    if (typeof navigator !== 'undefined' && \"userAgent\" in navigator) {\n      var ua = navigator.userAgent;\n      if (typeof window !== 'undefined' && window.getComputedStyle) {\n        try {\n          var st = window.getComputedStyle(document.body);\n          if (st['background-size'] || st['backgroundSize']) {\n            supports_css = true;\n          }\n        } catch (e) {\n          // Swallow an exception caused by hidden iFrames on Firefox\n          // https://github.com/iamcal/js-emoji/issues/73\n          if (ua.match(/Firefox/i)) {\n            supports_css = true;\n          }\n        }\n      }\n      if (\"product\" in navigator) {\n        if (/ReactNative/i.test(navigator.product)) {\n          self.replace_mode = 'unified';\n          return;\n        }\n      }\n      if (ua.match(/(iPhone|iPod|iPad|iPhone\\s+Simulator)/i)) {\n        if (ua.match(/OS\\s+[12345]/i)) {\n          self.replace_mode = 'softbank';\n          return;\n        }\n        if (ua.match(/OS\\s+[6789]/i)) {\n          self.replace_mode = 'unified';\n          return;\n        }\n      }\n      if (ua.match(/Mac OS X (10[._ ](?:[789]|1)|11[._ ]\\d)/i)) {\n        self.replace_mode = 'unified';\n        return;\n      }\n      if (!self.avoid_ms_emoji) {\n        if (ua.match(/Windows NT 6.[1-9]/i) || ua.match(/Windows NT 10.[0-9]/i)) {\n          if (!ua.match(/Chrome/i) && !ua.match(/MSIE 8/i)) {\n            self.replace_mode = 'unified';\n            return;\n          }\n        }\n      }\n    }\n\n    // Need a better way to detect android devices that actually\n    // support emoji.\n    if (false && ua.match(/Android/i)) {\n      self.replace_mode = 'google';\n      return;\n    }\n    if (supports_css) {\n      self.replace_mode = 'css';\n      return;\n    }\n    // nothing fancy detected - use images\n  };\n  /** @private */\n  emoji.prototype.escape_rx = function (text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n  };\n  emoji.prototype.sheet_size = 61;\n  /** @private */\n  emoji.prototype.data = {\n    \"0023-fe0f-20e3\": [[\"\\u0023\\uFE0F\\u20E3\", \"\\u0023\\u20E3\"], \"\\uE210\", \"\\uDBBA\\uDC2C\", [\"hash\"], 0, 0, 7, 0],\n    \"002a-fe0f-20e3\": [[\"\\u002A\\uFE0F\\u20E3\", \"\\u002A\\u20E3\"], \"\", \"\", [\"keycap_star\"], 0, 1, 7, 0],\n    \"0030-fe0f-20e3\": [[\"\\u0030\\uFE0F\\u20E3\", \"\\u0030\\u20E3\"], \"\\uE225\", \"\\uDBBA\\uDC37\", [\"zero\"], 0, 2, 7, 0],\n    \"0031-fe0f-20e3\": [[\"\\u0031\\uFE0F\\u20E3\", \"\\u0031\\u20E3\"], \"\\uE21C\", \"\\uDBBA\\uDC2E\", [\"one\"], 0, 3, 7, 0],\n    \"0032-fe0f-20e3\": [[\"\\u0032\\uFE0F\\u20E3\", \"\\u0032\\u20E3\"], \"\\uE21D\", \"\\uDBBA\\uDC2F\", [\"two\"], 0, 4, 7, 0],\n    \"0033-fe0f-20e3\": [[\"\\u0033\\uFE0F\\u20E3\", \"\\u0033\\u20E3\"], \"\\uE21E\", \"\\uDBBA\\uDC30\", [\"three\"], 0, 5, 7, 0],\n    \"0034-fe0f-20e3\": [[\"\\u0034\\uFE0F\\u20E3\", \"\\u0034\\u20E3\"], \"\\uE21F\", \"\\uDBBA\\uDC31\", [\"four\"], 0, 6, 7, 0],\n    \"0035-fe0f-20e3\": [[\"\\u0035\\uFE0F\\u20E3\", \"\\u0035\\u20E3\"], \"\\uE220\", \"\\uDBBA\\uDC32\", [\"five\"], 0, 7, 7, 0],\n    \"0036-fe0f-20e3\": [[\"\\u0036\\uFE0F\\u20E3\", \"\\u0036\\u20E3\"], \"\\uE221\", \"\\uDBBA\\uDC33\", [\"six\"], 0, 8, 7, 0],\n    \"0037-fe0f-20e3\": [[\"\\u0037\\uFE0F\\u20E3\", \"\\u0037\\u20E3\"], \"\\uE222\", \"\\uDBBA\\uDC34\", [\"seven\"], 0, 9, 7, 0],\n    \"0038-fe0f-20e3\": [[\"\\u0038\\uFE0F\\u20E3\", \"\\u0038\\u20E3\"], \"\\uE223\", \"\\uDBBA\\uDC35\", [\"eight\"], 0, 10, 7, 0],\n    \"0039-fe0f-20e3\": [[\"\\u0039\\uFE0F\\u20E3\", \"\\u0039\\u20E3\"], \"\\uE224\", \"\\uDBBA\\uDC36\", [\"nine\"], 0, 11, 7, 0],\n    \"00a9-fe0f\": [[\"\\u00A9\\uFE0F\", \"\\u00A9\"], \"\\uE24E\", \"\\uDBBA\\uDF29\", [\"copyright\"], 0, 12, 7, 0],\n    \"00ae-fe0f\": [[\"\\u00AE\\uFE0F\", \"\\u00AE\"], \"\\uE24F\", \"\\uDBBA\\uDF2D\", [\"registered\"], 0, 13, 7, 0],\n    \"1f004\": [[\"\\uD83C\\uDC04\"], \"\\uE12D\", \"\\uDBBA\\uDC0B\", [\"mahjong\"], 0, 14, 15, 0],\n    \"1f0cf\": [[\"\\uD83C\\uDCCF\"], \"\", \"\\uDBBA\\uDC12\", [\"black_joker\"], 0, 15, 15, 0],\n    \"1f170-fe0f\": [[\"\\uD83C\\uDD70\\uFE0F\", \"\\uD83C\\uDD70\"], \"\\uE532\", \"\\uDBB9\\uDD0B\", [\"a\"], 0, 16, 15, 0],\n    \"1f171-fe0f\": [[\"\\uD83C\\uDD71\\uFE0F\", \"\\uD83C\\uDD71\"], \"\\uE533\", \"\\uDBB9\\uDD0C\", [\"b\"], 0, 17, 15, 0],\n    \"1f17e-fe0f\": [[\"\\uD83C\\uDD7E\\uFE0F\", \"\\uD83C\\uDD7E\"], \"\\uE535\", \"\\uDBB9\\uDD0E\", [\"o2\"], 0, 18, 15, 0],\n    \"1f17f-fe0f\": [[\"\\uD83C\\uDD7F\\uFE0F\", \"\\uD83C\\uDD7F\"], \"\\uE14F\", \"\\uDBB9\\uDFF6\", [\"parking\"], 0, 19, 15, 0],\n    \"1f18e\": [[\"\\uD83C\\uDD8E\"], \"\\uE534\", \"\\uDBB9\\uDD0D\", [\"ab\"], 0, 20, 15, 0],\n    \"1f191\": [[\"\\uD83C\\uDD91\"], \"\", \"\\uDBBA\\uDF84\", [\"cl\"], 0, 21, 15, 0],\n    \"1f192\": [[\"\\uD83C\\uDD92\"], \"\\uE214\", \"\\uDBBA\\uDF38\", [\"cool\"], 0, 22, 15, 0],\n    \"1f193\": [[\"\\uD83C\\uDD93\"], \"\", \"\\uDBBA\\uDF21\", [\"free\"], 0, 23, 15, 0],\n    \"1f194\": [[\"\\uD83C\\uDD94\"], \"\\uE229\", \"\\uDBBA\\uDF81\", [\"id\"], 0, 24, 15, 0],\n    \"1f195\": [[\"\\uD83C\\uDD95\"], \"\\uE212\", \"\\uDBBA\\uDF36\", [\"new\"], 0, 25, 15, 0],\n    \"1f196\": [[\"\\uD83C\\uDD96\"], \"\", \"\\uDBBA\\uDF28\", [\"ng\"], 0, 26, 15, 0],\n    \"1f197\": [[\"\\uD83C\\uDD97\"], \"\\uE24D\", \"\\uDBBA\\uDF27\", [\"ok\"], 0, 27, 15, 0],\n    \"1f198\": [[\"\\uD83C\\uDD98\"], \"\", \"\\uDBBA\\uDF4F\", [\"sos\"], 0, 28, 15, 0],\n    \"1f199\": [[\"\\uD83C\\uDD99\"], \"\\uE213\", \"\\uDBBA\\uDF37\", [\"up\"], 0, 29, 15, 0],\n    \"1f19a\": [[\"\\uD83C\\uDD9A\"], \"\\uE12E\", \"\\uDBBA\\uDF32\", [\"vs\"], 0, 30, 15, 0],\n    \"1f1e6-1f1e8\": [[\"\\uD83C\\uDDE6\\uD83C\\uDDE8\"], \"\", \"\", [\"flag-ac\"], 0, 31, 15, 0],\n    \"1f1e6-1f1e9\": [[\"\\uD83C\\uDDE6\\uD83C\\uDDE9\"], \"\", \"\", [\"flag-ad\"], 0, 32, 15, 0],\n    \"1f1e6-1f1ea\": [[\"\\uD83C\\uDDE6\\uD83C\\uDDEA\"], \"\", \"\", [\"flag-ae\"], 0, 33, 15, 0],\n    \"1f1e6-1f1eb\": [[\"\\uD83C\\uDDE6\\uD83C\\uDDEB\"], \"\", \"\", [\"flag-af\"], 0, 34, 15, 0],\n    \"1f1e6-1f1ec\": [[\"\\uD83C\\uDDE6\\uD83C\\uDDEC\"], \"\", \"\", [\"flag-ag\"], 0, 35, 15, 0],\n    \"1f1e6-1f1ee\": [[\"\\uD83C\\uDDE6\\uD83C\\uDDEE\"], \"\", \"\", [\"flag-ai\"], 0, 36, 15, 0],\n    \"1f1e6-1f1f1\": [[\"\\uD83C\\uDDE6\\uD83C\\uDDF1\"], \"\", \"\", [\"flag-al\"], 0, 37, 15, 0],\n    \"1f1e6-1f1f2\": [[\"\\uD83C\\uDDE6\\uD83C\\uDDF2\"], \"\", \"\", [\"flag-am\"], 0, 38, 15, 0],\n    \"1f1e6-1f1f4\": [[\"\\uD83C\\uDDE6\\uD83C\\uDDF4\"], \"\", \"\", [\"flag-ao\"], 0, 39, 15, 0],\n    \"1f1e6-1f1f6\": [[\"\\uD83C\\uDDE6\\uD83C\\uDDF6\"], \"\", \"\", [\"flag-aq\"], 0, 40, 15, 0],\n    \"1f1e6-1f1f7\": [[\"\\uD83C\\uDDE6\\uD83C\\uDDF7\"], \"\", \"\", [\"flag-ar\"], 0, 41, 15, 0],\n    \"1f1e6-1f1f8\": [[\"\\uD83C\\uDDE6\\uD83C\\uDDF8\"], \"\", \"\", [\"flag-as\"], 0, 42, 15, 0],\n    \"1f1e6-1f1f9\": [[\"\\uD83C\\uDDE6\\uD83C\\uDDF9\"], \"\", \"\", [\"flag-at\"], 0, 43, 15, 0],\n    \"1f1e6-1f1fa\": [[\"\\uD83C\\uDDE6\\uD83C\\uDDFA\"], \"\", \"\", [\"flag-au\"], 0, 44, 15, 0],\n    \"1f1e6-1f1fc\": [[\"\\uD83C\\uDDE6\\uD83C\\uDDFC\"], \"\", \"\", [\"flag-aw\"], 0, 45, 15, 0],\n    \"1f1e6-1f1fd\": [[\"\\uD83C\\uDDE6\\uD83C\\uDDFD\"], \"\", \"\", [\"flag-ax\"], 0, 46, 15, 0],\n    \"1f1e6-1f1ff\": [[\"\\uD83C\\uDDE6\\uD83C\\uDDFF\"], \"\", \"\", [\"flag-az\"], 0, 47, 15, 0],\n    \"1f1e7-1f1e6\": [[\"\\uD83C\\uDDE7\\uD83C\\uDDE6\"], \"\", \"\", [\"flag-ba\"], 0, 48, 15, 0],\n    \"1f1e7-1f1e7\": [[\"\\uD83C\\uDDE7\\uD83C\\uDDE7\"], \"\", \"\", [\"flag-bb\"], 0, 49, 15, 0],\n    \"1f1e7-1f1e9\": [[\"\\uD83C\\uDDE7\\uD83C\\uDDE9\"], \"\", \"\", [\"flag-bd\"], 0, 50, 15, 0],\n    \"1f1e7-1f1ea\": [[\"\\uD83C\\uDDE7\\uD83C\\uDDEA\"], \"\", \"\", [\"flag-be\"], 0, 51, 15, 0],\n    \"1f1e7-1f1eb\": [[\"\\uD83C\\uDDE7\\uD83C\\uDDEB\"], \"\", \"\", [\"flag-bf\"], 0, 52, 15, 0],\n    \"1f1e7-1f1ec\": [[\"\\uD83C\\uDDE7\\uD83C\\uDDEC\"], \"\", \"\", [\"flag-bg\"], 0, 53, 15, 0],\n    \"1f1e7-1f1ed\": [[\"\\uD83C\\uDDE7\\uD83C\\uDDED\"], \"\", \"\", [\"flag-bh\"], 0, 54, 15, 0],\n    \"1f1e7-1f1ee\": [[\"\\uD83C\\uDDE7\\uD83C\\uDDEE\"], \"\", \"\", [\"flag-bi\"], 0, 55, 15, 0],\n    \"1f1e7-1f1ef\": [[\"\\uD83C\\uDDE7\\uD83C\\uDDEF\"], \"\", \"\", [\"flag-bj\"], 0, 56, 15, 0],\n    \"1f1e7-1f1f1\": [[\"\\uD83C\\uDDE7\\uD83C\\uDDF1\"], \"\", \"\", [\"flag-bl\"], 0, 57, 15, 0],\n    \"1f1e7-1f1f2\": [[\"\\uD83C\\uDDE7\\uD83C\\uDDF2\"], \"\", \"\", [\"flag-bm\"], 0, 58, 15, 0],\n    \"1f1e7-1f1f3\": [[\"\\uD83C\\uDDE7\\uD83C\\uDDF3\"], \"\", \"\", [\"flag-bn\"], 0, 59, 15, 0],\n    \"1f1e7-1f1f4\": [[\"\\uD83C\\uDDE7\\uD83C\\uDDF4\"], \"\", \"\", [\"flag-bo\"], 0, 60, 15, 0],\n    \"1f1e7-1f1f6\": [[\"\\uD83C\\uDDE7\\uD83C\\uDDF6\"], \"\", \"\", [\"flag-bq\"], 1, 0, 15, 0],\n    \"1f1e7-1f1f7\": [[\"\\uD83C\\uDDE7\\uD83C\\uDDF7\"], \"\", \"\", [\"flag-br\"], 1, 1, 15, 0],\n    \"1f1e7-1f1f8\": [[\"\\uD83C\\uDDE7\\uD83C\\uDDF8\"], \"\", \"\", [\"flag-bs\"], 1, 2, 15, 0],\n    \"1f1e7-1f1f9\": [[\"\\uD83C\\uDDE7\\uD83C\\uDDF9\"], \"\", \"\", [\"flag-bt\"], 1, 3, 15, 0],\n    \"1f1e7-1f1fb\": [[\"\\uD83C\\uDDE7\\uD83C\\uDDFB\"], \"\", \"\", [\"flag-bv\"], 1, 4, 15, 0],\n    \"1f1e7-1f1fc\": [[\"\\uD83C\\uDDE7\\uD83C\\uDDFC\"], \"\", \"\", [\"flag-bw\"], 1, 5, 15, 0],\n    \"1f1e7-1f1fe\": [[\"\\uD83C\\uDDE7\\uD83C\\uDDFE\"], \"\", \"\", [\"flag-by\"], 1, 6, 15, 0],\n    \"1f1e7-1f1ff\": [[\"\\uD83C\\uDDE7\\uD83C\\uDDFF\"], \"\", \"\", [\"flag-bz\"], 1, 7, 15, 0],\n    \"1f1e8-1f1e6\": [[\"\\uD83C\\uDDE8\\uD83C\\uDDE6\"], \"\", \"\", [\"flag-ca\"], 1, 8, 15, 0],\n    \"1f1e8-1f1e8\": [[\"\\uD83C\\uDDE8\\uD83C\\uDDE8\"], \"\", \"\", [\"flag-cc\"], 1, 9, 15, 0],\n    \"1f1e8-1f1e9\": [[\"\\uD83C\\uDDE8\\uD83C\\uDDE9\"], \"\", \"\", [\"flag-cd\"], 1, 10, 15, 0],\n    \"1f1e8-1f1eb\": [[\"\\uD83C\\uDDE8\\uD83C\\uDDEB\"], \"\", \"\", [\"flag-cf\"], 1, 11, 15, 0],\n    \"1f1e8-1f1ec\": [[\"\\uD83C\\uDDE8\\uD83C\\uDDEC\"], \"\", \"\", [\"flag-cg\"], 1, 12, 15, 0],\n    \"1f1e8-1f1ed\": [[\"\\uD83C\\uDDE8\\uD83C\\uDDED\"], \"\", \"\", [\"flag-ch\"], 1, 13, 15, 0],\n    \"1f1e8-1f1ee\": [[\"\\uD83C\\uDDE8\\uD83C\\uDDEE\"], \"\", \"\", [\"flag-ci\"], 1, 14, 15, 0],\n    \"1f1e8-1f1f0\": [[\"\\uD83C\\uDDE8\\uD83C\\uDDF0\"], \"\", \"\", [\"flag-ck\"], 1, 15, 15, 0],\n    \"1f1e8-1f1f1\": [[\"\\uD83C\\uDDE8\\uD83C\\uDDF1\"], \"\", \"\", [\"flag-cl\"], 1, 16, 15, 0],\n    \"1f1e8-1f1f2\": [[\"\\uD83C\\uDDE8\\uD83C\\uDDF2\"], \"\", \"\", [\"flag-cm\"], 1, 17, 15, 0],\n    \"1f1e8-1f1f3\": [[\"\\uD83C\\uDDE8\\uD83C\\uDDF3\"], \"\\uE513\", \"\\uDBB9\\uDCED\", [\"cn\", \"flag-cn\"], 1, 18, 15, 0],\n    \"1f1e8-1f1f4\": [[\"\\uD83C\\uDDE8\\uD83C\\uDDF4\"], \"\", \"\", [\"flag-co\"], 1, 19, 15, 0],\n    \"1f1e8-1f1f5\": [[\"\\uD83C\\uDDE8\\uD83C\\uDDF5\"], \"\", \"\", [\"flag-cp\"], 1, 20, 15, 0],\n    \"1f1e8-1f1f7\": [[\"\\uD83C\\uDDE8\\uD83C\\uDDF7\"], \"\", \"\", [\"flag-cr\"], 1, 21, 15, 0],\n    \"1f1e8-1f1fa\": [[\"\\uD83C\\uDDE8\\uD83C\\uDDFA\"], \"\", \"\", [\"flag-cu\"], 1, 22, 15, 0],\n    \"1f1e8-1f1fb\": [[\"\\uD83C\\uDDE8\\uD83C\\uDDFB\"], \"\", \"\", [\"flag-cv\"], 1, 23, 15, 0],\n    \"1f1e8-1f1fc\": [[\"\\uD83C\\uDDE8\\uD83C\\uDDFC\"], \"\", \"\", [\"flag-cw\"], 1, 24, 15, 0],\n    \"1f1e8-1f1fd\": [[\"\\uD83C\\uDDE8\\uD83C\\uDDFD\"], \"\", \"\", [\"flag-cx\"], 1, 25, 15, 0],\n    \"1f1e8-1f1fe\": [[\"\\uD83C\\uDDE8\\uD83C\\uDDFE\"], \"\", \"\", [\"flag-cy\"], 1, 26, 15, 0],\n    \"1f1e8-1f1ff\": [[\"\\uD83C\\uDDE8\\uD83C\\uDDFF\"], \"\", \"\", [\"flag-cz\"], 1, 27, 15, 0],\n    \"1f1e9-1f1ea\": [[\"\\uD83C\\uDDE9\\uD83C\\uDDEA\"], \"\\uE50E\", \"\\uDBB9\\uDCE8\", [\"de\", \"flag-de\"], 1, 28, 15, 0],\n    \"1f1e9-1f1ec\": [[\"\\uD83C\\uDDE9\\uD83C\\uDDEC\"], \"\", \"\", [\"flag-dg\"], 1, 29, 15, 0],\n    \"1f1e9-1f1ef\": [[\"\\uD83C\\uDDE9\\uD83C\\uDDEF\"], \"\", \"\", [\"flag-dj\"], 1, 30, 15, 0],\n    \"1f1e9-1f1f0\": [[\"\\uD83C\\uDDE9\\uD83C\\uDDF0\"], \"\", \"\", [\"flag-dk\"], 1, 31, 15, 0],\n    \"1f1e9-1f1f2\": [[\"\\uD83C\\uDDE9\\uD83C\\uDDF2\"], \"\", \"\", [\"flag-dm\"], 1, 32, 15, 0],\n    \"1f1e9-1f1f4\": [[\"\\uD83C\\uDDE9\\uD83C\\uDDF4\"], \"\", \"\", [\"flag-do\"], 1, 33, 15, 0],\n    \"1f1e9-1f1ff\": [[\"\\uD83C\\uDDE9\\uD83C\\uDDFF\"], \"\", \"\", [\"flag-dz\"], 1, 34, 15, 0],\n    \"1f1ea-1f1e6\": [[\"\\uD83C\\uDDEA\\uD83C\\uDDE6\"], \"\", \"\", [\"flag-ea\"], 1, 35, 15, 0],\n    \"1f1ea-1f1e8\": [[\"\\uD83C\\uDDEA\\uD83C\\uDDE8\"], \"\", \"\", [\"flag-ec\"], 1, 36, 15, 0],\n    \"1f1ea-1f1ea\": [[\"\\uD83C\\uDDEA\\uD83C\\uDDEA\"], \"\", \"\", [\"flag-ee\"], 1, 37, 15, 0],\n    \"1f1ea-1f1ec\": [[\"\\uD83C\\uDDEA\\uD83C\\uDDEC\"], \"\", \"\", [\"flag-eg\"], 1, 38, 15, 0],\n    \"1f1ea-1f1ed\": [[\"\\uD83C\\uDDEA\\uD83C\\uDDED\"], \"\", \"\", [\"flag-eh\"], 1, 39, 15, 0],\n    \"1f1ea-1f1f7\": [[\"\\uD83C\\uDDEA\\uD83C\\uDDF7\"], \"\", \"\", [\"flag-er\"], 1, 40, 15, 0],\n    \"1f1ea-1f1f8\": [[\"\\uD83C\\uDDEA\\uD83C\\uDDF8\"], \"\\uE511\", \"\\uDBB9\\uDCEB\", [\"es\", \"flag-es\"], 1, 41, 15, 0],\n    \"1f1ea-1f1f9\": [[\"\\uD83C\\uDDEA\\uD83C\\uDDF9\"], \"\", \"\", [\"flag-et\"], 1, 42, 15, 0],\n    \"1f1ea-1f1fa\": [[\"\\uD83C\\uDDEA\\uD83C\\uDDFA\"], \"\", \"\", [\"flag-eu\"], 1, 43, 15, 0],\n    \"1f1eb-1f1ee\": [[\"\\uD83C\\uDDEB\\uD83C\\uDDEE\"], \"\", \"\", [\"flag-fi\"], 1, 44, 15, 0],\n    \"1f1eb-1f1ef\": [[\"\\uD83C\\uDDEB\\uD83C\\uDDEF\"], \"\", \"\", [\"flag-fj\"], 1, 45, 15, 0],\n    \"1f1eb-1f1f0\": [[\"\\uD83C\\uDDEB\\uD83C\\uDDF0\"], \"\", \"\", [\"flag-fk\"], 1, 46, 15, 0],\n    \"1f1eb-1f1f2\": [[\"\\uD83C\\uDDEB\\uD83C\\uDDF2\"], \"\", \"\", [\"flag-fm\"], 1, 47, 15, 0],\n    \"1f1eb-1f1f4\": [[\"\\uD83C\\uDDEB\\uD83C\\uDDF4\"], \"\", \"\", [\"flag-fo\"], 1, 48, 15, 0],\n    \"1f1eb-1f1f7\": [[\"\\uD83C\\uDDEB\\uD83C\\uDDF7\"], \"\\uE50D\", \"\\uDBB9\\uDCE7\", [\"fr\", \"flag-fr\"], 1, 49, 15, 0],\n    \"1f1ec-1f1e6\": [[\"\\uD83C\\uDDEC\\uD83C\\uDDE6\"], \"\", \"\", [\"flag-ga\"], 1, 50, 15, 0],\n    \"1f1ec-1f1e7\": [[\"\\uD83C\\uDDEC\\uD83C\\uDDE7\"], \"\\uE510\", \"\\uDBB9\\uDCEA\", [\"gb\", \"uk\", \"flag-gb\"], 1, 51, 15, 0],\n    \"1f1ec-1f1e9\": [[\"\\uD83C\\uDDEC\\uD83C\\uDDE9\"], \"\", \"\", [\"flag-gd\"], 1, 52, 15, 0],\n    \"1f1ec-1f1ea\": [[\"\\uD83C\\uDDEC\\uD83C\\uDDEA\"], \"\", \"\", [\"flag-ge\"], 1, 53, 15, 0],\n    \"1f1ec-1f1eb\": [[\"\\uD83C\\uDDEC\\uD83C\\uDDEB\"], \"\", \"\", [\"flag-gf\"], 1, 54, 15, 0],\n    \"1f1ec-1f1ec\": [[\"\\uD83C\\uDDEC\\uD83C\\uDDEC\"], \"\", \"\", [\"flag-gg\"], 1, 55, 15, 0],\n    \"1f1ec-1f1ed\": [[\"\\uD83C\\uDDEC\\uD83C\\uDDED\"], \"\", \"\", [\"flag-gh\"], 1, 56, 15, 0],\n    \"1f1ec-1f1ee\": [[\"\\uD83C\\uDDEC\\uD83C\\uDDEE\"], \"\", \"\", [\"flag-gi\"], 1, 57, 15, 0],\n    \"1f1ec-1f1f1\": [[\"\\uD83C\\uDDEC\\uD83C\\uDDF1\"], \"\", \"\", [\"flag-gl\"], 1, 58, 15, 0],\n    \"1f1ec-1f1f2\": [[\"\\uD83C\\uDDEC\\uD83C\\uDDF2\"], \"\", \"\", [\"flag-gm\"], 1, 59, 15, 0],\n    \"1f1ec-1f1f3\": [[\"\\uD83C\\uDDEC\\uD83C\\uDDF3\"], \"\", \"\", [\"flag-gn\"], 1, 60, 15, 0],\n    \"1f1ec-1f1f5\": [[\"\\uD83C\\uDDEC\\uD83C\\uDDF5\"], \"\", \"\", [\"flag-gp\"], 2, 0, 15, 0],\n    \"1f1ec-1f1f6\": [[\"\\uD83C\\uDDEC\\uD83C\\uDDF6\"], \"\", \"\", [\"flag-gq\"], 2, 1, 15, 0],\n    \"1f1ec-1f1f7\": [[\"\\uD83C\\uDDEC\\uD83C\\uDDF7\"], \"\", \"\", [\"flag-gr\"], 2, 2, 15, 0],\n    \"1f1ec-1f1f8\": [[\"\\uD83C\\uDDEC\\uD83C\\uDDF8\"], \"\", \"\", [\"flag-gs\"], 2, 3, 15, 0],\n    \"1f1ec-1f1f9\": [[\"\\uD83C\\uDDEC\\uD83C\\uDDF9\"], \"\", \"\", [\"flag-gt\"], 2, 4, 15, 0],\n    \"1f1ec-1f1fa\": [[\"\\uD83C\\uDDEC\\uD83C\\uDDFA\"], \"\", \"\", [\"flag-gu\"], 2, 5, 15, 0],\n    \"1f1ec-1f1fc\": [[\"\\uD83C\\uDDEC\\uD83C\\uDDFC\"], \"\", \"\", [\"flag-gw\"], 2, 6, 15, 0],\n    \"1f1ec-1f1fe\": [[\"\\uD83C\\uDDEC\\uD83C\\uDDFE\"], \"\", \"\", [\"flag-gy\"], 2, 7, 15, 0],\n    \"1f1ed-1f1f0\": [[\"\\uD83C\\uDDED\\uD83C\\uDDF0\"], \"\", \"\", [\"flag-hk\"], 2, 8, 15, 0],\n    \"1f1ed-1f1f2\": [[\"\\uD83C\\uDDED\\uD83C\\uDDF2\"], \"\", \"\", [\"flag-hm\"], 2, 9, 15, 0],\n    \"1f1ed-1f1f3\": [[\"\\uD83C\\uDDED\\uD83C\\uDDF3\"], \"\", \"\", [\"flag-hn\"], 2, 10, 15, 0],\n    \"1f1ed-1f1f7\": [[\"\\uD83C\\uDDED\\uD83C\\uDDF7\"], \"\", \"\", [\"flag-hr\"], 2, 11, 15, 0],\n    \"1f1ed-1f1f9\": [[\"\\uD83C\\uDDED\\uD83C\\uDDF9\"], \"\", \"\", [\"flag-ht\"], 2, 12, 15, 0],\n    \"1f1ed-1f1fa\": [[\"\\uD83C\\uDDED\\uD83C\\uDDFA\"], \"\", \"\", [\"flag-hu\"], 2, 13, 15, 0],\n    \"1f1ee-1f1e8\": [[\"\\uD83C\\uDDEE\\uD83C\\uDDE8\"], \"\", \"\", [\"flag-ic\"], 2, 14, 15, 0],\n    \"1f1ee-1f1e9\": [[\"\\uD83C\\uDDEE\\uD83C\\uDDE9\"], \"\", \"\", [\"flag-id\"], 2, 15, 15, 0],\n    \"1f1ee-1f1ea\": [[\"\\uD83C\\uDDEE\\uD83C\\uDDEA\"], \"\", \"\", [\"flag-ie\"], 2, 16, 15, 0],\n    \"1f1ee-1f1f1\": [[\"\\uD83C\\uDDEE\\uD83C\\uDDF1\"], \"\", \"\", [\"flag-il\"], 2, 17, 15, 0],\n    \"1f1ee-1f1f2\": [[\"\\uD83C\\uDDEE\\uD83C\\uDDF2\"], \"\", \"\", [\"flag-im\"], 2, 18, 15, 0],\n    \"1f1ee-1f1f3\": [[\"\\uD83C\\uDDEE\\uD83C\\uDDF3\"], \"\", \"\", [\"flag-in\"], 2, 19, 15, 0],\n    \"1f1ee-1f1f4\": [[\"\\uD83C\\uDDEE\\uD83C\\uDDF4\"], \"\", \"\", [\"flag-io\"], 2, 20, 15, 0],\n    \"1f1ee-1f1f6\": [[\"\\uD83C\\uDDEE\\uD83C\\uDDF6\"], \"\", \"\", [\"flag-iq\"], 2, 21, 15, 0],\n    \"1f1ee-1f1f7\": [[\"\\uD83C\\uDDEE\\uD83C\\uDDF7\"], \"\", \"\", [\"flag-ir\"], 2, 22, 15, 0],\n    \"1f1ee-1f1f8\": [[\"\\uD83C\\uDDEE\\uD83C\\uDDF8\"], \"\", \"\", [\"flag-is\"], 2, 23, 15, 0],\n    \"1f1ee-1f1f9\": [[\"\\uD83C\\uDDEE\\uD83C\\uDDF9\"], \"\\uE50F\", \"\\uDBB9\\uDCE9\", [\"it\", \"flag-it\"], 2, 24, 15, 0],\n    \"1f1ef-1f1ea\": [[\"\\uD83C\\uDDEF\\uD83C\\uDDEA\"], \"\", \"\", [\"flag-je\"], 2, 25, 15, 0],\n    \"1f1ef-1f1f2\": [[\"\\uD83C\\uDDEF\\uD83C\\uDDF2\"], \"\", \"\", [\"flag-jm\"], 2, 26, 15, 0],\n    \"1f1ef-1f1f4\": [[\"\\uD83C\\uDDEF\\uD83C\\uDDF4\"], \"\", \"\", [\"flag-jo\"], 2, 27, 15, 0],\n    \"1f1ef-1f1f5\": [[\"\\uD83C\\uDDEF\\uD83C\\uDDF5\"], \"\\uE50B\", \"\\uDBB9\\uDCE5\", [\"jp\", \"flag-jp\"], 2, 28, 15, 0],\n    \"1f1f0-1f1ea\": [[\"\\uD83C\\uDDF0\\uD83C\\uDDEA\"], \"\", \"\", [\"flag-ke\"], 2, 29, 15, 0],\n    \"1f1f0-1f1ec\": [[\"\\uD83C\\uDDF0\\uD83C\\uDDEC\"], \"\", \"\", [\"flag-kg\"], 2, 30, 15, 0],\n    \"1f1f0-1f1ed\": [[\"\\uD83C\\uDDF0\\uD83C\\uDDED\"], \"\", \"\", [\"flag-kh\"], 2, 31, 15, 0],\n    \"1f1f0-1f1ee\": [[\"\\uD83C\\uDDF0\\uD83C\\uDDEE\"], \"\", \"\", [\"flag-ki\"], 2, 32, 15, 0],\n    \"1f1f0-1f1f2\": [[\"\\uD83C\\uDDF0\\uD83C\\uDDF2\"], \"\", \"\", [\"flag-km\"], 2, 33, 15, 0],\n    \"1f1f0-1f1f3\": [[\"\\uD83C\\uDDF0\\uD83C\\uDDF3\"], \"\", \"\", [\"flag-kn\"], 2, 34, 15, 0],\n    \"1f1f0-1f1f5\": [[\"\\uD83C\\uDDF0\\uD83C\\uDDF5\"], \"\", \"\", [\"flag-kp\"], 2, 35, 15, 0],\n    \"1f1f0-1f1f7\": [[\"\\uD83C\\uDDF0\\uD83C\\uDDF7\"], \"\\uE514\", \"\\uDBB9\\uDCEE\", [\"kr\", \"flag-kr\"], 2, 36, 15, 0],\n    \"1f1f0-1f1fc\": [[\"\\uD83C\\uDDF0\\uD83C\\uDDFC\"], \"\", \"\", [\"flag-kw\"], 2, 37, 15, 0],\n    \"1f1f0-1f1fe\": [[\"\\uD83C\\uDDF0\\uD83C\\uDDFE\"], \"\", \"\", [\"flag-ky\"], 2, 38, 15, 0],\n    \"1f1f0-1f1ff\": [[\"\\uD83C\\uDDF0\\uD83C\\uDDFF\"], \"\", \"\", [\"flag-kz\"], 2, 39, 15, 0],\n    \"1f1f1-1f1e6\": [[\"\\uD83C\\uDDF1\\uD83C\\uDDE6\"], \"\", \"\", [\"flag-la\"], 2, 40, 15, 0],\n    \"1f1f1-1f1e7\": [[\"\\uD83C\\uDDF1\\uD83C\\uDDE7\"], \"\", \"\", [\"flag-lb\"], 2, 41, 15, 0],\n    \"1f1f1-1f1e8\": [[\"\\uD83C\\uDDF1\\uD83C\\uDDE8\"], \"\", \"\", [\"flag-lc\"], 2, 42, 15, 0],\n    \"1f1f1-1f1ee\": [[\"\\uD83C\\uDDF1\\uD83C\\uDDEE\"], \"\", \"\", [\"flag-li\"], 2, 43, 15, 0],\n    \"1f1f1-1f1f0\": [[\"\\uD83C\\uDDF1\\uD83C\\uDDF0\"], \"\", \"\", [\"flag-lk\"], 2, 44, 15, 0],\n    \"1f1f1-1f1f7\": [[\"\\uD83C\\uDDF1\\uD83C\\uDDF7\"], \"\", \"\", [\"flag-lr\"], 2, 45, 15, 0],\n    \"1f1f1-1f1f8\": [[\"\\uD83C\\uDDF1\\uD83C\\uDDF8\"], \"\", \"\", [\"flag-ls\"], 2, 46, 15, 0],\n    \"1f1f1-1f1f9\": [[\"\\uD83C\\uDDF1\\uD83C\\uDDF9\"], \"\", \"\", [\"flag-lt\"], 2, 47, 15, 0],\n    \"1f1f1-1f1fa\": [[\"\\uD83C\\uDDF1\\uD83C\\uDDFA\"], \"\", \"\", [\"flag-lu\"], 2, 48, 15, 0],\n    \"1f1f1-1f1fb\": [[\"\\uD83C\\uDDF1\\uD83C\\uDDFB\"], \"\", \"\", [\"flag-lv\"], 2, 49, 15, 0],\n    \"1f1f1-1f1fe\": [[\"\\uD83C\\uDDF1\\uD83C\\uDDFE\"], \"\", \"\", [\"flag-ly\"], 2, 50, 15, 0],\n    \"1f1f2-1f1e6\": [[\"\\uD83C\\uDDF2\\uD83C\\uDDE6\"], \"\", \"\", [\"flag-ma\"], 2, 51, 15, 0],\n    \"1f1f2-1f1e8\": [[\"\\uD83C\\uDDF2\\uD83C\\uDDE8\"], \"\", \"\", [\"flag-mc\"], 2, 52, 15, 0],\n    \"1f1f2-1f1e9\": [[\"\\uD83C\\uDDF2\\uD83C\\uDDE9\"], \"\", \"\", [\"flag-md\"], 2, 53, 15, 0],\n    \"1f1f2-1f1ea\": [[\"\\uD83C\\uDDF2\\uD83C\\uDDEA\"], \"\", \"\", [\"flag-me\"], 2, 54, 15, 0],\n    \"1f1f2-1f1eb\": [[\"\\uD83C\\uDDF2\\uD83C\\uDDEB\"], \"\", \"\", [\"flag-mf\"], 2, 55, 15, 0],\n    \"1f1f2-1f1ec\": [[\"\\uD83C\\uDDF2\\uD83C\\uDDEC\"], \"\", \"\", [\"flag-mg\"], 2, 56, 15, 0],\n    \"1f1f2-1f1ed\": [[\"\\uD83C\\uDDF2\\uD83C\\uDDED\"], \"\", \"\", [\"flag-mh\"], 2, 57, 15, 0],\n    \"1f1f2-1f1f0\": [[\"\\uD83C\\uDDF2\\uD83C\\uDDF0\"], \"\", \"\", [\"flag-mk\"], 2, 58, 15, 0],\n    \"1f1f2-1f1f1\": [[\"\\uD83C\\uDDF2\\uD83C\\uDDF1\"], \"\", \"\", [\"flag-ml\"], 2, 59, 15, 0],\n    \"1f1f2-1f1f2\": [[\"\\uD83C\\uDDF2\\uD83C\\uDDF2\"], \"\", \"\", [\"flag-mm\"], 2, 60, 15, 0],\n    \"1f1f2-1f1f3\": [[\"\\uD83C\\uDDF2\\uD83C\\uDDF3\"], \"\", \"\", [\"flag-mn\"], 3, 0, 15, 0],\n    \"1f1f2-1f1f4\": [[\"\\uD83C\\uDDF2\\uD83C\\uDDF4\"], \"\", \"\", [\"flag-mo\"], 3, 1, 15, 0],\n    \"1f1f2-1f1f5\": [[\"\\uD83C\\uDDF2\\uD83C\\uDDF5\"], \"\", \"\", [\"flag-mp\"], 3, 2, 15, 0],\n    \"1f1f2-1f1f6\": [[\"\\uD83C\\uDDF2\\uD83C\\uDDF6\"], \"\", \"\", [\"flag-mq\"], 3, 3, 15, 0],\n    \"1f1f2-1f1f7\": [[\"\\uD83C\\uDDF2\\uD83C\\uDDF7\"], \"\", \"\", [\"flag-mr\"], 3, 4, 15, 0],\n    \"1f1f2-1f1f8\": [[\"\\uD83C\\uDDF2\\uD83C\\uDDF8\"], \"\", \"\", [\"flag-ms\"], 3, 5, 15, 0],\n    \"1f1f2-1f1f9\": [[\"\\uD83C\\uDDF2\\uD83C\\uDDF9\"], \"\", \"\", [\"flag-mt\"], 3, 6, 15, 0],\n    \"1f1f2-1f1fa\": [[\"\\uD83C\\uDDF2\\uD83C\\uDDFA\"], \"\", \"\", [\"flag-mu\"], 3, 7, 15, 0],\n    \"1f1f2-1f1fb\": [[\"\\uD83C\\uDDF2\\uD83C\\uDDFB\"], \"\", \"\", [\"flag-mv\"], 3, 8, 15, 0],\n    \"1f1f2-1f1fc\": [[\"\\uD83C\\uDDF2\\uD83C\\uDDFC\"], \"\", \"\", [\"flag-mw\"], 3, 9, 15, 0],\n    \"1f1f2-1f1fd\": [[\"\\uD83C\\uDDF2\\uD83C\\uDDFD\"], \"\", \"\", [\"flag-mx\"], 3, 10, 15, 0],\n    \"1f1f2-1f1fe\": [[\"\\uD83C\\uDDF2\\uD83C\\uDDFE\"], \"\", \"\", [\"flag-my\"], 3, 11, 15, 0],\n    \"1f1f2-1f1ff\": [[\"\\uD83C\\uDDF2\\uD83C\\uDDFF\"], \"\", \"\", [\"flag-mz\"], 3, 12, 15, 0],\n    \"1f1f3-1f1e6\": [[\"\\uD83C\\uDDF3\\uD83C\\uDDE6\"], \"\", \"\", [\"flag-na\"], 3, 13, 15, 0],\n    \"1f1f3-1f1e8\": [[\"\\uD83C\\uDDF3\\uD83C\\uDDE8\"], \"\", \"\", [\"flag-nc\"], 3, 14, 15, 0],\n    \"1f1f3-1f1ea\": [[\"\\uD83C\\uDDF3\\uD83C\\uDDEA\"], \"\", \"\", [\"flag-ne\"], 3, 15, 15, 0],\n    \"1f1f3-1f1eb\": [[\"\\uD83C\\uDDF3\\uD83C\\uDDEB\"], \"\", \"\", [\"flag-nf\"], 3, 16, 15, 0],\n    \"1f1f3-1f1ec\": [[\"\\uD83C\\uDDF3\\uD83C\\uDDEC\"], \"\", \"\", [\"flag-ng\"], 3, 17, 15, 0],\n    \"1f1f3-1f1ee\": [[\"\\uD83C\\uDDF3\\uD83C\\uDDEE\"], \"\", \"\", [\"flag-ni\"], 3, 18, 15, 0],\n    \"1f1f3-1f1f1\": [[\"\\uD83C\\uDDF3\\uD83C\\uDDF1\"], \"\", \"\", [\"flag-nl\"], 3, 19, 15, 0],\n    \"1f1f3-1f1f4\": [[\"\\uD83C\\uDDF3\\uD83C\\uDDF4\"], \"\", \"\", [\"flag-no\"], 3, 20, 15, 0],\n    \"1f1f3-1f1f5\": [[\"\\uD83C\\uDDF3\\uD83C\\uDDF5\"], \"\", \"\", [\"flag-np\"], 3, 21, 15, 0],\n    \"1f1f3-1f1f7\": [[\"\\uD83C\\uDDF3\\uD83C\\uDDF7\"], \"\", \"\", [\"flag-nr\"], 3, 22, 15, 0],\n    \"1f1f3-1f1fa\": [[\"\\uD83C\\uDDF3\\uD83C\\uDDFA\"], \"\", \"\", [\"flag-nu\"], 3, 23, 15, 0],\n    \"1f1f3-1f1ff\": [[\"\\uD83C\\uDDF3\\uD83C\\uDDFF\"], \"\", \"\", [\"flag-nz\"], 3, 24, 15, 0],\n    \"1f1f4-1f1f2\": [[\"\\uD83C\\uDDF4\\uD83C\\uDDF2\"], \"\", \"\", [\"flag-om\"], 3, 25, 15, 0],\n    \"1f1f5-1f1e6\": [[\"\\uD83C\\uDDF5\\uD83C\\uDDE6\"], \"\", \"\", [\"flag-pa\"], 3, 26, 15, 0],\n    \"1f1f5-1f1ea\": [[\"\\uD83C\\uDDF5\\uD83C\\uDDEA\"], \"\", \"\", [\"flag-pe\"], 3, 27, 15, 0],\n    \"1f1f5-1f1eb\": [[\"\\uD83C\\uDDF5\\uD83C\\uDDEB\"], \"\", \"\", [\"flag-pf\"], 3, 28, 15, 0],\n    \"1f1f5-1f1ec\": [[\"\\uD83C\\uDDF5\\uD83C\\uDDEC\"], \"\", \"\", [\"flag-pg\"], 3, 29, 15, 0],\n    \"1f1f5-1f1ed\": [[\"\\uD83C\\uDDF5\\uD83C\\uDDED\"], \"\", \"\", [\"flag-ph\"], 3, 30, 15, 0],\n    \"1f1f5-1f1f0\": [[\"\\uD83C\\uDDF5\\uD83C\\uDDF0\"], \"\", \"\", [\"flag-pk\"], 3, 31, 15, 0],\n    \"1f1f5-1f1f1\": [[\"\\uD83C\\uDDF5\\uD83C\\uDDF1\"], \"\", \"\", [\"flag-pl\"], 3, 32, 15, 0],\n    \"1f1f5-1f1f2\": [[\"\\uD83C\\uDDF5\\uD83C\\uDDF2\"], \"\", \"\", [\"flag-pm\"], 3, 33, 15, 0],\n    \"1f1f5-1f1f3\": [[\"\\uD83C\\uDDF5\\uD83C\\uDDF3\"], \"\", \"\", [\"flag-pn\"], 3, 34, 15, 0],\n    \"1f1f5-1f1f7\": [[\"\\uD83C\\uDDF5\\uD83C\\uDDF7\"], \"\", \"\", [\"flag-pr\"], 3, 35, 15, 0],\n    \"1f1f5-1f1f8\": [[\"\\uD83C\\uDDF5\\uD83C\\uDDF8\"], \"\", \"\", [\"flag-ps\"], 3, 36, 15, 0],\n    \"1f1f5-1f1f9\": [[\"\\uD83C\\uDDF5\\uD83C\\uDDF9\"], \"\", \"\", [\"flag-pt\"], 3, 37, 15, 0],\n    \"1f1f5-1f1fc\": [[\"\\uD83C\\uDDF5\\uD83C\\uDDFC\"], \"\", \"\", [\"flag-pw\"], 3, 38, 15, 0],\n    \"1f1f5-1f1fe\": [[\"\\uD83C\\uDDF5\\uD83C\\uDDFE\"], \"\", \"\", [\"flag-py\"], 3, 39, 15, 0],\n    \"1f1f6-1f1e6\": [[\"\\uD83C\\uDDF6\\uD83C\\uDDE6\"], \"\", \"\", [\"flag-qa\"], 3, 40, 15, 0],\n    \"1f1f7-1f1ea\": [[\"\\uD83C\\uDDF7\\uD83C\\uDDEA\"], \"\", \"\", [\"flag-re\"], 3, 41, 15, 0],\n    \"1f1f7-1f1f4\": [[\"\\uD83C\\uDDF7\\uD83C\\uDDF4\"], \"\", \"\", [\"flag-ro\"], 3, 42, 15, 0],\n    \"1f1f7-1f1f8\": [[\"\\uD83C\\uDDF7\\uD83C\\uDDF8\"], \"\", \"\", [\"flag-rs\"], 3, 43, 15, 0],\n    \"1f1f7-1f1fa\": [[\"\\uD83C\\uDDF7\\uD83C\\uDDFA\"], \"\\uE512\", \"\\uDBB9\\uDCEC\", [\"ru\", \"flag-ru\"], 3, 44, 15, 0],\n    \"1f1f7-1f1fc\": [[\"\\uD83C\\uDDF7\\uD83C\\uDDFC\"], \"\", \"\", [\"flag-rw\"], 3, 45, 15, 0],\n    \"1f1f8-1f1e6\": [[\"\\uD83C\\uDDF8\\uD83C\\uDDE6\"], \"\", \"\", [\"flag-sa\"], 3, 46, 15, 0],\n    \"1f1f8-1f1e7\": [[\"\\uD83C\\uDDF8\\uD83C\\uDDE7\"], \"\", \"\", [\"flag-sb\"], 3, 47, 15, 0],\n    \"1f1f8-1f1e8\": [[\"\\uD83C\\uDDF8\\uD83C\\uDDE8\"], \"\", \"\", [\"flag-sc\"], 3, 48, 15, 0],\n    \"1f1f8-1f1e9\": [[\"\\uD83C\\uDDF8\\uD83C\\uDDE9\"], \"\", \"\", [\"flag-sd\"], 3, 49, 15, 0],\n    \"1f1f8-1f1ea\": [[\"\\uD83C\\uDDF8\\uD83C\\uDDEA\"], \"\", \"\", [\"flag-se\"], 3, 50, 15, 0],\n    \"1f1f8-1f1ec\": [[\"\\uD83C\\uDDF8\\uD83C\\uDDEC\"], \"\", \"\", [\"flag-sg\"], 3, 51, 15, 0],\n    \"1f1f8-1f1ed\": [[\"\\uD83C\\uDDF8\\uD83C\\uDDED\"], \"\", \"\", [\"flag-sh\"], 3, 52, 15, 0],\n    \"1f1f8-1f1ee\": [[\"\\uD83C\\uDDF8\\uD83C\\uDDEE\"], \"\", \"\", [\"flag-si\"], 3, 53, 15, 0],\n    \"1f1f8-1f1ef\": [[\"\\uD83C\\uDDF8\\uD83C\\uDDEF\"], \"\", \"\", [\"flag-sj\"], 3, 54, 15, 0],\n    \"1f1f8-1f1f0\": [[\"\\uD83C\\uDDF8\\uD83C\\uDDF0\"], \"\", \"\", [\"flag-sk\"], 3, 55, 15, 0],\n    \"1f1f8-1f1f1\": [[\"\\uD83C\\uDDF8\\uD83C\\uDDF1\"], \"\", \"\", [\"flag-sl\"], 3, 56, 15, 0],\n    \"1f1f8-1f1f2\": [[\"\\uD83C\\uDDF8\\uD83C\\uDDF2\"], \"\", \"\", [\"flag-sm\"], 3, 57, 15, 0],\n    \"1f1f8-1f1f3\": [[\"\\uD83C\\uDDF8\\uD83C\\uDDF3\"], \"\", \"\", [\"flag-sn\"], 3, 58, 15, 0],\n    \"1f1f8-1f1f4\": [[\"\\uD83C\\uDDF8\\uD83C\\uDDF4\"], \"\", \"\", [\"flag-so\"], 3, 59, 15, 0],\n    \"1f1f8-1f1f7\": [[\"\\uD83C\\uDDF8\\uD83C\\uDDF7\"], \"\", \"\", [\"flag-sr\"], 3, 60, 15, 0],\n    \"1f1f8-1f1f8\": [[\"\\uD83C\\uDDF8\\uD83C\\uDDF8\"], \"\", \"\", [\"flag-ss\"], 4, 0, 15, 0],\n    \"1f1f8-1f1f9\": [[\"\\uD83C\\uDDF8\\uD83C\\uDDF9\"], \"\", \"\", [\"flag-st\"], 4, 1, 15, 0],\n    \"1f1f8-1f1fb\": [[\"\\uD83C\\uDDF8\\uD83C\\uDDFB\"], \"\", \"\", [\"flag-sv\"], 4, 2, 15, 0],\n    \"1f1f8-1f1fd\": [[\"\\uD83C\\uDDF8\\uD83C\\uDDFD\"], \"\", \"\", [\"flag-sx\"], 4, 3, 15, 0],\n    \"1f1f8-1f1fe\": [[\"\\uD83C\\uDDF8\\uD83C\\uDDFE\"], \"\", \"\", [\"flag-sy\"], 4, 4, 15, 0],\n    \"1f1f8-1f1ff\": [[\"\\uD83C\\uDDF8\\uD83C\\uDDFF\"], \"\", \"\", [\"flag-sz\"], 4, 5, 15, 0],\n    \"1f1f9-1f1e6\": [[\"\\uD83C\\uDDF9\\uD83C\\uDDE6\"], \"\", \"\", [\"flag-ta\"], 4, 6, 15, 0],\n    \"1f1f9-1f1e8\": [[\"\\uD83C\\uDDF9\\uD83C\\uDDE8\"], \"\", \"\", [\"flag-tc\"], 4, 7, 15, 0],\n    \"1f1f9-1f1e9\": [[\"\\uD83C\\uDDF9\\uD83C\\uDDE9\"], \"\", \"\", [\"flag-td\"], 4, 8, 15, 0],\n    \"1f1f9-1f1eb\": [[\"\\uD83C\\uDDF9\\uD83C\\uDDEB\"], \"\", \"\", [\"flag-tf\"], 4, 9, 15, 0],\n    \"1f1f9-1f1ec\": [[\"\\uD83C\\uDDF9\\uD83C\\uDDEC\"], \"\", \"\", [\"flag-tg\"], 4, 10, 15, 0],\n    \"1f1f9-1f1ed\": [[\"\\uD83C\\uDDF9\\uD83C\\uDDED\"], \"\", \"\", [\"flag-th\"], 4, 11, 15, 0],\n    \"1f1f9-1f1ef\": [[\"\\uD83C\\uDDF9\\uD83C\\uDDEF\"], \"\", \"\", [\"flag-tj\"], 4, 12, 15, 0],\n    \"1f1f9-1f1f0\": [[\"\\uD83C\\uDDF9\\uD83C\\uDDF0\"], \"\", \"\", [\"flag-tk\"], 4, 13, 15, 0],\n    \"1f1f9-1f1f1\": [[\"\\uD83C\\uDDF9\\uD83C\\uDDF1\"], \"\", \"\", [\"flag-tl\"], 4, 14, 15, 0],\n    \"1f1f9-1f1f2\": [[\"\\uD83C\\uDDF9\\uD83C\\uDDF2\"], \"\", \"\", [\"flag-tm\"], 4, 15, 15, 0],\n    \"1f1f9-1f1f3\": [[\"\\uD83C\\uDDF9\\uD83C\\uDDF3\"], \"\", \"\", [\"flag-tn\"], 4, 16, 15, 0],\n    \"1f1f9-1f1f4\": [[\"\\uD83C\\uDDF9\\uD83C\\uDDF4\"], \"\", \"\", [\"flag-to\"], 4, 17, 15, 0],\n    \"1f1f9-1f1f7\": [[\"\\uD83C\\uDDF9\\uD83C\\uDDF7\"], \"\", \"\", [\"flag-tr\"], 4, 18, 15, 0],\n    \"1f1f9-1f1f9\": [[\"\\uD83C\\uDDF9\\uD83C\\uDDF9\"], \"\", \"\", [\"flag-tt\"], 4, 19, 15, 0],\n    \"1f1f9-1f1fb\": [[\"\\uD83C\\uDDF9\\uD83C\\uDDFB\"], \"\", \"\", [\"flag-tv\"], 4, 20, 15, 0],\n    \"1f1f9-1f1fc\": [[\"\\uD83C\\uDDF9\\uD83C\\uDDFC\"], \"\", \"\", [\"flag-tw\"], 4, 21, 15, 0],\n    \"1f1f9-1f1ff\": [[\"\\uD83C\\uDDF9\\uD83C\\uDDFF\"], \"\", \"\", [\"flag-tz\"], 4, 22, 15, 0],\n    \"1f1fa-1f1e6\": [[\"\\uD83C\\uDDFA\\uD83C\\uDDE6\"], \"\", \"\", [\"flag-ua\"], 4, 23, 15, 0],\n    \"1f1fa-1f1ec\": [[\"\\uD83C\\uDDFA\\uD83C\\uDDEC\"], \"\", \"\", [\"flag-ug\"], 4, 24, 15, 0],\n    \"1f1fa-1f1f2\": [[\"\\uD83C\\uDDFA\\uD83C\\uDDF2\"], \"\", \"\", [\"flag-um\"], 4, 25, 15, 0],\n    \"1f1fa-1f1f3\": [[\"\\uD83C\\uDDFA\\uD83C\\uDDF3\"], \"\", \"\", [\"flag-un\"], 4, 26, 15, 0],\n    \"1f1fa-1f1f8\": [[\"\\uD83C\\uDDFA\\uD83C\\uDDF8\"], \"\\uE50C\", \"\\uDBB9\\uDCE6\", [\"us\", \"flag-us\"], 4, 27, 15, 0],\n    \"1f1fa-1f1fe\": [[\"\\uD83C\\uDDFA\\uD83C\\uDDFE\"], \"\", \"\", [\"flag-uy\"], 4, 28, 15, 0],\n    \"1f1fa-1f1ff\": [[\"\\uD83C\\uDDFA\\uD83C\\uDDFF\"], \"\", \"\", [\"flag-uz\"], 4, 29, 15, 0],\n    \"1f1fb-1f1e6\": [[\"\\uD83C\\uDDFB\\uD83C\\uDDE6\"], \"\", \"\", [\"flag-va\"], 4, 30, 15, 0],\n    \"1f1fb-1f1e8\": [[\"\\uD83C\\uDDFB\\uD83C\\uDDE8\"], \"\", \"\", [\"flag-vc\"], 4, 31, 15, 0],\n    \"1f1fb-1f1ea\": [[\"\\uD83C\\uDDFB\\uD83C\\uDDEA\"], \"\", \"\", [\"flag-ve\"], 4, 32, 15, 0],\n    \"1f1fb-1f1ec\": [[\"\\uD83C\\uDDFB\\uD83C\\uDDEC\"], \"\", \"\", [\"flag-vg\"], 4, 33, 15, 0],\n    \"1f1fb-1f1ee\": [[\"\\uD83C\\uDDFB\\uD83C\\uDDEE\"], \"\", \"\", [\"flag-vi\"], 4, 34, 15, 0],\n    \"1f1fb-1f1f3\": [[\"\\uD83C\\uDDFB\\uD83C\\uDDF3\"], \"\", \"\", [\"flag-vn\"], 4, 35, 15, 0],\n    \"1f1fb-1f1fa\": [[\"\\uD83C\\uDDFB\\uD83C\\uDDFA\"], \"\", \"\", [\"flag-vu\"], 4, 36, 15, 0],\n    \"1f1fc-1f1eb\": [[\"\\uD83C\\uDDFC\\uD83C\\uDDEB\"], \"\", \"\", [\"flag-wf\"], 4, 37, 15, 0],\n    \"1f1fc-1f1f8\": [[\"\\uD83C\\uDDFC\\uD83C\\uDDF8\"], \"\", \"\", [\"flag-ws\"], 4, 38, 15, 0],\n    \"1f1fd-1f1f0\": [[\"\\uD83C\\uDDFD\\uD83C\\uDDF0\"], \"\", \"\", [\"flag-xk\"], 4, 39, 15, 0],\n    \"1f1fe-1f1ea\": [[\"\\uD83C\\uDDFE\\uD83C\\uDDEA\"], \"\", \"\", [\"flag-ye\"], 4, 40, 15, 0],\n    \"1f1fe-1f1f9\": [[\"\\uD83C\\uDDFE\\uD83C\\uDDF9\"], \"\", \"\", [\"flag-yt\"], 4, 41, 15, 0],\n    \"1f1ff-1f1e6\": [[\"\\uD83C\\uDDFF\\uD83C\\uDDE6\"], \"\", \"\", [\"flag-za\"], 4, 42, 15, 0],\n    \"1f1ff-1f1f2\": [[\"\\uD83C\\uDDFF\\uD83C\\uDDF2\"], \"\", \"\", [\"flag-zm\"], 4, 43, 15, 0],\n    \"1f1ff-1f1fc\": [[\"\\uD83C\\uDDFF\\uD83C\\uDDFC\"], \"\", \"\", [\"flag-zw\"], 4, 44, 15, 0],\n    \"1f201\": [[\"\\uD83C\\uDE01\"], \"\\uE203\", \"\\uDBBA\\uDF24\", [\"koko\"], 4, 45, 15, 0],\n    \"1f202-fe0f\": [[\"\\uD83C\\uDE02\\uFE0F\", \"\\uD83C\\uDE02\"], \"\\uE228\", \"\\uDBBA\\uDF3F\", [\"sa\"], 4, 46, 15, 0],\n    \"1f21a\": [[\"\\uD83C\\uDE1A\"], \"\\uE216\", \"\\uDBBA\\uDF3A\", [\"u7121\"], 4, 47, 15, 0],\n    \"1f22f\": [[\"\\uD83C\\uDE2F\"], \"\\uE22C\", \"\\uDBBA\\uDF40\", [\"u6307\"], 4, 48, 15, 0],\n    \"1f232\": [[\"\\uD83C\\uDE32\"], \"\", \"\\uDBBA\\uDF2E\", [\"u7981\"], 4, 49, 15, 0],\n    \"1f233\": [[\"\\uD83C\\uDE33\"], \"\\uE22B\", \"\\uDBBA\\uDF2F\", [\"u7a7a\"], 4, 50, 15, 0],\n    \"1f234\": [[\"\\uD83C\\uDE34\"], \"\", \"\\uDBBA\\uDF30\", [\"u5408\"], 4, 51, 15, 0],\n    \"1f235\": [[\"\\uD83C\\uDE35\"], \"\\uE22A\", \"\\uDBBA\\uDF31\", [\"u6e80\"], 4, 52, 15, 0],\n    \"1f236\": [[\"\\uD83C\\uDE36\"], \"\\uE215\", \"\\uDBBA\\uDF39\", [\"u6709\"], 4, 53, 15, 0],\n    \"1f237-fe0f\": [[\"\\uD83C\\uDE37\\uFE0F\", \"\\uD83C\\uDE37\"], \"\\uE217\", \"\\uDBBA\\uDF3B\", [\"u6708\"], 4, 54, 15, 0],\n    \"1f238\": [[\"\\uD83C\\uDE38\"], \"\\uE218\", \"\\uDBBA\\uDF3C\", [\"u7533\"], 4, 55, 15, 0],\n    \"1f239\": [[\"\\uD83C\\uDE39\"], \"\\uE227\", \"\\uDBBA\\uDF3E\", [\"u5272\"], 4, 56, 15, 0],\n    \"1f23a\": [[\"\\uD83C\\uDE3A\"], \"\\uE22D\", \"\\uDBBA\\uDF41\", [\"u55b6\"], 4, 57, 15, 0],\n    \"1f250\": [[\"\\uD83C\\uDE50\"], \"\\uE226\", \"\\uDBBA\\uDF3D\", [\"ideograph_advantage\"], 4, 58, 15, 0],\n    \"1f251\": [[\"\\uD83C\\uDE51\"], \"\", \"\\uDBBA\\uDF50\", [\"accept\"], 4, 59, 15, 0],\n    \"1f300\": [[\"\\uD83C\\uDF00\"], \"\\uE443\", \"\\uDBB8\\uDC05\", [\"cyclone\"], 4, 60, 15, 0],\n    \"1f301\": [[\"\\uD83C\\uDF01\"], \"\", \"\\uDBB8\\uDC06\", [\"foggy\"], 5, 0, 15, 0],\n    \"1f302\": [[\"\\uD83C\\uDF02\"], \"\\uE43C\", \"\\uDBB8\\uDC07\", [\"closed_umbrella\"], 5, 1, 15, 0],\n    \"1f303\": [[\"\\uD83C\\uDF03\"], \"\\uE44B\", \"\\uDBB8\\uDC08\", [\"night_with_stars\"], 5, 2, 15, 0],\n    \"1f304\": [[\"\\uD83C\\uDF04\"], \"\\uE04D\", \"\\uDBB8\\uDC09\", [\"sunrise_over_mountains\"], 5, 3, 15, 0],\n    \"1f305\": [[\"\\uD83C\\uDF05\"], \"\\uE449\", \"\\uDBB8\\uDC0A\", [\"sunrise\"], 5, 4, 15, 0],\n    \"1f306\": [[\"\\uD83C\\uDF06\"], \"\\uE146\", \"\\uDBB8\\uDC0B\", [\"city_sunset\"], 5, 5, 15, 0],\n    \"1f307\": [[\"\\uD83C\\uDF07\"], \"\\uE44A\", \"\\uDBB8\\uDC0C\", [\"city_sunrise\"], 5, 6, 15, 0],\n    \"1f308\": [[\"\\uD83C\\uDF08\"], \"\\uE44C\", \"\\uDBB8\\uDC0D\", [\"rainbow\"], 5, 7, 15, 0],\n    \"1f309\": [[\"\\uD83C\\uDF09\"], \"\", \"\\uDBB8\\uDC10\", [\"bridge_at_night\"], 5, 8, 15, 0],\n    \"1f30a\": [[\"\\uD83C\\uDF0A\"], \"\\uE43E\", \"\\uDBB8\\uDC38\", [\"ocean\"], 5, 9, 15, 0],\n    \"1f30b\": [[\"\\uD83C\\uDF0B\"], \"\", \"\\uDBB8\\uDC3A\", [\"volcano\"], 5, 10, 15, 0],\n    \"1f30c\": [[\"\\uD83C\\uDF0C\"], \"\", \"\\uDBB8\\uDC3B\", [\"milky_way\"], 5, 11, 15, 0],\n    \"1f30d\": [[\"\\uD83C\\uDF0D\"], \"\", \"\", [\"earth_africa\"], 5, 12, 15, 0],\n    \"1f30e\": [[\"\\uD83C\\uDF0E\"], \"\", \"\", [\"earth_americas\"], 5, 13, 15, 0],\n    \"1f30f\": [[\"\\uD83C\\uDF0F\"], \"\", \"\\uDBB8\\uDC39\", [\"earth_asia\"], 5, 14, 15, 0],\n    \"1f310\": [[\"\\uD83C\\uDF10\"], \"\", \"\", [\"globe_with_meridians\"], 5, 15, 15, 0],\n    \"1f311\": [[\"\\uD83C\\uDF11\"], \"\", \"\\uDBB8\\uDC11\", [\"new_moon\"], 5, 16, 15, 0],\n    \"1f312\": [[\"\\uD83C\\uDF12\"], \"\", \"\", [\"waxing_crescent_moon\"], 5, 17, 15, 0],\n    \"1f313\": [[\"\\uD83C\\uDF13\"], \"\", \"\\uDBB8\\uDC13\", [\"first_quarter_moon\"], 5, 18, 15, 0],\n    \"1f314\": [[\"\\uD83C\\uDF14\"], \"\", \"\\uDBB8\\uDC12\", [\"moon\", \"waxing_gibbous_moon\"], 5, 19, 15, 0],\n    \"1f315\": [[\"\\uD83C\\uDF15\"], \"\", \"\\uDBB8\\uDC15\", [\"full_moon\"], 5, 20, 15, 0],\n    \"1f316\": [[\"\\uD83C\\uDF16\"], \"\", \"\", [\"waning_gibbous_moon\"], 5, 21, 15, 0],\n    \"1f317\": [[\"\\uD83C\\uDF17\"], \"\", \"\", [\"last_quarter_moon\"], 5, 22, 15, 0],\n    \"1f318\": [[\"\\uD83C\\uDF18\"], \"\", \"\", [\"waning_crescent_moon\"], 5, 23, 15, 0],\n    \"1f319\": [[\"\\uD83C\\uDF19\"], \"\\uE04C\", \"\\uDBB8\\uDC14\", [\"crescent_moon\"], 5, 24, 15, 0],\n    \"1f31a\": [[\"\\uD83C\\uDF1A\"], \"\", \"\", [\"new_moon_with_face\"], 5, 25, 15, 0],\n    \"1f31b\": [[\"\\uD83C\\uDF1B\"], \"\", \"\\uDBB8\\uDC16\", [\"first_quarter_moon_with_face\"], 5, 26, 15, 0],\n    \"1f31c\": [[\"\\uD83C\\uDF1C\"], \"\", \"\", [\"last_quarter_moon_with_face\"], 5, 27, 15, 0],\n    \"1f31d\": [[\"\\uD83C\\uDF1D\"], \"\", \"\", [\"full_moon_with_face\"], 5, 28, 15, 0],\n    \"1f31e\": [[\"\\uD83C\\uDF1E\"], \"\", \"\", [\"sun_with_face\"], 5, 29, 15, 0],\n    \"1f31f\": [[\"\\uD83C\\uDF1F\"], \"\\uE335\", \"\\uDBBA\\uDF69\", [\"star2\"], 5, 30, 15, 0],\n    \"1f320\": [[\"\\uD83C\\uDF20\"], \"\", \"\\uDBBA\\uDF6A\", [\"stars\"], 5, 31, 15, 0],\n    \"1f321-fe0f\": [[\"\\uD83C\\uDF21\\uFE0F\", \"\\uD83C\\uDF21\"], \"\", \"\", [\"thermometer\"], 5, 32, 15, 0],\n    \"1f324-fe0f\": [[\"\\uD83C\\uDF24\\uFE0F\", \"\\uD83C\\uDF24\"], \"\", \"\", [\"mostly_sunny\", \"sun_small_cloud\"], 5, 33, 15, 0],\n    \"1f325-fe0f\": [[\"\\uD83C\\uDF25\\uFE0F\", \"\\uD83C\\uDF25\"], \"\", \"\", [\"barely_sunny\", \"sun_behind_cloud\"], 5, 34, 15, 0],\n    \"1f326-fe0f\": [[\"\\uD83C\\uDF26\\uFE0F\", \"\\uD83C\\uDF26\"], \"\", \"\", [\"partly_sunny_rain\", \"sun_behind_rain_cloud\"], 5, 35, 15, 0],\n    \"1f327-fe0f\": [[\"\\uD83C\\uDF27\\uFE0F\", \"\\uD83C\\uDF27\"], \"\", \"\", [\"rain_cloud\"], 5, 36, 15, 0],\n    \"1f328-fe0f\": [[\"\\uD83C\\uDF28\\uFE0F\", \"\\uD83C\\uDF28\"], \"\", \"\", [\"snow_cloud\"], 5, 37, 15, 0],\n    \"1f329-fe0f\": [[\"\\uD83C\\uDF29\\uFE0F\", \"\\uD83C\\uDF29\"], \"\", \"\", [\"lightning\", \"lightning_cloud\"], 5, 38, 15, 0],\n    \"1f32a-fe0f\": [[\"\\uD83C\\uDF2A\\uFE0F\", \"\\uD83C\\uDF2A\"], \"\", \"\", [\"tornado\", \"tornado_cloud\"], 5, 39, 15, 0],\n    \"1f32b-fe0f\": [[\"\\uD83C\\uDF2B\\uFE0F\", \"\\uD83C\\uDF2B\"], \"\", \"\", [\"fog\"], 5, 40, 15, 0],\n    \"1f32c-fe0f\": [[\"\\uD83C\\uDF2C\\uFE0F\", \"\\uD83C\\uDF2C\"], \"\", \"\", [\"wind_blowing_face\"], 5, 41, 15, 0],\n    \"1f32d\": [[\"\\uD83C\\uDF2D\"], \"\", \"\", [\"hotdog\"], 5, 42, 15, 0],\n    \"1f32e\": [[\"\\uD83C\\uDF2E\"], \"\", \"\", [\"taco\"], 5, 43, 15, 0],\n    \"1f32f\": [[\"\\uD83C\\uDF2F\"], \"\", \"\", [\"burrito\"], 5, 44, 15, 0],\n    \"1f330\": [[\"\\uD83C\\uDF30\"], \"\", \"\\uDBB8\\uDC4C\", [\"chestnut\"], 5, 45, 15, 0],\n    \"1f331\": [[\"\\uD83C\\uDF31\"], \"\", \"\\uDBB8\\uDC3E\", [\"seedling\"], 5, 46, 15, 0],\n    \"1f332\": [[\"\\uD83C\\uDF32\"], \"\", \"\", [\"evergreen_tree\"], 5, 47, 15, 0],\n    \"1f333\": [[\"\\uD83C\\uDF33\"], \"\", \"\", [\"deciduous_tree\"], 5, 48, 15, 0],\n    \"1f334\": [[\"\\uD83C\\uDF34\"], \"\\uE307\", \"\\uDBB8\\uDC47\", [\"palm_tree\"], 5, 49, 15, 0],\n    \"1f335\": [[\"\\uD83C\\uDF35\"], \"\\uE308\", \"\\uDBB8\\uDC48\", [\"cactus\"], 5, 50, 15, 0],\n    \"1f336-fe0f\": [[\"\\uD83C\\uDF36\\uFE0F\", \"\\uD83C\\uDF36\"], \"\", \"\", [\"hot_pepper\"], 5, 51, 15, 0],\n    \"1f337\": [[\"\\uD83C\\uDF37\"], \"\\uE304\", \"\\uDBB8\\uDC3D\", [\"tulip\"], 5, 52, 15, 0],\n    \"1f338\": [[\"\\uD83C\\uDF38\"], \"\\uE030\", \"\\uDBB8\\uDC40\", [\"cherry_blossom\"], 5, 53, 15, 0],\n    \"1f339\": [[\"\\uD83C\\uDF39\"], \"\\uE032\", \"\\uDBB8\\uDC41\", [\"rose\"], 5, 54, 15, 0],\n    \"1f33a\": [[\"\\uD83C\\uDF3A\"], \"\\uE303\", \"\\uDBB8\\uDC45\", [\"hibiscus\"], 5, 55, 15, 0],\n    \"1f33b\": [[\"\\uD83C\\uDF3B\"], \"\\uE305\", \"\\uDBB8\\uDC46\", [\"sunflower\"], 5, 56, 15, 0],\n    \"1f33c\": [[\"\\uD83C\\uDF3C\"], \"\", \"\\uDBB8\\uDC4D\", [\"blossom\"], 5, 57, 15, 0],\n    \"1f33d\": [[\"\\uD83C\\uDF3D\"], \"\", \"\\uDBB8\\uDC4A\", [\"corn\"], 5, 58, 15, 0],\n    \"1f33e\": [[\"\\uD83C\\uDF3E\"], \"\\uE444\", \"\\uDBB8\\uDC49\", [\"ear_of_rice\"], 5, 59, 15, 0],\n    \"1f33f\": [[\"\\uD83C\\uDF3F\"], \"\", \"\\uDBB8\\uDC4E\", [\"herb\"], 5, 60, 15, 0],\n    \"1f340\": [[\"\\uD83C\\uDF40\"], \"\\uE110\", \"\\uDBB8\\uDC3C\", [\"four_leaf_clover\"], 6, 0, 15, 0],\n    \"1f341\": [[\"\\uD83C\\uDF41\"], \"\\uE118\", \"\\uDBB8\\uDC3F\", [\"maple_leaf\"], 6, 1, 15, 0],\n    \"1f342\": [[\"\\uD83C\\uDF42\"], \"\\uE119\", \"\\uDBB8\\uDC42\", [\"fallen_leaf\"], 6, 2, 15, 0],\n    \"1f343\": [[\"\\uD83C\\uDF43\"], \"\\uE447\", \"\\uDBB8\\uDC43\", [\"leaves\"], 6, 3, 15, 0],\n    \"1f344\": [[\"\\uD83C\\uDF44\"], \"\", \"\\uDBB8\\uDC4B\", [\"mushroom\"], 6, 4, 15, 0],\n    \"1f345\": [[\"\\uD83C\\uDF45\"], \"\\uE349\", \"\\uDBB8\\uDC55\", [\"tomato\"], 6, 5, 15, 0],\n    \"1f346\": [[\"\\uD83C\\uDF46\"], \"\\uE34A\", \"\\uDBB8\\uDC56\", [\"eggplant\"], 6, 6, 15, 0],\n    \"1f347\": [[\"\\uD83C\\uDF47\"], \"\", \"\\uDBB8\\uDC59\", [\"grapes\"], 6, 7, 15, 0],\n    \"1f348\": [[\"\\uD83C\\uDF48\"], \"\", \"\\uDBB8\\uDC57\", [\"melon\"], 6, 8, 15, 0],\n    \"1f349\": [[\"\\uD83C\\uDF49\"], \"\\uE348\", \"\\uDBB8\\uDC54\", [\"watermelon\"], 6, 9, 15, 0],\n    \"1f34a\": [[\"\\uD83C\\uDF4A\"], \"\\uE346\", \"\\uDBB8\\uDC52\", [\"tangerine\"], 6, 10, 15, 0],\n    \"1f34b\": [[\"\\uD83C\\uDF4B\"], \"\", \"\", [\"lemon\"], 6, 11, 15, 0],\n    \"1f34c\": [[\"\\uD83C\\uDF4C\"], \"\", \"\\uDBB8\\uDC50\", [\"banana\"], 6, 12, 15, 0],\n    \"1f34d\": [[\"\\uD83C\\uDF4D\"], \"\", \"\\uDBB8\\uDC58\", [\"pineapple\"], 6, 13, 15, 0],\n    \"1f34e\": [[\"\\uD83C\\uDF4E\"], \"\\uE345\", \"\\uDBB8\\uDC51\", [\"apple\"], 6, 14, 15, 0],\n    \"1f34f\": [[\"\\uD83C\\uDF4F\"], \"\", \"\\uDBB8\\uDC5B\", [\"green_apple\"], 6, 15, 15, 0],\n    \"1f350\": [[\"\\uD83C\\uDF50\"], \"\", \"\", [\"pear\"], 6, 16, 15, 0],\n    \"1f351\": [[\"\\uD83C\\uDF51\"], \"\", \"\\uDBB8\\uDC5A\", [\"peach\"], 6, 17, 15, 0],\n    \"1f352\": [[\"\\uD83C\\uDF52\"], \"\", \"\\uDBB8\\uDC4F\", [\"cherries\"], 6, 18, 15, 0],\n    \"1f353\": [[\"\\uD83C\\uDF53\"], \"\\uE347\", \"\\uDBB8\\uDC53\", [\"strawberry\"], 6, 19, 15, 0],\n    \"1f354\": [[\"\\uD83C\\uDF54\"], \"\\uE120\", \"\\uDBBA\\uDD60\", [\"hamburger\"], 6, 20, 15, 0],\n    \"1f355\": [[\"\\uD83C\\uDF55\"], \"\", \"\\uDBBA\\uDD75\", [\"pizza\"], 6, 21, 15, 0],\n    \"1f356\": [[\"\\uD83C\\uDF56\"], \"\", \"\\uDBBA\\uDD72\", [\"meat_on_bone\"], 6, 22, 15, 0],\n    \"1f357\": [[\"\\uD83C\\uDF57\"], \"\", \"\\uDBBA\\uDD76\", [\"poultry_leg\"], 6, 23, 15, 0],\n    \"1f358\": [[\"\\uD83C\\uDF58\"], \"\\uE33D\", \"\\uDBBA\\uDD69\", [\"rice_cracker\"], 6, 24, 15, 0],\n    \"1f359\": [[\"\\uD83C\\uDF59\"], \"\\uE342\", \"\\uDBBA\\uDD61\", [\"rice_ball\"], 6, 25, 15, 0],\n    \"1f35a\": [[\"\\uD83C\\uDF5A\"], \"\\uE33E\", \"\\uDBBA\\uDD6A\", [\"rice\"], 6, 26, 15, 0],\n    \"1f35b\": [[\"\\uD83C\\uDF5B\"], \"\\uE341\", \"\\uDBBA\\uDD6C\", [\"curry\"], 6, 27, 15, 0],\n    \"1f35c\": [[\"\\uD83C\\uDF5C\"], \"\\uE340\", \"\\uDBBA\\uDD63\", [\"ramen\"], 6, 28, 15, 0],\n    \"1f35d\": [[\"\\uD83C\\uDF5D\"], \"\\uE33F\", \"\\uDBBA\\uDD6B\", [\"spaghetti\"], 6, 29, 15, 0],\n    \"1f35e\": [[\"\\uD83C\\uDF5E\"], \"\\uE339\", \"\\uDBBA\\uDD64\", [\"bread\"], 6, 30, 15, 0],\n    \"1f35f\": [[\"\\uD83C\\uDF5F\"], \"\\uE33B\", \"\\uDBBA\\uDD67\", [\"fries\"], 6, 31, 15, 0],\n    \"1f360\": [[\"\\uD83C\\uDF60\"], \"\", \"\\uDBBA\\uDD74\", [\"sweet_potato\"], 6, 32, 15, 0],\n    \"1f361\": [[\"\\uD83C\\uDF61\"], \"\\uE33C\", \"\\uDBBA\\uDD68\", [\"dango\"], 6, 33, 15, 0],\n    \"1f362\": [[\"\\uD83C\\uDF62\"], \"\\uE343\", \"\\uDBBA\\uDD6D\", [\"oden\"], 6, 34, 15, 0],\n    \"1f363\": [[\"\\uD83C\\uDF63\"], \"\\uE344\", \"\\uDBBA\\uDD6E\", [\"sushi\"], 6, 35, 15, 0],\n    \"1f364\": [[\"\\uD83C\\uDF64\"], \"\", \"\\uDBBA\\uDD7F\", [\"fried_shrimp\"], 6, 36, 15, 0],\n    \"1f365\": [[\"\\uD83C\\uDF65\"], \"\", \"\\uDBBA\\uDD73\", [\"fish_cake\"], 6, 37, 15, 0],\n    \"1f366\": [[\"\\uD83C\\uDF66\"], \"\\uE33A\", \"\\uDBBA\\uDD66\", [\"icecream\"], 6, 38, 15, 0],\n    \"1f367\": [[\"\\uD83C\\uDF67\"], \"\\uE43F\", \"\\uDBBA\\uDD71\", [\"shaved_ice\"], 6, 39, 15, 0],\n    \"1f368\": [[\"\\uD83C\\uDF68\"], \"\", \"\\uDBBA\\uDD77\", [\"ice_cream\"], 6, 40, 15, 0],\n    \"1f369\": [[\"\\uD83C\\uDF69\"], \"\", \"\\uDBBA\\uDD78\", [\"doughnut\"], 6, 41, 15, 0],\n    \"1f36a\": [[\"\\uD83C\\uDF6A\"], \"\", \"\\uDBBA\\uDD79\", [\"cookie\"], 6, 42, 15, 0],\n    \"1f36b\": [[\"\\uD83C\\uDF6B\"], \"\", \"\\uDBBA\\uDD7A\", [\"chocolate_bar\"], 6, 43, 15, 0],\n    \"1f36c\": [[\"\\uD83C\\uDF6C\"], \"\", \"\\uDBBA\\uDD7B\", [\"candy\"], 6, 44, 15, 0],\n    \"1f36d\": [[\"\\uD83C\\uDF6D\"], \"\", \"\\uDBBA\\uDD7C\", [\"lollipop\"], 6, 45, 15, 0],\n    \"1f36e\": [[\"\\uD83C\\uDF6E\"], \"\", \"\\uDBBA\\uDD7D\", [\"custard\"], 6, 46, 15, 0],\n    \"1f36f\": [[\"\\uD83C\\uDF6F\"], \"\", \"\\uDBBA\\uDD7E\", [\"honey_pot\"], 6, 47, 15, 0],\n    \"1f370\": [[\"\\uD83C\\uDF70\"], \"\\uE046\", \"\\uDBBA\\uDD62\", [\"cake\"], 6, 48, 15, 0],\n    \"1f371\": [[\"\\uD83C\\uDF71\"], \"\\uE34C\", \"\\uDBBA\\uDD6F\", [\"bento\"], 6, 49, 15, 0],\n    \"1f372\": [[\"\\uD83C\\uDF72\"], \"\\uE34D\", \"\\uDBBA\\uDD70\", [\"stew\"], 6, 50, 15, 0],\n    \"1f373\": [[\"\\uD83C\\uDF73\"], \"\\uE147\", \"\\uDBBA\\uDD65\", [\"fried_egg\", \"cooking\"], 6, 51, 15, 0],\n    \"1f374\": [[\"\\uD83C\\uDF74\"], \"\\uE043\", \"\\uDBBA\\uDD80\", [\"fork_and_knife\"], 6, 52, 15, 0],\n    \"1f375\": [[\"\\uD83C\\uDF75\"], \"\\uE338\", \"\\uDBBA\\uDD84\", [\"tea\"], 6, 53, 15, 0],\n    \"1f376\": [[\"\\uD83C\\uDF76\"], \"\\uE30B\", \"\\uDBBA\\uDD85\", [\"sake\"], 6, 54, 15, 0],\n    \"1f377\": [[\"\\uD83C\\uDF77\"], \"\", \"\\uDBBA\\uDD86\", [\"wine_glass\"], 6, 55, 15, 0],\n    \"1f378\": [[\"\\uD83C\\uDF78\"], \"\\uE044\", \"\\uDBBA\\uDD82\", [\"cocktail\"], 6, 56, 15, 0],\n    \"1f379\": [[\"\\uD83C\\uDF79\"], \"\", \"\\uDBBA\\uDD88\", [\"tropical_drink\"], 6, 57, 15, 0],\n    \"1f37a\": [[\"\\uD83C\\uDF7A\"], \"\\uE047\", \"\\uDBBA\\uDD83\", [\"beer\"], 6, 58, 15, 0],\n    \"1f37b\": [[\"\\uD83C\\uDF7B\"], \"\\uE30C\", \"\\uDBBA\\uDD87\", [\"beers\"], 6, 59, 15, 0],\n    \"1f37c\": [[\"\\uD83C\\uDF7C\"], \"\", \"\", [\"baby_bottle\"], 6, 60, 15, 0],\n    \"1f37d-fe0f\": [[\"\\uD83C\\uDF7D\\uFE0F\", \"\\uD83C\\uDF7D\"], \"\", \"\", [\"knife_fork_plate\"], 7, 0, 15, 0],\n    \"1f37e\": [[\"\\uD83C\\uDF7E\"], \"\", \"\", [\"champagne\"], 7, 1, 15, 0],\n    \"1f37f\": [[\"\\uD83C\\uDF7F\"], \"\", \"\", [\"popcorn\"], 7, 2, 15, 0],\n    \"1f380\": [[\"\\uD83C\\uDF80\"], \"\\uE314\", \"\\uDBB9\\uDD0F\", [\"ribbon\"], 7, 3, 15, 0],\n    \"1f381\": [[\"\\uD83C\\uDF81\"], \"\\uE112\", \"\\uDBB9\\uDD10\", [\"gift\"], 7, 4, 15, 0],\n    \"1f382\": [[\"\\uD83C\\uDF82\"], \"\\uE34B\", \"\\uDBB9\\uDD11\", [\"birthday\"], 7, 5, 15, 0],\n    \"1f383\": [[\"\\uD83C\\uDF83\"], \"\\uE445\", \"\\uDBB9\\uDD1F\", [\"jack_o_lantern\"], 7, 6, 15, 0],\n    \"1f384\": [[\"\\uD83C\\uDF84\"], \"\\uE033\", \"\\uDBB9\\uDD12\", [\"christmas_tree\"], 7, 7, 15, 0],\n    \"1f385\": [[\"\\uD83C\\uDF85\"], \"\\uE448\", \"\\uDBB9\\uDD13\", [\"santa\"], 7, 8, 15, 0],\n    \"1f386\": [[\"\\uD83C\\uDF86\"], \"\\uE117\", \"\\uDBB9\\uDD15\", [\"fireworks\"], 7, 14, 15, 0],\n    \"1f387\": [[\"\\uD83C\\uDF87\"], \"\\uE440\", \"\\uDBB9\\uDD1D\", [\"sparkler\"], 7, 15, 15, 0],\n    \"1f388\": [[\"\\uD83C\\uDF88\"], \"\\uE310\", \"\\uDBB9\\uDD16\", [\"balloon\"], 7, 16, 15, 0],\n    \"1f389\": [[\"\\uD83C\\uDF89\"], \"\\uE312\", \"\\uDBB9\\uDD17\", [\"tada\"], 7, 17, 15, 0],\n    \"1f38a\": [[\"\\uD83C\\uDF8A\"], \"\", \"\\uDBB9\\uDD20\", [\"confetti_ball\"], 7, 18, 15, 0],\n    \"1f38b\": [[\"\\uD83C\\uDF8B\"], \"\", \"\\uDBB9\\uDD21\", [\"tanabata_tree\"], 7, 19, 15, 0],\n    \"1f38c\": [[\"\\uD83C\\uDF8C\"], \"\\uE143\", \"\\uDBB9\\uDD14\", [\"crossed_flags\"], 7, 20, 15, 0],\n    \"1f38d\": [[\"\\uD83C\\uDF8D\"], \"\\uE436\", \"\\uDBB9\\uDD18\", [\"bamboo\"], 7, 21, 15, 0],\n    \"1f38e\": [[\"\\uD83C\\uDF8E\"], \"\\uE438\", \"\\uDBB9\\uDD19\", [\"dolls\"], 7, 22, 15, 0],\n    \"1f38f\": [[\"\\uD83C\\uDF8F\"], \"\\uE43B\", \"\\uDBB9\\uDD1C\", [\"flags\"], 7, 23, 15, 0],\n    \"1f390\": [[\"\\uD83C\\uDF90\"], \"\\uE442\", \"\\uDBB9\\uDD1E\", [\"wind_chime\"], 7, 24, 15, 0],\n    \"1f391\": [[\"\\uD83C\\uDF91\"], \"\\uE446\", \"\\uDBB8\\uDC17\", [\"rice_scene\"], 7, 25, 15, 0],\n    \"1f392\": [[\"\\uD83C\\uDF92\"], \"\\uE43A\", \"\\uDBB9\\uDD1B\", [\"school_satchel\"], 7, 26, 15, 0],\n    \"1f393\": [[\"\\uD83C\\uDF93\"], \"\\uE439\", \"\\uDBB9\\uDD1A\", [\"mortar_board\"], 7, 27, 15, 0],\n    \"1f396-fe0f\": [[\"\\uD83C\\uDF96\\uFE0F\", \"\\uD83C\\uDF96\"], \"\", \"\", [\"medal\"], 7, 28, 15, 0],\n    \"1f397-fe0f\": [[\"\\uD83C\\uDF97\\uFE0F\", \"\\uD83C\\uDF97\"], \"\", \"\", [\"reminder_ribbon\"], 7, 29, 15, 0],\n    \"1f399-fe0f\": [[\"\\uD83C\\uDF99\\uFE0F\", \"\\uD83C\\uDF99\"], \"\", \"\", [\"studio_microphone\"], 7, 30, 15, 0],\n    \"1f39a-fe0f\": [[\"\\uD83C\\uDF9A\\uFE0F\", \"\\uD83C\\uDF9A\"], \"\", \"\", [\"level_slider\"], 7, 31, 15, 0],\n    \"1f39b-fe0f\": [[\"\\uD83C\\uDF9B\\uFE0F\", \"\\uD83C\\uDF9B\"], \"\", \"\", [\"control_knobs\"], 7, 32, 15, 0],\n    \"1f39e-fe0f\": [[\"\\uD83C\\uDF9E\\uFE0F\", \"\\uD83C\\uDF9E\"], \"\", \"\", [\"film_frames\"], 7, 33, 15, 0],\n    \"1f39f-fe0f\": [[\"\\uD83C\\uDF9F\\uFE0F\", \"\\uD83C\\uDF9F\"], \"\", \"\", [\"admission_tickets\"], 7, 34, 15, 0],\n    \"1f3a0\": [[\"\\uD83C\\uDFA0\"], \"\", \"\\uDBB9\\uDFFC\", [\"carousel_horse\"], 7, 35, 15, 0],\n    \"1f3a1\": [[\"\\uD83C\\uDFA1\"], \"\\uE124\", \"\\uDBB9\\uDFFD\", [\"ferris_wheel\"], 7, 36, 15, 0],\n    \"1f3a2\": [[\"\\uD83C\\uDFA2\"], \"\\uE433\", \"\\uDBB9\\uDFFE\", [\"roller_coaster\"], 7, 37, 15, 0],\n    \"1f3a3\": [[\"\\uD83C\\uDFA3\"], \"\", \"\\uDBB9\\uDFFF\", [\"fishing_pole_and_fish\"], 7, 38, 15, 0],\n    \"1f3a4\": [[\"\\uD83C\\uDFA4\"], \"\\uE03C\", \"\\uDBBA\\uDC00\", [\"microphone\"], 7, 39, 15, 0],\n    \"1f3a5\": [[\"\\uD83C\\uDFA5\"], \"\\uE03D\", \"\\uDBBA\\uDC01\", [\"movie_camera\"], 7, 40, 15, 0],\n    \"1f3a6\": [[\"\\uD83C\\uDFA6\"], \"\\uE507\", \"\\uDBBA\\uDC02\", [\"cinema\"], 7, 41, 15, 0],\n    \"1f3a7\": [[\"\\uD83C\\uDFA7\"], \"\\uE30A\", \"\\uDBBA\\uDC03\", [\"headphones\"], 7, 42, 15, 0],\n    \"1f3a8\": [[\"\\uD83C\\uDFA8\"], \"\\uE502\", \"\\uDBBA\\uDC04\", [\"art\"], 7, 43, 15, 0],\n    \"1f3a9\": [[\"\\uD83C\\uDFA9\"], \"\\uE503\", \"\\uDBBA\\uDC05\", [\"tophat\"], 7, 44, 15, 0],\n    \"1f3aa\": [[\"\\uD83C\\uDFAA\"], \"\", \"\\uDBBA\\uDC06\", [\"circus_tent\"], 7, 45, 15, 0],\n    \"1f3ab\": [[\"\\uD83C\\uDFAB\"], \"\\uE125\", \"\\uDBBA\\uDC07\", [\"ticket\"], 7, 46, 15, 0],\n    \"1f3ac\": [[\"\\uD83C\\uDFAC\"], \"\\uE324\", \"\\uDBBA\\uDC08\", [\"clapper\"], 7, 47, 15, 0],\n    \"1f3ad\": [[\"\\uD83C\\uDFAD\"], \"\", \"\\uDBBA\\uDC09\", [\"performing_arts\"], 7, 48, 15, 0],\n    \"1f3ae\": [[\"\\uD83C\\uDFAE\"], \"\", \"\\uDBBA\\uDC0A\", [\"video_game\"], 7, 49, 15, 0],\n    \"1f3af\": [[\"\\uD83C\\uDFAF\"], \"\\uE130\", \"\\uDBBA\\uDC0C\", [\"dart\"], 7, 50, 15, 0],\n    \"1f3b0\": [[\"\\uD83C\\uDFB0\"], \"\\uE133\", \"\\uDBBA\\uDC0D\", [\"slot_machine\"], 7, 51, 15, 0],\n    \"1f3b1\": [[\"\\uD83C\\uDFB1\"], \"\\uE42C\", \"\\uDBBA\\uDC0E\", [\"8ball\"], 7, 52, 15, 0],\n    \"1f3b2\": [[\"\\uD83C\\uDFB2\"], \"\", \"\\uDBBA\\uDC0F\", [\"game_die\"], 7, 53, 15, 0],\n    \"1f3b3\": [[\"\\uD83C\\uDFB3\"], \"\", \"\\uDBBA\\uDC10\", [\"bowling\"], 7, 54, 15, 0],\n    \"1f3b4\": [[\"\\uD83C\\uDFB4\"], \"\", \"\\uDBBA\\uDC11\", [\"flower_playing_cards\"], 7, 55, 15, 0],\n    \"1f3b5\": [[\"\\uD83C\\uDFB5\"], \"\\uE03E\", \"\\uDBBA\\uDC13\", [\"musical_note\"], 7, 56, 15, 0],\n    \"1f3b6\": [[\"\\uD83C\\uDFB6\"], \"\\uE326\", \"\\uDBBA\\uDC14\", [\"notes\"], 7, 57, 15, 0],\n    \"1f3b7\": [[\"\\uD83C\\uDFB7\"], \"\\uE040\", \"\\uDBBA\\uDC15\", [\"saxophone\"], 7, 58, 15, 0],\n    \"1f3b8\": [[\"\\uD83C\\uDFB8\"], \"\\uE041\", \"\\uDBBA\\uDC16\", [\"guitar\"], 7, 59, 15, 0],\n    \"1f3b9\": [[\"\\uD83C\\uDFB9\"], \"\", \"\\uDBBA\\uDC17\", [\"musical_keyboard\"], 7, 60, 15, 0],\n    \"1f3ba\": [[\"\\uD83C\\uDFBA\"], \"\\uE042\", \"\\uDBBA\\uDC18\", [\"trumpet\"], 8, 0, 15, 0],\n    \"1f3bb\": [[\"\\uD83C\\uDFBB\"], \"\", \"\\uDBBA\\uDC19\", [\"violin\"], 8, 1, 15, 0],\n    \"1f3bc\": [[\"\\uD83C\\uDFBC\"], \"\", \"\\uDBBA\\uDC1A\", [\"musical_score\"], 8, 2, 15, 0],\n    \"1f3bd\": [[\"\\uD83C\\uDFBD\"], \"\", \"\\uDBB9\\uDFD0\", [\"running_shirt_with_sash\"], 8, 3, 15, 0],\n    \"1f3be\": [[\"\\uD83C\\uDFBE\"], \"\\uE015\", \"\\uDBB9\\uDFD3\", [\"tennis\"], 8, 4, 15, 0],\n    \"1f3bf\": [[\"\\uD83C\\uDFBF\"], \"\\uE013\", \"\\uDBB9\\uDFD5\", [\"ski\"], 8, 5, 15, 0],\n    \"1f3c0\": [[\"\\uD83C\\uDFC0\"], \"\\uE42A\", \"\\uDBB9\\uDFD6\", [\"basketball\"], 8, 6, 15, 0],\n    \"1f3c1\": [[\"\\uD83C\\uDFC1\"], \"\\uE132\", \"\\uDBB9\\uDFD7\", [\"checkered_flag\"], 8, 7, 15, 0],\n    \"1f3c2\": [[\"\\uD83C\\uDFC2\"], \"\", \"\\uDBB9\\uDFD8\", [\"snowboarder\"], 8, 8, 15, 0],\n    \"1f3c3-200d-2640-fe0f\": [[\"\\uD83C\\uDFC3\\u200D\\u2640\\uFE0F\", \"\\uD83C\\uDFC3\\u200D\\u2640\"], \"\", \"\", [\"woman-running\"], 8, 14, 15, 0],\n    \"1f3c3-200d-2642-fe0f\": [[\"\\uD83C\\uDFC3\\u200D\\u2642\\uFE0F\", \"\\uD83C\\uDFC3\\u200D\\u2642\", \"\\uD83C\\uDFC3\"], \"\", \"\", [\"man-running\", \"runner\", \"running\"], 8, 20, 15, 0],\n    \"1f3c4-200d-2640-fe0f\": [[\"\\uD83C\\uDFC4\\u200D\\u2640\\uFE0F\", \"\\uD83C\\uDFC4\\u200D\\u2640\"], \"\", \"\", [\"woman-surfing\"], 8, 32, 15, 0],\n    \"1f3c4-200d-2642-fe0f\": [[\"\\uD83C\\uDFC4\\u200D\\u2642\\uFE0F\", \"\\uD83C\\uDFC4\\u200D\\u2642\", \"\\uD83C\\uDFC4\"], \"\", \"\", [\"man-surfing\", \"surfer\"], 8, 38, 15, 0],\n    \"1f3c5\": [[\"\\uD83C\\uDFC5\"], \"\", \"\", [\"sports_medal\"], 8, 50, 15, 0],\n    \"1f3c6\": [[\"\\uD83C\\uDFC6\"], \"\\uE131\", \"\\uDBB9\\uDFDB\", [\"trophy\"], 8, 51, 15, 0],\n    \"1f3c7\": [[\"\\uD83C\\uDFC7\"], \"\", \"\", [\"horse_racing\"], 8, 52, 15, 0],\n    \"1f3c8\": [[\"\\uD83C\\uDFC8\"], \"\\uE42B\", \"\\uDBB9\\uDFDD\", [\"football\"], 8, 58, 15, 0],\n    \"1f3c9\": [[\"\\uD83C\\uDFC9\"], \"\", \"\", [\"rugby_football\"], 8, 59, 15, 0],\n    \"1f3ca-200d-2640-fe0f\": [[\"\\uD83C\\uDFCA\\u200D\\u2640\\uFE0F\", \"\\uD83C\\uDFCA\\u200D\\u2640\"], \"\", \"\", [\"woman-swimming\"], 8, 60, 15, 0],\n    \"1f3ca-200d-2642-fe0f\": [[\"\\uD83C\\uDFCA\\u200D\\u2642\\uFE0F\", \"\\uD83C\\uDFCA\\u200D\\u2642\", \"\\uD83C\\uDFCA\"], \"\", \"\", [\"man-swimming\", \"swimmer\"], 9, 5, 15, 0],\n    \"1f3cb-fe0f-200d-2640-fe0f\": [[\"\\uD83C\\uDFCB\\uFE0F\\u200D\\u2640\\uFE0F\"], \"\", \"\", [\"woman-lifting-weights\"], 9, 17, 7, 0],\n    \"1f3cb-fe0f-200d-2642-fe0f\": [[\"\\uD83C\\uDFCB\\uFE0F\\u200D\\u2642\\uFE0F\", \"\\uD83C\\uDFCB\\uFE0F\", \"\\uD83C\\uDFCB\"], \"\", \"\", [\"man-lifting-weights\", \"weight_lifter\"], 9, 23, 7, 0],\n    \"1f3cc-fe0f-200d-2640-fe0f\": [[\"\\uD83C\\uDFCC\\uFE0F\\u200D\\u2640\\uFE0F\"], \"\", \"\", [\"woman-golfing\"], 9, 35, 7, 0],\n    \"1f3cc-fe0f-200d-2642-fe0f\": [[\"\\uD83C\\uDFCC\\uFE0F\\u200D\\u2642\\uFE0F\", \"\\uD83C\\uDFCC\\uFE0F\", \"\\uD83C\\uDFCC\"], \"\", \"\", [\"man-golfing\", \"golfer\"], 9, 41, 7, 0],\n    \"1f3cd-fe0f\": [[\"\\uD83C\\uDFCD\\uFE0F\", \"\\uD83C\\uDFCD\"], \"\", \"\", [\"racing_motorcycle\"], 9, 53, 15, 0],\n    \"1f3ce-fe0f\": [[\"\\uD83C\\uDFCE\\uFE0F\", \"\\uD83C\\uDFCE\"], \"\", \"\", [\"racing_car\"], 9, 54, 15, 0],\n    \"1f3cf\": [[\"\\uD83C\\uDFCF\"], \"\", \"\", [\"cricket_bat_and_ball\"], 9, 55, 15, 0],\n    \"1f3d0\": [[\"\\uD83C\\uDFD0\"], \"\", \"\", [\"volleyball\"], 9, 56, 15, 0],\n    \"1f3d1\": [[\"\\uD83C\\uDFD1\"], \"\", \"\", [\"field_hockey_stick_and_ball\"], 9, 57, 15, 0],\n    \"1f3d2\": [[\"\\uD83C\\uDFD2\"], \"\", \"\", [\"ice_hockey_stick_and_puck\"], 9, 58, 15, 0],\n    \"1f3d3\": [[\"\\uD83C\\uDFD3\"], \"\", \"\", [\"table_tennis_paddle_and_ball\"], 9, 59, 15, 0],\n    \"1f3d4-fe0f\": [[\"\\uD83C\\uDFD4\\uFE0F\", \"\\uD83C\\uDFD4\"], \"\", \"\", [\"snow_capped_mountain\"], 9, 60, 15, 0],\n    \"1f3d5-fe0f\": [[\"\\uD83C\\uDFD5\\uFE0F\", \"\\uD83C\\uDFD5\"], \"\", \"\", [\"camping\"], 10, 0, 15, 0],\n    \"1f3d6-fe0f\": [[\"\\uD83C\\uDFD6\\uFE0F\", \"\\uD83C\\uDFD6\"], \"\", \"\", [\"beach_with_umbrella\"], 10, 1, 15, 0],\n    \"1f3d7-fe0f\": [[\"\\uD83C\\uDFD7\\uFE0F\", \"\\uD83C\\uDFD7\"], \"\", \"\", [\"building_construction\"], 10, 2, 15, 0],\n    \"1f3d8-fe0f\": [[\"\\uD83C\\uDFD8\\uFE0F\", \"\\uD83C\\uDFD8\"], \"\", \"\", [\"house_buildings\"], 10, 3, 15, 0],\n    \"1f3d9-fe0f\": [[\"\\uD83C\\uDFD9\\uFE0F\", \"\\uD83C\\uDFD9\"], \"\", \"\", [\"cityscape\"], 10, 4, 15, 0],\n    \"1f3da-fe0f\": [[\"\\uD83C\\uDFDA\\uFE0F\", \"\\uD83C\\uDFDA\"], \"\", \"\", [\"derelict_house_building\"], 10, 5, 15, 0],\n    \"1f3db-fe0f\": [[\"\\uD83C\\uDFDB\\uFE0F\", \"\\uD83C\\uDFDB\"], \"\", \"\", [\"classical_building\"], 10, 6, 15, 0],\n    \"1f3dc-fe0f\": [[\"\\uD83C\\uDFDC\\uFE0F\", \"\\uD83C\\uDFDC\"], \"\", \"\", [\"desert\"], 10, 7, 15, 0],\n    \"1f3dd-fe0f\": [[\"\\uD83C\\uDFDD\\uFE0F\", \"\\uD83C\\uDFDD\"], \"\", \"\", [\"desert_island\"], 10, 8, 15, 0],\n    \"1f3de-fe0f\": [[\"\\uD83C\\uDFDE\\uFE0F\", \"\\uD83C\\uDFDE\"], \"\", \"\", [\"national_park\"], 10, 9, 15, 0],\n    \"1f3df-fe0f\": [[\"\\uD83C\\uDFDF\\uFE0F\", \"\\uD83C\\uDFDF\"], \"\", \"\", [\"stadium\"], 10, 10, 15, 0],\n    \"1f3e0\": [[\"\\uD83C\\uDFE0\"], \"\\uE036\", \"\\uDBB9\\uDCB0\", [\"house\"], 10, 11, 15, 0],\n    \"1f3e1\": [[\"\\uD83C\\uDFE1\"], \"\", \"\\uDBB9\\uDCB1\", [\"house_with_garden\"], 10, 12, 15, 0],\n    \"1f3e2\": [[\"\\uD83C\\uDFE2\"], \"\\uE038\", \"\\uDBB9\\uDCB2\", [\"office\"], 10, 13, 15, 0],\n    \"1f3e3\": [[\"\\uD83C\\uDFE3\"], \"\\uE153\", \"\\uDBB9\\uDCB3\", [\"post_office\"], 10, 14, 15, 0],\n    \"1f3e4\": [[\"\\uD83C\\uDFE4\"], \"\", \"\", [\"european_post_office\"], 10, 15, 15, 0],\n    \"1f3e5\": [[\"\\uD83C\\uDFE5\"], \"\\uE155\", \"\\uDBB9\\uDCB4\", [\"hospital\"], 10, 16, 15, 0],\n    \"1f3e6\": [[\"\\uD83C\\uDFE6\"], \"\\uE14D\", \"\\uDBB9\\uDCB5\", [\"bank\"], 10, 17, 15, 0],\n    \"1f3e7\": [[\"\\uD83C\\uDFE7\"], \"\\uE154\", \"\\uDBB9\\uDCB6\", [\"atm\"], 10, 18, 15, 0],\n    \"1f3e8\": [[\"\\uD83C\\uDFE8\"], \"\\uE158\", \"\\uDBB9\\uDCB7\", [\"hotel\"], 10, 19, 15, 0],\n    \"1f3e9\": [[\"\\uD83C\\uDFE9\"], \"\\uE501\", \"\\uDBB9\\uDCB8\", [\"love_hotel\"], 10, 20, 15, 0],\n    \"1f3ea\": [[\"\\uD83C\\uDFEA\"], \"\\uE156\", \"\\uDBB9\\uDCB9\", [\"convenience_store\"], 10, 21, 15, 0],\n    \"1f3eb\": [[\"\\uD83C\\uDFEB\"], \"\\uE157\", \"\\uDBB9\\uDCBA\", [\"school\"], 10, 22, 15, 0],\n    \"1f3ec\": [[\"\\uD83C\\uDFEC\"], \"\\uE504\", \"\\uDBB9\\uDCBD\", [\"department_store\"], 10, 23, 15, 0],\n    \"1f3ed\": [[\"\\uD83C\\uDFED\"], \"\\uE508\", \"\\uDBB9\\uDCC0\", [\"factory\"], 10, 24, 15, 0],\n    \"1f3ee\": [[\"\\uD83C\\uDFEE\"], \"\", \"\\uDBB9\\uDCC2\", [\"izakaya_lantern\", \"lantern\"], 10, 25, 15, 0],\n    \"1f3ef\": [[\"\\uD83C\\uDFEF\"], \"\\uE505\", \"\\uDBB9\\uDCBE\", [\"japanese_castle\"], 10, 26, 15, 0],\n    \"1f3f0\": [[\"\\uD83C\\uDFF0\"], \"\\uE506\", \"\\uDBB9\\uDCBF\", [\"european_castle\"], 10, 27, 15, 0],\n    \"1f3f3-fe0f-200d-1f308\": [[\"\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08\", \"\\uD83C\\uDFF3\\u200D\\uD83C\\uDF08\"], \"\", \"\", [\"rainbow-flag\"], 10, 28, 15, 0],\n    \"1f3f3-fe0f-200d-26a7-fe0f\": [[\"\\uD83C\\uDFF3\\uFE0F\\u200D\\u26A7\\uFE0F\"], \"\", \"\", [\"transgender_flag\"], 10, 29, 7, 0],\n    \"1f3f3-fe0f\": [[\"\\uD83C\\uDFF3\\uFE0F\", \"\\uD83C\\uDFF3\"], \"\", \"\", [\"waving_white_flag\"], 10, 30, 15, 0],\n    \"1f3f4-200d-2620-fe0f\": [[\"\\uD83C\\uDFF4\\u200D\\u2620\\uFE0F\", \"\\uD83C\\uDFF4\\u200D\\u2620\"], \"\", \"\", [\"pirate_flag\"], 10, 31, 15, 0],\n    \"1f3f4-e0067-e0062-e0065-e006e-e0067-e007f\": [[\"\\uD83C\\uDFF4\\uDB40\\uDC67\\uDB40\\uDC62\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67\\uDB40\\uDC7F\"], \"\", \"\", [\"flag-england\"], 10, 32, 15, 0],\n    \"1f3f4-e0067-e0062-e0073-e0063-e0074-e007f\": [[\"\\uD83C\\uDFF4\\uDB40\\uDC67\\uDB40\\uDC62\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74\\uDB40\\uDC7F\"], \"\", \"\", [\"flag-scotland\"], 10, 33, 15, 0],\n    \"1f3f4-e0067-e0062-e0077-e006c-e0073-e007f\": [[\"\\uD83C\\uDFF4\\uDB40\\uDC67\\uDB40\\uDC62\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73\\uDB40\\uDC7F\"], \"\", \"\", [\"flag-wales\"], 10, 34, 15, 0],\n    \"1f3f4\": [[\"\\uD83C\\uDFF4\"], \"\", \"\", [\"waving_black_flag\"], 10, 35, 15, 0],\n    \"1f3f5-fe0f\": [[\"\\uD83C\\uDFF5\\uFE0F\", \"\\uD83C\\uDFF5\"], \"\", \"\", [\"rosette\"], 10, 36, 15, 0],\n    \"1f3f7-fe0f\": [[\"\\uD83C\\uDFF7\\uFE0F\", \"\\uD83C\\uDFF7\"], \"\", \"\", [\"label\"], 10, 37, 15, 0],\n    \"1f3f8\": [[\"\\uD83C\\uDFF8\"], \"\", \"\", [\"badminton_racquet_and_shuttlecock\"], 10, 38, 15, 0],\n    \"1f3f9\": [[\"\\uD83C\\uDFF9\"], \"\", \"\", [\"bow_and_arrow\"], 10, 39, 15, 0],\n    \"1f3fa\": [[\"\\uD83C\\uDFFA\"], \"\", \"\", [\"amphora\"], 10, 40, 15, 0],\n    \"1f3fb\": [[\"\\uD83C\\uDFFB\"], \"\", \"\", [\"skin-tone-2\"], 10, 41, 15, 0],\n    \"1f3fc\": [[\"\\uD83C\\uDFFC\"], \"\", \"\", [\"skin-tone-3\"], 10, 42, 15, 0],\n    \"1f3fd\": [[\"\\uD83C\\uDFFD\"], \"\", \"\", [\"skin-tone-4\"], 10, 43, 15, 0],\n    \"1f3fe\": [[\"\\uD83C\\uDFFE\"], \"\", \"\", [\"skin-tone-5\"], 10, 44, 15, 0],\n    \"1f3ff\": [[\"\\uD83C\\uDFFF\"], \"\", \"\", [\"skin-tone-6\"], 10, 45, 15, 0],\n    \"1f400\": [[\"\\uD83D\\uDC00\"], \"\", \"\", [\"rat\"], 10, 46, 15, 0],\n    \"1f401\": [[\"\\uD83D\\uDC01\"], \"\", \"\", [\"mouse2\"], 10, 47, 15, 0],\n    \"1f402\": [[\"\\uD83D\\uDC02\"], \"\", \"\", [\"ox\"], 10, 48, 15, 0],\n    \"1f403\": [[\"\\uD83D\\uDC03\"], \"\", \"\", [\"water_buffalo\"], 10, 49, 15, 0],\n    \"1f404\": [[\"\\uD83D\\uDC04\"], \"\", \"\", [\"cow2\"], 10, 50, 15, 0],\n    \"1f405\": [[\"\\uD83D\\uDC05\"], \"\", \"\", [\"tiger2\"], 10, 51, 15, 0],\n    \"1f406\": [[\"\\uD83D\\uDC06\"], \"\", \"\", [\"leopard\"], 10, 52, 15, 0],\n    \"1f407\": [[\"\\uD83D\\uDC07\"], \"\", \"\", [\"rabbit2\"], 10, 53, 15, 0],\n    \"1f408-200d-2b1b\": [[\"\\uD83D\\uDC08\\u200D\\u2B1B\"], \"\", \"\", [\"black_cat\"], 10, 54, 15, 0],\n    \"1f408\": [[\"\\uD83D\\uDC08\"], \"\", \"\", [\"cat2\"], 10, 55, 15, 0],\n    \"1f409\": [[\"\\uD83D\\uDC09\"], \"\", \"\", [\"dragon\"], 10, 56, 15, 0],\n    \"1f40a\": [[\"\\uD83D\\uDC0A\"], \"\", \"\", [\"crocodile\"], 10, 57, 15, 0],\n    \"1f40b\": [[\"\\uD83D\\uDC0B\"], \"\", \"\", [\"whale2\"], 10, 58, 15, 0],\n    \"1f40c\": [[\"\\uD83D\\uDC0C\"], \"\", \"\\uDBB8\\uDDB9\", [\"snail\"], 10, 59, 15, 0],\n    \"1f40d\": [[\"\\uD83D\\uDC0D\"], \"\\uE52D\", \"\\uDBB8\\uDDD3\", [\"snake\"], 10, 60, 15, 0],\n    \"1f40e\": [[\"\\uD83D\\uDC0E\"], \"\\uE134\", \"\\uDBB9\\uDFDC\", [\"racehorse\"], 11, 0, 15, 0],\n    \"1f40f\": [[\"\\uD83D\\uDC0F\"], \"\", \"\", [\"ram\"], 11, 1, 15, 0],\n    \"1f410\": [[\"\\uD83D\\uDC10\"], \"\", \"\", [\"goat\"], 11, 2, 15, 0],\n    \"1f411\": [[\"\\uD83D\\uDC11\"], \"\\uE529\", \"\\uDBB8\\uDDCF\", [\"sheep\"], 11, 3, 15, 0],\n    \"1f412\": [[\"\\uD83D\\uDC12\"], \"\\uE528\", \"\\uDBB8\\uDDCE\", [\"monkey\"], 11, 4, 15, 0],\n    \"1f413\": [[\"\\uD83D\\uDC13\"], \"\", \"\", [\"rooster\"], 11, 5, 15, 0],\n    \"1f414\": [[\"\\uD83D\\uDC14\"], \"\\uE52E\", \"\\uDBB8\\uDDD4\", [\"chicken\"], 11, 6, 15, 0],\n    \"1f415-200d-1f9ba\": [[\"\\uD83D\\uDC15\\u200D\\uD83E\\uDDBA\"], \"\", \"\", [\"service_dog\"], 11, 7, 15, 0],\n    \"1f415\": [[\"\\uD83D\\uDC15\"], \"\", \"\", [\"dog2\"], 11, 8, 15, 0],\n    \"1f416\": [[\"\\uD83D\\uDC16\"], \"\", \"\", [\"pig2\"], 11, 9, 15, 0],\n    \"1f417\": [[\"\\uD83D\\uDC17\"], \"\\uE52F\", \"\\uDBB8\\uDDD5\", [\"boar\"], 11, 10, 15, 0],\n    \"1f418\": [[\"\\uD83D\\uDC18\"], \"\\uE526\", \"\\uDBB8\\uDDCC\", [\"elephant\"], 11, 11, 15, 0],\n    \"1f419\": [[\"\\uD83D\\uDC19\"], \"\\uE10A\", \"\\uDBB8\\uDDC5\", [\"octopus\"], 11, 12, 15, 0],\n    \"1f41a\": [[\"\\uD83D\\uDC1A\"], \"\\uE441\", \"\\uDBB8\\uDDC6\", [\"shell\"], 11, 13, 15, 0],\n    \"1f41b\": [[\"\\uD83D\\uDC1B\"], \"\\uE525\", \"\\uDBB8\\uDDCB\", [\"bug\"], 11, 14, 15, 0],\n    \"1f41c\": [[\"\\uD83D\\uDC1C\"], \"\", \"\\uDBB8\\uDDDA\", [\"ant\"], 11, 15, 15, 0],\n    \"1f41d\": [[\"\\uD83D\\uDC1D\"], \"\", \"\\uDBB8\\uDDE1\", [\"bee\", \"honeybee\"], 11, 16, 15, 0],\n    \"1f41e\": [[\"\\uD83D\\uDC1E\"], \"\", \"\\uDBB8\\uDDE2\", [\"ladybug\", \"lady_beetle\"], 11, 17, 15, 0],\n    \"1f41f\": [[\"\\uD83D\\uDC1F\"], \"\\uE019\", \"\\uDBB8\\uDDBD\", [\"fish\"], 11, 18, 15, 0],\n    \"1f420\": [[\"\\uD83D\\uDC20\"], \"\\uE522\", \"\\uDBB8\\uDDC9\", [\"tropical_fish\"], 11, 19, 15, 0],\n    \"1f421\": [[\"\\uD83D\\uDC21\"], \"\", \"\\uDBB8\\uDDD9\", [\"blowfish\"], 11, 20, 15, 0],\n    \"1f422\": [[\"\\uD83D\\uDC22\"], \"\", \"\\uDBB8\\uDDDC\", [\"turtle\"], 11, 21, 15, 0],\n    \"1f423\": [[\"\\uD83D\\uDC23\"], \"\", \"\\uDBB8\\uDDDD\", [\"hatching_chick\"], 11, 22, 15, 0],\n    \"1f424\": [[\"\\uD83D\\uDC24\"], \"\\uE523\", \"\\uDBB8\\uDDBA\", [\"baby_chick\"], 11, 23, 15, 0],\n    \"1f425\": [[\"\\uD83D\\uDC25\"], \"\", \"\\uDBB8\\uDDBB\", [\"hatched_chick\"], 11, 24, 15, 0],\n    \"1f426-200d-2b1b\": [[\"\\uD83D\\uDC26\\u200D\\u2B1B\"], \"\", \"\", [\"black_bird\"], 11, 25, 3, 0],\n    \"1f426\": [[\"\\uD83D\\uDC26\"], \"\\uE521\", \"\\uDBB8\\uDDC8\", [\"bird\"], 11, 26, 15, 0],\n    \"1f427\": [[\"\\uD83D\\uDC27\"], \"\\uE055\", \"\\uDBB8\\uDDBC\", [\"penguin\"], 11, 27, 15, 0],\n    \"1f428\": [[\"\\uD83D\\uDC28\"], \"\\uE527\", \"\\uDBB8\\uDDCD\", [\"koala\"], 11, 28, 15, 0],\n    \"1f429\": [[\"\\uD83D\\uDC29\"], \"\", \"\\uDBB8\\uDDD8\", [\"poodle\"], 11, 29, 15, 0],\n    \"1f42a\": [[\"\\uD83D\\uDC2A\"], \"\", \"\", [\"dromedary_camel\"], 11, 30, 15, 0],\n    \"1f42b\": [[\"\\uD83D\\uDC2B\"], \"\\uE530\", \"\\uDBB8\\uDDD6\", [\"camel\"], 11, 31, 15, 0],\n    \"1f42c\": [[\"\\uD83D\\uDC2C\"], \"\\uE520\", \"\\uDBB8\\uDDC7\", [\"dolphin\", \"flipper\"], 11, 32, 15, 0],\n    \"1f42d\": [[\"\\uD83D\\uDC2D\"], \"\\uE053\", \"\\uDBB8\\uDDC2\", [\"mouse\"], 11, 33, 15, 0],\n    \"1f42e\": [[\"\\uD83D\\uDC2E\"], \"\\uE52B\", \"\\uDBB8\\uDDD1\", [\"cow\"], 11, 34, 15, 0],\n    \"1f42f\": [[\"\\uD83D\\uDC2F\"], \"\\uE050\", \"\\uDBB8\\uDDC0\", [\"tiger\"], 11, 35, 15, 0],\n    \"1f430\": [[\"\\uD83D\\uDC30\"], \"\\uE52C\", \"\\uDBB8\\uDDD2\", [\"rabbit\"], 11, 36, 15, 0],\n    \"1f431\": [[\"\\uD83D\\uDC31\"], \"\\uE04F\", \"\\uDBB8\\uDDB8\", [\"cat\"], 11, 37, 15, 0],\n    \"1f432\": [[\"\\uD83D\\uDC32\"], \"\", \"\\uDBB8\\uDDDE\", [\"dragon_face\"], 11, 38, 15, 0],\n    \"1f433\": [[\"\\uD83D\\uDC33\"], \"\\uE054\", \"\\uDBB8\\uDDC3\", [\"whale\"], 11, 39, 15, 0],\n    \"1f434\": [[\"\\uD83D\\uDC34\"], \"\\uE01A\", \"\\uDBB8\\uDDBE\", [\"horse\"], 11, 40, 15, 0],\n    \"1f435\": [[\"\\uD83D\\uDC35\"], \"\\uE109\", \"\\uDBB8\\uDDC4\", [\"monkey_face\"], 11, 41, 15, 0],\n    \"1f436\": [[\"\\uD83D\\uDC36\"], \"\\uE052\", \"\\uDBB8\\uDDB7\", [\"dog\"], 11, 42, 15, 0],\n    \"1f437\": [[\"\\uD83D\\uDC37\"], \"\\uE10B\", \"\\uDBB8\\uDDBF\", [\"pig\"], 11, 43, 15, 0],\n    \"1f438\": [[\"\\uD83D\\uDC38\"], \"\\uE531\", \"\\uDBB8\\uDDD7\", [\"frog\"], 11, 44, 15, 0],\n    \"1f439\": [[\"\\uD83D\\uDC39\"], \"\\uE524\", \"\\uDBB8\\uDDCA\", [\"hamster\"], 11, 45, 15, 0],\n    \"1f43a\": [[\"\\uD83D\\uDC3A\"], \"\\uE52A\", \"\\uDBB8\\uDDD0\", [\"wolf\"], 11, 46, 15, 0],\n    \"1f43b-200d-2744-fe0f\": [[\"\\uD83D\\uDC3B\\u200D\\u2744\\uFE0F\", \"\\uD83D\\uDC3B\\u200D\\u2744\"], \"\", \"\", [\"polar_bear\"], 11, 47, 15, 0],\n    \"1f43b\": [[\"\\uD83D\\uDC3B\"], \"\\uE051\", \"\\uDBB8\\uDDC1\", [\"bear\"], 11, 48, 15, 0],\n    \"1f43c\": [[\"\\uD83D\\uDC3C\"], \"\", \"\\uDBB8\\uDDDF\", [\"panda_face\"], 11, 49, 15, 0],\n    \"1f43d\": [[\"\\uD83D\\uDC3D\"], \"\", \"\\uDBB8\\uDDE0\", [\"pig_nose\"], 11, 50, 15, 0],\n    \"1f43e\": [[\"\\uD83D\\uDC3E\"], \"\", \"\\uDBB8\\uDDDB\", [\"feet\", \"paw_prints\"], 11, 51, 15, 0],\n    \"1f43f-fe0f\": [[\"\\uD83D\\uDC3F\\uFE0F\", \"\\uD83D\\uDC3F\"], \"\", \"\", [\"chipmunk\"], 11, 52, 15, 0],\n    \"1f440\": [[\"\\uD83D\\uDC40\"], \"\\uE419\", \"\\uDBB8\\uDD90\", [\"eyes\"], 11, 53, 15, 0],\n    \"1f441-fe0f-200d-1f5e8-fe0f\": [[\"\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8\\uFE0F\"], \"\", \"\", [\"eye-in-speech-bubble\"], 11, 54, 7, 0],\n    \"1f441-fe0f\": [[\"\\uD83D\\uDC41\\uFE0F\", \"\\uD83D\\uDC41\"], \"\", \"\", [\"eye\"], 11, 55, 15, 0],\n    \"1f442\": [[\"\\uD83D\\uDC42\"], \"\\uE41B\", \"\\uDBB8\\uDD91\", [\"ear\"], 11, 56, 15, 0],\n    \"1f443\": [[\"\\uD83D\\uDC43\"], \"\\uE41A\", \"\\uDBB8\\uDD92\", [\"nose\"], 12, 1, 15, 0],\n    \"1f444\": [[\"\\uD83D\\uDC44\"], \"\\uE41C\", \"\\uDBB8\\uDD93\", [\"lips\"], 12, 7, 15, 0],\n    \"1f445\": [[\"\\uD83D\\uDC45\"], \"\", \"\\uDBB8\\uDD94\", [\"tongue\"], 12, 8, 15, 0],\n    \"1f446\": [[\"\\uD83D\\uDC46\"], \"\\uE22E\", \"\\uDBBA\\uDF99\", [\"point_up_2\"], 12, 9, 15, 0],\n    \"1f447\": [[\"\\uD83D\\uDC47\"], \"\\uE22F\", \"\\uDBBA\\uDF9A\", [\"point_down\"], 12, 15, 15, 0],\n    \"1f448\": [[\"\\uD83D\\uDC48\"], \"\\uE230\", \"\\uDBBA\\uDF9B\", [\"point_left\"], 12, 21, 15, 0],\n    \"1f449\": [[\"\\uD83D\\uDC49\"], \"\\uE231\", \"\\uDBBA\\uDF9C\", [\"point_right\"], 12, 27, 15, 0],\n    \"1f44a\": [[\"\\uD83D\\uDC4A\"], \"\\uE00D\", \"\\uDBBA\\uDF96\", [\"facepunch\", \"punch\"], 12, 33, 15, 0],\n    \"1f44b\": [[\"\\uD83D\\uDC4B\"], \"\\uE41E\", \"\\uDBBA\\uDF9D\", [\"wave\"], 12, 39, 15, 0],\n    \"1f44c\": [[\"\\uD83D\\uDC4C\"], \"\\uE420\", \"\\uDBBA\\uDF9F\", [\"ok_hand\"], 12, 45, 15, 0],\n    \"1f44d\": [[\"\\uD83D\\uDC4D\"], \"\\uE00E\", \"\\uDBBA\\uDF97\", [\"+1\", \"thumbsup\"], 12, 51, 15, 0],\n    \"1f44e\": [[\"\\uD83D\\uDC4E\"], \"\\uE421\", \"\\uDBBA\\uDFA0\", [\"-1\", \"thumbsdown\"], 12, 57, 15, 0],\n    \"1f44f\": [[\"\\uD83D\\uDC4F\"], \"\\uE41F\", \"\\uDBBA\\uDF9E\", [\"clap\"], 13, 2, 15, 0],\n    \"1f450\": [[\"\\uD83D\\uDC50\"], \"\\uE422\", \"\\uDBBA\\uDFA1\", [\"open_hands\"], 13, 8, 15, 0],\n    \"1f451\": [[\"\\uD83D\\uDC51\"], \"\\uE10E\", \"\\uDBB9\\uDCD1\", [\"crown\"], 13, 14, 15, 0],\n    \"1f452\": [[\"\\uD83D\\uDC52\"], \"\\uE318\", \"\\uDBB9\\uDCD4\", [\"womans_hat\"], 13, 15, 15, 0],\n    \"1f453\": [[\"\\uD83D\\uDC53\"], \"\", \"\\uDBB9\\uDCCE\", [\"eyeglasses\"], 13, 16, 15, 0],\n    \"1f454\": [[\"\\uD83D\\uDC54\"], \"\\uE302\", \"\\uDBB9\\uDCD3\", [\"necktie\"], 13, 17, 15, 0],\n    \"1f455\": [[\"\\uD83D\\uDC55\"], \"\\uE006\", \"\\uDBB9\\uDCCF\", [\"shirt\", \"tshirt\"], 13, 18, 15, 0],\n    \"1f456\": [[\"\\uD83D\\uDC56\"], \"\", \"\\uDBB9\\uDCD0\", [\"jeans\"], 13, 19, 15, 0],\n    \"1f457\": [[\"\\uD83D\\uDC57\"], \"\\uE319\", \"\\uDBB9\\uDCD5\", [\"dress\"], 13, 20, 15, 0],\n    \"1f458\": [[\"\\uD83D\\uDC58\"], \"\\uE321\", \"\\uDBB9\\uDCD9\", [\"kimono\"], 13, 21, 15, 0],\n    \"1f459\": [[\"\\uD83D\\uDC59\"], \"\\uE322\", \"\\uDBB9\\uDCDA\", [\"bikini\"], 13, 22, 15, 0],\n    \"1f45a\": [[\"\\uD83D\\uDC5A\"], \"\", \"\\uDBB9\\uDCDB\", [\"womans_clothes\"], 13, 23, 15, 0],\n    \"1f45b\": [[\"\\uD83D\\uDC5B\"], \"\", \"\\uDBB9\\uDCDC\", [\"purse\"], 13, 24, 15, 0],\n    \"1f45c\": [[\"\\uD83D\\uDC5C\"], \"\\uE323\", \"\\uDBB9\\uDCF0\", [\"handbag\"], 13, 25, 15, 0],\n    \"1f45d\": [[\"\\uD83D\\uDC5D\"], \"\", \"\\uDBB9\\uDCF1\", [\"pouch\"], 13, 26, 15, 0],\n    \"1f45e\": [[\"\\uD83D\\uDC5E\"], \"\", \"\\uDBB9\\uDCCC\", [\"mans_shoe\", \"shoe\"], 13, 27, 15, 0],\n    \"1f45f\": [[\"\\uD83D\\uDC5F\"], \"\\uE007\", \"\\uDBB9\\uDCCD\", [\"athletic_shoe\"], 13, 28, 15, 0],\n    \"1f460\": [[\"\\uD83D\\uDC60\"], \"\\uE13E\", \"\\uDBB9\\uDCD6\", [\"high_heel\"], 13, 29, 15, 0],\n    \"1f461\": [[\"\\uD83D\\uDC61\"], \"\\uE31A\", \"\\uDBB9\\uDCD7\", [\"sandal\"], 13, 30, 15, 0],\n    \"1f462\": [[\"\\uD83D\\uDC62\"], \"\\uE31B\", \"\\uDBB9\\uDCD8\", [\"boot\"], 13, 31, 15, 0],\n    \"1f463\": [[\"\\uD83D\\uDC63\"], \"\\uE536\", \"\\uDBB9\\uDD53\", [\"footprints\"], 13, 32, 15, 0],\n    \"1f464\": [[\"\\uD83D\\uDC64\"], \"\", \"\\uDBB8\\uDD9A\", [\"bust_in_silhouette\"], 13, 33, 15, 0],\n    \"1f465\": [[\"\\uD83D\\uDC65\"], \"\", \"\", [\"busts_in_silhouette\"], 13, 34, 15, 0],\n    \"1f466\": [[\"\\uD83D\\uDC66\"], \"\\uE001\", \"\\uDBB8\\uDD9B\", [\"boy\"], 13, 35, 15, 0],\n    \"1f467\": [[\"\\uD83D\\uDC67\"], \"\\uE002\", \"\\uDBB8\\uDD9C\", [\"girl\"], 13, 41, 15, 0],\n    \"1f468-200d-1f33e\": [[\"\\uD83D\\uDC68\\u200D\\uD83C\\uDF3E\"], \"\", \"\", [\"male-farmer\"], 13, 47, 15, 0],\n    \"1f468-200d-1f373\": [[\"\\uD83D\\uDC68\\u200D\\uD83C\\uDF73\"], \"\", \"\", [\"male-cook\"], 13, 53, 15, 0],\n    \"1f468-200d-1f37c\": [[\"\\uD83D\\uDC68\\u200D\\uD83C\\uDF7C\"], \"\", \"\", [\"man_feeding_baby\"], 13, 59, 15, 0],\n    \"1f468-200d-1f393\": [[\"\\uD83D\\uDC68\\u200D\\uD83C\\uDF93\"], \"\", \"\", [\"male-student\"], 14, 4, 15, 0],\n    \"1f468-200d-1f3a4\": [[\"\\uD83D\\uDC68\\u200D\\uD83C\\uDFA4\"], \"\", \"\", [\"male-singer\"], 14, 10, 15, 0],\n    \"1f468-200d-1f3a8\": [[\"\\uD83D\\uDC68\\u200D\\uD83C\\uDFA8\"], \"\", \"\", [\"male-artist\"], 14, 16, 15, 0],\n    \"1f468-200d-1f3eb\": [[\"\\uD83D\\uDC68\\u200D\\uD83C\\uDFEB\"], \"\", \"\", [\"male-teacher\"], 14, 22, 15, 0],\n    \"1f468-200d-1f3ed\": [[\"\\uD83D\\uDC68\\u200D\\uD83C\\uDFED\"], \"\", \"\", [\"male-factory-worker\"], 14, 28, 15, 0],\n    \"1f468-200d-1f466-200d-1f466\": [[\"\\uD83D\\uDC68\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66\"], \"\", \"\", [\"man-boy-boy\"], 14, 34, 15, 0],\n    \"1f468-200d-1f466\": [[\"\\uD83D\\uDC68\\u200D\\uD83D\\uDC66\"], \"\", \"\", [\"man-boy\"], 14, 35, 15, 0],\n    \"1f468-200d-1f467-200d-1f466\": [[\"\\uD83D\\uDC68\\u200D\\uD83D\\uDC67\\u200D\\uD83D\\uDC66\"], \"\", \"\", [\"man-girl-boy\"], 14, 36, 15, 0],\n    \"1f468-200d-1f467-200d-1f467\": [[\"\\uD83D\\uDC68\\u200D\\uD83D\\uDC67\\u200D\\uD83D\\uDC67\"], \"\", \"\", [\"man-girl-girl\"], 14, 37, 15, 0],\n    \"1f468-200d-1f467\": [[\"\\uD83D\\uDC68\\u200D\\uD83D\\uDC67\"], \"\", \"\", [\"man-girl\"], 14, 38, 15, 0],\n    \"1f468-200d-1f468-200d-1f466\": [[\"\\uD83D\\uDC68\\u200D\\uD83D\\uDC68\\u200D\\uD83D\\uDC66\"], \"\", \"\", [\"man-man-boy\"], 14, 39, 15, 0],\n    \"1f468-200d-1f468-200d-1f466-200d-1f466\": [[\"\\uD83D\\uDC68\\u200D\\uD83D\\uDC68\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66\"], \"\", \"\", [\"man-man-boy-boy\"], 14, 40, 15, 0],\n    \"1f468-200d-1f468-200d-1f467\": [[\"\\uD83D\\uDC68\\u200D\\uD83D\\uDC68\\u200D\\uD83D\\uDC67\"], \"\", \"\", [\"man-man-girl\"], 14, 41, 15, 0],\n    \"1f468-200d-1f468-200d-1f467-200d-1f466\": [[\"\\uD83D\\uDC68\\u200D\\uD83D\\uDC68\\u200D\\uD83D\\uDC67\\u200D\\uD83D\\uDC66\"], \"\", \"\", [\"man-man-girl-boy\"], 14, 42, 15, 0],\n    \"1f468-200d-1f468-200d-1f467-200d-1f467\": [[\"\\uD83D\\uDC68\\u200D\\uD83D\\uDC68\\u200D\\uD83D\\uDC67\\u200D\\uD83D\\uDC67\"], \"\", \"\", [\"man-man-girl-girl\"], 14, 43, 15, 0],\n    \"1f468-200d-1f469-200d-1f466\": [[\"\\uD83D\\uDC68\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\", \"\\uD83D\\uDC6A\"], \"\", \"\", [\"man-woman-boy\", \"family\"], 14, 44, 15, 0],\n    \"1f468-200d-1f469-200d-1f466-200d-1f466\": [[\"\\uD83D\\uDC68\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66\"], \"\", \"\", [\"man-woman-boy-boy\"], 14, 45, 15, 0],\n    \"1f468-200d-1f469-200d-1f467\": [[\"\\uD83D\\uDC68\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\"], \"\", \"\", [\"man-woman-girl\"], 14, 46, 15, 0],\n    \"1f468-200d-1f469-200d-1f467-200d-1f466\": [[\"\\uD83D\\uDC68\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D\\uD83D\\uDC66\"], \"\", \"\", [\"man-woman-girl-boy\"], 14, 47, 15, 0],\n    \"1f468-200d-1f469-200d-1f467-200d-1f467\": [[\"\\uD83D\\uDC68\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D\\uD83D\\uDC67\"], \"\", \"\", [\"man-woman-girl-girl\"], 14, 48, 15, 0],\n    \"1f468-200d-1f4bb\": [[\"\\uD83D\\uDC68\\u200D\\uD83D\\uDCBB\"], \"\", \"\", [\"male-technologist\"], 14, 49, 15, 0],\n    \"1f468-200d-1f4bc\": [[\"\\uD83D\\uDC68\\u200D\\uD83D\\uDCBC\"], \"\", \"\", [\"male-office-worker\"], 14, 55, 15, 0],\n    \"1f468-200d-1f527\": [[\"\\uD83D\\uDC68\\u200D\\uD83D\\uDD27\"], \"\", \"\", [\"male-mechanic\"], 15, 0, 15, 0],\n    \"1f468-200d-1f52c\": [[\"\\uD83D\\uDC68\\u200D\\uD83D\\uDD2C\"], \"\", \"\", [\"male-scientist\"], 15, 6, 15, 0],\n    \"1f468-200d-1f680\": [[\"\\uD83D\\uDC68\\u200D\\uD83D\\uDE80\"], \"\", \"\", [\"male-astronaut\"], 15, 12, 15, 0],\n    \"1f468-200d-1f692\": [[\"\\uD83D\\uDC68\\u200D\\uD83D\\uDE92\"], \"\", \"\", [\"male-firefighter\"], 15, 18, 15, 0],\n    \"1f468-200d-1f9af\": [[\"\\uD83D\\uDC68\\u200D\\uD83E\\uDDAF\"], \"\", \"\", [\"man_with_probing_cane\"], 15, 24, 15, 0],\n    \"1f468-200d-1f9b0\": [[\"\\uD83D\\uDC68\\u200D\\uD83E\\uDDB0\"], \"\", \"\", [\"red_haired_man\"], 15, 30, 15, 0],\n    \"1f468-200d-1f9b1\": [[\"\\uD83D\\uDC68\\u200D\\uD83E\\uDDB1\"], \"\", \"\", [\"curly_haired_man\"], 15, 36, 15, 0],\n    \"1f468-200d-1f9b2\": [[\"\\uD83D\\uDC68\\u200D\\uD83E\\uDDB2\"], \"\", \"\", [\"bald_man\"], 15, 42, 15, 0],\n    \"1f468-200d-1f9b3\": [[\"\\uD83D\\uDC68\\u200D\\uD83E\\uDDB3\"], \"\", \"\", [\"white_haired_man\"], 15, 48, 15, 0],\n    \"1f468-200d-1f9bc\": [[\"\\uD83D\\uDC68\\u200D\\uD83E\\uDDBC\"], \"\", \"\", [\"man_in_motorized_wheelchair\"], 15, 54, 15, 0],\n    \"1f468-200d-1f9bd\": [[\"\\uD83D\\uDC68\\u200D\\uD83E\\uDDBD\"], \"\", \"\", [\"man_in_manual_wheelchair\"], 15, 60, 15, 0],\n    \"1f468-200d-2695-fe0f\": [[\"\\uD83D\\uDC68\\u200D\\u2695\\uFE0F\", \"\\uD83D\\uDC68\\u200D\\u2695\"], \"\", \"\", [\"male-doctor\"], 16, 5, 15, 0],\n    \"1f468-200d-2696-fe0f\": [[\"\\uD83D\\uDC68\\u200D\\u2696\\uFE0F\", \"\\uD83D\\uDC68\\u200D\\u2696\"], \"\", \"\", [\"male-judge\"], 16, 11, 15, 0],\n    \"1f468-200d-2708-fe0f\": [[\"\\uD83D\\uDC68\\u200D\\u2708\\uFE0F\", \"\\uD83D\\uDC68\\u200D\\u2708\"], \"\", \"\", [\"male-pilot\"], 16, 17, 15, 0],\n    \"1f468-200d-2764-fe0f-200d-1f468\": [[\"\\uD83D\\uDC68\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\", \"\\uD83D\\uDC68\\u200D\\u2764\\u200D\\uD83D\\uDC68\"], \"\", \"\", [\"man-heart-man\"], 16, 23, 15, 0],\n    \"1f468-200d-2764-fe0f-200d-1f48b-200d-1f468\": [[\"\\uD83D\\uDC68\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\", \"\\uD83D\\uDC68\\u200D\\u2764\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\"], \"\", \"\", [\"man-kiss-man\"], 16, 49, 15, 0],\n    \"1f468\": [[\"\\uD83D\\uDC68\"], \"\\uE004\", \"\\uDBB8\\uDD9D\", [\"man\"], 17, 14, 15, 0],\n    \"1f469-200d-1f33e\": [[\"\\uD83D\\uDC69\\u200D\\uD83C\\uDF3E\"], \"\", \"\", [\"female-farmer\"], 17, 20, 15, 0],\n    \"1f469-200d-1f373\": [[\"\\uD83D\\uDC69\\u200D\\uD83C\\uDF73\"], \"\", \"\", [\"female-cook\"], 17, 26, 15, 0],\n    \"1f469-200d-1f37c\": [[\"\\uD83D\\uDC69\\u200D\\uD83C\\uDF7C\"], \"\", \"\", [\"woman_feeding_baby\"], 17, 32, 15, 0],\n    \"1f469-200d-1f393\": [[\"\\uD83D\\uDC69\\u200D\\uD83C\\uDF93\"], \"\", \"\", [\"female-student\"], 17, 38, 15, 0],\n    \"1f469-200d-1f3a4\": [[\"\\uD83D\\uDC69\\u200D\\uD83C\\uDFA4\"], \"\", \"\", [\"female-singer\"], 17, 44, 15, 0],\n    \"1f469-200d-1f3a8\": [[\"\\uD83D\\uDC69\\u200D\\uD83C\\uDFA8\"], \"\", \"\", [\"female-artist\"], 17, 50, 15, 0],\n    \"1f469-200d-1f3eb\": [[\"\\uD83D\\uDC69\\u200D\\uD83C\\uDFEB\"], \"\", \"\", [\"female-teacher\"], 17, 56, 15, 0],\n    \"1f469-200d-1f3ed\": [[\"\\uD83D\\uDC69\\u200D\\uD83C\\uDFED\"], \"\", \"\", [\"female-factory-worker\"], 18, 1, 15, 0],\n    \"1f469-200d-1f466-200d-1f466\": [[\"\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66\"], \"\", \"\", [\"woman-boy-boy\"], 18, 7, 15, 0],\n    \"1f469-200d-1f466\": [[\"\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\"], \"\", \"\", [\"woman-boy\"], 18, 8, 15, 0],\n    \"1f469-200d-1f467-200d-1f466\": [[\"\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D\\uD83D\\uDC66\"], \"\", \"\", [\"woman-girl-boy\"], 18, 9, 15, 0],\n    \"1f469-200d-1f467-200d-1f467\": [[\"\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D\\uD83D\\uDC67\"], \"\", \"\", [\"woman-girl-girl\"], 18, 10, 15, 0],\n    \"1f469-200d-1f467\": [[\"\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\"], \"\", \"\", [\"woman-girl\"], 18, 11, 15, 0],\n    \"1f469-200d-1f469-200d-1f466\": [[\"\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\"], \"\", \"\", [\"woman-woman-boy\"], 18, 12, 15, 0],\n    \"1f469-200d-1f469-200d-1f466-200d-1f466\": [[\"\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66\"], \"\", \"\", [\"woman-woman-boy-boy\"], 18, 13, 15, 0],\n    \"1f469-200d-1f469-200d-1f467\": [[\"\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\"], \"\", \"\", [\"woman-woman-girl\"], 18, 14, 15, 0],\n    \"1f469-200d-1f469-200d-1f467-200d-1f466\": [[\"\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D\\uD83D\\uDC66\"], \"\", \"\", [\"woman-woman-girl-boy\"], 18, 15, 15, 0],\n    \"1f469-200d-1f469-200d-1f467-200d-1f467\": [[\"\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D\\uD83D\\uDC67\"], \"\", \"\", [\"woman-woman-girl-girl\"], 18, 16, 15, 0],\n    \"1f469-200d-1f4bb\": [[\"\\uD83D\\uDC69\\u200D\\uD83D\\uDCBB\"], \"\", \"\", [\"female-technologist\"], 18, 17, 15, 0],\n    \"1f469-200d-1f4bc\": [[\"\\uD83D\\uDC69\\u200D\\uD83D\\uDCBC\"], \"\", \"\", [\"female-office-worker\"], 18, 23, 15, 0],\n    \"1f469-200d-1f527\": [[\"\\uD83D\\uDC69\\u200D\\uD83D\\uDD27\"], \"\", \"\", [\"female-mechanic\"], 18, 29, 15, 0],\n    \"1f469-200d-1f52c\": [[\"\\uD83D\\uDC69\\u200D\\uD83D\\uDD2C\"], \"\", \"\", [\"female-scientist\"], 18, 35, 15, 0],\n    \"1f469-200d-1f680\": [[\"\\uD83D\\uDC69\\u200D\\uD83D\\uDE80\"], \"\", \"\", [\"female-astronaut\"], 18, 41, 15, 0],\n    \"1f469-200d-1f692\": [[\"\\uD83D\\uDC69\\u200D\\uD83D\\uDE92\"], \"\", \"\", [\"female-firefighter\"], 18, 47, 15, 0],\n    \"1f469-200d-1f9af\": [[\"\\uD83D\\uDC69\\u200D\\uD83E\\uDDAF\"], \"\", \"\", [\"woman_with_probing_cane\"], 18, 53, 15, 0],\n    \"1f469-200d-1f9b0\": [[\"\\uD83D\\uDC69\\u200D\\uD83E\\uDDB0\"], \"\", \"\", [\"red_haired_woman\"], 18, 59, 15, 0],\n    \"1f469-200d-1f9b1\": [[\"\\uD83D\\uDC69\\u200D\\uD83E\\uDDB1\"], \"\", \"\", [\"curly_haired_woman\"], 19, 4, 15, 0],\n    \"1f469-200d-1f9b2\": [[\"\\uD83D\\uDC69\\u200D\\uD83E\\uDDB2\"], \"\", \"\", [\"bald_woman\"], 19, 10, 15, 0],\n    \"1f469-200d-1f9b3\": [[\"\\uD83D\\uDC69\\u200D\\uD83E\\uDDB3\"], \"\", \"\", [\"white_haired_woman\"], 19, 16, 15, 0],\n    \"1f469-200d-1f9bc\": [[\"\\uD83D\\uDC69\\u200D\\uD83E\\uDDBC\"], \"\", \"\", [\"woman_in_motorized_wheelchair\"], 19, 22, 15, 0],\n    \"1f469-200d-1f9bd\": [[\"\\uD83D\\uDC69\\u200D\\uD83E\\uDDBD\"], \"\", \"\", [\"woman_in_manual_wheelchair\"], 19, 28, 15, 0],\n    \"1f469-200d-2695-fe0f\": [[\"\\uD83D\\uDC69\\u200D\\u2695\\uFE0F\", \"\\uD83D\\uDC69\\u200D\\u2695\"], \"\", \"\", [\"female-doctor\"], 19, 34, 15, 0],\n    \"1f469-200d-2696-fe0f\": [[\"\\uD83D\\uDC69\\u200D\\u2696\\uFE0F\", \"\\uD83D\\uDC69\\u200D\\u2696\"], \"\", \"\", [\"female-judge\"], 19, 40, 15, 0],\n    \"1f469-200d-2708-fe0f\": [[\"\\uD83D\\uDC69\\u200D\\u2708\\uFE0F\", \"\\uD83D\\uDC69\\u200D\\u2708\"], \"\", \"\", [\"female-pilot\"], 19, 46, 15, 0],\n    \"1f469-200d-2764-fe0f-200d-1f468\": [[\"\\uD83D\\uDC69\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\", \"\\uD83D\\uDC69\\u200D\\u2764\\u200D\\uD83D\\uDC68\"], \"\", \"\", [\"woman-heart-man\"], 19, 52, 15, 0],\n    \"1f469-200d-2764-fe0f-200d-1f469\": [[\"\\uD83D\\uDC69\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC69\", \"\\uD83D\\uDC69\\u200D\\u2764\\u200D\\uD83D\\uDC69\"], \"\", \"\", [\"woman-heart-woman\"], 20, 17, 15, 0],\n    \"1f469-200d-2764-fe0f-200d-1f48b-200d-1f468\": [[\"\\uD83D\\uDC69\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\", \"\\uD83D\\uDC69\\u200D\\u2764\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\"], \"\", \"\", [\"woman-kiss-man\"], 20, 43, 15, 0],\n    \"1f469-200d-2764-fe0f-200d-1f48b-200d-1f469\": [[\"\\uD83D\\uDC69\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC69\", \"\\uD83D\\uDC69\\u200D\\u2764\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC69\"], \"\", \"\", [\"woman-kiss-woman\"], 21, 8, 15, 0],\n    \"1f469\": [[\"\\uD83D\\uDC69\"], \"\\uE005\", \"\\uDBB8\\uDD9E\", [\"woman\"], 21, 34, 15, 0],\n    \"1f46b\": [[\"\\uD83D\\uDC6B\"], \"\\uE428\", \"\\uDBB8\\uDDA0\", [\"man_and_woman_holding_hands\", \"woman_and_man_holding_hands\", \"couple\"], 21, 41, 15, 0],\n    \"1f46c\": [[\"\\uD83D\\uDC6C\"], \"\", \"\", [\"two_men_holding_hands\", \"men_holding_hands\"], 22, 6, 15, 0],\n    \"1f46d\": [[\"\\uD83D\\uDC6D\"], \"\", \"\", [\"two_women_holding_hands\", \"women_holding_hands\"], 22, 32, 15, 0],\n    \"1f46e-200d-2640-fe0f\": [[\"\\uD83D\\uDC6E\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDC6E\\u200D\\u2640\"], \"\", \"\", [\"female-police-officer\"], 22, 58, 15, 0],\n    \"1f46e-200d-2642-fe0f\": [[\"\\uD83D\\uDC6E\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDC6E\\u200D\\u2642\", \"\\uD83D\\uDC6E\"], \"\", \"\", [\"male-police-officer\", \"cop\"], 23, 3, 15, 0],\n    \"1f46f-200d-2640-fe0f\": [[\"\\uD83D\\uDC6F\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDC6F\\u200D\\u2640\", \"\\uD83D\\uDC6F\"], \"\", \"\", [\"women-with-bunny-ears-partying\", \"woman-with-bunny-ears-partying\", \"dancers\"], 23, 15, 15, 0],\n    \"1f46f-200d-2642-fe0f\": [[\"\\uD83D\\uDC6F\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDC6F\\u200D\\u2642\"], \"\", \"\", [\"men-with-bunny-ears-partying\", \"man-with-bunny-ears-partying\"], 23, 16, 15, 0],\n    \"1f470-200d-2640-fe0f\": [[\"\\uD83D\\uDC70\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDC70\\u200D\\u2640\"], \"\", \"\", [\"woman_with_veil\"], 23, 18, 15, 0],\n    \"1f470-200d-2642-fe0f\": [[\"\\uD83D\\uDC70\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDC70\\u200D\\u2642\"], \"\", \"\", [\"man_with_veil\"], 23, 24, 15, 0],\n    \"1f470\": [[\"\\uD83D\\uDC70\"], \"\", \"\\uDBB8\\uDDA3\", [\"bride_with_veil\"], 23, 30, 15, 0],\n    \"1f471-200d-2640-fe0f\": [[\"\\uD83D\\uDC71\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDC71\\u200D\\u2640\"], \"\", \"\", [\"blond-haired-woman\"], 23, 36, 15, 0],\n    \"1f471-200d-2642-fe0f\": [[\"\\uD83D\\uDC71\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDC71\\u200D\\u2642\", \"\\uD83D\\uDC71\"], \"\", \"\", [\"blond-haired-man\", \"person_with_blond_hair\"], 23, 42, 15, 0],\n    \"1f472\": [[\"\\uD83D\\uDC72\"], \"\\uE516\", \"\\uDBB8\\uDDA5\", [\"man_with_gua_pi_mao\"], 23, 54, 15, 0],\n    \"1f473-200d-2640-fe0f\": [[\"\\uD83D\\uDC73\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDC73\\u200D\\u2640\"], \"\", \"\", [\"woman-wearing-turban\"], 23, 60, 15, 0],\n    \"1f473-200d-2642-fe0f\": [[\"\\uD83D\\uDC73\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDC73\\u200D\\u2642\", \"\\uD83D\\uDC73\"], \"\", \"\", [\"man-wearing-turban\", \"man_with_turban\"], 24, 5, 15, 0],\n    \"1f474\": [[\"\\uD83D\\uDC74\"], \"\\uE518\", \"\\uDBB8\\uDDA7\", [\"older_man\"], 24, 17, 15, 0],\n    \"1f475\": [[\"\\uD83D\\uDC75\"], \"\\uE519\", \"\\uDBB8\\uDDA8\", [\"older_woman\"], 24, 23, 15, 0],\n    \"1f476\": [[\"\\uD83D\\uDC76\"], \"\\uE51A\", \"\\uDBB8\\uDDA9\", [\"baby\"], 24, 29, 15, 0],\n    \"1f477-200d-2640-fe0f\": [[\"\\uD83D\\uDC77\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDC77\\u200D\\u2640\"], \"\", \"\", [\"female-construction-worker\"], 24, 35, 15, 0],\n    \"1f477-200d-2642-fe0f\": [[\"\\uD83D\\uDC77\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDC77\\u200D\\u2642\", \"\\uD83D\\uDC77\"], \"\", \"\", [\"male-construction-worker\", \"construction_worker\"], 24, 41, 15, 0],\n    \"1f478\": [[\"\\uD83D\\uDC78\"], \"\\uE51C\", \"\\uDBB8\\uDDAB\", [\"princess\"], 24, 53, 15, 0],\n    \"1f479\": [[\"\\uD83D\\uDC79\"], \"\", \"\\uDBB8\\uDDAC\", [\"japanese_ogre\"], 24, 59, 15, 0],\n    \"1f47a\": [[\"\\uD83D\\uDC7A\"], \"\", \"\\uDBB8\\uDDAD\", [\"japanese_goblin\"], 24, 60, 15, 0],\n    \"1f47b\": [[\"\\uD83D\\uDC7B\"], \"\\uE11B\", \"\\uDBB8\\uDDAE\", [\"ghost\"], 25, 0, 15, 0],\n    \"1f47c\": [[\"\\uD83D\\uDC7C\"], \"\\uE04E\", \"\\uDBB8\\uDDAF\", [\"angel\"], 25, 1, 15, 0],\n    \"1f47d\": [[\"\\uD83D\\uDC7D\"], \"\\uE10C\", \"\\uDBB8\\uDDB0\", [\"alien\"], 25, 7, 15, 0],\n    \"1f47e\": [[\"\\uD83D\\uDC7E\"], \"\\uE12B\", \"\\uDBB8\\uDDB1\", [\"space_invader\"], 25, 8, 15, 0],\n    \"1f47f\": [[\"\\uD83D\\uDC7F\"], \"\\uE11A\", \"\\uDBB8\\uDDB2\", [\"imp\"], 25, 9, 15, 0],\n    \"1f480\": [[\"\\uD83D\\uDC80\"], \"\\uE11C\", \"\\uDBB8\\uDDB3\", [\"skull\"], 25, 10, 15, 0],\n    \"1f481-200d-2640-fe0f\": [[\"\\uD83D\\uDC81\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDC81\\u200D\\u2640\", \"\\uD83D\\uDC81\"], \"\", \"\", [\"woman-tipping-hand\", \"information_desk_person\"], 25, 11, 15, 0],\n    \"1f481-200d-2642-fe0f\": [[\"\\uD83D\\uDC81\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDC81\\u200D\\u2642\"], \"\", \"\", [\"man-tipping-hand\"], 25, 17, 15, 0],\n    \"1f482-200d-2640-fe0f\": [[\"\\uD83D\\uDC82\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDC82\\u200D\\u2640\"], \"\", \"\", [\"female-guard\"], 25, 29, 15, 0],\n    \"1f482-200d-2642-fe0f\": [[\"\\uD83D\\uDC82\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDC82\\u200D\\u2642\", \"\\uD83D\\uDC82\"], \"\", \"\", [\"male-guard\", \"guardsman\"], 25, 35, 15, 0],\n    \"1f483\": [[\"\\uD83D\\uDC83\"], \"\\uE51F\", \"\\uDBB8\\uDDB6\", [\"dancer\"], 25, 47, 15, 0],\n    \"1f484\": [[\"\\uD83D\\uDC84\"], \"\\uE31C\", \"\\uDBB8\\uDD95\", [\"lipstick\"], 25, 53, 15, 0],\n    \"1f485\": [[\"\\uD83D\\uDC85\"], \"\\uE31D\", \"\\uDBB8\\uDD96\", [\"nail_care\"], 25, 54, 15, 0],\n    \"1f486-200d-2640-fe0f\": [[\"\\uD83D\\uDC86\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDC86\\u200D\\u2640\", \"\\uD83D\\uDC86\"], \"\", \"\", [\"woman-getting-massage\", \"massage\"], 25, 60, 15, 0],\n    \"1f486-200d-2642-fe0f\": [[\"\\uD83D\\uDC86\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDC86\\u200D\\u2642\"], \"\", \"\", [\"man-getting-massage\"], 26, 5, 15, 0],\n    \"1f487-200d-2640-fe0f\": [[\"\\uD83D\\uDC87\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDC87\\u200D\\u2640\", \"\\uD83D\\uDC87\"], \"\", \"\", [\"woman-getting-haircut\", \"haircut\"], 26, 17, 15, 0],\n    \"1f487-200d-2642-fe0f\": [[\"\\uD83D\\uDC87\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDC87\\u200D\\u2642\"], \"\", \"\", [\"man-getting-haircut\"], 26, 23, 15, 0],\n    \"1f488\": [[\"\\uD83D\\uDC88\"], \"\\uE320\", \"\\uDBB8\\uDD99\", [\"barber\"], 26, 35, 15, 0],\n    \"1f489\": [[\"\\uD83D\\uDC89\"], \"\\uE13B\", \"\\uDBB9\\uDD09\", [\"syringe\"], 26, 36, 15, 0],\n    \"1f48a\": [[\"\\uD83D\\uDC8A\"], \"\\uE30F\", \"\\uDBB9\\uDD0A\", [\"pill\"], 26, 37, 15, 0],\n    \"1f48b\": [[\"\\uD83D\\uDC8B\"], \"\\uE003\", \"\\uDBBA\\uDC23\", [\"kiss\"], 26, 38, 15, 0],\n    \"1f48c\": [[\"\\uD83D\\uDC8C\"], \"\", \"\\uDBBA\\uDC24\", [\"love_letter\"], 26, 39, 15, 0],\n    \"1f48d\": [[\"\\uD83D\\uDC8D\"], \"\\uE034\", \"\\uDBBA\\uDC25\", [\"ring\"], 26, 40, 15, 0],\n    \"1f48e\": [[\"\\uD83D\\uDC8E\"], \"\\uE035\", \"\\uDBBA\\uDC26\", [\"gem\"], 26, 41, 15, 0],\n    \"1f48f\": [[\"\\uD83D\\uDC8F\"], \"\\uE111\", \"\\uDBBA\\uDC27\", [\"couplekiss\"], 26, 42, 15, 0],\n    \"1f490\": [[\"\\uD83D\\uDC90\"], \"\\uE306\", \"\\uDBBA\\uDC28\", [\"bouquet\"], 27, 7, 15, 0],\n    \"1f491\": [[\"\\uD83D\\uDC91\"], \"\\uE425\", \"\\uDBBA\\uDC29\", [\"couple_with_heart\"], 27, 8, 15, 0],\n    \"1f492\": [[\"\\uD83D\\uDC92\"], \"\\uE43D\", \"\\uDBBA\\uDC2A\", [\"wedding\"], 27, 34, 15, 0],\n    \"1f493\": [[\"\\uD83D\\uDC93\"], \"\\uE327\", \"\\uDBBA\\uDF0D\", [\"heartbeat\"], 27, 35, 15, 0],\n    \"1f494\": [[\"\\uD83D\\uDC94\"], \"\\uE023\", \"\\uDBBA\\uDF0E\", [\"broken_heart\"], 27, 36, 15, 0, \"<\\/3\"],\n    \"1f495\": [[\"\\uD83D\\uDC95\"], \"\", \"\\uDBBA\\uDF0F\", [\"two_hearts\"], 27, 37, 15, 0],\n    \"1f496\": [[\"\\uD83D\\uDC96\"], \"\", \"\\uDBBA\\uDF10\", [\"sparkling_heart\"], 27, 38, 15, 0],\n    \"1f497\": [[\"\\uD83D\\uDC97\"], \"\\uE328\", \"\\uDBBA\\uDF11\", [\"heartpulse\"], 27, 39, 15, 0],\n    \"1f498\": [[\"\\uD83D\\uDC98\"], \"\\uE329\", \"\\uDBBA\\uDF12\", [\"cupid\"], 27, 40, 15, 0],\n    \"1f499\": [[\"\\uD83D\\uDC99\"], \"\\uE32A\", \"\\uDBBA\\uDF13\", [\"blue_heart\"], 27, 41, 15, 0, \"<3\"],\n    \"1f49a\": [[\"\\uD83D\\uDC9A\"], \"\\uE32B\", \"\\uDBBA\\uDF14\", [\"green_heart\"], 27, 42, 15, 0, \"<3\"],\n    \"1f49b\": [[\"\\uD83D\\uDC9B\"], \"\\uE32C\", \"\\uDBBA\\uDF15\", [\"yellow_heart\"], 27, 43, 15, 0, \"<3\"],\n    \"1f49c\": [[\"\\uD83D\\uDC9C\"], \"\\uE32D\", \"\\uDBBA\\uDF16\", [\"purple_heart\"], 27, 44, 15, 0, \"<3\"],\n    \"1f49d\": [[\"\\uD83D\\uDC9D\"], \"\\uE437\", \"\\uDBBA\\uDF17\", [\"gift_heart\"], 27, 45, 15, 0],\n    \"1f49e\": [[\"\\uD83D\\uDC9E\"], \"\", \"\\uDBBA\\uDF18\", [\"revolving_hearts\"], 27, 46, 15, 0],\n    \"1f49f\": [[\"\\uD83D\\uDC9F\"], \"\\uE204\", \"\\uDBBA\\uDF19\", [\"heart_decoration\"], 27, 47, 15, 0],\n    \"1f4a0\": [[\"\\uD83D\\uDCA0\"], \"\", \"\\uDBBA\\uDF55\", [\"diamond_shape_with_a_dot_inside\"], 27, 48, 15, 0],\n    \"1f4a1\": [[\"\\uD83D\\uDCA1\"], \"\\uE10F\", \"\\uDBBA\\uDF56\", [\"bulb\"], 27, 49, 15, 0],\n    \"1f4a2\": [[\"\\uD83D\\uDCA2\"], \"\\uE334\", \"\\uDBBA\\uDF57\", [\"anger\"], 27, 50, 15, 0],\n    \"1f4a3\": [[\"\\uD83D\\uDCA3\"], \"\\uE311\", \"\\uDBBA\\uDF58\", [\"bomb\"], 27, 51, 15, 0],\n    \"1f4a4\": [[\"\\uD83D\\uDCA4\"], \"\\uE13C\", \"\\uDBBA\\uDF59\", [\"zzz\"], 27, 52, 15, 0],\n    \"1f4a5\": [[\"\\uD83D\\uDCA5\"], \"\", \"\\uDBBA\\uDF5A\", [\"boom\", \"collision\"], 27, 53, 15, 0],\n    \"1f4a6\": [[\"\\uD83D\\uDCA6\"], \"\\uE331\", \"\\uDBBA\\uDF5B\", [\"sweat_drops\"], 27, 54, 15, 0],\n    \"1f4a7\": [[\"\\uD83D\\uDCA7\"], \"\", \"\\uDBBA\\uDF5C\", [\"droplet\"], 27, 55, 15, 0],\n    \"1f4a8\": [[\"\\uD83D\\uDCA8\"], \"\\uE330\", \"\\uDBBA\\uDF5D\", [\"dash\"], 27, 56, 15, 0],\n    \"1f4a9\": [[\"\\uD83D\\uDCA9\"], \"\\uE05A\", \"\\uDBB9\\uDCF4\", [\"hankey\", \"poop\", \"shit\"], 27, 57, 15, 0],\n    \"1f4aa\": [[\"\\uD83D\\uDCAA\"], \"\\uE14C\", \"\\uDBBA\\uDF5E\", [\"muscle\"], 27, 58, 15, 0],\n    \"1f4ab\": [[\"\\uD83D\\uDCAB\"], \"\", \"\\uDBBA\\uDF5F\", [\"dizzy\"], 28, 3, 15, 0],\n    \"1f4ac\": [[\"\\uD83D\\uDCAC\"], \"\", \"\\uDBB9\\uDD32\", [\"speech_balloon\"], 28, 4, 15, 0],\n    \"1f4ad\": [[\"\\uD83D\\uDCAD\"], \"\", \"\", [\"thought_balloon\"], 28, 5, 15, 0],\n    \"1f4ae\": [[\"\\uD83D\\uDCAE\"], \"\", \"\\uDBBA\\uDF7A\", [\"white_flower\"], 28, 6, 15, 0],\n    \"1f4af\": [[\"\\uD83D\\uDCAF\"], \"\", \"\\uDBBA\\uDF7B\", [\"100\"], 28, 7, 15, 0],\n    \"1f4b0\": [[\"\\uD83D\\uDCB0\"], \"\\uE12F\", \"\\uDBB9\\uDCDD\", [\"moneybag\"], 28, 8, 15, 0],\n    \"1f4b1\": [[\"\\uD83D\\uDCB1\"], \"\\uE149\", \"\\uDBB9\\uDCDE\", [\"currency_exchange\"], 28, 9, 15, 0],\n    \"1f4b2\": [[\"\\uD83D\\uDCB2\"], \"\", \"\\uDBB9\\uDCE0\", [\"heavy_dollar_sign\"], 28, 10, 15, 0],\n    \"1f4b3\": [[\"\\uD83D\\uDCB3\"], \"\", \"\\uDBB9\\uDCE1\", [\"credit_card\"], 28, 11, 15, 0],\n    \"1f4b4\": [[\"\\uD83D\\uDCB4\"], \"\", \"\\uDBB9\\uDCE2\", [\"yen\"], 28, 12, 15, 0],\n    \"1f4b5\": [[\"\\uD83D\\uDCB5\"], \"\", \"\\uDBB9\\uDCE3\", [\"dollar\"], 28, 13, 15, 0],\n    \"1f4b6\": [[\"\\uD83D\\uDCB6\"], \"\", \"\", [\"euro\"], 28, 14, 15, 0],\n    \"1f4b7\": [[\"\\uD83D\\uDCB7\"], \"\", \"\", [\"pound\"], 28, 15, 15, 0],\n    \"1f4b8\": [[\"\\uD83D\\uDCB8\"], \"\", \"\\uDBB9\\uDCE4\", [\"money_with_wings\"], 28, 16, 15, 0],\n    \"1f4b9\": [[\"\\uD83D\\uDCB9\"], \"\\uE14A\", \"\\uDBB9\\uDCDF\", [\"chart\"], 28, 17, 15, 0],\n    \"1f4ba\": [[\"\\uD83D\\uDCBA\"], \"\\uE11F\", \"\\uDBB9\\uDD37\", [\"seat\"], 28, 18, 15, 0],\n    \"1f4bb\": [[\"\\uD83D\\uDCBB\"], \"\\uE00C\", \"\\uDBB9\\uDD38\", [\"computer\"], 28, 19, 15, 0],\n    \"1f4bc\": [[\"\\uD83D\\uDCBC\"], \"\\uE11E\", \"\\uDBB9\\uDD3B\", [\"briefcase\"], 28, 20, 15, 0],\n    \"1f4bd\": [[\"\\uD83D\\uDCBD\"], \"\\uE316\", \"\\uDBB9\\uDD3C\", [\"minidisc\"], 28, 21, 15, 0],\n    \"1f4be\": [[\"\\uD83D\\uDCBE\"], \"\", \"\\uDBB9\\uDD3D\", [\"floppy_disk\"], 28, 22, 15, 0],\n    \"1f4bf\": [[\"\\uD83D\\uDCBF\"], \"\\uE126\", \"\\uDBBA\\uDC1D\", [\"cd\"], 28, 23, 15, 0],\n    \"1f4c0\": [[\"\\uD83D\\uDCC0\"], \"\\uE127\", \"\\uDBBA\\uDC1E\", [\"dvd\"], 28, 24, 15, 0],\n    \"1f4c1\": [[\"\\uD83D\\uDCC1\"], \"\", \"\\uDBB9\\uDD43\", [\"file_folder\"], 28, 25, 15, 0],\n    \"1f4c2\": [[\"\\uD83D\\uDCC2\"], \"\", \"\\uDBB9\\uDD44\", [\"open_file_folder\"], 28, 26, 15, 0],\n    \"1f4c3\": [[\"\\uD83D\\uDCC3\"], \"\", \"\\uDBB9\\uDD40\", [\"page_with_curl\"], 28, 27, 15, 0],\n    \"1f4c4\": [[\"\\uD83D\\uDCC4\"], \"\", \"\\uDBB9\\uDD41\", [\"page_facing_up\"], 28, 28, 15, 0],\n    \"1f4c5\": [[\"\\uD83D\\uDCC5\"], \"\", \"\\uDBB9\\uDD42\", [\"date\"], 28, 29, 15, 0],\n    \"1f4c6\": [[\"\\uD83D\\uDCC6\"], \"\", \"\\uDBB9\\uDD49\", [\"calendar\"], 28, 30, 15, 0],\n    \"1f4c7\": [[\"\\uD83D\\uDCC7\"], \"\", \"\\uDBB9\\uDD4D\", [\"card_index\"], 28, 31, 15, 0],\n    \"1f4c8\": [[\"\\uD83D\\uDCC8\"], \"\", \"\\uDBB9\\uDD4B\", [\"chart_with_upwards_trend\"], 28, 32, 15, 0],\n    \"1f4c9\": [[\"\\uD83D\\uDCC9\"], \"\", \"\\uDBB9\\uDD4C\", [\"chart_with_downwards_trend\"], 28, 33, 15, 0],\n    \"1f4ca\": [[\"\\uD83D\\uDCCA\"], \"\", \"\\uDBB9\\uDD4A\", [\"bar_chart\"], 28, 34, 15, 0],\n    \"1f4cb\": [[\"\\uD83D\\uDCCB\"], \"\", \"\\uDBB9\\uDD48\", [\"clipboard\"], 28, 35, 15, 0],\n    \"1f4cc\": [[\"\\uD83D\\uDCCC\"], \"\", \"\\uDBB9\\uDD4E\", [\"pushpin\"], 28, 36, 15, 0],\n    \"1f4cd\": [[\"\\uD83D\\uDCCD\"], \"\", \"\\uDBB9\\uDD3F\", [\"round_pushpin\"], 28, 37, 15, 0],\n    \"1f4ce\": [[\"\\uD83D\\uDCCE\"], \"\", \"\\uDBB9\\uDD3A\", [\"paperclip\"], 28, 38, 15, 0],\n    \"1f4cf\": [[\"\\uD83D\\uDCCF\"], \"\", \"\\uDBB9\\uDD50\", [\"straight_ruler\"], 28, 39, 15, 0],\n    \"1f4d0\": [[\"\\uD83D\\uDCD0\"], \"\", \"\\uDBB9\\uDD51\", [\"triangular_ruler\"], 28, 40, 15, 0],\n    \"1f4d1\": [[\"\\uD83D\\uDCD1\"], \"\", \"\\uDBB9\\uDD52\", [\"bookmark_tabs\"], 28, 41, 15, 0],\n    \"1f4d2\": [[\"\\uD83D\\uDCD2\"], \"\", \"\\uDBB9\\uDD4F\", [\"ledger\"], 28, 42, 15, 0],\n    \"1f4d3\": [[\"\\uD83D\\uDCD3\"], \"\", \"\\uDBB9\\uDD45\", [\"notebook\"], 28, 43, 15, 0],\n    \"1f4d4\": [[\"\\uD83D\\uDCD4\"], \"\", \"\\uDBB9\\uDD47\", [\"notebook_with_decorative_cover\"], 28, 44, 15, 0],\n    \"1f4d5\": [[\"\\uD83D\\uDCD5\"], \"\", \"\\uDBB9\\uDD02\", [\"closed_book\"], 28, 45, 15, 0],\n    \"1f4d6\": [[\"\\uD83D\\uDCD6\"], \"\\uE148\", \"\\uDBB9\\uDD46\", [\"book\", \"open_book\"], 28, 46, 15, 0],\n    \"1f4d7\": [[\"\\uD83D\\uDCD7\"], \"\", \"\\uDBB9\\uDCFF\", [\"green_book\"], 28, 47, 15, 0],\n    \"1f4d8\": [[\"\\uD83D\\uDCD8\"], \"\", \"\\uDBB9\\uDD00\", [\"blue_book\"], 28, 48, 15, 0],\n    \"1f4d9\": [[\"\\uD83D\\uDCD9\"], \"\", \"\\uDBB9\\uDD01\", [\"orange_book\"], 28, 49, 15, 0],\n    \"1f4da\": [[\"\\uD83D\\uDCDA\"], \"\", \"\\uDBB9\\uDD03\", [\"books\"], 28, 50, 15, 0],\n    \"1f4db\": [[\"\\uD83D\\uDCDB\"], \"\", \"\\uDBB9\\uDD04\", [\"name_badge\"], 28, 51, 15, 0],\n    \"1f4dc\": [[\"\\uD83D\\uDCDC\"], \"\", \"\\uDBB9\\uDCFD\", [\"scroll\"], 28, 52, 15, 0],\n    \"1f4dd\": [[\"\\uD83D\\uDCDD\"], \"\\uE301\", \"\\uDBB9\\uDD27\", [\"memo\", \"pencil\"], 28, 53, 15, 0],\n    \"1f4de\": [[\"\\uD83D\\uDCDE\"], \"\", \"\\uDBB9\\uDD24\", [\"telephone_receiver\"], 28, 54, 15, 0],\n    \"1f4df\": [[\"\\uD83D\\uDCDF\"], \"\", \"\\uDBB9\\uDD22\", [\"pager\"], 28, 55, 15, 0],\n    \"1f4e0\": [[\"\\uD83D\\uDCE0\"], \"\\uE00B\", \"\\uDBB9\\uDD28\", [\"fax\"], 28, 56, 15, 0],\n    \"1f4e1\": [[\"\\uD83D\\uDCE1\"], \"\\uE14B\", \"\\uDBB9\\uDD31\", [\"satellite_antenna\"], 28, 57, 15, 0],\n    \"1f4e2\": [[\"\\uD83D\\uDCE2\"], \"\\uE142\", \"\\uDBB9\\uDD2F\", [\"loudspeaker\"], 28, 58, 15, 0],\n    \"1f4e3\": [[\"\\uD83D\\uDCE3\"], \"\\uE317\", \"\\uDBB9\\uDD30\", [\"mega\"], 28, 59, 15, 0],\n    \"1f4e4\": [[\"\\uD83D\\uDCE4\"], \"\", \"\\uDBB9\\uDD33\", [\"outbox_tray\"], 28, 60, 15, 0],\n    \"1f4e5\": [[\"\\uD83D\\uDCE5\"], \"\", \"\\uDBB9\\uDD34\", [\"inbox_tray\"], 29, 0, 15, 0],\n    \"1f4e6\": [[\"\\uD83D\\uDCE6\"], \"\", \"\\uDBB9\\uDD35\", [\"package\"], 29, 1, 15, 0],\n    \"1f4e7\": [[\"\\uD83D\\uDCE7\"], \"\", \"\\uDBBA\\uDF92\", [\"e-mail\"], 29, 2, 15, 0],\n    \"1f4e8\": [[\"\\uD83D\\uDCE8\"], \"\", \"\\uDBB9\\uDD2A\", [\"incoming_envelope\"], 29, 3, 15, 0],\n    \"1f4e9\": [[\"\\uD83D\\uDCE9\"], \"\\uE103\", \"\\uDBB9\\uDD2B\", [\"envelope_with_arrow\"], 29, 4, 15, 0],\n    \"1f4ea\": [[\"\\uD83D\\uDCEA\"], \"\", \"\\uDBB9\\uDD2C\", [\"mailbox_closed\"], 29, 5, 15, 0],\n    \"1f4eb\": [[\"\\uD83D\\uDCEB\"], \"\\uE101\", \"\\uDBB9\\uDD2D\", [\"mailbox\"], 29, 6, 15, 0],\n    \"1f4ec\": [[\"\\uD83D\\uDCEC\"], \"\", \"\", [\"mailbox_with_mail\"], 29, 7, 15, 0],\n    \"1f4ed\": [[\"\\uD83D\\uDCED\"], \"\", \"\", [\"mailbox_with_no_mail\"], 29, 8, 15, 0],\n    \"1f4ee\": [[\"\\uD83D\\uDCEE\"], \"\\uE102\", \"\\uDBB9\\uDD2E\", [\"postbox\"], 29, 9, 15, 0],\n    \"1f4ef\": [[\"\\uD83D\\uDCEF\"], \"\", \"\", [\"postal_horn\"], 29, 10, 15, 0],\n    \"1f4f0\": [[\"\\uD83D\\uDCF0\"], \"\", \"\\uDBBA\\uDC22\", [\"newspaper\"], 29, 11, 15, 0],\n    \"1f4f1\": [[\"\\uD83D\\uDCF1\"], \"\\uE00A\", \"\\uDBB9\\uDD25\", [\"iphone\"], 29, 12, 15, 0],\n    \"1f4f2\": [[\"\\uD83D\\uDCF2\"], \"\\uE104\", \"\\uDBB9\\uDD26\", [\"calling\"], 29, 13, 15, 0],\n    \"1f4f3\": [[\"\\uD83D\\uDCF3\"], \"\\uE250\", \"\\uDBBA\\uDC39\", [\"vibration_mode\"], 29, 14, 15, 0],\n    \"1f4f4\": [[\"\\uD83D\\uDCF4\"], \"\\uE251\", \"\\uDBBA\\uDC3A\", [\"mobile_phone_off\"], 29, 15, 15, 0],\n    \"1f4f5\": [[\"\\uD83D\\uDCF5\"], \"\", \"\", [\"no_mobile_phones\"], 29, 16, 15, 0],\n    \"1f4f6\": [[\"\\uD83D\\uDCF6\"], \"\\uE20B\", \"\\uDBBA\\uDC38\", [\"signal_strength\"], 29, 17, 15, 0],\n    \"1f4f7\": [[\"\\uD83D\\uDCF7\"], \"\\uE008\", \"\\uDBB9\\uDCEF\", [\"camera\"], 29, 18, 15, 0],\n    \"1f4f8\": [[\"\\uD83D\\uDCF8\"], \"\", \"\", [\"camera_with_flash\"], 29, 19, 15, 0],\n    \"1f4f9\": [[\"\\uD83D\\uDCF9\"], \"\", \"\\uDBB9\\uDCF9\", [\"video_camera\"], 29, 20, 15, 0],\n    \"1f4fa\": [[\"\\uD83D\\uDCFA\"], \"\\uE12A\", \"\\uDBBA\\uDC1C\", [\"tv\"], 29, 21, 15, 0],\n    \"1f4fb\": [[\"\\uD83D\\uDCFB\"], \"\\uE128\", \"\\uDBBA\\uDC1F\", [\"radio\"], 29, 22, 15, 0],\n    \"1f4fc\": [[\"\\uD83D\\uDCFC\"], \"\\uE129\", \"\\uDBBA\\uDC20\", [\"vhs\"], 29, 23, 15, 0],\n    \"1f4fd-fe0f\": [[\"\\uD83D\\uDCFD\\uFE0F\", \"\\uD83D\\uDCFD\"], \"\", \"\", [\"film_projector\"], 29, 24, 15, 0],\n    \"1f4ff\": [[\"\\uD83D\\uDCFF\"], \"\", \"\", [\"prayer_beads\"], 29, 25, 15, 0],\n    \"1f500\": [[\"\\uD83D\\uDD00\"], \"\", \"\", [\"twisted_rightwards_arrows\"], 29, 26, 15, 0],\n    \"1f501\": [[\"\\uD83D\\uDD01\"], \"\", \"\", [\"repeat\"], 29, 27, 15, 0],\n    \"1f502\": [[\"\\uD83D\\uDD02\"], \"\", \"\", [\"repeat_one\"], 29, 28, 15, 0],\n    \"1f503\": [[\"\\uD83D\\uDD03\"], \"\", \"\\uDBBA\\uDF91\", [\"arrows_clockwise\"], 29, 29, 15, 0],\n    \"1f504\": [[\"\\uD83D\\uDD04\"], \"\", \"\", [\"arrows_counterclockwise\"], 29, 30, 15, 0],\n    \"1f505\": [[\"\\uD83D\\uDD05\"], \"\", \"\", [\"low_brightness\"], 29, 31, 15, 0],\n    \"1f506\": [[\"\\uD83D\\uDD06\"], \"\", \"\", [\"high_brightness\"], 29, 32, 15, 0],\n    \"1f507\": [[\"\\uD83D\\uDD07\"], \"\", \"\", [\"mute\"], 29, 33, 15, 0],\n    \"1f508\": [[\"\\uD83D\\uDD08\"], \"\", \"\", [\"speaker\"], 29, 34, 15, 0],\n    \"1f509\": [[\"\\uD83D\\uDD09\"], \"\", \"\", [\"sound\"], 29, 35, 15, 0],\n    \"1f50a\": [[\"\\uD83D\\uDD0A\"], \"\\uE141\", \"\\uDBBA\\uDC21\", [\"loud_sound\"], 29, 36, 15, 0],\n    \"1f50b\": [[\"\\uD83D\\uDD0B\"], \"\", \"\\uDBB9\\uDCFC\", [\"battery\"], 29, 37, 15, 0],\n    \"1f50c\": [[\"\\uD83D\\uDD0C\"], \"\", \"\\uDBB9\\uDCFE\", [\"electric_plug\"], 29, 38, 15, 0],\n    \"1f50d\": [[\"\\uD83D\\uDD0D\"], \"\\uE114\", \"\\uDBBA\\uDF85\", [\"mag\"], 29, 39, 15, 0],\n    \"1f50e\": [[\"\\uD83D\\uDD0E\"], \"\", \"\\uDBBA\\uDF8D\", [\"mag_right\"], 29, 40, 15, 0],\n    \"1f50f\": [[\"\\uD83D\\uDD0F\"], \"\", \"\\uDBBA\\uDF90\", [\"lock_with_ink_pen\"], 29, 41, 15, 0],\n    \"1f510\": [[\"\\uD83D\\uDD10\"], \"\", \"\\uDBBA\\uDF8A\", [\"closed_lock_with_key\"], 29, 42, 15, 0],\n    \"1f511\": [[\"\\uD83D\\uDD11\"], \"\\uE03F\", \"\\uDBBA\\uDF82\", [\"key\"], 29, 43, 15, 0],\n    \"1f512\": [[\"\\uD83D\\uDD12\"], \"\\uE144\", \"\\uDBBA\\uDF86\", [\"lock\"], 29, 44, 15, 0],\n    \"1f513\": [[\"\\uD83D\\uDD13\"], \"\\uE145\", \"\\uDBBA\\uDF87\", [\"unlock\"], 29, 45, 15, 0],\n    \"1f514\": [[\"\\uD83D\\uDD14\"], \"\\uE325\", \"\\uDBB9\\uDCF2\", [\"bell\"], 29, 46, 15, 0],\n    \"1f515\": [[\"\\uD83D\\uDD15\"], \"\", \"\", [\"no_bell\"], 29, 47, 15, 0],\n    \"1f516\": [[\"\\uD83D\\uDD16\"], \"\", \"\\uDBBA\\uDF8F\", [\"bookmark\"], 29, 48, 15, 0],\n    \"1f517\": [[\"\\uD83D\\uDD17\"], \"\", \"\\uDBBA\\uDF4B\", [\"link\"], 29, 49, 15, 0],\n    \"1f518\": [[\"\\uD83D\\uDD18\"], \"\", \"\\uDBBA\\uDF8C\", [\"radio_button\"], 29, 50, 15, 0],\n    \"1f519\": [[\"\\uD83D\\uDD19\"], \"\", \"\\uDBBA\\uDF8E\", [\"back\"], 29, 51, 15, 0],\n    \"1f51a\": [[\"\\uD83D\\uDD1A\"], \"\", \"\\uDBB8\\uDC1A\", [\"end\"], 29, 52, 15, 0],\n    \"1f51b\": [[\"\\uD83D\\uDD1B\"], \"\", \"\\uDBB8\\uDC19\", [\"on\"], 29, 53, 15, 0],\n    \"1f51c\": [[\"\\uD83D\\uDD1C\"], \"\", \"\\uDBB8\\uDC18\", [\"soon\"], 29, 54, 15, 0],\n    \"1f51d\": [[\"\\uD83D\\uDD1D\"], \"\\uE24C\", \"\\uDBBA\\uDF42\", [\"top\"], 29, 55, 15, 0],\n    \"1f51e\": [[\"\\uD83D\\uDD1E\"], \"\\uE207\", \"\\uDBBA\\uDF25\", [\"underage\"], 29, 56, 15, 0],\n    \"1f51f\": [[\"\\uD83D\\uDD1F\"], \"\", \"\\uDBBA\\uDC3B\", [\"keycap_ten\"], 29, 57, 15, 0],\n    \"1f520\": [[\"\\uD83D\\uDD20\"], \"\", \"\\uDBBA\\uDF7C\", [\"capital_abcd\"], 29, 58, 15, 0],\n    \"1f521\": [[\"\\uD83D\\uDD21\"], \"\", \"\\uDBBA\\uDF7D\", [\"abcd\"], 29, 59, 15, 0],\n    \"1f522\": [[\"\\uD83D\\uDD22\"], \"\", \"\\uDBBA\\uDF7E\", [\"1234\"], 29, 60, 15, 0],\n    \"1f523\": [[\"\\uD83D\\uDD23\"], \"\", \"\\uDBBA\\uDF7F\", [\"symbols\"], 30, 0, 15, 0],\n    \"1f524\": [[\"\\uD83D\\uDD24\"], \"\", \"\\uDBBA\\uDF80\", [\"abc\"], 30, 1, 15, 0],\n    \"1f525\": [[\"\\uD83D\\uDD25\"], \"\\uE11D\", \"\\uDBB9\\uDCF6\", [\"fire\"], 30, 2, 15, 0],\n    \"1f526\": [[\"\\uD83D\\uDD26\"], \"\", \"\\uDBB9\\uDCFB\", [\"flashlight\"], 30, 3, 15, 0],\n    \"1f527\": [[\"\\uD83D\\uDD27\"], \"\", \"\\uDBB9\\uDCC9\", [\"wrench\"], 30, 4, 15, 0],\n    \"1f528\": [[\"\\uD83D\\uDD28\"], \"\\uE116\", \"\\uDBB9\\uDCCA\", [\"hammer\"], 30, 5, 15, 0],\n    \"1f529\": [[\"\\uD83D\\uDD29\"], \"\", \"\\uDBB9\\uDCCB\", [\"nut_and_bolt\"], 30, 6, 15, 0],\n    \"1f52a\": [[\"\\uD83D\\uDD2A\"], \"\", \"\\uDBB9\\uDCFA\", [\"hocho\", \"knife\"], 30, 7, 15, 0],\n    \"1f52b\": [[\"\\uD83D\\uDD2B\"], \"\\uE113\", \"\\uDBB9\\uDCF5\", [\"gun\"], 30, 8, 15, 0],\n    \"1f52c\": [[\"\\uD83D\\uDD2C\"], \"\", \"\", [\"microscope\"], 30, 9, 15, 0],\n    \"1f52d\": [[\"\\uD83D\\uDD2D\"], \"\", \"\", [\"telescope\"], 30, 10, 15, 0],\n    \"1f52e\": [[\"\\uD83D\\uDD2E\"], \"\", \"\\uDBB9\\uDCF7\", [\"crystal_ball\"], 30, 11, 15, 0],\n    \"1f52f\": [[\"\\uD83D\\uDD2F\"], \"\\uE23E\", \"\\uDBB9\\uDCF8\", [\"six_pointed_star\"], 30, 12, 15, 0],\n    \"1f530\": [[\"\\uD83D\\uDD30\"], \"\\uE209\", \"\\uDBB8\\uDC44\", [\"beginner\"], 30, 13, 15, 0],\n    \"1f531\": [[\"\\uD83D\\uDD31\"], \"\\uE031\", \"\\uDBB9\\uDCD2\", [\"trident\"], 30, 14, 15, 0],\n    \"1f532\": [[\"\\uD83D\\uDD32\"], \"\\uE21A\", \"\\uDBBA\\uDF64\", [\"black_square_button\"], 30, 15, 15, 0],\n    \"1f533\": [[\"\\uD83D\\uDD33\"], \"\\uE21B\", \"\\uDBBA\\uDF67\", [\"white_square_button\"], 30, 16, 15, 0],\n    \"1f534\": [[\"\\uD83D\\uDD34\"], \"\\uE219\", \"\\uDBBA\\uDF63\", [\"red_circle\"], 30, 17, 15, 0],\n    \"1f535\": [[\"\\uD83D\\uDD35\"], \"\", \"\\uDBBA\\uDF64\", [\"large_blue_circle\"], 30, 18, 15, 0],\n    \"1f536\": [[\"\\uD83D\\uDD36\"], \"\", \"\\uDBBA\\uDF73\", [\"large_orange_diamond\"], 30, 19, 15, 0],\n    \"1f537\": [[\"\\uD83D\\uDD37\"], \"\", \"\\uDBBA\\uDF74\", [\"large_blue_diamond\"], 30, 20, 15, 0],\n    \"1f538\": [[\"\\uD83D\\uDD38\"], \"\", \"\\uDBBA\\uDF75\", [\"small_orange_diamond\"], 30, 21, 15, 0],\n    \"1f539\": [[\"\\uD83D\\uDD39\"], \"\", \"\\uDBBA\\uDF76\", [\"small_blue_diamond\"], 30, 22, 15, 0],\n    \"1f53a\": [[\"\\uD83D\\uDD3A\"], \"\", \"\\uDBBA\\uDF78\", [\"small_red_triangle\"], 30, 23, 15, 0],\n    \"1f53b\": [[\"\\uD83D\\uDD3B\"], \"\", \"\\uDBBA\\uDF79\", [\"small_red_triangle_down\"], 30, 24, 15, 0],\n    \"1f53c\": [[\"\\uD83D\\uDD3C\"], \"\", \"\\uDBBA\\uDF01\", [\"arrow_up_small\"], 30, 25, 15, 0],\n    \"1f53d\": [[\"\\uD83D\\uDD3D\"], \"\", \"\\uDBBA\\uDF00\", [\"arrow_down_small\"], 30, 26, 15, 0],\n    \"1f549-fe0f\": [[\"\\uD83D\\uDD49\\uFE0F\", \"\\uD83D\\uDD49\"], \"\", \"\", [\"om_symbol\"], 30, 27, 15, 0],\n    \"1f54a-fe0f\": [[\"\\uD83D\\uDD4A\\uFE0F\", \"\\uD83D\\uDD4A\"], \"\", \"\", [\"dove_of_peace\"], 30, 28, 15, 0],\n    \"1f54b\": [[\"\\uD83D\\uDD4B\"], \"\", \"\", [\"kaaba\"], 30, 29, 15, 0],\n    \"1f54c\": [[\"\\uD83D\\uDD4C\"], \"\", \"\", [\"mosque\"], 30, 30, 15, 0],\n    \"1f54d\": [[\"\\uD83D\\uDD4D\"], \"\", \"\", [\"synagogue\"], 30, 31, 15, 0],\n    \"1f54e\": [[\"\\uD83D\\uDD4E\"], \"\", \"\", [\"menorah_with_nine_branches\"], 30, 32, 15, 0],\n    \"1f550\": [[\"\\uD83D\\uDD50\"], \"\\uE024\", \"\\uDBB8\\uDC1E\", [\"clock1\"], 30, 33, 15, 0],\n    \"1f551\": [[\"\\uD83D\\uDD51\"], \"\\uE025\", \"\\uDBB8\\uDC1F\", [\"clock2\"], 30, 34, 15, 0],\n    \"1f552\": [[\"\\uD83D\\uDD52\"], \"\\uE026\", \"\\uDBB8\\uDC20\", [\"clock3\"], 30, 35, 15, 0],\n    \"1f553\": [[\"\\uD83D\\uDD53\"], \"\\uE027\", \"\\uDBB8\\uDC21\", [\"clock4\"], 30, 36, 15, 0],\n    \"1f554\": [[\"\\uD83D\\uDD54\"], \"\\uE028\", \"\\uDBB8\\uDC22\", [\"clock5\"], 30, 37, 15, 0],\n    \"1f555\": [[\"\\uD83D\\uDD55\"], \"\\uE029\", \"\\uDBB8\\uDC23\", [\"clock6\"], 30, 38, 15, 0],\n    \"1f556\": [[\"\\uD83D\\uDD56\"], \"\\uE02A\", \"\\uDBB8\\uDC24\", [\"clock7\"], 30, 39, 15, 0],\n    \"1f557\": [[\"\\uD83D\\uDD57\"], \"\\uE02B\", \"\\uDBB8\\uDC25\", [\"clock8\"], 30, 40, 15, 0],\n    \"1f558\": [[\"\\uD83D\\uDD58\"], \"\\uE02C\", \"\\uDBB8\\uDC26\", [\"clock9\"], 30, 41, 15, 0],\n    \"1f559\": [[\"\\uD83D\\uDD59\"], \"\\uE02D\", \"\\uDBB8\\uDC27\", [\"clock10\"], 30, 42, 15, 0],\n    \"1f55a\": [[\"\\uD83D\\uDD5A\"], \"\\uE02E\", \"\\uDBB8\\uDC28\", [\"clock11\"], 30, 43, 15, 0],\n    \"1f55b\": [[\"\\uD83D\\uDD5B\"], \"\\uE02F\", \"\\uDBB8\\uDC29\", [\"clock12\"], 30, 44, 15, 0],\n    \"1f55c\": [[\"\\uD83D\\uDD5C\"], \"\", \"\", [\"clock130\"], 30, 45, 15, 0],\n    \"1f55d\": [[\"\\uD83D\\uDD5D\"], \"\", \"\", [\"clock230\"], 30, 46, 15, 0],\n    \"1f55e\": [[\"\\uD83D\\uDD5E\"], \"\", \"\", [\"clock330\"], 30, 47, 15, 0],\n    \"1f55f\": [[\"\\uD83D\\uDD5F\"], \"\", \"\", [\"clock430\"], 30, 48, 15, 0],\n    \"1f560\": [[\"\\uD83D\\uDD60\"], \"\", \"\", [\"clock530\"], 30, 49, 15, 0],\n    \"1f561\": [[\"\\uD83D\\uDD61\"], \"\", \"\", [\"clock630\"], 30, 50, 15, 0],\n    \"1f562\": [[\"\\uD83D\\uDD62\"], \"\", \"\", [\"clock730\"], 30, 51, 15, 0],\n    \"1f563\": [[\"\\uD83D\\uDD63\"], \"\", \"\", [\"clock830\"], 30, 52, 15, 0],\n    \"1f564\": [[\"\\uD83D\\uDD64\"], \"\", \"\", [\"clock930\"], 30, 53, 15, 0],\n    \"1f565\": [[\"\\uD83D\\uDD65\"], \"\", \"\", [\"clock1030\"], 30, 54, 15, 0],\n    \"1f566\": [[\"\\uD83D\\uDD66\"], \"\", \"\", [\"clock1130\"], 30, 55, 15, 0],\n    \"1f567\": [[\"\\uD83D\\uDD67\"], \"\", \"\", [\"clock1230\"], 30, 56, 15, 0],\n    \"1f56f-fe0f\": [[\"\\uD83D\\uDD6F\\uFE0F\", \"\\uD83D\\uDD6F\"], \"\", \"\", [\"candle\"], 30, 57, 15, 0],\n    \"1f570-fe0f\": [[\"\\uD83D\\uDD70\\uFE0F\", \"\\uD83D\\uDD70\"], \"\", \"\", [\"mantelpiece_clock\"], 30, 58, 15, 0],\n    \"1f573-fe0f\": [[\"\\uD83D\\uDD73\\uFE0F\", \"\\uD83D\\uDD73\"], \"\", \"\", [\"hole\"], 30, 59, 15, 0],\n    \"1f574-fe0f\": [[\"\\uD83D\\uDD74\\uFE0F\", \"\\uD83D\\uDD74\"], \"\", \"\", [\"man_in_business_suit_levitating\"], 30, 60, 15, 0],\n    \"1f575-fe0f-200d-2640-fe0f\": [[\"\\uD83D\\uDD75\\uFE0F\\u200D\\u2640\\uFE0F\"], \"\", \"\", [\"female-detective\"], 31, 5, 7, 0],\n    \"1f575-fe0f-200d-2642-fe0f\": [[\"\\uD83D\\uDD75\\uFE0F\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDD75\\uFE0F\", \"\\uD83D\\uDD75\"], \"\", \"\", [\"male-detective\", \"sleuth_or_spy\"], 31, 11, 7, 0],\n    \"1f576-fe0f\": [[\"\\uD83D\\uDD76\\uFE0F\", \"\\uD83D\\uDD76\"], \"\", \"\", [\"dark_sunglasses\"], 31, 23, 15, 0],\n    \"1f577-fe0f\": [[\"\\uD83D\\uDD77\\uFE0F\", \"\\uD83D\\uDD77\"], \"\", \"\", [\"spider\"], 31, 24, 15, 0],\n    \"1f578-fe0f\": [[\"\\uD83D\\uDD78\\uFE0F\", \"\\uD83D\\uDD78\"], \"\", \"\", [\"spider_web\"], 31, 25, 15, 0],\n    \"1f579-fe0f\": [[\"\\uD83D\\uDD79\\uFE0F\", \"\\uD83D\\uDD79\"], \"\", \"\", [\"joystick\"], 31, 26, 15, 0],\n    \"1f57a\": [[\"\\uD83D\\uDD7A\"], \"\", \"\", [\"man_dancing\"], 31, 27, 15, 0],\n    \"1f587-fe0f\": [[\"\\uD83D\\uDD87\\uFE0F\", \"\\uD83D\\uDD87\"], \"\", \"\", [\"linked_paperclips\"], 31, 33, 15, 0],\n    \"1f58a-fe0f\": [[\"\\uD83D\\uDD8A\\uFE0F\", \"\\uD83D\\uDD8A\"], \"\", \"\", [\"lower_left_ballpoint_pen\"], 31, 34, 15, 0],\n    \"1f58b-fe0f\": [[\"\\uD83D\\uDD8B\\uFE0F\", \"\\uD83D\\uDD8B\"], \"\", \"\", [\"lower_left_fountain_pen\"], 31, 35, 15, 0],\n    \"1f58c-fe0f\": [[\"\\uD83D\\uDD8C\\uFE0F\", \"\\uD83D\\uDD8C\"], \"\", \"\", [\"lower_left_paintbrush\"], 31, 36, 15, 0],\n    \"1f58d-fe0f\": [[\"\\uD83D\\uDD8D\\uFE0F\", \"\\uD83D\\uDD8D\"], \"\", \"\", [\"lower_left_crayon\"], 31, 37, 15, 0],\n    \"1f590-fe0f\": [[\"\\uD83D\\uDD90\\uFE0F\", \"\\uD83D\\uDD90\"], \"\", \"\", [\"raised_hand_with_fingers_splayed\"], 31, 38, 15, 0],\n    \"1f595\": [[\"\\uD83D\\uDD95\"], \"\", \"\", [\"middle_finger\", \"reversed_hand_with_middle_finger_extended\"], 31, 44, 15, 0],\n    \"1f596\": [[\"\\uD83D\\uDD96\"], \"\", \"\", [\"spock-hand\"], 31, 50, 15, 0],\n    \"1f5a4\": [[\"\\uD83D\\uDDA4\"], \"\", \"\", [\"black_heart\"], 31, 56, 15, 0],\n    \"1f5a5-fe0f\": [[\"\\uD83D\\uDDA5\\uFE0F\", \"\\uD83D\\uDDA5\"], \"\", \"\", [\"desktop_computer\"], 31, 57, 15, 0],\n    \"1f5a8-fe0f\": [[\"\\uD83D\\uDDA8\\uFE0F\", \"\\uD83D\\uDDA8\"], \"\", \"\", [\"printer\"], 31, 58, 15, 0],\n    \"1f5b1-fe0f\": [[\"\\uD83D\\uDDB1\\uFE0F\", \"\\uD83D\\uDDB1\"], \"\", \"\", [\"three_button_mouse\"], 31, 59, 15, 0],\n    \"1f5b2-fe0f\": [[\"\\uD83D\\uDDB2\\uFE0F\", \"\\uD83D\\uDDB2\"], \"\", \"\", [\"trackball\"], 31, 60, 15, 0],\n    \"1f5bc-fe0f\": [[\"\\uD83D\\uDDBC\\uFE0F\", \"\\uD83D\\uDDBC\"], \"\", \"\", [\"frame_with_picture\"], 32, 0, 15, 0],\n    \"1f5c2-fe0f\": [[\"\\uD83D\\uDDC2\\uFE0F\", \"\\uD83D\\uDDC2\"], \"\", \"\", [\"card_index_dividers\"], 32, 1, 15, 0],\n    \"1f5c3-fe0f\": [[\"\\uD83D\\uDDC3\\uFE0F\", \"\\uD83D\\uDDC3\"], \"\", \"\", [\"card_file_box\"], 32, 2, 15, 0],\n    \"1f5c4-fe0f\": [[\"\\uD83D\\uDDC4\\uFE0F\", \"\\uD83D\\uDDC4\"], \"\", \"\", [\"file_cabinet\"], 32, 3, 15, 0],\n    \"1f5d1-fe0f\": [[\"\\uD83D\\uDDD1\\uFE0F\", \"\\uD83D\\uDDD1\"], \"\", \"\", [\"wastebasket\"], 32, 4, 15, 0],\n    \"1f5d2-fe0f\": [[\"\\uD83D\\uDDD2\\uFE0F\", \"\\uD83D\\uDDD2\"], \"\", \"\", [\"spiral_note_pad\"], 32, 5, 15, 0],\n    \"1f5d3-fe0f\": [[\"\\uD83D\\uDDD3\\uFE0F\", \"\\uD83D\\uDDD3\"], \"\", \"\", [\"spiral_calendar_pad\"], 32, 6, 15, 0],\n    \"1f5dc-fe0f\": [[\"\\uD83D\\uDDDC\\uFE0F\", \"\\uD83D\\uDDDC\"], \"\", \"\", [\"compression\"], 32, 7, 15, 0],\n    \"1f5dd-fe0f\": [[\"\\uD83D\\uDDDD\\uFE0F\", \"\\uD83D\\uDDDD\"], \"\", \"\", [\"old_key\"], 32, 8, 15, 0],\n    \"1f5de-fe0f\": [[\"\\uD83D\\uDDDE\\uFE0F\", \"\\uD83D\\uDDDE\"], \"\", \"\", [\"rolled_up_newspaper\"], 32, 9, 15, 0],\n    \"1f5e1-fe0f\": [[\"\\uD83D\\uDDE1\\uFE0F\", \"\\uD83D\\uDDE1\"], \"\", \"\", [\"dagger_knife\"], 32, 10, 15, 0],\n    \"1f5e3-fe0f\": [[\"\\uD83D\\uDDE3\\uFE0F\", \"\\uD83D\\uDDE3\"], \"\", \"\", [\"speaking_head_in_silhouette\"], 32, 11, 15, 0],\n    \"1f5e8-fe0f\": [[\"\\uD83D\\uDDE8\\uFE0F\", \"\\uD83D\\uDDE8\"], \"\", \"\", [\"left_speech_bubble\"], 32, 12, 15, 0],\n    \"1f5ef-fe0f\": [[\"\\uD83D\\uDDEF\\uFE0F\", \"\\uD83D\\uDDEF\"], \"\", \"\", [\"right_anger_bubble\"], 32, 13, 15, 0],\n    \"1f5f3-fe0f\": [[\"\\uD83D\\uDDF3\\uFE0F\", \"\\uD83D\\uDDF3\"], \"\", \"\", [\"ballot_box_with_ballot\"], 32, 14, 15, 0],\n    \"1f5fa-fe0f\": [[\"\\uD83D\\uDDFA\\uFE0F\", \"\\uD83D\\uDDFA\"], \"\", \"\", [\"world_map\"], 32, 15, 15, 0],\n    \"1f5fb\": [[\"\\uD83D\\uDDFB\"], \"\\uE03B\", \"\\uDBB9\\uDCC3\", [\"mount_fuji\"], 32, 16, 15, 0],\n    \"1f5fc\": [[\"\\uD83D\\uDDFC\"], \"\\uE509\", \"\\uDBB9\\uDCC4\", [\"tokyo_tower\"], 32, 17, 15, 0],\n    \"1f5fd\": [[\"\\uD83D\\uDDFD\"], \"\\uE51D\", \"\\uDBB9\\uDCC6\", [\"statue_of_liberty\"], 32, 18, 15, 0],\n    \"1f5fe\": [[\"\\uD83D\\uDDFE\"], \"\", \"\\uDBB9\\uDCC7\", [\"japan\"], 32, 19, 15, 0],\n    \"1f5ff\": [[\"\\uD83D\\uDDFF\"], \"\", \"\\uDBB9\\uDCC8\", [\"moyai\"], 32, 20, 15, 0],\n    \"1f600\": [[\"\\uD83D\\uDE00\"], \"\", \"\", [\"grinning\"], 32, 21, 15, 0, \":D\"],\n    \"1f601\": [[\"\\uD83D\\uDE01\"], \"\\uE404\", \"\\uDBB8\\uDF33\", [\"grin\"], 32, 22, 15, 0],\n    \"1f602\": [[\"\\uD83D\\uDE02\"], \"\\uE412\", \"\\uDBB8\\uDF34\", [\"joy\"], 32, 23, 15, 0],\n    \"1f603\": [[\"\\uD83D\\uDE03\"], \"\\uE057\", \"\\uDBB8\\uDF30\", [\"smiley\"], 32, 24, 15, 0, \":)\"],\n    \"1f604\": [[\"\\uD83D\\uDE04\"], \"\\uE415\", \"\\uDBB8\\uDF38\", [\"smile\"], 32, 25, 15, 0, \":)\"],\n    \"1f605\": [[\"\\uD83D\\uDE05\"], \"\", \"\\uDBB8\\uDF31\", [\"sweat_smile\"], 32, 26, 15, 0],\n    \"1f606\": [[\"\\uD83D\\uDE06\"], \"\", \"\\uDBB8\\uDF32\", [\"laughing\", \"satisfied\"], 32, 27, 15, 0],\n    \"1f607\": [[\"\\uD83D\\uDE07\"], \"\", \"\", [\"innocent\"], 32, 28, 15, 0],\n    \"1f608\": [[\"\\uD83D\\uDE08\"], \"\", \"\", [\"smiling_imp\"], 32, 29, 15, 0],\n    \"1f609\": [[\"\\uD83D\\uDE09\"], \"\\uE405\", \"\\uDBB8\\uDF47\", [\"wink\"], 32, 30, 15, 0, \";)\"],\n    \"1f60a\": [[\"\\uD83D\\uDE0A\"], \"\\uE056\", \"\\uDBB8\\uDF35\", [\"blush\"], 32, 31, 15, 0, \":)\"],\n    \"1f60b\": [[\"\\uD83D\\uDE0B\"], \"\", \"\\uDBB8\\uDF2B\", [\"yum\"], 32, 32, 15, 0],\n    \"1f60c\": [[\"\\uD83D\\uDE0C\"], \"\\uE40A\", \"\\uDBB8\\uDF3E\", [\"relieved\"], 32, 33, 15, 0],\n    \"1f60d\": [[\"\\uD83D\\uDE0D\"], \"\\uE106\", \"\\uDBB8\\uDF27\", [\"heart_eyes\"], 32, 34, 15, 0],\n    \"1f60e\": [[\"\\uD83D\\uDE0E\"], \"\", \"\", [\"sunglasses\"], 32, 35, 15, 0],\n    \"1f60f\": [[\"\\uD83D\\uDE0F\"], \"\\uE402\", \"\\uDBB8\\uDF43\", [\"smirk\"], 32, 36, 15, 0],\n    \"1f610\": [[\"\\uD83D\\uDE10\"], \"\", \"\", [\"neutral_face\"], 32, 37, 15, 0],\n    \"1f611\": [[\"\\uD83D\\uDE11\"], \"\", \"\", [\"expressionless\"], 32, 38, 15, 0],\n    \"1f612\": [[\"\\uD83D\\uDE12\"], \"\\uE40E\", \"\\uDBB8\\uDF26\", [\"unamused\"], 32, 39, 15, 0, \":(\"],\n    \"1f613\": [[\"\\uD83D\\uDE13\"], \"\\uE108\", \"\\uDBB8\\uDF44\", [\"sweat\"], 32, 40, 15, 0],\n    \"1f614\": [[\"\\uD83D\\uDE14\"], \"\\uE403\", \"\\uDBB8\\uDF40\", [\"pensive\"], 32, 41, 15, 0],\n    \"1f615\": [[\"\\uD83D\\uDE15\"], \"\", \"\", [\"confused\"], 32, 42, 15, 0],\n    \"1f616\": [[\"\\uD83D\\uDE16\"], \"\\uE407\", \"\\uDBB8\\uDF3F\", [\"confounded\"], 32, 43, 15, 0],\n    \"1f617\": [[\"\\uD83D\\uDE17\"], \"\", \"\", [\"kissing\"], 32, 44, 15, 0],\n    \"1f618\": [[\"\\uD83D\\uDE18\"], \"\\uE418\", \"\\uDBB8\\uDF2C\", [\"kissing_heart\"], 32, 45, 15, 0],\n    \"1f619\": [[\"\\uD83D\\uDE19\"], \"\", \"\", [\"kissing_smiling_eyes\"], 32, 46, 15, 0],\n    \"1f61a\": [[\"\\uD83D\\uDE1A\"], \"\\uE417\", \"\\uDBB8\\uDF2D\", [\"kissing_closed_eyes\"], 32, 47, 15, 0],\n    \"1f61b\": [[\"\\uD83D\\uDE1B\"], \"\", \"\", [\"stuck_out_tongue\"], 32, 48, 15, 0, \":p\"],\n    \"1f61c\": [[\"\\uD83D\\uDE1C\"], \"\\uE105\", \"\\uDBB8\\uDF29\", [\"stuck_out_tongue_winking_eye\"], 32, 49, 15, 0, \";p\"],\n    \"1f61d\": [[\"\\uD83D\\uDE1D\"], \"\\uE409\", \"\\uDBB8\\uDF2A\", [\"stuck_out_tongue_closed_eyes\"], 32, 50, 15, 0],\n    \"1f61e\": [[\"\\uD83D\\uDE1E\"], \"\\uE058\", \"\\uDBB8\\uDF23\", [\"disappointed\"], 32, 51, 15, 0, \":(\"],\n    \"1f61f\": [[\"\\uD83D\\uDE1F\"], \"\", \"\", [\"worried\"], 32, 52, 15, 0],\n    \"1f620\": [[\"\\uD83D\\uDE20\"], \"\\uE059\", \"\\uDBB8\\uDF20\", [\"angry\"], 32, 53, 15, 0],\n    \"1f621\": [[\"\\uD83D\\uDE21\"], \"\\uE416\", \"\\uDBB8\\uDF3D\", [\"rage\"], 32, 54, 15, 0],\n    \"1f622\": [[\"\\uD83D\\uDE22\"], \"\\uE413\", \"\\uDBB8\\uDF39\", [\"cry\"], 32, 55, 15, 0, \":'(\"],\n    \"1f623\": [[\"\\uD83D\\uDE23\"], \"\\uE406\", \"\\uDBB8\\uDF3C\", [\"persevere\"], 32, 56, 15, 0],\n    \"1f624\": [[\"\\uD83D\\uDE24\"], \"\", \"\\uDBB8\\uDF28\", [\"triumph\"], 32, 57, 15, 0],\n    \"1f625\": [[\"\\uD83D\\uDE25\"], \"\\uE401\", \"\\uDBB8\\uDF45\", [\"disappointed_relieved\"], 32, 58, 15, 0],\n    \"1f626\": [[\"\\uD83D\\uDE26\"], \"\", \"\", [\"frowning\"], 32, 59, 15, 0],\n    \"1f627\": [[\"\\uD83D\\uDE27\"], \"\", \"\", [\"anguished\"], 32, 60, 15, 0],\n    \"1f628\": [[\"\\uD83D\\uDE28\"], \"\\uE40B\", \"\\uDBB8\\uDF3B\", [\"fearful\"], 33, 0, 15, 0],\n    \"1f629\": [[\"\\uD83D\\uDE29\"], \"\", \"\\uDBB8\\uDF21\", [\"weary\"], 33, 1, 15, 0],\n    \"1f62a\": [[\"\\uD83D\\uDE2A\"], \"\\uE408\", \"\\uDBB8\\uDF42\", [\"sleepy\"], 33, 2, 15, 0],\n    \"1f62b\": [[\"\\uD83D\\uDE2B\"], \"\", \"\\uDBB8\\uDF46\", [\"tired_face\"], 33, 3, 15, 0],\n    \"1f62c\": [[\"\\uD83D\\uDE2C\"], \"\", \"\", [\"grimacing\"], 33, 4, 15, 0],\n    \"1f62d\": [[\"\\uD83D\\uDE2D\"], \"\\uE411\", \"\\uDBB8\\uDF3A\", [\"sob\"], 33, 5, 15, 0, \":'(\"],\n    \"1f62e-200d-1f4a8\": [[\"\\uD83D\\uDE2E\\u200D\\uD83D\\uDCA8\"], \"\", \"\", [\"face_exhaling\"], 33, 6, 15, 0],\n    \"1f62e\": [[\"\\uD83D\\uDE2E\"], \"\", \"\", [\"open_mouth\"], 33, 7, 15, 0],\n    \"1f62f\": [[\"\\uD83D\\uDE2F\"], \"\", \"\", [\"hushed\"], 33, 8, 15, 0],\n    \"1f630\": [[\"\\uD83D\\uDE30\"], \"\\uE40F\", \"\\uDBB8\\uDF25\", [\"cold_sweat\"], 33, 9, 15, 0],\n    \"1f631\": [[\"\\uD83D\\uDE31\"], \"\\uE107\", \"\\uDBB8\\uDF41\", [\"scream\"], 33, 10, 15, 0],\n    \"1f632\": [[\"\\uD83D\\uDE32\"], \"\\uE410\", \"\\uDBB8\\uDF22\", [\"astonished\"], 33, 11, 15, 0],\n    \"1f633\": [[\"\\uD83D\\uDE33\"], \"\\uE40D\", \"\\uDBB8\\uDF2F\", [\"flushed\"], 33, 12, 15, 0],\n    \"1f634\": [[\"\\uD83D\\uDE34\"], \"\", \"\", [\"sleeping\"], 33, 13, 15, 0],\n    \"1f635-200d-1f4ab\": [[\"\\uD83D\\uDE35\\u200D\\uD83D\\uDCAB\"], \"\", \"\", [\"face_with_spiral_eyes\"], 33, 14, 15, 0],\n    \"1f635\": [[\"\\uD83D\\uDE35\"], \"\", \"\\uDBB8\\uDF24\", [\"dizzy_face\"], 33, 15, 15, 0],\n    \"1f636-200d-1f32b-fe0f\": [[\"\\uD83D\\uDE36\\u200D\\uD83C\\uDF2B\\uFE0F\", \"\\uD83D\\uDE36\\u200D\\uD83C\\uDF2B\"], \"\", \"\", [\"face_in_clouds\"], 33, 16, 15, 0],\n    \"1f636\": [[\"\\uD83D\\uDE36\"], \"\", \"\", [\"no_mouth\"], 33, 17, 15, 0],\n    \"1f637\": [[\"\\uD83D\\uDE37\"], \"\\uE40C\", \"\\uDBB8\\uDF2E\", [\"mask\"], 33, 18, 15, 0],\n    \"1f638\": [[\"\\uD83D\\uDE38\"], \"\", \"\\uDBB8\\uDF49\", [\"smile_cat\"], 33, 19, 15, 0],\n    \"1f639\": [[\"\\uD83D\\uDE39\"], \"\", \"\\uDBB8\\uDF4A\", [\"joy_cat\"], 33, 20, 15, 0],\n    \"1f63a\": [[\"\\uD83D\\uDE3A\"], \"\", \"\\uDBB8\\uDF48\", [\"smiley_cat\"], 33, 21, 15, 0],\n    \"1f63b\": [[\"\\uD83D\\uDE3B\"], \"\", \"\\uDBB8\\uDF4C\", [\"heart_eyes_cat\"], 33, 22, 15, 0],\n    \"1f63c\": [[\"\\uD83D\\uDE3C\"], \"\", \"\\uDBB8\\uDF4F\", [\"smirk_cat\"], 33, 23, 15, 0],\n    \"1f63d\": [[\"\\uD83D\\uDE3D\"], \"\", \"\\uDBB8\\uDF4B\", [\"kissing_cat\"], 33, 24, 15, 0],\n    \"1f63e\": [[\"\\uD83D\\uDE3E\"], \"\", \"\\uDBB8\\uDF4E\", [\"pouting_cat\"], 33, 25, 15, 0],\n    \"1f63f\": [[\"\\uD83D\\uDE3F\"], \"\", \"\\uDBB8\\uDF4D\", [\"crying_cat_face\"], 33, 26, 15, 0],\n    \"1f640\": [[\"\\uD83D\\uDE40\"], \"\", \"\\uDBB8\\uDF50\", [\"scream_cat\"], 33, 27, 15, 0],\n    \"1f641\": [[\"\\uD83D\\uDE41\"], \"\", \"\", [\"slightly_frowning_face\"], 33, 28, 15, 0],\n    \"1f642\": [[\"\\uD83D\\uDE42\"], \"\", \"\", [\"slightly_smiling_face\"], 33, 29, 15, 0],\n    \"1f643\": [[\"\\uD83D\\uDE43\"], \"\", \"\", [\"upside_down_face\"], 33, 30, 15, 0],\n    \"1f644\": [[\"\\uD83D\\uDE44\"], \"\", \"\", [\"face_with_rolling_eyes\"], 33, 31, 15, 0],\n    \"1f645-200d-2640-fe0f\": [[\"\\uD83D\\uDE45\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDE45\\u200D\\u2640\", \"\\uD83D\\uDE45\"], \"\", \"\", [\"woman-gesturing-no\", \"no_good\"], 33, 32, 15, 0],\n    \"1f645-200d-2642-fe0f\": [[\"\\uD83D\\uDE45\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDE45\\u200D\\u2642\"], \"\", \"\", [\"man-gesturing-no\"], 33, 38, 15, 0],\n    \"1f646-200d-2640-fe0f\": [[\"\\uD83D\\uDE46\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDE46\\u200D\\u2640\", \"\\uD83D\\uDE46\"], \"\", \"\", [\"woman-gesturing-ok\", \"ok_woman\"], 33, 50, 15, 0],\n    \"1f646-200d-2642-fe0f\": [[\"\\uD83D\\uDE46\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDE46\\u200D\\u2642\"], \"\", \"\", [\"man-gesturing-ok\"], 33, 56, 15, 0],\n    \"1f647-200d-2640-fe0f\": [[\"\\uD83D\\uDE47\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDE47\\u200D\\u2640\"], \"\", \"\", [\"woman-bowing\"], 34, 7, 15, 0],\n    \"1f647-200d-2642-fe0f\": [[\"\\uD83D\\uDE47\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDE47\\u200D\\u2642\"], \"\", \"\", [\"man-bowing\"], 34, 13, 15, 0],\n    \"1f647\": [[\"\\uD83D\\uDE47\"], \"\\uE426\", \"\\uDBB8\\uDF53\", [\"bow\"], 34, 19, 15, 0],\n    \"1f648\": [[\"\\uD83D\\uDE48\"], \"\", \"\\uDBB8\\uDF54\", [\"see_no_evil\"], 34, 25, 15, 0],\n    \"1f649\": [[\"\\uD83D\\uDE49\"], \"\", \"\\uDBB8\\uDF56\", [\"hear_no_evil\"], 34, 26, 15, 0],\n    \"1f64a\": [[\"\\uD83D\\uDE4A\"], \"\", \"\\uDBB8\\uDF55\", [\"speak_no_evil\"], 34, 27, 15, 0],\n    \"1f64b-200d-2640-fe0f\": [[\"\\uD83D\\uDE4B\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDE4B\\u200D\\u2640\", \"\\uD83D\\uDE4B\"], \"\", \"\", [\"woman-raising-hand\", \"raising_hand\"], 34, 28, 15, 0],\n    \"1f64b-200d-2642-fe0f\": [[\"\\uD83D\\uDE4B\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDE4B\\u200D\\u2642\"], \"\", \"\", [\"man-raising-hand\"], 34, 34, 15, 0],\n    \"1f64c\": [[\"\\uD83D\\uDE4C\"], \"\\uE427\", \"\\uDBB8\\uDF58\", [\"raised_hands\"], 34, 46, 15, 0],\n    \"1f64d-200d-2640-fe0f\": [[\"\\uD83D\\uDE4D\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDE4D\\u200D\\u2640\", \"\\uD83D\\uDE4D\"], \"\", \"\", [\"woman-frowning\", \"person_frowning\"], 34, 52, 15, 0],\n    \"1f64d-200d-2642-fe0f\": [[\"\\uD83D\\uDE4D\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDE4D\\u200D\\u2642\"], \"\", \"\", [\"man-frowning\"], 34, 58, 15, 0],\n    \"1f64e-200d-2640-fe0f\": [[\"\\uD83D\\uDE4E\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDE4E\\u200D\\u2640\", \"\\uD83D\\uDE4E\"], \"\", \"\", [\"woman-pouting\", \"person_with_pouting_face\"], 35, 9, 15, 0],\n    \"1f64e-200d-2642-fe0f\": [[\"\\uD83D\\uDE4E\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDE4E\\u200D\\u2642\"], \"\", \"\", [\"man-pouting\"], 35, 15, 15, 0],\n    \"1f64f\": [[\"\\uD83D\\uDE4F\"], \"\\uE41D\", \"\\uDBB8\\uDF5B\", [\"pray\"], 35, 27, 15, 0],\n    \"1f680\": [[\"\\uD83D\\uDE80\"], \"\\uE10D\", \"\\uDBB9\\uDFED\", [\"rocket\"], 35, 33, 15, 0],\n    \"1f681\": [[\"\\uD83D\\uDE81\"], \"\", \"\", [\"helicopter\"], 35, 34, 15, 0],\n    \"1f682\": [[\"\\uD83D\\uDE82\"], \"\", \"\", [\"steam_locomotive\"], 35, 35, 15, 0],\n    \"1f683\": [[\"\\uD83D\\uDE83\"], \"\\uE01E\", \"\\uDBB9\\uDFDF\", [\"railway_car\"], 35, 36, 15, 0],\n    \"1f684\": [[\"\\uD83D\\uDE84\"], \"\\uE435\", \"\\uDBB9\\uDFE2\", [\"bullettrain_side\"], 35, 37, 15, 0],\n    \"1f685\": [[\"\\uD83D\\uDE85\"], \"\\uE01F\", \"\\uDBB9\\uDFE3\", [\"bullettrain_front\"], 35, 38, 15, 0],\n    \"1f686\": [[\"\\uD83D\\uDE86\"], \"\", \"\", [\"train2\"], 35, 39, 15, 0],\n    \"1f687\": [[\"\\uD83D\\uDE87\"], \"\\uE434\", \"\\uDBB9\\uDFE0\", [\"metro\"], 35, 40, 15, 0],\n    \"1f688\": [[\"\\uD83D\\uDE88\"], \"\", \"\", [\"light_rail\"], 35, 41, 15, 0],\n    \"1f689\": [[\"\\uD83D\\uDE89\"], \"\\uE039\", \"\\uDBB9\\uDFEC\", [\"station\"], 35, 42, 15, 0],\n    \"1f68a\": [[\"\\uD83D\\uDE8A\"], \"\", \"\", [\"tram\"], 35, 43, 15, 0],\n    \"1f68b\": [[\"\\uD83D\\uDE8B\"], \"\", \"\", [\"train\"], 35, 44, 15, 0],\n    \"1f68c\": [[\"\\uD83D\\uDE8C\"], \"\\uE159\", \"\\uDBB9\\uDFE6\", [\"bus\"], 35, 45, 15, 0],\n    \"1f68d\": [[\"\\uD83D\\uDE8D\"], \"\", \"\", [\"oncoming_bus\"], 35, 46, 15, 0],\n    \"1f68e\": [[\"\\uD83D\\uDE8E\"], \"\", \"\", [\"trolleybus\"], 35, 47, 15, 0],\n    \"1f68f\": [[\"\\uD83D\\uDE8F\"], \"\\uE150\", \"\\uDBB9\\uDFE7\", [\"busstop\"], 35, 48, 15, 0],\n    \"1f690\": [[\"\\uD83D\\uDE90\"], \"\", \"\", [\"minibus\"], 35, 49, 15, 0],\n    \"1f691\": [[\"\\uD83D\\uDE91\"], \"\\uE431\", \"\\uDBB9\\uDFF3\", [\"ambulance\"], 35, 50, 15, 0],\n    \"1f692\": [[\"\\uD83D\\uDE92\"], \"\\uE430\", \"\\uDBB9\\uDFF2\", [\"fire_engine\"], 35, 51, 15, 0],\n    \"1f693\": [[\"\\uD83D\\uDE93\"], \"\\uE432\", \"\\uDBB9\\uDFF4\", [\"police_car\"], 35, 52, 15, 0],\n    \"1f694\": [[\"\\uD83D\\uDE94\"], \"\", \"\", [\"oncoming_police_car\"], 35, 53, 15, 0],\n    \"1f695\": [[\"\\uD83D\\uDE95\"], \"\\uE15A\", \"\\uDBB9\\uDFEF\", [\"taxi\"], 35, 54, 15, 0],\n    \"1f696\": [[\"\\uD83D\\uDE96\"], \"\", \"\", [\"oncoming_taxi\"], 35, 55, 15, 0],\n    \"1f697\": [[\"\\uD83D\\uDE97\"], \"\\uE01B\", \"\\uDBB9\\uDFE4\", [\"car\", \"red_car\"], 35, 56, 15, 0],\n    \"1f698\": [[\"\\uD83D\\uDE98\"], \"\", \"\", [\"oncoming_automobile\"], 35, 57, 15, 0],\n    \"1f699\": [[\"\\uD83D\\uDE99\"], \"\\uE42E\", \"\\uDBB9\\uDFE5\", [\"blue_car\"], 35, 58, 15, 0],\n    \"1f69a\": [[\"\\uD83D\\uDE9A\"], \"\\uE42F\", \"\\uDBB9\\uDFF1\", [\"truck\"], 35, 59, 15, 0],\n    \"1f69b\": [[\"\\uD83D\\uDE9B\"], \"\", \"\", [\"articulated_lorry\"], 35, 60, 15, 0],\n    \"1f69c\": [[\"\\uD83D\\uDE9C\"], \"\", \"\", [\"tractor\"], 36, 0, 15, 0],\n    \"1f69d\": [[\"\\uD83D\\uDE9D\"], \"\", \"\", [\"monorail\"], 36, 1, 15, 0],\n    \"1f69e\": [[\"\\uD83D\\uDE9E\"], \"\", \"\", [\"mountain_railway\"], 36, 2, 15, 0],\n    \"1f69f\": [[\"\\uD83D\\uDE9F\"], \"\", \"\", [\"suspension_railway\"], 36, 3, 15, 0],\n    \"1f6a0\": [[\"\\uD83D\\uDEA0\"], \"\", \"\", [\"mountain_cableway\"], 36, 4, 15, 0],\n    \"1f6a1\": [[\"\\uD83D\\uDEA1\"], \"\", \"\", [\"aerial_tramway\"], 36, 5, 15, 0],\n    \"1f6a2\": [[\"\\uD83D\\uDEA2\"], \"\\uE202\", \"\\uDBB9\\uDFE8\", [\"ship\"], 36, 6, 15, 0],\n    \"1f6a3-200d-2640-fe0f\": [[\"\\uD83D\\uDEA3\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDEA3\\u200D\\u2640\"], \"\", \"\", [\"woman-rowing-boat\"], 36, 7, 15, 0],\n    \"1f6a3-200d-2642-fe0f\": [[\"\\uD83D\\uDEA3\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDEA3\\u200D\\u2642\", \"\\uD83D\\uDEA3\"], \"\", \"\", [\"man-rowing-boat\", \"rowboat\"], 36, 13, 15, 0],\n    \"1f6a4\": [[\"\\uD83D\\uDEA4\"], \"\\uE135\", \"\\uDBB9\\uDFEE\", [\"speedboat\"], 36, 25, 15, 0],\n    \"1f6a5\": [[\"\\uD83D\\uDEA5\"], \"\\uE14E\", \"\\uDBB9\\uDFF7\", [\"traffic_light\"], 36, 26, 15, 0],\n    \"1f6a6\": [[\"\\uD83D\\uDEA6\"], \"\", \"\", [\"vertical_traffic_light\"], 36, 27, 15, 0],\n    \"1f6a7\": [[\"\\uD83D\\uDEA7\"], \"\\uE137\", \"\\uDBB9\\uDFF8\", [\"construction\"], 36, 28, 15, 0],\n    \"1f6a8\": [[\"\\uD83D\\uDEA8\"], \"\", \"\\uDBB9\\uDFF9\", [\"rotating_light\"], 36, 29, 15, 0],\n    \"1f6a9\": [[\"\\uD83D\\uDEA9\"], \"\", \"\\uDBBA\\uDF22\", [\"triangular_flag_on_post\"], 36, 30, 15, 0],\n    \"1f6aa\": [[\"\\uD83D\\uDEAA\"], \"\", \"\\uDBB9\\uDCF3\", [\"door\"], 36, 31, 15, 0],\n    \"1f6ab\": [[\"\\uD83D\\uDEAB\"], \"\", \"\\uDBBA\\uDF48\", [\"no_entry_sign\"], 36, 32, 15, 0],\n    \"1f6ac\": [[\"\\uD83D\\uDEAC\"], \"\\uE30E\", \"\\uDBBA\\uDF1E\", [\"smoking\"], 36, 33, 15, 0],\n    \"1f6ad\": [[\"\\uD83D\\uDEAD\"], \"\\uE208\", \"\\uDBBA\\uDF1F\", [\"no_smoking\"], 36, 34, 15, 0],\n    \"1f6ae\": [[\"\\uD83D\\uDEAE\"], \"\", \"\", [\"put_litter_in_its_place\"], 36, 35, 15, 0],\n    \"1f6af\": [[\"\\uD83D\\uDEAF\"], \"\", \"\", [\"do_not_litter\"], 36, 36, 15, 0],\n    \"1f6b0\": [[\"\\uD83D\\uDEB0\"], \"\", \"\", [\"potable_water\"], 36, 37, 15, 0],\n    \"1f6b1\": [[\"\\uD83D\\uDEB1\"], \"\", \"\", [\"non-potable_water\"], 36, 38, 15, 0],\n    \"1f6b2\": [[\"\\uD83D\\uDEB2\"], \"\\uE136\", \"\\uDBB9\\uDFEB\", [\"bike\"], 36, 39, 15, 0],\n    \"1f6b3\": [[\"\\uD83D\\uDEB3\"], \"\", \"\", [\"no_bicycles\"], 36, 40, 15, 0],\n    \"1f6b4-200d-2640-fe0f\": [[\"\\uD83D\\uDEB4\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDEB4\\u200D\\u2640\"], \"\", \"\", [\"woman-biking\"], 36, 41, 15, 0],\n    \"1f6b4-200d-2642-fe0f\": [[\"\\uD83D\\uDEB4\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDEB4\\u200D\\u2642\", \"\\uD83D\\uDEB4\"], \"\", \"\", [\"man-biking\", \"bicyclist\"], 36, 47, 15, 0],\n    \"1f6b5-200d-2640-fe0f\": [[\"\\uD83D\\uDEB5\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDEB5\\u200D\\u2640\"], \"\", \"\", [\"woman-mountain-biking\"], 36, 59, 15, 0],\n    \"1f6b5-200d-2642-fe0f\": [[\"\\uD83D\\uDEB5\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDEB5\\u200D\\u2642\", \"\\uD83D\\uDEB5\"], \"\", \"\", [\"man-mountain-biking\", \"mountain_bicyclist\"], 37, 4, 15, 0],\n    \"1f6b6-200d-2640-fe0f\": [[\"\\uD83D\\uDEB6\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDEB6\\u200D\\u2640\"], \"\", \"\", [\"woman-walking\"], 37, 16, 15, 0],\n    \"1f6b6-200d-2642-fe0f\": [[\"\\uD83D\\uDEB6\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDEB6\\u200D\\u2642\", \"\\uD83D\\uDEB6\"], \"\", \"\", [\"man-walking\", \"walking\"], 37, 22, 15, 0],\n    \"1f6b7\": [[\"\\uD83D\\uDEB7\"], \"\", \"\", [\"no_pedestrians\"], 37, 34, 15, 0],\n    \"1f6b8\": [[\"\\uD83D\\uDEB8\"], \"\", \"\", [\"children_crossing\"], 37, 35, 15, 0],\n    \"1f6b9\": [[\"\\uD83D\\uDEB9\"], \"\\uE138\", \"\\uDBBA\\uDF33\", [\"mens\"], 37, 36, 15, 0],\n    \"1f6ba\": [[\"\\uD83D\\uDEBA\"], \"\\uE139\", \"\\uDBBA\\uDF34\", [\"womens\"], 37, 37, 15, 0],\n    \"1f6bb\": [[\"\\uD83D\\uDEBB\"], \"\\uE151\", \"\\uDBB9\\uDD06\", [\"restroom\"], 37, 38, 15, 0],\n    \"1f6bc\": [[\"\\uD83D\\uDEBC\"], \"\\uE13A\", \"\\uDBBA\\uDF35\", [\"baby_symbol\"], 37, 39, 15, 0],\n    \"1f6bd\": [[\"\\uD83D\\uDEBD\"], \"\\uE140\", \"\\uDBB9\\uDD07\", [\"toilet\"], 37, 40, 15, 0],\n    \"1f6be\": [[\"\\uD83D\\uDEBE\"], \"\\uE309\", \"\\uDBB9\\uDD08\", [\"wc\"], 37, 41, 15, 0],\n    \"1f6bf\": [[\"\\uD83D\\uDEBF\"], \"\", \"\", [\"shower\"], 37, 42, 15, 0],\n    \"1f6c0\": [[\"\\uD83D\\uDEC0\"], \"\\uE13F\", \"\\uDBB9\\uDD05\", [\"bath\"], 37, 43, 15, 0],\n    \"1f6c1\": [[\"\\uD83D\\uDEC1\"], \"\", \"\", [\"bathtub\"], 37, 49, 15, 0],\n    \"1f6c2\": [[\"\\uD83D\\uDEC2\"], \"\", \"\", [\"passport_control\"], 37, 50, 15, 0],\n    \"1f6c3\": [[\"\\uD83D\\uDEC3\"], \"\", \"\", [\"customs\"], 37, 51, 15, 0],\n    \"1f6c4\": [[\"\\uD83D\\uDEC4\"], \"\", \"\", [\"baggage_claim\"], 37, 52, 15, 0],\n    \"1f6c5\": [[\"\\uD83D\\uDEC5\"], \"\", \"\", [\"left_luggage\"], 37, 53, 15, 0],\n    \"1f6cb-fe0f\": [[\"\\uD83D\\uDECB\\uFE0F\", \"\\uD83D\\uDECB\"], \"\", \"\", [\"couch_and_lamp\"], 37, 54, 15, 0],\n    \"1f6cc\": [[\"\\uD83D\\uDECC\"], \"\", \"\", [\"sleeping_accommodation\"], 37, 55, 15, 0],\n    \"1f6cd-fe0f\": [[\"\\uD83D\\uDECD\\uFE0F\", \"\\uD83D\\uDECD\"], \"\", \"\", [\"shopping_bags\"], 38, 0, 15, 0],\n    \"1f6ce-fe0f\": [[\"\\uD83D\\uDECE\\uFE0F\", \"\\uD83D\\uDECE\"], \"\", \"\", [\"bellhop_bell\"], 38, 1, 15, 0],\n    \"1f6cf-fe0f\": [[\"\\uD83D\\uDECF\\uFE0F\", \"\\uD83D\\uDECF\"], \"\", \"\", [\"bed\"], 38, 2, 15, 0],\n    \"1f6d0\": [[\"\\uD83D\\uDED0\"], \"\", \"\", [\"place_of_worship\"], 38, 3, 15, 0],\n    \"1f6d1\": [[\"\\uD83D\\uDED1\"], \"\", \"\", [\"octagonal_sign\"], 38, 4, 15, 0],\n    \"1f6d2\": [[\"\\uD83D\\uDED2\"], \"\", \"\", [\"shopping_trolley\"], 38, 5, 15, 0],\n    \"1f6d5\": [[\"\\uD83D\\uDED5\"], \"\", \"\", [\"hindu_temple\"], 38, 6, 15, 0],\n    \"1f6d6\": [[\"\\uD83D\\uDED6\"], \"\", \"\", [\"hut\"], 38, 7, 15, 0],\n    \"1f6d7\": [[\"\\uD83D\\uDED7\"], \"\", \"\", [\"elevator\"], 38, 8, 15, 0],\n    \"1f6dc\": [[\"\\uD83D\\uDEDC\"], \"\", \"\", [\"wireless\"], 38, 9, 3, 0],\n    \"1f6dd\": [[\"\\uD83D\\uDEDD\"], \"\", \"\", [\"playground_slide\"], 38, 10, 15, 0],\n    \"1f6de\": [[\"\\uD83D\\uDEDE\"], \"\", \"\", [\"wheel\"], 38, 11, 15, 0],\n    \"1f6df\": [[\"\\uD83D\\uDEDF\"], \"\", \"\", [\"ring_buoy\"], 38, 12, 15, 0],\n    \"1f6e0-fe0f\": [[\"\\uD83D\\uDEE0\\uFE0F\", \"\\uD83D\\uDEE0\"], \"\", \"\", [\"hammer_and_wrench\"], 38, 13, 15, 0],\n    \"1f6e1-fe0f\": [[\"\\uD83D\\uDEE1\\uFE0F\", \"\\uD83D\\uDEE1\"], \"\", \"\", [\"shield\"], 38, 14, 15, 0],\n    \"1f6e2-fe0f\": [[\"\\uD83D\\uDEE2\\uFE0F\", \"\\uD83D\\uDEE2\"], \"\", \"\", [\"oil_drum\"], 38, 15, 15, 0],\n    \"1f6e3-fe0f\": [[\"\\uD83D\\uDEE3\\uFE0F\", \"\\uD83D\\uDEE3\"], \"\", \"\", [\"motorway\"], 38, 16, 15, 0],\n    \"1f6e4-fe0f\": [[\"\\uD83D\\uDEE4\\uFE0F\", \"\\uD83D\\uDEE4\"], \"\", \"\", [\"railway_track\"], 38, 17, 15, 0],\n    \"1f6e5-fe0f\": [[\"\\uD83D\\uDEE5\\uFE0F\", \"\\uD83D\\uDEE5\"], \"\", \"\", [\"motor_boat\"], 38, 18, 15, 0],\n    \"1f6e9-fe0f\": [[\"\\uD83D\\uDEE9\\uFE0F\", \"\\uD83D\\uDEE9\"], \"\", \"\", [\"small_airplane\"], 38, 19, 15, 0],\n    \"1f6eb\": [[\"\\uD83D\\uDEEB\"], \"\", \"\", [\"airplane_departure\"], 38, 20, 15, 0],\n    \"1f6ec\": [[\"\\uD83D\\uDEEC\"], \"\", \"\", [\"airplane_arriving\"], 38, 21, 15, 0],\n    \"1f6f0-fe0f\": [[\"\\uD83D\\uDEF0\\uFE0F\", \"\\uD83D\\uDEF0\"], \"\", \"\", [\"satellite\"], 38, 22, 15, 0],\n    \"1f6f3-fe0f\": [[\"\\uD83D\\uDEF3\\uFE0F\", \"\\uD83D\\uDEF3\"], \"\", \"\", [\"passenger_ship\"], 38, 23, 15, 0],\n    \"1f6f4\": [[\"\\uD83D\\uDEF4\"], \"\", \"\", [\"scooter\"], 38, 24, 15, 0],\n    \"1f6f5\": [[\"\\uD83D\\uDEF5\"], \"\", \"\", [\"motor_scooter\"], 38, 25, 15, 0],\n    \"1f6f6\": [[\"\\uD83D\\uDEF6\"], \"\", \"\", [\"canoe\"], 38, 26, 15, 0],\n    \"1f6f7\": [[\"\\uD83D\\uDEF7\"], \"\", \"\", [\"sled\"], 38, 27, 15, 0],\n    \"1f6f8\": [[\"\\uD83D\\uDEF8\"], \"\", \"\", [\"flying_saucer\"], 38, 28, 15, 0],\n    \"1f6f9\": [[\"\\uD83D\\uDEF9\"], \"\", \"\", [\"skateboard\"], 38, 29, 15, 0],\n    \"1f6fa\": [[\"\\uD83D\\uDEFA\"], \"\", \"\", [\"auto_rickshaw\"], 38, 30, 15, 0],\n    \"1f6fb\": [[\"\\uD83D\\uDEFB\"], \"\", \"\", [\"pickup_truck\"], 38, 31, 15, 0],\n    \"1f6fc\": [[\"\\uD83D\\uDEFC\"], \"\", \"\", [\"roller_skate\"], 38, 32, 15, 0],\n    \"1f7e0\": [[\"\\uD83D\\uDFE0\"], \"\", \"\", [\"large_orange_circle\"], 38, 33, 15, 0],\n    \"1f7e1\": [[\"\\uD83D\\uDFE1\"], \"\", \"\", [\"large_yellow_circle\"], 38, 34, 15, 0],\n    \"1f7e2\": [[\"\\uD83D\\uDFE2\"], \"\", \"\", [\"large_green_circle\"], 38, 35, 15, 0],\n    \"1f7e3\": [[\"\\uD83D\\uDFE3\"], \"\", \"\", [\"large_purple_circle\"], 38, 36, 15, 0],\n    \"1f7e4\": [[\"\\uD83D\\uDFE4\"], \"\", \"\", [\"large_brown_circle\"], 38, 37, 15, 0],\n    \"1f7e5\": [[\"\\uD83D\\uDFE5\"], \"\", \"\", [\"large_red_square\"], 38, 38, 15, 0],\n    \"1f7e6\": [[\"\\uD83D\\uDFE6\"], \"\", \"\", [\"large_blue_square\"], 38, 39, 15, 0],\n    \"1f7e7\": [[\"\\uD83D\\uDFE7\"], \"\", \"\", [\"large_orange_square\"], 38, 40, 15, 0],\n    \"1f7e8\": [[\"\\uD83D\\uDFE8\"], \"\", \"\", [\"large_yellow_square\"], 38, 41, 15, 0],\n    \"1f7e9\": [[\"\\uD83D\\uDFE9\"], \"\", \"\", [\"large_green_square\"], 38, 42, 15, 0],\n    \"1f7ea\": [[\"\\uD83D\\uDFEA\"], \"\", \"\", [\"large_purple_square\"], 38, 43, 15, 0],\n    \"1f7eb\": [[\"\\uD83D\\uDFEB\"], \"\", \"\", [\"large_brown_square\"], 38, 44, 15, 0],\n    \"1f7f0\": [[\"\\uD83D\\uDFF0\"], \"\", \"\", [\"heavy_equals_sign\"], 38, 45, 15, 0],\n    \"1f90c\": [[\"\\uD83E\\uDD0C\"], \"\", \"\", [\"pinched_fingers\"], 38, 46, 15, 0],\n    \"1f90d\": [[\"\\uD83E\\uDD0D\"], \"\", \"\", [\"white_heart\"], 38, 52, 15, 0],\n    \"1f90e\": [[\"\\uD83E\\uDD0E\"], \"\", \"\", [\"brown_heart\"], 38, 53, 15, 0],\n    \"1f90f\": [[\"\\uD83E\\uDD0F\"], \"\", \"\", [\"pinching_hand\"], 38, 54, 15, 0],\n    \"1f910\": [[\"\\uD83E\\uDD10\"], \"\", \"\", [\"zipper_mouth_face\"], 38, 60, 15, 0],\n    \"1f911\": [[\"\\uD83E\\uDD11\"], \"\", \"\", [\"money_mouth_face\"], 39, 0, 15, 0],\n    \"1f912\": [[\"\\uD83E\\uDD12\"], \"\", \"\", [\"face_with_thermometer\"], 39, 1, 15, 0],\n    \"1f913\": [[\"\\uD83E\\uDD13\"], \"\", \"\", [\"nerd_face\"], 39, 2, 15, 0],\n    \"1f914\": [[\"\\uD83E\\uDD14\"], \"\", \"\", [\"thinking_face\"], 39, 3, 15, 0],\n    \"1f915\": [[\"\\uD83E\\uDD15\"], \"\", \"\", [\"face_with_head_bandage\"], 39, 4, 15, 0],\n    \"1f916\": [[\"\\uD83E\\uDD16\"], \"\", \"\", [\"robot_face\"], 39, 5, 15, 0],\n    \"1f917\": [[\"\\uD83E\\uDD17\"], \"\", \"\", [\"hugging_face\"], 39, 6, 15, 0],\n    \"1f918\": [[\"\\uD83E\\uDD18\"], \"\", \"\", [\"the_horns\", \"sign_of_the_horns\"], 39, 7, 15, 0],\n    \"1f919\": [[\"\\uD83E\\uDD19\"], \"\", \"\", [\"call_me_hand\"], 39, 13, 15, 0],\n    \"1f91a\": [[\"\\uD83E\\uDD1A\"], \"\", \"\", [\"raised_back_of_hand\"], 39, 19, 15, 0],\n    \"1f91b\": [[\"\\uD83E\\uDD1B\"], \"\", \"\", [\"left-facing_fist\"], 39, 25, 15, 0],\n    \"1f91c\": [[\"\\uD83E\\uDD1C\"], \"\", \"\", [\"right-facing_fist\"], 39, 31, 15, 0],\n    \"1f91d\": [[\"\\uD83E\\uDD1D\"], \"\", \"\", [\"handshake\"], 39, 37, 15, 0],\n    \"1f91e\": [[\"\\uD83E\\uDD1E\"], \"\", \"\", [\"crossed_fingers\", \"hand_with_index_and_middle_fingers_crossed\"], 40, 2, 15, 0],\n    \"1f91f\": [[\"\\uD83E\\uDD1F\"], \"\", \"\", [\"i_love_you_hand_sign\"], 40, 8, 15, 0],\n    \"1f920\": [[\"\\uD83E\\uDD20\"], \"\", \"\", [\"face_with_cowboy_hat\"], 40, 14, 15, 0],\n    \"1f921\": [[\"\\uD83E\\uDD21\"], \"\", \"\", [\"clown_face\"], 40, 15, 15, 0],\n    \"1f922\": [[\"\\uD83E\\uDD22\"], \"\", \"\", [\"nauseated_face\"], 40, 16, 15, 0],\n    \"1f923\": [[\"\\uD83E\\uDD23\"], \"\", \"\", [\"rolling_on_the_floor_laughing\"], 40, 17, 15, 0],\n    \"1f924\": [[\"\\uD83E\\uDD24\"], \"\", \"\", [\"drooling_face\"], 40, 18, 15, 0],\n    \"1f925\": [[\"\\uD83E\\uDD25\"], \"\", \"\", [\"lying_face\"], 40, 19, 15, 0],\n    \"1f926-200d-2640-fe0f\": [[\"\\uD83E\\uDD26\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDD26\\u200D\\u2640\"], \"\", \"\", [\"woman-facepalming\"], 40, 20, 15, 0],\n    \"1f926-200d-2642-fe0f\": [[\"\\uD83E\\uDD26\\u200D\\u2642\\uFE0F\", \"\\uD83E\\uDD26\\u200D\\u2642\"], \"\", \"\", [\"man-facepalming\"], 40, 26, 15, 0],\n    \"1f926\": [[\"\\uD83E\\uDD26\"], \"\", \"\", [\"face_palm\"], 40, 32, 15, 0],\n    \"1f927\": [[\"\\uD83E\\uDD27\"], \"\", \"\", [\"sneezing_face\"], 40, 38, 15, 0],\n    \"1f928\": [[\"\\uD83E\\uDD28\"], \"\", \"\", [\"face_with_raised_eyebrow\", \"face_with_one_eyebrow_raised\"], 40, 39, 15, 0],\n    \"1f929\": [[\"\\uD83E\\uDD29\"], \"\", \"\", [\"star-struck\", \"grinning_face_with_star_eyes\"], 40, 40, 15, 0],\n    \"1f92a\": [[\"\\uD83E\\uDD2A\"], \"\", \"\", [\"zany_face\", \"grinning_face_with_one_large_and_one_small_eye\"], 40, 41, 15, 0],\n    \"1f92b\": [[\"\\uD83E\\uDD2B\"], \"\", \"\", [\"shushing_face\", \"face_with_finger_covering_closed_lips\"], 40, 42, 15, 0],\n    \"1f92c\": [[\"\\uD83E\\uDD2C\"], \"\", \"\", [\"face_with_symbols_on_mouth\", \"serious_face_with_symbols_covering_mouth\"], 40, 43, 15, 0],\n    \"1f92d\": [[\"\\uD83E\\uDD2D\"], \"\", \"\", [\"face_with_hand_over_mouth\", \"smiling_face_with_smiling_eyes_and_hand_covering_mouth\"], 40, 44, 15, 0],\n    \"1f92e\": [[\"\\uD83E\\uDD2E\"], \"\", \"\", [\"face_vomiting\", \"face_with_open_mouth_vomiting\"], 40, 45, 15, 0],\n    \"1f92f\": [[\"\\uD83E\\uDD2F\"], \"\", \"\", [\"exploding_head\", \"shocked_face_with_exploding_head\"], 40, 46, 15, 0],\n    \"1f930\": [[\"\\uD83E\\uDD30\"], \"\", \"\", [\"pregnant_woman\"], 40, 47, 15, 0],\n    \"1f931\": [[\"\\uD83E\\uDD31\"], \"\", \"\", [\"breast-feeding\"], 40, 53, 15, 0],\n    \"1f932\": [[\"\\uD83E\\uDD32\"], \"\", \"\", [\"palms_up_together\"], 40, 59, 15, 0],\n    \"1f933\": [[\"\\uD83E\\uDD33\"], \"\", \"\", [\"selfie\"], 41, 4, 15, 0],\n    \"1f934\": [[\"\\uD83E\\uDD34\"], \"\", \"\", [\"prince\"], 41, 10, 15, 0],\n    \"1f935-200d-2640-fe0f\": [[\"\\uD83E\\uDD35\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDD35\\u200D\\u2640\"], \"\", \"\", [\"woman_in_tuxedo\"], 41, 16, 15, 0],\n    \"1f935-200d-2642-fe0f\": [[\"\\uD83E\\uDD35\\u200D\\u2642\\uFE0F\", \"\\uD83E\\uDD35\\u200D\\u2642\"], \"\", \"\", [\"man_in_tuxedo\"], 41, 22, 15, 0],\n    \"1f935\": [[\"\\uD83E\\uDD35\"], \"\", \"\", [\"person_in_tuxedo\"], 41, 28, 15, 0],\n    \"1f936\": [[\"\\uD83E\\uDD36\"], \"\", \"\", [\"mrs_claus\", \"mother_christmas\"], 41, 34, 15, 0],\n    \"1f937-200d-2640-fe0f\": [[\"\\uD83E\\uDD37\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDD37\\u200D\\u2640\"], \"\", \"\", [\"woman-shrugging\"], 41, 40, 15, 0],\n    \"1f937-200d-2642-fe0f\": [[\"\\uD83E\\uDD37\\u200D\\u2642\\uFE0F\", \"\\uD83E\\uDD37\\u200D\\u2642\"], \"\", \"\", [\"man-shrugging\"], 41, 46, 15, 0],\n    \"1f937\": [[\"\\uD83E\\uDD37\"], \"\", \"\", [\"shrug\"], 41, 52, 15, 0],\n    \"1f938-200d-2640-fe0f\": [[\"\\uD83E\\uDD38\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDD38\\u200D\\u2640\"], \"\", \"\", [\"woman-cartwheeling\"], 41, 58, 15, 0],\n    \"1f938-200d-2642-fe0f\": [[\"\\uD83E\\uDD38\\u200D\\u2642\\uFE0F\", \"\\uD83E\\uDD38\\u200D\\u2642\"], \"\", \"\", [\"man-cartwheeling\"], 42, 3, 15, 0],\n    \"1f938\": [[\"\\uD83E\\uDD38\"], \"\", \"\", [\"person_doing_cartwheel\"], 42, 9, 15, 0],\n    \"1f939-200d-2640-fe0f\": [[\"\\uD83E\\uDD39\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDD39\\u200D\\u2640\"], \"\", \"\", [\"woman-juggling\"], 42, 15, 15, 0],\n    \"1f939-200d-2642-fe0f\": [[\"\\uD83E\\uDD39\\u200D\\u2642\\uFE0F\", \"\\uD83E\\uDD39\\u200D\\u2642\"], \"\", \"\", [\"man-juggling\"], 42, 21, 15, 0],\n    \"1f939\": [[\"\\uD83E\\uDD39\"], \"\", \"\", [\"juggling\"], 42, 27, 15, 0],\n    \"1f93a\": [[\"\\uD83E\\uDD3A\"], \"\", \"\", [\"fencer\"], 42, 33, 15, 0],\n    \"1f93c-200d-2640-fe0f\": [[\"\\uD83E\\uDD3C\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDD3C\\u200D\\u2640\"], \"\", \"\", [\"woman-wrestling\"], 42, 34, 15, 0],\n    \"1f93c-200d-2642-fe0f\": [[\"\\uD83E\\uDD3C\\u200D\\u2642\\uFE0F\", \"\\uD83E\\uDD3C\\u200D\\u2642\"], \"\", \"\", [\"man-wrestling\"], 42, 35, 15, 0],\n    \"1f93c\": [[\"\\uD83E\\uDD3C\"], \"\", \"\", [\"wrestlers\"], 42, 36, 15, 0],\n    \"1f93d-200d-2640-fe0f\": [[\"\\uD83E\\uDD3D\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDD3D\\u200D\\u2640\"], \"\", \"\", [\"woman-playing-water-polo\"], 42, 37, 15, 0],\n    \"1f93d-200d-2642-fe0f\": [[\"\\uD83E\\uDD3D\\u200D\\u2642\\uFE0F\", \"\\uD83E\\uDD3D\\u200D\\u2642\"], \"\", \"\", [\"man-playing-water-polo\"], 42, 43, 15, 0],\n    \"1f93d\": [[\"\\uD83E\\uDD3D\"], \"\", \"\", [\"water_polo\"], 42, 49, 15, 0],\n    \"1f93e-200d-2640-fe0f\": [[\"\\uD83E\\uDD3E\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDD3E\\u200D\\u2640\"], \"\", \"\", [\"woman-playing-handball\"], 42, 55, 15, 0],\n    \"1f93e-200d-2642-fe0f\": [[\"\\uD83E\\uDD3E\\u200D\\u2642\\uFE0F\", \"\\uD83E\\uDD3E\\u200D\\u2642\"], \"\", \"\", [\"man-playing-handball\"], 43, 0, 15, 0],\n    \"1f93e\": [[\"\\uD83E\\uDD3E\"], \"\", \"\", [\"handball\"], 43, 6, 15, 0],\n    \"1f93f\": [[\"\\uD83E\\uDD3F\"], \"\", \"\", [\"diving_mask\"], 43, 12, 15, 0],\n    \"1f940\": [[\"\\uD83E\\uDD40\"], \"\", \"\", [\"wilted_flower\"], 43, 13, 15, 0],\n    \"1f941\": [[\"\\uD83E\\uDD41\"], \"\", \"\", [\"drum_with_drumsticks\"], 43, 14, 15, 0],\n    \"1f942\": [[\"\\uD83E\\uDD42\"], \"\", \"\", [\"clinking_glasses\"], 43, 15, 15, 0],\n    \"1f943\": [[\"\\uD83E\\uDD43\"], \"\", \"\", [\"tumbler_glass\"], 43, 16, 15, 0],\n    \"1f944\": [[\"\\uD83E\\uDD44\"], \"\", \"\", [\"spoon\"], 43, 17, 15, 0],\n    \"1f945\": [[\"\\uD83E\\uDD45\"], \"\", \"\", [\"goal_net\"], 43, 18, 15, 0],\n    \"1f947\": [[\"\\uD83E\\uDD47\"], \"\", \"\", [\"first_place_medal\"], 43, 19, 15, 0],\n    \"1f948\": [[\"\\uD83E\\uDD48\"], \"\", \"\", [\"second_place_medal\"], 43, 20, 15, 0],\n    \"1f949\": [[\"\\uD83E\\uDD49\"], \"\", \"\", [\"third_place_medal\"], 43, 21, 15, 0],\n    \"1f94a\": [[\"\\uD83E\\uDD4A\"], \"\", \"\", [\"boxing_glove\"], 43, 22, 15, 0],\n    \"1f94b\": [[\"\\uD83E\\uDD4B\"], \"\", \"\", [\"martial_arts_uniform\"], 43, 23, 15, 0],\n    \"1f94c\": [[\"\\uD83E\\uDD4C\"], \"\", \"\", [\"curling_stone\"], 43, 24, 15, 0],\n    \"1f94d\": [[\"\\uD83E\\uDD4D\"], \"\", \"\", [\"lacrosse\"], 43, 25, 15, 0],\n    \"1f94e\": [[\"\\uD83E\\uDD4E\"], \"\", \"\", [\"softball\"], 43, 26, 15, 0],\n    \"1f94f\": [[\"\\uD83E\\uDD4F\"], \"\", \"\", [\"flying_disc\"], 43, 27, 15, 0],\n    \"1f950\": [[\"\\uD83E\\uDD50\"], \"\", \"\", [\"croissant\"], 43, 28, 15, 0],\n    \"1f951\": [[\"\\uD83E\\uDD51\"], \"\", \"\", [\"avocado\"], 43, 29, 15, 0],\n    \"1f952\": [[\"\\uD83E\\uDD52\"], \"\", \"\", [\"cucumber\"], 43, 30, 15, 0],\n    \"1f953\": [[\"\\uD83E\\uDD53\"], \"\", \"\", [\"bacon\"], 43, 31, 15, 0],\n    \"1f954\": [[\"\\uD83E\\uDD54\"], \"\", \"\", [\"potato\"], 43, 32, 15, 0],\n    \"1f955\": [[\"\\uD83E\\uDD55\"], \"\", \"\", [\"carrot\"], 43, 33, 15, 0],\n    \"1f956\": [[\"\\uD83E\\uDD56\"], \"\", \"\", [\"baguette_bread\"], 43, 34, 15, 0],\n    \"1f957\": [[\"\\uD83E\\uDD57\"], \"\", \"\", [\"green_salad\"], 43, 35, 15, 0],\n    \"1f958\": [[\"\\uD83E\\uDD58\"], \"\", \"\", [\"shallow_pan_of_food\"], 43, 36, 15, 0],\n    \"1f959\": [[\"\\uD83E\\uDD59\"], \"\", \"\", [\"stuffed_flatbread\"], 43, 37, 15, 0],\n    \"1f95a\": [[\"\\uD83E\\uDD5A\"], \"\", \"\", [\"egg\"], 43, 38, 15, 0],\n    \"1f95b\": [[\"\\uD83E\\uDD5B\"], \"\", \"\", [\"glass_of_milk\"], 43, 39, 15, 0],\n    \"1f95c\": [[\"\\uD83E\\uDD5C\"], \"\", \"\", [\"peanuts\"], 43, 40, 15, 0],\n    \"1f95d\": [[\"\\uD83E\\uDD5D\"], \"\", \"\", [\"kiwifruit\"], 43, 41, 15, 0],\n    \"1f95e\": [[\"\\uD83E\\uDD5E\"], \"\", \"\", [\"pancakes\"], 43, 42, 15, 0],\n    \"1f95f\": [[\"\\uD83E\\uDD5F\"], \"\", \"\", [\"dumpling\"], 43, 43, 15, 0],\n    \"1f960\": [[\"\\uD83E\\uDD60\"], \"\", \"\", [\"fortune_cookie\"], 43, 44, 15, 0],\n    \"1f961\": [[\"\\uD83E\\uDD61\"], \"\", \"\", [\"takeout_box\"], 43, 45, 15, 0],\n    \"1f962\": [[\"\\uD83E\\uDD62\"], \"\", \"\", [\"chopsticks\"], 43, 46, 15, 0],\n    \"1f963\": [[\"\\uD83E\\uDD63\"], \"\", \"\", [\"bowl_with_spoon\"], 43, 47, 15, 0],\n    \"1f964\": [[\"\\uD83E\\uDD64\"], \"\", \"\", [\"cup_with_straw\"], 43, 48, 15, 0],\n    \"1f965\": [[\"\\uD83E\\uDD65\"], \"\", \"\", [\"coconut\"], 43, 49, 15, 0],\n    \"1f966\": [[\"\\uD83E\\uDD66\"], \"\", \"\", [\"broccoli\"], 43, 50, 15, 0],\n    \"1f967\": [[\"\\uD83E\\uDD67\"], \"\", \"\", [\"pie\"], 43, 51, 15, 0],\n    \"1f968\": [[\"\\uD83E\\uDD68\"], \"\", \"\", [\"pretzel\"], 43, 52, 15, 0],\n    \"1f969\": [[\"\\uD83E\\uDD69\"], \"\", \"\", [\"cut_of_meat\"], 43, 53, 15, 0],\n    \"1f96a\": [[\"\\uD83E\\uDD6A\"], \"\", \"\", [\"sandwich\"], 43, 54, 15, 0],\n    \"1f96b\": [[\"\\uD83E\\uDD6B\"], \"\", \"\", [\"canned_food\"], 43, 55, 15, 0],\n    \"1f96c\": [[\"\\uD83E\\uDD6C\"], \"\", \"\", [\"leafy_green\"], 43, 56, 15, 0],\n    \"1f96d\": [[\"\\uD83E\\uDD6D\"], \"\", \"\", [\"mango\"], 43, 57, 15, 0],\n    \"1f96e\": [[\"\\uD83E\\uDD6E\"], \"\", \"\", [\"moon_cake\"], 43, 58, 15, 0],\n    \"1f96f\": [[\"\\uD83E\\uDD6F\"], \"\", \"\", [\"bagel\"], 43, 59, 15, 0],\n    \"1f970\": [[\"\\uD83E\\uDD70\"], \"\", \"\", [\"smiling_face_with_3_hearts\"], 43, 60, 15, 0],\n    \"1f971\": [[\"\\uD83E\\uDD71\"], \"\", \"\", [\"yawning_face\"], 44, 0, 15, 0],\n    \"1f972\": [[\"\\uD83E\\uDD72\"], \"\", \"\", [\"smiling_face_with_tear\"], 44, 1, 15, 0],\n    \"1f973\": [[\"\\uD83E\\uDD73\"], \"\", \"\", [\"partying_face\"], 44, 2, 15, 0],\n    \"1f974\": [[\"\\uD83E\\uDD74\"], \"\", \"\", [\"woozy_face\"], 44, 3, 15, 0],\n    \"1f975\": [[\"\\uD83E\\uDD75\"], \"\", \"\", [\"hot_face\"], 44, 4, 15, 0],\n    \"1f976\": [[\"\\uD83E\\uDD76\"], \"\", \"\", [\"cold_face\"], 44, 5, 15, 0],\n    \"1f977\": [[\"\\uD83E\\uDD77\"], \"\", \"\", [\"ninja\"], 44, 6, 15, 0],\n    \"1f978\": [[\"\\uD83E\\uDD78\"], \"\", \"\", [\"disguised_face\"], 44, 12, 15, 0],\n    \"1f979\": [[\"\\uD83E\\uDD79\"], \"\", \"\", [\"face_holding_back_tears\"], 44, 13, 15, 0],\n    \"1f97a\": [[\"\\uD83E\\uDD7A\"], \"\", \"\", [\"pleading_face\"], 44, 14, 15, 0],\n    \"1f97b\": [[\"\\uD83E\\uDD7B\"], \"\", \"\", [\"sari\"], 44, 15, 15, 0],\n    \"1f97c\": [[\"\\uD83E\\uDD7C\"], \"\", \"\", [\"lab_coat\"], 44, 16, 15, 0],\n    \"1f97d\": [[\"\\uD83E\\uDD7D\"], \"\", \"\", [\"goggles\"], 44, 17, 15, 0],\n    \"1f97e\": [[\"\\uD83E\\uDD7E\"], \"\", \"\", [\"hiking_boot\"], 44, 18, 15, 0],\n    \"1f97f\": [[\"\\uD83E\\uDD7F\"], \"\", \"\", [\"womans_flat_shoe\"], 44, 19, 15, 0],\n    \"1f980\": [[\"\\uD83E\\uDD80\"], \"\", \"\", [\"crab\"], 44, 20, 15, 0],\n    \"1f981\": [[\"\\uD83E\\uDD81\"], \"\", \"\", [\"lion_face\"], 44, 21, 15, 0],\n    \"1f982\": [[\"\\uD83E\\uDD82\"], \"\", \"\", [\"scorpion\"], 44, 22, 15, 0],\n    \"1f983\": [[\"\\uD83E\\uDD83\"], \"\", \"\", [\"turkey\"], 44, 23, 15, 0],\n    \"1f984\": [[\"\\uD83E\\uDD84\"], \"\", \"\", [\"unicorn_face\"], 44, 24, 15, 0],\n    \"1f985\": [[\"\\uD83E\\uDD85\"], \"\", \"\", [\"eagle\"], 44, 25, 15, 0],\n    \"1f986\": [[\"\\uD83E\\uDD86\"], \"\", \"\", [\"duck\"], 44, 26, 15, 0],\n    \"1f987\": [[\"\\uD83E\\uDD87\"], \"\", \"\", [\"bat\"], 44, 27, 15, 0],\n    \"1f988\": [[\"\\uD83E\\uDD88\"], \"\", \"\", [\"shark\"], 44, 28, 15, 0],\n    \"1f989\": [[\"\\uD83E\\uDD89\"], \"\", \"\", [\"owl\"], 44, 29, 15, 0],\n    \"1f98a\": [[\"\\uD83E\\uDD8A\"], \"\", \"\", [\"fox_face\"], 44, 30, 15, 0],\n    \"1f98b\": [[\"\\uD83E\\uDD8B\"], \"\", \"\", [\"butterfly\"], 44, 31, 15, 0],\n    \"1f98c\": [[\"\\uD83E\\uDD8C\"], \"\", \"\", [\"deer\"], 44, 32, 15, 0],\n    \"1f98d\": [[\"\\uD83E\\uDD8D\"], \"\", \"\", [\"gorilla\"], 44, 33, 15, 0],\n    \"1f98e\": [[\"\\uD83E\\uDD8E\"], \"\", \"\", [\"lizard\"], 44, 34, 15, 0],\n    \"1f98f\": [[\"\\uD83E\\uDD8F\"], \"\", \"\", [\"rhinoceros\"], 44, 35, 15, 0],\n    \"1f990\": [[\"\\uD83E\\uDD90\"], \"\", \"\", [\"shrimp\"], 44, 36, 15, 0],\n    \"1f991\": [[\"\\uD83E\\uDD91\"], \"\", \"\", [\"squid\"], 44, 37, 15, 0],\n    \"1f992\": [[\"\\uD83E\\uDD92\"], \"\", \"\", [\"giraffe_face\"], 44, 38, 15, 0],\n    \"1f993\": [[\"\\uD83E\\uDD93\"], \"\", \"\", [\"zebra_face\"], 44, 39, 15, 0],\n    \"1f994\": [[\"\\uD83E\\uDD94\"], \"\", \"\", [\"hedgehog\"], 44, 40, 15, 0],\n    \"1f995\": [[\"\\uD83E\\uDD95\"], \"\", \"\", [\"sauropod\"], 44, 41, 15, 0],\n    \"1f996\": [[\"\\uD83E\\uDD96\"], \"\", \"\", [\"t-rex\"], 44, 42, 15, 0],\n    \"1f997\": [[\"\\uD83E\\uDD97\"], \"\", \"\", [\"cricket\"], 44, 43, 15, 0],\n    \"1f998\": [[\"\\uD83E\\uDD98\"], \"\", \"\", [\"kangaroo\"], 44, 44, 15, 0],\n    \"1f999\": [[\"\\uD83E\\uDD99\"], \"\", \"\", [\"llama\"], 44, 45, 15, 0],\n    \"1f99a\": [[\"\\uD83E\\uDD9A\"], \"\", \"\", [\"peacock\"], 44, 46, 15, 0],\n    \"1f99b\": [[\"\\uD83E\\uDD9B\"], \"\", \"\", [\"hippopotamus\"], 44, 47, 15, 0],\n    \"1f99c\": [[\"\\uD83E\\uDD9C\"], \"\", \"\", [\"parrot\"], 44, 48, 15, 0],\n    \"1f99d\": [[\"\\uD83E\\uDD9D\"], \"\", \"\", [\"raccoon\"], 44, 49, 15, 0],\n    \"1f99e\": [[\"\\uD83E\\uDD9E\"], \"\", \"\", [\"lobster\"], 44, 50, 15, 0],\n    \"1f99f\": [[\"\\uD83E\\uDD9F\"], \"\", \"\", [\"mosquito\"], 44, 51, 15, 0],\n    \"1f9a0\": [[\"\\uD83E\\uDDA0\"], \"\", \"\", [\"microbe\"], 44, 52, 15, 0],\n    \"1f9a1\": [[\"\\uD83E\\uDDA1\"], \"\", \"\", [\"badger\"], 44, 53, 15, 0],\n    \"1f9a2\": [[\"\\uD83E\\uDDA2\"], \"\", \"\", [\"swan\"], 44, 54, 15, 0],\n    \"1f9a3\": [[\"\\uD83E\\uDDA3\"], \"\", \"\", [\"mammoth\"], 44, 55, 15, 0],\n    \"1f9a4\": [[\"\\uD83E\\uDDA4\"], \"\", \"\", [\"dodo\"], 44, 56, 15, 0],\n    \"1f9a5\": [[\"\\uD83E\\uDDA5\"], \"\", \"\", [\"sloth\"], 44, 57, 15, 0],\n    \"1f9a6\": [[\"\\uD83E\\uDDA6\"], \"\", \"\", [\"otter\"], 44, 58, 15, 0],\n    \"1f9a7\": [[\"\\uD83E\\uDDA7\"], \"\", \"\", [\"orangutan\"], 44, 59, 15, 0],\n    \"1f9a8\": [[\"\\uD83E\\uDDA8\"], \"\", \"\", [\"skunk\"], 44, 60, 15, 0],\n    \"1f9a9\": [[\"\\uD83E\\uDDA9\"], \"\", \"\", [\"flamingo\"], 45, 0, 15, 0],\n    \"1f9aa\": [[\"\\uD83E\\uDDAA\"], \"\", \"\", [\"oyster\"], 45, 1, 15, 0],\n    \"1f9ab\": [[\"\\uD83E\\uDDAB\"], \"\", \"\", [\"beaver\"], 45, 2, 15, 0],\n    \"1f9ac\": [[\"\\uD83E\\uDDAC\"], \"\", \"\", [\"bison\"], 45, 3, 15, 0],\n    \"1f9ad\": [[\"\\uD83E\\uDDAD\"], \"\", \"\", [\"seal\"], 45, 4, 15, 0],\n    \"1f9ae\": [[\"\\uD83E\\uDDAE\"], \"\", \"\", [\"guide_dog\"], 45, 5, 15, 0],\n    \"1f9af\": [[\"\\uD83E\\uDDAF\"], \"\", \"\", [\"probing_cane\"], 45, 6, 15, 0],\n    \"1f9b4\": [[\"\\uD83E\\uDDB4\"], \"\", \"\", [\"bone\"], 45, 7, 15, 0],\n    \"1f9b5\": [[\"\\uD83E\\uDDB5\"], \"\", \"\", [\"leg\"], 45, 8, 15, 0],\n    \"1f9b6\": [[\"\\uD83E\\uDDB6\"], \"\", \"\", [\"foot\"], 45, 14, 15, 0],\n    \"1f9b7\": [[\"\\uD83E\\uDDB7\"], \"\", \"\", [\"tooth\"], 45, 20, 15, 0],\n    \"1f9b8-200d-2640-fe0f\": [[\"\\uD83E\\uDDB8\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDDB8\\u200D\\u2640\"], \"\", \"\", [\"female_superhero\"], 45, 21, 15, 0],\n    \"1f9b8-200d-2642-fe0f\": [[\"\\uD83E\\uDDB8\\u200D\\u2642\\uFE0F\", \"\\uD83E\\uDDB8\\u200D\\u2642\"], \"\", \"\", [\"male_superhero\"], 45, 27, 15, 0],\n    \"1f9b8\": [[\"\\uD83E\\uDDB8\"], \"\", \"\", [\"superhero\"], 45, 33, 15, 0],\n    \"1f9b9-200d-2640-fe0f\": [[\"\\uD83E\\uDDB9\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDDB9\\u200D\\u2640\"], \"\", \"\", [\"female_supervillain\"], 45, 39, 15, 0],\n    \"1f9b9-200d-2642-fe0f\": [[\"\\uD83E\\uDDB9\\u200D\\u2642\\uFE0F\", \"\\uD83E\\uDDB9\\u200D\\u2642\"], \"\", \"\", [\"male_supervillain\"], 45, 45, 15, 0],\n    \"1f9b9\": [[\"\\uD83E\\uDDB9\"], \"\", \"\", [\"supervillain\"], 45, 51, 15, 0],\n    \"1f9ba\": [[\"\\uD83E\\uDDBA\"], \"\", \"\", [\"safety_vest\"], 45, 57, 15, 0],\n    \"1f9bb\": [[\"\\uD83E\\uDDBB\"], \"\", \"\", [\"ear_with_hearing_aid\"], 45, 58, 15, 0],\n    \"1f9bc\": [[\"\\uD83E\\uDDBC\"], \"\", \"\", [\"motorized_wheelchair\"], 46, 3, 15, 0],\n    \"1f9bd\": [[\"\\uD83E\\uDDBD\"], \"\", \"\", [\"manual_wheelchair\"], 46, 4, 15, 0],\n    \"1f9be\": [[\"\\uD83E\\uDDBE\"], \"\", \"\", [\"mechanical_arm\"], 46, 5, 15, 0],\n    \"1f9bf\": [[\"\\uD83E\\uDDBF\"], \"\", \"\", [\"mechanical_leg\"], 46, 6, 15, 0],\n    \"1f9c0\": [[\"\\uD83E\\uDDC0\"], \"\", \"\", [\"cheese_wedge\"], 46, 7, 15, 0],\n    \"1f9c1\": [[\"\\uD83E\\uDDC1\"], \"\", \"\", [\"cupcake\"], 46, 8, 15, 0],\n    \"1f9c2\": [[\"\\uD83E\\uDDC2\"], \"\", \"\", [\"salt\"], 46, 9, 15, 0],\n    \"1f9c3\": [[\"\\uD83E\\uDDC3\"], \"\", \"\", [\"beverage_box\"], 46, 10, 15, 0],\n    \"1f9c4\": [[\"\\uD83E\\uDDC4\"], \"\", \"\", [\"garlic\"], 46, 11, 15, 0],\n    \"1f9c5\": [[\"\\uD83E\\uDDC5\"], \"\", \"\", [\"onion\"], 46, 12, 15, 0],\n    \"1f9c6\": [[\"\\uD83E\\uDDC6\"], \"\", \"\", [\"falafel\"], 46, 13, 15, 0],\n    \"1f9c7\": [[\"\\uD83E\\uDDC7\"], \"\", \"\", [\"waffle\"], 46, 14, 15, 0],\n    \"1f9c8\": [[\"\\uD83E\\uDDC8\"], \"\", \"\", [\"butter\"], 46, 15, 15, 0],\n    \"1f9c9\": [[\"\\uD83E\\uDDC9\"], \"\", \"\", [\"mate_drink\"], 46, 16, 15, 0],\n    \"1f9ca\": [[\"\\uD83E\\uDDCA\"], \"\", \"\", [\"ice_cube\"], 46, 17, 15, 0],\n    \"1f9cb\": [[\"\\uD83E\\uDDCB\"], \"\", \"\", [\"bubble_tea\"], 46, 18, 15, 0],\n    \"1f9cc\": [[\"\\uD83E\\uDDCC\"], \"\", \"\", [\"troll\"], 46, 19, 15, 0],\n    \"1f9cd-200d-2640-fe0f\": [[\"\\uD83E\\uDDCD\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDDCD\\u200D\\u2640\"], \"\", \"\", [\"woman_standing\"], 46, 20, 15, 0],\n    \"1f9cd-200d-2642-fe0f\": [[\"\\uD83E\\uDDCD\\u200D\\u2642\\uFE0F\", \"\\uD83E\\uDDCD\\u200D\\u2642\"], \"\", \"\", [\"man_standing\"], 46, 26, 15, 0],\n    \"1f9cd\": [[\"\\uD83E\\uDDCD\"], \"\", \"\", [\"standing_person\"], 46, 32, 15, 0],\n    \"1f9ce-200d-2640-fe0f\": [[\"\\uD83E\\uDDCE\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDDCE\\u200D\\u2640\"], \"\", \"\", [\"woman_kneeling\"], 46, 38, 15, 0],\n    \"1f9ce-200d-2642-fe0f\": [[\"\\uD83E\\uDDCE\\u200D\\u2642\\uFE0F\", \"\\uD83E\\uDDCE\\u200D\\u2642\"], \"\", \"\", [\"man_kneeling\"], 46, 44, 15, 0],\n    \"1f9ce\": [[\"\\uD83E\\uDDCE\"], \"\", \"\", [\"kneeling_person\"], 46, 50, 15, 0],\n    \"1f9cf-200d-2640-fe0f\": [[\"\\uD83E\\uDDCF\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDDCF\\u200D\\u2640\"], \"\", \"\", [\"deaf_woman\"], 46, 56, 15, 0],\n    \"1f9cf-200d-2642-fe0f\": [[\"\\uD83E\\uDDCF\\u200D\\u2642\\uFE0F\", \"\\uD83E\\uDDCF\\u200D\\u2642\"], \"\", \"\", [\"deaf_man\"], 47, 1, 15, 0],\n    \"1f9cf\": [[\"\\uD83E\\uDDCF\"], \"\", \"\", [\"deaf_person\"], 47, 7, 15, 0],\n    \"1f9d0\": [[\"\\uD83E\\uDDD0\"], \"\", \"\", [\"face_with_monocle\"], 47, 13, 15, 0],\n    \"1f9d1-200d-1f33e\": [[\"\\uD83E\\uDDD1\\u200D\\uD83C\\uDF3E\"], \"\", \"\", [\"farmer\"], 47, 14, 15, 0],\n    \"1f9d1-200d-1f373\": [[\"\\uD83E\\uDDD1\\u200D\\uD83C\\uDF73\"], \"\", \"\", [\"cook\"], 47, 20, 15, 0],\n    \"1f9d1-200d-1f37c\": [[\"\\uD83E\\uDDD1\\u200D\\uD83C\\uDF7C\"], \"\", \"\", [\"person_feeding_baby\"], 47, 26, 15, 0],\n    \"1f9d1-200d-1f384\": [[\"\\uD83E\\uDDD1\\u200D\\uD83C\\uDF84\"], \"\", \"\", [\"mx_claus\"], 47, 32, 15, 0],\n    \"1f9d1-200d-1f393\": [[\"\\uD83E\\uDDD1\\u200D\\uD83C\\uDF93\"], \"\", \"\", [\"student\"], 47, 38, 15, 0],\n    \"1f9d1-200d-1f3a4\": [[\"\\uD83E\\uDDD1\\u200D\\uD83C\\uDFA4\"], \"\", \"\", [\"singer\"], 47, 44, 15, 0],\n    \"1f9d1-200d-1f3a8\": [[\"\\uD83E\\uDDD1\\u200D\\uD83C\\uDFA8\"], \"\", \"\", [\"artist\"], 47, 50, 15, 0],\n    \"1f9d1-200d-1f3eb\": [[\"\\uD83E\\uDDD1\\u200D\\uD83C\\uDFEB\"], \"\", \"\", [\"teacher\"], 47, 56, 15, 0],\n    \"1f9d1-200d-1f3ed\": [[\"\\uD83E\\uDDD1\\u200D\\uD83C\\uDFED\"], \"\", \"\", [\"factory_worker\"], 48, 1, 15, 0],\n    \"1f9d1-200d-1f4bb\": [[\"\\uD83E\\uDDD1\\u200D\\uD83D\\uDCBB\"], \"\", \"\", [\"technologist\"], 48, 7, 15, 0],\n    \"1f9d1-200d-1f4bc\": [[\"\\uD83E\\uDDD1\\u200D\\uD83D\\uDCBC\"], \"\", \"\", [\"office_worker\"], 48, 13, 15, 0],\n    \"1f9d1-200d-1f527\": [[\"\\uD83E\\uDDD1\\u200D\\uD83D\\uDD27\"], \"\", \"\", [\"mechanic\"], 48, 19, 15, 0],\n    \"1f9d1-200d-1f52c\": [[\"\\uD83E\\uDDD1\\u200D\\uD83D\\uDD2C\"], \"\", \"\", [\"scientist\"], 48, 25, 15, 0],\n    \"1f9d1-200d-1f680\": [[\"\\uD83E\\uDDD1\\u200D\\uD83D\\uDE80\"], \"\", \"\", [\"astronaut\"], 48, 31, 15, 0],\n    \"1f9d1-200d-1f692\": [[\"\\uD83E\\uDDD1\\u200D\\uD83D\\uDE92\"], \"\", \"\", [\"firefighter\"], 48, 37, 15, 0],\n    \"1f9d1-200d-1f91d-200d-1f9d1\": [[\"\\uD83E\\uDDD1\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1\"], \"\", \"\", [\"people_holding_hands\"], 48, 43, 15, 0],\n    \"1f9d1-200d-1f9af\": [[\"\\uD83E\\uDDD1\\u200D\\uD83E\\uDDAF\"], \"\", \"\", [\"person_with_probing_cane\"], 49, 8, 15, 0],\n    \"1f9d1-200d-1f9b0\": [[\"\\uD83E\\uDDD1\\u200D\\uD83E\\uDDB0\"], \"\", \"\", [\"red_haired_person\"], 49, 14, 15, 0],\n    \"1f9d1-200d-1f9b1\": [[\"\\uD83E\\uDDD1\\u200D\\uD83E\\uDDB1\"], \"\", \"\", [\"curly_haired_person\"], 49, 20, 15, 0],\n    \"1f9d1-200d-1f9b2\": [[\"\\uD83E\\uDDD1\\u200D\\uD83E\\uDDB2\"], \"\", \"\", [\"bald_person\"], 49, 26, 15, 0],\n    \"1f9d1-200d-1f9b3\": [[\"\\uD83E\\uDDD1\\u200D\\uD83E\\uDDB3\"], \"\", \"\", [\"white_haired_person\"], 49, 32, 15, 0],\n    \"1f9d1-200d-1f9bc\": [[\"\\uD83E\\uDDD1\\u200D\\uD83E\\uDDBC\"], \"\", \"\", [\"person_in_motorized_wheelchair\"], 49, 38, 15, 0],\n    \"1f9d1-200d-1f9bd\": [[\"\\uD83E\\uDDD1\\u200D\\uD83E\\uDDBD\"], \"\", \"\", [\"person_in_manual_wheelchair\"], 49, 44, 15, 0],\n    \"1f9d1-200d-2695-fe0f\": [[\"\\uD83E\\uDDD1\\u200D\\u2695\\uFE0F\", \"\\uD83E\\uDDD1\\u200D\\u2695\"], \"\", \"\", [\"health_worker\"], 49, 50, 15, 0],\n    \"1f9d1-200d-2696-fe0f\": [[\"\\uD83E\\uDDD1\\u200D\\u2696\\uFE0F\", \"\\uD83E\\uDDD1\\u200D\\u2696\"], \"\", \"\", [\"judge\"], 49, 56, 15, 0],\n    \"1f9d1-200d-2708-fe0f\": [[\"\\uD83E\\uDDD1\\u200D\\u2708\\uFE0F\", \"\\uD83E\\uDDD1\\u200D\\u2708\"], \"\", \"\", [\"pilot\"], 50, 1, 15, 0],\n    \"1f9d1\": [[\"\\uD83E\\uDDD1\"], \"\", \"\", [\"adult\"], 50, 7, 15, 0],\n    \"1f9d2\": [[\"\\uD83E\\uDDD2\"], \"\", \"\", [\"child\"], 50, 13, 15, 0],\n    \"1f9d3\": [[\"\\uD83E\\uDDD3\"], \"\", \"\", [\"older_adult\"], 50, 19, 15, 0],\n    \"1f9d4-200d-2640-fe0f\": [[\"\\uD83E\\uDDD4\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDDD4\\u200D\\u2640\"], \"\", \"\", [\"woman_with_beard\"], 50, 25, 15, 0],\n    \"1f9d4-200d-2642-fe0f\": [[\"\\uD83E\\uDDD4\\u200D\\u2642\\uFE0F\", \"\\uD83E\\uDDD4\\u200D\\u2642\"], \"\", \"\", [\"man_with_beard\"], 50, 31, 15, 0],\n    \"1f9d4\": [[\"\\uD83E\\uDDD4\"], \"\", \"\", [\"bearded_person\"], 50, 37, 15, 0],\n    \"1f9d5\": [[\"\\uD83E\\uDDD5\"], \"\", \"\", [\"person_with_headscarf\"], 50, 43, 15, 0],\n    \"1f9d6-200d-2640-fe0f\": [[\"\\uD83E\\uDDD6\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDDD6\\u200D\\u2640\"], \"\", \"\", [\"woman_in_steamy_room\"], 50, 49, 15, 0],\n    \"1f9d6-200d-2642-fe0f\": [[\"\\uD83E\\uDDD6\\u200D\\u2642\\uFE0F\", \"\\uD83E\\uDDD6\\u200D\\u2642\", \"\\uD83E\\uDDD6\"], \"\", \"\", [\"man_in_steamy_room\", \"person_in_steamy_room\"], 50, 55, 15, 0],\n    \"1f9d7-200d-2640-fe0f\": [[\"\\uD83E\\uDDD7\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDDD7\\u200D\\u2640\", \"\\uD83E\\uDDD7\"], \"\", \"\", [\"woman_climbing\", \"person_climbing\"], 51, 6, 15, 0],\n    \"1f9d7-200d-2642-fe0f\": [[\"\\uD83E\\uDDD7\\u200D\\u2642\\uFE0F\", \"\\uD83E\\uDDD7\\u200D\\u2642\"], \"\", \"\", [\"man_climbing\"], 51, 12, 15, 0],\n    \"1f9d8-200d-2640-fe0f\": [[\"\\uD83E\\uDDD8\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDDD8\\u200D\\u2640\", \"\\uD83E\\uDDD8\"], \"\", \"\", [\"woman_in_lotus_position\", \"person_in_lotus_position\"], 51, 24, 15, 0],\n    \"1f9d8-200d-2642-fe0f\": [[\"\\uD83E\\uDDD8\\u200D\\u2642\\uFE0F\", \"\\uD83E\\uDDD8\\u200D\\u2642\"], \"\", \"\", [\"man_in_lotus_position\"], 51, 30, 15, 0],\n    \"1f9d9-200d-2640-fe0f\": [[\"\\uD83E\\uDDD9\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDDD9\\u200D\\u2640\", \"\\uD83E\\uDDD9\"], \"\", \"\", [\"female_mage\", \"mage\"], 51, 42, 15, 0],\n    \"1f9d9-200d-2642-fe0f\": [[\"\\uD83E\\uDDD9\\u200D\\u2642\\uFE0F\", \"\\uD83E\\uDDD9\\u200D\\u2642\"], \"\", \"\", [\"male_mage\"], 51, 48, 15, 0],\n    \"1f9da-200d-2640-fe0f\": [[\"\\uD83E\\uDDDA\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDDDA\\u200D\\u2640\", \"\\uD83E\\uDDDA\"], \"\", \"\", [\"female_fairy\", \"fairy\"], 51, 60, 15, 0],\n    \"1f9da-200d-2642-fe0f\": [[\"\\uD83E\\uDDDA\\u200D\\u2642\\uFE0F\", \"\\uD83E\\uDDDA\\u200D\\u2642\"], \"\", \"\", [\"male_fairy\"], 52, 5, 15, 0],\n    \"1f9db-200d-2640-fe0f\": [[\"\\uD83E\\uDDDB\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDDDB\\u200D\\u2640\", \"\\uD83E\\uDDDB\"], \"\", \"\", [\"female_vampire\", \"vampire\"], 52, 17, 15, 0],\n    \"1f9db-200d-2642-fe0f\": [[\"\\uD83E\\uDDDB\\u200D\\u2642\\uFE0F\", \"\\uD83E\\uDDDB\\u200D\\u2642\"], \"\", \"\", [\"male_vampire\"], 52, 23, 15, 0],\n    \"1f9dc-200d-2640-fe0f\": [[\"\\uD83E\\uDDDC\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDDDC\\u200D\\u2640\"], \"\", \"\", [\"mermaid\"], 52, 35, 15, 0],\n    \"1f9dc-200d-2642-fe0f\": [[\"\\uD83E\\uDDDC\\u200D\\u2642\\uFE0F\", \"\\uD83E\\uDDDC\\u200D\\u2642\", \"\\uD83E\\uDDDC\"], \"\", \"\", [\"merman\", \"merperson\"], 52, 41, 15, 0],\n    \"1f9dd-200d-2640-fe0f\": [[\"\\uD83E\\uDDDD\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDDDD\\u200D\\u2640\"], \"\", \"\", [\"female_elf\"], 52, 53, 15, 0],\n    \"1f9dd-200d-2642-fe0f\": [[\"\\uD83E\\uDDDD\\u200D\\u2642\\uFE0F\", \"\\uD83E\\uDDDD\\u200D\\u2642\", \"\\uD83E\\uDDDD\"], \"\", \"\", [\"male_elf\", \"elf\"], 52, 59, 15, 0],\n    \"1f9de-200d-2640-fe0f\": [[\"\\uD83E\\uDDDE\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDDDE\\u200D\\u2640\"], \"\", \"\", [\"female_genie\"], 53, 10, 15, 0],\n    \"1f9de-200d-2642-fe0f\": [[\"\\uD83E\\uDDDE\\u200D\\u2642\\uFE0F\", \"\\uD83E\\uDDDE\\u200D\\u2642\", \"\\uD83E\\uDDDE\"], \"\", \"\", [\"male_genie\", \"genie\"], 53, 11, 15, 0],\n    \"1f9df-200d-2640-fe0f\": [[\"\\uD83E\\uDDDF\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDDDF\\u200D\\u2640\"], \"\", \"\", [\"female_zombie\"], 53, 13, 15, 0],\n    \"1f9df-200d-2642-fe0f\": [[\"\\uD83E\\uDDDF\\u200D\\u2642\\uFE0F\", \"\\uD83E\\uDDDF\\u200D\\u2642\", \"\\uD83E\\uDDDF\"], \"\", \"\", [\"male_zombie\", \"zombie\"], 53, 14, 15, 0],\n    \"1f9e0\": [[\"\\uD83E\\uDDE0\"], \"\", \"\", [\"brain\"], 53, 16, 15, 0],\n    \"1f9e1\": [[\"\\uD83E\\uDDE1\"], \"\", \"\", [\"orange_heart\"], 53, 17, 15, 0],\n    \"1f9e2\": [[\"\\uD83E\\uDDE2\"], \"\", \"\", [\"billed_cap\"], 53, 18, 15, 0],\n    \"1f9e3\": [[\"\\uD83E\\uDDE3\"], \"\", \"\", [\"scarf\"], 53, 19, 15, 0],\n    \"1f9e4\": [[\"\\uD83E\\uDDE4\"], \"\", \"\", [\"gloves\"], 53, 20, 15, 0],\n    \"1f9e5\": [[\"\\uD83E\\uDDE5\"], \"\", \"\", [\"coat\"], 53, 21, 15, 0],\n    \"1f9e6\": [[\"\\uD83E\\uDDE6\"], \"\", \"\", [\"socks\"], 53, 22, 15, 0],\n    \"1f9e7\": [[\"\\uD83E\\uDDE7\"], \"\", \"\", [\"red_envelope\"], 53, 23, 15, 0],\n    \"1f9e8\": [[\"\\uD83E\\uDDE8\"], \"\", \"\", [\"firecracker\"], 53, 24, 15, 0],\n    \"1f9e9\": [[\"\\uD83E\\uDDE9\"], \"\", \"\", [\"jigsaw\"], 53, 25, 15, 0],\n    \"1f9ea\": [[\"\\uD83E\\uDDEA\"], \"\", \"\", [\"test_tube\"], 53, 26, 15, 0],\n    \"1f9eb\": [[\"\\uD83E\\uDDEB\"], \"\", \"\", [\"petri_dish\"], 53, 27, 15, 0],\n    \"1f9ec\": [[\"\\uD83E\\uDDEC\"], \"\", \"\", [\"dna\"], 53, 28, 15, 0],\n    \"1f9ed\": [[\"\\uD83E\\uDDED\"], \"\", \"\", [\"compass\"], 53, 29, 15, 0],\n    \"1f9ee\": [[\"\\uD83E\\uDDEE\"], \"\", \"\", [\"abacus\"], 53, 30, 15, 0],\n    \"1f9ef\": [[\"\\uD83E\\uDDEF\"], \"\", \"\", [\"fire_extinguisher\"], 53, 31, 15, 0],\n    \"1f9f0\": [[\"\\uD83E\\uDDF0\"], \"\", \"\", [\"toolbox\"], 53, 32, 15, 0],\n    \"1f9f1\": [[\"\\uD83E\\uDDF1\"], \"\", \"\", [\"bricks\"], 53, 33, 15, 0],\n    \"1f9f2\": [[\"\\uD83E\\uDDF2\"], \"\", \"\", [\"magnet\"], 53, 34, 15, 0],\n    \"1f9f3\": [[\"\\uD83E\\uDDF3\"], \"\", \"\", [\"luggage\"], 53, 35, 15, 0],\n    \"1f9f4\": [[\"\\uD83E\\uDDF4\"], \"\", \"\", [\"lotion_bottle\"], 53, 36, 15, 0],\n    \"1f9f5\": [[\"\\uD83E\\uDDF5\"], \"\", \"\", [\"thread\"], 53, 37, 15, 0],\n    \"1f9f6\": [[\"\\uD83E\\uDDF6\"], \"\", \"\", [\"yarn\"], 53, 38, 15, 0],\n    \"1f9f7\": [[\"\\uD83E\\uDDF7\"], \"\", \"\", [\"safety_pin\"], 53, 39, 15, 0],\n    \"1f9f8\": [[\"\\uD83E\\uDDF8\"], \"\", \"\", [\"teddy_bear\"], 53, 40, 15, 0],\n    \"1f9f9\": [[\"\\uD83E\\uDDF9\"], \"\", \"\", [\"broom\"], 53, 41, 15, 0],\n    \"1f9fa\": [[\"\\uD83E\\uDDFA\"], \"\", \"\", [\"basket\"], 53, 42, 15, 0],\n    \"1f9fb\": [[\"\\uD83E\\uDDFB\"], \"\", \"\", [\"roll_of_paper\"], 53, 43, 15, 0],\n    \"1f9fc\": [[\"\\uD83E\\uDDFC\"], \"\", \"\", [\"soap\"], 53, 44, 15, 0],\n    \"1f9fd\": [[\"\\uD83E\\uDDFD\"], \"\", \"\", [\"sponge\"], 53, 45, 15, 0],\n    \"1f9fe\": [[\"\\uD83E\\uDDFE\"], \"\", \"\", [\"receipt\"], 53, 46, 15, 0],\n    \"1f9ff\": [[\"\\uD83E\\uDDFF\"], \"\", \"\", [\"nazar_amulet\"], 53, 47, 15, 0],\n    \"1fa70\": [[\"\\uD83E\\uDE70\"], \"\", \"\", [\"ballet_shoes\"], 53, 48, 15, 0],\n    \"1fa71\": [[\"\\uD83E\\uDE71\"], \"\", \"\", [\"one-piece_swimsuit\"], 53, 49, 15, 0],\n    \"1fa72\": [[\"\\uD83E\\uDE72\"], \"\", \"\", [\"briefs\"], 53, 50, 15, 0],\n    \"1fa73\": [[\"\\uD83E\\uDE73\"], \"\", \"\", [\"shorts\"], 53, 51, 15, 0],\n    \"1fa74\": [[\"\\uD83E\\uDE74\"], \"\", \"\", [\"thong_sandal\"], 53, 52, 15, 0],\n    \"1fa75\": [[\"\\uD83E\\uDE75\"], \"\", \"\", [\"light_blue_heart\"], 53, 53, 3, 0],\n    \"1fa76\": [[\"\\uD83E\\uDE76\"], \"\", \"\", [\"grey_heart\"], 53, 54, 3, 0],\n    \"1fa77\": [[\"\\uD83E\\uDE77\"], \"\", \"\", [\"pink_heart\"], 53, 55, 3, 0],\n    \"1fa78\": [[\"\\uD83E\\uDE78\"], \"\", \"\", [\"drop_of_blood\"], 53, 56, 15, 0],\n    \"1fa79\": [[\"\\uD83E\\uDE79\"], \"\", \"\", [\"adhesive_bandage\"], 53, 57, 15, 0],\n    \"1fa7a\": [[\"\\uD83E\\uDE7A\"], \"\", \"\", [\"stethoscope\"], 53, 58, 15, 0],\n    \"1fa7b\": [[\"\\uD83E\\uDE7B\"], \"\", \"\", [\"x-ray\"], 53, 59, 15, 0],\n    \"1fa7c\": [[\"\\uD83E\\uDE7C\"], \"\", \"\", [\"crutch\"], 53, 60, 15, 0],\n    \"1fa80\": [[\"\\uD83E\\uDE80\"], \"\", \"\", [\"yo-yo\"], 54, 0, 15, 0],\n    \"1fa81\": [[\"\\uD83E\\uDE81\"], \"\", \"\", [\"kite\"], 54, 1, 15, 0],\n    \"1fa82\": [[\"\\uD83E\\uDE82\"], \"\", \"\", [\"parachute\"], 54, 2, 15, 0],\n    \"1fa83\": [[\"\\uD83E\\uDE83\"], \"\", \"\", [\"boomerang\"], 54, 3, 15, 0],\n    \"1fa84\": [[\"\\uD83E\\uDE84\"], \"\", \"\", [\"magic_wand\"], 54, 4, 15, 0],\n    \"1fa85\": [[\"\\uD83E\\uDE85\"], \"\", \"\", [\"pinata\"], 54, 5, 15, 0],\n    \"1fa86\": [[\"\\uD83E\\uDE86\"], \"\", \"\", [\"nesting_dolls\"], 54, 6, 15, 0],\n    \"1fa87\": [[\"\\uD83E\\uDE87\"], \"\", \"\", [\"maracas\"], 54, 7, 3, 0],\n    \"1fa88\": [[\"\\uD83E\\uDE88\"], \"\", \"\", [\"flute\"], 54, 8, 3, 0],\n    \"1fa90\": [[\"\\uD83E\\uDE90\"], \"\", \"\", [\"ringed_planet\"], 54, 9, 15, 0],\n    \"1fa91\": [[\"\\uD83E\\uDE91\"], \"\", \"\", [\"chair\"], 54, 10, 15, 0],\n    \"1fa92\": [[\"\\uD83E\\uDE92\"], \"\", \"\", [\"razor\"], 54, 11, 15, 0],\n    \"1fa93\": [[\"\\uD83E\\uDE93\"], \"\", \"\", [\"axe\"], 54, 12, 15, 0],\n    \"1fa94\": [[\"\\uD83E\\uDE94\"], \"\", \"\", [\"diya_lamp\"], 54, 13, 15, 0],\n    \"1fa95\": [[\"\\uD83E\\uDE95\"], \"\", \"\", [\"banjo\"], 54, 14, 15, 0],\n    \"1fa96\": [[\"\\uD83E\\uDE96\"], \"\", \"\", [\"military_helmet\"], 54, 15, 15, 0],\n    \"1fa97\": [[\"\\uD83E\\uDE97\"], \"\", \"\", [\"accordion\"], 54, 16, 15, 0],\n    \"1fa98\": [[\"\\uD83E\\uDE98\"], \"\", \"\", [\"long_drum\"], 54, 17, 15, 0],\n    \"1fa99\": [[\"\\uD83E\\uDE99\"], \"\", \"\", [\"coin\"], 54, 18, 15, 0],\n    \"1fa9a\": [[\"\\uD83E\\uDE9A\"], \"\", \"\", [\"carpentry_saw\"], 54, 19, 15, 0],\n    \"1fa9b\": [[\"\\uD83E\\uDE9B\"], \"\", \"\", [\"screwdriver\"], 54, 20, 15, 0],\n    \"1fa9c\": [[\"\\uD83E\\uDE9C\"], \"\", \"\", [\"ladder\"], 54, 21, 15, 0],\n    \"1fa9d\": [[\"\\uD83E\\uDE9D\"], \"\", \"\", [\"hook\"], 54, 22, 15, 0],\n    \"1fa9e\": [[\"\\uD83E\\uDE9E\"], \"\", \"\", [\"mirror\"], 54, 23, 15, 0],\n    \"1fa9f\": [[\"\\uD83E\\uDE9F\"], \"\", \"\", [\"window\"], 54, 24, 15, 0],\n    \"1faa0\": [[\"\\uD83E\\uDEA0\"], \"\", \"\", [\"plunger\"], 54, 25, 15, 0],\n    \"1faa1\": [[\"\\uD83E\\uDEA1\"], \"\", \"\", [\"sewing_needle\"], 54, 26, 15, 0],\n    \"1faa2\": [[\"\\uD83E\\uDEA2\"], \"\", \"\", [\"knot\"], 54, 27, 15, 0],\n    \"1faa3\": [[\"\\uD83E\\uDEA3\"], \"\", \"\", [\"bucket\"], 54, 28, 15, 0],\n    \"1faa4\": [[\"\\uD83E\\uDEA4\"], \"\", \"\", [\"mouse_trap\"], 54, 29, 15, 0],\n    \"1faa5\": [[\"\\uD83E\\uDEA5\"], \"\", \"\", [\"toothbrush\"], 54, 30, 15, 0],\n    \"1faa6\": [[\"\\uD83E\\uDEA6\"], \"\", \"\", [\"headstone\"], 54, 31, 15, 0],\n    \"1faa7\": [[\"\\uD83E\\uDEA7\"], \"\", \"\", [\"placard\"], 54, 32, 15, 0],\n    \"1faa8\": [[\"\\uD83E\\uDEA8\"], \"\", \"\", [\"rock\"], 54, 33, 15, 0],\n    \"1faa9\": [[\"\\uD83E\\uDEA9\"], \"\", \"\", [\"mirror_ball\"], 54, 34, 15, 0],\n    \"1faaa\": [[\"\\uD83E\\uDEAA\"], \"\", \"\", [\"identification_card\"], 54, 35, 15, 0],\n    \"1faab\": [[\"\\uD83E\\uDEAB\"], \"\", \"\", [\"low_battery\"], 54, 36, 15, 0],\n    \"1faac\": [[\"\\uD83E\\uDEAC\"], \"\", \"\", [\"hamsa\"], 54, 37, 15, 0],\n    \"1faad\": [[\"\\uD83E\\uDEAD\"], \"\", \"\", [\"folding_hand_fan\"], 54, 38, 3, 0],\n    \"1faae\": [[\"\\uD83E\\uDEAE\"], \"\", \"\", [\"hair_pick\"], 54, 39, 3, 0],\n    \"1faaf\": [[\"\\uD83E\\uDEAF\"], \"\", \"\", [\"khanda\"], 54, 40, 3, 0],\n    \"1fab0\": [[\"\\uD83E\\uDEB0\"], \"\", \"\", [\"fly\"], 54, 41, 15, 0],\n    \"1fab1\": [[\"\\uD83E\\uDEB1\"], \"\", \"\", [\"worm\"], 54, 42, 15, 0],\n    \"1fab2\": [[\"\\uD83E\\uDEB2\"], \"\", \"\", [\"beetle\"], 54, 43, 15, 0],\n    \"1fab3\": [[\"\\uD83E\\uDEB3\"], \"\", \"\", [\"cockroach\"], 54, 44, 15, 0],\n    \"1fab4\": [[\"\\uD83E\\uDEB4\"], \"\", \"\", [\"potted_plant\"], 54, 45, 15, 0],\n    \"1fab5\": [[\"\\uD83E\\uDEB5\"], \"\", \"\", [\"wood\"], 54, 46, 15, 0],\n    \"1fab6\": [[\"\\uD83E\\uDEB6\"], \"\", \"\", [\"feather\"], 54, 47, 15, 0],\n    \"1fab7\": [[\"\\uD83E\\uDEB7\"], \"\", \"\", [\"lotus\"], 54, 48, 15, 0],\n    \"1fab8\": [[\"\\uD83E\\uDEB8\"], \"\", \"\", [\"coral\"], 54, 49, 15, 0],\n    \"1fab9\": [[\"\\uD83E\\uDEB9\"], \"\", \"\", [\"empty_nest\"], 54, 50, 15, 0],\n    \"1faba\": [[\"\\uD83E\\uDEBA\"], \"\", \"\", [\"nest_with_eggs\"], 54, 51, 15, 0],\n    \"1fabb\": [[\"\\uD83E\\uDEBB\"], \"\", \"\", [\"hyacinth\"], 54, 52, 3, 0],\n    \"1fabc\": [[\"\\uD83E\\uDEBC\"], \"\", \"\", [\"jellyfish\"], 54, 53, 3, 0],\n    \"1fabd\": [[\"\\uD83E\\uDEBD\"], \"\", \"\", [\"wing\"], 54, 54, 3, 0],\n    \"1fabf\": [[\"\\uD83E\\uDEBF\"], \"\", \"\", [\"goose\"], 54, 55, 3, 0],\n    \"1fac0\": [[\"\\uD83E\\uDEC0\"], \"\", \"\", [\"anatomical_heart\"], 54, 56, 15, 0],\n    \"1fac1\": [[\"\\uD83E\\uDEC1\"], \"\", \"\", [\"lungs\"], 54, 57, 15, 0],\n    \"1fac2\": [[\"\\uD83E\\uDEC2\"], \"\", \"\", [\"people_hugging\"], 54, 58, 15, 0],\n    \"1fac3\": [[\"\\uD83E\\uDEC3\"], \"\", \"\", [\"pregnant_man\"], 54, 59, 15, 0],\n    \"1fac4\": [[\"\\uD83E\\uDEC4\"], \"\", \"\", [\"pregnant_person\"], 55, 4, 15, 0],\n    \"1fac5\": [[\"\\uD83E\\uDEC5\"], \"\", \"\", [\"person_with_crown\"], 55, 10, 15, 0],\n    \"1face\": [[\"\\uD83E\\uDECE\"], \"\", \"\", [\"moose\"], 55, 16, 3, 0],\n    \"1facf\": [[\"\\uD83E\\uDECF\"], \"\", \"\", [\"donkey\"], 55, 17, 3, 0],\n    \"1fad0\": [[\"\\uD83E\\uDED0\"], \"\", \"\", [\"blueberries\"], 55, 18, 15, 0],\n    \"1fad1\": [[\"\\uD83E\\uDED1\"], \"\", \"\", [\"bell_pepper\"], 55, 19, 15, 0],\n    \"1fad2\": [[\"\\uD83E\\uDED2\"], \"\", \"\", [\"olive\"], 55, 20, 15, 0],\n    \"1fad3\": [[\"\\uD83E\\uDED3\"], \"\", \"\", [\"flatbread\"], 55, 21, 15, 0],\n    \"1fad4\": [[\"\\uD83E\\uDED4\"], \"\", \"\", [\"tamale\"], 55, 22, 15, 0],\n    \"1fad5\": [[\"\\uD83E\\uDED5\"], \"\", \"\", [\"fondue\"], 55, 23, 15, 0],\n    \"1fad6\": [[\"\\uD83E\\uDED6\"], \"\", \"\", [\"teapot\"], 55, 24, 15, 0],\n    \"1fad7\": [[\"\\uD83E\\uDED7\"], \"\", \"\", [\"pouring_liquid\"], 55, 25, 15, 0],\n    \"1fad8\": [[\"\\uD83E\\uDED8\"], \"\", \"\", [\"beans\"], 55, 26, 15, 0],\n    \"1fad9\": [[\"\\uD83E\\uDED9\"], \"\", \"\", [\"jar\"], 55, 27, 15, 0],\n    \"1fada\": [[\"\\uD83E\\uDEDA\"], \"\", \"\", [\"ginger_root\"], 55, 28, 3, 0],\n    \"1fadb\": [[\"\\uD83E\\uDEDB\"], \"\", \"\", [\"pea_pod\"], 55, 29, 3, 0],\n    \"1fae0\": [[\"\\uD83E\\uDEE0\"], \"\", \"\", [\"melting_face\"], 55, 30, 15, 0],\n    \"1fae1\": [[\"\\uD83E\\uDEE1\"], \"\", \"\", [\"saluting_face\"], 55, 31, 15, 0],\n    \"1fae2\": [[\"\\uD83E\\uDEE2\"], \"\", \"\", [\"face_with_open_eyes_and_hand_over_mouth\"], 55, 32, 15, 0],\n    \"1fae3\": [[\"\\uD83E\\uDEE3\"], \"\", \"\", [\"face_with_peeking_eye\"], 55, 33, 15, 0],\n    \"1fae4\": [[\"\\uD83E\\uDEE4\"], \"\", \"\", [\"face_with_diagonal_mouth\"], 55, 34, 15, 0],\n    \"1fae5\": [[\"\\uD83E\\uDEE5\"], \"\", \"\", [\"dotted_line_face\"], 55, 35, 15, 0],\n    \"1fae6\": [[\"\\uD83E\\uDEE6\"], \"\", \"\", [\"biting_lip\"], 55, 36, 15, 0],\n    \"1fae7\": [[\"\\uD83E\\uDEE7\"], \"\", \"\", [\"bubbles\"], 55, 37, 15, 0],\n    \"1fae8\": [[\"\\uD83E\\uDEE8\"], \"\", \"\", [\"shaking_face\"], 55, 38, 3, 0],\n    \"1faf0\": [[\"\\uD83E\\uDEF0\"], \"\", \"\", [\"hand_with_index_finger_and_thumb_crossed\"], 55, 39, 15, 0],\n    \"1faf1\": [[\"\\uD83E\\uDEF1\"], \"\", \"\", [\"rightwards_hand\"], 55, 45, 15, 0],\n    \"1faf2\": [[\"\\uD83E\\uDEF2\"], \"\", \"\", [\"leftwards_hand\"], 55, 51, 15, 0],\n    \"1faf3\": [[\"\\uD83E\\uDEF3\"], \"\", \"\", [\"palm_down_hand\"], 55, 57, 15, 0],\n    \"1faf4\": [[\"\\uD83E\\uDEF4\"], \"\", \"\", [\"palm_up_hand\"], 56, 2, 15, 0],\n    \"1faf5\": [[\"\\uD83E\\uDEF5\"], \"\", \"\", [\"index_pointing_at_the_viewer\"], 56, 8, 15, 0],\n    \"1faf6\": [[\"\\uD83E\\uDEF6\"], \"\", \"\", [\"heart_hands\"], 56, 14, 15, 0],\n    \"1faf7\": [[\"\\uD83E\\uDEF7\"], \"\", \"\", [\"leftwards_pushing_hand\"], 56, 20, 3, 0],\n    \"1faf8\": [[\"\\uD83E\\uDEF8\"], \"\", \"\", [\"rightwards_pushing_hand\"], 56, 26, 3, 0],\n    \"203c-fe0f\": [[\"\\u203C\\uFE0F\", \"\\u203C\"], \"\", \"\\uDBBA\\uDF06\", [\"bangbang\"], 56, 32, 15, 0],\n    \"2049-fe0f\": [[\"\\u2049\\uFE0F\", \"\\u2049\"], \"\", \"\\uDBBA\\uDF05\", [\"interrobang\"], 56, 33, 15, 0],\n    \"2122-fe0f\": [[\"\\u2122\\uFE0F\", \"\\u2122\"], \"\\uE537\", \"\\uDBBA\\uDF2A\", [\"tm\"], 56, 34, 15, 0],\n    \"2139-fe0f\": [[\"\\u2139\\uFE0F\", \"\\u2139\"], \"\", \"\\uDBBA\\uDF47\", [\"information_source\"], 56, 35, 15, 0],\n    \"2194-fe0f\": [[\"\\u2194\\uFE0F\", \"\\u2194\"], \"\", \"\\uDBBA\\uDEF6\", [\"left_right_arrow\"], 56, 36, 15, 0],\n    \"2195-fe0f\": [[\"\\u2195\\uFE0F\", \"\\u2195\"], \"\", \"\\uDBBA\\uDEF7\", [\"arrow_up_down\"], 56, 37, 15, 0],\n    \"2196-fe0f\": [[\"\\u2196\\uFE0F\", \"\\u2196\"], \"\\uE237\", \"\\uDBBA\\uDEF2\", [\"arrow_upper_left\"], 56, 38, 15, 0],\n    \"2197-fe0f\": [[\"\\u2197\\uFE0F\", \"\\u2197\"], \"\\uE236\", \"\\uDBBA\\uDEF0\", [\"arrow_upper_right\"], 56, 39, 15, 0],\n    \"2198-fe0f\": [[\"\\u2198\\uFE0F\", \"\\u2198\"], \"\\uE238\", \"\\uDBBA\\uDEF1\", [\"arrow_lower_right\"], 56, 40, 15, 0],\n    \"2199-fe0f\": [[\"\\u2199\\uFE0F\", \"\\u2199\"], \"\\uE239\", \"\\uDBBA\\uDEF3\", [\"arrow_lower_left\"], 56, 41, 15, 0],\n    \"21a9-fe0f\": [[\"\\u21A9\\uFE0F\", \"\\u21A9\"], \"\", \"\\uDBBA\\uDF83\", [\"leftwards_arrow_with_hook\"], 56, 42, 15, 0],\n    \"21aa-fe0f\": [[\"\\u21AA\\uFE0F\", \"\\u21AA\"], \"\", \"\\uDBBA\\uDF88\", [\"arrow_right_hook\"], 56, 43, 15, 0],\n    \"231a\": [[\"\\u231A\"], \"\", \"\\uDBB8\\uDC1D\", [\"watch\"], 56, 44, 15, 0],\n    \"231b\": [[\"\\u231B\"], \"\", \"\\uDBB8\\uDC1C\", [\"hourglass\"], 56, 45, 15, 0],\n    \"2328-fe0f\": [[\"\\u2328\\uFE0F\", \"\\u2328\"], \"\", \"\", [\"keyboard\"], 56, 46, 15, 0],\n    \"23cf-fe0f\": [[\"\\u23CF\\uFE0F\", \"\\u23CF\"], \"\", \"\", [\"eject\"], 56, 47, 15, 0],\n    \"23e9\": [[\"\\u23E9\"], \"\\uE23C\", \"\\uDBBA\\uDEFE\", [\"fast_forward\"], 56, 48, 15, 0],\n    \"23ea\": [[\"\\u23EA\"], \"\\uE23D\", \"\\uDBBA\\uDEFF\", [\"rewind\"], 56, 49, 15, 0],\n    \"23eb\": [[\"\\u23EB\"], \"\", \"\\uDBBA\\uDF03\", [\"arrow_double_up\"], 56, 50, 15, 0],\n    \"23ec\": [[\"\\u23EC\"], \"\", \"\\uDBBA\\uDF02\", [\"arrow_double_down\"], 56, 51, 15, 0],\n    \"23ed-fe0f\": [[\"\\u23ED\\uFE0F\", \"\\u23ED\"], \"\", \"\", [\"black_right_pointing_double_triangle_with_vertical_bar\"], 56, 52, 15, 0],\n    \"23ee-fe0f\": [[\"\\u23EE\\uFE0F\", \"\\u23EE\"], \"\", \"\", [\"black_left_pointing_double_triangle_with_vertical_bar\"], 56, 53, 15, 0],\n    \"23ef-fe0f\": [[\"\\u23EF\\uFE0F\", \"\\u23EF\"], \"\", \"\", [\"black_right_pointing_triangle_with_double_vertical_bar\"], 56, 54, 15, 0],\n    \"23f0\": [[\"\\u23F0\"], \"\", \"\\uDBB8\\uDC2A\", [\"alarm_clock\"], 56, 55, 15, 0],\n    \"23f1-fe0f\": [[\"\\u23F1\\uFE0F\", \"\\u23F1\"], \"\", \"\", [\"stopwatch\"], 56, 56, 15, 0],\n    \"23f2-fe0f\": [[\"\\u23F2\\uFE0F\", \"\\u23F2\"], \"\", \"\", [\"timer_clock\"], 56, 57, 15, 0],\n    \"23f3\": [[\"\\u23F3\"], \"\", \"\\uDBB8\\uDC1B\", [\"hourglass_flowing_sand\"], 56, 58, 15, 0],\n    \"23f8-fe0f\": [[\"\\u23F8\\uFE0F\", \"\\u23F8\"], \"\", \"\", [\"double_vertical_bar\"], 56, 59, 15, 0],\n    \"23f9-fe0f\": [[\"\\u23F9\\uFE0F\", \"\\u23F9\"], \"\", \"\", [\"black_square_for_stop\"], 56, 60, 15, 0],\n    \"23fa-fe0f\": [[\"\\u23FA\\uFE0F\", \"\\u23FA\"], \"\", \"\", [\"black_circle_for_record\"], 57, 0, 15, 0],\n    \"24c2-fe0f\": [[\"\\u24C2\\uFE0F\", \"\\u24C2\"], \"\", \"\\uDBB9\\uDFE1\", [\"m\"], 57, 1, 15, 0],\n    \"25aa-fe0f\": [[\"\\u25AA\\uFE0F\", \"\\u25AA\"], \"\", \"\\uDBBA\\uDF6E\", [\"black_small_square\"], 57, 2, 15, 0],\n    \"25ab-fe0f\": [[\"\\u25AB\\uFE0F\", \"\\u25AB\"], \"\", \"\\uDBBA\\uDF6D\", [\"white_small_square\"], 57, 3, 15, 0],\n    \"25b6-fe0f\": [[\"\\u25B6\\uFE0F\", \"\\u25B6\"], \"\\uE23A\", \"\\uDBBA\\uDEFC\", [\"arrow_forward\"], 57, 4, 15, 0],\n    \"25c0-fe0f\": [[\"\\u25C0\\uFE0F\", \"\\u25C0\"], \"\\uE23B\", \"\\uDBBA\\uDEFD\", [\"arrow_backward\"], 57, 5, 15, 0],\n    \"25fb-fe0f\": [[\"\\u25FB\\uFE0F\", \"\\u25FB\"], \"\", \"\\uDBBA\\uDF71\", [\"white_medium_square\"], 57, 6, 15, 0],\n    \"25fc-fe0f\": [[\"\\u25FC\\uFE0F\", \"\\u25FC\"], \"\", \"\\uDBBA\\uDF72\", [\"black_medium_square\"], 57, 7, 15, 0],\n    \"25fd\": [[\"\\u25FD\"], \"\", \"\\uDBBA\\uDF6F\", [\"white_medium_small_square\"], 57, 8, 15, 0],\n    \"25fe\": [[\"\\u25FE\"], \"\", \"\\uDBBA\\uDF70\", [\"black_medium_small_square\"], 57, 9, 15, 0],\n    \"2600-fe0f\": [[\"\\u2600\\uFE0F\", \"\\u2600\"], \"\\uE04A\", \"\\uDBB8\\uDC00\", [\"sunny\"], 57, 10, 15, 0],\n    \"2601-fe0f\": [[\"\\u2601\\uFE0F\", \"\\u2601\"], \"\\uE049\", \"\\uDBB8\\uDC01\", [\"cloud\"], 57, 11, 15, 0],\n    \"2602-fe0f\": [[\"\\u2602\\uFE0F\", \"\\u2602\"], \"\", \"\", [\"umbrella\"], 57, 12, 15, 0],\n    \"2603-fe0f\": [[\"\\u2603\\uFE0F\", \"\\u2603\"], \"\", \"\", [\"snowman\"], 57, 13, 15, 0],\n    \"2604-fe0f\": [[\"\\u2604\\uFE0F\", \"\\u2604\"], \"\", \"\", [\"comet\"], 57, 14, 15, 0],\n    \"260e-fe0f\": [[\"\\u260E\\uFE0F\", \"\\u260E\"], \"\\uE009\", \"\\uDBB9\\uDD23\", [\"phone\", \"telephone\"], 57, 15, 15, 0],\n    \"2611-fe0f\": [[\"\\u2611\\uFE0F\", \"\\u2611\"], \"\", \"\\uDBBA\\uDF8B\", [\"ballot_box_with_check\"], 57, 16, 15, 0],\n    \"2614\": [[\"\\u2614\"], \"\\uE04B\", \"\\uDBB8\\uDC02\", [\"umbrella_with_rain_drops\"], 57, 17, 15, 0],\n    \"2615\": [[\"\\u2615\"], \"\\uE045\", \"\\uDBBA\\uDD81\", [\"coffee\"], 57, 18, 15, 0],\n    \"2618-fe0f\": [[\"\\u2618\\uFE0F\", \"\\u2618\"], \"\", \"\", [\"shamrock\"], 57, 19, 15, 0],\n    \"261d-fe0f\": [[\"\\u261D\\uFE0F\", \"\\u261D\"], \"\\uE00F\", \"\\uDBBA\\uDF98\", [\"point_up\"], 57, 20, 15, 0],\n    \"2620-fe0f\": [[\"\\u2620\\uFE0F\", \"\\u2620\"], \"\", \"\", [\"skull_and_crossbones\"], 57, 26, 15, 0],\n    \"2622-fe0f\": [[\"\\u2622\\uFE0F\", \"\\u2622\"], \"\", \"\", [\"radioactive_sign\"], 57, 27, 15, 0],\n    \"2623-fe0f\": [[\"\\u2623\\uFE0F\", \"\\u2623\"], \"\", \"\", [\"biohazard_sign\"], 57, 28, 15, 0],\n    \"2626-fe0f\": [[\"\\u2626\\uFE0F\", \"\\u2626\"], \"\", \"\", [\"orthodox_cross\"], 57, 29, 15, 0],\n    \"262a-fe0f\": [[\"\\u262A\\uFE0F\", \"\\u262A\"], \"\", \"\", [\"star_and_crescent\"], 57, 30, 15, 0],\n    \"262e-fe0f\": [[\"\\u262E\\uFE0F\", \"\\u262E\"], \"\", \"\", [\"peace_symbol\"], 57, 31, 15, 0],\n    \"262f-fe0f\": [[\"\\u262F\\uFE0F\", \"\\u262F\"], \"\", \"\", [\"yin_yang\"], 57, 32, 15, 0],\n    \"2638-fe0f\": [[\"\\u2638\\uFE0F\", \"\\u2638\"], \"\", \"\", [\"wheel_of_dharma\"], 57, 33, 15, 0],\n    \"2639-fe0f\": [[\"\\u2639\\uFE0F\", \"\\u2639\"], \"\", \"\", [\"white_frowning_face\"], 57, 34, 15, 0],\n    \"263a-fe0f\": [[\"\\u263A\\uFE0F\", \"\\u263A\"], \"\\uE414\", \"\\uDBB8\\uDF36\", [\"relaxed\"], 57, 35, 15, 0],\n    \"2640-fe0f\": [[\"\\u2640\\uFE0F\", \"\\u2640\"], \"\", \"\", [\"female_sign\"], 57, 36, 14, 0],\n    \"2642-fe0f\": [[\"\\u2642\\uFE0F\", \"\\u2642\"], \"\", \"\", [\"male_sign\"], 57, 37, 14, 0],\n    \"2648\": [[\"\\u2648\"], \"\\uE23F\", \"\\uDBB8\\uDC2B\", [\"aries\"], 57, 38, 15, 0],\n    \"2649\": [[\"\\u2649\"], \"\\uE240\", \"\\uDBB8\\uDC2C\", [\"taurus\"], 57, 39, 15, 0],\n    \"264a\": [[\"\\u264A\"], \"\\uE241\", \"\\uDBB8\\uDC2D\", [\"gemini\"], 57, 40, 15, 0],\n    \"264b\": [[\"\\u264B\"], \"\\uE242\", \"\\uDBB8\\uDC2E\", [\"cancer\"], 57, 41, 15, 0],\n    \"264c\": [[\"\\u264C\"], \"\\uE243\", \"\\uDBB8\\uDC2F\", [\"leo\"], 57, 42, 15, 0],\n    \"264d\": [[\"\\u264D\"], \"\\uE244\", \"\\uDBB8\\uDC30\", [\"virgo\"], 57, 43, 15, 0],\n    \"264e\": [[\"\\u264E\"], \"\\uE245\", \"\\uDBB8\\uDC31\", [\"libra\"], 57, 44, 15, 0],\n    \"264f\": [[\"\\u264F\"], \"\\uE246\", \"\\uDBB8\\uDC32\", [\"scorpius\"], 57, 45, 15, 0],\n    \"2650\": [[\"\\u2650\"], \"\\uE247\", \"\\uDBB8\\uDC33\", [\"sagittarius\"], 57, 46, 15, 0],\n    \"2651\": [[\"\\u2651\"], \"\\uE248\", \"\\uDBB8\\uDC34\", [\"capricorn\"], 57, 47, 15, 0],\n    \"2652\": [[\"\\u2652\"], \"\\uE249\", \"\\uDBB8\\uDC35\", [\"aquarius\"], 57, 48, 15, 0],\n    \"2653\": [[\"\\u2653\"], \"\\uE24A\", \"\\uDBB8\\uDC36\", [\"pisces\"], 57, 49, 15, 0],\n    \"265f-fe0f\": [[\"\\u265F\\uFE0F\", \"\\u265F\"], \"\", \"\", [\"chess_pawn\"], 57, 50, 15, 0],\n    \"2660-fe0f\": [[\"\\u2660\\uFE0F\", \"\\u2660\"], \"\\uE20E\", \"\\uDBBA\\uDF1B\", [\"spades\"], 57, 51, 15, 0],\n    \"2663-fe0f\": [[\"\\u2663\\uFE0F\", \"\\u2663\"], \"\\uE20F\", \"\\uDBBA\\uDF1D\", [\"clubs\"], 57, 52, 15, 0],\n    \"2665-fe0f\": [[\"\\u2665\\uFE0F\", \"\\u2665\"], \"\\uE20C\", \"\\uDBBA\\uDF1A\", [\"hearts\"], 57, 53, 15, 0],\n    \"2666-fe0f\": [[\"\\u2666\\uFE0F\", \"\\u2666\"], \"\\uE20D\", \"\\uDBBA\\uDF1C\", [\"diamonds\"], 57, 54, 15, 0],\n    \"2668-fe0f\": [[\"\\u2668\\uFE0F\", \"\\u2668\"], \"\\uE123\", \"\\uDBB9\\uDFFA\", [\"hotsprings\"], 57, 55, 15, 0],\n    \"267b-fe0f\": [[\"\\u267B\\uFE0F\", \"\\u267B\"], \"\", \"\\uDBBA\\uDF2C\", [\"recycle\"], 57, 56, 15, 0],\n    \"267e-fe0f\": [[\"\\u267E\\uFE0F\", \"\\u267E\"], \"\", \"\", [\"infinity\"], 57, 57, 15, 0],\n    \"267f\": [[\"\\u267F\"], \"\\uE20A\", \"\\uDBBA\\uDF20\", [\"wheelchair\"], 57, 58, 15, 0],\n    \"2692-fe0f\": [[\"\\u2692\\uFE0F\", \"\\u2692\"], \"\", \"\", [\"hammer_and_pick\"], 57, 59, 15, 0],\n    \"2693\": [[\"\\u2693\"], \"\", \"\\uDBB9\\uDCC1\", [\"anchor\"], 57, 60, 15, 0],\n    \"2694-fe0f\": [[\"\\u2694\\uFE0F\", \"\\u2694\"], \"\", \"\", [\"crossed_swords\"], 58, 0, 15, 0],\n    \"2695-fe0f\": [[\"\\u2695\\uFE0F\", \"\\u2695\"], \"\", \"\", [\"medical_symbol\", \"staff_of_aesculapius\"], 58, 1, 14, 0],\n    \"2696-fe0f\": [[\"\\u2696\\uFE0F\", \"\\u2696\"], \"\", \"\", [\"scales\"], 58, 2, 15, 0],\n    \"2697-fe0f\": [[\"\\u2697\\uFE0F\", \"\\u2697\"], \"\", \"\", [\"alembic\"], 58, 3, 15, 0],\n    \"2699-fe0f\": [[\"\\u2699\\uFE0F\", \"\\u2699\"], \"\", \"\", [\"gear\"], 58, 4, 15, 0],\n    \"269b-fe0f\": [[\"\\u269B\\uFE0F\", \"\\u269B\"], \"\", \"\", [\"atom_symbol\"], 58, 5, 15, 0],\n    \"269c-fe0f\": [[\"\\u269C\\uFE0F\", \"\\u269C\"], \"\", \"\", [\"fleur_de_lis\"], 58, 6, 15, 0],\n    \"26a0-fe0f\": [[\"\\u26A0\\uFE0F\", \"\\u26A0\"], \"\\uE252\", \"\\uDBBA\\uDF23\", [\"warning\"], 58, 7, 15, 0],\n    \"26a1\": [[\"\\u26A1\"], \"\\uE13D\", \"\\uDBB8\\uDC04\", [\"zap\"], 58, 8, 15, 0],\n    \"26a7-fe0f\": [[\"\\u26A7\\uFE0F\", \"\\u26A7\"], \"\", \"\", [\"transgender_symbol\"], 58, 9, 15, 0],\n    \"26aa\": [[\"\\u26AA\"], \"\", \"\\uDBBA\\uDF65\", [\"white_circle\"], 58, 10, 15, 0],\n    \"26ab\": [[\"\\u26AB\"], \"\", \"\\uDBBA\\uDF66\", [\"black_circle\"], 58, 11, 15, 0],\n    \"26b0-fe0f\": [[\"\\u26B0\\uFE0F\", \"\\u26B0\"], \"\", \"\", [\"coffin\"], 58, 12, 15, 0],\n    \"26b1-fe0f\": [[\"\\u26B1\\uFE0F\", \"\\u26B1\"], \"\", \"\", [\"funeral_urn\"], 58, 13, 15, 0],\n    \"26bd\": [[\"\\u26BD\"], \"\\uE018\", \"\\uDBB9\\uDFD4\", [\"soccer\"], 58, 14, 15, 0],\n    \"26be\": [[\"\\u26BE\"], \"\\uE016\", \"\\uDBB9\\uDFD1\", [\"baseball\"], 58, 15, 15, 0],\n    \"26c4\": [[\"\\u26C4\"], \"\\uE048\", \"\\uDBB8\\uDC03\", [\"snowman_without_snow\"], 58, 16, 15, 0],\n    \"26c5\": [[\"\\u26C5\"], \"\", \"\\uDBB8\\uDC0F\", [\"partly_sunny\"], 58, 17, 15, 0],\n    \"26c8-fe0f\": [[\"\\u26C8\\uFE0F\", \"\\u26C8\"], \"\", \"\", [\"thunder_cloud_and_rain\"], 58, 18, 15, 0],\n    \"26ce\": [[\"\\u26CE\"], \"\\uE24B\", \"\\uDBB8\\uDC37\", [\"ophiuchus\"], 58, 19, 15, 0],\n    \"26cf-fe0f\": [[\"\\u26CF\\uFE0F\", \"\\u26CF\"], \"\", \"\", [\"pick\"], 58, 20, 15, 0],\n    \"26d1-fe0f\": [[\"\\u26D1\\uFE0F\", \"\\u26D1\"], \"\", \"\", [\"helmet_with_white_cross\"], 58, 21, 15, 0],\n    \"26d3-fe0f\": [[\"\\u26D3\\uFE0F\", \"\\u26D3\"], \"\", \"\", [\"chains\"], 58, 22, 15, 0],\n    \"26d4\": [[\"\\u26D4\"], \"\", \"\\uDBBA\\uDF26\", [\"no_entry\"], 58, 23, 15, 0],\n    \"26e9-fe0f\": [[\"\\u26E9\\uFE0F\", \"\\u26E9\"], \"\", \"\", [\"shinto_shrine\"], 58, 24, 15, 0],\n    \"26ea\": [[\"\\u26EA\"], \"\\uE037\", \"\\uDBB9\\uDCBB\", [\"church\"], 58, 25, 15, 0],\n    \"26f0-fe0f\": [[\"\\u26F0\\uFE0F\", \"\\u26F0\"], \"\", \"\", [\"mountain\"], 58, 26, 15, 0],\n    \"26f1-fe0f\": [[\"\\u26F1\\uFE0F\", \"\\u26F1\"], \"\", \"\", [\"umbrella_on_ground\"], 58, 27, 15, 0],\n    \"26f2\": [[\"\\u26F2\"], \"\\uE121\", \"\\uDBB9\\uDCBC\", [\"fountain\"], 58, 28, 15, 0],\n    \"26f3\": [[\"\\u26F3\"], \"\\uE014\", \"\\uDBB9\\uDFD2\", [\"golf\"], 58, 29, 15, 0],\n    \"26f4-fe0f\": [[\"\\u26F4\\uFE0F\", \"\\u26F4\"], \"\", \"\", [\"ferry\"], 58, 30, 15, 0],\n    \"26f5\": [[\"\\u26F5\"], \"\\uE01C\", \"\\uDBB9\\uDFEA\", [\"boat\", \"sailboat\"], 58, 31, 15, 0],\n    \"26f7-fe0f\": [[\"\\u26F7\\uFE0F\", \"\\u26F7\"], \"\", \"\", [\"skier\"], 58, 32, 15, 0],\n    \"26f8-fe0f\": [[\"\\u26F8\\uFE0F\", \"\\u26F8\"], \"\", \"\", [\"ice_skate\"], 58, 33, 15, 0],\n    \"26f9-fe0f-200d-2640-fe0f\": [[\"\\u26F9\\uFE0F\\u200D\\u2640\\uFE0F\"], \"\", \"\", [\"woman-bouncing-ball\"], 58, 34, 7, 0],\n    \"26f9-fe0f-200d-2642-fe0f\": [[\"\\u26F9\\uFE0F\\u200D\\u2642\\uFE0F\", \"\\u26F9\\uFE0F\", \"\\u26F9\"], \"\", \"\", [\"man-bouncing-ball\", \"person_with_ball\"], 58, 40, 7, 0],\n    \"26fa\": [[\"\\u26FA\"], \"\\uE122\", \"\\uDBB9\\uDFFB\", [\"tent\"], 58, 52, 15, 0],\n    \"26fd\": [[\"\\u26FD\"], \"\\uE03A\", \"\\uDBB9\\uDFF5\", [\"fuelpump\"], 58, 53, 15, 0],\n    \"2702-fe0f\": [[\"\\u2702\\uFE0F\", \"\\u2702\"], \"\\uE313\", \"\\uDBB9\\uDD3E\", [\"scissors\"], 58, 54, 15, 0],\n    \"2705\": [[\"\\u2705\"], \"\", \"\\uDBBA\\uDF4A\", [\"white_check_mark\"], 58, 55, 15, 0],\n    \"2708-fe0f\": [[\"\\u2708\\uFE0F\", \"\\u2708\"], \"\\uE01D\", \"\\uDBB9\\uDFE9\", [\"airplane\"], 58, 56, 15, 0],\n    \"2709-fe0f\": [[\"\\u2709\\uFE0F\", \"\\u2709\"], \"\", \"\\uDBB9\\uDD29\", [\"email\", \"envelope\"], 58, 57, 15, 0],\n    \"270a\": [[\"\\u270A\"], \"\\uE010\", \"\\uDBBA\\uDF93\", [\"fist\"], 58, 58, 15, 0],\n    \"270b\": [[\"\\u270B\"], \"\\uE012\", \"\\uDBBA\\uDF95\", [\"hand\", \"raised_hand\"], 59, 3, 15, 0],\n    \"270c-fe0f\": [[\"\\u270C\\uFE0F\", \"\\u270C\"], \"\\uE011\", \"\\uDBBA\\uDF94\", [\"v\"], 59, 9, 15, 0],\n    \"270d-fe0f\": [[\"\\u270D\\uFE0F\", \"\\u270D\"], \"\", \"\", [\"writing_hand\"], 59, 15, 15, 0],\n    \"270f-fe0f\": [[\"\\u270F\\uFE0F\", \"\\u270F\"], \"\", \"\\uDBB9\\uDD39\", [\"pencil2\"], 59, 21, 15, 0],\n    \"2712-fe0f\": [[\"\\u2712\\uFE0F\", \"\\u2712\"], \"\", \"\\uDBB9\\uDD36\", [\"black_nib\"], 59, 22, 15, 0],\n    \"2714-fe0f\": [[\"\\u2714\\uFE0F\", \"\\u2714\"], \"\", \"\\uDBBA\\uDF49\", [\"heavy_check_mark\"], 59, 23, 15, 0],\n    \"2716-fe0f\": [[\"\\u2716\\uFE0F\", \"\\u2716\"], \"\", \"\\uDBBA\\uDF53\", [\"heavy_multiplication_x\"], 59, 24, 15, 0],\n    \"271d-fe0f\": [[\"\\u271D\\uFE0F\", \"\\u271D\"], \"\", \"\", [\"latin_cross\"], 59, 25, 15, 0],\n    \"2721-fe0f\": [[\"\\u2721\\uFE0F\", \"\\u2721\"], \"\", \"\", [\"star_of_david\"], 59, 26, 15, 0],\n    \"2728\": [[\"\\u2728\"], \"\\uE32E\", \"\\uDBBA\\uDF60\", [\"sparkles\"], 59, 27, 15, 0],\n    \"2733-fe0f\": [[\"\\u2733\\uFE0F\", \"\\u2733\"], \"\\uE206\", \"\\uDBBA\\uDF62\", [\"eight_spoked_asterisk\"], 59, 28, 15, 0],\n    \"2734-fe0f\": [[\"\\u2734\\uFE0F\", \"\\u2734\"], \"\\uE205\", \"\\uDBBA\\uDF61\", [\"eight_pointed_black_star\"], 59, 29, 15, 0],\n    \"2744-fe0f\": [[\"\\u2744\\uFE0F\", \"\\u2744\"], \"\", \"\\uDBB8\\uDC0E\", [\"snowflake\"], 59, 30, 15, 0],\n    \"2747-fe0f\": [[\"\\u2747\\uFE0F\", \"\\u2747\"], \"\", \"\\uDBBA\\uDF77\", [\"sparkle\"], 59, 31, 15, 0],\n    \"274c\": [[\"\\u274C\"], \"\\uE333\", \"\\uDBBA\\uDF45\", [\"x\"], 59, 32, 15, 0],\n    \"274e\": [[\"\\u274E\"], \"\", \"\\uDBBA\\uDF46\", [\"negative_squared_cross_mark\"], 59, 33, 15, 0],\n    \"2753\": [[\"\\u2753\"], \"\\uE020\", \"\\uDBBA\\uDF09\", [\"question\"], 59, 34, 15, 0],\n    \"2754\": [[\"\\u2754\"], \"\\uE336\", \"\\uDBBA\\uDF0A\", [\"grey_question\"], 59, 35, 15, 0],\n    \"2755\": [[\"\\u2755\"], \"\\uE337\", \"\\uDBBA\\uDF0B\", [\"grey_exclamation\"], 59, 36, 15, 0],\n    \"2757\": [[\"\\u2757\"], \"\\uE021\", \"\\uDBBA\\uDF04\", [\"exclamation\", \"heavy_exclamation_mark\"], 59, 37, 15, 0],\n    \"2763-fe0f\": [[\"\\u2763\\uFE0F\", \"\\u2763\"], \"\", \"\", [\"heavy_heart_exclamation_mark_ornament\"], 59, 38, 15, 0],\n    \"2764-fe0f-200d-1f525\": [[\"\\u2764\\uFE0F\\u200D\\uD83D\\uDD25\", \"\\u2764\\u200D\\uD83D\\uDD25\"], \"\", \"\", [\"heart_on_fire\"], 59, 39, 15, 0],\n    \"2764-fe0f-200d-1fa79\": [[\"\\u2764\\uFE0F\\u200D\\uD83E\\uDE79\", \"\\u2764\\u200D\\uD83E\\uDE79\"], \"\", \"\", [\"mending_heart\"], 59, 40, 15, 0],\n    \"2764-fe0f\": [[\"\\u2764\\uFE0F\", \"\\u2764\"], \"\\uE022\", \"\\uDBBA\\uDF0C\", [\"heart\"], 59, 41, 15, 0, \"<3\"],\n    \"2795\": [[\"\\u2795\"], \"\", \"\\uDBBA\\uDF51\", [\"heavy_plus_sign\"], 59, 42, 15, 0],\n    \"2796\": [[\"\\u2796\"], \"\", \"\\uDBBA\\uDF52\", [\"heavy_minus_sign\"], 59, 43, 15, 0],\n    \"2797\": [[\"\\u2797\"], \"\", \"\\uDBBA\\uDF54\", [\"heavy_division_sign\"], 59, 44, 15, 0],\n    \"27a1-fe0f\": [[\"\\u27A1\\uFE0F\", \"\\u27A1\"], \"\\uE234\", \"\\uDBBA\\uDEFA\", [\"arrow_right\"], 59, 45, 15, 0],\n    \"27b0\": [[\"\\u27B0\"], \"\", \"\\uDBBA\\uDF08\", [\"curly_loop\"], 59, 46, 15, 0],\n    \"27bf\": [[\"\\u27BF\"], \"\\uE211\", \"\\uDBBA\\uDC2B\", [\"loop\"], 59, 47, 15, 0],\n    \"2934-fe0f\": [[\"\\u2934\\uFE0F\", \"\\u2934\"], \"\", \"\\uDBBA\\uDEF4\", [\"arrow_heading_up\"], 59, 48, 15, 0],\n    \"2935-fe0f\": [[\"\\u2935\\uFE0F\", \"\\u2935\"], \"\", \"\\uDBBA\\uDEF5\", [\"arrow_heading_down\"], 59, 49, 15, 0],\n    \"2b05-fe0f\": [[\"\\u2B05\\uFE0F\", \"\\u2B05\"], \"\\uE235\", \"\\uDBBA\\uDEFB\", [\"arrow_left\"], 59, 50, 15, 0],\n    \"2b06-fe0f\": [[\"\\u2B06\\uFE0F\", \"\\u2B06\"], \"\\uE232\", \"\\uDBBA\\uDEF8\", [\"arrow_up\"], 59, 51, 15, 0],\n    \"2b07-fe0f\": [[\"\\u2B07\\uFE0F\", \"\\u2B07\"], \"\\uE233\", \"\\uDBBA\\uDEF9\", [\"arrow_down\"], 59, 52, 15, 0],\n    \"2b1b\": [[\"\\u2B1B\"], \"\", \"\\uDBBA\\uDF6C\", [\"black_large_square\"], 59, 53, 15, 0],\n    \"2b1c\": [[\"\\u2B1C\"], \"\", \"\\uDBBA\\uDF6B\", [\"white_large_square\"], 59, 54, 15, 0],\n    \"2b50\": [[\"\\u2B50\"], \"\\uE32F\", \"\\uDBBA\\uDF68\", [\"star\"], 59, 55, 15, 0],\n    \"2b55\": [[\"\\u2B55\"], \"\\uE332\", \"\\uDBBA\\uDF44\", [\"o\"], 59, 56, 15, 0],\n    \"3030-fe0f\": [[\"\\u3030\\uFE0F\", \"\\u3030\"], \"\", \"\\uDBBA\\uDF07\", [\"wavy_dash\"], 59, 57, 15, 0],\n    \"303d-fe0f\": [[\"\\u303D\\uFE0F\", \"\\u303D\"], \"\\uE12C\", \"\\uDBBA\\uDC1B\", [\"part_alternation_mark\"], 59, 58, 15, 0],\n    \"3297-fe0f\": [[\"\\u3297\\uFE0F\", \"\\u3297\"], \"\\uE30D\", \"\\uDBBA\\uDF43\", [\"congratulations\"], 59, 59, 15, 0],\n    \"3299-fe0f\": [[\"\\u3299\\uFE0F\", \"\\u3299\"], \"\\uE315\", \"\\uDBBA\\uDF2B\", [\"secret\"], 59, 60, 15, 0]\n  };\n  /** @private */\n  emoji.prototype.emoticons_data = {\n    \":o)\": \"monkey_face\",\n    \"<\\/3\": \"broken_heart\",\n    \"=)\": \"smiley\",\n    \"=-)\": \"smiley\",\n    \"C:\": \"smile\",\n    \"c:\": \"smile\",\n    \":D\": \"smile\",\n    \":-D\": \"smile\",\n    \":>\": \"laughing\",\n    \":->\": \"laughing\",\n    \";)\": \"wink\",\n    \";-)\": \"wink\",\n    \"8)\": \"sunglasses\",\n    \":|\": \"neutral_face\",\n    \":-|\": \"neutral_face\",\n    \":\\\\\": \"confused\",\n    \":-\\\\\": \"confused\",\n    \":\\/\": \"confused\",\n    \":-\\/\": \"confused\",\n    \":*\": \"kissing_heart\",\n    \":-*\": \"kissing_heart\",\n    \":p\": \"stuck_out_tongue\",\n    \":-p\": \"stuck_out_tongue\",\n    \":P\": \"stuck_out_tongue\",\n    \":-P\": \"stuck_out_tongue\",\n    \":b\": \"stuck_out_tongue\",\n    \":-b\": \"stuck_out_tongue\",\n    \";p\": \"stuck_out_tongue_winking_eye\",\n    \";-p\": \"stuck_out_tongue_winking_eye\",\n    \";b\": \"stuck_out_tongue_winking_eye\",\n    \";-b\": \"stuck_out_tongue_winking_eye\",\n    \";P\": \"stuck_out_tongue_winking_eye\",\n    \";-P\": \"stuck_out_tongue_winking_eye\",\n    \"):\": \"disappointed\",\n    \":(\": \"disappointed\",\n    \":-(\": \"disappointed\",\n    \">:(\": \"angry\",\n    \">:-(\": \"angry\",\n    \":'(\": \"cry\",\n    \"D:\": \"anguished\",\n    \":o\": \"open_mouth\",\n    \":-o\": \"open_mouth\",\n    \":O\": \"open_mouth\",\n    \":-O\": \"open_mouth\",\n    \":)\": \"slightly_smiling_face\",\n    \"(:\": \"slightly_smiling_face\",\n    \":-)\": \"slightly_smiling_face\",\n    \"<3\": \"heart\"\n  };\n  /** @private */\n  emoji.prototype.variations_data = {\n    \"1f385\": {\n      \"1f3fb\": [\"1f385-1f3fb\", 7, 9, 15, [\"\\uD83C\\uDF85\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f385-1f3fc\", 7, 10, 15, [\"\\uD83C\\uDF85\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f385-1f3fd\", 7, 11, 15, [\"\\uD83C\\uDF85\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f385-1f3fe\", 7, 12, 15, [\"\\uD83C\\uDF85\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f385-1f3ff\", 7, 13, 15, [\"\\uD83C\\uDF85\\uD83C\\uDFFF\"]]\n    },\n    \"1f3c2\": {\n      \"1f3fb\": [\"1f3c2-1f3fb\", 8, 9, 15, [\"\\uD83C\\uDFC2\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f3c2-1f3fc\", 8, 10, 15, [\"\\uD83C\\uDFC2\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f3c2-1f3fd\", 8, 11, 15, [\"\\uD83C\\uDFC2\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f3c2-1f3fe\", 8, 12, 15, [\"\\uD83C\\uDFC2\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f3c2-1f3ff\", 8, 13, 15, [\"\\uD83C\\uDFC2\\uD83C\\uDFFF\"]]\n    },\n    \"1f3c3-200d-2640-fe0f\": {\n      \"1f3fb\": [\"1f3c3-1f3fb-200d-2640-fe0f\", 8, 15, 15, [\"\\uD83C\\uDFC3\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fc\": [\"1f3c3-1f3fc-200d-2640-fe0f\", 8, 16, 15, [\"\\uD83C\\uDFC3\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fd\": [\"1f3c3-1f3fd-200d-2640-fe0f\", 8, 17, 15, [\"\\uD83C\\uDFC3\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fe\": [\"1f3c3-1f3fe-200d-2640-fe0f\", 8, 18, 15, [\"\\uD83C\\uDFC3\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\"]],\n      \"1f3ff\": [\"1f3c3-1f3ff-200d-2640-fe0f\", 8, 19, 15, [\"\\uD83C\\uDFC3\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\"]]\n    },\n    \"1f3c3-200d-2642-fe0f\": {\n      \"1f3fb\": [\"1f3c3-1f3fb-200d-2642-fe0f\", 8, 21, 15, [\"\\uD83C\\uDFC3\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\", \"\\uD83C\\uDFC3\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f3c3-1f3fc-200d-2642-fe0f\", 8, 22, 15, [\"\\uD83C\\uDFC3\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\", \"\\uD83C\\uDFC3\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f3c3-1f3fd-200d-2642-fe0f\", 8, 23, 15, [\"\\uD83C\\uDFC3\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\", \"\\uD83C\\uDFC3\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f3c3-1f3fe-200d-2642-fe0f\", 8, 24, 15, [\"\\uD83C\\uDFC3\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\", \"\\uD83C\\uDFC3\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f3c3-1f3ff-200d-2642-fe0f\", 8, 25, 15, [\"\\uD83C\\uDFC3\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\", \"\\uD83C\\uDFC3\\uD83C\\uDFFF\"]]\n    },\n    \"1f3c4-200d-2640-fe0f\": {\n      \"1f3fb\": [\"1f3c4-1f3fb-200d-2640-fe0f\", 8, 33, 15, [\"\\uD83C\\uDFC4\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fc\": [\"1f3c4-1f3fc-200d-2640-fe0f\", 8, 34, 15, [\"\\uD83C\\uDFC4\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fd\": [\"1f3c4-1f3fd-200d-2640-fe0f\", 8, 35, 15, [\"\\uD83C\\uDFC4\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fe\": [\"1f3c4-1f3fe-200d-2640-fe0f\", 8, 36, 15, [\"\\uD83C\\uDFC4\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\"]],\n      \"1f3ff\": [\"1f3c4-1f3ff-200d-2640-fe0f\", 8, 37, 15, [\"\\uD83C\\uDFC4\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\"]]\n    },\n    \"1f3c4-200d-2642-fe0f\": {\n      \"1f3fb\": [\"1f3c4-1f3fb-200d-2642-fe0f\", 8, 39, 15, [\"\\uD83C\\uDFC4\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\", \"\\uD83C\\uDFC4\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f3c4-1f3fc-200d-2642-fe0f\", 8, 40, 15, [\"\\uD83C\\uDFC4\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\", \"\\uD83C\\uDFC4\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f3c4-1f3fd-200d-2642-fe0f\", 8, 41, 15, [\"\\uD83C\\uDFC4\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\", \"\\uD83C\\uDFC4\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f3c4-1f3fe-200d-2642-fe0f\", 8, 42, 15, [\"\\uD83C\\uDFC4\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\", \"\\uD83C\\uDFC4\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f3c4-1f3ff-200d-2642-fe0f\", 8, 43, 15, [\"\\uD83C\\uDFC4\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\", \"\\uD83C\\uDFC4\\uD83C\\uDFFF\"]]\n    },\n    \"1f3c7\": {\n      \"1f3fb\": [\"1f3c7-1f3fb\", 8, 53, 15, [\"\\uD83C\\uDFC7\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f3c7-1f3fc\", 8, 54, 15, [\"\\uD83C\\uDFC7\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f3c7-1f3fd\", 8, 55, 15, [\"\\uD83C\\uDFC7\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f3c7-1f3fe\", 8, 56, 15, [\"\\uD83C\\uDFC7\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f3c7-1f3ff\", 8, 57, 15, [\"\\uD83C\\uDFC7\\uD83C\\uDFFF\"]]\n    },\n    \"1f3ca-200d-2640-fe0f\": {\n      \"1f3fb\": [\"1f3ca-1f3fb-200d-2640-fe0f\", 9, 0, 15, [\"\\uD83C\\uDFCA\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fc\": [\"1f3ca-1f3fc-200d-2640-fe0f\", 9, 1, 15, [\"\\uD83C\\uDFCA\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fd\": [\"1f3ca-1f3fd-200d-2640-fe0f\", 9, 2, 15, [\"\\uD83C\\uDFCA\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fe\": [\"1f3ca-1f3fe-200d-2640-fe0f\", 9, 3, 15, [\"\\uD83C\\uDFCA\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\"]],\n      \"1f3ff\": [\"1f3ca-1f3ff-200d-2640-fe0f\", 9, 4, 15, [\"\\uD83C\\uDFCA\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\"]]\n    },\n    \"1f3ca-200d-2642-fe0f\": {\n      \"1f3fb\": [\"1f3ca-1f3fb-200d-2642-fe0f\", 9, 6, 15, [\"\\uD83C\\uDFCA\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\", \"\\uD83C\\uDFCA\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f3ca-1f3fc-200d-2642-fe0f\", 9, 7, 15, [\"\\uD83C\\uDFCA\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\", \"\\uD83C\\uDFCA\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f3ca-1f3fd-200d-2642-fe0f\", 9, 8, 15, [\"\\uD83C\\uDFCA\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\", \"\\uD83C\\uDFCA\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f3ca-1f3fe-200d-2642-fe0f\", 9, 9, 15, [\"\\uD83C\\uDFCA\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\", \"\\uD83C\\uDFCA\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f3ca-1f3ff-200d-2642-fe0f\", 9, 10, 15, [\"\\uD83C\\uDFCA\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\", \"\\uD83C\\uDFCA\\uD83C\\uDFFF\"]]\n    },\n    \"1f3cb-fe0f-200d-2640-fe0f\": {\n      \"1f3fb\": [\"1f3cb-1f3fb-200d-2640-fe0f\", 9, 18, 15, [\"\\uD83C\\uDFCB\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fc\": [\"1f3cb-1f3fc-200d-2640-fe0f\", 9, 19, 15, [\"\\uD83C\\uDFCB\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fd\": [\"1f3cb-1f3fd-200d-2640-fe0f\", 9, 20, 15, [\"\\uD83C\\uDFCB\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fe\": [\"1f3cb-1f3fe-200d-2640-fe0f\", 9, 21, 15, [\"\\uD83C\\uDFCB\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\"]],\n      \"1f3ff\": [\"1f3cb-1f3ff-200d-2640-fe0f\", 9, 22, 15, [\"\\uD83C\\uDFCB\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\"]]\n    },\n    \"1f3cb-fe0f-200d-2642-fe0f\": {\n      \"1f3fb\": [\"1f3cb-1f3fb-200d-2642-fe0f\", 9, 24, 15, [\"\\uD83C\\uDFCB\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\", \"\\uD83C\\uDFCB\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f3cb-1f3fc-200d-2642-fe0f\", 9, 25, 15, [\"\\uD83C\\uDFCB\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\", \"\\uD83C\\uDFCB\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f3cb-1f3fd-200d-2642-fe0f\", 9, 26, 15, [\"\\uD83C\\uDFCB\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\", \"\\uD83C\\uDFCB\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f3cb-1f3fe-200d-2642-fe0f\", 9, 27, 15, [\"\\uD83C\\uDFCB\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\", \"\\uD83C\\uDFCB\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f3cb-1f3ff-200d-2642-fe0f\", 9, 28, 15, [\"\\uD83C\\uDFCB\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\", \"\\uD83C\\uDFCB\\uD83C\\uDFFF\"]]\n    },\n    \"1f3cc-fe0f-200d-2640-fe0f\": {\n      \"1f3fb\": [\"1f3cc-1f3fb-200d-2640-fe0f\", 9, 36, 15, [\"\\uD83C\\uDFCC\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fc\": [\"1f3cc-1f3fc-200d-2640-fe0f\", 9, 37, 15, [\"\\uD83C\\uDFCC\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fd\": [\"1f3cc-1f3fd-200d-2640-fe0f\", 9, 38, 15, [\"\\uD83C\\uDFCC\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fe\": [\"1f3cc-1f3fe-200d-2640-fe0f\", 9, 39, 15, [\"\\uD83C\\uDFCC\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\"]],\n      \"1f3ff\": [\"1f3cc-1f3ff-200d-2640-fe0f\", 9, 40, 15, [\"\\uD83C\\uDFCC\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\"]]\n    },\n    \"1f3cc-fe0f-200d-2642-fe0f\": {\n      \"1f3fb\": [\"1f3cc-1f3fb-200d-2642-fe0f\", 9, 42, 15, [\"\\uD83C\\uDFCC\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\", \"\\uD83C\\uDFCC\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f3cc-1f3fc-200d-2642-fe0f\", 9, 43, 15, [\"\\uD83C\\uDFCC\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\", \"\\uD83C\\uDFCC\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f3cc-1f3fd-200d-2642-fe0f\", 9, 44, 15, [\"\\uD83C\\uDFCC\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\", \"\\uD83C\\uDFCC\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f3cc-1f3fe-200d-2642-fe0f\", 9, 45, 15, [\"\\uD83C\\uDFCC\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\", \"\\uD83C\\uDFCC\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f3cc-1f3ff-200d-2642-fe0f\", 9, 46, 15, [\"\\uD83C\\uDFCC\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\", \"\\uD83C\\uDFCC\\uD83C\\uDFFF\"]]\n    },\n    \"1f442\": {\n      \"1f3fb\": [\"1f442-1f3fb\", 11, 57, 15, [\"\\uD83D\\uDC42\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f442-1f3fc\", 11, 58, 15, [\"\\uD83D\\uDC42\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f442-1f3fd\", 11, 59, 15, [\"\\uD83D\\uDC42\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f442-1f3fe\", 11, 60, 15, [\"\\uD83D\\uDC42\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f442-1f3ff\", 12, 0, 15, [\"\\uD83D\\uDC42\\uD83C\\uDFFF\"]]\n    },\n    \"1f443\": {\n      \"1f3fb\": [\"1f443-1f3fb\", 12, 2, 15, [\"\\uD83D\\uDC43\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f443-1f3fc\", 12, 3, 15, [\"\\uD83D\\uDC43\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f443-1f3fd\", 12, 4, 15, [\"\\uD83D\\uDC43\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f443-1f3fe\", 12, 5, 15, [\"\\uD83D\\uDC43\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f443-1f3ff\", 12, 6, 15, [\"\\uD83D\\uDC43\\uD83C\\uDFFF\"]]\n    },\n    \"1f446\": {\n      \"1f3fb\": [\"1f446-1f3fb\", 12, 10, 15, [\"\\uD83D\\uDC46\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f446-1f3fc\", 12, 11, 15, [\"\\uD83D\\uDC46\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f446-1f3fd\", 12, 12, 15, [\"\\uD83D\\uDC46\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f446-1f3fe\", 12, 13, 15, [\"\\uD83D\\uDC46\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f446-1f3ff\", 12, 14, 15, [\"\\uD83D\\uDC46\\uD83C\\uDFFF\"]]\n    },\n    \"1f447\": {\n      \"1f3fb\": [\"1f447-1f3fb\", 12, 16, 15, [\"\\uD83D\\uDC47\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f447-1f3fc\", 12, 17, 15, [\"\\uD83D\\uDC47\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f447-1f3fd\", 12, 18, 15, [\"\\uD83D\\uDC47\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f447-1f3fe\", 12, 19, 15, [\"\\uD83D\\uDC47\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f447-1f3ff\", 12, 20, 15, [\"\\uD83D\\uDC47\\uD83C\\uDFFF\"]]\n    },\n    \"1f448\": {\n      \"1f3fb\": [\"1f448-1f3fb\", 12, 22, 15, [\"\\uD83D\\uDC48\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f448-1f3fc\", 12, 23, 15, [\"\\uD83D\\uDC48\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f448-1f3fd\", 12, 24, 15, [\"\\uD83D\\uDC48\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f448-1f3fe\", 12, 25, 15, [\"\\uD83D\\uDC48\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f448-1f3ff\", 12, 26, 15, [\"\\uD83D\\uDC48\\uD83C\\uDFFF\"]]\n    },\n    \"1f449\": {\n      \"1f3fb\": [\"1f449-1f3fb\", 12, 28, 15, [\"\\uD83D\\uDC49\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f449-1f3fc\", 12, 29, 15, [\"\\uD83D\\uDC49\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f449-1f3fd\", 12, 30, 15, [\"\\uD83D\\uDC49\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f449-1f3fe\", 12, 31, 15, [\"\\uD83D\\uDC49\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f449-1f3ff\", 12, 32, 15, [\"\\uD83D\\uDC49\\uD83C\\uDFFF\"]]\n    },\n    \"1f44a\": {\n      \"1f3fb\": [\"1f44a-1f3fb\", 12, 34, 15, [\"\\uD83D\\uDC4A\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f44a-1f3fc\", 12, 35, 15, [\"\\uD83D\\uDC4A\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f44a-1f3fd\", 12, 36, 15, [\"\\uD83D\\uDC4A\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f44a-1f3fe\", 12, 37, 15, [\"\\uD83D\\uDC4A\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f44a-1f3ff\", 12, 38, 15, [\"\\uD83D\\uDC4A\\uD83C\\uDFFF\"]]\n    },\n    \"1f44b\": {\n      \"1f3fb\": [\"1f44b-1f3fb\", 12, 40, 15, [\"\\uD83D\\uDC4B\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f44b-1f3fc\", 12, 41, 15, [\"\\uD83D\\uDC4B\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f44b-1f3fd\", 12, 42, 15, [\"\\uD83D\\uDC4B\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f44b-1f3fe\", 12, 43, 15, [\"\\uD83D\\uDC4B\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f44b-1f3ff\", 12, 44, 15, [\"\\uD83D\\uDC4B\\uD83C\\uDFFF\"]]\n    },\n    \"1f44c\": {\n      \"1f3fb\": [\"1f44c-1f3fb\", 12, 46, 15, [\"\\uD83D\\uDC4C\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f44c-1f3fc\", 12, 47, 15, [\"\\uD83D\\uDC4C\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f44c-1f3fd\", 12, 48, 15, [\"\\uD83D\\uDC4C\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f44c-1f3fe\", 12, 49, 15, [\"\\uD83D\\uDC4C\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f44c-1f3ff\", 12, 50, 15, [\"\\uD83D\\uDC4C\\uD83C\\uDFFF\"]]\n    },\n    \"1f44d\": {\n      \"1f3fb\": [\"1f44d-1f3fb\", 12, 52, 15, [\"\\uD83D\\uDC4D\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f44d-1f3fc\", 12, 53, 15, [\"\\uD83D\\uDC4D\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f44d-1f3fd\", 12, 54, 15, [\"\\uD83D\\uDC4D\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f44d-1f3fe\", 12, 55, 15, [\"\\uD83D\\uDC4D\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f44d-1f3ff\", 12, 56, 15, [\"\\uD83D\\uDC4D\\uD83C\\uDFFF\"]]\n    },\n    \"1f44e\": {\n      \"1f3fb\": [\"1f44e-1f3fb\", 12, 58, 15, [\"\\uD83D\\uDC4E\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f44e-1f3fc\", 12, 59, 15, [\"\\uD83D\\uDC4E\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f44e-1f3fd\", 12, 60, 15, [\"\\uD83D\\uDC4E\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f44e-1f3fe\", 13, 0, 15, [\"\\uD83D\\uDC4E\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f44e-1f3ff\", 13, 1, 15, [\"\\uD83D\\uDC4E\\uD83C\\uDFFF\"]]\n    },\n    \"1f44f\": {\n      \"1f3fb\": [\"1f44f-1f3fb\", 13, 3, 15, [\"\\uD83D\\uDC4F\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f44f-1f3fc\", 13, 4, 15, [\"\\uD83D\\uDC4F\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f44f-1f3fd\", 13, 5, 15, [\"\\uD83D\\uDC4F\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f44f-1f3fe\", 13, 6, 15, [\"\\uD83D\\uDC4F\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f44f-1f3ff\", 13, 7, 15, [\"\\uD83D\\uDC4F\\uD83C\\uDFFF\"]]\n    },\n    \"1f450\": {\n      \"1f3fb\": [\"1f450-1f3fb\", 13, 9, 15, [\"\\uD83D\\uDC50\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f450-1f3fc\", 13, 10, 15, [\"\\uD83D\\uDC50\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f450-1f3fd\", 13, 11, 15, [\"\\uD83D\\uDC50\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f450-1f3fe\", 13, 12, 15, [\"\\uD83D\\uDC50\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f450-1f3ff\", 13, 13, 15, [\"\\uD83D\\uDC50\\uD83C\\uDFFF\"]]\n    },\n    \"1f466\": {\n      \"1f3fb\": [\"1f466-1f3fb\", 13, 36, 15, [\"\\uD83D\\uDC66\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f466-1f3fc\", 13, 37, 15, [\"\\uD83D\\uDC66\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f466-1f3fd\", 13, 38, 15, [\"\\uD83D\\uDC66\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f466-1f3fe\", 13, 39, 15, [\"\\uD83D\\uDC66\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f466-1f3ff\", 13, 40, 15, [\"\\uD83D\\uDC66\\uD83C\\uDFFF\"]]\n    },\n    \"1f467\": {\n      \"1f3fb\": [\"1f467-1f3fb\", 13, 42, 15, [\"\\uD83D\\uDC67\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f467-1f3fc\", 13, 43, 15, [\"\\uD83D\\uDC67\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f467-1f3fd\", 13, 44, 15, [\"\\uD83D\\uDC67\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f467-1f3fe\", 13, 45, 15, [\"\\uD83D\\uDC67\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f467-1f3ff\", 13, 46, 15, [\"\\uD83D\\uDC67\\uD83C\\uDFFF\"]]\n    },\n    \"1f468-200d-1f33e\": {\n      \"1f3fb\": [\"1f468-1f3fb-200d-1f33e\", 13, 48, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFB\\u200D\\uD83C\\uDF3E\"]],\n      \"1f3fc\": [\"1f468-1f3fc-200d-1f33e\", 13, 49, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFC\\u200D\\uD83C\\uDF3E\"]],\n      \"1f3fd\": [\"1f468-1f3fd-200d-1f33e\", 13, 50, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFD\\u200D\\uD83C\\uDF3E\"]],\n      \"1f3fe\": [\"1f468-1f3fe-200d-1f33e\", 13, 51, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFE\\u200D\\uD83C\\uDF3E\"]],\n      \"1f3ff\": [\"1f468-1f3ff-200d-1f33e\", 13, 52, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFF\\u200D\\uD83C\\uDF3E\"]]\n    },\n    \"1f468-200d-1f373\": {\n      \"1f3fb\": [\"1f468-1f3fb-200d-1f373\", 13, 54, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFB\\u200D\\uD83C\\uDF73\"]],\n      \"1f3fc\": [\"1f468-1f3fc-200d-1f373\", 13, 55, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFC\\u200D\\uD83C\\uDF73\"]],\n      \"1f3fd\": [\"1f468-1f3fd-200d-1f373\", 13, 56, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFD\\u200D\\uD83C\\uDF73\"]],\n      \"1f3fe\": [\"1f468-1f3fe-200d-1f373\", 13, 57, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFE\\u200D\\uD83C\\uDF73\"]],\n      \"1f3ff\": [\"1f468-1f3ff-200d-1f373\", 13, 58, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFF\\u200D\\uD83C\\uDF73\"]]\n    },\n    \"1f468-200d-1f37c\": {\n      \"1f3fb\": [\"1f468-1f3fb-200d-1f37c\", 13, 60, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFB\\u200D\\uD83C\\uDF7C\"]],\n      \"1f3fc\": [\"1f468-1f3fc-200d-1f37c\", 14, 0, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFC\\u200D\\uD83C\\uDF7C\"]],\n      \"1f3fd\": [\"1f468-1f3fd-200d-1f37c\", 14, 1, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFD\\u200D\\uD83C\\uDF7C\"]],\n      \"1f3fe\": [\"1f468-1f3fe-200d-1f37c\", 14, 2, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFE\\u200D\\uD83C\\uDF7C\"]],\n      \"1f3ff\": [\"1f468-1f3ff-200d-1f37c\", 14, 3, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFF\\u200D\\uD83C\\uDF7C\"]]\n    },\n    \"1f468-200d-1f393\": {\n      \"1f3fb\": [\"1f468-1f3fb-200d-1f393\", 14, 5, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFB\\u200D\\uD83C\\uDF93\"]],\n      \"1f3fc\": [\"1f468-1f3fc-200d-1f393\", 14, 6, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFC\\u200D\\uD83C\\uDF93\"]],\n      \"1f3fd\": [\"1f468-1f3fd-200d-1f393\", 14, 7, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFD\\u200D\\uD83C\\uDF93\"]],\n      \"1f3fe\": [\"1f468-1f3fe-200d-1f393\", 14, 8, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFE\\u200D\\uD83C\\uDF93\"]],\n      \"1f3ff\": [\"1f468-1f3ff-200d-1f393\", 14, 9, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFF\\u200D\\uD83C\\uDF93\"]]\n    },\n    \"1f468-200d-1f3a4\": {\n      \"1f3fb\": [\"1f468-1f3fb-200d-1f3a4\", 14, 11, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFB\\u200D\\uD83C\\uDFA4\"]],\n      \"1f3fc\": [\"1f468-1f3fc-200d-1f3a4\", 14, 12, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFC\\u200D\\uD83C\\uDFA4\"]],\n      \"1f3fd\": [\"1f468-1f3fd-200d-1f3a4\", 14, 13, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFD\\u200D\\uD83C\\uDFA4\"]],\n      \"1f3fe\": [\"1f468-1f3fe-200d-1f3a4\", 14, 14, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFE\\u200D\\uD83C\\uDFA4\"]],\n      \"1f3ff\": [\"1f468-1f3ff-200d-1f3a4\", 14, 15, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFF\\u200D\\uD83C\\uDFA4\"]]\n    },\n    \"1f468-200d-1f3a8\": {\n      \"1f3fb\": [\"1f468-1f3fb-200d-1f3a8\", 14, 17, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFB\\u200D\\uD83C\\uDFA8\"]],\n      \"1f3fc\": [\"1f468-1f3fc-200d-1f3a8\", 14, 18, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFC\\u200D\\uD83C\\uDFA8\"]],\n      \"1f3fd\": [\"1f468-1f3fd-200d-1f3a8\", 14, 19, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFD\\u200D\\uD83C\\uDFA8\"]],\n      \"1f3fe\": [\"1f468-1f3fe-200d-1f3a8\", 14, 20, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFE\\u200D\\uD83C\\uDFA8\"]],\n      \"1f3ff\": [\"1f468-1f3ff-200d-1f3a8\", 14, 21, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFF\\u200D\\uD83C\\uDFA8\"]]\n    },\n    \"1f468-200d-1f3eb\": {\n      \"1f3fb\": [\"1f468-1f3fb-200d-1f3eb\", 14, 23, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFB\\u200D\\uD83C\\uDFEB\"]],\n      \"1f3fc\": [\"1f468-1f3fc-200d-1f3eb\", 14, 24, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFC\\u200D\\uD83C\\uDFEB\"]],\n      \"1f3fd\": [\"1f468-1f3fd-200d-1f3eb\", 14, 25, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFD\\u200D\\uD83C\\uDFEB\"]],\n      \"1f3fe\": [\"1f468-1f3fe-200d-1f3eb\", 14, 26, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFE\\u200D\\uD83C\\uDFEB\"]],\n      \"1f3ff\": [\"1f468-1f3ff-200d-1f3eb\", 14, 27, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFF\\u200D\\uD83C\\uDFEB\"]]\n    },\n    \"1f468-200d-1f3ed\": {\n      \"1f3fb\": [\"1f468-1f3fb-200d-1f3ed\", 14, 29, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFB\\u200D\\uD83C\\uDFED\"]],\n      \"1f3fc\": [\"1f468-1f3fc-200d-1f3ed\", 14, 30, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFC\\u200D\\uD83C\\uDFED\"]],\n      \"1f3fd\": [\"1f468-1f3fd-200d-1f3ed\", 14, 31, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFD\\u200D\\uD83C\\uDFED\"]],\n      \"1f3fe\": [\"1f468-1f3fe-200d-1f3ed\", 14, 32, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFE\\u200D\\uD83C\\uDFED\"]],\n      \"1f3ff\": [\"1f468-1f3ff-200d-1f3ed\", 14, 33, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFF\\u200D\\uD83C\\uDFED\"]]\n    },\n    \"1f468-200d-1f4bb\": {\n      \"1f3fb\": [\"1f468-1f3fb-200d-1f4bb\", 14, 50, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFB\\u200D\\uD83D\\uDCBB\"]],\n      \"1f3fc\": [\"1f468-1f3fc-200d-1f4bb\", 14, 51, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFC\\u200D\\uD83D\\uDCBB\"]],\n      \"1f3fd\": [\"1f468-1f3fd-200d-1f4bb\", 14, 52, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFD\\u200D\\uD83D\\uDCBB\"]],\n      \"1f3fe\": [\"1f468-1f3fe-200d-1f4bb\", 14, 53, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFE\\u200D\\uD83D\\uDCBB\"]],\n      \"1f3ff\": [\"1f468-1f3ff-200d-1f4bb\", 14, 54, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFF\\u200D\\uD83D\\uDCBB\"]]\n    },\n    \"1f468-200d-1f4bc\": {\n      \"1f3fb\": [\"1f468-1f3fb-200d-1f4bc\", 14, 56, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFB\\u200D\\uD83D\\uDCBC\"]],\n      \"1f3fc\": [\"1f468-1f3fc-200d-1f4bc\", 14, 57, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFC\\u200D\\uD83D\\uDCBC\"]],\n      \"1f3fd\": [\"1f468-1f3fd-200d-1f4bc\", 14, 58, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFD\\u200D\\uD83D\\uDCBC\"]],\n      \"1f3fe\": [\"1f468-1f3fe-200d-1f4bc\", 14, 59, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFE\\u200D\\uD83D\\uDCBC\"]],\n      \"1f3ff\": [\"1f468-1f3ff-200d-1f4bc\", 14, 60, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFF\\u200D\\uD83D\\uDCBC\"]]\n    },\n    \"1f468-200d-1f527\": {\n      \"1f3fb\": [\"1f468-1f3fb-200d-1f527\", 15, 1, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFB\\u200D\\uD83D\\uDD27\"]],\n      \"1f3fc\": [\"1f468-1f3fc-200d-1f527\", 15, 2, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFC\\u200D\\uD83D\\uDD27\"]],\n      \"1f3fd\": [\"1f468-1f3fd-200d-1f527\", 15, 3, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFD\\u200D\\uD83D\\uDD27\"]],\n      \"1f3fe\": [\"1f468-1f3fe-200d-1f527\", 15, 4, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFE\\u200D\\uD83D\\uDD27\"]],\n      \"1f3ff\": [\"1f468-1f3ff-200d-1f527\", 15, 5, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFF\\u200D\\uD83D\\uDD27\"]]\n    },\n    \"1f468-200d-1f52c\": {\n      \"1f3fb\": [\"1f468-1f3fb-200d-1f52c\", 15, 7, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFB\\u200D\\uD83D\\uDD2C\"]],\n      \"1f3fc\": [\"1f468-1f3fc-200d-1f52c\", 15, 8, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFC\\u200D\\uD83D\\uDD2C\"]],\n      \"1f3fd\": [\"1f468-1f3fd-200d-1f52c\", 15, 9, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFD\\u200D\\uD83D\\uDD2C\"]],\n      \"1f3fe\": [\"1f468-1f3fe-200d-1f52c\", 15, 10, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFE\\u200D\\uD83D\\uDD2C\"]],\n      \"1f3ff\": [\"1f468-1f3ff-200d-1f52c\", 15, 11, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFF\\u200D\\uD83D\\uDD2C\"]]\n    },\n    \"1f468-200d-1f680\": {\n      \"1f3fb\": [\"1f468-1f3fb-200d-1f680\", 15, 13, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFB\\u200D\\uD83D\\uDE80\"]],\n      \"1f3fc\": [\"1f468-1f3fc-200d-1f680\", 15, 14, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFC\\u200D\\uD83D\\uDE80\"]],\n      \"1f3fd\": [\"1f468-1f3fd-200d-1f680\", 15, 15, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFD\\u200D\\uD83D\\uDE80\"]],\n      \"1f3fe\": [\"1f468-1f3fe-200d-1f680\", 15, 16, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFE\\u200D\\uD83D\\uDE80\"]],\n      \"1f3ff\": [\"1f468-1f3ff-200d-1f680\", 15, 17, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFF\\u200D\\uD83D\\uDE80\"]]\n    },\n    \"1f468-200d-1f692\": {\n      \"1f3fb\": [\"1f468-1f3fb-200d-1f692\", 15, 19, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFB\\u200D\\uD83D\\uDE92\"]],\n      \"1f3fc\": [\"1f468-1f3fc-200d-1f692\", 15, 20, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFC\\u200D\\uD83D\\uDE92\"]],\n      \"1f3fd\": [\"1f468-1f3fd-200d-1f692\", 15, 21, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFD\\u200D\\uD83D\\uDE92\"]],\n      \"1f3fe\": [\"1f468-1f3fe-200d-1f692\", 15, 22, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFE\\u200D\\uD83D\\uDE92\"]],\n      \"1f3ff\": [\"1f468-1f3ff-200d-1f692\", 15, 23, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFF\\u200D\\uD83D\\uDE92\"]]\n    },\n    \"1f468-200d-1f9af\": {\n      \"1f3fb\": [\"1f468-1f3fb-200d-1f9af\", 15, 25, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFB\\u200D\\uD83E\\uDDAF\"]],\n      \"1f3fc\": [\"1f468-1f3fc-200d-1f9af\", 15, 26, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFC\\u200D\\uD83E\\uDDAF\"]],\n      \"1f3fd\": [\"1f468-1f3fd-200d-1f9af\", 15, 27, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFD\\u200D\\uD83E\\uDDAF\"]],\n      \"1f3fe\": [\"1f468-1f3fe-200d-1f9af\", 15, 28, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFE\\u200D\\uD83E\\uDDAF\"]],\n      \"1f3ff\": [\"1f468-1f3ff-200d-1f9af\", 15, 29, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFF\\u200D\\uD83E\\uDDAF\"]]\n    },\n    \"1f468-200d-1f9b0\": {\n      \"1f3fb\": [\"1f468-1f3fb-200d-1f9b0\", 15, 31, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFB\\u200D\\uD83E\\uDDB0\"]],\n      \"1f3fc\": [\"1f468-1f3fc-200d-1f9b0\", 15, 32, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFC\\u200D\\uD83E\\uDDB0\"]],\n      \"1f3fd\": [\"1f468-1f3fd-200d-1f9b0\", 15, 33, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFD\\u200D\\uD83E\\uDDB0\"]],\n      \"1f3fe\": [\"1f468-1f3fe-200d-1f9b0\", 15, 34, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFE\\u200D\\uD83E\\uDDB0\"]],\n      \"1f3ff\": [\"1f468-1f3ff-200d-1f9b0\", 15, 35, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFF\\u200D\\uD83E\\uDDB0\"]]\n    },\n    \"1f468-200d-1f9b1\": {\n      \"1f3fb\": [\"1f468-1f3fb-200d-1f9b1\", 15, 37, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFB\\u200D\\uD83E\\uDDB1\"]],\n      \"1f3fc\": [\"1f468-1f3fc-200d-1f9b1\", 15, 38, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFC\\u200D\\uD83E\\uDDB1\"]],\n      \"1f3fd\": [\"1f468-1f3fd-200d-1f9b1\", 15, 39, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFD\\u200D\\uD83E\\uDDB1\"]],\n      \"1f3fe\": [\"1f468-1f3fe-200d-1f9b1\", 15, 40, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFE\\u200D\\uD83E\\uDDB1\"]],\n      \"1f3ff\": [\"1f468-1f3ff-200d-1f9b1\", 15, 41, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFF\\u200D\\uD83E\\uDDB1\"]]\n    },\n    \"1f468-200d-1f9b2\": {\n      \"1f3fb\": [\"1f468-1f3fb-200d-1f9b2\", 15, 43, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFB\\u200D\\uD83E\\uDDB2\"]],\n      \"1f3fc\": [\"1f468-1f3fc-200d-1f9b2\", 15, 44, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFC\\u200D\\uD83E\\uDDB2\"]],\n      \"1f3fd\": [\"1f468-1f3fd-200d-1f9b2\", 15, 45, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFD\\u200D\\uD83E\\uDDB2\"]],\n      \"1f3fe\": [\"1f468-1f3fe-200d-1f9b2\", 15, 46, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFE\\u200D\\uD83E\\uDDB2\"]],\n      \"1f3ff\": [\"1f468-1f3ff-200d-1f9b2\", 15, 47, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFF\\u200D\\uD83E\\uDDB2\"]]\n    },\n    \"1f468-200d-1f9b3\": {\n      \"1f3fb\": [\"1f468-1f3fb-200d-1f9b3\", 15, 49, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFB\\u200D\\uD83E\\uDDB3\"]],\n      \"1f3fc\": [\"1f468-1f3fc-200d-1f9b3\", 15, 50, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFC\\u200D\\uD83E\\uDDB3\"]],\n      \"1f3fd\": [\"1f468-1f3fd-200d-1f9b3\", 15, 51, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFD\\u200D\\uD83E\\uDDB3\"]],\n      \"1f3fe\": [\"1f468-1f3fe-200d-1f9b3\", 15, 52, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFE\\u200D\\uD83E\\uDDB3\"]],\n      \"1f3ff\": [\"1f468-1f3ff-200d-1f9b3\", 15, 53, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFF\\u200D\\uD83E\\uDDB3\"]]\n    },\n    \"1f468-200d-1f9bc\": {\n      \"1f3fb\": [\"1f468-1f3fb-200d-1f9bc\", 15, 55, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFB\\u200D\\uD83E\\uDDBC\"]],\n      \"1f3fc\": [\"1f468-1f3fc-200d-1f9bc\", 15, 56, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFC\\u200D\\uD83E\\uDDBC\"]],\n      \"1f3fd\": [\"1f468-1f3fd-200d-1f9bc\", 15, 57, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFD\\u200D\\uD83E\\uDDBC\"]],\n      \"1f3fe\": [\"1f468-1f3fe-200d-1f9bc\", 15, 58, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFE\\u200D\\uD83E\\uDDBC\"]],\n      \"1f3ff\": [\"1f468-1f3ff-200d-1f9bc\", 15, 59, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFF\\u200D\\uD83E\\uDDBC\"]]\n    },\n    \"1f468-200d-1f9bd\": {\n      \"1f3fb\": [\"1f468-1f3fb-200d-1f9bd\", 16, 0, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFB\\u200D\\uD83E\\uDDBD\"]],\n      \"1f3fc\": [\"1f468-1f3fc-200d-1f9bd\", 16, 1, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFC\\u200D\\uD83E\\uDDBD\"]],\n      \"1f3fd\": [\"1f468-1f3fd-200d-1f9bd\", 16, 2, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFD\\u200D\\uD83E\\uDDBD\"]],\n      \"1f3fe\": [\"1f468-1f3fe-200d-1f9bd\", 16, 3, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFE\\u200D\\uD83E\\uDDBD\"]],\n      \"1f3ff\": [\"1f468-1f3ff-200d-1f9bd\", 16, 4, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFF\\u200D\\uD83E\\uDDBD\"]]\n    },\n    \"1f468-200d-2695-fe0f\": {\n      \"1f3fb\": [\"1f468-1f3fb-200d-2695-fe0f\", 16, 6, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFB\\u200D\\u2695\\uFE0F\"]],\n      \"1f3fc\": [\"1f468-1f3fc-200d-2695-fe0f\", 16, 7, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFC\\u200D\\u2695\\uFE0F\"]],\n      \"1f3fd\": [\"1f468-1f3fd-200d-2695-fe0f\", 16, 8, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFD\\u200D\\u2695\\uFE0F\"]],\n      \"1f3fe\": [\"1f468-1f3fe-200d-2695-fe0f\", 16, 9, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFE\\u200D\\u2695\\uFE0F\"]],\n      \"1f3ff\": [\"1f468-1f3ff-200d-2695-fe0f\", 16, 10, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFF\\u200D\\u2695\\uFE0F\"]]\n    },\n    \"1f468-200d-2696-fe0f\": {\n      \"1f3fb\": [\"1f468-1f3fb-200d-2696-fe0f\", 16, 12, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFB\\u200D\\u2696\\uFE0F\"]],\n      \"1f3fc\": [\"1f468-1f3fc-200d-2696-fe0f\", 16, 13, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFC\\u200D\\u2696\\uFE0F\"]],\n      \"1f3fd\": [\"1f468-1f3fd-200d-2696-fe0f\", 16, 14, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFD\\u200D\\u2696\\uFE0F\"]],\n      \"1f3fe\": [\"1f468-1f3fe-200d-2696-fe0f\", 16, 15, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFE\\u200D\\u2696\\uFE0F\"]],\n      \"1f3ff\": [\"1f468-1f3ff-200d-2696-fe0f\", 16, 16, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFF\\u200D\\u2696\\uFE0F\"]]\n    },\n    \"1f468-200d-2708-fe0f\": {\n      \"1f3fb\": [\"1f468-1f3fb-200d-2708-fe0f\", 16, 18, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFB\\u200D\\u2708\\uFE0F\"]],\n      \"1f3fc\": [\"1f468-1f3fc-200d-2708-fe0f\", 16, 19, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFC\\u200D\\u2708\\uFE0F\"]],\n      \"1f3fd\": [\"1f468-1f3fd-200d-2708-fe0f\", 16, 20, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFD\\u200D\\u2708\\uFE0F\"]],\n      \"1f3fe\": [\"1f468-1f3fe-200d-2708-fe0f\", 16, 21, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFE\\u200D\\u2708\\uFE0F\"]],\n      \"1f3ff\": [\"1f468-1f3ff-200d-2708-fe0f\", 16, 22, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFF\\u200D\\u2708\\uFE0F\"]]\n    },\n    \"1f468-200d-2764-fe0f-200d-1f468\": {\n      \"1f3fb-1f3fb\": [\"1f468-1f3fb-200d-2764-fe0f-200d-1f468-1f3fb\", 16, 24, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB\"]],\n      \"1f3fb-1f3fc\": [\"1f468-1f3fb-200d-2764-fe0f-200d-1f468-1f3fc\", 16, 25, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFC\"]],\n      \"1f3fb-1f3fd\": [\"1f468-1f3fb-200d-2764-fe0f-200d-1f468-1f3fd\", 16, 26, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFD\"]],\n      \"1f3fb-1f3fe\": [\"1f468-1f3fb-200d-2764-fe0f-200d-1f468-1f3fe\", 16, 27, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFE\"]],\n      \"1f3fb-1f3ff\": [\"1f468-1f3fb-200d-2764-fe0f-200d-1f468-1f3ff\", 16, 28, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFF\"]],\n      \"1f3fc-1f3fb\": [\"1f468-1f3fc-200d-2764-fe0f-200d-1f468-1f3fb\", 16, 29, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFC\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB\"]],\n      \"1f3fc-1f3fc\": [\"1f468-1f3fc-200d-2764-fe0f-200d-1f468-1f3fc\", 16, 30, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFC\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFC\"]],\n      \"1f3fc-1f3fd\": [\"1f468-1f3fc-200d-2764-fe0f-200d-1f468-1f3fd\", 16, 31, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFC\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFD\"]],\n      \"1f3fc-1f3fe\": [\"1f468-1f3fc-200d-2764-fe0f-200d-1f468-1f3fe\", 16, 32, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFC\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFE\"]],\n      \"1f3fc-1f3ff\": [\"1f468-1f3fc-200d-2764-fe0f-200d-1f468-1f3ff\", 16, 33, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFC\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFF\"]],\n      \"1f3fd-1f3fb\": [\"1f468-1f3fd-200d-2764-fe0f-200d-1f468-1f3fb\", 16, 34, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFD\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB\"]],\n      \"1f3fd-1f3fc\": [\"1f468-1f3fd-200d-2764-fe0f-200d-1f468-1f3fc\", 16, 35, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFD\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFC\"]],\n      \"1f3fd-1f3fd\": [\"1f468-1f3fd-200d-2764-fe0f-200d-1f468-1f3fd\", 16, 36, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFD\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFD\"]],\n      \"1f3fd-1f3fe\": [\"1f468-1f3fd-200d-2764-fe0f-200d-1f468-1f3fe\", 16, 37, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFD\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFE\"]],\n      \"1f3fd-1f3ff\": [\"1f468-1f3fd-200d-2764-fe0f-200d-1f468-1f3ff\", 16, 38, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFD\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFF\"]],\n      \"1f3fe-1f3fb\": [\"1f468-1f3fe-200d-2764-fe0f-200d-1f468-1f3fb\", 16, 39, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFE\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB\"]],\n      \"1f3fe-1f3fc\": [\"1f468-1f3fe-200d-2764-fe0f-200d-1f468-1f3fc\", 16, 40, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFE\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFC\"]],\n      \"1f3fe-1f3fd\": [\"1f468-1f3fe-200d-2764-fe0f-200d-1f468-1f3fd\", 16, 41, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFE\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFD\"]],\n      \"1f3fe-1f3fe\": [\"1f468-1f3fe-200d-2764-fe0f-200d-1f468-1f3fe\", 16, 42, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFE\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFE\"]],\n      \"1f3fe-1f3ff\": [\"1f468-1f3fe-200d-2764-fe0f-200d-1f468-1f3ff\", 16, 43, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFE\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFF\"]],\n      \"1f3ff-1f3fb\": [\"1f468-1f3ff-200d-2764-fe0f-200d-1f468-1f3fb\", 16, 44, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFF\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB\"]],\n      \"1f3ff-1f3fc\": [\"1f468-1f3ff-200d-2764-fe0f-200d-1f468-1f3fc\", 16, 45, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFF\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFC\"]],\n      \"1f3ff-1f3fd\": [\"1f468-1f3ff-200d-2764-fe0f-200d-1f468-1f3fd\", 16, 46, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFF\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFD\"]],\n      \"1f3ff-1f3fe\": [\"1f468-1f3ff-200d-2764-fe0f-200d-1f468-1f3fe\", 16, 47, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFF\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFE\"]],\n      \"1f3ff-1f3ff\": [\"1f468-1f3ff-200d-2764-fe0f-200d-1f468-1f3ff\", 16, 48, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFF\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFF\"]]\n    },\n    \"1f468-200d-2764-fe0f-200d-1f48b-200d-1f468\": {\n      \"1f3fb-1f3fb\": [\"1f468-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb\", 16, 50, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB\"]],\n      \"1f3fb-1f3fc\": [\"1f468-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc\", 16, 51, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFC\"]],\n      \"1f3fb-1f3fd\": [\"1f468-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd\", 16, 52, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFD\"]],\n      \"1f3fb-1f3fe\": [\"1f468-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe\", 16, 53, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFE\"]],\n      \"1f3fb-1f3ff\": [\"1f468-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff\", 16, 54, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFF\"]],\n      \"1f3fc-1f3fb\": [\"1f468-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb\", 16, 55, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFC\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB\"]],\n      \"1f3fc-1f3fc\": [\"1f468-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc\", 16, 56, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFC\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFC\"]],\n      \"1f3fc-1f3fd\": [\"1f468-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd\", 16, 57, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFC\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFD\"]],\n      \"1f3fc-1f3fe\": [\"1f468-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe\", 16, 58, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFC\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFE\"]],\n      \"1f3fc-1f3ff\": [\"1f468-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff\", 16, 59, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFC\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFF\"]],\n      \"1f3fd-1f3fb\": [\"1f468-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb\", 16, 60, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFD\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB\"]],\n      \"1f3fd-1f3fc\": [\"1f468-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc\", 17, 0, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFD\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFC\"]],\n      \"1f3fd-1f3fd\": [\"1f468-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd\", 17, 1, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFD\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFD\"]],\n      \"1f3fd-1f3fe\": [\"1f468-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe\", 17, 2, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFD\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFE\"]],\n      \"1f3fd-1f3ff\": [\"1f468-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff\", 17, 3, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFD\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFF\"]],\n      \"1f3fe-1f3fb\": [\"1f468-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb\", 17, 4, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFE\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB\"]],\n      \"1f3fe-1f3fc\": [\"1f468-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc\", 17, 5, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFE\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFC\"]],\n      \"1f3fe-1f3fd\": [\"1f468-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd\", 17, 6, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFE\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFD\"]],\n      \"1f3fe-1f3fe\": [\"1f468-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe\", 17, 7, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFE\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFE\"]],\n      \"1f3fe-1f3ff\": [\"1f468-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff\", 17, 8, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFE\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFF\"]],\n      \"1f3ff-1f3fb\": [\"1f468-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb\", 17, 9, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFF\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB\"]],\n      \"1f3ff-1f3fc\": [\"1f468-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc\", 17, 10, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFF\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFC\"]],\n      \"1f3ff-1f3fd\": [\"1f468-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd\", 17, 11, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFF\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFD\"]],\n      \"1f3ff-1f3fe\": [\"1f468-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe\", 17, 12, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFF\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFE\"]],\n      \"1f3ff-1f3ff\": [\"1f468-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff\", 17, 13, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFF\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFF\"]]\n    },\n    \"1f468\": {\n      \"1f3fb\": [\"1f468-1f3fb\", 17, 15, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f468-1f3fc\", 17, 16, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f468-1f3fd\", 17, 17, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f468-1f3fe\", 17, 18, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f468-1f3ff\", 17, 19, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFF\"]]\n    },\n    \"1f469-200d-1f33e\": {\n      \"1f3fb\": [\"1f469-1f3fb-200d-1f33e\", 17, 21, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\uD83C\\uDF3E\"]],\n      \"1f3fc\": [\"1f469-1f3fc-200d-1f33e\", 17, 22, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83C\\uDF3E\"]],\n      \"1f3fd\": [\"1f469-1f3fd-200d-1f33e\", 17, 23, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83C\\uDF3E\"]],\n      \"1f3fe\": [\"1f469-1f3fe-200d-1f33e\", 17, 24, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83C\\uDF3E\"]],\n      \"1f3ff\": [\"1f469-1f3ff-200d-1f33e\", 17, 25, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83C\\uDF3E\"]]\n    },\n    \"1f469-200d-1f373\": {\n      \"1f3fb\": [\"1f469-1f3fb-200d-1f373\", 17, 27, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\uD83C\\uDF73\"]],\n      \"1f3fc\": [\"1f469-1f3fc-200d-1f373\", 17, 28, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83C\\uDF73\"]],\n      \"1f3fd\": [\"1f469-1f3fd-200d-1f373\", 17, 29, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83C\\uDF73\"]],\n      \"1f3fe\": [\"1f469-1f3fe-200d-1f373\", 17, 30, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83C\\uDF73\"]],\n      \"1f3ff\": [\"1f469-1f3ff-200d-1f373\", 17, 31, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83C\\uDF73\"]]\n    },\n    \"1f469-200d-1f37c\": {\n      \"1f3fb\": [\"1f469-1f3fb-200d-1f37c\", 17, 33, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\uD83C\\uDF7C\"]],\n      \"1f3fc\": [\"1f469-1f3fc-200d-1f37c\", 17, 34, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83C\\uDF7C\"]],\n      \"1f3fd\": [\"1f469-1f3fd-200d-1f37c\", 17, 35, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83C\\uDF7C\"]],\n      \"1f3fe\": [\"1f469-1f3fe-200d-1f37c\", 17, 36, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83C\\uDF7C\"]],\n      \"1f3ff\": [\"1f469-1f3ff-200d-1f37c\", 17, 37, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83C\\uDF7C\"]]\n    },\n    \"1f469-200d-1f393\": {\n      \"1f3fb\": [\"1f469-1f3fb-200d-1f393\", 17, 39, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\uD83C\\uDF93\"]],\n      \"1f3fc\": [\"1f469-1f3fc-200d-1f393\", 17, 40, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83C\\uDF93\"]],\n      \"1f3fd\": [\"1f469-1f3fd-200d-1f393\", 17, 41, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83C\\uDF93\"]],\n      \"1f3fe\": [\"1f469-1f3fe-200d-1f393\", 17, 42, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83C\\uDF93\"]],\n      \"1f3ff\": [\"1f469-1f3ff-200d-1f393\", 17, 43, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83C\\uDF93\"]]\n    },\n    \"1f469-200d-1f3a4\": {\n      \"1f3fb\": [\"1f469-1f3fb-200d-1f3a4\", 17, 45, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\uD83C\\uDFA4\"]],\n      \"1f3fc\": [\"1f469-1f3fc-200d-1f3a4\", 17, 46, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83C\\uDFA4\"]],\n      \"1f3fd\": [\"1f469-1f3fd-200d-1f3a4\", 17, 47, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83C\\uDFA4\"]],\n      \"1f3fe\": [\"1f469-1f3fe-200d-1f3a4\", 17, 48, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83C\\uDFA4\"]],\n      \"1f3ff\": [\"1f469-1f3ff-200d-1f3a4\", 17, 49, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83C\\uDFA4\"]]\n    },\n    \"1f469-200d-1f3a8\": {\n      \"1f3fb\": [\"1f469-1f3fb-200d-1f3a8\", 17, 51, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\uD83C\\uDFA8\"]],\n      \"1f3fc\": [\"1f469-1f3fc-200d-1f3a8\", 17, 52, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83C\\uDFA8\"]],\n      \"1f3fd\": [\"1f469-1f3fd-200d-1f3a8\", 17, 53, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83C\\uDFA8\"]],\n      \"1f3fe\": [\"1f469-1f3fe-200d-1f3a8\", 17, 54, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83C\\uDFA8\"]],\n      \"1f3ff\": [\"1f469-1f3ff-200d-1f3a8\", 17, 55, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83C\\uDFA8\"]]\n    },\n    \"1f469-200d-1f3eb\": {\n      \"1f3fb\": [\"1f469-1f3fb-200d-1f3eb\", 17, 57, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\uD83C\\uDFEB\"]],\n      \"1f3fc\": [\"1f469-1f3fc-200d-1f3eb\", 17, 58, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83C\\uDFEB\"]],\n      \"1f3fd\": [\"1f469-1f3fd-200d-1f3eb\", 17, 59, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83C\\uDFEB\"]],\n      \"1f3fe\": [\"1f469-1f3fe-200d-1f3eb\", 17, 60, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83C\\uDFEB\"]],\n      \"1f3ff\": [\"1f469-1f3ff-200d-1f3eb\", 18, 0, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83C\\uDFEB\"]]\n    },\n    \"1f469-200d-1f3ed\": {\n      \"1f3fb\": [\"1f469-1f3fb-200d-1f3ed\", 18, 2, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\uD83C\\uDFED\"]],\n      \"1f3fc\": [\"1f469-1f3fc-200d-1f3ed\", 18, 3, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83C\\uDFED\"]],\n      \"1f3fd\": [\"1f469-1f3fd-200d-1f3ed\", 18, 4, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83C\\uDFED\"]],\n      \"1f3fe\": [\"1f469-1f3fe-200d-1f3ed\", 18, 5, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83C\\uDFED\"]],\n      \"1f3ff\": [\"1f469-1f3ff-200d-1f3ed\", 18, 6, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83C\\uDFED\"]]\n    },\n    \"1f469-200d-1f4bb\": {\n      \"1f3fb\": [\"1f469-1f3fb-200d-1f4bb\", 18, 18, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\uD83D\\uDCBB\"]],\n      \"1f3fc\": [\"1f469-1f3fc-200d-1f4bb\", 18, 19, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83D\\uDCBB\"]],\n      \"1f3fd\": [\"1f469-1f3fd-200d-1f4bb\", 18, 20, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83D\\uDCBB\"]],\n      \"1f3fe\": [\"1f469-1f3fe-200d-1f4bb\", 18, 21, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83D\\uDCBB\"]],\n      \"1f3ff\": [\"1f469-1f3ff-200d-1f4bb\", 18, 22, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83D\\uDCBB\"]]\n    },\n    \"1f469-200d-1f4bc\": {\n      \"1f3fb\": [\"1f469-1f3fb-200d-1f4bc\", 18, 24, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\uD83D\\uDCBC\"]],\n      \"1f3fc\": [\"1f469-1f3fc-200d-1f4bc\", 18, 25, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83D\\uDCBC\"]],\n      \"1f3fd\": [\"1f469-1f3fd-200d-1f4bc\", 18, 26, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83D\\uDCBC\"]],\n      \"1f3fe\": [\"1f469-1f3fe-200d-1f4bc\", 18, 27, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83D\\uDCBC\"]],\n      \"1f3ff\": [\"1f469-1f3ff-200d-1f4bc\", 18, 28, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83D\\uDCBC\"]]\n    },\n    \"1f469-200d-1f527\": {\n      \"1f3fb\": [\"1f469-1f3fb-200d-1f527\", 18, 30, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\uD83D\\uDD27\"]],\n      \"1f3fc\": [\"1f469-1f3fc-200d-1f527\", 18, 31, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83D\\uDD27\"]],\n      \"1f3fd\": [\"1f469-1f3fd-200d-1f527\", 18, 32, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83D\\uDD27\"]],\n      \"1f3fe\": [\"1f469-1f3fe-200d-1f527\", 18, 33, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83D\\uDD27\"]],\n      \"1f3ff\": [\"1f469-1f3ff-200d-1f527\", 18, 34, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83D\\uDD27\"]]\n    },\n    \"1f469-200d-1f52c\": {\n      \"1f3fb\": [\"1f469-1f3fb-200d-1f52c\", 18, 36, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\uD83D\\uDD2C\"]],\n      \"1f3fc\": [\"1f469-1f3fc-200d-1f52c\", 18, 37, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83D\\uDD2C\"]],\n      \"1f3fd\": [\"1f469-1f3fd-200d-1f52c\", 18, 38, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83D\\uDD2C\"]],\n      \"1f3fe\": [\"1f469-1f3fe-200d-1f52c\", 18, 39, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83D\\uDD2C\"]],\n      \"1f3ff\": [\"1f469-1f3ff-200d-1f52c\", 18, 40, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83D\\uDD2C\"]]\n    },\n    \"1f469-200d-1f680\": {\n      \"1f3fb\": [\"1f469-1f3fb-200d-1f680\", 18, 42, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\uD83D\\uDE80\"]],\n      \"1f3fc\": [\"1f469-1f3fc-200d-1f680\", 18, 43, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83D\\uDE80\"]],\n      \"1f3fd\": [\"1f469-1f3fd-200d-1f680\", 18, 44, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83D\\uDE80\"]],\n      \"1f3fe\": [\"1f469-1f3fe-200d-1f680\", 18, 45, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83D\\uDE80\"]],\n      \"1f3ff\": [\"1f469-1f3ff-200d-1f680\", 18, 46, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83D\\uDE80\"]]\n    },\n    \"1f469-200d-1f692\": {\n      \"1f3fb\": [\"1f469-1f3fb-200d-1f692\", 18, 48, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\uD83D\\uDE92\"]],\n      \"1f3fc\": [\"1f469-1f3fc-200d-1f692\", 18, 49, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83D\\uDE92\"]],\n      \"1f3fd\": [\"1f469-1f3fd-200d-1f692\", 18, 50, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83D\\uDE92\"]],\n      \"1f3fe\": [\"1f469-1f3fe-200d-1f692\", 18, 51, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83D\\uDE92\"]],\n      \"1f3ff\": [\"1f469-1f3ff-200d-1f692\", 18, 52, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83D\\uDE92\"]]\n    },\n    \"1f469-200d-1f9af\": {\n      \"1f3fb\": [\"1f469-1f3fb-200d-1f9af\", 18, 54, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\uD83E\\uDDAF\"]],\n      \"1f3fc\": [\"1f469-1f3fc-200d-1f9af\", 18, 55, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDDAF\"]],\n      \"1f3fd\": [\"1f469-1f3fd-200d-1f9af\", 18, 56, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDDAF\"]],\n      \"1f3fe\": [\"1f469-1f3fe-200d-1f9af\", 18, 57, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDDAF\"]],\n      \"1f3ff\": [\"1f469-1f3ff-200d-1f9af\", 18, 58, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDDAF\"]]\n    },\n    \"1f469-200d-1f9b0\": {\n      \"1f3fb\": [\"1f469-1f3fb-200d-1f9b0\", 18, 60, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\uD83E\\uDDB0\"]],\n      \"1f3fc\": [\"1f469-1f3fc-200d-1f9b0\", 19, 0, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDDB0\"]],\n      \"1f3fd\": [\"1f469-1f3fd-200d-1f9b0\", 19, 1, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDDB0\"]],\n      \"1f3fe\": [\"1f469-1f3fe-200d-1f9b0\", 19, 2, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDDB0\"]],\n      \"1f3ff\": [\"1f469-1f3ff-200d-1f9b0\", 19, 3, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDDB0\"]]\n    },\n    \"1f469-200d-1f9b1\": {\n      \"1f3fb\": [\"1f469-1f3fb-200d-1f9b1\", 19, 5, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\uD83E\\uDDB1\"]],\n      \"1f3fc\": [\"1f469-1f3fc-200d-1f9b1\", 19, 6, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDDB1\"]],\n      \"1f3fd\": [\"1f469-1f3fd-200d-1f9b1\", 19, 7, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDDB1\"]],\n      \"1f3fe\": [\"1f469-1f3fe-200d-1f9b1\", 19, 8, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDDB1\"]],\n      \"1f3ff\": [\"1f469-1f3ff-200d-1f9b1\", 19, 9, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDDB1\"]]\n    },\n    \"1f469-200d-1f9b2\": {\n      \"1f3fb\": [\"1f469-1f3fb-200d-1f9b2\", 19, 11, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\uD83E\\uDDB2\"]],\n      \"1f3fc\": [\"1f469-1f3fc-200d-1f9b2\", 19, 12, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDDB2\"]],\n      \"1f3fd\": [\"1f469-1f3fd-200d-1f9b2\", 19, 13, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDDB2\"]],\n      \"1f3fe\": [\"1f469-1f3fe-200d-1f9b2\", 19, 14, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDDB2\"]],\n      \"1f3ff\": [\"1f469-1f3ff-200d-1f9b2\", 19, 15, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDDB2\"]]\n    },\n    \"1f469-200d-1f9b3\": {\n      \"1f3fb\": [\"1f469-1f3fb-200d-1f9b3\", 19, 17, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\uD83E\\uDDB3\"]],\n      \"1f3fc\": [\"1f469-1f3fc-200d-1f9b3\", 19, 18, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDDB3\"]],\n      \"1f3fd\": [\"1f469-1f3fd-200d-1f9b3\", 19, 19, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDDB3\"]],\n      \"1f3fe\": [\"1f469-1f3fe-200d-1f9b3\", 19, 20, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDDB3\"]],\n      \"1f3ff\": [\"1f469-1f3ff-200d-1f9b3\", 19, 21, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDDB3\"]]\n    },\n    \"1f469-200d-1f9bc\": {\n      \"1f3fb\": [\"1f469-1f3fb-200d-1f9bc\", 19, 23, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\uD83E\\uDDBC\"]],\n      \"1f3fc\": [\"1f469-1f3fc-200d-1f9bc\", 19, 24, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDDBC\"]],\n      \"1f3fd\": [\"1f469-1f3fd-200d-1f9bc\", 19, 25, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDDBC\"]],\n      \"1f3fe\": [\"1f469-1f3fe-200d-1f9bc\", 19, 26, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDDBC\"]],\n      \"1f3ff\": [\"1f469-1f3ff-200d-1f9bc\", 19, 27, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDDBC\"]]\n    },\n    \"1f469-200d-1f9bd\": {\n      \"1f3fb\": [\"1f469-1f3fb-200d-1f9bd\", 19, 29, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\uD83E\\uDDBD\"]],\n      \"1f3fc\": [\"1f469-1f3fc-200d-1f9bd\", 19, 30, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDDBD\"]],\n      \"1f3fd\": [\"1f469-1f3fd-200d-1f9bd\", 19, 31, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDDBD\"]],\n      \"1f3fe\": [\"1f469-1f3fe-200d-1f9bd\", 19, 32, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDDBD\"]],\n      \"1f3ff\": [\"1f469-1f3ff-200d-1f9bd\", 19, 33, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDDBD\"]]\n    },\n    \"1f469-200d-2695-fe0f\": {\n      \"1f3fb\": [\"1f469-1f3fb-200d-2695-fe0f\", 19, 35, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\u2695\\uFE0F\"]],\n      \"1f3fc\": [\"1f469-1f3fc-200d-2695-fe0f\", 19, 36, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\u2695\\uFE0F\"]],\n      \"1f3fd\": [\"1f469-1f3fd-200d-2695-fe0f\", 19, 37, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\u2695\\uFE0F\"]],\n      \"1f3fe\": [\"1f469-1f3fe-200d-2695-fe0f\", 19, 38, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\u2695\\uFE0F\"]],\n      \"1f3ff\": [\"1f469-1f3ff-200d-2695-fe0f\", 19, 39, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\u2695\\uFE0F\"]]\n    },\n    \"1f469-200d-2696-fe0f\": {\n      \"1f3fb\": [\"1f469-1f3fb-200d-2696-fe0f\", 19, 41, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\u2696\\uFE0F\"]],\n      \"1f3fc\": [\"1f469-1f3fc-200d-2696-fe0f\", 19, 42, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\u2696\\uFE0F\"]],\n      \"1f3fd\": [\"1f469-1f3fd-200d-2696-fe0f\", 19, 43, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\u2696\\uFE0F\"]],\n      \"1f3fe\": [\"1f469-1f3fe-200d-2696-fe0f\", 19, 44, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\u2696\\uFE0F\"]],\n      \"1f3ff\": [\"1f469-1f3ff-200d-2696-fe0f\", 19, 45, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\u2696\\uFE0F\"]]\n    },\n    \"1f469-200d-2708-fe0f\": {\n      \"1f3fb\": [\"1f469-1f3fb-200d-2708-fe0f\", 19, 47, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\u2708\\uFE0F\"]],\n      \"1f3fc\": [\"1f469-1f3fc-200d-2708-fe0f\", 19, 48, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\u2708\\uFE0F\"]],\n      \"1f3fd\": [\"1f469-1f3fd-200d-2708-fe0f\", 19, 49, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\u2708\\uFE0F\"]],\n      \"1f3fe\": [\"1f469-1f3fe-200d-2708-fe0f\", 19, 50, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\u2708\\uFE0F\"]],\n      \"1f3ff\": [\"1f469-1f3ff-200d-2708-fe0f\", 19, 51, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\u2708\\uFE0F\"]]\n    },\n    \"1f469-200d-2764-fe0f-200d-1f468\": {\n      \"1f3fb-1f3fb\": [\"1f469-1f3fb-200d-2764-fe0f-200d-1f468-1f3fb\", 19, 53, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB\"]],\n      \"1f3fb-1f3fc\": [\"1f469-1f3fb-200d-2764-fe0f-200d-1f468-1f3fc\", 19, 54, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFC\"]],\n      \"1f3fb-1f3fd\": [\"1f469-1f3fb-200d-2764-fe0f-200d-1f468-1f3fd\", 19, 55, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFD\"]],\n      \"1f3fb-1f3fe\": [\"1f469-1f3fb-200d-2764-fe0f-200d-1f468-1f3fe\", 19, 56, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFE\"]],\n      \"1f3fb-1f3ff\": [\"1f469-1f3fb-200d-2764-fe0f-200d-1f468-1f3ff\", 19, 57, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFF\"]],\n      \"1f3fc-1f3fb\": [\"1f469-1f3fc-200d-2764-fe0f-200d-1f468-1f3fb\", 19, 58, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB\"]],\n      \"1f3fc-1f3fc\": [\"1f469-1f3fc-200d-2764-fe0f-200d-1f468-1f3fc\", 19, 59, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFC\"]],\n      \"1f3fc-1f3fd\": [\"1f469-1f3fc-200d-2764-fe0f-200d-1f468-1f3fd\", 19, 60, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFD\"]],\n      \"1f3fc-1f3fe\": [\"1f469-1f3fc-200d-2764-fe0f-200d-1f468-1f3fe\", 20, 0, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFE\"]],\n      \"1f3fc-1f3ff\": [\"1f469-1f3fc-200d-2764-fe0f-200d-1f468-1f3ff\", 20, 1, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFF\"]],\n      \"1f3fd-1f3fb\": [\"1f469-1f3fd-200d-2764-fe0f-200d-1f468-1f3fb\", 20, 2, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB\"]],\n      \"1f3fd-1f3fc\": [\"1f469-1f3fd-200d-2764-fe0f-200d-1f468-1f3fc\", 20, 3, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFC\"]],\n      \"1f3fd-1f3fd\": [\"1f469-1f3fd-200d-2764-fe0f-200d-1f468-1f3fd\", 20, 4, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFD\"]],\n      \"1f3fd-1f3fe\": [\"1f469-1f3fd-200d-2764-fe0f-200d-1f468-1f3fe\", 20, 5, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFE\"]],\n      \"1f3fd-1f3ff\": [\"1f469-1f3fd-200d-2764-fe0f-200d-1f468-1f3ff\", 20, 6, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFF\"]],\n      \"1f3fe-1f3fb\": [\"1f469-1f3fe-200d-2764-fe0f-200d-1f468-1f3fb\", 20, 7, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB\"]],\n      \"1f3fe-1f3fc\": [\"1f469-1f3fe-200d-2764-fe0f-200d-1f468-1f3fc\", 20, 8, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFC\"]],\n      \"1f3fe-1f3fd\": [\"1f469-1f3fe-200d-2764-fe0f-200d-1f468-1f3fd\", 20, 9, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFD\"]],\n      \"1f3fe-1f3fe\": [\"1f469-1f3fe-200d-2764-fe0f-200d-1f468-1f3fe\", 20, 10, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFE\"]],\n      \"1f3fe-1f3ff\": [\"1f469-1f3fe-200d-2764-fe0f-200d-1f468-1f3ff\", 20, 11, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFF\"]],\n      \"1f3ff-1f3fb\": [\"1f469-1f3ff-200d-2764-fe0f-200d-1f468-1f3fb\", 20, 12, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB\"]],\n      \"1f3ff-1f3fc\": [\"1f469-1f3ff-200d-2764-fe0f-200d-1f468-1f3fc\", 20, 13, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFC\"]],\n      \"1f3ff-1f3fd\": [\"1f469-1f3ff-200d-2764-fe0f-200d-1f468-1f3fd\", 20, 14, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFD\"]],\n      \"1f3ff-1f3fe\": [\"1f469-1f3ff-200d-2764-fe0f-200d-1f468-1f3fe\", 20, 15, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFE\"]],\n      \"1f3ff-1f3ff\": [\"1f469-1f3ff-200d-2764-fe0f-200d-1f468-1f3ff\", 20, 16, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC68\\uD83C\\uDFFF\"]]\n    },\n    \"1f469-200d-2764-fe0f-200d-1f469\": {\n      \"1f3fb-1f3fb\": [\"1f469-1f3fb-200d-2764-fe0f-200d-1f469-1f3fb\", 20, 18, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC69\\uD83C\\uDFFB\"]],\n      \"1f3fb-1f3fc\": [\"1f469-1f3fb-200d-2764-fe0f-200d-1f469-1f3fc\", 20, 19, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC69\\uD83C\\uDFFC\"]],\n      \"1f3fb-1f3fd\": [\"1f469-1f3fb-200d-2764-fe0f-200d-1f469-1f3fd\", 20, 20, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC69\\uD83C\\uDFFD\"]],\n      \"1f3fb-1f3fe\": [\"1f469-1f3fb-200d-2764-fe0f-200d-1f469-1f3fe\", 20, 21, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC69\\uD83C\\uDFFE\"]],\n      \"1f3fb-1f3ff\": [\"1f469-1f3fb-200d-2764-fe0f-200d-1f469-1f3ff\", 20, 22, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC69\\uD83C\\uDFFF\"]],\n      \"1f3fc-1f3fb\": [\"1f469-1f3fc-200d-2764-fe0f-200d-1f469-1f3fb\", 20, 23, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC69\\uD83C\\uDFFB\"]],\n      \"1f3fc-1f3fc\": [\"1f469-1f3fc-200d-2764-fe0f-200d-1f469-1f3fc\", 20, 24, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC69\\uD83C\\uDFFC\"]],\n      \"1f3fc-1f3fd\": [\"1f469-1f3fc-200d-2764-fe0f-200d-1f469-1f3fd\", 20, 25, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC69\\uD83C\\uDFFD\"]],\n      \"1f3fc-1f3fe\": [\"1f469-1f3fc-200d-2764-fe0f-200d-1f469-1f3fe\", 20, 26, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC69\\uD83C\\uDFFE\"]],\n      \"1f3fc-1f3ff\": [\"1f469-1f3fc-200d-2764-fe0f-200d-1f469-1f3ff\", 20, 27, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC69\\uD83C\\uDFFF\"]],\n      \"1f3fd-1f3fb\": [\"1f469-1f3fd-200d-2764-fe0f-200d-1f469-1f3fb\", 20, 28, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC69\\uD83C\\uDFFB\"]],\n      \"1f3fd-1f3fc\": [\"1f469-1f3fd-200d-2764-fe0f-200d-1f469-1f3fc\", 20, 29, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC69\\uD83C\\uDFFC\"]],\n      \"1f3fd-1f3fd\": [\"1f469-1f3fd-200d-2764-fe0f-200d-1f469-1f3fd\", 20, 30, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC69\\uD83C\\uDFFD\"]],\n      \"1f3fd-1f3fe\": [\"1f469-1f3fd-200d-2764-fe0f-200d-1f469-1f3fe\", 20, 31, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC69\\uD83C\\uDFFE\"]],\n      \"1f3fd-1f3ff\": [\"1f469-1f3fd-200d-2764-fe0f-200d-1f469-1f3ff\", 20, 32, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC69\\uD83C\\uDFFF\"]],\n      \"1f3fe-1f3fb\": [\"1f469-1f3fe-200d-2764-fe0f-200d-1f469-1f3fb\", 20, 33, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC69\\uD83C\\uDFFB\"]],\n      \"1f3fe-1f3fc\": [\"1f469-1f3fe-200d-2764-fe0f-200d-1f469-1f3fc\", 20, 34, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC69\\uD83C\\uDFFC\"]],\n      \"1f3fe-1f3fd\": [\"1f469-1f3fe-200d-2764-fe0f-200d-1f469-1f3fd\", 20, 35, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC69\\uD83C\\uDFFD\"]],\n      \"1f3fe-1f3fe\": [\"1f469-1f3fe-200d-2764-fe0f-200d-1f469-1f3fe\", 20, 36, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC69\\uD83C\\uDFFE\"]],\n      \"1f3fe-1f3ff\": [\"1f469-1f3fe-200d-2764-fe0f-200d-1f469-1f3ff\", 20, 37, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC69\\uD83C\\uDFFF\"]],\n      \"1f3ff-1f3fb\": [\"1f469-1f3ff-200d-2764-fe0f-200d-1f469-1f3fb\", 20, 38, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC69\\uD83C\\uDFFB\"]],\n      \"1f3ff-1f3fc\": [\"1f469-1f3ff-200d-2764-fe0f-200d-1f469-1f3fc\", 20, 39, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC69\\uD83C\\uDFFC\"]],\n      \"1f3ff-1f3fd\": [\"1f469-1f3ff-200d-2764-fe0f-200d-1f469-1f3fd\", 20, 40, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC69\\uD83C\\uDFFD\"]],\n      \"1f3ff-1f3fe\": [\"1f469-1f3ff-200d-2764-fe0f-200d-1f469-1f3fe\", 20, 41, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC69\\uD83C\\uDFFE\"]],\n      \"1f3ff-1f3ff\": [\"1f469-1f3ff-200d-2764-fe0f-200d-1f469-1f3ff\", 20, 42, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC69\\uD83C\\uDFFF\"]]\n    },\n    \"1f469-200d-2764-fe0f-200d-1f48b-200d-1f468\": {\n      \"1f3fb-1f3fb\": [\"1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb\", 20, 44, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB\"]],\n      \"1f3fb-1f3fc\": [\"1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc\", 20, 45, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFC\"]],\n      \"1f3fb-1f3fd\": [\"1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd\", 20, 46, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFD\"]],\n      \"1f3fb-1f3fe\": [\"1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe\", 20, 47, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFE\"]],\n      \"1f3fb-1f3ff\": [\"1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff\", 20, 48, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFF\"]],\n      \"1f3fc-1f3fb\": [\"1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb\", 20, 49, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB\"]],\n      \"1f3fc-1f3fc\": [\"1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc\", 20, 50, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFC\"]],\n      \"1f3fc-1f3fd\": [\"1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd\", 20, 51, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFD\"]],\n      \"1f3fc-1f3fe\": [\"1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe\", 20, 52, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFE\"]],\n      \"1f3fc-1f3ff\": [\"1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff\", 20, 53, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFF\"]],\n      \"1f3fd-1f3fb\": [\"1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb\", 20, 54, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB\"]],\n      \"1f3fd-1f3fc\": [\"1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc\", 20, 55, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFC\"]],\n      \"1f3fd-1f3fd\": [\"1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd\", 20, 56, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFD\"]],\n      \"1f3fd-1f3fe\": [\"1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe\", 20, 57, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFE\"]],\n      \"1f3fd-1f3ff\": [\"1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff\", 20, 58, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFF\"]],\n      \"1f3fe-1f3fb\": [\"1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb\", 20, 59, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB\"]],\n      \"1f3fe-1f3fc\": [\"1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc\", 20, 60, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFC\"]],\n      \"1f3fe-1f3fd\": [\"1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd\", 21, 0, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFD\"]],\n      \"1f3fe-1f3fe\": [\"1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe\", 21, 1, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFE\"]],\n      \"1f3fe-1f3ff\": [\"1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff\", 21, 2, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFF\"]],\n      \"1f3ff-1f3fb\": [\"1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fb\", 21, 3, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB\"]],\n      \"1f3ff-1f3fc\": [\"1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fc\", 21, 4, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFC\"]],\n      \"1f3ff-1f3fd\": [\"1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fd\", 21, 5, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFD\"]],\n      \"1f3ff-1f3fe\": [\"1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3fe\", 21, 6, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFE\"]],\n      \"1f3ff-1f3ff\": [\"1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f468-1f3ff\", 21, 7, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68\\uD83C\\uDFFF\"]]\n    },\n    \"1f469-200d-2764-fe0f-200d-1f48b-200d-1f469\": {\n      \"1f3fb-1f3fb\": [\"1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fb\", 21, 9, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC69\\uD83C\\uDFFB\"]],\n      \"1f3fb-1f3fc\": [\"1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fc\", 21, 10, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC69\\uD83C\\uDFFC\"]],\n      \"1f3fb-1f3fd\": [\"1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fd\", 21, 11, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC69\\uD83C\\uDFFD\"]],\n      \"1f3fb-1f3fe\": [\"1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fe\", 21, 12, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC69\\uD83C\\uDFFE\"]],\n      \"1f3fb-1f3ff\": [\"1f469-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3ff\", 21, 13, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC69\\uD83C\\uDFFF\"]],\n      \"1f3fc-1f3fb\": [\"1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fb\", 21, 14, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC69\\uD83C\\uDFFB\"]],\n      \"1f3fc-1f3fc\": [\"1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fc\", 21, 15, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC69\\uD83C\\uDFFC\"]],\n      \"1f3fc-1f3fd\": [\"1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fd\", 21, 16, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC69\\uD83C\\uDFFD\"]],\n      \"1f3fc-1f3fe\": [\"1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fe\", 21, 17, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC69\\uD83C\\uDFFE\"]],\n      \"1f3fc-1f3ff\": [\"1f469-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3ff\", 21, 18, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC69\\uD83C\\uDFFF\"]],\n      \"1f3fd-1f3fb\": [\"1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fb\", 21, 19, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC69\\uD83C\\uDFFB\"]],\n      \"1f3fd-1f3fc\": [\"1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fc\", 21, 20, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC69\\uD83C\\uDFFC\"]],\n      \"1f3fd-1f3fd\": [\"1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fd\", 21, 21, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC69\\uD83C\\uDFFD\"]],\n      \"1f3fd-1f3fe\": [\"1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fe\", 21, 22, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC69\\uD83C\\uDFFE\"]],\n      \"1f3fd-1f3ff\": [\"1f469-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3ff\", 21, 23, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC69\\uD83C\\uDFFF\"]],\n      \"1f3fe-1f3fb\": [\"1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fb\", 21, 24, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC69\\uD83C\\uDFFB\"]],\n      \"1f3fe-1f3fc\": [\"1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fc\", 21, 25, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC69\\uD83C\\uDFFC\"]],\n      \"1f3fe-1f3fd\": [\"1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fd\", 21, 26, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC69\\uD83C\\uDFFD\"]],\n      \"1f3fe-1f3fe\": [\"1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fe\", 21, 27, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC69\\uD83C\\uDFFE\"]],\n      \"1f3fe-1f3ff\": [\"1f469-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3ff\", 21, 28, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC69\\uD83C\\uDFFF\"]],\n      \"1f3ff-1f3fb\": [\"1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fb\", 21, 29, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC69\\uD83C\\uDFFB\"]],\n      \"1f3ff-1f3fc\": [\"1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fc\", 21, 30, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC69\\uD83C\\uDFFC\"]],\n      \"1f3ff-1f3fd\": [\"1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fd\", 21, 31, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC69\\uD83C\\uDFFD\"]],\n      \"1f3ff-1f3fe\": [\"1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3fe\", 21, 32, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC69\\uD83C\\uDFFE\"]],\n      \"1f3ff-1f3ff\": [\"1f469-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f469-1f3ff\", 21, 33, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83D\\uDC69\\uD83C\\uDFFF\"]]\n    },\n    \"1f469\": {\n      \"1f3fb\": [\"1f469-1f3fb\", 21, 35, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f469-1f3fc\", 21, 36, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f469-1f3fd\", 21, 37, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f469-1f3fe\", 21, 38, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f469-1f3ff\", 21, 39, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\"]]\n    },\n    \"1f46b\": {\n      \"1f3fb\": [\"1f46b-1f3fb\", 21, 42, 15, [\"\\uD83D\\uDC6B\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f46b-1f3fc\", 21, 43, 15, [\"\\uD83D\\uDC6B\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f46b-1f3fd\", 21, 44, 15, [\"\\uD83D\\uDC6B\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f46b-1f3fe\", 21, 45, 15, [\"\\uD83D\\uDC6B\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f46b-1f3ff\", 21, 46, 15, [\"\\uD83D\\uDC6B\\uD83C\\uDFFF\"]],\n      \"1f3fb-1f3fc\": [\"1f469-1f3fb-200d-1f91d-200d-1f468-1f3fc\", 21, 47, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFC\"]],\n      \"1f3fb-1f3fd\": [\"1f469-1f3fb-200d-1f91d-200d-1f468-1f3fd\", 21, 48, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFD\"]],\n      \"1f3fb-1f3fe\": [\"1f469-1f3fb-200d-1f91d-200d-1f468-1f3fe\", 21, 49, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFE\"]],\n      \"1f3fb-1f3ff\": [\"1f469-1f3fb-200d-1f91d-200d-1f468-1f3ff\", 21, 50, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFF\"]],\n      \"1f3fc-1f3fb\": [\"1f469-1f3fc-200d-1f91d-200d-1f468-1f3fb\", 21, 51, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB\"]],\n      \"1f3fc-1f3fd\": [\"1f469-1f3fc-200d-1f91d-200d-1f468-1f3fd\", 21, 52, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFD\"]],\n      \"1f3fc-1f3fe\": [\"1f469-1f3fc-200d-1f91d-200d-1f468-1f3fe\", 21, 53, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFE\"]],\n      \"1f3fc-1f3ff\": [\"1f469-1f3fc-200d-1f91d-200d-1f468-1f3ff\", 21, 54, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFF\"]],\n      \"1f3fd-1f3fb\": [\"1f469-1f3fd-200d-1f91d-200d-1f468-1f3fb\", 21, 55, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB\"]],\n      \"1f3fd-1f3fc\": [\"1f469-1f3fd-200d-1f91d-200d-1f468-1f3fc\", 21, 56, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFC\"]],\n      \"1f3fd-1f3fe\": [\"1f469-1f3fd-200d-1f91d-200d-1f468-1f3fe\", 21, 57, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFE\"]],\n      \"1f3fd-1f3ff\": [\"1f469-1f3fd-200d-1f91d-200d-1f468-1f3ff\", 21, 58, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFF\"]],\n      \"1f3fe-1f3fb\": [\"1f469-1f3fe-200d-1f91d-200d-1f468-1f3fb\", 21, 59, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB\"]],\n      \"1f3fe-1f3fc\": [\"1f469-1f3fe-200d-1f91d-200d-1f468-1f3fc\", 21, 60, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFC\"]],\n      \"1f3fe-1f3fd\": [\"1f469-1f3fe-200d-1f91d-200d-1f468-1f3fd\", 22, 0, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFD\"]],\n      \"1f3fe-1f3ff\": [\"1f469-1f3fe-200d-1f91d-200d-1f468-1f3ff\", 22, 1, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFF\"]],\n      \"1f3ff-1f3fb\": [\"1f469-1f3ff-200d-1f91d-200d-1f468-1f3fb\", 22, 2, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB\"]],\n      \"1f3ff-1f3fc\": [\"1f469-1f3ff-200d-1f91d-200d-1f468-1f3fc\", 22, 3, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFC\"]],\n      \"1f3ff-1f3fd\": [\"1f469-1f3ff-200d-1f91d-200d-1f468-1f3fd\", 22, 4, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFD\"]],\n      \"1f3ff-1f3fe\": [\"1f469-1f3ff-200d-1f91d-200d-1f468-1f3fe\", 22, 5, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFE\"]]\n    },\n    \"1f46c\": {\n      \"1f3fb\": [\"1f46c-1f3fb\", 22, 7, 15, [\"\\uD83D\\uDC6C\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f46c-1f3fc\", 22, 8, 15, [\"\\uD83D\\uDC6C\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f46c-1f3fd\", 22, 9, 15, [\"\\uD83D\\uDC6C\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f46c-1f3fe\", 22, 10, 15, [\"\\uD83D\\uDC6C\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f46c-1f3ff\", 22, 11, 15, [\"\\uD83D\\uDC6C\\uD83C\\uDFFF\"]],\n      \"1f3fb-1f3fc\": [\"1f468-1f3fb-200d-1f91d-200d-1f468-1f3fc\", 22, 12, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFC\"]],\n      \"1f3fb-1f3fd\": [\"1f468-1f3fb-200d-1f91d-200d-1f468-1f3fd\", 22, 13, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFD\"]],\n      \"1f3fb-1f3fe\": [\"1f468-1f3fb-200d-1f91d-200d-1f468-1f3fe\", 22, 14, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFE\"]],\n      \"1f3fb-1f3ff\": [\"1f468-1f3fb-200d-1f91d-200d-1f468-1f3ff\", 22, 15, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFF\"]],\n      \"1f3fc-1f3fb\": [\"1f468-1f3fc-200d-1f91d-200d-1f468-1f3fb\", 22, 16, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB\"]],\n      \"1f3fc-1f3fd\": [\"1f468-1f3fc-200d-1f91d-200d-1f468-1f3fd\", 22, 17, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFD\"]],\n      \"1f3fc-1f3fe\": [\"1f468-1f3fc-200d-1f91d-200d-1f468-1f3fe\", 22, 18, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFE\"]],\n      \"1f3fc-1f3ff\": [\"1f468-1f3fc-200d-1f91d-200d-1f468-1f3ff\", 22, 19, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFF\"]],\n      \"1f3fd-1f3fb\": [\"1f468-1f3fd-200d-1f91d-200d-1f468-1f3fb\", 22, 20, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB\"]],\n      \"1f3fd-1f3fc\": [\"1f468-1f3fd-200d-1f91d-200d-1f468-1f3fc\", 22, 21, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFC\"]],\n      \"1f3fd-1f3fe\": [\"1f468-1f3fd-200d-1f91d-200d-1f468-1f3fe\", 22, 22, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFE\"]],\n      \"1f3fd-1f3ff\": [\"1f468-1f3fd-200d-1f91d-200d-1f468-1f3ff\", 22, 23, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFF\"]],\n      \"1f3fe-1f3fb\": [\"1f468-1f3fe-200d-1f91d-200d-1f468-1f3fb\", 22, 24, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB\"]],\n      \"1f3fe-1f3fc\": [\"1f468-1f3fe-200d-1f91d-200d-1f468-1f3fc\", 22, 25, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFC\"]],\n      \"1f3fe-1f3fd\": [\"1f468-1f3fe-200d-1f91d-200d-1f468-1f3fd\", 22, 26, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFD\"]],\n      \"1f3fe-1f3ff\": [\"1f468-1f3fe-200d-1f91d-200d-1f468-1f3ff\", 22, 27, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFF\"]],\n      \"1f3ff-1f3fb\": [\"1f468-1f3ff-200d-1f91d-200d-1f468-1f3fb\", 22, 28, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB\"]],\n      \"1f3ff-1f3fc\": [\"1f468-1f3ff-200d-1f91d-200d-1f468-1f3fc\", 22, 29, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFC\"]],\n      \"1f3ff-1f3fd\": [\"1f468-1f3ff-200d-1f91d-200d-1f468-1f3fd\", 22, 30, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFD\"]],\n      \"1f3ff-1f3fe\": [\"1f468-1f3ff-200d-1f91d-200d-1f468-1f3fe\", 22, 31, 15, [\"\\uD83D\\uDC68\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFE\"]]\n    },\n    \"1f46d\": {\n      \"1f3fb\": [\"1f46d-1f3fb\", 22, 33, 15, [\"\\uD83D\\uDC6D\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f46d-1f3fc\", 22, 34, 15, [\"\\uD83D\\uDC6D\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f46d-1f3fd\", 22, 35, 15, [\"\\uD83D\\uDC6D\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f46d-1f3fe\", 22, 36, 15, [\"\\uD83D\\uDC6D\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f46d-1f3ff\", 22, 37, 15, [\"\\uD83D\\uDC6D\\uD83C\\uDFFF\"]],\n      \"1f3fb-1f3fc\": [\"1f469-1f3fb-200d-1f91d-200d-1f469-1f3fc\", 22, 38, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69\\uD83C\\uDFFC\"]],\n      \"1f3fb-1f3fd\": [\"1f469-1f3fb-200d-1f91d-200d-1f469-1f3fd\", 22, 39, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69\\uD83C\\uDFFD\"]],\n      \"1f3fb-1f3fe\": [\"1f469-1f3fb-200d-1f91d-200d-1f469-1f3fe\", 22, 40, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69\\uD83C\\uDFFE\"]],\n      \"1f3fb-1f3ff\": [\"1f469-1f3fb-200d-1f91d-200d-1f469-1f3ff\", 22, 41, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69\\uD83C\\uDFFF\"]],\n      \"1f3fc-1f3fb\": [\"1f469-1f3fc-200d-1f91d-200d-1f469-1f3fb\", 22, 42, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69\\uD83C\\uDFFB\"]],\n      \"1f3fc-1f3fd\": [\"1f469-1f3fc-200d-1f91d-200d-1f469-1f3fd\", 22, 43, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69\\uD83C\\uDFFD\"]],\n      \"1f3fc-1f3fe\": [\"1f469-1f3fc-200d-1f91d-200d-1f469-1f3fe\", 22, 44, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69\\uD83C\\uDFFE\"]],\n      \"1f3fc-1f3ff\": [\"1f469-1f3fc-200d-1f91d-200d-1f469-1f3ff\", 22, 45, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69\\uD83C\\uDFFF\"]],\n      \"1f3fd-1f3fb\": [\"1f469-1f3fd-200d-1f91d-200d-1f469-1f3fb\", 22, 46, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69\\uD83C\\uDFFB\"]],\n      \"1f3fd-1f3fc\": [\"1f469-1f3fd-200d-1f91d-200d-1f469-1f3fc\", 22, 47, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69\\uD83C\\uDFFC\"]],\n      \"1f3fd-1f3fe\": [\"1f469-1f3fd-200d-1f91d-200d-1f469-1f3fe\", 22, 48, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69\\uD83C\\uDFFE\"]],\n      \"1f3fd-1f3ff\": [\"1f469-1f3fd-200d-1f91d-200d-1f469-1f3ff\", 22, 49, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69\\uD83C\\uDFFF\"]],\n      \"1f3fe-1f3fb\": [\"1f469-1f3fe-200d-1f91d-200d-1f469-1f3fb\", 22, 50, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69\\uD83C\\uDFFB\"]],\n      \"1f3fe-1f3fc\": [\"1f469-1f3fe-200d-1f91d-200d-1f469-1f3fc\", 22, 51, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69\\uD83C\\uDFFC\"]],\n      \"1f3fe-1f3fd\": [\"1f469-1f3fe-200d-1f91d-200d-1f469-1f3fd\", 22, 52, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69\\uD83C\\uDFFD\"]],\n      \"1f3fe-1f3ff\": [\"1f469-1f3fe-200d-1f91d-200d-1f469-1f3ff\", 22, 53, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69\\uD83C\\uDFFF\"]],\n      \"1f3ff-1f3fb\": [\"1f469-1f3ff-200d-1f91d-200d-1f469-1f3fb\", 22, 54, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69\\uD83C\\uDFFB\"]],\n      \"1f3ff-1f3fc\": [\"1f469-1f3ff-200d-1f91d-200d-1f469-1f3fc\", 22, 55, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69\\uD83C\\uDFFC\"]],\n      \"1f3ff-1f3fd\": [\"1f469-1f3ff-200d-1f91d-200d-1f469-1f3fd\", 22, 56, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69\\uD83C\\uDFFD\"]],\n      \"1f3ff-1f3fe\": [\"1f469-1f3ff-200d-1f91d-200d-1f469-1f3fe\", 22, 57, 15, [\"\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69\\uD83C\\uDFFE\"]]\n    },\n    \"1f46e-200d-2640-fe0f\": {\n      \"1f3fb\": [\"1f46e-1f3fb-200d-2640-fe0f\", 22, 59, 15, [\"\\uD83D\\uDC6E\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fc\": [\"1f46e-1f3fc-200d-2640-fe0f\", 22, 60, 15, [\"\\uD83D\\uDC6E\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fd\": [\"1f46e-1f3fd-200d-2640-fe0f\", 23, 0, 15, [\"\\uD83D\\uDC6E\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fe\": [\"1f46e-1f3fe-200d-2640-fe0f\", 23, 1, 15, [\"\\uD83D\\uDC6E\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\"]],\n      \"1f3ff\": [\"1f46e-1f3ff-200d-2640-fe0f\", 23, 2, 15, [\"\\uD83D\\uDC6E\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\"]]\n    },\n    \"1f46e-200d-2642-fe0f\": {\n      \"1f3fb\": [\"1f46e-1f3fb-200d-2642-fe0f\", 23, 4, 15, [\"\\uD83D\\uDC6E\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDC6E\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f46e-1f3fc-200d-2642-fe0f\", 23, 5, 15, [\"\\uD83D\\uDC6E\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDC6E\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f46e-1f3fd-200d-2642-fe0f\", 23, 6, 15, [\"\\uD83D\\uDC6E\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDC6E\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f46e-1f3fe-200d-2642-fe0f\", 23, 7, 15, [\"\\uD83D\\uDC6E\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDC6E\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f46e-1f3ff-200d-2642-fe0f\", 23, 8, 15, [\"\\uD83D\\uDC6E\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDC6E\\uD83C\\uDFFF\"]]\n    },\n    \"1f470-200d-2640-fe0f\": {\n      \"1f3fb\": [\"1f470-1f3fb-200d-2640-fe0f\", 23, 19, 15, [\"\\uD83D\\uDC70\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fc\": [\"1f470-1f3fc-200d-2640-fe0f\", 23, 20, 15, [\"\\uD83D\\uDC70\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fd\": [\"1f470-1f3fd-200d-2640-fe0f\", 23, 21, 15, [\"\\uD83D\\uDC70\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fe\": [\"1f470-1f3fe-200d-2640-fe0f\", 23, 22, 15, [\"\\uD83D\\uDC70\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\"]],\n      \"1f3ff\": [\"1f470-1f3ff-200d-2640-fe0f\", 23, 23, 15, [\"\\uD83D\\uDC70\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\"]]\n    },\n    \"1f470-200d-2642-fe0f\": {\n      \"1f3fb\": [\"1f470-1f3fb-200d-2642-fe0f\", 23, 25, 15, [\"\\uD83D\\uDC70\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fc\": [\"1f470-1f3fc-200d-2642-fe0f\", 23, 26, 15, [\"\\uD83D\\uDC70\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fd\": [\"1f470-1f3fd-200d-2642-fe0f\", 23, 27, 15, [\"\\uD83D\\uDC70\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fe\": [\"1f470-1f3fe-200d-2642-fe0f\", 23, 28, 15, [\"\\uD83D\\uDC70\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\"]],\n      \"1f3ff\": [\"1f470-1f3ff-200d-2642-fe0f\", 23, 29, 15, [\"\\uD83D\\uDC70\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\"]]\n    },\n    \"1f470\": {\n      \"1f3fb\": [\"1f470-1f3fb\", 23, 31, 15, [\"\\uD83D\\uDC70\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f470-1f3fc\", 23, 32, 15, [\"\\uD83D\\uDC70\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f470-1f3fd\", 23, 33, 15, [\"\\uD83D\\uDC70\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f470-1f3fe\", 23, 34, 15, [\"\\uD83D\\uDC70\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f470-1f3ff\", 23, 35, 15, [\"\\uD83D\\uDC70\\uD83C\\uDFFF\"]]\n    },\n    \"1f471-200d-2640-fe0f\": {\n      \"1f3fb\": [\"1f471-1f3fb-200d-2640-fe0f\", 23, 37, 15, [\"\\uD83D\\uDC71\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fc\": [\"1f471-1f3fc-200d-2640-fe0f\", 23, 38, 15, [\"\\uD83D\\uDC71\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fd\": [\"1f471-1f3fd-200d-2640-fe0f\", 23, 39, 15, [\"\\uD83D\\uDC71\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fe\": [\"1f471-1f3fe-200d-2640-fe0f\", 23, 40, 15, [\"\\uD83D\\uDC71\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\"]],\n      \"1f3ff\": [\"1f471-1f3ff-200d-2640-fe0f\", 23, 41, 15, [\"\\uD83D\\uDC71\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\"]]\n    },\n    \"1f471-200d-2642-fe0f\": {\n      \"1f3fb\": [\"1f471-1f3fb-200d-2642-fe0f\", 23, 43, 15, [\"\\uD83D\\uDC71\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDC71\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f471-1f3fc-200d-2642-fe0f\", 23, 44, 15, [\"\\uD83D\\uDC71\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDC71\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f471-1f3fd-200d-2642-fe0f\", 23, 45, 15, [\"\\uD83D\\uDC71\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDC71\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f471-1f3fe-200d-2642-fe0f\", 23, 46, 15, [\"\\uD83D\\uDC71\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDC71\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f471-1f3ff-200d-2642-fe0f\", 23, 47, 15, [\"\\uD83D\\uDC71\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDC71\\uD83C\\uDFFF\"]]\n    },\n    \"1f472\": {\n      \"1f3fb\": [\"1f472-1f3fb\", 23, 55, 15, [\"\\uD83D\\uDC72\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f472-1f3fc\", 23, 56, 15, [\"\\uD83D\\uDC72\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f472-1f3fd\", 23, 57, 15, [\"\\uD83D\\uDC72\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f472-1f3fe\", 23, 58, 15, [\"\\uD83D\\uDC72\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f472-1f3ff\", 23, 59, 15, [\"\\uD83D\\uDC72\\uD83C\\uDFFF\"]]\n    },\n    \"1f473-200d-2640-fe0f\": {\n      \"1f3fb\": [\"1f473-1f3fb-200d-2640-fe0f\", 24, 0, 15, [\"\\uD83D\\uDC73\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fc\": [\"1f473-1f3fc-200d-2640-fe0f\", 24, 1, 15, [\"\\uD83D\\uDC73\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fd\": [\"1f473-1f3fd-200d-2640-fe0f\", 24, 2, 15, [\"\\uD83D\\uDC73\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fe\": [\"1f473-1f3fe-200d-2640-fe0f\", 24, 3, 15, [\"\\uD83D\\uDC73\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\"]],\n      \"1f3ff\": [\"1f473-1f3ff-200d-2640-fe0f\", 24, 4, 15, [\"\\uD83D\\uDC73\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\"]]\n    },\n    \"1f473-200d-2642-fe0f\": {\n      \"1f3fb\": [\"1f473-1f3fb-200d-2642-fe0f\", 24, 6, 15, [\"\\uD83D\\uDC73\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDC73\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f473-1f3fc-200d-2642-fe0f\", 24, 7, 15, [\"\\uD83D\\uDC73\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDC73\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f473-1f3fd-200d-2642-fe0f\", 24, 8, 15, [\"\\uD83D\\uDC73\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDC73\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f473-1f3fe-200d-2642-fe0f\", 24, 9, 15, [\"\\uD83D\\uDC73\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDC73\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f473-1f3ff-200d-2642-fe0f\", 24, 10, 15, [\"\\uD83D\\uDC73\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDC73\\uD83C\\uDFFF\"]]\n    },\n    \"1f474\": {\n      \"1f3fb\": [\"1f474-1f3fb\", 24, 18, 15, [\"\\uD83D\\uDC74\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f474-1f3fc\", 24, 19, 15, [\"\\uD83D\\uDC74\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f474-1f3fd\", 24, 20, 15, [\"\\uD83D\\uDC74\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f474-1f3fe\", 24, 21, 15, [\"\\uD83D\\uDC74\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f474-1f3ff\", 24, 22, 15, [\"\\uD83D\\uDC74\\uD83C\\uDFFF\"]]\n    },\n    \"1f475\": {\n      \"1f3fb\": [\"1f475-1f3fb\", 24, 24, 15, [\"\\uD83D\\uDC75\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f475-1f3fc\", 24, 25, 15, [\"\\uD83D\\uDC75\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f475-1f3fd\", 24, 26, 15, [\"\\uD83D\\uDC75\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f475-1f3fe\", 24, 27, 15, [\"\\uD83D\\uDC75\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f475-1f3ff\", 24, 28, 15, [\"\\uD83D\\uDC75\\uD83C\\uDFFF\"]]\n    },\n    \"1f476\": {\n      \"1f3fb\": [\"1f476-1f3fb\", 24, 30, 15, [\"\\uD83D\\uDC76\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f476-1f3fc\", 24, 31, 15, [\"\\uD83D\\uDC76\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f476-1f3fd\", 24, 32, 15, [\"\\uD83D\\uDC76\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f476-1f3fe\", 24, 33, 15, [\"\\uD83D\\uDC76\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f476-1f3ff\", 24, 34, 15, [\"\\uD83D\\uDC76\\uD83C\\uDFFF\"]]\n    },\n    \"1f477-200d-2640-fe0f\": {\n      \"1f3fb\": [\"1f477-1f3fb-200d-2640-fe0f\", 24, 36, 15, [\"\\uD83D\\uDC77\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fc\": [\"1f477-1f3fc-200d-2640-fe0f\", 24, 37, 15, [\"\\uD83D\\uDC77\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fd\": [\"1f477-1f3fd-200d-2640-fe0f\", 24, 38, 15, [\"\\uD83D\\uDC77\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fe\": [\"1f477-1f3fe-200d-2640-fe0f\", 24, 39, 15, [\"\\uD83D\\uDC77\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\"]],\n      \"1f3ff\": [\"1f477-1f3ff-200d-2640-fe0f\", 24, 40, 15, [\"\\uD83D\\uDC77\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\"]]\n    },\n    \"1f477-200d-2642-fe0f\": {\n      \"1f3fb\": [\"1f477-1f3fb-200d-2642-fe0f\", 24, 42, 15, [\"\\uD83D\\uDC77\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDC77\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f477-1f3fc-200d-2642-fe0f\", 24, 43, 15, [\"\\uD83D\\uDC77\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDC77\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f477-1f3fd-200d-2642-fe0f\", 24, 44, 15, [\"\\uD83D\\uDC77\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDC77\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f477-1f3fe-200d-2642-fe0f\", 24, 45, 15, [\"\\uD83D\\uDC77\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDC77\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f477-1f3ff-200d-2642-fe0f\", 24, 46, 15, [\"\\uD83D\\uDC77\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDC77\\uD83C\\uDFFF\"]]\n    },\n    \"1f478\": {\n      \"1f3fb\": [\"1f478-1f3fb\", 24, 54, 15, [\"\\uD83D\\uDC78\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f478-1f3fc\", 24, 55, 15, [\"\\uD83D\\uDC78\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f478-1f3fd\", 24, 56, 15, [\"\\uD83D\\uDC78\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f478-1f3fe\", 24, 57, 15, [\"\\uD83D\\uDC78\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f478-1f3ff\", 24, 58, 15, [\"\\uD83D\\uDC78\\uD83C\\uDFFF\"]]\n    },\n    \"1f47c\": {\n      \"1f3fb\": [\"1f47c-1f3fb\", 25, 2, 15, [\"\\uD83D\\uDC7C\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f47c-1f3fc\", 25, 3, 15, [\"\\uD83D\\uDC7C\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f47c-1f3fd\", 25, 4, 15, [\"\\uD83D\\uDC7C\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f47c-1f3fe\", 25, 5, 15, [\"\\uD83D\\uDC7C\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f47c-1f3ff\", 25, 6, 15, [\"\\uD83D\\uDC7C\\uD83C\\uDFFF\"]]\n    },\n    \"1f481-200d-2640-fe0f\": {\n      \"1f3fb\": [\"1f481-1f3fb-200d-2640-fe0f\", 25, 12, 15, [\"\\uD83D\\uDC81\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDC81\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f481-1f3fc-200d-2640-fe0f\", 25, 13, 15, [\"\\uD83D\\uDC81\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDC81\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f481-1f3fd-200d-2640-fe0f\", 25, 14, 15, [\"\\uD83D\\uDC81\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDC81\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f481-1f3fe-200d-2640-fe0f\", 25, 15, 15, [\"\\uD83D\\uDC81\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDC81\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f481-1f3ff-200d-2640-fe0f\", 25, 16, 15, [\"\\uD83D\\uDC81\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDC81\\uD83C\\uDFFF\"]]\n    },\n    \"1f481-200d-2642-fe0f\": {\n      \"1f3fb\": [\"1f481-1f3fb-200d-2642-fe0f\", 25, 18, 15, [\"\\uD83D\\uDC81\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fc\": [\"1f481-1f3fc-200d-2642-fe0f\", 25, 19, 15, [\"\\uD83D\\uDC81\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fd\": [\"1f481-1f3fd-200d-2642-fe0f\", 25, 20, 15, [\"\\uD83D\\uDC81\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fe\": [\"1f481-1f3fe-200d-2642-fe0f\", 25, 21, 15, [\"\\uD83D\\uDC81\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\"]],\n      \"1f3ff\": [\"1f481-1f3ff-200d-2642-fe0f\", 25, 22, 15, [\"\\uD83D\\uDC81\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\"]]\n    },\n    \"1f482-200d-2640-fe0f\": {\n      \"1f3fb\": [\"1f482-1f3fb-200d-2640-fe0f\", 25, 30, 15, [\"\\uD83D\\uDC82\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fc\": [\"1f482-1f3fc-200d-2640-fe0f\", 25, 31, 15, [\"\\uD83D\\uDC82\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fd\": [\"1f482-1f3fd-200d-2640-fe0f\", 25, 32, 15, [\"\\uD83D\\uDC82\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fe\": [\"1f482-1f3fe-200d-2640-fe0f\", 25, 33, 15, [\"\\uD83D\\uDC82\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\"]],\n      \"1f3ff\": [\"1f482-1f3ff-200d-2640-fe0f\", 25, 34, 15, [\"\\uD83D\\uDC82\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\"]]\n    },\n    \"1f482-200d-2642-fe0f\": {\n      \"1f3fb\": [\"1f482-1f3fb-200d-2642-fe0f\", 25, 36, 15, [\"\\uD83D\\uDC82\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDC82\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f482-1f3fc-200d-2642-fe0f\", 25, 37, 15, [\"\\uD83D\\uDC82\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDC82\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f482-1f3fd-200d-2642-fe0f\", 25, 38, 15, [\"\\uD83D\\uDC82\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDC82\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f482-1f3fe-200d-2642-fe0f\", 25, 39, 15, [\"\\uD83D\\uDC82\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDC82\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f482-1f3ff-200d-2642-fe0f\", 25, 40, 15, [\"\\uD83D\\uDC82\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDC82\\uD83C\\uDFFF\"]]\n    },\n    \"1f483\": {\n      \"1f3fb\": [\"1f483-1f3fb\", 25, 48, 15, [\"\\uD83D\\uDC83\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f483-1f3fc\", 25, 49, 15, [\"\\uD83D\\uDC83\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f483-1f3fd\", 25, 50, 15, [\"\\uD83D\\uDC83\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f483-1f3fe\", 25, 51, 15, [\"\\uD83D\\uDC83\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f483-1f3ff\", 25, 52, 15, [\"\\uD83D\\uDC83\\uD83C\\uDFFF\"]]\n    },\n    \"1f485\": {\n      \"1f3fb\": [\"1f485-1f3fb\", 25, 55, 15, [\"\\uD83D\\uDC85\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f485-1f3fc\", 25, 56, 15, [\"\\uD83D\\uDC85\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f485-1f3fd\", 25, 57, 15, [\"\\uD83D\\uDC85\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f485-1f3fe\", 25, 58, 15, [\"\\uD83D\\uDC85\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f485-1f3ff\", 25, 59, 15, [\"\\uD83D\\uDC85\\uD83C\\uDFFF\"]]\n    },\n    \"1f486-200d-2640-fe0f\": {\n      \"1f3fb\": [\"1f486-1f3fb-200d-2640-fe0f\", 26, 0, 15, [\"\\uD83D\\uDC86\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDC86\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f486-1f3fc-200d-2640-fe0f\", 26, 1, 15, [\"\\uD83D\\uDC86\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDC86\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f486-1f3fd-200d-2640-fe0f\", 26, 2, 15, [\"\\uD83D\\uDC86\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDC86\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f486-1f3fe-200d-2640-fe0f\", 26, 3, 15, [\"\\uD83D\\uDC86\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDC86\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f486-1f3ff-200d-2640-fe0f\", 26, 4, 15, [\"\\uD83D\\uDC86\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDC86\\uD83C\\uDFFF\"]]\n    },\n    \"1f486-200d-2642-fe0f\": {\n      \"1f3fb\": [\"1f486-1f3fb-200d-2642-fe0f\", 26, 6, 15, [\"\\uD83D\\uDC86\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fc\": [\"1f486-1f3fc-200d-2642-fe0f\", 26, 7, 15, [\"\\uD83D\\uDC86\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fd\": [\"1f486-1f3fd-200d-2642-fe0f\", 26, 8, 15, [\"\\uD83D\\uDC86\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fe\": [\"1f486-1f3fe-200d-2642-fe0f\", 26, 9, 15, [\"\\uD83D\\uDC86\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\"]],\n      \"1f3ff\": [\"1f486-1f3ff-200d-2642-fe0f\", 26, 10, 15, [\"\\uD83D\\uDC86\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\"]]\n    },\n    \"1f487-200d-2640-fe0f\": {\n      \"1f3fb\": [\"1f487-1f3fb-200d-2640-fe0f\", 26, 18, 15, [\"\\uD83D\\uDC87\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDC87\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f487-1f3fc-200d-2640-fe0f\", 26, 19, 15, [\"\\uD83D\\uDC87\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDC87\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f487-1f3fd-200d-2640-fe0f\", 26, 20, 15, [\"\\uD83D\\uDC87\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDC87\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f487-1f3fe-200d-2640-fe0f\", 26, 21, 15, [\"\\uD83D\\uDC87\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDC87\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f487-1f3ff-200d-2640-fe0f\", 26, 22, 15, [\"\\uD83D\\uDC87\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDC87\\uD83C\\uDFFF\"]]\n    },\n    \"1f487-200d-2642-fe0f\": {\n      \"1f3fb\": [\"1f487-1f3fb-200d-2642-fe0f\", 26, 24, 15, [\"\\uD83D\\uDC87\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fc\": [\"1f487-1f3fc-200d-2642-fe0f\", 26, 25, 15, [\"\\uD83D\\uDC87\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fd\": [\"1f487-1f3fd-200d-2642-fe0f\", 26, 26, 15, [\"\\uD83D\\uDC87\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fe\": [\"1f487-1f3fe-200d-2642-fe0f\", 26, 27, 15, [\"\\uD83D\\uDC87\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\"]],\n      \"1f3ff\": [\"1f487-1f3ff-200d-2642-fe0f\", 26, 28, 15, [\"\\uD83D\\uDC87\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\"]]\n    },\n    \"1f48f\": {\n      \"1f3fb\": [\"1f48f-1f3fb\", 26, 43, 15, [\"\\uD83D\\uDC8F\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f48f-1f3fc\", 26, 44, 15, [\"\\uD83D\\uDC8F\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f48f-1f3fd\", 26, 45, 15, [\"\\uD83D\\uDC8F\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f48f-1f3fe\", 26, 46, 15, [\"\\uD83D\\uDC8F\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f48f-1f3ff\", 26, 47, 15, [\"\\uD83D\\uDC8F\\uD83C\\uDFFF\"]],\n      \"1f3fb-1f3fc\": [\"1f9d1-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fc\", 26, 48, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFC\"]],\n      \"1f3fb-1f3fd\": [\"1f9d1-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fd\", 26, 49, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFD\"]],\n      \"1f3fb-1f3fe\": [\"1f9d1-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fe\", 26, 50, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFE\"]],\n      \"1f3fb-1f3ff\": [\"1f9d1-1f3fb-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3ff\", 26, 51, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFF\"]],\n      \"1f3fc-1f3fb\": [\"1f9d1-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fb\", 26, 52, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFB\"]],\n      \"1f3fc-1f3fd\": [\"1f9d1-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fd\", 26, 53, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFD\"]],\n      \"1f3fc-1f3fe\": [\"1f9d1-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fe\", 26, 54, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFE\"]],\n      \"1f3fc-1f3ff\": [\"1f9d1-1f3fc-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3ff\", 26, 55, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFF\"]],\n      \"1f3fd-1f3fb\": [\"1f9d1-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fb\", 26, 56, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFB\"]],\n      \"1f3fd-1f3fc\": [\"1f9d1-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fc\", 26, 57, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFC\"]],\n      \"1f3fd-1f3fe\": [\"1f9d1-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fe\", 26, 58, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFE\"]],\n      \"1f3fd-1f3ff\": [\"1f9d1-1f3fd-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3ff\", 26, 59, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFF\"]],\n      \"1f3fe-1f3fb\": [\"1f9d1-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fb\", 26, 60, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFB\"]],\n      \"1f3fe-1f3fc\": [\"1f9d1-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fc\", 27, 0, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFC\"]],\n      \"1f3fe-1f3fd\": [\"1f9d1-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fd\", 27, 1, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFD\"]],\n      \"1f3fe-1f3ff\": [\"1f9d1-1f3fe-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3ff\", 27, 2, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFF\"]],\n      \"1f3ff-1f3fb\": [\"1f9d1-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fb\", 27, 3, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFF\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFB\"]],\n      \"1f3ff-1f3fc\": [\"1f9d1-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fc\", 27, 4, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFF\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFC\"]],\n      \"1f3ff-1f3fd\": [\"1f9d1-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fd\", 27, 5, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFF\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFD\"]],\n      \"1f3ff-1f3fe\": [\"1f9d1-1f3ff-200d-2764-fe0f-200d-1f48b-200d-1f9d1-1f3fe\", 27, 6, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFF\\u200D\\u2764\\uFE0F\\u200D\\uD83D\\uDC8B\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFE\"]]\n    },\n    \"1f491\": {\n      \"1f3fb\": [\"1f491-1f3fb\", 27, 9, 15, [\"\\uD83D\\uDC91\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f491-1f3fc\", 27, 10, 15, [\"\\uD83D\\uDC91\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f491-1f3fd\", 27, 11, 15, [\"\\uD83D\\uDC91\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f491-1f3fe\", 27, 12, 15, [\"\\uD83D\\uDC91\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f491-1f3ff\", 27, 13, 15, [\"\\uD83D\\uDC91\\uD83C\\uDFFF\"]],\n      \"1f3fb-1f3fc\": [\"1f9d1-1f3fb-200d-2764-fe0f-200d-1f9d1-1f3fc\", 27, 14, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFC\"]],\n      \"1f3fb-1f3fd\": [\"1f9d1-1f3fb-200d-2764-fe0f-200d-1f9d1-1f3fd\", 27, 15, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFD\"]],\n      \"1f3fb-1f3fe\": [\"1f9d1-1f3fb-200d-2764-fe0f-200d-1f9d1-1f3fe\", 27, 16, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFE\"]],\n      \"1f3fb-1f3ff\": [\"1f9d1-1f3fb-200d-2764-fe0f-200d-1f9d1-1f3ff\", 27, 17, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFF\"]],\n      \"1f3fc-1f3fb\": [\"1f9d1-1f3fc-200d-2764-fe0f-200d-1f9d1-1f3fb\", 27, 18, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\u2764\\uFE0F\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFB\"]],\n      \"1f3fc-1f3fd\": [\"1f9d1-1f3fc-200d-2764-fe0f-200d-1f9d1-1f3fd\", 27, 19, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\u2764\\uFE0F\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFD\"]],\n      \"1f3fc-1f3fe\": [\"1f9d1-1f3fc-200d-2764-fe0f-200d-1f9d1-1f3fe\", 27, 20, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\u2764\\uFE0F\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFE\"]],\n      \"1f3fc-1f3ff\": [\"1f9d1-1f3fc-200d-2764-fe0f-200d-1f9d1-1f3ff\", 27, 21, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\u2764\\uFE0F\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFF\"]],\n      \"1f3fd-1f3fb\": [\"1f9d1-1f3fd-200d-2764-fe0f-200d-1f9d1-1f3fb\", 27, 22, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\u2764\\uFE0F\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFB\"]],\n      \"1f3fd-1f3fc\": [\"1f9d1-1f3fd-200d-2764-fe0f-200d-1f9d1-1f3fc\", 27, 23, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\u2764\\uFE0F\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFC\"]],\n      \"1f3fd-1f3fe\": [\"1f9d1-1f3fd-200d-2764-fe0f-200d-1f9d1-1f3fe\", 27, 24, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\u2764\\uFE0F\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFE\"]],\n      \"1f3fd-1f3ff\": [\"1f9d1-1f3fd-200d-2764-fe0f-200d-1f9d1-1f3ff\", 27, 25, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\u2764\\uFE0F\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFF\"]],\n      \"1f3fe-1f3fb\": [\"1f9d1-1f3fe-200d-2764-fe0f-200d-1f9d1-1f3fb\", 27, 26, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\u2764\\uFE0F\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFB\"]],\n      \"1f3fe-1f3fc\": [\"1f9d1-1f3fe-200d-2764-fe0f-200d-1f9d1-1f3fc\", 27, 27, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\u2764\\uFE0F\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFC\"]],\n      \"1f3fe-1f3fd\": [\"1f9d1-1f3fe-200d-2764-fe0f-200d-1f9d1-1f3fd\", 27, 28, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\u2764\\uFE0F\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFD\"]],\n      \"1f3fe-1f3ff\": [\"1f9d1-1f3fe-200d-2764-fe0f-200d-1f9d1-1f3ff\", 27, 29, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\u2764\\uFE0F\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFF\"]],\n      \"1f3ff-1f3fb\": [\"1f9d1-1f3ff-200d-2764-fe0f-200d-1f9d1-1f3fb\", 27, 30, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFF\\u200D\\u2764\\uFE0F\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFB\"]],\n      \"1f3ff-1f3fc\": [\"1f9d1-1f3ff-200d-2764-fe0f-200d-1f9d1-1f3fc\", 27, 31, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFF\\u200D\\u2764\\uFE0F\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFC\"]],\n      \"1f3ff-1f3fd\": [\"1f9d1-1f3ff-200d-2764-fe0f-200d-1f9d1-1f3fd\", 27, 32, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFF\\u200D\\u2764\\uFE0F\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFD\"]],\n      \"1f3ff-1f3fe\": [\"1f9d1-1f3ff-200d-2764-fe0f-200d-1f9d1-1f3fe\", 27, 33, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFF\\u200D\\u2764\\uFE0F\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFE\"]]\n    },\n    \"1f4aa\": {\n      \"1f3fb\": [\"1f4aa-1f3fb\", 27, 59, 15, [\"\\uD83D\\uDCAA\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f4aa-1f3fc\", 27, 60, 15, [\"\\uD83D\\uDCAA\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f4aa-1f3fd\", 28, 0, 15, [\"\\uD83D\\uDCAA\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f4aa-1f3fe\", 28, 1, 15, [\"\\uD83D\\uDCAA\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f4aa-1f3ff\", 28, 2, 15, [\"\\uD83D\\uDCAA\\uD83C\\uDFFF\"]]\n    },\n    \"1f574-fe0f\": {\n      \"1f3fb\": [\"1f574-1f3fb\", 31, 0, 15, [\"\\uD83D\\uDD74\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f574-1f3fc\", 31, 1, 15, [\"\\uD83D\\uDD74\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f574-1f3fd\", 31, 2, 15, [\"\\uD83D\\uDD74\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f574-1f3fe\", 31, 3, 15, [\"\\uD83D\\uDD74\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f574-1f3ff\", 31, 4, 15, [\"\\uD83D\\uDD74\\uD83C\\uDFFF\"]]\n    },\n    \"1f575-fe0f-200d-2640-fe0f\": {\n      \"1f3fb\": [\"1f575-1f3fb-200d-2640-fe0f\", 31, 6, 15, [\"\\uD83D\\uDD75\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fc\": [\"1f575-1f3fc-200d-2640-fe0f\", 31, 7, 15, [\"\\uD83D\\uDD75\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fd\": [\"1f575-1f3fd-200d-2640-fe0f\", 31, 8, 15, [\"\\uD83D\\uDD75\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fe\": [\"1f575-1f3fe-200d-2640-fe0f\", 31, 9, 15, [\"\\uD83D\\uDD75\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\"]],\n      \"1f3ff\": [\"1f575-1f3ff-200d-2640-fe0f\", 31, 10, 15, [\"\\uD83D\\uDD75\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\"]]\n    },\n    \"1f575-fe0f-200d-2642-fe0f\": {\n      \"1f3fb\": [\"1f575-1f3fb-200d-2642-fe0f\", 31, 12, 15, [\"\\uD83D\\uDD75\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDD75\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f575-1f3fc-200d-2642-fe0f\", 31, 13, 15, [\"\\uD83D\\uDD75\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDD75\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f575-1f3fd-200d-2642-fe0f\", 31, 14, 15, [\"\\uD83D\\uDD75\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDD75\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f575-1f3fe-200d-2642-fe0f\", 31, 15, 15, [\"\\uD83D\\uDD75\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDD75\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f575-1f3ff-200d-2642-fe0f\", 31, 16, 15, [\"\\uD83D\\uDD75\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDD75\\uD83C\\uDFFF\"]]\n    },\n    \"1f57a\": {\n      \"1f3fb\": [\"1f57a-1f3fb\", 31, 28, 15, [\"\\uD83D\\uDD7A\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f57a-1f3fc\", 31, 29, 15, [\"\\uD83D\\uDD7A\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f57a-1f3fd\", 31, 30, 15, [\"\\uD83D\\uDD7A\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f57a-1f3fe\", 31, 31, 15, [\"\\uD83D\\uDD7A\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f57a-1f3ff\", 31, 32, 15, [\"\\uD83D\\uDD7A\\uD83C\\uDFFF\"]]\n    },\n    \"1f590-fe0f\": {\n      \"1f3fb\": [\"1f590-1f3fb\", 31, 39, 15, [\"\\uD83D\\uDD90\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f590-1f3fc\", 31, 40, 15, [\"\\uD83D\\uDD90\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f590-1f3fd\", 31, 41, 15, [\"\\uD83D\\uDD90\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f590-1f3fe\", 31, 42, 15, [\"\\uD83D\\uDD90\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f590-1f3ff\", 31, 43, 15, [\"\\uD83D\\uDD90\\uD83C\\uDFFF\"]]\n    },\n    \"1f595\": {\n      \"1f3fb\": [\"1f595-1f3fb\", 31, 45, 15, [\"\\uD83D\\uDD95\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f595-1f3fc\", 31, 46, 15, [\"\\uD83D\\uDD95\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f595-1f3fd\", 31, 47, 15, [\"\\uD83D\\uDD95\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f595-1f3fe\", 31, 48, 15, [\"\\uD83D\\uDD95\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f595-1f3ff\", 31, 49, 15, [\"\\uD83D\\uDD95\\uD83C\\uDFFF\"]]\n    },\n    \"1f596\": {\n      \"1f3fb\": [\"1f596-1f3fb\", 31, 51, 15, [\"\\uD83D\\uDD96\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f596-1f3fc\", 31, 52, 15, [\"\\uD83D\\uDD96\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f596-1f3fd\", 31, 53, 15, [\"\\uD83D\\uDD96\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f596-1f3fe\", 31, 54, 15, [\"\\uD83D\\uDD96\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f596-1f3ff\", 31, 55, 15, [\"\\uD83D\\uDD96\\uD83C\\uDFFF\"]]\n    },\n    \"1f645-200d-2640-fe0f\": {\n      \"1f3fb\": [\"1f645-1f3fb-200d-2640-fe0f\", 33, 33, 15, [\"\\uD83D\\uDE45\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDE45\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f645-1f3fc-200d-2640-fe0f\", 33, 34, 15, [\"\\uD83D\\uDE45\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDE45\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f645-1f3fd-200d-2640-fe0f\", 33, 35, 15, [\"\\uD83D\\uDE45\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDE45\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f645-1f3fe-200d-2640-fe0f\", 33, 36, 15, [\"\\uD83D\\uDE45\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDE45\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f645-1f3ff-200d-2640-fe0f\", 33, 37, 15, [\"\\uD83D\\uDE45\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDE45\\uD83C\\uDFFF\"]]\n    },\n    \"1f645-200d-2642-fe0f\": {\n      \"1f3fb\": [\"1f645-1f3fb-200d-2642-fe0f\", 33, 39, 15, [\"\\uD83D\\uDE45\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fc\": [\"1f645-1f3fc-200d-2642-fe0f\", 33, 40, 15, [\"\\uD83D\\uDE45\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fd\": [\"1f645-1f3fd-200d-2642-fe0f\", 33, 41, 15, [\"\\uD83D\\uDE45\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fe\": [\"1f645-1f3fe-200d-2642-fe0f\", 33, 42, 15, [\"\\uD83D\\uDE45\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\"]],\n      \"1f3ff\": [\"1f645-1f3ff-200d-2642-fe0f\", 33, 43, 15, [\"\\uD83D\\uDE45\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\"]]\n    },\n    \"1f646-200d-2640-fe0f\": {\n      \"1f3fb\": [\"1f646-1f3fb-200d-2640-fe0f\", 33, 51, 15, [\"\\uD83D\\uDE46\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDE46\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f646-1f3fc-200d-2640-fe0f\", 33, 52, 15, [\"\\uD83D\\uDE46\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDE46\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f646-1f3fd-200d-2640-fe0f\", 33, 53, 15, [\"\\uD83D\\uDE46\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDE46\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f646-1f3fe-200d-2640-fe0f\", 33, 54, 15, [\"\\uD83D\\uDE46\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDE46\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f646-1f3ff-200d-2640-fe0f\", 33, 55, 15, [\"\\uD83D\\uDE46\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDE46\\uD83C\\uDFFF\"]]\n    },\n    \"1f646-200d-2642-fe0f\": {\n      \"1f3fb\": [\"1f646-1f3fb-200d-2642-fe0f\", 33, 57, 15, [\"\\uD83D\\uDE46\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fc\": [\"1f646-1f3fc-200d-2642-fe0f\", 33, 58, 15, [\"\\uD83D\\uDE46\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fd\": [\"1f646-1f3fd-200d-2642-fe0f\", 33, 59, 15, [\"\\uD83D\\uDE46\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fe\": [\"1f646-1f3fe-200d-2642-fe0f\", 33, 60, 15, [\"\\uD83D\\uDE46\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\"]],\n      \"1f3ff\": [\"1f646-1f3ff-200d-2642-fe0f\", 34, 0, 15, [\"\\uD83D\\uDE46\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\"]]\n    },\n    \"1f647-200d-2640-fe0f\": {\n      \"1f3fb\": [\"1f647-1f3fb-200d-2640-fe0f\", 34, 8, 15, [\"\\uD83D\\uDE47\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fc\": [\"1f647-1f3fc-200d-2640-fe0f\", 34, 9, 15, [\"\\uD83D\\uDE47\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fd\": [\"1f647-1f3fd-200d-2640-fe0f\", 34, 10, 15, [\"\\uD83D\\uDE47\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fe\": [\"1f647-1f3fe-200d-2640-fe0f\", 34, 11, 15, [\"\\uD83D\\uDE47\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\"]],\n      \"1f3ff\": [\"1f647-1f3ff-200d-2640-fe0f\", 34, 12, 15, [\"\\uD83D\\uDE47\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\"]]\n    },\n    \"1f647-200d-2642-fe0f\": {\n      \"1f3fb\": [\"1f647-1f3fb-200d-2642-fe0f\", 34, 14, 15, [\"\\uD83D\\uDE47\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fc\": [\"1f647-1f3fc-200d-2642-fe0f\", 34, 15, 15, [\"\\uD83D\\uDE47\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fd\": [\"1f647-1f3fd-200d-2642-fe0f\", 34, 16, 15, [\"\\uD83D\\uDE47\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fe\": [\"1f647-1f3fe-200d-2642-fe0f\", 34, 17, 15, [\"\\uD83D\\uDE47\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\"]],\n      \"1f3ff\": [\"1f647-1f3ff-200d-2642-fe0f\", 34, 18, 15, [\"\\uD83D\\uDE47\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\"]]\n    },\n    \"1f647\": {\n      \"1f3fb\": [\"1f647-1f3fb\", 34, 20, 15, [\"\\uD83D\\uDE47\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f647-1f3fc\", 34, 21, 15, [\"\\uD83D\\uDE47\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f647-1f3fd\", 34, 22, 15, [\"\\uD83D\\uDE47\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f647-1f3fe\", 34, 23, 15, [\"\\uD83D\\uDE47\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f647-1f3ff\", 34, 24, 15, [\"\\uD83D\\uDE47\\uD83C\\uDFFF\"]]\n    },\n    \"1f64b-200d-2640-fe0f\": {\n      \"1f3fb\": [\"1f64b-1f3fb-200d-2640-fe0f\", 34, 29, 15, [\"\\uD83D\\uDE4B\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDE4B\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f64b-1f3fc-200d-2640-fe0f\", 34, 30, 15, [\"\\uD83D\\uDE4B\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDE4B\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f64b-1f3fd-200d-2640-fe0f\", 34, 31, 15, [\"\\uD83D\\uDE4B\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDE4B\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f64b-1f3fe-200d-2640-fe0f\", 34, 32, 15, [\"\\uD83D\\uDE4B\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDE4B\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f64b-1f3ff-200d-2640-fe0f\", 34, 33, 15, [\"\\uD83D\\uDE4B\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDE4B\\uD83C\\uDFFF\"]]\n    },\n    \"1f64b-200d-2642-fe0f\": {\n      \"1f3fb\": [\"1f64b-1f3fb-200d-2642-fe0f\", 34, 35, 15, [\"\\uD83D\\uDE4B\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fc\": [\"1f64b-1f3fc-200d-2642-fe0f\", 34, 36, 15, [\"\\uD83D\\uDE4B\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fd\": [\"1f64b-1f3fd-200d-2642-fe0f\", 34, 37, 15, [\"\\uD83D\\uDE4B\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fe\": [\"1f64b-1f3fe-200d-2642-fe0f\", 34, 38, 15, [\"\\uD83D\\uDE4B\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\"]],\n      \"1f3ff\": [\"1f64b-1f3ff-200d-2642-fe0f\", 34, 39, 15, [\"\\uD83D\\uDE4B\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\"]]\n    },\n    \"1f64c\": {\n      \"1f3fb\": [\"1f64c-1f3fb\", 34, 47, 15, [\"\\uD83D\\uDE4C\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f64c-1f3fc\", 34, 48, 15, [\"\\uD83D\\uDE4C\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f64c-1f3fd\", 34, 49, 15, [\"\\uD83D\\uDE4C\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f64c-1f3fe\", 34, 50, 15, [\"\\uD83D\\uDE4C\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f64c-1f3ff\", 34, 51, 15, [\"\\uD83D\\uDE4C\\uD83C\\uDFFF\"]]\n    },\n    \"1f64d-200d-2640-fe0f\": {\n      \"1f3fb\": [\"1f64d-1f3fb-200d-2640-fe0f\", 34, 53, 15, [\"\\uD83D\\uDE4D\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDE4D\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f64d-1f3fc-200d-2640-fe0f\", 34, 54, 15, [\"\\uD83D\\uDE4D\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDE4D\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f64d-1f3fd-200d-2640-fe0f\", 34, 55, 15, [\"\\uD83D\\uDE4D\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDE4D\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f64d-1f3fe-200d-2640-fe0f\", 34, 56, 15, [\"\\uD83D\\uDE4D\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDE4D\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f64d-1f3ff-200d-2640-fe0f\", 34, 57, 15, [\"\\uD83D\\uDE4D\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDE4D\\uD83C\\uDFFF\"]]\n    },\n    \"1f64d-200d-2642-fe0f\": {\n      \"1f3fb\": [\"1f64d-1f3fb-200d-2642-fe0f\", 34, 59, 15, [\"\\uD83D\\uDE4D\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fc\": [\"1f64d-1f3fc-200d-2642-fe0f\", 34, 60, 15, [\"\\uD83D\\uDE4D\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fd\": [\"1f64d-1f3fd-200d-2642-fe0f\", 35, 0, 15, [\"\\uD83D\\uDE4D\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fe\": [\"1f64d-1f3fe-200d-2642-fe0f\", 35, 1, 15, [\"\\uD83D\\uDE4D\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\"]],\n      \"1f3ff\": [\"1f64d-1f3ff-200d-2642-fe0f\", 35, 2, 15, [\"\\uD83D\\uDE4D\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\"]]\n    },\n    \"1f64e-200d-2640-fe0f\": {\n      \"1f3fb\": [\"1f64e-1f3fb-200d-2640-fe0f\", 35, 10, 15, [\"\\uD83D\\uDE4E\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDE4E\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f64e-1f3fc-200d-2640-fe0f\", 35, 11, 15, [\"\\uD83D\\uDE4E\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDE4E\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f64e-1f3fd-200d-2640-fe0f\", 35, 12, 15, [\"\\uD83D\\uDE4E\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDE4E\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f64e-1f3fe-200d-2640-fe0f\", 35, 13, 15, [\"\\uD83D\\uDE4E\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDE4E\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f64e-1f3ff-200d-2640-fe0f\", 35, 14, 15, [\"\\uD83D\\uDE4E\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\", \"\\uD83D\\uDE4E\\uD83C\\uDFFF\"]]\n    },\n    \"1f64e-200d-2642-fe0f\": {\n      \"1f3fb\": [\"1f64e-1f3fb-200d-2642-fe0f\", 35, 16, 15, [\"\\uD83D\\uDE4E\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fc\": [\"1f64e-1f3fc-200d-2642-fe0f\", 35, 17, 15, [\"\\uD83D\\uDE4E\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fd\": [\"1f64e-1f3fd-200d-2642-fe0f\", 35, 18, 15, [\"\\uD83D\\uDE4E\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fe\": [\"1f64e-1f3fe-200d-2642-fe0f\", 35, 19, 15, [\"\\uD83D\\uDE4E\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\"]],\n      \"1f3ff\": [\"1f64e-1f3ff-200d-2642-fe0f\", 35, 20, 15, [\"\\uD83D\\uDE4E\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\"]]\n    },\n    \"1f64f\": {\n      \"1f3fb\": [\"1f64f-1f3fb\", 35, 28, 15, [\"\\uD83D\\uDE4F\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f64f-1f3fc\", 35, 29, 15, [\"\\uD83D\\uDE4F\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f64f-1f3fd\", 35, 30, 15, [\"\\uD83D\\uDE4F\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f64f-1f3fe\", 35, 31, 15, [\"\\uD83D\\uDE4F\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f64f-1f3ff\", 35, 32, 15, [\"\\uD83D\\uDE4F\\uD83C\\uDFFF\"]]\n    },\n    \"1f6a3-200d-2640-fe0f\": {\n      \"1f3fb\": [\"1f6a3-1f3fb-200d-2640-fe0f\", 36, 8, 15, [\"\\uD83D\\uDEA3\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fc\": [\"1f6a3-1f3fc-200d-2640-fe0f\", 36, 9, 15, [\"\\uD83D\\uDEA3\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fd\": [\"1f6a3-1f3fd-200d-2640-fe0f\", 36, 10, 15, [\"\\uD83D\\uDEA3\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fe\": [\"1f6a3-1f3fe-200d-2640-fe0f\", 36, 11, 15, [\"\\uD83D\\uDEA3\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\"]],\n      \"1f3ff\": [\"1f6a3-1f3ff-200d-2640-fe0f\", 36, 12, 15, [\"\\uD83D\\uDEA3\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\"]]\n    },\n    \"1f6a3-200d-2642-fe0f\": {\n      \"1f3fb\": [\"1f6a3-1f3fb-200d-2642-fe0f\", 36, 14, 15, [\"\\uD83D\\uDEA3\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDEA3\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f6a3-1f3fc-200d-2642-fe0f\", 36, 15, 15, [\"\\uD83D\\uDEA3\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDEA3\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f6a3-1f3fd-200d-2642-fe0f\", 36, 16, 15, [\"\\uD83D\\uDEA3\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDEA3\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f6a3-1f3fe-200d-2642-fe0f\", 36, 17, 15, [\"\\uD83D\\uDEA3\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDEA3\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f6a3-1f3ff-200d-2642-fe0f\", 36, 18, 15, [\"\\uD83D\\uDEA3\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDEA3\\uD83C\\uDFFF\"]]\n    },\n    \"1f6b4-200d-2640-fe0f\": {\n      \"1f3fb\": [\"1f6b4-1f3fb-200d-2640-fe0f\", 36, 42, 15, [\"\\uD83D\\uDEB4\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fc\": [\"1f6b4-1f3fc-200d-2640-fe0f\", 36, 43, 15, [\"\\uD83D\\uDEB4\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fd\": [\"1f6b4-1f3fd-200d-2640-fe0f\", 36, 44, 15, [\"\\uD83D\\uDEB4\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fe\": [\"1f6b4-1f3fe-200d-2640-fe0f\", 36, 45, 15, [\"\\uD83D\\uDEB4\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\"]],\n      \"1f3ff\": [\"1f6b4-1f3ff-200d-2640-fe0f\", 36, 46, 15, [\"\\uD83D\\uDEB4\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\"]]\n    },\n    \"1f6b4-200d-2642-fe0f\": {\n      \"1f3fb\": [\"1f6b4-1f3fb-200d-2642-fe0f\", 36, 48, 15, [\"\\uD83D\\uDEB4\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDEB4\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f6b4-1f3fc-200d-2642-fe0f\", 36, 49, 15, [\"\\uD83D\\uDEB4\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDEB4\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f6b4-1f3fd-200d-2642-fe0f\", 36, 50, 15, [\"\\uD83D\\uDEB4\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDEB4\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f6b4-1f3fe-200d-2642-fe0f\", 36, 51, 15, [\"\\uD83D\\uDEB4\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDEB4\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f6b4-1f3ff-200d-2642-fe0f\", 36, 52, 15, [\"\\uD83D\\uDEB4\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDEB4\\uD83C\\uDFFF\"]]\n    },\n    \"1f6b5-200d-2640-fe0f\": {\n      \"1f3fb\": [\"1f6b5-1f3fb-200d-2640-fe0f\", 36, 60, 15, [\"\\uD83D\\uDEB5\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fc\": [\"1f6b5-1f3fc-200d-2640-fe0f\", 37, 0, 15, [\"\\uD83D\\uDEB5\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fd\": [\"1f6b5-1f3fd-200d-2640-fe0f\", 37, 1, 15, [\"\\uD83D\\uDEB5\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fe\": [\"1f6b5-1f3fe-200d-2640-fe0f\", 37, 2, 15, [\"\\uD83D\\uDEB5\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\"]],\n      \"1f3ff\": [\"1f6b5-1f3ff-200d-2640-fe0f\", 37, 3, 15, [\"\\uD83D\\uDEB5\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\"]]\n    },\n    \"1f6b5-200d-2642-fe0f\": {\n      \"1f3fb\": [\"1f6b5-1f3fb-200d-2642-fe0f\", 37, 5, 15, [\"\\uD83D\\uDEB5\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDEB5\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f6b5-1f3fc-200d-2642-fe0f\", 37, 6, 15, [\"\\uD83D\\uDEB5\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDEB5\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f6b5-1f3fd-200d-2642-fe0f\", 37, 7, 15, [\"\\uD83D\\uDEB5\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDEB5\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f6b5-1f3fe-200d-2642-fe0f\", 37, 8, 15, [\"\\uD83D\\uDEB5\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDEB5\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f6b5-1f3ff-200d-2642-fe0f\", 37, 9, 15, [\"\\uD83D\\uDEB5\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDEB5\\uD83C\\uDFFF\"]]\n    },\n    \"1f6b6-200d-2640-fe0f\": {\n      \"1f3fb\": [\"1f6b6-1f3fb-200d-2640-fe0f\", 37, 17, 15, [\"\\uD83D\\uDEB6\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fc\": [\"1f6b6-1f3fc-200d-2640-fe0f\", 37, 18, 15, [\"\\uD83D\\uDEB6\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fd\": [\"1f6b6-1f3fd-200d-2640-fe0f\", 37, 19, 15, [\"\\uD83D\\uDEB6\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fe\": [\"1f6b6-1f3fe-200d-2640-fe0f\", 37, 20, 15, [\"\\uD83D\\uDEB6\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\"]],\n      \"1f3ff\": [\"1f6b6-1f3ff-200d-2640-fe0f\", 37, 21, 15, [\"\\uD83D\\uDEB6\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\"]]\n    },\n    \"1f6b6-200d-2642-fe0f\": {\n      \"1f3fb\": [\"1f6b6-1f3fb-200d-2642-fe0f\", 37, 23, 15, [\"\\uD83D\\uDEB6\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDEB6\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f6b6-1f3fc-200d-2642-fe0f\", 37, 24, 15, [\"\\uD83D\\uDEB6\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDEB6\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f6b6-1f3fd-200d-2642-fe0f\", 37, 25, 15, [\"\\uD83D\\uDEB6\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDEB6\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f6b6-1f3fe-200d-2642-fe0f\", 37, 26, 15, [\"\\uD83D\\uDEB6\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDEB6\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f6b6-1f3ff-200d-2642-fe0f\", 37, 27, 15, [\"\\uD83D\\uDEB6\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\", \"\\uD83D\\uDEB6\\uD83C\\uDFFF\"]]\n    },\n    \"1f6c0\": {\n      \"1f3fb\": [\"1f6c0-1f3fb\", 37, 44, 15, [\"\\uD83D\\uDEC0\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f6c0-1f3fc\", 37, 45, 15, [\"\\uD83D\\uDEC0\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f6c0-1f3fd\", 37, 46, 15, [\"\\uD83D\\uDEC0\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f6c0-1f3fe\", 37, 47, 15, [\"\\uD83D\\uDEC0\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f6c0-1f3ff\", 37, 48, 15, [\"\\uD83D\\uDEC0\\uD83C\\uDFFF\"]]\n    },\n    \"1f6cc\": {\n      \"1f3fb\": [\"1f6cc-1f3fb\", 37, 56, 15, [\"\\uD83D\\uDECC\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f6cc-1f3fc\", 37, 57, 15, [\"\\uD83D\\uDECC\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f6cc-1f3fd\", 37, 58, 15, [\"\\uD83D\\uDECC\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f6cc-1f3fe\", 37, 59, 15, [\"\\uD83D\\uDECC\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f6cc-1f3ff\", 37, 60, 15, [\"\\uD83D\\uDECC\\uD83C\\uDFFF\"]]\n    },\n    \"1f90c\": {\n      \"1f3fb\": [\"1f90c-1f3fb\", 38, 47, 15, [\"\\uD83E\\uDD0C\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f90c-1f3fc\", 38, 48, 15, [\"\\uD83E\\uDD0C\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f90c-1f3fd\", 38, 49, 15, [\"\\uD83E\\uDD0C\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f90c-1f3fe\", 38, 50, 15, [\"\\uD83E\\uDD0C\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f90c-1f3ff\", 38, 51, 15, [\"\\uD83E\\uDD0C\\uD83C\\uDFFF\"]]\n    },\n    \"1f90f\": {\n      \"1f3fb\": [\"1f90f-1f3fb\", 38, 55, 15, [\"\\uD83E\\uDD0F\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f90f-1f3fc\", 38, 56, 15, [\"\\uD83E\\uDD0F\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f90f-1f3fd\", 38, 57, 15, [\"\\uD83E\\uDD0F\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f90f-1f3fe\", 38, 58, 15, [\"\\uD83E\\uDD0F\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f90f-1f3ff\", 38, 59, 15, [\"\\uD83E\\uDD0F\\uD83C\\uDFFF\"]]\n    },\n    \"1f918\": {\n      \"1f3fb\": [\"1f918-1f3fb\", 39, 8, 15, [\"\\uD83E\\uDD18\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f918-1f3fc\", 39, 9, 15, [\"\\uD83E\\uDD18\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f918-1f3fd\", 39, 10, 15, [\"\\uD83E\\uDD18\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f918-1f3fe\", 39, 11, 15, [\"\\uD83E\\uDD18\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f918-1f3ff\", 39, 12, 15, [\"\\uD83E\\uDD18\\uD83C\\uDFFF\"]]\n    },\n    \"1f919\": {\n      \"1f3fb\": [\"1f919-1f3fb\", 39, 14, 15, [\"\\uD83E\\uDD19\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f919-1f3fc\", 39, 15, 15, [\"\\uD83E\\uDD19\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f919-1f3fd\", 39, 16, 15, [\"\\uD83E\\uDD19\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f919-1f3fe\", 39, 17, 15, [\"\\uD83E\\uDD19\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f919-1f3ff\", 39, 18, 15, [\"\\uD83E\\uDD19\\uD83C\\uDFFF\"]]\n    },\n    \"1f91a\": {\n      \"1f3fb\": [\"1f91a-1f3fb\", 39, 20, 15, [\"\\uD83E\\uDD1A\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f91a-1f3fc\", 39, 21, 15, [\"\\uD83E\\uDD1A\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f91a-1f3fd\", 39, 22, 15, [\"\\uD83E\\uDD1A\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f91a-1f3fe\", 39, 23, 15, [\"\\uD83E\\uDD1A\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f91a-1f3ff\", 39, 24, 15, [\"\\uD83E\\uDD1A\\uD83C\\uDFFF\"]]\n    },\n    \"1f91b\": {\n      \"1f3fb\": [\"1f91b-1f3fb\", 39, 26, 15, [\"\\uD83E\\uDD1B\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f91b-1f3fc\", 39, 27, 15, [\"\\uD83E\\uDD1B\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f91b-1f3fd\", 39, 28, 15, [\"\\uD83E\\uDD1B\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f91b-1f3fe\", 39, 29, 15, [\"\\uD83E\\uDD1B\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f91b-1f3ff\", 39, 30, 15, [\"\\uD83E\\uDD1B\\uD83C\\uDFFF\"]]\n    },\n    \"1f91c\": {\n      \"1f3fb\": [\"1f91c-1f3fb\", 39, 32, 15, [\"\\uD83E\\uDD1C\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f91c-1f3fc\", 39, 33, 15, [\"\\uD83E\\uDD1C\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f91c-1f3fd\", 39, 34, 15, [\"\\uD83E\\uDD1C\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f91c-1f3fe\", 39, 35, 15, [\"\\uD83E\\uDD1C\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f91c-1f3ff\", 39, 36, 15, [\"\\uD83E\\uDD1C\\uD83C\\uDFFF\"]]\n    },\n    \"1f91d\": {\n      \"1f3fb\": [\"1f91d-1f3fb\", 39, 38, 15, [\"\\uD83E\\uDD1D\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f91d-1f3fc\", 39, 39, 15, [\"\\uD83E\\uDD1D\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f91d-1f3fd\", 39, 40, 15, [\"\\uD83E\\uDD1D\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f91d-1f3fe\", 39, 41, 15, [\"\\uD83E\\uDD1D\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f91d-1f3ff\", 39, 42, 15, [\"\\uD83E\\uDD1D\\uD83C\\uDFFF\"]],\n      \"1f3fb-1f3fc\": [\"1faf1-1f3fb-200d-1faf2-1f3fc\", 39, 43, 15, [\"\\uD83E\\uDEF1\\uD83C\\uDFFB\\u200D\\uD83E\\uDEF2\\uD83C\\uDFFC\"]],\n      \"1f3fb-1f3fd\": [\"1faf1-1f3fb-200d-1faf2-1f3fd\", 39, 44, 15, [\"\\uD83E\\uDEF1\\uD83C\\uDFFB\\u200D\\uD83E\\uDEF2\\uD83C\\uDFFD\"]],\n      \"1f3fb-1f3fe\": [\"1faf1-1f3fb-200d-1faf2-1f3fe\", 39, 45, 15, [\"\\uD83E\\uDEF1\\uD83C\\uDFFB\\u200D\\uD83E\\uDEF2\\uD83C\\uDFFE\"]],\n      \"1f3fb-1f3ff\": [\"1faf1-1f3fb-200d-1faf2-1f3ff\", 39, 46, 15, [\"\\uD83E\\uDEF1\\uD83C\\uDFFB\\u200D\\uD83E\\uDEF2\\uD83C\\uDFFF\"]],\n      \"1f3fc-1f3fb\": [\"1faf1-1f3fc-200d-1faf2-1f3fb\", 39, 47, 15, [\"\\uD83E\\uDEF1\\uD83C\\uDFFC\\u200D\\uD83E\\uDEF2\\uD83C\\uDFFB\"]],\n      \"1f3fc-1f3fd\": [\"1faf1-1f3fc-200d-1faf2-1f3fd\", 39, 48, 15, [\"\\uD83E\\uDEF1\\uD83C\\uDFFC\\u200D\\uD83E\\uDEF2\\uD83C\\uDFFD\"]],\n      \"1f3fc-1f3fe\": [\"1faf1-1f3fc-200d-1faf2-1f3fe\", 39, 49, 15, [\"\\uD83E\\uDEF1\\uD83C\\uDFFC\\u200D\\uD83E\\uDEF2\\uD83C\\uDFFE\"]],\n      \"1f3fc-1f3ff\": [\"1faf1-1f3fc-200d-1faf2-1f3ff\", 39, 50, 15, [\"\\uD83E\\uDEF1\\uD83C\\uDFFC\\u200D\\uD83E\\uDEF2\\uD83C\\uDFFF\"]],\n      \"1f3fd-1f3fb\": [\"1faf1-1f3fd-200d-1faf2-1f3fb\", 39, 51, 15, [\"\\uD83E\\uDEF1\\uD83C\\uDFFD\\u200D\\uD83E\\uDEF2\\uD83C\\uDFFB\"]],\n      \"1f3fd-1f3fc\": [\"1faf1-1f3fd-200d-1faf2-1f3fc\", 39, 52, 15, [\"\\uD83E\\uDEF1\\uD83C\\uDFFD\\u200D\\uD83E\\uDEF2\\uD83C\\uDFFC\"]],\n      \"1f3fd-1f3fe\": [\"1faf1-1f3fd-200d-1faf2-1f3fe\", 39, 53, 15, [\"\\uD83E\\uDEF1\\uD83C\\uDFFD\\u200D\\uD83E\\uDEF2\\uD83C\\uDFFE\"]],\n      \"1f3fd-1f3ff\": [\"1faf1-1f3fd-200d-1faf2-1f3ff\", 39, 54, 15, [\"\\uD83E\\uDEF1\\uD83C\\uDFFD\\u200D\\uD83E\\uDEF2\\uD83C\\uDFFF\"]],\n      \"1f3fe-1f3fb\": [\"1faf1-1f3fe-200d-1faf2-1f3fb\", 39, 55, 15, [\"\\uD83E\\uDEF1\\uD83C\\uDFFE\\u200D\\uD83E\\uDEF2\\uD83C\\uDFFB\"]],\n      \"1f3fe-1f3fc\": [\"1faf1-1f3fe-200d-1faf2-1f3fc\", 39, 56, 15, [\"\\uD83E\\uDEF1\\uD83C\\uDFFE\\u200D\\uD83E\\uDEF2\\uD83C\\uDFFC\"]],\n      \"1f3fe-1f3fd\": [\"1faf1-1f3fe-200d-1faf2-1f3fd\", 39, 57, 15, [\"\\uD83E\\uDEF1\\uD83C\\uDFFE\\u200D\\uD83E\\uDEF2\\uD83C\\uDFFD\"]],\n      \"1f3fe-1f3ff\": [\"1faf1-1f3fe-200d-1faf2-1f3ff\", 39, 58, 15, [\"\\uD83E\\uDEF1\\uD83C\\uDFFE\\u200D\\uD83E\\uDEF2\\uD83C\\uDFFF\"]],\n      \"1f3ff-1f3fb\": [\"1faf1-1f3ff-200d-1faf2-1f3fb\", 39, 59, 15, [\"\\uD83E\\uDEF1\\uD83C\\uDFFF\\u200D\\uD83E\\uDEF2\\uD83C\\uDFFB\"]],\n      \"1f3ff-1f3fc\": [\"1faf1-1f3ff-200d-1faf2-1f3fc\", 39, 60, 15, [\"\\uD83E\\uDEF1\\uD83C\\uDFFF\\u200D\\uD83E\\uDEF2\\uD83C\\uDFFC\"]],\n      \"1f3ff-1f3fd\": [\"1faf1-1f3ff-200d-1faf2-1f3fd\", 40, 0, 15, [\"\\uD83E\\uDEF1\\uD83C\\uDFFF\\u200D\\uD83E\\uDEF2\\uD83C\\uDFFD\"]],\n      \"1f3ff-1f3fe\": [\"1faf1-1f3ff-200d-1faf2-1f3fe\", 40, 1, 15, [\"\\uD83E\\uDEF1\\uD83C\\uDFFF\\u200D\\uD83E\\uDEF2\\uD83C\\uDFFE\"]]\n    },\n    \"1f91e\": {\n      \"1f3fb\": [\"1f91e-1f3fb\", 40, 3, 15, [\"\\uD83E\\uDD1E\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f91e-1f3fc\", 40, 4, 15, [\"\\uD83E\\uDD1E\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f91e-1f3fd\", 40, 5, 15, [\"\\uD83E\\uDD1E\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f91e-1f3fe\", 40, 6, 15, [\"\\uD83E\\uDD1E\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f91e-1f3ff\", 40, 7, 15, [\"\\uD83E\\uDD1E\\uD83C\\uDFFF\"]]\n    },\n    \"1f91f\": {\n      \"1f3fb\": [\"1f91f-1f3fb\", 40, 9, 15, [\"\\uD83E\\uDD1F\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f91f-1f3fc\", 40, 10, 15, [\"\\uD83E\\uDD1F\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f91f-1f3fd\", 40, 11, 15, [\"\\uD83E\\uDD1F\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f91f-1f3fe\", 40, 12, 15, [\"\\uD83E\\uDD1F\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f91f-1f3ff\", 40, 13, 15, [\"\\uD83E\\uDD1F\\uD83C\\uDFFF\"]]\n    },\n    \"1f926-200d-2640-fe0f\": {\n      \"1f3fb\": [\"1f926-1f3fb-200d-2640-fe0f\", 40, 21, 15, [\"\\uD83E\\uDD26\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fc\": [\"1f926-1f3fc-200d-2640-fe0f\", 40, 22, 15, [\"\\uD83E\\uDD26\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fd\": [\"1f926-1f3fd-200d-2640-fe0f\", 40, 23, 15, [\"\\uD83E\\uDD26\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fe\": [\"1f926-1f3fe-200d-2640-fe0f\", 40, 24, 15, [\"\\uD83E\\uDD26\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\"]],\n      \"1f3ff\": [\"1f926-1f3ff-200d-2640-fe0f\", 40, 25, 15, [\"\\uD83E\\uDD26\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\"]]\n    },\n    \"1f926-200d-2642-fe0f\": {\n      \"1f3fb\": [\"1f926-1f3fb-200d-2642-fe0f\", 40, 27, 15, [\"\\uD83E\\uDD26\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fc\": [\"1f926-1f3fc-200d-2642-fe0f\", 40, 28, 15, [\"\\uD83E\\uDD26\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fd\": [\"1f926-1f3fd-200d-2642-fe0f\", 40, 29, 15, [\"\\uD83E\\uDD26\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fe\": [\"1f926-1f3fe-200d-2642-fe0f\", 40, 30, 15, [\"\\uD83E\\uDD26\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\"]],\n      \"1f3ff\": [\"1f926-1f3ff-200d-2642-fe0f\", 40, 31, 15, [\"\\uD83E\\uDD26\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\"]]\n    },\n    \"1f926\": {\n      \"1f3fb\": [\"1f926-1f3fb\", 40, 33, 15, [\"\\uD83E\\uDD26\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f926-1f3fc\", 40, 34, 15, [\"\\uD83E\\uDD26\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f926-1f3fd\", 40, 35, 15, [\"\\uD83E\\uDD26\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f926-1f3fe\", 40, 36, 15, [\"\\uD83E\\uDD26\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f926-1f3ff\", 40, 37, 15, [\"\\uD83E\\uDD26\\uD83C\\uDFFF\"]]\n    },\n    \"1f930\": {\n      \"1f3fb\": [\"1f930-1f3fb\", 40, 48, 15, [\"\\uD83E\\uDD30\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f930-1f3fc\", 40, 49, 15, [\"\\uD83E\\uDD30\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f930-1f3fd\", 40, 50, 15, [\"\\uD83E\\uDD30\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f930-1f3fe\", 40, 51, 15, [\"\\uD83E\\uDD30\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f930-1f3ff\", 40, 52, 15, [\"\\uD83E\\uDD30\\uD83C\\uDFFF\"]]\n    },\n    \"1f931\": {\n      \"1f3fb\": [\"1f931-1f3fb\", 40, 54, 15, [\"\\uD83E\\uDD31\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f931-1f3fc\", 40, 55, 15, [\"\\uD83E\\uDD31\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f931-1f3fd\", 40, 56, 15, [\"\\uD83E\\uDD31\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f931-1f3fe\", 40, 57, 15, [\"\\uD83E\\uDD31\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f931-1f3ff\", 40, 58, 15, [\"\\uD83E\\uDD31\\uD83C\\uDFFF\"]]\n    },\n    \"1f932\": {\n      \"1f3fb\": [\"1f932-1f3fb\", 40, 60, 15, [\"\\uD83E\\uDD32\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f932-1f3fc\", 41, 0, 15, [\"\\uD83E\\uDD32\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f932-1f3fd\", 41, 1, 15, [\"\\uD83E\\uDD32\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f932-1f3fe\", 41, 2, 15, [\"\\uD83E\\uDD32\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f932-1f3ff\", 41, 3, 15, [\"\\uD83E\\uDD32\\uD83C\\uDFFF\"]]\n    },\n    \"1f933\": {\n      \"1f3fb\": [\"1f933-1f3fb\", 41, 5, 15, [\"\\uD83E\\uDD33\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f933-1f3fc\", 41, 6, 15, [\"\\uD83E\\uDD33\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f933-1f3fd\", 41, 7, 15, [\"\\uD83E\\uDD33\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f933-1f3fe\", 41, 8, 15, [\"\\uD83E\\uDD33\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f933-1f3ff\", 41, 9, 15, [\"\\uD83E\\uDD33\\uD83C\\uDFFF\"]]\n    },\n    \"1f934\": {\n      \"1f3fb\": [\"1f934-1f3fb\", 41, 11, 15, [\"\\uD83E\\uDD34\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f934-1f3fc\", 41, 12, 15, [\"\\uD83E\\uDD34\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f934-1f3fd\", 41, 13, 15, [\"\\uD83E\\uDD34\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f934-1f3fe\", 41, 14, 15, [\"\\uD83E\\uDD34\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f934-1f3ff\", 41, 15, 15, [\"\\uD83E\\uDD34\\uD83C\\uDFFF\"]]\n    },\n    \"1f935-200d-2640-fe0f\": {\n      \"1f3fb\": [\"1f935-1f3fb-200d-2640-fe0f\", 41, 17, 15, [\"\\uD83E\\uDD35\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fc\": [\"1f935-1f3fc-200d-2640-fe0f\", 41, 18, 15, [\"\\uD83E\\uDD35\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fd\": [\"1f935-1f3fd-200d-2640-fe0f\", 41, 19, 15, [\"\\uD83E\\uDD35\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fe\": [\"1f935-1f3fe-200d-2640-fe0f\", 41, 20, 15, [\"\\uD83E\\uDD35\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\"]],\n      \"1f3ff\": [\"1f935-1f3ff-200d-2640-fe0f\", 41, 21, 15, [\"\\uD83E\\uDD35\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\"]]\n    },\n    \"1f935-200d-2642-fe0f\": {\n      \"1f3fb\": [\"1f935-1f3fb-200d-2642-fe0f\", 41, 23, 15, [\"\\uD83E\\uDD35\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fc\": [\"1f935-1f3fc-200d-2642-fe0f\", 41, 24, 15, [\"\\uD83E\\uDD35\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fd\": [\"1f935-1f3fd-200d-2642-fe0f\", 41, 25, 15, [\"\\uD83E\\uDD35\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fe\": [\"1f935-1f3fe-200d-2642-fe0f\", 41, 26, 15, [\"\\uD83E\\uDD35\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\"]],\n      \"1f3ff\": [\"1f935-1f3ff-200d-2642-fe0f\", 41, 27, 15, [\"\\uD83E\\uDD35\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\"]]\n    },\n    \"1f935\": {\n      \"1f3fb\": [\"1f935-1f3fb\", 41, 29, 15, [\"\\uD83E\\uDD35\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f935-1f3fc\", 41, 30, 15, [\"\\uD83E\\uDD35\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f935-1f3fd\", 41, 31, 15, [\"\\uD83E\\uDD35\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f935-1f3fe\", 41, 32, 15, [\"\\uD83E\\uDD35\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f935-1f3ff\", 41, 33, 15, [\"\\uD83E\\uDD35\\uD83C\\uDFFF\"]]\n    },\n    \"1f936\": {\n      \"1f3fb\": [\"1f936-1f3fb\", 41, 35, 15, [\"\\uD83E\\uDD36\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f936-1f3fc\", 41, 36, 15, [\"\\uD83E\\uDD36\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f936-1f3fd\", 41, 37, 15, [\"\\uD83E\\uDD36\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f936-1f3fe\", 41, 38, 15, [\"\\uD83E\\uDD36\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f936-1f3ff\", 41, 39, 15, [\"\\uD83E\\uDD36\\uD83C\\uDFFF\"]]\n    },\n    \"1f937-200d-2640-fe0f\": {\n      \"1f3fb\": [\"1f937-1f3fb-200d-2640-fe0f\", 41, 41, 15, [\"\\uD83E\\uDD37\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fc\": [\"1f937-1f3fc-200d-2640-fe0f\", 41, 42, 15, [\"\\uD83E\\uDD37\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fd\": [\"1f937-1f3fd-200d-2640-fe0f\", 41, 43, 15, [\"\\uD83E\\uDD37\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fe\": [\"1f937-1f3fe-200d-2640-fe0f\", 41, 44, 15, [\"\\uD83E\\uDD37\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\"]],\n      \"1f3ff\": [\"1f937-1f3ff-200d-2640-fe0f\", 41, 45, 15, [\"\\uD83E\\uDD37\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\"]]\n    },\n    \"1f937-200d-2642-fe0f\": {\n      \"1f3fb\": [\"1f937-1f3fb-200d-2642-fe0f\", 41, 47, 15, [\"\\uD83E\\uDD37\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fc\": [\"1f937-1f3fc-200d-2642-fe0f\", 41, 48, 15, [\"\\uD83E\\uDD37\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fd\": [\"1f937-1f3fd-200d-2642-fe0f\", 41, 49, 15, [\"\\uD83E\\uDD37\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fe\": [\"1f937-1f3fe-200d-2642-fe0f\", 41, 50, 15, [\"\\uD83E\\uDD37\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\"]],\n      \"1f3ff\": [\"1f937-1f3ff-200d-2642-fe0f\", 41, 51, 15, [\"\\uD83E\\uDD37\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\"]]\n    },\n    \"1f937\": {\n      \"1f3fb\": [\"1f937-1f3fb\", 41, 53, 15, [\"\\uD83E\\uDD37\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f937-1f3fc\", 41, 54, 15, [\"\\uD83E\\uDD37\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f937-1f3fd\", 41, 55, 15, [\"\\uD83E\\uDD37\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f937-1f3fe\", 41, 56, 15, [\"\\uD83E\\uDD37\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f937-1f3ff\", 41, 57, 15, [\"\\uD83E\\uDD37\\uD83C\\uDFFF\"]]\n    },\n    \"1f938-200d-2640-fe0f\": {\n      \"1f3fb\": [\"1f938-1f3fb-200d-2640-fe0f\", 41, 59, 15, [\"\\uD83E\\uDD38\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fc\": [\"1f938-1f3fc-200d-2640-fe0f\", 41, 60, 15, [\"\\uD83E\\uDD38\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fd\": [\"1f938-1f3fd-200d-2640-fe0f\", 42, 0, 15, [\"\\uD83E\\uDD38\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fe\": [\"1f938-1f3fe-200d-2640-fe0f\", 42, 1, 15, [\"\\uD83E\\uDD38\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\"]],\n      \"1f3ff\": [\"1f938-1f3ff-200d-2640-fe0f\", 42, 2, 15, [\"\\uD83E\\uDD38\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\"]]\n    },\n    \"1f938-200d-2642-fe0f\": {\n      \"1f3fb\": [\"1f938-1f3fb-200d-2642-fe0f\", 42, 4, 15, [\"\\uD83E\\uDD38\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fc\": [\"1f938-1f3fc-200d-2642-fe0f\", 42, 5, 15, [\"\\uD83E\\uDD38\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fd\": [\"1f938-1f3fd-200d-2642-fe0f\", 42, 6, 15, [\"\\uD83E\\uDD38\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fe\": [\"1f938-1f3fe-200d-2642-fe0f\", 42, 7, 15, [\"\\uD83E\\uDD38\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\"]],\n      \"1f3ff\": [\"1f938-1f3ff-200d-2642-fe0f\", 42, 8, 15, [\"\\uD83E\\uDD38\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\"]]\n    },\n    \"1f938\": {\n      \"1f3fb\": [\"1f938-1f3fb\", 42, 10, 15, [\"\\uD83E\\uDD38\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f938-1f3fc\", 42, 11, 15, [\"\\uD83E\\uDD38\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f938-1f3fd\", 42, 12, 15, [\"\\uD83E\\uDD38\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f938-1f3fe\", 42, 13, 15, [\"\\uD83E\\uDD38\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f938-1f3ff\", 42, 14, 15, [\"\\uD83E\\uDD38\\uD83C\\uDFFF\"]]\n    },\n    \"1f939-200d-2640-fe0f\": {\n      \"1f3fb\": [\"1f939-1f3fb-200d-2640-fe0f\", 42, 16, 15, [\"\\uD83E\\uDD39\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fc\": [\"1f939-1f3fc-200d-2640-fe0f\", 42, 17, 15, [\"\\uD83E\\uDD39\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fd\": [\"1f939-1f3fd-200d-2640-fe0f\", 42, 18, 15, [\"\\uD83E\\uDD39\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fe\": [\"1f939-1f3fe-200d-2640-fe0f\", 42, 19, 15, [\"\\uD83E\\uDD39\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\"]],\n      \"1f3ff\": [\"1f939-1f3ff-200d-2640-fe0f\", 42, 20, 15, [\"\\uD83E\\uDD39\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\"]]\n    },\n    \"1f939-200d-2642-fe0f\": {\n      \"1f3fb\": [\"1f939-1f3fb-200d-2642-fe0f\", 42, 22, 15, [\"\\uD83E\\uDD39\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fc\": [\"1f939-1f3fc-200d-2642-fe0f\", 42, 23, 15, [\"\\uD83E\\uDD39\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fd\": [\"1f939-1f3fd-200d-2642-fe0f\", 42, 24, 15, [\"\\uD83E\\uDD39\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fe\": [\"1f939-1f3fe-200d-2642-fe0f\", 42, 25, 15, [\"\\uD83E\\uDD39\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\"]],\n      \"1f3ff\": [\"1f939-1f3ff-200d-2642-fe0f\", 42, 26, 15, [\"\\uD83E\\uDD39\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\"]]\n    },\n    \"1f939\": {\n      \"1f3fb\": [\"1f939-1f3fb\", 42, 28, 15, [\"\\uD83E\\uDD39\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f939-1f3fc\", 42, 29, 15, [\"\\uD83E\\uDD39\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f939-1f3fd\", 42, 30, 15, [\"\\uD83E\\uDD39\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f939-1f3fe\", 42, 31, 15, [\"\\uD83E\\uDD39\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f939-1f3ff\", 42, 32, 15, [\"\\uD83E\\uDD39\\uD83C\\uDFFF\"]]\n    },\n    \"1f93d-200d-2640-fe0f\": {\n      \"1f3fb\": [\"1f93d-1f3fb-200d-2640-fe0f\", 42, 38, 15, [\"\\uD83E\\uDD3D\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fc\": [\"1f93d-1f3fc-200d-2640-fe0f\", 42, 39, 15, [\"\\uD83E\\uDD3D\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fd\": [\"1f93d-1f3fd-200d-2640-fe0f\", 42, 40, 15, [\"\\uD83E\\uDD3D\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fe\": [\"1f93d-1f3fe-200d-2640-fe0f\", 42, 41, 15, [\"\\uD83E\\uDD3D\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\"]],\n      \"1f3ff\": [\"1f93d-1f3ff-200d-2640-fe0f\", 42, 42, 15, [\"\\uD83E\\uDD3D\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\"]]\n    },\n    \"1f93d-200d-2642-fe0f\": {\n      \"1f3fb\": [\"1f93d-1f3fb-200d-2642-fe0f\", 42, 44, 15, [\"\\uD83E\\uDD3D\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fc\": [\"1f93d-1f3fc-200d-2642-fe0f\", 42, 45, 15, [\"\\uD83E\\uDD3D\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fd\": [\"1f93d-1f3fd-200d-2642-fe0f\", 42, 46, 15, [\"\\uD83E\\uDD3D\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fe\": [\"1f93d-1f3fe-200d-2642-fe0f\", 42, 47, 15, [\"\\uD83E\\uDD3D\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\"]],\n      \"1f3ff\": [\"1f93d-1f3ff-200d-2642-fe0f\", 42, 48, 15, [\"\\uD83E\\uDD3D\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\"]]\n    },\n    \"1f93d\": {\n      \"1f3fb\": [\"1f93d-1f3fb\", 42, 50, 15, [\"\\uD83E\\uDD3D\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f93d-1f3fc\", 42, 51, 15, [\"\\uD83E\\uDD3D\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f93d-1f3fd\", 42, 52, 15, [\"\\uD83E\\uDD3D\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f93d-1f3fe\", 42, 53, 15, [\"\\uD83E\\uDD3D\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f93d-1f3ff\", 42, 54, 15, [\"\\uD83E\\uDD3D\\uD83C\\uDFFF\"]]\n    },\n    \"1f93e-200d-2640-fe0f\": {\n      \"1f3fb\": [\"1f93e-1f3fb-200d-2640-fe0f\", 42, 56, 15, [\"\\uD83E\\uDD3E\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fc\": [\"1f93e-1f3fc-200d-2640-fe0f\", 42, 57, 15, [\"\\uD83E\\uDD3E\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fd\": [\"1f93e-1f3fd-200d-2640-fe0f\", 42, 58, 15, [\"\\uD83E\\uDD3E\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fe\": [\"1f93e-1f3fe-200d-2640-fe0f\", 42, 59, 15, [\"\\uD83E\\uDD3E\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\"]],\n      \"1f3ff\": [\"1f93e-1f3ff-200d-2640-fe0f\", 42, 60, 15, [\"\\uD83E\\uDD3E\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\"]]\n    },\n    \"1f93e-200d-2642-fe0f\": {\n      \"1f3fb\": [\"1f93e-1f3fb-200d-2642-fe0f\", 43, 1, 15, [\"\\uD83E\\uDD3E\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fc\": [\"1f93e-1f3fc-200d-2642-fe0f\", 43, 2, 15, [\"\\uD83E\\uDD3E\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fd\": [\"1f93e-1f3fd-200d-2642-fe0f\", 43, 3, 15, [\"\\uD83E\\uDD3E\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fe\": [\"1f93e-1f3fe-200d-2642-fe0f\", 43, 4, 15, [\"\\uD83E\\uDD3E\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\"]],\n      \"1f3ff\": [\"1f93e-1f3ff-200d-2642-fe0f\", 43, 5, 15, [\"\\uD83E\\uDD3E\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\"]]\n    },\n    \"1f93e\": {\n      \"1f3fb\": [\"1f93e-1f3fb\", 43, 7, 15, [\"\\uD83E\\uDD3E\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f93e-1f3fc\", 43, 8, 15, [\"\\uD83E\\uDD3E\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f93e-1f3fd\", 43, 9, 15, [\"\\uD83E\\uDD3E\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f93e-1f3fe\", 43, 10, 15, [\"\\uD83E\\uDD3E\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f93e-1f3ff\", 43, 11, 15, [\"\\uD83E\\uDD3E\\uD83C\\uDFFF\"]]\n    },\n    \"1f977\": {\n      \"1f3fb\": [\"1f977-1f3fb\", 44, 7, 15, [\"\\uD83E\\uDD77\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f977-1f3fc\", 44, 8, 15, [\"\\uD83E\\uDD77\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f977-1f3fd\", 44, 9, 15, [\"\\uD83E\\uDD77\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f977-1f3fe\", 44, 10, 15, [\"\\uD83E\\uDD77\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f977-1f3ff\", 44, 11, 15, [\"\\uD83E\\uDD77\\uD83C\\uDFFF\"]]\n    },\n    \"1f9b5\": {\n      \"1f3fb\": [\"1f9b5-1f3fb\", 45, 9, 15, [\"\\uD83E\\uDDB5\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f9b5-1f3fc\", 45, 10, 15, [\"\\uD83E\\uDDB5\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f9b5-1f3fd\", 45, 11, 15, [\"\\uD83E\\uDDB5\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f9b5-1f3fe\", 45, 12, 15, [\"\\uD83E\\uDDB5\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f9b5-1f3ff\", 45, 13, 15, [\"\\uD83E\\uDDB5\\uD83C\\uDFFF\"]]\n    },\n    \"1f9b6\": {\n      \"1f3fb\": [\"1f9b6-1f3fb\", 45, 15, 15, [\"\\uD83E\\uDDB6\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f9b6-1f3fc\", 45, 16, 15, [\"\\uD83E\\uDDB6\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f9b6-1f3fd\", 45, 17, 15, [\"\\uD83E\\uDDB6\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f9b6-1f3fe\", 45, 18, 15, [\"\\uD83E\\uDDB6\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f9b6-1f3ff\", 45, 19, 15, [\"\\uD83E\\uDDB6\\uD83C\\uDFFF\"]]\n    },\n    \"1f9b8-200d-2640-fe0f\": {\n      \"1f3fb\": [\"1f9b8-1f3fb-200d-2640-fe0f\", 45, 22, 15, [\"\\uD83E\\uDDB8\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fc\": [\"1f9b8-1f3fc-200d-2640-fe0f\", 45, 23, 15, [\"\\uD83E\\uDDB8\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fd\": [\"1f9b8-1f3fd-200d-2640-fe0f\", 45, 24, 15, [\"\\uD83E\\uDDB8\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fe\": [\"1f9b8-1f3fe-200d-2640-fe0f\", 45, 25, 15, [\"\\uD83E\\uDDB8\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\"]],\n      \"1f3ff\": [\"1f9b8-1f3ff-200d-2640-fe0f\", 45, 26, 15, [\"\\uD83E\\uDDB8\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\"]]\n    },\n    \"1f9b8-200d-2642-fe0f\": {\n      \"1f3fb\": [\"1f9b8-1f3fb-200d-2642-fe0f\", 45, 28, 15, [\"\\uD83E\\uDDB8\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fc\": [\"1f9b8-1f3fc-200d-2642-fe0f\", 45, 29, 15, [\"\\uD83E\\uDDB8\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fd\": [\"1f9b8-1f3fd-200d-2642-fe0f\", 45, 30, 15, [\"\\uD83E\\uDDB8\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fe\": [\"1f9b8-1f3fe-200d-2642-fe0f\", 45, 31, 15, [\"\\uD83E\\uDDB8\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\"]],\n      \"1f3ff\": [\"1f9b8-1f3ff-200d-2642-fe0f\", 45, 32, 15, [\"\\uD83E\\uDDB8\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\"]]\n    },\n    \"1f9b8\": {\n      \"1f3fb\": [\"1f9b8-1f3fb\", 45, 34, 15, [\"\\uD83E\\uDDB8\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f9b8-1f3fc\", 45, 35, 15, [\"\\uD83E\\uDDB8\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f9b8-1f3fd\", 45, 36, 15, [\"\\uD83E\\uDDB8\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f9b8-1f3fe\", 45, 37, 15, [\"\\uD83E\\uDDB8\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f9b8-1f3ff\", 45, 38, 15, [\"\\uD83E\\uDDB8\\uD83C\\uDFFF\"]]\n    },\n    \"1f9b9-200d-2640-fe0f\": {\n      \"1f3fb\": [\"1f9b9-1f3fb-200d-2640-fe0f\", 45, 40, 15, [\"\\uD83E\\uDDB9\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fc\": [\"1f9b9-1f3fc-200d-2640-fe0f\", 45, 41, 15, [\"\\uD83E\\uDDB9\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fd\": [\"1f9b9-1f3fd-200d-2640-fe0f\", 45, 42, 15, [\"\\uD83E\\uDDB9\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fe\": [\"1f9b9-1f3fe-200d-2640-fe0f\", 45, 43, 15, [\"\\uD83E\\uDDB9\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\"]],\n      \"1f3ff\": [\"1f9b9-1f3ff-200d-2640-fe0f\", 45, 44, 15, [\"\\uD83E\\uDDB9\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\"]]\n    },\n    \"1f9b9-200d-2642-fe0f\": {\n      \"1f3fb\": [\"1f9b9-1f3fb-200d-2642-fe0f\", 45, 46, 15, [\"\\uD83E\\uDDB9\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fc\": [\"1f9b9-1f3fc-200d-2642-fe0f\", 45, 47, 15, [\"\\uD83E\\uDDB9\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fd\": [\"1f9b9-1f3fd-200d-2642-fe0f\", 45, 48, 15, [\"\\uD83E\\uDDB9\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fe\": [\"1f9b9-1f3fe-200d-2642-fe0f\", 45, 49, 15, [\"\\uD83E\\uDDB9\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\"]],\n      \"1f3ff\": [\"1f9b9-1f3ff-200d-2642-fe0f\", 45, 50, 15, [\"\\uD83E\\uDDB9\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\"]]\n    },\n    \"1f9b9\": {\n      \"1f3fb\": [\"1f9b9-1f3fb\", 45, 52, 15, [\"\\uD83E\\uDDB9\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f9b9-1f3fc\", 45, 53, 15, [\"\\uD83E\\uDDB9\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f9b9-1f3fd\", 45, 54, 15, [\"\\uD83E\\uDDB9\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f9b9-1f3fe\", 45, 55, 15, [\"\\uD83E\\uDDB9\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f9b9-1f3ff\", 45, 56, 15, [\"\\uD83E\\uDDB9\\uD83C\\uDFFF\"]]\n    },\n    \"1f9bb\": {\n      \"1f3fb\": [\"1f9bb-1f3fb\", 45, 59, 15, [\"\\uD83E\\uDDBB\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f9bb-1f3fc\", 45, 60, 15, [\"\\uD83E\\uDDBB\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f9bb-1f3fd\", 46, 0, 15, [\"\\uD83E\\uDDBB\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f9bb-1f3fe\", 46, 1, 15, [\"\\uD83E\\uDDBB\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f9bb-1f3ff\", 46, 2, 15, [\"\\uD83E\\uDDBB\\uD83C\\uDFFF\"]]\n    },\n    \"1f9cd-200d-2640-fe0f\": {\n      \"1f3fb\": [\"1f9cd-1f3fb-200d-2640-fe0f\", 46, 21, 15, [\"\\uD83E\\uDDCD\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fc\": [\"1f9cd-1f3fc-200d-2640-fe0f\", 46, 22, 15, [\"\\uD83E\\uDDCD\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fd\": [\"1f9cd-1f3fd-200d-2640-fe0f\", 46, 23, 15, [\"\\uD83E\\uDDCD\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fe\": [\"1f9cd-1f3fe-200d-2640-fe0f\", 46, 24, 15, [\"\\uD83E\\uDDCD\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\"]],\n      \"1f3ff\": [\"1f9cd-1f3ff-200d-2640-fe0f\", 46, 25, 15, [\"\\uD83E\\uDDCD\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\"]]\n    },\n    \"1f9cd-200d-2642-fe0f\": {\n      \"1f3fb\": [\"1f9cd-1f3fb-200d-2642-fe0f\", 46, 27, 15, [\"\\uD83E\\uDDCD\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fc\": [\"1f9cd-1f3fc-200d-2642-fe0f\", 46, 28, 15, [\"\\uD83E\\uDDCD\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fd\": [\"1f9cd-1f3fd-200d-2642-fe0f\", 46, 29, 15, [\"\\uD83E\\uDDCD\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fe\": [\"1f9cd-1f3fe-200d-2642-fe0f\", 46, 30, 15, [\"\\uD83E\\uDDCD\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\"]],\n      \"1f3ff\": [\"1f9cd-1f3ff-200d-2642-fe0f\", 46, 31, 15, [\"\\uD83E\\uDDCD\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\"]]\n    },\n    \"1f9cd\": {\n      \"1f3fb\": [\"1f9cd-1f3fb\", 46, 33, 15, [\"\\uD83E\\uDDCD\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f9cd-1f3fc\", 46, 34, 15, [\"\\uD83E\\uDDCD\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f9cd-1f3fd\", 46, 35, 15, [\"\\uD83E\\uDDCD\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f9cd-1f3fe\", 46, 36, 15, [\"\\uD83E\\uDDCD\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f9cd-1f3ff\", 46, 37, 15, [\"\\uD83E\\uDDCD\\uD83C\\uDFFF\"]]\n    },\n    \"1f9ce-200d-2640-fe0f\": {\n      \"1f3fb\": [\"1f9ce-1f3fb-200d-2640-fe0f\", 46, 39, 15, [\"\\uD83E\\uDDCE\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fc\": [\"1f9ce-1f3fc-200d-2640-fe0f\", 46, 40, 15, [\"\\uD83E\\uDDCE\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fd\": [\"1f9ce-1f3fd-200d-2640-fe0f\", 46, 41, 15, [\"\\uD83E\\uDDCE\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fe\": [\"1f9ce-1f3fe-200d-2640-fe0f\", 46, 42, 15, [\"\\uD83E\\uDDCE\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\"]],\n      \"1f3ff\": [\"1f9ce-1f3ff-200d-2640-fe0f\", 46, 43, 15, [\"\\uD83E\\uDDCE\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\"]]\n    },\n    \"1f9ce-200d-2642-fe0f\": {\n      \"1f3fb\": [\"1f9ce-1f3fb-200d-2642-fe0f\", 46, 45, 15, [\"\\uD83E\\uDDCE\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fc\": [\"1f9ce-1f3fc-200d-2642-fe0f\", 46, 46, 15, [\"\\uD83E\\uDDCE\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fd\": [\"1f9ce-1f3fd-200d-2642-fe0f\", 46, 47, 15, [\"\\uD83E\\uDDCE\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fe\": [\"1f9ce-1f3fe-200d-2642-fe0f\", 46, 48, 15, [\"\\uD83E\\uDDCE\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\"]],\n      \"1f3ff\": [\"1f9ce-1f3ff-200d-2642-fe0f\", 46, 49, 15, [\"\\uD83E\\uDDCE\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\"]]\n    },\n    \"1f9ce\": {\n      \"1f3fb\": [\"1f9ce-1f3fb\", 46, 51, 15, [\"\\uD83E\\uDDCE\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f9ce-1f3fc\", 46, 52, 15, [\"\\uD83E\\uDDCE\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f9ce-1f3fd\", 46, 53, 15, [\"\\uD83E\\uDDCE\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f9ce-1f3fe\", 46, 54, 15, [\"\\uD83E\\uDDCE\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f9ce-1f3ff\", 46, 55, 15, [\"\\uD83E\\uDDCE\\uD83C\\uDFFF\"]]\n    },\n    \"1f9cf-200d-2640-fe0f\": {\n      \"1f3fb\": [\"1f9cf-1f3fb-200d-2640-fe0f\", 46, 57, 15, [\"\\uD83E\\uDDCF\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fc\": [\"1f9cf-1f3fc-200d-2640-fe0f\", 46, 58, 15, [\"\\uD83E\\uDDCF\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fd\": [\"1f9cf-1f3fd-200d-2640-fe0f\", 46, 59, 15, [\"\\uD83E\\uDDCF\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fe\": [\"1f9cf-1f3fe-200d-2640-fe0f\", 46, 60, 15, [\"\\uD83E\\uDDCF\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\"]],\n      \"1f3ff\": [\"1f9cf-1f3ff-200d-2640-fe0f\", 47, 0, 15, [\"\\uD83E\\uDDCF\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\"]]\n    },\n    \"1f9cf-200d-2642-fe0f\": {\n      \"1f3fb\": [\"1f9cf-1f3fb-200d-2642-fe0f\", 47, 2, 15, [\"\\uD83E\\uDDCF\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fc\": [\"1f9cf-1f3fc-200d-2642-fe0f\", 47, 3, 15, [\"\\uD83E\\uDDCF\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fd\": [\"1f9cf-1f3fd-200d-2642-fe0f\", 47, 4, 15, [\"\\uD83E\\uDDCF\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fe\": [\"1f9cf-1f3fe-200d-2642-fe0f\", 47, 5, 15, [\"\\uD83E\\uDDCF\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\"]],\n      \"1f3ff\": [\"1f9cf-1f3ff-200d-2642-fe0f\", 47, 6, 15, [\"\\uD83E\\uDDCF\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\"]]\n    },\n    \"1f9cf\": {\n      \"1f3fb\": [\"1f9cf-1f3fb\", 47, 8, 15, [\"\\uD83E\\uDDCF\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f9cf-1f3fc\", 47, 9, 15, [\"\\uD83E\\uDDCF\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f9cf-1f3fd\", 47, 10, 15, [\"\\uD83E\\uDDCF\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f9cf-1f3fe\", 47, 11, 15, [\"\\uD83E\\uDDCF\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f9cf-1f3ff\", 47, 12, 15, [\"\\uD83E\\uDDCF\\uD83C\\uDFFF\"]]\n    },\n    \"1f9d1-200d-1f33e\": {\n      \"1f3fb\": [\"1f9d1-1f3fb-200d-1f33e\", 47, 15, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83C\\uDF3E\"]],\n      \"1f3fc\": [\"1f9d1-1f3fc-200d-1f33e\", 47, 16, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83C\\uDF3E\"]],\n      \"1f3fd\": [\"1f9d1-1f3fd-200d-1f33e\", 47, 17, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83C\\uDF3E\"]],\n      \"1f3fe\": [\"1f9d1-1f3fe-200d-1f33e\", 47, 18, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83C\\uDF3E\"]],\n      \"1f3ff\": [\"1f9d1-1f3ff-200d-1f33e\", 47, 19, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFF\\u200D\\uD83C\\uDF3E\"]]\n    },\n    \"1f9d1-200d-1f373\": {\n      \"1f3fb\": [\"1f9d1-1f3fb-200d-1f373\", 47, 21, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83C\\uDF73\"]],\n      \"1f3fc\": [\"1f9d1-1f3fc-200d-1f373\", 47, 22, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83C\\uDF73\"]],\n      \"1f3fd\": [\"1f9d1-1f3fd-200d-1f373\", 47, 23, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83C\\uDF73\"]],\n      \"1f3fe\": [\"1f9d1-1f3fe-200d-1f373\", 47, 24, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83C\\uDF73\"]],\n      \"1f3ff\": [\"1f9d1-1f3ff-200d-1f373\", 47, 25, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFF\\u200D\\uD83C\\uDF73\"]]\n    },\n    \"1f9d1-200d-1f37c\": {\n      \"1f3fb\": [\"1f9d1-1f3fb-200d-1f37c\", 47, 27, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83C\\uDF7C\"]],\n      \"1f3fc\": [\"1f9d1-1f3fc-200d-1f37c\", 47, 28, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83C\\uDF7C\"]],\n      \"1f3fd\": [\"1f9d1-1f3fd-200d-1f37c\", 47, 29, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83C\\uDF7C\"]],\n      \"1f3fe\": [\"1f9d1-1f3fe-200d-1f37c\", 47, 30, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83C\\uDF7C\"]],\n      \"1f3ff\": [\"1f9d1-1f3ff-200d-1f37c\", 47, 31, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFF\\u200D\\uD83C\\uDF7C\"]]\n    },\n    \"1f9d1-200d-1f384\": {\n      \"1f3fb\": [\"1f9d1-1f3fb-200d-1f384\", 47, 33, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83C\\uDF84\"]],\n      \"1f3fc\": [\"1f9d1-1f3fc-200d-1f384\", 47, 34, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83C\\uDF84\"]],\n      \"1f3fd\": [\"1f9d1-1f3fd-200d-1f384\", 47, 35, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83C\\uDF84\"]],\n      \"1f3fe\": [\"1f9d1-1f3fe-200d-1f384\", 47, 36, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83C\\uDF84\"]],\n      \"1f3ff\": [\"1f9d1-1f3ff-200d-1f384\", 47, 37, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFF\\u200D\\uD83C\\uDF84\"]]\n    },\n    \"1f9d1-200d-1f393\": {\n      \"1f3fb\": [\"1f9d1-1f3fb-200d-1f393\", 47, 39, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83C\\uDF93\"]],\n      \"1f3fc\": [\"1f9d1-1f3fc-200d-1f393\", 47, 40, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83C\\uDF93\"]],\n      \"1f3fd\": [\"1f9d1-1f3fd-200d-1f393\", 47, 41, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83C\\uDF93\"]],\n      \"1f3fe\": [\"1f9d1-1f3fe-200d-1f393\", 47, 42, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83C\\uDF93\"]],\n      \"1f3ff\": [\"1f9d1-1f3ff-200d-1f393\", 47, 43, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFF\\u200D\\uD83C\\uDF93\"]]\n    },\n    \"1f9d1-200d-1f3a4\": {\n      \"1f3fb\": [\"1f9d1-1f3fb-200d-1f3a4\", 47, 45, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83C\\uDFA4\"]],\n      \"1f3fc\": [\"1f9d1-1f3fc-200d-1f3a4\", 47, 46, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83C\\uDFA4\"]],\n      \"1f3fd\": [\"1f9d1-1f3fd-200d-1f3a4\", 47, 47, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83C\\uDFA4\"]],\n      \"1f3fe\": [\"1f9d1-1f3fe-200d-1f3a4\", 47, 48, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83C\\uDFA4\"]],\n      \"1f3ff\": [\"1f9d1-1f3ff-200d-1f3a4\", 47, 49, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFF\\u200D\\uD83C\\uDFA4\"]]\n    },\n    \"1f9d1-200d-1f3a8\": {\n      \"1f3fb\": [\"1f9d1-1f3fb-200d-1f3a8\", 47, 51, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83C\\uDFA8\"]],\n      \"1f3fc\": [\"1f9d1-1f3fc-200d-1f3a8\", 47, 52, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83C\\uDFA8\"]],\n      \"1f3fd\": [\"1f9d1-1f3fd-200d-1f3a8\", 47, 53, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83C\\uDFA8\"]],\n      \"1f3fe\": [\"1f9d1-1f3fe-200d-1f3a8\", 47, 54, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83C\\uDFA8\"]],\n      \"1f3ff\": [\"1f9d1-1f3ff-200d-1f3a8\", 47, 55, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFF\\u200D\\uD83C\\uDFA8\"]]\n    },\n    \"1f9d1-200d-1f3eb\": {\n      \"1f3fb\": [\"1f9d1-1f3fb-200d-1f3eb\", 47, 57, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83C\\uDFEB\"]],\n      \"1f3fc\": [\"1f9d1-1f3fc-200d-1f3eb\", 47, 58, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83C\\uDFEB\"]],\n      \"1f3fd\": [\"1f9d1-1f3fd-200d-1f3eb\", 47, 59, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83C\\uDFEB\"]],\n      \"1f3fe\": [\"1f9d1-1f3fe-200d-1f3eb\", 47, 60, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83C\\uDFEB\"]],\n      \"1f3ff\": [\"1f9d1-1f3ff-200d-1f3eb\", 48, 0, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFF\\u200D\\uD83C\\uDFEB\"]]\n    },\n    \"1f9d1-200d-1f3ed\": {\n      \"1f3fb\": [\"1f9d1-1f3fb-200d-1f3ed\", 48, 2, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83C\\uDFED\"]],\n      \"1f3fc\": [\"1f9d1-1f3fc-200d-1f3ed\", 48, 3, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83C\\uDFED\"]],\n      \"1f3fd\": [\"1f9d1-1f3fd-200d-1f3ed\", 48, 4, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83C\\uDFED\"]],\n      \"1f3fe\": [\"1f9d1-1f3fe-200d-1f3ed\", 48, 5, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83C\\uDFED\"]],\n      \"1f3ff\": [\"1f9d1-1f3ff-200d-1f3ed\", 48, 6, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFF\\u200D\\uD83C\\uDFED\"]]\n    },\n    \"1f9d1-200d-1f4bb\": {\n      \"1f3fb\": [\"1f9d1-1f3fb-200d-1f4bb\", 48, 8, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83D\\uDCBB\"]],\n      \"1f3fc\": [\"1f9d1-1f3fc-200d-1f4bb\", 48, 9, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83D\\uDCBB\"]],\n      \"1f3fd\": [\"1f9d1-1f3fd-200d-1f4bb\", 48, 10, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83D\\uDCBB\"]],\n      \"1f3fe\": [\"1f9d1-1f3fe-200d-1f4bb\", 48, 11, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83D\\uDCBB\"]],\n      \"1f3ff\": [\"1f9d1-1f3ff-200d-1f4bb\", 48, 12, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFF\\u200D\\uD83D\\uDCBB\"]]\n    },\n    \"1f9d1-200d-1f4bc\": {\n      \"1f3fb\": [\"1f9d1-1f3fb-200d-1f4bc\", 48, 14, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83D\\uDCBC\"]],\n      \"1f3fc\": [\"1f9d1-1f3fc-200d-1f4bc\", 48, 15, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83D\\uDCBC\"]],\n      \"1f3fd\": [\"1f9d1-1f3fd-200d-1f4bc\", 48, 16, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83D\\uDCBC\"]],\n      \"1f3fe\": [\"1f9d1-1f3fe-200d-1f4bc\", 48, 17, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83D\\uDCBC\"]],\n      \"1f3ff\": [\"1f9d1-1f3ff-200d-1f4bc\", 48, 18, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFF\\u200D\\uD83D\\uDCBC\"]]\n    },\n    \"1f9d1-200d-1f527\": {\n      \"1f3fb\": [\"1f9d1-1f3fb-200d-1f527\", 48, 20, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83D\\uDD27\"]],\n      \"1f3fc\": [\"1f9d1-1f3fc-200d-1f527\", 48, 21, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83D\\uDD27\"]],\n      \"1f3fd\": [\"1f9d1-1f3fd-200d-1f527\", 48, 22, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83D\\uDD27\"]],\n      \"1f3fe\": [\"1f9d1-1f3fe-200d-1f527\", 48, 23, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83D\\uDD27\"]],\n      \"1f3ff\": [\"1f9d1-1f3ff-200d-1f527\", 48, 24, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFF\\u200D\\uD83D\\uDD27\"]]\n    },\n    \"1f9d1-200d-1f52c\": {\n      \"1f3fb\": [\"1f9d1-1f3fb-200d-1f52c\", 48, 26, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83D\\uDD2C\"]],\n      \"1f3fc\": [\"1f9d1-1f3fc-200d-1f52c\", 48, 27, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83D\\uDD2C\"]],\n      \"1f3fd\": [\"1f9d1-1f3fd-200d-1f52c\", 48, 28, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83D\\uDD2C\"]],\n      \"1f3fe\": [\"1f9d1-1f3fe-200d-1f52c\", 48, 29, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83D\\uDD2C\"]],\n      \"1f3ff\": [\"1f9d1-1f3ff-200d-1f52c\", 48, 30, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFF\\u200D\\uD83D\\uDD2C\"]]\n    },\n    \"1f9d1-200d-1f680\": {\n      \"1f3fb\": [\"1f9d1-1f3fb-200d-1f680\", 48, 32, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83D\\uDE80\"]],\n      \"1f3fc\": [\"1f9d1-1f3fc-200d-1f680\", 48, 33, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83D\\uDE80\"]],\n      \"1f3fd\": [\"1f9d1-1f3fd-200d-1f680\", 48, 34, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83D\\uDE80\"]],\n      \"1f3fe\": [\"1f9d1-1f3fe-200d-1f680\", 48, 35, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83D\\uDE80\"]],\n      \"1f3ff\": [\"1f9d1-1f3ff-200d-1f680\", 48, 36, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFF\\u200D\\uD83D\\uDE80\"]]\n    },\n    \"1f9d1-200d-1f692\": {\n      \"1f3fb\": [\"1f9d1-1f3fb-200d-1f692\", 48, 38, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83D\\uDE92\"]],\n      \"1f3fc\": [\"1f9d1-1f3fc-200d-1f692\", 48, 39, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83D\\uDE92\"]],\n      \"1f3fd\": [\"1f9d1-1f3fd-200d-1f692\", 48, 40, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83D\\uDE92\"]],\n      \"1f3fe\": [\"1f9d1-1f3fe-200d-1f692\", 48, 41, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83D\\uDE92\"]],\n      \"1f3ff\": [\"1f9d1-1f3ff-200d-1f692\", 48, 42, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFF\\u200D\\uD83D\\uDE92\"]]\n    },\n    \"1f9d1-200d-1f91d-200d-1f9d1\": {\n      \"1f3fb-1f3fb\": [\"1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fb\", 48, 44, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFB\"]],\n      \"1f3fb-1f3fc\": [\"1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fc\", 48, 45, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFC\"]],\n      \"1f3fb-1f3fd\": [\"1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fd\", 48, 46, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFD\"]],\n      \"1f3fb-1f3fe\": [\"1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fe\", 48, 47, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFE\"]],\n      \"1f3fb-1f3ff\": [\"1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3ff\", 48, 48, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFF\"]],\n      \"1f3fc-1f3fb\": [\"1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fb\", 48, 49, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFB\"]],\n      \"1f3fc-1f3fc\": [\"1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fc\", 48, 50, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFC\"]],\n      \"1f3fc-1f3fd\": [\"1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fd\", 48, 51, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFD\"]],\n      \"1f3fc-1f3fe\": [\"1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fe\", 48, 52, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFE\"]],\n      \"1f3fc-1f3ff\": [\"1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3ff\", 48, 53, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFF\"]],\n      \"1f3fd-1f3fb\": [\"1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fb\", 48, 54, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFB\"]],\n      \"1f3fd-1f3fc\": [\"1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fc\", 48, 55, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFC\"]],\n      \"1f3fd-1f3fd\": [\"1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fd\", 48, 56, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFD\"]],\n      \"1f3fd-1f3fe\": [\"1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fe\", 48, 57, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFE\"]],\n      \"1f3fd-1f3ff\": [\"1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3ff\", 48, 58, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFF\"]],\n      \"1f3fe-1f3fb\": [\"1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fb\", 48, 59, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFB\"]],\n      \"1f3fe-1f3fc\": [\"1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fc\", 48, 60, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFC\"]],\n      \"1f3fe-1f3fd\": [\"1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fd\", 49, 0, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFD\"]],\n      \"1f3fe-1f3fe\": [\"1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fe\", 49, 1, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFE\"]],\n      \"1f3fe-1f3ff\": [\"1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3ff\", 49, 2, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFF\"]],\n      \"1f3ff-1f3fb\": [\"1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fb\", 49, 3, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFB\"]],\n      \"1f3ff-1f3fc\": [\"1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fc\", 49, 4, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFC\"]],\n      \"1f3ff-1f3fd\": [\"1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fd\", 49, 5, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFD\"]],\n      \"1f3ff-1f3fe\": [\"1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fe\", 49, 6, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFE\"]],\n      \"1f3ff-1f3ff\": [\"1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3ff\", 49, 7, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1\\uD83C\\uDFFF\"]]\n    },\n    \"1f9d1-200d-1f9af\": {\n      \"1f3fb\": [\"1f9d1-1f3fb-200d-1f9af\", 49, 9, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83E\\uDDAF\"]],\n      \"1f3fc\": [\"1f9d1-1f3fc-200d-1f9af\", 49, 10, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83E\\uDDAF\"]],\n      \"1f3fd\": [\"1f9d1-1f3fd-200d-1f9af\", 49, 11, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83E\\uDDAF\"]],\n      \"1f3fe\": [\"1f9d1-1f3fe-200d-1f9af\", 49, 12, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83E\\uDDAF\"]],\n      \"1f3ff\": [\"1f9d1-1f3ff-200d-1f9af\", 49, 13, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFF\\u200D\\uD83E\\uDDAF\"]]\n    },\n    \"1f9d1-200d-1f9b0\": {\n      \"1f3fb\": [\"1f9d1-1f3fb-200d-1f9b0\", 49, 15, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83E\\uDDB0\"]],\n      \"1f3fc\": [\"1f9d1-1f3fc-200d-1f9b0\", 49, 16, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83E\\uDDB0\"]],\n      \"1f3fd\": [\"1f9d1-1f3fd-200d-1f9b0\", 49, 17, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83E\\uDDB0\"]],\n      \"1f3fe\": [\"1f9d1-1f3fe-200d-1f9b0\", 49, 18, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83E\\uDDB0\"]],\n      \"1f3ff\": [\"1f9d1-1f3ff-200d-1f9b0\", 49, 19, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFF\\u200D\\uD83E\\uDDB0\"]]\n    },\n    \"1f9d1-200d-1f9b1\": {\n      \"1f3fb\": [\"1f9d1-1f3fb-200d-1f9b1\", 49, 21, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83E\\uDDB1\"]],\n      \"1f3fc\": [\"1f9d1-1f3fc-200d-1f9b1\", 49, 22, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83E\\uDDB1\"]],\n      \"1f3fd\": [\"1f9d1-1f3fd-200d-1f9b1\", 49, 23, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83E\\uDDB1\"]],\n      \"1f3fe\": [\"1f9d1-1f3fe-200d-1f9b1\", 49, 24, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83E\\uDDB1\"]],\n      \"1f3ff\": [\"1f9d1-1f3ff-200d-1f9b1\", 49, 25, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFF\\u200D\\uD83E\\uDDB1\"]]\n    },\n    \"1f9d1-200d-1f9b2\": {\n      \"1f3fb\": [\"1f9d1-1f3fb-200d-1f9b2\", 49, 27, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83E\\uDDB2\"]],\n      \"1f3fc\": [\"1f9d1-1f3fc-200d-1f9b2\", 49, 28, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83E\\uDDB2\"]],\n      \"1f3fd\": [\"1f9d1-1f3fd-200d-1f9b2\", 49, 29, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83E\\uDDB2\"]],\n      \"1f3fe\": [\"1f9d1-1f3fe-200d-1f9b2\", 49, 30, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83E\\uDDB2\"]],\n      \"1f3ff\": [\"1f9d1-1f3ff-200d-1f9b2\", 49, 31, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFF\\u200D\\uD83E\\uDDB2\"]]\n    },\n    \"1f9d1-200d-1f9b3\": {\n      \"1f3fb\": [\"1f9d1-1f3fb-200d-1f9b3\", 49, 33, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83E\\uDDB3\"]],\n      \"1f3fc\": [\"1f9d1-1f3fc-200d-1f9b3\", 49, 34, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83E\\uDDB3\"]],\n      \"1f3fd\": [\"1f9d1-1f3fd-200d-1f9b3\", 49, 35, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83E\\uDDB3\"]],\n      \"1f3fe\": [\"1f9d1-1f3fe-200d-1f9b3\", 49, 36, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83E\\uDDB3\"]],\n      \"1f3ff\": [\"1f9d1-1f3ff-200d-1f9b3\", 49, 37, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFF\\u200D\\uD83E\\uDDB3\"]]\n    },\n    \"1f9d1-200d-1f9bc\": {\n      \"1f3fb\": [\"1f9d1-1f3fb-200d-1f9bc\", 49, 39, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83E\\uDDBC\"]],\n      \"1f3fc\": [\"1f9d1-1f3fc-200d-1f9bc\", 49, 40, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83E\\uDDBC\"]],\n      \"1f3fd\": [\"1f9d1-1f3fd-200d-1f9bc\", 49, 41, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83E\\uDDBC\"]],\n      \"1f3fe\": [\"1f9d1-1f3fe-200d-1f9bc\", 49, 42, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83E\\uDDBC\"]],\n      \"1f3ff\": [\"1f9d1-1f3ff-200d-1f9bc\", 49, 43, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFF\\u200D\\uD83E\\uDDBC\"]]\n    },\n    \"1f9d1-200d-1f9bd\": {\n      \"1f3fb\": [\"1f9d1-1f3fb-200d-1f9bd\", 49, 45, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83E\\uDDBD\"]],\n      \"1f3fc\": [\"1f9d1-1f3fc-200d-1f9bd\", 49, 46, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83E\\uDDBD\"]],\n      \"1f3fd\": [\"1f9d1-1f3fd-200d-1f9bd\", 49, 47, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83E\\uDDBD\"]],\n      \"1f3fe\": [\"1f9d1-1f3fe-200d-1f9bd\", 49, 48, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83E\\uDDBD\"]],\n      \"1f3ff\": [\"1f9d1-1f3ff-200d-1f9bd\", 49, 49, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFF\\u200D\\uD83E\\uDDBD\"]]\n    },\n    \"1f9d1-200d-2695-fe0f\": {\n      \"1f3fb\": [\"1f9d1-1f3fb-200d-2695-fe0f\", 49, 51, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\u2695\\uFE0F\"]],\n      \"1f3fc\": [\"1f9d1-1f3fc-200d-2695-fe0f\", 49, 52, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\u2695\\uFE0F\"]],\n      \"1f3fd\": [\"1f9d1-1f3fd-200d-2695-fe0f\", 49, 53, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\u2695\\uFE0F\"]],\n      \"1f3fe\": [\"1f9d1-1f3fe-200d-2695-fe0f\", 49, 54, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\u2695\\uFE0F\"]],\n      \"1f3ff\": [\"1f9d1-1f3ff-200d-2695-fe0f\", 49, 55, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFF\\u200D\\u2695\\uFE0F\"]]\n    },\n    \"1f9d1-200d-2696-fe0f\": {\n      \"1f3fb\": [\"1f9d1-1f3fb-200d-2696-fe0f\", 49, 57, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\u2696\\uFE0F\"]],\n      \"1f3fc\": [\"1f9d1-1f3fc-200d-2696-fe0f\", 49, 58, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\u2696\\uFE0F\"]],\n      \"1f3fd\": [\"1f9d1-1f3fd-200d-2696-fe0f\", 49, 59, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\u2696\\uFE0F\"]],\n      \"1f3fe\": [\"1f9d1-1f3fe-200d-2696-fe0f\", 49, 60, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\u2696\\uFE0F\"]],\n      \"1f3ff\": [\"1f9d1-1f3ff-200d-2696-fe0f\", 50, 0, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFF\\u200D\\u2696\\uFE0F\"]]\n    },\n    \"1f9d1-200d-2708-fe0f\": {\n      \"1f3fb\": [\"1f9d1-1f3fb-200d-2708-fe0f\", 50, 2, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\u2708\\uFE0F\"]],\n      \"1f3fc\": [\"1f9d1-1f3fc-200d-2708-fe0f\", 50, 3, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\u2708\\uFE0F\"]],\n      \"1f3fd\": [\"1f9d1-1f3fd-200d-2708-fe0f\", 50, 4, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\u2708\\uFE0F\"]],\n      \"1f3fe\": [\"1f9d1-1f3fe-200d-2708-fe0f\", 50, 5, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\u2708\\uFE0F\"]],\n      \"1f3ff\": [\"1f9d1-1f3ff-200d-2708-fe0f\", 50, 6, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFF\\u200D\\u2708\\uFE0F\"]]\n    },\n    \"1f9d1\": {\n      \"1f3fb\": [\"1f9d1-1f3fb\", 50, 8, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f9d1-1f3fc\", 50, 9, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f9d1-1f3fd\", 50, 10, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f9d1-1f3fe\", 50, 11, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f9d1-1f3ff\", 50, 12, 15, [\"\\uD83E\\uDDD1\\uD83C\\uDFFF\"]]\n    },\n    \"1f9d2\": {\n      \"1f3fb\": [\"1f9d2-1f3fb\", 50, 14, 15, [\"\\uD83E\\uDDD2\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f9d2-1f3fc\", 50, 15, 15, [\"\\uD83E\\uDDD2\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f9d2-1f3fd\", 50, 16, 15, [\"\\uD83E\\uDDD2\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f9d2-1f3fe\", 50, 17, 15, [\"\\uD83E\\uDDD2\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f9d2-1f3ff\", 50, 18, 15, [\"\\uD83E\\uDDD2\\uD83C\\uDFFF\"]]\n    },\n    \"1f9d3\": {\n      \"1f3fb\": [\"1f9d3-1f3fb\", 50, 20, 15, [\"\\uD83E\\uDDD3\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f9d3-1f3fc\", 50, 21, 15, [\"\\uD83E\\uDDD3\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f9d3-1f3fd\", 50, 22, 15, [\"\\uD83E\\uDDD3\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f9d3-1f3fe\", 50, 23, 15, [\"\\uD83E\\uDDD3\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f9d3-1f3ff\", 50, 24, 15, [\"\\uD83E\\uDDD3\\uD83C\\uDFFF\"]]\n    },\n    \"1f9d4-200d-2640-fe0f\": {\n      \"1f3fb\": [\"1f9d4-1f3fb-200d-2640-fe0f\", 50, 26, 15, [\"\\uD83E\\uDDD4\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fc\": [\"1f9d4-1f3fc-200d-2640-fe0f\", 50, 27, 15, [\"\\uD83E\\uDDD4\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fd\": [\"1f9d4-1f3fd-200d-2640-fe0f\", 50, 28, 15, [\"\\uD83E\\uDDD4\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fe\": [\"1f9d4-1f3fe-200d-2640-fe0f\", 50, 29, 15, [\"\\uD83E\\uDDD4\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\"]],\n      \"1f3ff\": [\"1f9d4-1f3ff-200d-2640-fe0f\", 50, 30, 15, [\"\\uD83E\\uDDD4\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\"]]\n    },\n    \"1f9d4-200d-2642-fe0f\": {\n      \"1f3fb\": [\"1f9d4-1f3fb-200d-2642-fe0f\", 50, 32, 15, [\"\\uD83E\\uDDD4\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fc\": [\"1f9d4-1f3fc-200d-2642-fe0f\", 50, 33, 15, [\"\\uD83E\\uDDD4\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fd\": [\"1f9d4-1f3fd-200d-2642-fe0f\", 50, 34, 15, [\"\\uD83E\\uDDD4\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fe\": [\"1f9d4-1f3fe-200d-2642-fe0f\", 50, 35, 15, [\"\\uD83E\\uDDD4\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\"]],\n      \"1f3ff\": [\"1f9d4-1f3ff-200d-2642-fe0f\", 50, 36, 15, [\"\\uD83E\\uDDD4\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\"]]\n    },\n    \"1f9d4\": {\n      \"1f3fb\": [\"1f9d4-1f3fb\", 50, 38, 15, [\"\\uD83E\\uDDD4\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f9d4-1f3fc\", 50, 39, 15, [\"\\uD83E\\uDDD4\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f9d4-1f3fd\", 50, 40, 15, [\"\\uD83E\\uDDD4\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f9d4-1f3fe\", 50, 41, 15, [\"\\uD83E\\uDDD4\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f9d4-1f3ff\", 50, 42, 15, [\"\\uD83E\\uDDD4\\uD83C\\uDFFF\"]]\n    },\n    \"1f9d5\": {\n      \"1f3fb\": [\"1f9d5-1f3fb\", 50, 44, 15, [\"\\uD83E\\uDDD5\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f9d5-1f3fc\", 50, 45, 15, [\"\\uD83E\\uDDD5\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f9d5-1f3fd\", 50, 46, 15, [\"\\uD83E\\uDDD5\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f9d5-1f3fe\", 50, 47, 15, [\"\\uD83E\\uDDD5\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f9d5-1f3ff\", 50, 48, 15, [\"\\uD83E\\uDDD5\\uD83C\\uDFFF\"]]\n    },\n    \"1f9d6-200d-2640-fe0f\": {\n      \"1f3fb\": [\"1f9d6-1f3fb-200d-2640-fe0f\", 50, 50, 15, [\"\\uD83E\\uDDD6\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fc\": [\"1f9d6-1f3fc-200d-2640-fe0f\", 50, 51, 15, [\"\\uD83E\\uDDD6\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fd\": [\"1f9d6-1f3fd-200d-2640-fe0f\", 50, 52, 15, [\"\\uD83E\\uDDD6\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fe\": [\"1f9d6-1f3fe-200d-2640-fe0f\", 50, 53, 15, [\"\\uD83E\\uDDD6\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\"]],\n      \"1f3ff\": [\"1f9d6-1f3ff-200d-2640-fe0f\", 50, 54, 15, [\"\\uD83E\\uDDD6\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\"]]\n    },\n    \"1f9d6-200d-2642-fe0f\": {\n      \"1f3fb\": [\"1f9d6-1f3fb-200d-2642-fe0f\", 50, 56, 15, [\"\\uD83E\\uDDD6\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\", \"\\uD83E\\uDDD6\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f9d6-1f3fc-200d-2642-fe0f\", 50, 57, 15, [\"\\uD83E\\uDDD6\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\", \"\\uD83E\\uDDD6\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f9d6-1f3fd-200d-2642-fe0f\", 50, 58, 15, [\"\\uD83E\\uDDD6\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\", \"\\uD83E\\uDDD6\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f9d6-1f3fe-200d-2642-fe0f\", 50, 59, 15, [\"\\uD83E\\uDDD6\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\", \"\\uD83E\\uDDD6\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f9d6-1f3ff-200d-2642-fe0f\", 50, 60, 15, [\"\\uD83E\\uDDD6\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\", \"\\uD83E\\uDDD6\\uD83C\\uDFFF\"]]\n    },\n    \"1f9d7-200d-2640-fe0f\": {\n      \"1f3fb\": [\"1f9d7-1f3fb-200d-2640-fe0f\", 51, 7, 15, [\"\\uD83E\\uDDD7\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDDD7\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f9d7-1f3fc-200d-2640-fe0f\", 51, 8, 15, [\"\\uD83E\\uDDD7\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDDD7\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f9d7-1f3fd-200d-2640-fe0f\", 51, 9, 15, [\"\\uD83E\\uDDD7\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDDD7\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f9d7-1f3fe-200d-2640-fe0f\", 51, 10, 15, [\"\\uD83E\\uDDD7\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDDD7\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f9d7-1f3ff-200d-2640-fe0f\", 51, 11, 15, [\"\\uD83E\\uDDD7\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDDD7\\uD83C\\uDFFF\"]]\n    },\n    \"1f9d7-200d-2642-fe0f\": {\n      \"1f3fb\": [\"1f9d7-1f3fb-200d-2642-fe0f\", 51, 13, 15, [\"\\uD83E\\uDDD7\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fc\": [\"1f9d7-1f3fc-200d-2642-fe0f\", 51, 14, 15, [\"\\uD83E\\uDDD7\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fd\": [\"1f9d7-1f3fd-200d-2642-fe0f\", 51, 15, 15, [\"\\uD83E\\uDDD7\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fe\": [\"1f9d7-1f3fe-200d-2642-fe0f\", 51, 16, 15, [\"\\uD83E\\uDDD7\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\"]],\n      \"1f3ff\": [\"1f9d7-1f3ff-200d-2642-fe0f\", 51, 17, 15, [\"\\uD83E\\uDDD7\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\"]]\n    },\n    \"1f9d8-200d-2640-fe0f\": {\n      \"1f3fb\": [\"1f9d8-1f3fb-200d-2640-fe0f\", 51, 25, 15, [\"\\uD83E\\uDDD8\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDDD8\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f9d8-1f3fc-200d-2640-fe0f\", 51, 26, 15, [\"\\uD83E\\uDDD8\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDDD8\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f9d8-1f3fd-200d-2640-fe0f\", 51, 27, 15, [\"\\uD83E\\uDDD8\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDDD8\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f9d8-1f3fe-200d-2640-fe0f\", 51, 28, 15, [\"\\uD83E\\uDDD8\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDDD8\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f9d8-1f3ff-200d-2640-fe0f\", 51, 29, 15, [\"\\uD83E\\uDDD8\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDDD8\\uD83C\\uDFFF\"]]\n    },\n    \"1f9d8-200d-2642-fe0f\": {\n      \"1f3fb\": [\"1f9d8-1f3fb-200d-2642-fe0f\", 51, 31, 15, [\"\\uD83E\\uDDD8\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fc\": [\"1f9d8-1f3fc-200d-2642-fe0f\", 51, 32, 15, [\"\\uD83E\\uDDD8\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fd\": [\"1f9d8-1f3fd-200d-2642-fe0f\", 51, 33, 15, [\"\\uD83E\\uDDD8\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fe\": [\"1f9d8-1f3fe-200d-2642-fe0f\", 51, 34, 15, [\"\\uD83E\\uDDD8\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\"]],\n      \"1f3ff\": [\"1f9d8-1f3ff-200d-2642-fe0f\", 51, 35, 15, [\"\\uD83E\\uDDD8\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\"]]\n    },\n    \"1f9d9-200d-2640-fe0f\": {\n      \"1f3fb\": [\"1f9d9-1f3fb-200d-2640-fe0f\", 51, 43, 15, [\"\\uD83E\\uDDD9\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDDD9\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f9d9-1f3fc-200d-2640-fe0f\", 51, 44, 15, [\"\\uD83E\\uDDD9\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDDD9\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f9d9-1f3fd-200d-2640-fe0f\", 51, 45, 15, [\"\\uD83E\\uDDD9\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDDD9\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f9d9-1f3fe-200d-2640-fe0f\", 51, 46, 15, [\"\\uD83E\\uDDD9\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDDD9\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f9d9-1f3ff-200d-2640-fe0f\", 51, 47, 15, [\"\\uD83E\\uDDD9\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDDD9\\uD83C\\uDFFF\"]]\n    },\n    \"1f9d9-200d-2642-fe0f\": {\n      \"1f3fb\": [\"1f9d9-1f3fb-200d-2642-fe0f\", 51, 49, 15, [\"\\uD83E\\uDDD9\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fc\": [\"1f9d9-1f3fc-200d-2642-fe0f\", 51, 50, 15, [\"\\uD83E\\uDDD9\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fd\": [\"1f9d9-1f3fd-200d-2642-fe0f\", 51, 51, 15, [\"\\uD83E\\uDDD9\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fe\": [\"1f9d9-1f3fe-200d-2642-fe0f\", 51, 52, 15, [\"\\uD83E\\uDDD9\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\"]],\n      \"1f3ff\": [\"1f9d9-1f3ff-200d-2642-fe0f\", 51, 53, 15, [\"\\uD83E\\uDDD9\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\"]]\n    },\n    \"1f9da-200d-2640-fe0f\": {\n      \"1f3fb\": [\"1f9da-1f3fb-200d-2640-fe0f\", 52, 0, 15, [\"\\uD83E\\uDDDA\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDDDA\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f9da-1f3fc-200d-2640-fe0f\", 52, 1, 15, [\"\\uD83E\\uDDDA\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDDDA\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f9da-1f3fd-200d-2640-fe0f\", 52, 2, 15, [\"\\uD83E\\uDDDA\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDDDA\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f9da-1f3fe-200d-2640-fe0f\", 52, 3, 15, [\"\\uD83E\\uDDDA\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDDDA\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f9da-1f3ff-200d-2640-fe0f\", 52, 4, 15, [\"\\uD83E\\uDDDA\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDDDA\\uD83C\\uDFFF\"]]\n    },\n    \"1f9da-200d-2642-fe0f\": {\n      \"1f3fb\": [\"1f9da-1f3fb-200d-2642-fe0f\", 52, 6, 15, [\"\\uD83E\\uDDDA\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fc\": [\"1f9da-1f3fc-200d-2642-fe0f\", 52, 7, 15, [\"\\uD83E\\uDDDA\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fd\": [\"1f9da-1f3fd-200d-2642-fe0f\", 52, 8, 15, [\"\\uD83E\\uDDDA\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fe\": [\"1f9da-1f3fe-200d-2642-fe0f\", 52, 9, 15, [\"\\uD83E\\uDDDA\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\"]],\n      \"1f3ff\": [\"1f9da-1f3ff-200d-2642-fe0f\", 52, 10, 15, [\"\\uD83E\\uDDDA\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\"]]\n    },\n    \"1f9db-200d-2640-fe0f\": {\n      \"1f3fb\": [\"1f9db-1f3fb-200d-2640-fe0f\", 52, 18, 15, [\"\\uD83E\\uDDDB\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDDDB\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f9db-1f3fc-200d-2640-fe0f\", 52, 19, 15, [\"\\uD83E\\uDDDB\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDDDB\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f9db-1f3fd-200d-2640-fe0f\", 52, 20, 15, [\"\\uD83E\\uDDDB\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDDDB\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f9db-1f3fe-200d-2640-fe0f\", 52, 21, 15, [\"\\uD83E\\uDDDB\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDDDB\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f9db-1f3ff-200d-2640-fe0f\", 52, 22, 15, [\"\\uD83E\\uDDDB\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\", \"\\uD83E\\uDDDB\\uD83C\\uDFFF\"]]\n    },\n    \"1f9db-200d-2642-fe0f\": {\n      \"1f3fb\": [\"1f9db-1f3fb-200d-2642-fe0f\", 52, 24, 15, [\"\\uD83E\\uDDDB\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fc\": [\"1f9db-1f3fc-200d-2642-fe0f\", 52, 25, 15, [\"\\uD83E\\uDDDB\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fd\": [\"1f9db-1f3fd-200d-2642-fe0f\", 52, 26, 15, [\"\\uD83E\\uDDDB\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\"]],\n      \"1f3fe\": [\"1f9db-1f3fe-200d-2642-fe0f\", 52, 27, 15, [\"\\uD83E\\uDDDB\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\"]],\n      \"1f3ff\": [\"1f9db-1f3ff-200d-2642-fe0f\", 52, 28, 15, [\"\\uD83E\\uDDDB\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\"]]\n    },\n    \"1f9dc-200d-2640-fe0f\": {\n      \"1f3fb\": [\"1f9dc-1f3fb-200d-2640-fe0f\", 52, 36, 15, [\"\\uD83E\\uDDDC\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fc\": [\"1f9dc-1f3fc-200d-2640-fe0f\", 52, 37, 15, [\"\\uD83E\\uDDDC\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fd\": [\"1f9dc-1f3fd-200d-2640-fe0f\", 52, 38, 15, [\"\\uD83E\\uDDDC\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fe\": [\"1f9dc-1f3fe-200d-2640-fe0f\", 52, 39, 15, [\"\\uD83E\\uDDDC\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\"]],\n      \"1f3ff\": [\"1f9dc-1f3ff-200d-2640-fe0f\", 52, 40, 15, [\"\\uD83E\\uDDDC\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\"]]\n    },\n    \"1f9dc-200d-2642-fe0f\": {\n      \"1f3fb\": [\"1f9dc-1f3fb-200d-2642-fe0f\", 52, 42, 15, [\"\\uD83E\\uDDDC\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\", \"\\uD83E\\uDDDC\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f9dc-1f3fc-200d-2642-fe0f\", 52, 43, 15, [\"\\uD83E\\uDDDC\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\", \"\\uD83E\\uDDDC\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f9dc-1f3fd-200d-2642-fe0f\", 52, 44, 15, [\"\\uD83E\\uDDDC\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\", \"\\uD83E\\uDDDC\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f9dc-1f3fe-200d-2642-fe0f\", 52, 45, 15, [\"\\uD83E\\uDDDC\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\", \"\\uD83E\\uDDDC\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f9dc-1f3ff-200d-2642-fe0f\", 52, 46, 15, [\"\\uD83E\\uDDDC\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\", \"\\uD83E\\uDDDC\\uD83C\\uDFFF\"]]\n    },\n    \"1f9dd-200d-2640-fe0f\": {\n      \"1f3fb\": [\"1f9dd-1f3fb-200d-2640-fe0f\", 52, 54, 15, [\"\\uD83E\\uDDDD\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fc\": [\"1f9dd-1f3fc-200d-2640-fe0f\", 52, 55, 15, [\"\\uD83E\\uDDDD\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fd\": [\"1f9dd-1f3fd-200d-2640-fe0f\", 52, 56, 15, [\"\\uD83E\\uDDDD\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fe\": [\"1f9dd-1f3fe-200d-2640-fe0f\", 52, 57, 15, [\"\\uD83E\\uDDDD\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\"]],\n      \"1f3ff\": [\"1f9dd-1f3ff-200d-2640-fe0f\", 52, 58, 15, [\"\\uD83E\\uDDDD\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\"]]\n    },\n    \"1f9dd-200d-2642-fe0f\": {\n      \"1f3fb\": [\"1f9dd-1f3fb-200d-2642-fe0f\", 52, 60, 15, [\"\\uD83E\\uDDDD\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\", \"\\uD83E\\uDDDD\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1f9dd-1f3fc-200d-2642-fe0f\", 53, 0, 15, [\"\\uD83E\\uDDDD\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\", \"\\uD83E\\uDDDD\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1f9dd-1f3fd-200d-2642-fe0f\", 53, 1, 15, [\"\\uD83E\\uDDDD\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\", \"\\uD83E\\uDDDD\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1f9dd-1f3fe-200d-2642-fe0f\", 53, 2, 15, [\"\\uD83E\\uDDDD\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\", \"\\uD83E\\uDDDD\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1f9dd-1f3ff-200d-2642-fe0f\", 53, 3, 15, [\"\\uD83E\\uDDDD\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\", \"\\uD83E\\uDDDD\\uD83C\\uDFFF\"]]\n    },\n    \"1fac3\": {\n      \"1f3fb\": [\"1fac3-1f3fb\", 54, 60, 15, [\"\\uD83E\\uDEC3\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1fac3-1f3fc\", 55, 0, 15, [\"\\uD83E\\uDEC3\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1fac3-1f3fd\", 55, 1, 15, [\"\\uD83E\\uDEC3\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1fac3-1f3fe\", 55, 2, 15, [\"\\uD83E\\uDEC3\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1fac3-1f3ff\", 55, 3, 15, [\"\\uD83E\\uDEC3\\uD83C\\uDFFF\"]]\n    },\n    \"1fac4\": {\n      \"1f3fb\": [\"1fac4-1f3fb\", 55, 5, 15, [\"\\uD83E\\uDEC4\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1fac4-1f3fc\", 55, 6, 15, [\"\\uD83E\\uDEC4\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1fac4-1f3fd\", 55, 7, 15, [\"\\uD83E\\uDEC4\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1fac4-1f3fe\", 55, 8, 15, [\"\\uD83E\\uDEC4\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1fac4-1f3ff\", 55, 9, 15, [\"\\uD83E\\uDEC4\\uD83C\\uDFFF\"]]\n    },\n    \"1fac5\": {\n      \"1f3fb\": [\"1fac5-1f3fb\", 55, 11, 15, [\"\\uD83E\\uDEC5\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1fac5-1f3fc\", 55, 12, 15, [\"\\uD83E\\uDEC5\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1fac5-1f3fd\", 55, 13, 15, [\"\\uD83E\\uDEC5\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1fac5-1f3fe\", 55, 14, 15, [\"\\uD83E\\uDEC5\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1fac5-1f3ff\", 55, 15, 15, [\"\\uD83E\\uDEC5\\uD83C\\uDFFF\"]]\n    },\n    \"1faf0\": {\n      \"1f3fb\": [\"1faf0-1f3fb\", 55, 40, 15, [\"\\uD83E\\uDEF0\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1faf0-1f3fc\", 55, 41, 15, [\"\\uD83E\\uDEF0\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1faf0-1f3fd\", 55, 42, 15, [\"\\uD83E\\uDEF0\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1faf0-1f3fe\", 55, 43, 15, [\"\\uD83E\\uDEF0\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1faf0-1f3ff\", 55, 44, 15, [\"\\uD83E\\uDEF0\\uD83C\\uDFFF\"]]\n    },\n    \"1faf1\": {\n      \"1f3fb\": [\"1faf1-1f3fb\", 55, 46, 15, [\"\\uD83E\\uDEF1\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1faf1-1f3fc\", 55, 47, 15, [\"\\uD83E\\uDEF1\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1faf1-1f3fd\", 55, 48, 15, [\"\\uD83E\\uDEF1\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1faf1-1f3fe\", 55, 49, 15, [\"\\uD83E\\uDEF1\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1faf1-1f3ff\", 55, 50, 15, [\"\\uD83E\\uDEF1\\uD83C\\uDFFF\"]]\n    },\n    \"1faf2\": {\n      \"1f3fb\": [\"1faf2-1f3fb\", 55, 52, 15, [\"\\uD83E\\uDEF2\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1faf2-1f3fc\", 55, 53, 15, [\"\\uD83E\\uDEF2\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1faf2-1f3fd\", 55, 54, 15, [\"\\uD83E\\uDEF2\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1faf2-1f3fe\", 55, 55, 15, [\"\\uD83E\\uDEF2\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1faf2-1f3ff\", 55, 56, 15, [\"\\uD83E\\uDEF2\\uD83C\\uDFFF\"]]\n    },\n    \"1faf3\": {\n      \"1f3fb\": [\"1faf3-1f3fb\", 55, 58, 15, [\"\\uD83E\\uDEF3\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1faf3-1f3fc\", 55, 59, 15, [\"\\uD83E\\uDEF3\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1faf3-1f3fd\", 55, 60, 15, [\"\\uD83E\\uDEF3\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1faf3-1f3fe\", 56, 0, 15, [\"\\uD83E\\uDEF3\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1faf3-1f3ff\", 56, 1, 15, [\"\\uD83E\\uDEF3\\uD83C\\uDFFF\"]]\n    },\n    \"1faf4\": {\n      \"1f3fb\": [\"1faf4-1f3fb\", 56, 3, 15, [\"\\uD83E\\uDEF4\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1faf4-1f3fc\", 56, 4, 15, [\"\\uD83E\\uDEF4\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1faf4-1f3fd\", 56, 5, 15, [\"\\uD83E\\uDEF4\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1faf4-1f3fe\", 56, 6, 15, [\"\\uD83E\\uDEF4\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1faf4-1f3ff\", 56, 7, 15, [\"\\uD83E\\uDEF4\\uD83C\\uDFFF\"]]\n    },\n    \"1faf5\": {\n      \"1f3fb\": [\"1faf5-1f3fb\", 56, 9, 15, [\"\\uD83E\\uDEF5\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1faf5-1f3fc\", 56, 10, 15, [\"\\uD83E\\uDEF5\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1faf5-1f3fd\", 56, 11, 15, [\"\\uD83E\\uDEF5\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1faf5-1f3fe\", 56, 12, 15, [\"\\uD83E\\uDEF5\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1faf5-1f3ff\", 56, 13, 15, [\"\\uD83E\\uDEF5\\uD83C\\uDFFF\"]]\n    },\n    \"1faf6\": {\n      \"1f3fb\": [\"1faf6-1f3fb\", 56, 15, 15, [\"\\uD83E\\uDEF6\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1faf6-1f3fc\", 56, 16, 15, [\"\\uD83E\\uDEF6\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1faf6-1f3fd\", 56, 17, 15, [\"\\uD83E\\uDEF6\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1faf6-1f3fe\", 56, 18, 15, [\"\\uD83E\\uDEF6\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1faf6-1f3ff\", 56, 19, 15, [\"\\uD83E\\uDEF6\\uD83C\\uDFFF\"]]\n    },\n    \"1faf7\": {\n      \"1f3fb\": [\"1faf7-1f3fb\", 56, 21, 3, [\"\\uD83E\\uDEF7\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1faf7-1f3fc\", 56, 22, 3, [\"\\uD83E\\uDEF7\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1faf7-1f3fd\", 56, 23, 3, [\"\\uD83E\\uDEF7\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1faf7-1f3fe\", 56, 24, 3, [\"\\uD83E\\uDEF7\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1faf7-1f3ff\", 56, 25, 3, [\"\\uD83E\\uDEF7\\uD83C\\uDFFF\"]]\n    },\n    \"1faf8\": {\n      \"1f3fb\": [\"1faf8-1f3fb\", 56, 27, 3, [\"\\uD83E\\uDEF8\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"1faf8-1f3fc\", 56, 28, 3, [\"\\uD83E\\uDEF8\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"1faf8-1f3fd\", 56, 29, 3, [\"\\uD83E\\uDEF8\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"1faf8-1f3fe\", 56, 30, 3, [\"\\uD83E\\uDEF8\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"1faf8-1f3ff\", 56, 31, 3, [\"\\uD83E\\uDEF8\\uD83C\\uDFFF\"]]\n    },\n    \"261d-fe0f\": {\n      \"1f3fb\": [\"261d-1f3fb\", 57, 21, 15, [\"\\u261D\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"261d-1f3fc\", 57, 22, 15, [\"\\u261D\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"261d-1f3fd\", 57, 23, 15, [\"\\u261D\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"261d-1f3fe\", 57, 24, 15, [\"\\u261D\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"261d-1f3ff\", 57, 25, 15, [\"\\u261D\\uD83C\\uDFFF\"]]\n    },\n    \"26f9-fe0f-200d-2640-fe0f\": {\n      \"1f3fb\": [\"26f9-1f3fb-200d-2640-fe0f\", 58, 35, 15, [\"\\u26F9\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fc\": [\"26f9-1f3fc-200d-2640-fe0f\", 58, 36, 15, [\"\\u26F9\\uD83C\\uDFFC\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fd\": [\"26f9-1f3fd-200d-2640-fe0f\", 58, 37, 15, [\"\\u26F9\\uD83C\\uDFFD\\u200D\\u2640\\uFE0F\"]],\n      \"1f3fe\": [\"26f9-1f3fe-200d-2640-fe0f\", 58, 38, 15, [\"\\u26F9\\uD83C\\uDFFE\\u200D\\u2640\\uFE0F\"]],\n      \"1f3ff\": [\"26f9-1f3ff-200d-2640-fe0f\", 58, 39, 15, [\"\\u26F9\\uD83C\\uDFFF\\u200D\\u2640\\uFE0F\"]]\n    },\n    \"26f9-fe0f-200d-2642-fe0f\": {\n      \"1f3fb\": [\"26f9-1f3fb-200d-2642-fe0f\", 58, 41, 15, [\"\\u26F9\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\", \"\\u26F9\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"26f9-1f3fc-200d-2642-fe0f\", 58, 42, 15, [\"\\u26F9\\uD83C\\uDFFC\\u200D\\u2642\\uFE0F\", \"\\u26F9\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"26f9-1f3fd-200d-2642-fe0f\", 58, 43, 15, [\"\\u26F9\\uD83C\\uDFFD\\u200D\\u2642\\uFE0F\", \"\\u26F9\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"26f9-1f3fe-200d-2642-fe0f\", 58, 44, 15, [\"\\u26F9\\uD83C\\uDFFE\\u200D\\u2642\\uFE0F\", \"\\u26F9\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"26f9-1f3ff-200d-2642-fe0f\", 58, 45, 15, [\"\\u26F9\\uD83C\\uDFFF\\u200D\\u2642\\uFE0F\", \"\\u26F9\\uD83C\\uDFFF\"]]\n    },\n    \"270a\": {\n      \"1f3fb\": [\"270a-1f3fb\", 58, 59, 15, [\"\\u270A\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"270a-1f3fc\", 58, 60, 15, [\"\\u270A\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"270a-1f3fd\", 59, 0, 15, [\"\\u270A\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"270a-1f3fe\", 59, 1, 15, [\"\\u270A\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"270a-1f3ff\", 59, 2, 15, [\"\\u270A\\uD83C\\uDFFF\"]]\n    },\n    \"270b\": {\n      \"1f3fb\": [\"270b-1f3fb\", 59, 4, 15, [\"\\u270B\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"270b-1f3fc\", 59, 5, 15, [\"\\u270B\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"270b-1f3fd\", 59, 6, 15, [\"\\u270B\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"270b-1f3fe\", 59, 7, 15, [\"\\u270B\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"270b-1f3ff\", 59, 8, 15, [\"\\u270B\\uD83C\\uDFFF\"]]\n    },\n    \"270c-fe0f\": {\n      \"1f3fb\": [\"270c-1f3fb\", 59, 10, 15, [\"\\u270C\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"270c-1f3fc\", 59, 11, 15, [\"\\u270C\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"270c-1f3fd\", 59, 12, 15, [\"\\u270C\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"270c-1f3fe\", 59, 13, 15, [\"\\u270C\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"270c-1f3ff\", 59, 14, 15, [\"\\u270C\\uD83C\\uDFFF\"]]\n    },\n    \"270d-fe0f\": {\n      \"1f3fb\": [\"270d-1f3fb\", 59, 16, 15, [\"\\u270D\\uD83C\\uDFFB\"]],\n      \"1f3fc\": [\"270d-1f3fc\", 59, 17, 15, [\"\\u270D\\uD83C\\uDFFC\"]],\n      \"1f3fd\": [\"270d-1f3fd\", 59, 18, 15, [\"\\u270D\\uD83C\\uDFFD\"]],\n      \"1f3fe\": [\"270d-1f3fe\", 59, 19, 15, [\"\\u270D\\uD83C\\uDFFE\"]],\n      \"1f3ff\": [\"270d-1f3ff\", 59, 20, 15, [\"\\u270D\\uD83C\\uDFFF\"]]\n    }\n  };\n  /** @private */\n  emoji.prototype.obsoletes_data = {\n    \"1f3c3-200d-2642-fe0f\": [\"1f3c3\", 8, 26, 15],\n    \"1f3c3-1f3fb-200d-2642-fe0f\": [\"1f3c3-1f3fb\", 8, 27, 15],\n    \"1f3c3-1f3fc-200d-2642-fe0f\": [\"1f3c3-1f3fc\", 8, 28, 15],\n    \"1f3c3-1f3fd-200d-2642-fe0f\": [\"1f3c3-1f3fd\", 8, 29, 15],\n    \"1f3c3-1f3fe-200d-2642-fe0f\": [\"1f3c3-1f3fe\", 8, 30, 15],\n    \"1f3c3-1f3ff-200d-2642-fe0f\": [\"1f3c3-1f3ff\", 8, 31, 15],\n    \"1f3c4-200d-2642-fe0f\": [\"1f3c4\", 8, 44, 15],\n    \"1f3c4-1f3fb-200d-2642-fe0f\": [\"1f3c4-1f3fb\", 8, 45, 15],\n    \"1f3c4-1f3fc-200d-2642-fe0f\": [\"1f3c4-1f3fc\", 8, 46, 15],\n    \"1f3c4-1f3fd-200d-2642-fe0f\": [\"1f3c4-1f3fd\", 8, 47, 15],\n    \"1f3c4-1f3fe-200d-2642-fe0f\": [\"1f3c4-1f3fe\", 8, 48, 15],\n    \"1f3c4-1f3ff-200d-2642-fe0f\": [\"1f3c4-1f3ff\", 8, 49, 15],\n    \"1f3ca-200d-2642-fe0f\": [\"1f3ca\", 9, 11, 15],\n    \"1f3ca-1f3fb-200d-2642-fe0f\": [\"1f3ca-1f3fb\", 9, 12, 15],\n    \"1f3ca-1f3fc-200d-2642-fe0f\": [\"1f3ca-1f3fc\", 9, 13, 15],\n    \"1f3ca-1f3fd-200d-2642-fe0f\": [\"1f3ca-1f3fd\", 9, 14, 15],\n    \"1f3ca-1f3fe-200d-2642-fe0f\": [\"1f3ca-1f3fe\", 9, 15, 15],\n    \"1f3ca-1f3ff-200d-2642-fe0f\": [\"1f3ca-1f3ff\", 9, 16, 15],\n    \"1f3cb-fe0f-200d-2642-fe0f\": [\"1f3cb-fe0f\", 9, 29, 15],\n    \"1f3cb-1f3fb-200d-2642-fe0f\": [\"1f3cb-1f3fb\", 9, 30, 15],\n    \"1f3cb-1f3fc-200d-2642-fe0f\": [\"1f3cb-1f3fc\", 9, 31, 15],\n    \"1f3cb-1f3fd-200d-2642-fe0f\": [\"1f3cb-1f3fd\", 9, 32, 15],\n    \"1f3cb-1f3fe-200d-2642-fe0f\": [\"1f3cb-1f3fe\", 9, 33, 15],\n    \"1f3cb-1f3ff-200d-2642-fe0f\": [\"1f3cb-1f3ff\", 9, 34, 15],\n    \"1f3cc-fe0f-200d-2642-fe0f\": [\"1f3cc-fe0f\", 9, 47, 15],\n    \"1f3cc-1f3fb-200d-2642-fe0f\": [\"1f3cc-1f3fb\", 9, 48, 15],\n    \"1f3cc-1f3fc-200d-2642-fe0f\": [\"1f3cc-1f3fc\", 9, 49, 15],\n    \"1f3cc-1f3fd-200d-2642-fe0f\": [\"1f3cc-1f3fd\", 9, 50, 15],\n    \"1f3cc-1f3fe-200d-2642-fe0f\": [\"1f3cc-1f3fe\", 9, 51, 15],\n    \"1f3cc-1f3ff-200d-2642-fe0f\": [\"1f3cc-1f3ff\", 9, 52, 15],\n    \"1f468-200d-1f469-200d-1f466\": [\"1f46a\", 21, 40, 15],\n    \"1f46e-200d-2642-fe0f\": [\"1f46e\", 23, 9, 15],\n    \"1f46e-1f3fb-200d-2642-fe0f\": [\"1f46e-1f3fb\", 23, 10, 15],\n    \"1f46e-1f3fc-200d-2642-fe0f\": [\"1f46e-1f3fc\", 23, 11, 15],\n    \"1f46e-1f3fd-200d-2642-fe0f\": [\"1f46e-1f3fd\", 23, 12, 15],\n    \"1f46e-1f3fe-200d-2642-fe0f\": [\"1f46e-1f3fe\", 23, 13, 15],\n    \"1f46e-1f3ff-200d-2642-fe0f\": [\"1f46e-1f3ff\", 23, 14, 15],\n    \"1f46f-200d-2640-fe0f\": [\"1f46f\", 23, 17, 15],\n    \"1f471-200d-2642-fe0f\": [\"1f471\", 23, 48, 15],\n    \"1f471-1f3fb-200d-2642-fe0f\": [\"1f471-1f3fb\", 23, 49, 15],\n    \"1f471-1f3fc-200d-2642-fe0f\": [\"1f471-1f3fc\", 23, 50, 15],\n    \"1f471-1f3fd-200d-2642-fe0f\": [\"1f471-1f3fd\", 23, 51, 15],\n    \"1f471-1f3fe-200d-2642-fe0f\": [\"1f471-1f3fe\", 23, 52, 15],\n    \"1f471-1f3ff-200d-2642-fe0f\": [\"1f471-1f3ff\", 23, 53, 15],\n    \"1f473-200d-2642-fe0f\": [\"1f473\", 24, 11, 15],\n    \"1f473-1f3fb-200d-2642-fe0f\": [\"1f473-1f3fb\", 24, 12, 15],\n    \"1f473-1f3fc-200d-2642-fe0f\": [\"1f473-1f3fc\", 24, 13, 15],\n    \"1f473-1f3fd-200d-2642-fe0f\": [\"1f473-1f3fd\", 24, 14, 15],\n    \"1f473-1f3fe-200d-2642-fe0f\": [\"1f473-1f3fe\", 24, 15, 15],\n    \"1f473-1f3ff-200d-2642-fe0f\": [\"1f473-1f3ff\", 24, 16, 15],\n    \"1f477-200d-2642-fe0f\": [\"1f477\", 24, 47, 15],\n    \"1f477-1f3fb-200d-2642-fe0f\": [\"1f477-1f3fb\", 24, 48, 15],\n    \"1f477-1f3fc-200d-2642-fe0f\": [\"1f477-1f3fc\", 24, 49, 15],\n    \"1f477-1f3fd-200d-2642-fe0f\": [\"1f477-1f3fd\", 24, 50, 15],\n    \"1f477-1f3fe-200d-2642-fe0f\": [\"1f477-1f3fe\", 24, 51, 15],\n    \"1f477-1f3ff-200d-2642-fe0f\": [\"1f477-1f3ff\", 24, 52, 15],\n    \"1f481-200d-2640-fe0f\": [\"1f481\", 25, 23, 15],\n    \"1f481-1f3fb-200d-2640-fe0f\": [\"1f481-1f3fb\", 25, 24, 15],\n    \"1f481-1f3fc-200d-2640-fe0f\": [\"1f481-1f3fc\", 25, 25, 15],\n    \"1f481-1f3fd-200d-2640-fe0f\": [\"1f481-1f3fd\", 25, 26, 15],\n    \"1f481-1f3fe-200d-2640-fe0f\": [\"1f481-1f3fe\", 25, 27, 15],\n    \"1f481-1f3ff-200d-2640-fe0f\": [\"1f481-1f3ff\", 25, 28, 15],\n    \"1f482-200d-2642-fe0f\": [\"1f482\", 25, 41, 15],\n    \"1f482-1f3fb-200d-2642-fe0f\": [\"1f482-1f3fb\", 25, 42, 15],\n    \"1f482-1f3fc-200d-2642-fe0f\": [\"1f482-1f3fc\", 25, 43, 15],\n    \"1f482-1f3fd-200d-2642-fe0f\": [\"1f482-1f3fd\", 25, 44, 15],\n    \"1f482-1f3fe-200d-2642-fe0f\": [\"1f482-1f3fe\", 25, 45, 15],\n    \"1f482-1f3ff-200d-2642-fe0f\": [\"1f482-1f3ff\", 25, 46, 15],\n    \"1f486-200d-2640-fe0f\": [\"1f486\", 26, 11, 15],\n    \"1f486-1f3fb-200d-2640-fe0f\": [\"1f486-1f3fb\", 26, 12, 15],\n    \"1f486-1f3fc-200d-2640-fe0f\": [\"1f486-1f3fc\", 26, 13, 15],\n    \"1f486-1f3fd-200d-2640-fe0f\": [\"1f486-1f3fd\", 26, 14, 15],\n    \"1f486-1f3fe-200d-2640-fe0f\": [\"1f486-1f3fe\", 26, 15, 15],\n    \"1f486-1f3ff-200d-2640-fe0f\": [\"1f486-1f3ff\", 26, 16, 15],\n    \"1f487-200d-2640-fe0f\": [\"1f487\", 26, 29, 15],\n    \"1f487-1f3fb-200d-2640-fe0f\": [\"1f487-1f3fb\", 26, 30, 15],\n    \"1f487-1f3fc-200d-2640-fe0f\": [\"1f487-1f3fc\", 26, 31, 15],\n    \"1f487-1f3fd-200d-2640-fe0f\": [\"1f487-1f3fd\", 26, 32, 15],\n    \"1f487-1f3fe-200d-2640-fe0f\": [\"1f487-1f3fe\", 26, 33, 15],\n    \"1f487-1f3ff-200d-2640-fe0f\": [\"1f487-1f3ff\", 26, 34, 15],\n    \"1f575-fe0f-200d-2642-fe0f\": [\"1f575-fe0f\", 31, 17, 15],\n    \"1f575-1f3fb-200d-2642-fe0f\": [\"1f575-1f3fb\", 31, 18, 15],\n    \"1f575-1f3fc-200d-2642-fe0f\": [\"1f575-1f3fc\", 31, 19, 15],\n    \"1f575-1f3fd-200d-2642-fe0f\": [\"1f575-1f3fd\", 31, 20, 15],\n    \"1f575-1f3fe-200d-2642-fe0f\": [\"1f575-1f3fe\", 31, 21, 15],\n    \"1f575-1f3ff-200d-2642-fe0f\": [\"1f575-1f3ff\", 31, 22, 15],\n    \"1f645-200d-2640-fe0f\": [\"1f645\", 33, 44, 15],\n    \"1f645-1f3fb-200d-2640-fe0f\": [\"1f645-1f3fb\", 33, 45, 15],\n    \"1f645-1f3fc-200d-2640-fe0f\": [\"1f645-1f3fc\", 33, 46, 15],\n    \"1f645-1f3fd-200d-2640-fe0f\": [\"1f645-1f3fd\", 33, 47, 15],\n    \"1f645-1f3fe-200d-2640-fe0f\": [\"1f645-1f3fe\", 33, 48, 15],\n    \"1f645-1f3ff-200d-2640-fe0f\": [\"1f645-1f3ff\", 33, 49, 15],\n    \"1f646-200d-2640-fe0f\": [\"1f646\", 34, 1, 15],\n    \"1f646-1f3fb-200d-2640-fe0f\": [\"1f646-1f3fb\", 34, 2, 15],\n    \"1f646-1f3fc-200d-2640-fe0f\": [\"1f646-1f3fc\", 34, 3, 15],\n    \"1f646-1f3fd-200d-2640-fe0f\": [\"1f646-1f3fd\", 34, 4, 15],\n    \"1f646-1f3fe-200d-2640-fe0f\": [\"1f646-1f3fe\", 34, 5, 15],\n    \"1f646-1f3ff-200d-2640-fe0f\": [\"1f646-1f3ff\", 34, 6, 15],\n    \"1f64b-200d-2640-fe0f\": [\"1f64b\", 34, 40, 15],\n    \"1f64b-1f3fb-200d-2640-fe0f\": [\"1f64b-1f3fb\", 34, 41, 15],\n    \"1f64b-1f3fc-200d-2640-fe0f\": [\"1f64b-1f3fc\", 34, 42, 15],\n    \"1f64b-1f3fd-200d-2640-fe0f\": [\"1f64b-1f3fd\", 34, 43, 15],\n    \"1f64b-1f3fe-200d-2640-fe0f\": [\"1f64b-1f3fe\", 34, 44, 15],\n    \"1f64b-1f3ff-200d-2640-fe0f\": [\"1f64b-1f3ff\", 34, 45, 15],\n    \"1f64d-200d-2640-fe0f\": [\"1f64d\", 35, 3, 15],\n    \"1f64d-1f3fb-200d-2640-fe0f\": [\"1f64d-1f3fb\", 35, 4, 15],\n    \"1f64d-1f3fc-200d-2640-fe0f\": [\"1f64d-1f3fc\", 35, 5, 15],\n    \"1f64d-1f3fd-200d-2640-fe0f\": [\"1f64d-1f3fd\", 35, 6, 15],\n    \"1f64d-1f3fe-200d-2640-fe0f\": [\"1f64d-1f3fe\", 35, 7, 15],\n    \"1f64d-1f3ff-200d-2640-fe0f\": [\"1f64d-1f3ff\", 35, 8, 15],\n    \"1f64e-200d-2640-fe0f\": [\"1f64e\", 35, 21, 15],\n    \"1f64e-1f3fb-200d-2640-fe0f\": [\"1f64e-1f3fb\", 35, 22, 15],\n    \"1f64e-1f3fc-200d-2640-fe0f\": [\"1f64e-1f3fc\", 35, 23, 15],\n    \"1f64e-1f3fd-200d-2640-fe0f\": [\"1f64e-1f3fd\", 35, 24, 15],\n    \"1f64e-1f3fe-200d-2640-fe0f\": [\"1f64e-1f3fe\", 35, 25, 15],\n    \"1f64e-1f3ff-200d-2640-fe0f\": [\"1f64e-1f3ff\", 35, 26, 15],\n    \"1f6a3-200d-2642-fe0f\": [\"1f6a3\", 36, 19, 15],\n    \"1f6a3-1f3fb-200d-2642-fe0f\": [\"1f6a3-1f3fb\", 36, 20, 15],\n    \"1f6a3-1f3fc-200d-2642-fe0f\": [\"1f6a3-1f3fc\", 36, 21, 15],\n    \"1f6a3-1f3fd-200d-2642-fe0f\": [\"1f6a3-1f3fd\", 36, 22, 15],\n    \"1f6a3-1f3fe-200d-2642-fe0f\": [\"1f6a3-1f3fe\", 36, 23, 15],\n    \"1f6a3-1f3ff-200d-2642-fe0f\": [\"1f6a3-1f3ff\", 36, 24, 15],\n    \"1f6b4-200d-2642-fe0f\": [\"1f6b4\", 36, 53, 15],\n    \"1f6b4-1f3fb-200d-2642-fe0f\": [\"1f6b4-1f3fb\", 36, 54, 15],\n    \"1f6b4-1f3fc-200d-2642-fe0f\": [\"1f6b4-1f3fc\", 36, 55, 15],\n    \"1f6b4-1f3fd-200d-2642-fe0f\": [\"1f6b4-1f3fd\", 36, 56, 15],\n    \"1f6b4-1f3fe-200d-2642-fe0f\": [\"1f6b4-1f3fe\", 36, 57, 15],\n    \"1f6b4-1f3ff-200d-2642-fe0f\": [\"1f6b4-1f3ff\", 36, 58, 15],\n    \"1f6b5-200d-2642-fe0f\": [\"1f6b5\", 37, 10, 15],\n    \"1f6b5-1f3fb-200d-2642-fe0f\": [\"1f6b5-1f3fb\", 37, 11, 15],\n    \"1f6b5-1f3fc-200d-2642-fe0f\": [\"1f6b5-1f3fc\", 37, 12, 15],\n    \"1f6b5-1f3fd-200d-2642-fe0f\": [\"1f6b5-1f3fd\", 37, 13, 15],\n    \"1f6b5-1f3fe-200d-2642-fe0f\": [\"1f6b5-1f3fe\", 37, 14, 15],\n    \"1f6b5-1f3ff-200d-2642-fe0f\": [\"1f6b5-1f3ff\", 37, 15, 15],\n    \"1f6b6-200d-2642-fe0f\": [\"1f6b6\", 37, 28, 15],\n    \"1f6b6-1f3fb-200d-2642-fe0f\": [\"1f6b6-1f3fb\", 37, 29, 15],\n    \"1f6b6-1f3fc-200d-2642-fe0f\": [\"1f6b6-1f3fc\", 37, 30, 15],\n    \"1f6b6-1f3fd-200d-2642-fe0f\": [\"1f6b6-1f3fd\", 37, 31, 15],\n    \"1f6b6-1f3fe-200d-2642-fe0f\": [\"1f6b6-1f3fe\", 37, 32, 15],\n    \"1f6b6-1f3ff-200d-2642-fe0f\": [\"1f6b6-1f3ff\", 37, 33, 15],\n    \"1f9d6-200d-2642-fe0f\": [\"1f9d6\", 51, 0, 15],\n    \"1f9d6-1f3fb-200d-2642-fe0f\": [\"1f9d6-1f3fb\", 51, 1, 15],\n    \"1f9d6-1f3fc-200d-2642-fe0f\": [\"1f9d6-1f3fc\", 51, 2, 15],\n    \"1f9d6-1f3fd-200d-2642-fe0f\": [\"1f9d6-1f3fd\", 51, 3, 15],\n    \"1f9d6-1f3fe-200d-2642-fe0f\": [\"1f9d6-1f3fe\", 51, 4, 15],\n    \"1f9d6-1f3ff-200d-2642-fe0f\": [\"1f9d6-1f3ff\", 51, 5, 15],\n    \"1f9d7-200d-2640-fe0f\": [\"1f9d7\", 51, 18, 15],\n    \"1f9d7-1f3fb-200d-2640-fe0f\": [\"1f9d7-1f3fb\", 51, 19, 15],\n    \"1f9d7-1f3fc-200d-2640-fe0f\": [\"1f9d7-1f3fc\", 51, 20, 15],\n    \"1f9d7-1f3fd-200d-2640-fe0f\": [\"1f9d7-1f3fd\", 51, 21, 15],\n    \"1f9d7-1f3fe-200d-2640-fe0f\": [\"1f9d7-1f3fe\", 51, 22, 15],\n    \"1f9d7-1f3ff-200d-2640-fe0f\": [\"1f9d7-1f3ff\", 51, 23, 15],\n    \"1f9d8-200d-2640-fe0f\": [\"1f9d8\", 51, 36, 15],\n    \"1f9d8-1f3fb-200d-2640-fe0f\": [\"1f9d8-1f3fb\", 51, 37, 15],\n    \"1f9d8-1f3fc-200d-2640-fe0f\": [\"1f9d8-1f3fc\", 51, 38, 15],\n    \"1f9d8-1f3fd-200d-2640-fe0f\": [\"1f9d8-1f3fd\", 51, 39, 15],\n    \"1f9d8-1f3fe-200d-2640-fe0f\": [\"1f9d8-1f3fe\", 51, 40, 15],\n    \"1f9d8-1f3ff-200d-2640-fe0f\": [\"1f9d8-1f3ff\", 51, 41, 15],\n    \"1f9d9-200d-2640-fe0f\": [\"1f9d9\", 51, 54, 15],\n    \"1f9d9-1f3fb-200d-2640-fe0f\": [\"1f9d9-1f3fb\", 51, 55, 15],\n    \"1f9d9-1f3fc-200d-2640-fe0f\": [\"1f9d9-1f3fc\", 51, 56, 15],\n    \"1f9d9-1f3fd-200d-2640-fe0f\": [\"1f9d9-1f3fd\", 51, 57, 15],\n    \"1f9d9-1f3fe-200d-2640-fe0f\": [\"1f9d9-1f3fe\", 51, 58, 15],\n    \"1f9d9-1f3ff-200d-2640-fe0f\": [\"1f9d9-1f3ff\", 51, 59, 15],\n    \"1f9da-200d-2640-fe0f\": [\"1f9da\", 52, 11, 15],\n    \"1f9da-1f3fb-200d-2640-fe0f\": [\"1f9da-1f3fb\", 52, 12, 15],\n    \"1f9da-1f3fc-200d-2640-fe0f\": [\"1f9da-1f3fc\", 52, 13, 15],\n    \"1f9da-1f3fd-200d-2640-fe0f\": [\"1f9da-1f3fd\", 52, 14, 15],\n    \"1f9da-1f3fe-200d-2640-fe0f\": [\"1f9da-1f3fe\", 52, 15, 15],\n    \"1f9da-1f3ff-200d-2640-fe0f\": [\"1f9da-1f3ff\", 52, 16, 15],\n    \"1f9db-200d-2640-fe0f\": [\"1f9db\", 52, 29, 15],\n    \"1f9db-1f3fb-200d-2640-fe0f\": [\"1f9db-1f3fb\", 52, 30, 15],\n    \"1f9db-1f3fc-200d-2640-fe0f\": [\"1f9db-1f3fc\", 52, 31, 15],\n    \"1f9db-1f3fd-200d-2640-fe0f\": [\"1f9db-1f3fd\", 52, 32, 15],\n    \"1f9db-1f3fe-200d-2640-fe0f\": [\"1f9db-1f3fe\", 52, 33, 15],\n    \"1f9db-1f3ff-200d-2640-fe0f\": [\"1f9db-1f3ff\", 52, 34, 15],\n    \"1f9dc-200d-2642-fe0f\": [\"1f9dc\", 52, 47, 15],\n    \"1f9dc-1f3fb-200d-2642-fe0f\": [\"1f9dc-1f3fb\", 52, 48, 15],\n    \"1f9dc-1f3fc-200d-2642-fe0f\": [\"1f9dc-1f3fc\", 52, 49, 15],\n    \"1f9dc-1f3fd-200d-2642-fe0f\": [\"1f9dc-1f3fd\", 52, 50, 15],\n    \"1f9dc-1f3fe-200d-2642-fe0f\": [\"1f9dc-1f3fe\", 52, 51, 15],\n    \"1f9dc-1f3ff-200d-2642-fe0f\": [\"1f9dc-1f3ff\", 52, 52, 15],\n    \"1f9dd-200d-2642-fe0f\": [\"1f9dd\", 53, 4, 15],\n    \"1f9dd-1f3fb-200d-2642-fe0f\": [\"1f9dd-1f3fb\", 53, 5, 15],\n    \"1f9dd-1f3fc-200d-2642-fe0f\": [\"1f9dd-1f3fc\", 53, 6, 15],\n    \"1f9dd-1f3fd-200d-2642-fe0f\": [\"1f9dd-1f3fd\", 53, 7, 15],\n    \"1f9dd-1f3fe-200d-2642-fe0f\": [\"1f9dd-1f3fe\", 53, 8, 15],\n    \"1f9dd-1f3ff-200d-2642-fe0f\": [\"1f9dd-1f3ff\", 53, 9, 15],\n    \"1f9de-200d-2642-fe0f\": [\"1f9de\", 53, 12, 15],\n    \"1f9df-200d-2642-fe0f\": [\"1f9df\", 53, 15, 15],\n    \"26f9-fe0f-200d-2642-fe0f\": [\"26f9-fe0f\", 58, 46, 15],\n    \"26f9-1f3fb-200d-2642-fe0f\": [\"26f9-1f3fb\", 58, 47, 15],\n    \"26f9-1f3fc-200d-2642-fe0f\": [\"26f9-1f3fc\", 58, 48, 15],\n    \"26f9-1f3fd-200d-2642-fe0f\": [\"26f9-1f3fd\", 58, 49, 15],\n    \"26f9-1f3fe-200d-2642-fe0f\": [\"26f9-1f3fe\", 58, 50, 15],\n    \"26f9-1f3ff-200d-2642-fe0f\": [\"26f9-1f3ff\", 58, 51, 15]\n  };\n\n  // export\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = emoji;\n    }\n    exports.EmojiConvertor = emoji;\n  } else if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return emoji;\n    });\n  } else {\n    root.EmojiConvertor = emoji;\n  }\n}).call(function () {\n  return this || (typeof window !== 'undefined' ? window : global);\n}());","import * as monaco from 'monaco-editor';\r\n// Generic Monaco editor types\r\nexport type Disposable = { dispose(): void };\r\nexport type MonacoEditorWithActions = monaco.editor.ICodeEditor & { addAction: (action: monaco.editor.IActionDescriptor) => Disposable };\r\nexport type MonacoEditorTextModel = monaco.editor.ITextModel;\r\nexport type EditorPosition = monaco.IPosition;\r\nexport type EditorRange = monaco.IRange;\r\nexport type EditorOptions = monaco.editor.IEditorOptions;\r\n// Enums\r\nexport const KeyModifier = monaco.KeyMod;\r\nexport const KeyCode = monaco.KeyCode;\r\n\r\nexport function makeEditorRange(startLineNumber: number, startColumn: number, endLineNumber: number, endColumn: number): EditorRange {\r\n    return { startLineNumber, startColumn, endLineNumber, endColumn };\r\n}\r\n","/**\r\n * Represents a position in a text editor consisting of 1-based line numbers and columns.\r\n */\r\nexport class TextEditorPosition {\r\n    constructor(\r\n        private readonly lineNumber: number,\r\n        private readonly column: number,\r\n    ) {}\r\n\r\n    /**\r\n     * Creates a copy of this position with the given column.\r\n     * @param column The column of the new position.\r\n     */\r\n    withColumn(column: number): TextEditorPosition {\r\n        return new TextEditorPosition(this.lineNumber, column);\r\n    }\r\n\r\n    getLineNumber(): number {\r\n        return this.lineNumber;\r\n    }\r\n\r\n    getColumn(): number {\r\n        return this.column;\r\n    }\r\n}\r\n\r\n/**\r\n * Creates a new text editor position from the given position, shifted by the given number of lines and columns.\r\n * @param position The position to shift.\r\n * @param lines The number of lines to shift the position by.\r\n * @param columns The number of columns to shift the position by.\r\n */\r\nexport function shiftPosition(position: TextEditorPosition, lines: number, columns: number): TextEditorPosition {\r\n    return new TextEditorPosition(position.getLineNumber() + lines, position.getColumn() + columns);\r\n}\r\n","import { TextEditorPosition } from 'app/shared/monaco-editor/model/actions/adapter/text-editor-position.model';\r\n\r\n/**\r\n * Represents a range in a text editor consisting of 1-based line numbers and columns.\r\n */\r\nexport class TextEditorRange {\r\n    /**\r\n     * Creates a new text editor range.\r\n     * @param startPosition The position at which this range starts.\r\n     * @param endPosition The position at which this range ends.\r\n     */\r\n    constructor(\r\n        private readonly startPosition: TextEditorPosition,\r\n        private readonly endPosition: TextEditorPosition,\r\n    ) {}\r\n\r\n    getStartPosition(): TextEditorPosition {\r\n        return this.startPosition;\r\n    }\r\n\r\n    getEndPosition(): TextEditorPosition {\r\n        return this.endPosition;\r\n    }\r\n}\r\n\r\n/**\r\n * Creates a new text editor range. Line numbers and columns start at 1.\r\n * @param startLineNumber The line number of the start of the range.\r\n * @param startColumn The column of the start of the range.\r\n * @param endLineNumber The line number of the end of the range.\r\n * @param endColumn The column of the end of the range.\r\n */\r\nexport function makeTextEditorRange(startLineNumber: number, startColumn: number, endLineNumber: number, endColumn: number): TextEditorRange {\r\n    return new TextEditorRange(new TextEditorPosition(startLineNumber, startColumn), new TextEditorPosition(endLineNumber, endColumn));\r\n}\r\n","import { TextEditorRange } from 'app/shared/monaco-editor/model/actions/adapter/text-editor-range.model';\r\n\r\nexport enum TextEditorCompletionItemKind {\r\n    /**\r\n     * Shows a generic icon for the completion item.\r\n     */\r\n    Default,\r\n    /**\r\n     * Shows a user icon for the completion item.\r\n     */\r\n    User,\r\n}\r\n\r\n/**\r\n * Represents a completion item in a text editor.\r\n * Completion items are used to provide suggestions for the user to complete their input.\r\n */\r\nexport class TextEditorCompletionItem {\r\n    /**\r\n     * Creates a new text editor completion item.\r\n     * @param label The label of the completion item, i.e., the text shown in the completion list.\r\n     * @param detailText An optional detail text to display alongside the label.\r\n     * @param insertText The text to insert into the editor when the completion item is selected.\r\n     * @param kind The kind of the completion item, which determines the icon shown in the completion list.\r\n     * @param range The range in the editor where the completion item's text should be inserted.\r\n     */\r\n    constructor(\r\n        private readonly label: string,\r\n        private readonly detailText: string | undefined,\r\n        private readonly insertText: string,\r\n        private readonly kind: TextEditorCompletionItemKind,\r\n        private readonly range: TextEditorRange,\r\n    ) {}\r\n\r\n    getLabel(): string {\r\n        return this.label;\r\n    }\r\n\r\n    getDetailText(): string | undefined {\r\n        return this.detailText;\r\n    }\r\n\r\n    getInsertText(): string {\r\n        return this.insertText;\r\n    }\r\n\r\n    getKind(): TextEditorCompletionItemKind {\r\n        return this.kind;\r\n    }\r\n\r\n    getRange(): TextEditorRange {\r\n        return this.range;\r\n    }\r\n}\r\n","export enum TextEditorKeyCode {\r\n    KeyB,\r\n    KeyI,\r\n    KeyU,\r\n}\r\n\r\nexport enum TextEditorKeyModifier {\r\n    /**\r\n     * The Ctrl key on Windows and Linux, and the Cmd key on macOS.\r\n     */\r\n    CtrlCmd,\r\n}\r\n\r\nexport class TextEditorKeybinding {\r\n    constructor(\r\n        private readonly key: TextEditorKeyCode,\r\n        private readonly modifier: TextEditorKeyModifier,\r\n    ) {}\r\n\r\n    getKey(): TextEditorKeyCode {\r\n        return this.key;\r\n    }\r\n\r\n    getModifier(): TextEditorKeyModifier {\r\n        return this.modifier;\r\n    }\r\n}\r\n","import { TextEditor } from 'app/shared/monaco-editor/model/actions/adapter/text-editor.interface';\r\nimport { TextEditorAction } from 'app/shared/monaco-editor/model/actions/text-editor-action.model';\r\nimport { Disposable, EditorPosition, MonacoEditorTextModel, makeEditorRange } from 'app/shared/monaco-editor/model/actions/monaco-editor.util';\r\nimport * as monaco from 'monaco-editor';\r\nimport { TextEditorCompleter } from 'app/shared/monaco-editor/model/actions/adapter/text-editor-completer.model';\r\nimport { TextEditorRange, makeTextEditorRange } from 'app/shared/monaco-editor/model/actions/adapter/text-editor-range.model';\r\nimport { TextEditorPosition } from 'app/shared/monaco-editor/model/actions/adapter/text-editor-position.model';\r\nimport { TextEditorCompletionItemKind } from 'app/shared/monaco-editor/model/actions/adapter/text-editor-completion-item.model';\r\nimport { TextEditorKeyCode, TextEditorKeyModifier, TextEditorKeybinding } from './text-editor-keybinding.model';\r\n\r\nexport class MonacoTextEditorAdapter implements TextEditor {\r\n    private static readonly KEY_CODE_MAP = new Map<TextEditorKeyCode, number>([\r\n        [TextEditorKeyCode.KeyB, monaco.KeyCode.KeyB],\r\n        [TextEditorKeyCode.KeyI, monaco.KeyCode.KeyI],\r\n        [TextEditorKeyCode.KeyU, monaco.KeyCode.KeyU],\r\n    ]);\r\n\r\n    private static readonly MODIFIER_MAP = new Map<TextEditorKeyModifier, number>([[TextEditorKeyModifier.CtrlCmd, monaco.KeyMod.CtrlCmd]]);\r\n\r\n    constructor(private editor: monaco.editor.IStandaloneCodeEditor) {}\r\n\r\n    addAction(action: TextEditorAction): Disposable {\r\n        const actionDescriptor: monaco.editor.IActionDescriptor = {\r\n            id: action.id,\r\n            label: action.label,\r\n            keybindings: action.keybindings?.map(this.toMonacoKeybinding),\r\n            run: (_, args) => {\r\n                action.run(this, args);\r\n            },\r\n        };\r\n        return this.editor.addAction(actionDescriptor);\r\n    }\r\n\r\n    executeAction(action: TextEditorAction, args?: object): void {\r\n        this.editor.trigger('TextEditorAdapter::executeAction', action.id, args);\r\n    }\r\n\r\n    /**\r\n     * Adds a completer to the current model of the editor. This is useful to provide suggestions to the user for a specific editor, which is not supported by the Monaco API.\r\n     * @param completer The completer to add to the editor's current model.\r\n     */\r\n    addCompleter(completer: TextEditorCompleter<unknown>): Disposable {\r\n        const model = this.editor.getModel();\r\n        if (!model) {\r\n            throw new Error(`A model must be attached to the editor to register a completer.`);\r\n        }\r\n        const triggerCharacter = completer.triggerCharacter;\r\n        if (triggerCharacter !== undefined && triggerCharacter.length !== 1) {\r\n            throw new Error(`The trigger character must be a single character.`);\r\n        }\r\n        const languageId = model.getLanguageId();\r\n        const modelId = model.id;\r\n\r\n        // We have to subtract an offset of 1 from the start column to include the trigger character in the range that will be replaced.\r\n        const triggerCharacterOffset = triggerCharacter ? 1 : 0;\r\n        return monaco.languages.registerCompletionItemProvider(languageId, {\r\n            // We only want to trigger the completion provider if the trigger character is typed. However, we also allow numbers to trigger the completion, as they would not normally trigger it.\r\n            triggerCharacters: triggerCharacter ? [triggerCharacter, ...'0123456789'] : undefined,\r\n            provideCompletionItems: async (model: MonacoEditorTextModel, position: EditorPosition): Promise<monaco.languages.CompletionList | undefined> => {\r\n                if (model.id !== modelId) {\r\n                    return undefined;\r\n                }\r\n                const sequenceUntilPosition = this.findTypedSequenceUntilPosition(model, position, triggerCharacter);\r\n                if (!sequenceUntilPosition) {\r\n                    return undefined;\r\n                }\r\n                const range = {\r\n                    startLineNumber: position.lineNumber,\r\n                    startColumn: sequenceUntilPosition.startColumn - triggerCharacterOffset,\r\n                    endLineNumber: position.lineNumber,\r\n                    endColumn: sequenceUntilPosition.endColumn,\r\n                };\r\n                const beforeWord = model.getValueInRange({\r\n                    startLineNumber: position.lineNumber,\r\n                    startColumn: sequenceUntilPosition.startColumn - triggerCharacterOffset,\r\n                    endLineNumber: position.lineNumber,\r\n                    endColumn: sequenceUntilPosition.startColumn,\r\n                });\r\n\r\n                // We only want suggestions if the trigger character is at the beginning of the word.\r\n                if (triggerCharacter && sequenceUntilPosition.word !== triggerCharacter && beforeWord !== triggerCharacter) {\r\n                    return undefined;\r\n                }\r\n                const items = (await completer.searchItems(sequenceUntilPosition.word)).map((item) => completer.mapCompletionItem(item, this.fromMonacoRange(range)));\r\n\r\n                return {\r\n                    suggestions: items.map((item) => {\r\n                        return {\r\n                            label: item.getLabel(),\r\n                            kind: this.toMonacoCompletionKind(item.getKind()),\r\n                            insertText: item.getInsertText(),\r\n                            range: this.toMonacoRange(item.getRange()),\r\n                            detail: item.getDetailText(),\r\n                        };\r\n                    }),\r\n                    incomplete: completer.incomplete,\r\n                };\r\n            },\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Finds the sequence of characters that was typed between the trigger character and the current position. If no trigger character is provided, we assume the sequence starts at the beginning of the word (default Monaco behavior).\r\n     * @param model The model to find the typed sequence in.\r\n     * @param position The position until which to find the typed sequence.\r\n     * @param triggerCharacter The character that triggers the sequence. If not provided, the sequence is assumed to start at the beginning of the word.\r\n     * @param lengthLimit The maximum length of the sequence to find. Defaults to 25.\r\n     */\r\n    private findTypedSequenceUntilPosition(\r\n        model: monaco.editor.ITextModel,\r\n        position: monaco.IPosition,\r\n        triggerCharacter?: string,\r\n        lengthLimit = 25,\r\n    ): monaco.editor.IWordAtPosition | undefined {\r\n        // Find the sequence of characters that was typed between the trigger character and the current position. If no trigger character is provided, we assume the sequence starts at the beginning of the word.\r\n        if (!triggerCharacter) {\r\n            return model.getWordUntilPosition(position);\r\n        }\r\n        const scanColumn = Math.max(1, position.column - lengthLimit);\r\n        const scanRange = makeEditorRange(position.lineNumber, scanColumn, position.lineNumber, position.column);\r\n        const text = model.getValueInRange(scanRange);\r\n        const triggerIndex = text.lastIndexOf(triggerCharacter);\r\n        if (triggerIndex === -1) {\r\n            return undefined;\r\n        }\r\n        // The word not including the trigger character.\r\n        return {\r\n            word: text.slice(triggerIndex + 1),\r\n            startColumn: scanRange.startColumn + triggerIndex + 1,\r\n            endColumn: position.column,\r\n        };\r\n    }\r\n\r\n    layout(): void {\r\n        this.editor.layout();\r\n    }\r\n\r\n    focus(): void {\r\n        this.editor.focus();\r\n    }\r\n\r\n    replaceTextAtRange(range: TextEditorRange, text: string): void {\r\n        this.editor.executeEdits('MonacoTextEditorAdapter::replaceTextAtRange', [\r\n            {\r\n                range: this.toMonacoRange(range),\r\n                text,\r\n            },\r\n        ]);\r\n    }\r\n\r\n    getDomNode(): HTMLElement | undefined {\r\n        return this.editor.getDomNode() ?? undefined;\r\n    }\r\n\r\n    triggerCompletion(): void {\r\n        this.editor.trigger('MonacoTextEditorAdapter::triggerCompletion', 'editor.action.triggerSuggest', {});\r\n    }\r\n\r\n    getTextAtRange(range: TextEditorRange): string {\r\n        return this.editor.getModel()?.getValueInRange(this.toMonacoRange(range), monaco.editor.EndOfLinePreference.LF) ?? '';\r\n    }\r\n\r\n    getLineText(lineNumber: number): string {\r\n        return this.editor.getModel()?.getLineContent(lineNumber) ?? '';\r\n    }\r\n\r\n    getNumberOfLines(): number {\r\n        return this.editor.getModel()?.getLineCount() ?? 0;\r\n    }\r\n\r\n    getEndPosition(): TextEditorPosition {\r\n        return this.fromMonacoPosition(this.editor.getModel()?.getFullModelRange().getEndPosition() ?? { lineNumber: 1, column: 1 });\r\n    }\r\n\r\n    getPosition(): TextEditorPosition {\r\n        const position = this.editor.getPosition() ?? { column: 1, lineNumber: 1 };\r\n        return this.fromMonacoPosition(position);\r\n    }\r\n\r\n    setPosition(position: TextEditorPosition): void {\r\n        this.editor.setPosition(this.toMonacoPosition(position));\r\n    }\r\n\r\n    getSelection(): TextEditorRange {\r\n        const selection = this.editor.getSelection() ?? { startColumn: 1, startLineNumber: 1, endColumn: 1, endLineNumber: 1 };\r\n        return this.fromMonacoRange(selection);\r\n    }\r\n\r\n    setSelection(selection: TextEditorRange): void {\r\n        this.editor.setSelection(this.toMonacoRange(selection));\r\n    }\r\n\r\n    revealRange(range: TextEditorRange): void {\r\n        this.editor.revealRangeInCenter(this.toMonacoRange(range));\r\n    }\r\n\r\n    addPasteListener(callback: (insertedText: string) => void | Promise<void>): Disposable {\r\n        return this.editor.onDidPaste((pasteEvent) => {\r\n            callback(this.getTextAtRange(this.fromMonacoRange(pasteEvent.range)));\r\n        });\r\n    }\r\n\r\n    private toMonacoPosition(position: TextEditorPosition): monaco.IPosition {\r\n        return new monaco.Position(position.getLineNumber(), position.getColumn());\r\n    }\r\n\r\n    private fromMonacoPosition(position: monaco.IPosition): TextEditorPosition {\r\n        return new TextEditorPosition(position.lineNumber, position.column);\r\n    }\r\n\r\n    private toMonacoRange(range: TextEditorRange): monaco.IRange {\r\n        const startPosition = range.getStartPosition();\r\n        const endPosition = range.getEndPosition();\r\n        return new monaco.Range(startPosition.getLineNumber(), startPosition.getColumn(), endPosition.getLineNumber(), endPosition.getColumn());\r\n    }\r\n\r\n    private fromMonacoRange(range: monaco.IRange): TextEditorRange {\r\n        return makeTextEditorRange(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\r\n    }\r\n\r\n    private toMonacoCompletionKind(kind: TextEditorCompletionItemKind) {\r\n        switch (kind) {\r\n            case TextEditorCompletionItemKind.User:\r\n                return monaco.languages.CompletionItemKind.User;\r\n            default:\r\n                return monaco.languages.CompletionItemKind.Constant;\r\n        }\r\n    }\r\n\r\n    private toMonacoKeybinding(keybinding: TextEditorKeybinding): number {\r\n        const keyCode = MonacoTextEditorAdapter.KEY_CODE_MAP.get(keybinding.getKey()) ?? monaco.KeyCode.Unknown;\r\n        const modifier = MonacoTextEditorAdapter.MODIFIER_MAP.get(keybinding.getModifier()) ?? 0;\r\n        return keyCode | modifier;\r\n    }\r\n\r\n    getFullText(): string {\r\n        const firstPosition = new TextEditorPosition(1, 1);\r\n        const lastPosition = this.getEndPosition();\r\n        const range = new TextEditorRange(firstPosition, lastPosition);\r\n        return this.getTextAtRange(range);\r\n    }\r\n}\r\n","import { Disposable } from 'app/shared/monaco-editor/model/actions/monaco-editor.util';\r\nimport * as monaco from 'monaco-editor';\r\n\r\n/**\r\n * Abstract class representing an element in the Monaco editor, e.g. a line widget.\r\n */\r\nexport abstract class MonacoCodeEditorElement implements Disposable {\r\n    static readonly CSS_HIDDEN_CLASS = 'monaco-hidden-element';\r\n\r\n    private id: string | undefined;\r\n    private visible = true;\r\n    protected readonly editor: monaco.editor.IStandaloneCodeEditor;\r\n\r\n    /**\r\n     * @param editor The editor to render this element in.\r\n     * @param id The id of this element if available, or undefined if not. If the ID is not available at construction time, it must be set using {@link setId}.\r\n     */\r\n    protected constructor(editor: monaco.editor.IStandaloneCodeEditor, id: string | undefined) {\r\n        this.editor = editor;\r\n        this.id = id;\r\n    }\r\n\r\n    /**\r\n     * Returns the id of this element. Since Monaco expects the element to always be available, this method throws an error if it has not been set yet.\r\n     */\r\n    getId(): string {\r\n        if (this.id === undefined) {\r\n            throw new Error('This editor element has no ID.');\r\n        }\r\n        return this.id;\r\n    }\r\n\r\n    setId(id: string): void {\r\n        this.id = id;\r\n    }\r\n\r\n    setVisible(visible: boolean): void {\r\n        this.visible = visible;\r\n    }\r\n\r\n    isVisible(): boolean {\r\n        return this.visible;\r\n    }\r\n\r\n    /**\r\n     * Override this method to set up listeners that react to changes in the editor.\r\n     */\r\n    protected setupListeners(): void {}\r\n\r\n    /**\r\n     * Adds this element to the editor.\r\n     */\r\n    abstract addToEditor(): void;\r\n\r\n    /**\r\n     * Updates this element in the editor, e.g. by removing and adding it again.\r\n     * Override this method to specify custom behavior for updating elements.\r\n     */\r\n    updateInEditor(): void {\r\n        this.removeFromEditor();\r\n        this.addToEditor();\r\n    }\r\n\r\n    /**\r\n     * Removes this element from the editor, but does not destroy it.\r\n     * The element can be added to the editor again using {@link addToEditor}.\r\n     */\r\n    abstract removeFromEditor(): void;\r\n\r\n    /**\r\n     * Removes this element from the editor. Override this to dispose of any additional listeners, subscribers etc.\r\n     */\r\n    dispose(): void {\r\n        this.removeFromEditor();\r\n    }\r\n\r\n    /**\r\n     * Updates html elements to be visible  using a CSS class. This assumes that the visibility is controlled only by the CSS class of the provided elements.\r\n     * @param visible Whether the elements should be made visible.\r\n     * @param htmlElements The elements whose visibility should be updated using the {@link MonacoCodeEditorElement.CSS_HIDDEN_CLASS} CSS class.\r\n     */\r\n    setHtmlElementsVisible(visible: boolean, ...htmlElements: HTMLElement[]): void {\r\n        if (visible) {\r\n            htmlElements.forEach((element) => element.classList.remove(MonacoCodeEditorElement.CSS_HIDDEN_CLASS));\r\n        } else {\r\n            htmlElements.forEach((element) => element.classList.add(MonacoCodeEditorElement.CSS_HIDDEN_CLASS));\r\n        }\r\n    }\r\n}\r\n","import { MonacoCodeEditorElement } from 'app/shared/monaco-editor/model/monaco-code-editor-element.model';\r\nimport { makeEditorRange } from 'app/shared/monaco-editor/model/actions/monaco-editor.util';\r\nimport * as monaco from 'monaco-editor';\r\n\r\n/**\r\n * Class representing a glyph margin widget in the Monaco editor.\r\n * Glyph margin widgets refer to one line and can contain arbitrary DOM nodes.\r\n */\r\nexport class MonacoEditorGlyphMarginWidget extends MonacoCodeEditorElement implements monaco.editor.IGlyphMarginWidget {\r\n    private readonly domNode: HTMLElement;\r\n    private lineNumber: number;\r\n    private readonly lane: monaco.editor.GlyphMarginLane;\r\n\r\n    /**\r\n     * @param editor The editor to render this widget in.\r\n     * @param id The id of this widget.\r\n     * @param domNode The DOM node to render in the glyph margin.\r\n     * @param lineNumber The line to render this widget in.\r\n     * @param lane The lane (left, center, or right) to render the widget in.\r\n     */\r\n    constructor(editor: monaco.editor.IStandaloneCodeEditor, id: string, domNode: HTMLElement, lineNumber: number, lane: monaco.editor.GlyphMarginLane) {\r\n        super(editor, id);\r\n        this.domNode = domNode;\r\n        this.lineNumber = lineNumber;\r\n        this.lane = lane;\r\n    }\r\n\r\n    getDomNode(): HTMLElement {\r\n        return this.domNode;\r\n    }\r\n\r\n    getPosition(): monaco.editor.IGlyphMarginWidgetPosition {\r\n        return {\r\n            lane: this.lane,\r\n            zIndex: 10,\r\n            range: makeEditorRange(this.lineNumber, 0, this.lineNumber, 0),\r\n        };\r\n    }\r\n\r\n    getLineNumber(): number {\r\n        return this.lineNumber;\r\n    }\r\n\r\n    setLineNumber(lineNumber: number): void {\r\n        this.lineNumber = lineNumber;\r\n    }\r\n\r\n    addToEditor(): void {\r\n        this.editor.addGlyphMarginWidget(this);\r\n    }\r\n    removeFromEditor(): void {\r\n        this.editor.removeGlyphMarginWidget(this);\r\n    }\r\n}\r\n","import { MonacoCodeEditorElement } from 'app/shared/monaco-editor/model/monaco-code-editor-element.model';\r\nimport { MonacoEditorGlyphMarginWidget } from 'app/shared/monaco-editor/model/monaco-editor-glyph-margin-widget.model';\r\nimport { Disposable, makeEditorRange } from 'app/shared/monaco-editor/model/actions/monaco-editor.util';\r\nimport * as monaco from 'monaco-editor';\r\n\r\nexport enum MonacoEditorBuildAnnotationType {\r\n    WARNING = 'warning',\r\n    ERROR = 'error',\r\n}\r\n\r\n/**\r\n * Class representing a build annotation (error / warning with description) rendered on the margin of the Monaco editor.\r\n * They remain fixed to their line even when the user makes edits.\r\n * Annotations consist of a {@link MonacoEditorGlyphMarginWidget} to render an icon in the glyph margin and a separate\r\n * decoration (managed by the {@link decorationsCollection}) to handle highlighting and the hover message.\r\n */\r\nexport class MonacoEditorBuildAnnotation extends MonacoCodeEditorElement {\r\n    private glyphMarginWidget: MonacoEditorGlyphMarginWidget;\r\n    private decorationsCollection: monaco.editor.IEditorDecorationsCollection;\r\n    private outdated: boolean;\r\n    private hoverMessage: string;\r\n    private type: MonacoEditorBuildAnnotationType;\r\n    private updateListener: Disposable;\r\n\r\n    /**\r\n     * @param editor The editor to render this annotation in.\r\n     * @param id The id of this annotation.\r\n     * @param lineNumber The line this annotation refers to.\r\n     * @param hoverMessage The message to display when the user hovers over this annotation. Can have markdown elements, e.g. `**bold**`.\r\n     * @param type The type of this annotation: error or warning.\r\n     * @param outdated Whether this annotation is outdated and should be grayed out. Defaults to false.\r\n     */\r\n    constructor(editor: monaco.editor.IStandaloneCodeEditor, id: string, lineNumber: number, hoverMessage: string, type: MonacoEditorBuildAnnotationType, outdated = false) {\r\n        super(editor, id);\r\n        this.decorationsCollection = this.editor.createDecorationsCollection([]);\r\n        this.hoverMessage = hoverMessage;\r\n        this.type = type;\r\n        this.outdated = outdated;\r\n        const glyphMarginDomNode = document.createElement('div');\r\n        glyphMarginDomNode.id = `monaco-editor-glyph-margin-widget-${id}`;\r\n        glyphMarginDomNode.className = `codicon codicon-${this.type}`;\r\n        this.glyphMarginWidget = new MonacoEditorGlyphMarginWidget(editor, id, glyphMarginDomNode, lineNumber, monaco.editor.GlyphMarginLane.Center);\r\n        this.setupListeners();\r\n    }\r\n\r\n    /**\r\n     * Returns an object (a delta decoration) detailing the position and styling of the annotation.\r\n     * @private\r\n     */\r\n    private getAssociatedDeltaDecoration(): monaco.editor.IModelDeltaDecoration {\r\n        const marginClassName = this.outdated ? 'monaco-annotation-outdated' : `monaco-annotation-${this.type}`;\r\n        const lineNumber = this.getLineNumber();\r\n        return {\r\n            range: makeEditorRange(lineNumber, 0, lineNumber, 0),\r\n            options: {\r\n                marginClassName,\r\n                isWholeLine: true,\r\n                stickiness: monaco.editor.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\r\n                lineNumberHoverMessage: { value: this.hoverMessage },\r\n                glyphMarginHoverMessage: { value: this.hoverMessage },\r\n            },\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Updates the style of this annotation and its linked glyph margin widget according to whether the annotation is outdated.\r\n     * @param outdated Whether this annotation is outdated and should be grayed out.\r\n     */\r\n    setOutdatedAndUpdate(outdated: boolean) {\r\n        this.outdated = outdated;\r\n        const classList = this.getGlyphMarginDomNode().classList;\r\n        if (outdated) {\r\n            classList.remove(`monaco-glyph-${this.type}`);\r\n            classList.add(`monaco-glyph-outdated`);\r\n        } else {\r\n            classList.remove(`monaco-glyph-outdated`);\r\n            classList.add(`monaco-glyph-${this.type}`);\r\n        }\r\n        this.updateInEditor();\r\n    }\r\n\r\n    isOutdated(): boolean {\r\n        return this.outdated;\r\n    }\r\n\r\n    getLineNumber(): number {\r\n        return this.glyphMarginWidget.getLineNumber();\r\n    }\r\n\r\n    getGlyphMarginDomNode(): HTMLElement {\r\n        return this.glyphMarginWidget.getDomNode();\r\n    }\r\n\r\n    protected setupListeners() {\r\n        this.updateListener = this.editor.onDidChangeModelContent(() => {\r\n            // The displayed annotations may not apply anymore if the files have changed. For convenience, we still display them for the user's reference.\r\n            this.setOutdatedAndUpdate(true);\r\n        });\r\n    }\r\n\r\n    addToEditor(): void {\r\n        const inRange = this.getLineNumber() <= (this.editor.getModel()?.getLineCount() ?? 0);\r\n        this.setVisible(inRange);\r\n        if (inRange) {\r\n            this.glyphMarginWidget.addToEditor();\r\n            // Appending to this collection immediately renders the associated decoration.\r\n            this.decorationsCollection.append([this.getAssociatedDeltaDecoration()]);\r\n        }\r\n    }\r\n    removeFromEditor(): void {\r\n        this.glyphMarginWidget.removeFromEditor();\r\n        // Clearing the collection immediately removes all decorations from the editor.\r\n        this.decorationsCollection.clear();\r\n    }\r\n\r\n    dispose() {\r\n        super.dispose();\r\n        this.glyphMarginWidget.dispose();\r\n        this.updateListener.dispose();\r\n    }\r\n}\r\n","import { MonacoCodeEditorElement } from 'app/shared/monaco-editor/model/monaco-code-editor-element.model';\r\nimport * as monaco from 'monaco-editor';\r\n\r\n/**\r\n * Class representing a view zone (i.e., vertical space after a certain line) in the Monaco editor.\r\n */\r\nexport class MonacoEditorViewZone extends MonacoCodeEditorElement implements monaco.editor.IViewZone {\r\n    private linkedContentDomNode: HTMLElement;\r\n    private resizeObserver: ResizeObserver;\r\n\r\n    afterLineNumber: number;\r\n    heightInPx: number | undefined;\r\n\r\n    /**\r\n     * From IViewZone. The domNode of a view zone cannot be interacted with. Therefore, we instantiate it as an empty div.\r\n     */\r\n    domNode: HTMLElement = document.createElement('div');\r\n\r\n    /**\r\n     * @param editor The editor to render this view zone in.\r\n     * @param afterLineNumber The line after which to insert the view zone.\r\n     * @param linkedContentDomNode The content to which this view zone should be linked. When the linked content\r\n     * resizes, so does this view zone. Note that the content must be rendered elsewhere, e.g. in an {@link MonacoEditorOverlayWidget}.\r\n     */\r\n    constructor(editor: monaco.editor.IStandaloneCodeEditor, afterLineNumber: number, linkedContentDomNode: HTMLElement) {\r\n        // id is unavailable until the view zone is added to the editor.\r\n        super(editor, undefined);\r\n        this.afterLineNumber = afterLineNumber;\r\n        this.linkedContentDomNode = linkedContentDomNode;\r\n        this.heightInPx = this.linkedContentDomNode.offsetHeight;\r\n    }\r\n\r\n    addToEditor(): void {\r\n        this.editor.changeViewZones((accessor) => {\r\n            this.setId(accessor.addZone(this));\r\n            this.adjustHeightAndLayout();\r\n        });\r\n        this.resizeObserver = new ResizeObserver(() => {\r\n            this.adjustHeightAndLayout();\r\n        });\r\n        this.resizeObserver.observe(this.linkedContentDomNode);\r\n    }\r\n\r\n    private adjustHeightAndLayout(): void {\r\n        this.editor.changeViewZones((accessor) => {\r\n            this.heightInPx = this.linkedContentDomNode.offsetHeight;\r\n            accessor.layoutZone(this.getId());\r\n        });\r\n    }\r\n\r\n    removeFromEditor(): void {\r\n        this.editor.changeViewZones((accessor) => {\r\n            accessor.removeZone(this.getId());\r\n        });\r\n        this.resizeObserver.disconnect();\r\n    }\r\n\r\n    /**\r\n     * From IViewZone. Called automatically when the position of this view zone in the editor is computed.\r\n     *\r\n     * @param top The vertical offset (in pixels) of this view zone within the editor.\r\n     */\r\n    onDomNodeTop(top: number): void {\r\n        this.linkedContentDomNode.style.top = top + 'px';\r\n    }\r\n}\r\n","import { MonacoCodeEditorElement } from 'app/shared/monaco-editor/model/monaco-code-editor-element.model';\r\nimport * as monaco from 'monaco-editor';\r\n\r\n// null is used by the Monaco api\r\ntype OverlayWidgetPosition = monaco.editor.IOverlayWidgetPosition | null;\r\n\r\n/**\r\n * Class representing an overlay widget floating above the editor content.\r\n */\r\nexport class MonacoEditorOverlayWidget extends MonacoCodeEditorElement implements monaco.editor.IOverlayWidget {\r\n    private readonly domNode: HTMLElement;\r\n    private readonly position: OverlayWidgetPosition;\r\n\r\n    /**\r\n     * @param editor The editor to render the widget in.\r\n     * @param id A unique identifier for the widget.\r\n     * @param domNode The content to render. The user will be able to interact with the widget.\r\n     * @param position The position of the widget or null if the element is positioned by another element (e.g. a view zone).\r\n     */\r\n    constructor(editor: monaco.editor.IStandaloneCodeEditor, id: string, domNode: HTMLElement, position: OverlayWidgetPosition) {\r\n        super(editor, id);\r\n        this.domNode = domNode;\r\n        // Ensure that the widget reaches its maximum width.\r\n        this.domNode.style.width = '100%';\r\n        this.position = position;\r\n    }\r\n\r\n    setVisible(visible: boolean) {\r\n        super.setVisible(visible);\r\n        // Ensure that the displayed content is visible if and only if this element is visble.\r\n        this.setHtmlElementsVisible(visible, this.domNode);\r\n    }\r\n\r\n    addToEditor(): void {\r\n        this.editor.addOverlayWidget(this);\r\n        this.setVisible(true);\r\n    }\r\n    removeFromEditor(): void {\r\n        this.editor.removeOverlayWidget(this);\r\n    }\r\n\r\n    getDomNode(): HTMLElement {\r\n        return this.domNode;\r\n    }\r\n    getPosition(): OverlayWidgetPosition {\r\n        return this.position;\r\n    }\r\n}\r\n","import { MonacoCodeEditorElement } from 'app/shared/monaco-editor/model/monaco-code-editor-element.model';\r\nimport { MonacoEditorViewZone } from 'app/shared/monaco-editor/model/monaco-editor-view-zone.model';\r\nimport { MonacoEditorOverlayWidget } from 'app/shared/monaco-editor/model/monaco-editor-overlay-widget.model';\r\nimport * as monaco from 'monaco-editor';\r\n\r\n/**\r\n * Class representing a line widget.\r\n * These widgets consist of two elements:\r\n *   - a {@link MonacoEditorViewZone} that creates vertical space after the line in question.\r\n *   - a {@link MonacoEditorOverlayWidget} that contains the actual content of the widget.\r\n * The size of these two components is linked together.\r\n */\r\nexport class MonacoEditorLineWidget extends MonacoCodeEditorElement {\r\n    private viewZone: MonacoEditorViewZone;\r\n    private overlayWidget: MonacoEditorOverlayWidget;\r\n\r\n    /**\r\n     * @param editor The editor to render this widget in.\r\n     * @param overlayWidgetId The ID to use for the overlay widget.\r\n     * @param contentDomNode The content to render.\r\n     * @param afterLineNumber The line after which this line widget should be rendered.\r\n     */\r\n    constructor(editor: monaco.editor.IStandaloneCodeEditor, overlayWidgetId: string, contentDomNode: HTMLElement, afterLineNumber: number) {\r\n        super(editor, overlayWidgetId);\r\n        this.overlayWidget = new MonacoEditorOverlayWidget(\r\n            editor,\r\n            overlayWidgetId,\r\n            contentDomNode,\r\n            null, // Position is managed by viewZone.\r\n        );\r\n        this.viewZone = new MonacoEditorViewZone(editor, afterLineNumber, contentDomNode);\r\n    }\r\n\r\n    addToEditor() {\r\n        this.overlayWidget.addToEditor();\r\n        this.viewZone.addToEditor();\r\n    }\r\n\r\n    removeFromEditor() {\r\n        this.overlayWidget.removeFromEditor();\r\n        this.viewZone.removeFromEditor();\r\n    }\r\n\r\n    dispose() {\r\n        super.dispose();\r\n        this.overlayWidget.dispose();\r\n        this.viewZone.dispose();\r\n    }\r\n}\r\n","import { MonacoCodeEditorElement } from 'app/shared/monaco-editor/model/monaco-code-editor-element.model';\r\nimport { makeEditorRange } from 'app/shared/monaco-editor/model/actions/monaco-editor.util';\r\nimport * as monaco from 'monaco-editor';\r\n\r\n/**\r\n * Class representing a highlighted range of lines in the Monaco editor.\r\n * The highlighted lines can have separate styles for the margin and the line.\r\n */\r\nexport class MonacoEditorLineHighlight extends MonacoCodeEditorElement {\r\n    private range: monaco.IRange;\r\n    private className?: string;\r\n    private marginClassName?: string;\r\n    private decorationsCollection: monaco.editor.IEditorDecorationsCollection;\r\n\r\n    /**\r\n     * @param editor The editor to highlight lines in.\r\n     * @param id The ID of this element.\r\n     * @param startLine The number of the first line to highlight.\r\n     * @param endLine The number of the last line to highlight.\r\n     * @param className The class name to use for highlighting the line. If left out, no class will be applied.\r\n     * @param marginClassName The class name to use for highlighting the margin. If left out, no class will be applied.\r\n     */\r\n    constructor(editor: monaco.editor.IStandaloneCodeEditor, id: string, startLine: number, endLine: number, className?: string, marginClassName?: string) {\r\n        super(editor, id);\r\n        this.range = makeEditorRange(startLine, 0, endLine, 0);\r\n        this.className = className;\r\n        this.marginClassName = marginClassName;\r\n        this.decorationsCollection = editor.createDecorationsCollection([]);\r\n    }\r\n\r\n    private getAssociatedDeltaDecoration(): monaco.editor.IModelDeltaDecoration {\r\n        return {\r\n            range: this.range,\r\n            options: {\r\n                marginClassName: this.marginClassName,\r\n                className: this.className,\r\n                isWholeLine: true,\r\n                stickiness: monaco.editor.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\r\n            },\r\n        };\r\n    }\r\n\r\n    addToEditor(): void {\r\n        this.decorationsCollection.append([this.getAssociatedDeltaDecoration()]);\r\n    }\r\n\r\n    removeFromEditor(): void {\r\n        this.decorationsCollection.clear();\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, ElementRef, OnDestroy, OnInit, Renderer2, ViewEncapsulation, effect, inject, input, output } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Annotation } from 'app/exercises/programming/shared/code-editor/monaco/code-editor-monaco.component';\r\nimport { MonacoTextEditorAdapter } from 'app/shared/monaco-editor/model/actions/adapter/monaco-text-editor.adapter';\r\nimport { Disposable, EditorPosition, EditorRange, MonacoEditorTextModel } from 'app/shared/monaco-editor/model/actions/monaco-editor.util';\r\nimport { TextEditorAction } from 'app/shared/monaco-editor/model/actions/text-editor-action.model';\r\nimport { MonacoEditorBuildAnnotation, MonacoEditorBuildAnnotationType } from 'app/shared/monaco-editor/model/monaco-editor-build-annotation.model';\r\nimport { MonacoEditorLineWidget } from 'app/shared/monaco-editor/model/monaco-editor-inline-widget.model';\r\nimport { MonacoEditorLineHighlight } from 'app/shared/monaco-editor/model/monaco-editor-line-highlight.model';\r\nimport { MonacoEditorOptionPreset } from 'app/shared/monaco-editor/model/monaco-editor-option-preset.model';\r\nimport { MonacoEditorService } from 'app/shared/monaco-editor/monaco-editor.service';\r\nimport { getOS } from 'app/shared/util/os-detector.util';\r\nimport Graphemer from 'graphemer';\r\n\r\nimport { EmojiConvertor } from 'emoji-js';\r\nimport * as monaco from 'monaco-editor';\r\nimport { MonacoEditorLineDecorationsHoverButton } from './model/monaco-editor-line-decorations-hover-button.model';\r\n\r\nexport const MAX_TAB_SIZE = 8;\r\n\r\n@Component({\r\n    selector: 'jhi-monaco-editor',\r\n    template: '',\r\n    styleUrls: ['monaco-editor.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class MonacoEditorComponent implements OnInit, OnDestroy {\r\n    /**\r\n     * The default width of the line decoration button in the editor. We use the ch unit to avoid fixed pixel sizes.\r\n     * @private\r\n     */\r\n    private static readonly DEFAULT_LINE_DECORATION_BUTTON_WIDTH = '2.3ch';\r\n    private static readonly SHRINK_TO_FIT_CLASS = 'monaco-shrink-to-fit';\r\n\r\n    private readonly _editor: monaco.editor.IStandaloneCodeEditor;\r\n    private readonly textEditorAdapter: MonacoTextEditorAdapter;\r\n    private readonly monacoEditorContainerElement: HTMLElement;\r\n    private readonly emojiConvertor = new EmojiConvertor();\r\n\r\n    /*\r\n     * Elements, models, and actions of the editor.\r\n     */\r\n    models: MonacoEditorTextModel[] = [];\r\n    lineWidgets: MonacoEditorLineWidget[] = [];\r\n    buildAnnotations: MonacoEditorBuildAnnotation[] = [];\r\n    lineHighlights: MonacoEditorLineHighlight[] = [];\r\n    actions: TextEditorAction[] = [];\r\n    lineDecorationsHoverButton?: MonacoEditorLineDecorationsHoverButton;\r\n\r\n    /*\r\n     * Inputs and outputs.\r\n     */\r\n    textChangedEmitDelay = input<number | undefined>();\r\n    shrinkToFit = input<boolean>(true);\r\n    stickyScroll = input<boolean>(false);\r\n    readOnly = input<boolean>(false);\r\n\r\n    textChanged = output<string>();\r\n    contentHeightChanged = output<number>();\r\n    onBlurEditor = output<void>();\r\n\r\n    /*\r\n     * Disposable listeners, subscriptions, and timeouts.\r\n     */\r\n    private contentHeightListener?: Disposable;\r\n    private textChangedListener?: Disposable;\r\n    private blurEditorWidgetListener?: Disposable;\r\n    private textChangedEmitTimeout?: NodeJS.Timeout;\r\n    private customBackspaceCommandId: string | undefined;\r\n\r\n    /*\r\n     * Injected services and elements.\r\n     */\r\n    private readonly renderer = inject(Renderer2);\r\n    private readonly translateService = inject(TranslateService);\r\n    private readonly elementRef = inject(ElementRef);\r\n    private readonly monacoEditorService = inject(MonacoEditorService);\r\n\r\n    constructor() {\r\n        /*\r\n         * The constructor injects the editor along with its container into the empty template of this component.\r\n         * This makes the editor available immediately (not just after ngOnInit), preventing errors when the methods\r\n         * of this component are called.\r\n         */\r\n        this.monacoEditorContainerElement = this.renderer.createElement('div');\r\n        this.renderer.addClass(this.monacoEditorContainerElement, 'monaco-editor-container');\r\n        this.renderer.addClass(this.monacoEditorContainerElement, MonacoEditorComponent.SHRINK_TO_FIT_CLASS);\r\n        this._editor = this.monacoEditorService.createStandaloneCodeEditor(this.monacoEditorContainerElement);\r\n        this.textEditorAdapter = new MonacoTextEditorAdapter(this._editor);\r\n        this.renderer.appendChild(this.elementRef.nativeElement, this.monacoEditorContainerElement);\r\n\r\n        this.emojiConvertor.replace_mode = 'unified';\r\n        this.emojiConvertor.allow_native = true;\r\n\r\n        effect(() => {\r\n            // TODO: The CSS class below allows the editor to shrink in the CodeEditorContainerComponent. We should eventually remove this class and handle the editor size differently in the code editor grid.\r\n            if (this.shrinkToFit()) {\r\n                this.renderer.addClass(this.monacoEditorContainerElement, MonacoEditorComponent.SHRINK_TO_FIT_CLASS);\r\n            } else {\r\n                this.renderer.removeClass(this.monacoEditorContainerElement, MonacoEditorComponent.SHRINK_TO_FIT_CLASS);\r\n            }\r\n        });\r\n\r\n        effect(() => {\r\n            this._editor.updateOptions({\r\n                stickyScroll: { enabled: this.stickyScroll() },\r\n                readOnly: this.readOnly(),\r\n            });\r\n        });\r\n    }\r\n\r\n    convertTextToEmoji(text: string): string {\r\n        const words = text.split(' ');\r\n        const convertedWords = words.map((word) => {\r\n            return word.startsWith(':') ? this.emojiConvertor.replace_emoticons(word) : word;\r\n        });\r\n\r\n        return convertedWords.join(' ');\r\n    }\r\n\r\n    public onDidChangeModelContent(listener: (event: monaco.editor.IModelContentChangedEvent) => void): monaco.IDisposable {\r\n        return this._editor.onDidChangeModelContent(listener);\r\n    }\r\n\r\n    public getModel() {\r\n        return this._editor.getModel();\r\n    }\r\n\r\n    public getLineContent(lineNumber: number): string {\r\n        const model = this._editor.getModel();\r\n        return model ? model.getLineContent(lineNumber) : '';\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        const resizeObserver = new ResizeObserver(() => {\r\n            this._editor.layout();\r\n        });\r\n        resizeObserver.observe(this.monacoEditorContainerElement);\r\n\r\n        this.textChangedListener = this._editor.onDidChangeModelContent(() => {\r\n            this.emitTextChangeEvent();\r\n        }, this);\r\n\r\n        this.contentHeightListener = this._editor.onDidContentSizeChange((event) => {\r\n            if (event.contentHeightChanged) {\r\n                this.contentHeightChanged.emit(event.contentHeight + this._editor.getOption(monaco.editor.EditorOption.lineHeight));\r\n            }\r\n        });\r\n\r\n        this.blurEditorWidgetListener = this._editor.onDidBlurEditorWidget(() => {\r\n            // On iOS, the editor does not lose focus when clicking outside of it. This listener ensures that the editor loses focus when the editor widget loses focus.\r\n            // See https://github.com/microsoft/monaco-editor/issues/307\r\n            if (getOS() === 'iOS' && document.activeElement && 'blur' in document.activeElement && typeof document.activeElement.blur === 'function') {\r\n                document.activeElement.blur();\r\n            }\r\n            this.onBlurEditor.emit();\r\n        });\r\n\r\n        this._editor.onDidFocusEditorText(() => {\r\n            this.registerCustomBackspaceAction(this._editor);\r\n        });\r\n\r\n        this.registerCustomBackspaceAction(this._editor);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.reset();\r\n        this._editor.dispose();\r\n        this.textChangedListener?.dispose();\r\n        this.contentHeightListener?.dispose();\r\n        this.blurEditorWidgetListener?.dispose();\r\n    }\r\n\r\n    private emitTextChangeEvent() {\r\n        const newValue = this.getText();\r\n        const delay = this.textChangedEmitDelay();\r\n        if (!delay) {\r\n            this.textChanged.emit(newValue);\r\n        } else {\r\n            if (this.textChangedEmitTimeout) {\r\n                clearTimeout(this.textChangedEmitTimeout);\r\n                this.textChangedEmitTimeout = undefined;\r\n            }\r\n            this.textChangedEmitTimeout = setTimeout(() => {\r\n                this.textChanged.emit(newValue);\r\n            }, delay);\r\n        }\r\n    }\r\n\r\n    getPosition(): EditorPosition {\r\n        return this._editor.getPosition() ?? { column: 0, lineNumber: 0 };\r\n    }\r\n\r\n    setPosition(position: EditorPosition) {\r\n        this._editor.setPosition(position);\r\n    }\r\n\r\n    getScrollTop(): number {\r\n        return this._editor.getScrollTop();\r\n    }\r\n\r\n    setScrollTop(scrollTop: number) {\r\n        this._editor.setScrollTop(scrollTop);\r\n    }\r\n\r\n    setSelection(range: EditorRange): void {\r\n        this._editor.setSelection(range);\r\n    }\r\n\r\n    getText(): string {\r\n        return this._editor.getValue();\r\n    }\r\n\r\n    getContentHeight(): number {\r\n        return this._editor.getContentHeight() + this._editor.getOption(monaco.editor.EditorOption.lineHeight);\r\n    }\r\n\r\n    isConvertedToEmoji(originalText: string, convertedText: string): boolean {\r\n        return originalText !== convertedText;\r\n    }\r\n\r\n    setText(text: string): void {\r\n        const convertedText = this.convertTextToEmoji(text);\r\n        if (this.isConvertedToEmoji(text, convertedText)) {\r\n            this._editor.setValue(convertedText);\r\n            this.setPosition({ column: this.getPosition().column + convertedText.length + text.length, lineNumber: this.getPosition().lineNumber });\r\n        }\r\n        if (this.getText() !== convertedText) {\r\n            this._editor.setValue(convertedText);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Signals to the editor that the specified text was typed.\r\n     * @param text The text to type.\r\n     */\r\n    triggerKeySequence(text: string): void {\r\n        this._editor.trigger('MonacoEditorComponent::triggerKeySequence', 'type', { text });\r\n    }\r\n\r\n    focus(): void {\r\n        this._editor.focus();\r\n    }\r\n\r\n    getNumberOfLines(): number {\r\n        return this._editor.getModel()?.getLineCount() ?? 0;\r\n    }\r\n\r\n    isReadOnly(): boolean {\r\n        return this._editor.getOption(monaco.editor.EditorOption.readOnly);\r\n    }\r\n\r\n    /**\r\n     * Switches to another model (representing files) in the editor and optionally sets its content.\r\n     * The editor's syntax highlighting will be set depending on the file extension.\r\n     * All elements currently rendered in the editor will be disposed.\r\n     * @param fileName The name of the file to switch to.\r\n     * @param newFileContent The content of the file (will be retrieved from the model if left out).\r\n     * @param languageId The language ID to use for syntax highlighting (will be inferred from the file extension if left out).\r\n     */\r\n    changeModel(fileName: string, newFileContent?: string, languageId?: string) {\r\n        const uri = monaco.Uri.parse(`inmemory://model/${this._editor.getId()}/${fileName}`);\r\n        const model = monaco.editor.getModel(uri) ?? monaco.editor.createModel(newFileContent ?? '', undefined, uri);\r\n\r\n        if (!this.models.includes(model)) {\r\n            this.models.push(model);\r\n        }\r\n        if (newFileContent !== undefined) {\r\n            model.setValue(newFileContent);\r\n        }\r\n\r\n        // Some elements remain when the model is changed - dispose of them.\r\n        this.disposeEditorElements();\r\n\r\n        monaco.editor.setModelLanguage(model, languageId !== undefined ? languageId : model.getLanguageId());\r\n        model.setEOL(monaco.editor.EndOfLineSequence.LF);\r\n        this._editor.setModel(model);\r\n    }\r\n\r\n    /**\r\n     * Updates the indentation size of the editor in the current model.\r\n     * @param indentSize The size of the indentation in spaces.\r\n     */\r\n    updateModelIndentationSize(indentSize: number): void {\r\n        this._editor.getModel()?.updateOptions({ indentSize });\r\n    }\r\n\r\n    disposeModels() {\r\n        this._editor.setModel(null);\r\n        this.models.forEach((m) => m.dispose());\r\n        this.models = [];\r\n    }\r\n\r\n    reset(): void {\r\n        this.disposeEditorElements();\r\n        this.disposeModels();\r\n    }\r\n\r\n    disposeEditorElements(): void {\r\n        this.disposeAnnotations();\r\n        this.disposeWidgets();\r\n        this.disposeLineHighlights();\r\n        this.disposeActions();\r\n        this.lineDecorationsHoverButton?.dispose();\r\n    }\r\n\r\n    disposeWidgets() {\r\n        this.lineWidgets.forEach((i) => {\r\n            i.dispose();\r\n        });\r\n        this.lineWidgets = [];\r\n    }\r\n\r\n    disposeAnnotations() {\r\n        this.buildAnnotations.forEach((o) => {\r\n            o.dispose();\r\n        });\r\n        this.buildAnnotations = [];\r\n    }\r\n\r\n    disposeLineHighlights(): void {\r\n        this.lineHighlights.forEach((o) => {\r\n            o.dispose();\r\n        });\r\n        this.lineHighlights = [];\r\n    }\r\n\r\n    disposeActions(): void {\r\n        this.actions.forEach((a) => {\r\n            a.dispose();\r\n        });\r\n        this.actions = [];\r\n    }\r\n\r\n    layout(): void {\r\n        this._editor.layout();\r\n    }\r\n\r\n    /**\r\n     * Layouts this editor with a fixed size. Should only be used for testing purposes or when the size\r\n     * of the editor is clear; otherwise, there may be visual glitches!\r\n     * @param width The new width of the editor\r\n     * @param height The new height of the editor.\r\n     */\r\n    layoutWithFixedSize(width: number, height: number): void {\r\n        this._editor.layout({ width, height });\r\n    }\r\n\r\n    /**\r\n     * Sets the build annotations to display in the editor. They are fixed to their respective lines and will be marked\r\n     * as outdated.\r\n     * @param annotations The annotations to render in the editor.\r\n     * @param outdated Whether the specified annotations are already outdated and should be grayed out.\r\n     */\r\n    setAnnotations(annotations: Annotation[], outdated: boolean = false): void {\r\n        this.disposeAnnotations();\r\n        for (const annotation of annotations) {\r\n            const lineNumber = annotation.row + 1;\r\n            const editorBuildAnnotation = new MonacoEditorBuildAnnotation(\r\n                this._editor,\r\n                `${annotation.fileName}:${lineNumber}:${annotation.text}`,\r\n                lineNumber,\r\n                annotation.text,\r\n                annotation.type === 'error' ? MonacoEditorBuildAnnotationType.ERROR : MonacoEditorBuildAnnotationType.WARNING,\r\n            );\r\n            editorBuildAnnotation.addToEditor();\r\n            editorBuildAnnotation.setOutdatedAndUpdate(outdated);\r\n            this.buildAnnotations.push(editorBuildAnnotation);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Renders a line widget after the specified line.\r\n     * @param lineNumber The line after which the widget should be rendered.\r\n     * @param id The ID to use for the widget.\r\n     * @param domNode The content to display in the editor.\r\n     */\r\n    addLineWidget(lineNumber: number, id: string, domNode: HTMLElement) {\r\n        const lineWidget = new MonacoEditorLineWidget(this._editor, id, domNode, lineNumber);\r\n        lineWidget.addToEditor();\r\n        this.lineWidgets.push(lineWidget);\r\n    }\r\n\r\n    /**\r\n     * Adds a hover button to the line decorations of the editor. The button is only visible when hovering over the line.\r\n     * This will disable folding and set the line decorations width to make room for the button.\r\n     * @param className The CSS class to use for the button. This class must uniquely identify the button. To render content, use the CSS content attribute.\r\n     * @param clickCallback The callback to invoke when the button is clicked. The line number is passed as an argument.\r\n     */\r\n    setLineDecorationsHoverButton(className: string, clickCallback: (lineNumber: number) => void): void {\r\n        this.lineDecorationsHoverButton?.dispose();\r\n        this.lineDecorationsHoverButton = new MonacoEditorLineDecorationsHoverButton(\r\n            this._editor,\r\n            `line-decorations-hover-button-${this._editor.getId()}`,\r\n            className,\r\n            clickCallback,\r\n        );\r\n        // Make room for the hover button in the line decorations.\r\n        this._editor.updateOptions({\r\n            folding: false,\r\n            lineDecorationsWidth: MonacoEditorComponent.DEFAULT_LINE_DECORATION_BUTTON_WIDTH,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Highlights a range of lines in the editor using the specified class names.\r\n     * @param startLine The number of the first line to highlight.\r\n     * @param endLine The number of the last line to highlight.\r\n     * @param className The CSS class to use for highlighting the line itself, or undefined if none should be used.\r\n     * @param marginClassName The CSS class to use for highlighting the margin, or undefined if none should be used.\r\n     */\r\n    highlightLines(startLine: number, endLine: number, className?: string, marginClassName?: string) {\r\n        const highlight = new MonacoEditorLineHighlight(this._editor, 'line-highlight', startLine, endLine, className, marginClassName);\r\n        highlight.addToEditor();\r\n        this.lineHighlights.push(highlight);\r\n    }\r\n\r\n    getLineHighlights(): MonacoEditorLineHighlight[] {\r\n        return this.lineHighlights;\r\n    }\r\n\r\n    /**\r\n     * Registers an action to be available in the editor. The action will be disposed when the editor is disposed.\r\n     * @param action The action to register.\r\n     */\r\n    registerAction(action: TextEditorAction): void {\r\n        action.register(this.textEditorAdapter, this.translateService);\r\n        this.actions.push(action);\r\n    }\r\n\r\n    setWordWrap(value: boolean): void {\r\n        this._editor.updateOptions({\r\n            wordWrap: value ? 'on' : 'off',\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Sets the line number from which the editor should start counting.\r\n     * @param startLineNumber The line number to start counting from (starting at 1).\r\n     */\r\n    setStartLineNumber(startLineNumber: number): void {\r\n        this._editor.updateOptions({\r\n            lineNumbers: (number) => `${startLineNumber + number - 1}`,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Applies the given options to the editor.\r\n     * @param options The options to apply.\r\n     */\r\n    applyOptionPreset(options: MonacoEditorOptionPreset): void {\r\n        options.apply(this._editor);\r\n    }\r\n\r\n    public getCustomBackspaceCommandId(): string | undefined {\r\n        return this.customBackspaceCommandId;\r\n    }\r\n\r\n    /**\r\n     * Registers a custom backspace command that deletes the last grapheme cluster when pressing backspace.\r\n     * @param editor The editor to register the command for.\r\n     */\r\n    private registerCustomBackspaceAction(editor: monaco.editor.IStandaloneCodeEditor) {\r\n        this.customBackspaceCommandId =\r\n            editor.addCommand(monaco.KeyCode.Backspace, () => {\r\n                const model = editor.getModel();\r\n                const selection = editor.getSelection();\r\n                if (!model || !selection) return;\r\n\r\n                if (!selection.isEmpty()) {\r\n                    editor.trigger('keyboard', 'deleteLeft', null);\r\n                    return;\r\n                }\r\n\r\n                const lineNumber = selection.startLineNumber;\r\n                const column = selection.startColumn;\r\n                const lineContent = model.getLineContent(lineNumber);\r\n\r\n                const textBeforeCursor = lineContent.substring(0, column - 1);\r\n                const splitter = new Graphemer();\r\n                const graphemes = splitter.splitGraphemes(textBeforeCursor);\r\n\r\n                if (textBeforeCursor.length === 0) {\r\n                    editor.trigger('keyboard', 'deleteLeft', null);\r\n                    return;\r\n                }\r\n\r\n                const lastGrapheme = graphemes.pop();\r\n                const deletedLength = lastGrapheme?.length ?? 1;\r\n                const newTextBeforeCursor = graphemes.join('');\r\n                const textAfterCursor = lineContent.substring(column - 1);\r\n\r\n                const newLineContent = newTextBeforeCursor + textAfterCursor;\r\n\r\n                model.pushEditOperations(\r\n                    [],\r\n                    [\r\n                        {\r\n                            range: new monaco.Range(lineNumber, 1, lineNumber, lineContent.length + 1),\r\n                            text: newLineContent,\r\n                        },\r\n                    ],\r\n                    () => null,\r\n                );\r\n                const newCursorPosition = column - deletedLength;\r\n                editor.setSelection(new monaco.Range(lineNumber, newCursorPosition, lineNumber, newCursorPosition));\r\n            }) || undefined;\r\n    }\r\n}\r\n","import { MonacoCodeEditorElement } from 'app/shared/monaco-editor/model/monaco-code-editor-element.model';\r\nimport { Disposable, makeEditorRange } from 'app/shared/monaco-editor/model/actions/monaco-editor.util';\r\nimport * as monaco from 'monaco-editor';\r\n\r\n/**\r\n * Class representing a hover button that is displayed on a specific line in the editor.\r\n * The button is displayed in the line decorations of the editor; i.e., it is between the line numbers and the code.\r\n */\r\nexport class MonacoEditorLineDecorationsHoverButton extends MonacoCodeEditorElement {\r\n    private clickCallback: (lineNumber: number) => void;\r\n    private currentLineNumber = 1;\r\n    private decorationsCollection: monaco.editor.IEditorDecorationsCollection;\r\n    private readonly className: string;\r\n\r\n    private mouseMoveListener?: Disposable;\r\n    private mouseDownListener?: Disposable;\r\n    private mouseLeaveListener?: Disposable;\r\n\r\n    /**\r\n     * @param editor The editor to which to add the button.\r\n     * @param id The unique id of the button.\r\n     * @param className The class name of the button. This is used to uniquely identify the button in the editor.\r\n     * @param clickCallback The callback to be called when the button is clicked. The line number of the button is passed as an argument.\r\n     */\r\n    constructor(editor: monaco.editor.IStandaloneCodeEditor, id: string, className: string, clickCallback: (lineNumber: number) => void) {\r\n        super(editor, id);\r\n        this.clickCallback = clickCallback;\r\n        this.className = className;\r\n        this.decorationsCollection = editor.createDecorationsCollection([]);\r\n        // The button is only visible once the mouse triggers its appearance.\r\n        this.setVisible(false);\r\n        this.setupListeners();\r\n    }\r\n\r\n    protected setupListeners() {\r\n        super.setupListeners();\r\n        this.mouseMoveListener = this.editor.onMouseMove((editorMouseEvent: monaco.editor.IEditorMouseEvent) => {\r\n            // This is undefined e.g. when hovering over a line widget.\r\n            const lineNumber = editorMouseEvent.target?.position?.lineNumber;\r\n            this.moveAndUpdate(lineNumber);\r\n        });\r\n\r\n        this.mouseLeaveListener = this.editor.onMouseLeave(() => {\r\n            this.removeFromEditor();\r\n        });\r\n\r\n        this.mouseDownListener = this.editor.onMouseDown(this.onClick.bind(this));\r\n    }\r\n\r\n    /**\r\n     * Checks if the button was clicked and calls the click callback with the line number as an argument.\r\n     * @param editorMouseEvent The mouse event to react to.\r\n     */\r\n    onClick(editorMouseEvent: monaco.editor.IEditorMouseEvent): void {\r\n        const lineNumber = editorMouseEvent.target?.position?.lineNumber;\r\n        // We identify the button via the class name of the element.\r\n        if (lineNumber && editorMouseEvent.target?.element?.classList?.contains(this.className)) {\r\n            this.clickCallback(lineNumber);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Move the button to the specified line number and update the editor. If the line number is undefined, the button is instead removed from the editor.\r\n     * @param lineNumber The line number to which to move the button, if any.\r\n     */\r\n    moveAndUpdate(lineNumber?: number): void {\r\n        if (lineNumber === undefined) {\r\n            this.removeFromEditor();\r\n        } else if (!this.isVisible() || lineNumber !== this.currentLineNumber) {\r\n            this.currentLineNumber = lineNumber;\r\n            this.updateInEditor();\r\n        }\r\n    }\r\n\r\n    dispose() {\r\n        super.dispose();\r\n        this.mouseMoveListener?.dispose();\r\n        this.mouseDownListener?.dispose();\r\n        this.mouseLeaveListener?.dispose();\r\n    }\r\n\r\n    addToEditor(): void {\r\n        this.setVisible(true);\r\n        this.decorationsCollection.set([this.getAssociatedDeltaDecoration()]);\r\n    }\r\n\r\n    private getAssociatedDeltaDecoration(): monaco.editor.IModelDeltaDecoration {\r\n        return {\r\n            range: makeEditorRange(this.currentLineNumber, 1, this.currentLineNumber, 1),\r\n            options: {\r\n                isWholeLine: true,\r\n                linesDecorationsClassName: this.className,\r\n            },\r\n        };\r\n    }\r\n\r\n    removeFromEditor(): void {\r\n        this.setVisible(false);\r\n        this.decorationsCollection.clear();\r\n    }\r\n}\r\n"],"mappings":"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cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,EAAG,GAAI,CAAC,EAC9E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,EAAG,GAAI,CAAC,EAC9E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,EAAG,GAAI,CAAC,EAC9E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,EAAG,GAAI,CAAC,EAC9E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,EAAG,GAAI,CAAC,EAC9E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,EAAG,GAAI,CAAC,EAC9E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,EAAG,GAAI,CAAC,EAC9E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,EAAG,GAAI,CAAC,EAC9E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,EAAG,GAAI,CAAC,EAC9E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,EAAG,GAAI,CAAC,EAC9E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CA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CAAC,EAC9E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,EAAG,GAAI,CAAC,EAC9E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,EAAG,GAAI,CAAC,EAC9E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,EAAG,GAAI,CAAC,EAC9E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,EAAG,GAAI,CAAC,EAC9E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,EAAG,GAAI,CAAC,EAC9E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,EAAG,GAAI,CAAC,EAC9E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,EAAG,GAAI,CAAC,EAC9E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,EAAG,GAAI,CAAC,EAC9E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,EAAG,GAAI,CAAC,EAC9E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA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,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,EAAG,GAAI,CAAC,EAC9E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,EAAG,GAAI,CAAC,EAC9E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,EAAG,GAAI,CAAC,EAC9E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,EAAG,GAAI,CAAC,EAC9E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,EAAG,GAAI,CAAC,EAC9E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,EAAG,GAAI,CAAC,EAC9E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,EAAG,GAAI,CAAC,EAC9E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,EAAG,GAAI,CAAC,EAC9E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,EAAG,GAAI,CAAC,EAC9E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,EAAG,GAAI,CAAC,EAC9E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,SAAU,YAAgB,CAAC,KAAM,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EACvG,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,EAAG,GAAI,CAAC,EAC9E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,EAAG,GAAI,CAAC,EAC9E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,EAAG,GAAI,CAAC,EAC9E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,EAAG,GAAI,CAAC,EAC9E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,EAAG,GAAI,CAAC,EAC9E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,EAAG,GAAI,CAAC,EAC9E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,EAAG,GAAI,CAAC,EAC9E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,EAAG,GAAI,CAAC,EAC9E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,EAAG,GAAI,CAAC,EAC9E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,EAAG,GAAI,CAAC,EAC9E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,SAAU,YAAgB,CAAC,KAAM,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EACvG,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,cAAe,CAAC,CAAC,oBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,EAAG,GAAI,GAAI,CAAC,EAC5E,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,SAAU,YAAgB,CAAC,IAAI,EAAG,EAAG,GAAI,GAAI,CAAC,EACrG,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,EAAG,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,EAAG,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,OAAO,EAAG,EAAG,GAAI,GAAI,CAAC,EACvE,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,EAAG,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,OAAO,EAAG,EAAG,GAAI,GAAI,CAAC,EACvE,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,EAAG,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,EAAG,GAAI,GAAI,CAAC,EAC7E,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,EAAG,GAAI,GAAI,CAAC,EACxG,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,EAAG,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,EAAG,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,EAAG,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,qBAAqB,EAAG,EAAG,GAAI,GAAI,CAAC,EAC3F,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,QAAQ,EAAG,EAAG,GAAI,GAAI,CAAC,EACxE,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,OAAO,EAAG,EAAG,EAAG,GAAI,CAAC,EACtE,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,iBAAiB,EAAG,EAAG,EAAG,GAAI,CAAC,EACtF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,kBAAkB,EAAG,EAAG,EAAG,GAAI,CAAC,EACvF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,wBAAwB,EAAG,EAAG,EAAG,GAAI,CAAC,EAC7F,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,SAAS,EAAG,EAAG,EAAG,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,aAAa,EAAG,EAAG,EAAG,GAAI,CAAC,EAClF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,cAAc,EAAG,EAAG,EAAG,GAAI,CAAC,EACnF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,SAAS,EAAG,EAAG,EAAG,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,iBAAiB,EAAG,EAAG,EAAG,GAAI,CAAC,EAChF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,EAAG,EAAG,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EACzE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,WAAW,EAAG,EAAG,GAAI,GAAI,CAAC,EAC3E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,EAAG,GAAI,GAAI,CAAC,EAClE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,EAAG,GAAI,GAAI,CAAC,EACpE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,YAAY,EAAG,EAAG,GAAI,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,sBAAsB,EAAG,EAAG,GAAI,GAAI,CAAC,EAC1E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,UAAU,EAAG,EAAG,GAAI,GAAI,CAAC,EAC1E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,sBAAsB,EAAG,EAAG,GAAI,GAAI,CAAC,EAC1E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,oBAAoB,EAAG,EAAG,GAAI,GAAI,CAAC,EACpF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,OAAQ,qBAAqB,EAAG,EAAG,GAAI,GAAI,CAAC,EAC7F,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,WAAW,EAAG,EAAG,GAAI,GAAI,CAAC,EAC3E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,qBAAqB,EAAG,EAAG,GAAI,GAAI,CAAC,EACzE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,mBAAmB,EAAG,EAAG,GAAI,GAAI,CAAC,EACvE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,sBAAsB,EAAG,EAAG,GAAI,GAAI,CAAC,EAC1E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,eAAe,EAAG,EAAG,GAAI,GAAI,CAAC,EACrF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,oBAAoB,EAAG,EAAG,GAAI,GAAI,CAAC,EACxE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,8BAA8B,EAAG,EAAG,GAAI,GAAI,CAAC,EAC9F,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,6BAA6B,EAAG,EAAG,GAAI,GAAI,CAAC,EACjF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,qBAAqB,EAAG,EAAG,GAAI,GAAI,CAAC,EACzE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,EAAG,GAAI,GAAI,CAAC,EACnE,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,EAAG,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,OAAO,EAAG,EAAG,GAAI,GAAI,CAAC,EACvE,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,EAAG,GAAI,GAAI,CAAC,EAC5F,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,eAAgB,iBAAiB,EAAG,EAAG,GAAI,GAAI,CAAC,EAChH,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,eAAgB,kBAAkB,EAAG,EAAG,GAAI,GAAI,CAAC,EACjH,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,oBAAqB,uBAAuB,EAAG,EAAG,GAAI,GAAI,CAAC,EAC3H,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,EAAG,GAAI,GAAI,CAAC,EAC3F,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,EAAG,GAAI,GAAI,CAAC,EAC3F,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,YAAa,iBAAiB,EAAG,EAAG,GAAI,GAAI,CAAC,EAC7G,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,UAAW,eAAe,EAAG,EAAG,GAAI,GAAI,CAAC,EACzG,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,KAAK,EAAG,EAAG,GAAI,GAAI,CAAC,EACpF,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,mBAAmB,EAAG,EAAG,GAAI,GAAI,CAAC,EAClG,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,EAAG,GAAI,GAAI,CAAC,EAC5D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,MAAM,EAAG,EAAG,GAAI,GAAI,CAAC,EAC1D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC7D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,UAAU,EAAG,EAAG,GAAI,GAAI,CAAC,EAC1E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,UAAU,EAAG,EAAG,GAAI,GAAI,CAAC,EAC1E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,EAAG,GAAI,GAAI,CAAC,EACpE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,EAAG,GAAI,GAAI,CAAC,EACpE,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,WAAW,EAAG,EAAG,GAAI,GAAI,CAAC,EACjF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,EAAG,GAAI,GAAI,CAAC,EAC9E,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,EAAG,GAAI,GAAI,CAAC,EAC3F,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,EAAG,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,gBAAgB,EAAG,EAAG,GAAI,GAAI,CAAC,EACtF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,EAAG,GAAI,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,UAAU,EAAG,EAAG,GAAI,GAAI,CAAC,EAChF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,WAAW,EAAG,EAAG,GAAI,GAAI,CAAC,EACjF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EACzE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,MAAM,EAAG,EAAG,GAAI,GAAI,CAAC,EACtE,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,aAAa,EAAG,EAAG,GAAI,GAAI,CAAC,EACnF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,MAAM,EAAG,EAAG,GAAI,GAAI,CAAC,EACtE,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,kBAAkB,EAAG,EAAG,EAAG,GAAI,CAAC,EACvF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,YAAY,EAAG,EAAG,EAAG,GAAI,CAAC,EACjF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,aAAa,EAAG,EAAG,EAAG,GAAI,CAAC,EAClF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,EAAG,EAAG,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,UAAU,EAAG,EAAG,EAAG,GAAI,CAAC,EACzE,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,EAAG,EAAG,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,UAAU,EAAG,EAAG,EAAG,GAAI,CAAC,EAC/E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,QAAQ,EAAG,EAAG,EAAG,GAAI,CAAC,EACvE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,OAAO,EAAG,EAAG,EAAG,GAAI,CAAC,EACtE,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,YAAY,EAAG,EAAG,EAAG,GAAI,CAAC,EACjF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,WAAW,EAAG,EAAG,GAAI,GAAI,CAAC,EACjF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,EAAG,GAAI,GAAI,CAAC,EAC3D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,QAAQ,EAAG,EAAG,GAAI,GAAI,CAAC,EACxE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,WAAW,EAAG,EAAG,GAAI,GAAI,CAAC,EAC3E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,EAAG,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,aAAa,EAAG,EAAG,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,MAAM,EAAG,EAAG,GAAI,GAAI,CAAC,EAC1D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,OAAO,EAAG,EAAG,GAAI,GAAI,CAAC,EACvE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,UAAU,EAAG,EAAG,GAAI,GAAI,CAAC,EAC1E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,YAAY,EAAG,EAAG,GAAI,GAAI,CAAC,EAClF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,WAAW,EAAG,EAAG,GAAI,GAAI,CAAC,EACjF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,OAAO,EAAG,EAAG,GAAI,GAAI,CAAC,EACvE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,cAAc,EAAG,EAAG,GAAI,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,aAAa,EAAG,EAAG,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,cAAc,EAAG,EAAG,GAAI,GAAI,CAAC,EACpF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,WAAW,EAAG,EAAG,GAAI,GAAI,CAAC,EACjF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,EAAG,GAAI,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,EAAG,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,EAAG,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,WAAW,EAAG,EAAG,GAAI,GAAI,CAAC,EACjF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,EAAG,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,EAAG,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,cAAc,EAAG,EAAG,GAAI,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,EAAG,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,EAAG,GAAI,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,EAAG,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,cAAc,EAAG,EAAG,GAAI,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,WAAW,EAAG,EAAG,GAAI,GAAI,CAAC,EAC3E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,UAAU,EAAG,EAAG,GAAI,GAAI,CAAC,EAChF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,YAAY,EAAG,EAAG,GAAI,GAAI,CAAC,EAClF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,WAAW,EAAG,EAAG,GAAI,GAAI,CAAC,EAC3E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,UAAU,EAAG,EAAG,GAAI,GAAI,CAAC,EAC1E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,QAAQ,EAAG,EAAG,GAAI,GAAI,CAAC,EACxE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,eAAe,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,OAAO,EAAG,EAAG,GAAI,GAAI,CAAC,EACvE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,UAAU,EAAG,EAAG,GAAI,GAAI,CAAC,EAC1E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EACzE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,WAAW,EAAG,EAAG,GAAI,GAAI,CAAC,EAC3E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,EAAG,GAAI,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,EAAG,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,EAAG,GAAI,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,YAAa,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC5F,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,gBAAgB,EAAG,EAAG,GAAI,GAAI,CAAC,EACtF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,KAAK,EAAG,EAAG,GAAI,GAAI,CAAC,EAC3E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,EAAG,GAAI,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,YAAY,EAAG,EAAG,GAAI,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,UAAU,EAAG,EAAG,GAAI,GAAI,CAAC,EAChF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,gBAAgB,EAAG,EAAG,GAAI,GAAI,CAAC,EAChF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,EAAG,GAAI,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,EAAG,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,EAAG,GAAI,GAAI,CAAC,EACjE,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,kBAAkB,EAAG,EAAG,EAAG,GAAI,CAAC,EAChG,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,EAAG,EAAG,GAAI,CAAC,EAC9D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,EAAG,EAAG,GAAI,CAAC,EAC5D,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,EAAG,EAAG,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,EAAG,EAAG,GAAI,CAAC,EAC3E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,UAAU,EAAG,EAAG,EAAG,GAAI,CAAC,EAC/E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,gBAAgB,EAAG,EAAG,EAAG,GAAI,CAAC,EACrF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,gBAAgB,EAAG,EAAG,EAAG,GAAI,CAAC,EACrF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,EAAG,EAAG,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,WAAW,EAAG,EAAG,GAAI,GAAI,CAAC,EACjF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,UAAU,EAAG,EAAG,GAAI,GAAI,CAAC,EAChF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,EAAG,GAAI,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,eAAe,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,eAAe,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,eAAe,EAAG,EAAG,GAAI,GAAI,CAAC,EACrF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,EAAG,GAAI,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,EAAG,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,EAAG,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,YAAY,EAAG,EAAG,GAAI,GAAI,CAAC,EAClF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,YAAY,EAAG,EAAG,GAAI,GAAI,CAAC,EAClF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,gBAAgB,EAAG,EAAG,GAAI,GAAI,CAAC,EACtF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,cAAc,EAAG,EAAG,GAAI,GAAI,CAAC,EACpF,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,EAAG,GAAI,GAAI,CAAC,EACtF,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,iBAAiB,EAAG,EAAG,GAAI,GAAI,CAAC,EAChG,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,mBAAmB,EAAG,EAAG,GAAI,GAAI,CAAC,EAClG,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,EAAG,GAAI,GAAI,CAAC,EAC7F,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,EAAG,GAAI,GAAI,CAAC,EAC9F,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,EAAG,GAAI,GAAI,CAAC,EAC5F,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,mBAAmB,EAAG,EAAG,GAAI,GAAI,CAAC,EAClG,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,gBAAgB,EAAG,EAAG,GAAI,GAAI,CAAC,EAChF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,cAAc,EAAG,EAAG,GAAI,GAAI,CAAC,EACpF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,gBAAgB,EAAG,EAAG,GAAI,GAAI,CAAC,EACtF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,uBAAuB,EAAG,EAAG,GAAI,GAAI,CAAC,EACvF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,YAAY,EAAG,EAAG,GAAI,GAAI,CAAC,EAClF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,cAAc,EAAG,EAAG,GAAI,GAAI,CAAC,EACpF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,EAAG,GAAI,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,YAAY,EAAG,EAAG,GAAI,GAAI,CAAC,EAClF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,KAAK,EAAG,EAAG,GAAI,GAAI,CAAC,EAC3E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,EAAG,GAAI,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,aAAa,EAAG,EAAG,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,EAAG,GAAI,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,iBAAiB,EAAG,EAAG,GAAI,GAAI,CAAC,EACjF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,YAAY,EAAG,EAAG,GAAI,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,EAAG,GAAI,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,cAAc,EAAG,EAAG,GAAI,GAAI,CAAC,EACpF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,EAAG,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,UAAU,EAAG,EAAG,GAAI,GAAI,CAAC,EAC1E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EACzE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,sBAAsB,EAAG,EAAG,GAAI,GAAI,CAAC,EACtF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,cAAc,EAAG,EAAG,GAAI,GAAI,CAAC,EACpF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,EAAG,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,WAAW,EAAG,EAAG,GAAI,GAAI,CAAC,EACjF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,EAAG,GAAI,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,kBAAkB,EAAG,EAAG,GAAI,GAAI,CAAC,EAClF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,SAAS,EAAG,EAAG,EAAG,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,QAAQ,EAAG,EAAG,EAAG,GAAI,CAAC,EACvE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,eAAe,EAAG,EAAG,EAAG,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,yBAAyB,EAAG,EAAG,EAAG,GAAI,CAAC,EACxF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,EAAG,EAAG,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,KAAK,EAAG,EAAG,EAAG,GAAI,CAAC,EAC1E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,YAAY,EAAG,EAAG,EAAG,GAAI,CAAC,EACjF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,gBAAgB,EAAG,EAAG,EAAG,GAAI,CAAC,EACrF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,aAAa,EAAG,EAAG,EAAG,GAAI,CAAC,EAC5E,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,EAAG,GAAI,GAAI,CAAC,EAChI,uBAAwB,CAAC,CAAC,8BAAkC,wBAA4B,WAAc,EAAG,GAAI,GAAI,CAAC,cAAe,SAAU,SAAS,EAAG,EAAG,GAAI,GAAI,CAAC,EACnK,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,EAAG,GAAI,GAAI,CAAC,EAChI,uBAAwB,CAAC,CAAC,8BAAkC,wBAA4B,WAAc,EAAG,GAAI,GAAI,CAAC,cAAe,QAAQ,EAAG,EAAG,GAAI,GAAI,CAAC,EACxJ,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,EAAG,GAAI,GAAI,CAAC,EAClE,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,EAAG,GAAI,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,EAAG,GAAI,GAAI,CAAC,EAClE,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,UAAU,EAAG,EAAG,GAAI,GAAI,CAAC,EAChF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,EAAG,GAAI,GAAI,CAAC,EACpE,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,EAAG,GAAI,GAAI,CAAC,EACjI,uBAAwB,CAAC,CAAC,8BAAkC,wBAA4B,WAAc,EAAG,GAAI,GAAI,CAAC,eAAgB,SAAS,EAAG,EAAG,EAAG,GAAI,CAAC,EACzJ,4BAA6B,CAAC,CAAC,mCAAsC,EAAG,GAAI,GAAI,CAAC,uBAAuB,EAAG,EAAG,GAAI,EAAG,CAAC,EACtH,4BAA6B,CAAC,CAAC,oCAAwC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,sBAAuB,eAAe,EAAG,EAAG,GAAI,EAAG,CAAC,EAC3K,4BAA6B,CAAC,CAAC,mCAAsC,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,EAAG,GAAI,EAAG,CAAC,EAC9G,4BAA6B,CAAC,CAAC,oCAAwC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,cAAe,QAAQ,EAAG,EAAG,GAAI,EAAG,CAAC,EAC5J,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,mBAAmB,EAAG,EAAG,GAAI,GAAI,CAAC,EAClG,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,EAAG,GAAI,GAAI,CAAC,EAC3F,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,sBAAsB,EAAG,EAAG,GAAI,GAAI,CAAC,EAC1E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,EAAG,GAAI,GAAI,CAAC,EAChE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,6BAA6B,EAAG,EAAG,GAAI,GAAI,CAAC,EACjF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,2BAA2B,EAAG,EAAG,GAAI,GAAI,CAAC,EAC/E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,8BAA8B,EAAG,EAAG,GAAI,GAAI,CAAC,EAClF,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,sBAAsB,EAAG,EAAG,GAAI,GAAI,CAAC,EACrG,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,EAAG,GAAI,CAAC,EACxF,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,qBAAqB,EAAG,GAAI,EAAG,GAAI,CAAC,EACpG,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,uBAAuB,EAAG,GAAI,EAAG,GAAI,CAAC,EACtG,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,iBAAiB,EAAG,GAAI,EAAG,GAAI,CAAC,EAChG,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,EAAG,GAAI,CAAC,EAC1F,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,yBAAyB,EAAG,GAAI,EAAG,GAAI,CAAC,EACxG,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,oBAAoB,EAAG,GAAI,EAAG,GAAI,CAAC,EACnG,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,EAAG,GAAI,CAAC,EACvF,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,EAAG,GAAI,CAAC,EAC9F,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,EAAG,GAAI,CAAC,EAC9F,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EACzF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,mBAAmB,EAAG,GAAI,GAAI,GAAI,CAAC,EACpF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EACpF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,sBAAsB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EACjF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,KAAK,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EACnF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,mBAAmB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1F,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EACzF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAChF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,kBAAmB,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7F,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,iBAAiB,EAAG,GAAI,GAAI,GAAI,CAAC,EACxF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,iBAAiB,EAAG,GAAI,GAAI,GAAI,CAAC,EACxF,wBAAyB,CAAC,CAAC,iCAAwC,0BAAgC,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7I,4BAA6B,CAAC,CAAC,mCAAsC,EAAG,GAAI,GAAI,CAAC,kBAAkB,EAAG,GAAI,GAAI,EAAG,CAAC,EAClH,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,mBAAmB,EAAG,GAAI,GAAI,GAAI,CAAC,EACnG,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/H,4CAA6C,CAAC,CAAC,iEAAsF,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/K,4CAA6C,CAAC,CAAC,iEAAsF,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EAChL,4CAA6C,CAAC,CAAC,iEAAsF,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7K,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,mBAAmB,EAAG,GAAI,GAAI,GAAI,CAAC,EACxE,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EACzF,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EACvF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,mCAAmC,EAAG,GAAI,GAAI,GAAI,CAAC,EACxF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EACpE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAClE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAClE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAClE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAClE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAClE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,KAAK,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,IAAI,EAAG,GAAI,GAAI,GAAI,CAAC,EACzD,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EACpE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9D,kBAAmB,CAAC,CAAC,uBAA0B,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EACtF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAChE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EACxE,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,WAAW,EAAG,GAAI,EAAG,GAAI,CAAC,EACjF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,KAAK,EAAG,GAAI,EAAG,GAAI,CAAC,EACzD,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,MAAM,EAAG,GAAI,EAAG,GAAI,CAAC,EAC1D,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,GAAI,EAAG,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,GAAI,EAAG,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,EAAG,GAAI,CAAC,EAC7D,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,SAAS,EAAG,GAAI,EAAG,GAAI,CAAC,EAC/E,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,EAAG,GAAI,CAAC,EAC9F,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,MAAM,EAAG,GAAI,EAAG,GAAI,CAAC,EAC1D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,MAAM,EAAG,GAAI,EAAG,GAAI,CAAC,EAC1D,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EACjF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAChF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,KAAK,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,KAAK,EAAG,GAAI,GAAI,GAAI,CAAC,EACtE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,MAAO,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAClF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,UAAW,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EACzF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EACtF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EACzE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,gBAAgB,EAAG,GAAI,GAAI,GAAI,CAAC,EACjF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EACnF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EAChF,kBAAmB,CAAC,CAAC,uBAA0B,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,GAAI,GAAI,EAAG,CAAC,EACtF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAChF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EACzE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,iBAAiB,EAAG,GAAI,GAAI,GAAI,CAAC,EACtE,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,UAAW,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3F,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,KAAK,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,KAAK,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EACpF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,KAAK,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,KAAK,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAChF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9H,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,OAAQ,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EACrF,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1F,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,6BAA8B,CAAC,CAAC,sCAA4C,EAAG,GAAI,GAAI,CAAC,sBAAsB,EAAG,GAAI,GAAI,EAAG,CAAC,EAC7H,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,KAAK,EAAG,GAAI,GAAI,GAAI,CAAC,EACrF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,KAAK,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,GAAI,EAAG,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,GAAI,EAAG,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,QAAQ,EAAG,GAAI,EAAG,GAAI,CAAC,EACxE,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,YAAY,EAAG,GAAI,EAAG,GAAI,CAAC,EAClF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EACnF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EACnF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EACpF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,YAAa,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3F,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAChF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,KAAM,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EACvF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,KAAM,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EACzF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,GAAI,EAAG,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,YAAY,EAAG,GAAI,EAAG,GAAI,CAAC,EAClF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EACnF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAChF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,QAAS,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EACxF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EACxE,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,gBAAgB,EAAG,GAAI,GAAI,GAAI,CAAC,EACjF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EACxE,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAChF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EACxE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,YAAa,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EACpF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EACtF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAClF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EACnF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,oBAAoB,EAAG,GAAI,GAAI,GAAI,CAAC,EACrF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,qBAAqB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,KAAK,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/F,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7F,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EACpG,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,EAAG,GAAI,CAAC,EAC/F,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/F,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/F,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EAChG,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,qBAAqB,EAAG,GAAI,GAAI,GAAI,CAAC,EACvG,8BAA+B,CAAC,CAAC,yCAAkD,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5H,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3F,8BAA+B,CAAC,CAAC,yCAAkD,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7H,8BAA+B,CAAC,CAAC,yCAAkD,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9H,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5F,8BAA+B,CAAC,CAAC,yCAAkD,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5H,yCAA0C,CAAC,CAAC,wDAAoE,EAAG,GAAI,GAAI,CAAC,iBAAiB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7J,8BAA+B,CAAC,CAAC,yCAAkD,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7H,yCAA0C,CAAC,CAAC,wDAAoE,EAAG,GAAI,GAAI,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9J,yCAA0C,CAAC,CAAC,wDAAoE,EAAG,GAAI,GAAI,CAAC,mBAAmB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/J,8BAA+B,CAAC,CAAC,0CAAoD,WAAc,EAAG,GAAI,GAAI,CAAC,gBAAiB,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EACxJ,yCAA0C,CAAC,CAAC,wDAAoE,EAAG,GAAI,GAAI,CAAC,mBAAmB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/J,8BAA+B,CAAC,CAAC,yCAAkD,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/H,yCAA0C,CAAC,CAAC,wDAAoE,EAAG,GAAI,GAAI,CAAC,oBAAoB,EAAG,GAAI,GAAI,GAAI,CAAC,EAChK,yCAA0C,CAAC,CAAC,wDAAoE,EAAG,GAAI,GAAI,CAAC,qBAAqB,EAAG,GAAI,GAAI,GAAI,CAAC,EACjK,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,mBAAmB,EAAG,GAAI,GAAI,GAAI,CAAC,EACrG,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,oBAAoB,EAAG,GAAI,GAAI,GAAI,CAAC,EACtG,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,EAAG,GAAI,CAAC,EAChG,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,GAAI,EAAG,GAAI,CAAC,EACjG,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,GAAI,GAAI,GAAI,CAAC,EAClG,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EACpG,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,uBAAuB,EAAG,GAAI,GAAI,GAAI,CAAC,EACzG,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,GAAI,GAAI,GAAI,CAAC,EAClG,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EACpG,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5F,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EACpG,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,6BAA6B,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/G,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,0BAA0B,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5G,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,EAAG,GAAI,CAAC,EAC9H,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9H,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9H,kCAAmC,CAAC,CAAC,6CAAoD,sCAA4C,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EAChL,6CAA8C,CAAC,CAAC,4DAAsE,qDAA8D,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9N,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,KAAK,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5E,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EACjG,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/F,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,oBAAoB,EAAG,GAAI,GAAI,GAAI,CAAC,EACtG,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,GAAI,GAAI,GAAI,CAAC,EAClG,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EACjG,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EACjG,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,GAAI,GAAI,GAAI,CAAC,EAClG,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,uBAAuB,EAAG,GAAI,EAAG,GAAI,CAAC,EACxG,8BAA+B,CAAC,CAAC,yCAAkD,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,EAAG,GAAI,CAAC,EAC7H,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,EAAG,GAAI,CAAC,EAC5F,8BAA+B,CAAC,CAAC,yCAAkD,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,GAAI,EAAG,GAAI,CAAC,EAC9H,8BAA+B,CAAC,CAAC,yCAAkD,EAAG,GAAI,GAAI,CAAC,iBAAiB,EAAG,GAAI,GAAI,GAAI,CAAC,EAChI,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9F,8BAA+B,CAAC,CAAC,yCAAkD,EAAG,GAAI,GAAI,CAAC,iBAAiB,EAAG,GAAI,GAAI,GAAI,CAAC,EAChI,yCAA0C,CAAC,CAAC,wDAAoE,EAAG,GAAI,GAAI,CAAC,qBAAqB,EAAG,GAAI,GAAI,GAAI,CAAC,EACjK,8BAA+B,CAAC,CAAC,yCAAkD,EAAG,GAAI,GAAI,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EACjI,yCAA0C,CAAC,CAAC,wDAAoE,EAAG,GAAI,GAAI,CAAC,sBAAsB,EAAG,GAAI,GAAI,GAAI,CAAC,EAClK,yCAA0C,CAAC,CAAC,wDAAoE,EAAG,GAAI,GAAI,CAAC,uBAAuB,EAAG,GAAI,GAAI,GAAI,CAAC,EACnK,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,qBAAqB,EAAG,GAAI,GAAI,GAAI,CAAC,EACvG,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,sBAAsB,EAAG,GAAI,GAAI,GAAI,CAAC,EACxG,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,iBAAiB,EAAG,GAAI,GAAI,GAAI,CAAC,EACnG,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EACpG,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EACpG,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,oBAAoB,EAAG,GAAI,GAAI,GAAI,CAAC,EACtG,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,yBAAyB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3G,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EACpG,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,oBAAoB,EAAG,GAAI,EAAG,GAAI,CAAC,EACrG,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9F,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,oBAAoB,EAAG,GAAI,GAAI,GAAI,CAAC,EACtG,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,+BAA+B,EAAG,GAAI,GAAI,GAAI,CAAC,EACjH,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,4BAA4B,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9G,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EACjI,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EAChI,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EAChI,kCAAmC,CAAC,CAAC,6CAAoD,sCAA4C,EAAG,GAAI,GAAI,CAAC,iBAAiB,EAAG,GAAI,GAAI,GAAI,CAAC,EAClL,kCAAmC,CAAC,CAAC,6CAAoD,sCAA4C,EAAG,GAAI,GAAI,CAAC,mBAAmB,EAAG,GAAI,GAAI,GAAI,CAAC,EACpL,6CAA8C,CAAC,CAAC,4DAAsE,qDAA8D,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,GAAI,GAAI,GAAI,CAAC,EAChO,6CAA8C,CAAC,CAAC,4DAAsE,qDAA8D,EAAG,GAAI,GAAI,CAAC,kBAAkB,EAAG,GAAI,EAAG,GAAI,CAAC,EACjO,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,8BAA+B,8BAA+B,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7I,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,wBAAyB,mBAAmB,EAAG,GAAI,EAAG,GAAI,CAAC,EAChG,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,0BAA2B,qBAAqB,EAAG,GAAI,GAAI,GAAI,CAAC,EACrG,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,uBAAuB,EAAG,GAAI,GAAI,GAAI,CAAC,EACzI,uBAAwB,CAAC,CAAC,8BAAkC,wBAA4B,WAAc,EAAG,GAAI,GAAI,CAAC,sBAAuB,KAAK,EAAG,GAAI,EAAG,GAAI,CAAC,EAC7J,uBAAwB,CAAC,CAAC,8BAAkC,wBAA4B,WAAc,EAAG,GAAI,GAAI,CAAC,iCAAkC,iCAAkC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/M,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,+BAAgC,8BAA8B,EAAG,GAAI,GAAI,GAAI,CAAC,EAChL,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,iBAAiB,EAAG,GAAI,GAAI,GAAI,CAAC,EACnI,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EACjI,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,iBAAiB,EAAG,GAAI,GAAI,GAAI,CAAC,EAClF,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,oBAAoB,EAAG,GAAI,GAAI,GAAI,CAAC,EACtI,uBAAwB,CAAC,CAAC,8BAAkC,wBAA4B,WAAc,EAAG,GAAI,GAAI,CAAC,mBAAoB,wBAAwB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9K,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,qBAAqB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5F,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,sBAAsB,EAAG,GAAI,GAAI,GAAI,CAAC,EACxI,uBAAwB,CAAC,CAAC,8BAAkC,wBAA4B,WAAc,EAAG,GAAI,GAAI,CAAC,qBAAsB,iBAAiB,EAAG,GAAI,EAAG,GAAI,CAAC,EACxK,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAClF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EACpF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,4BAA4B,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9I,uBAAwB,CAAC,CAAC,8BAAkC,wBAA4B,WAAc,EAAG,GAAI,GAAI,CAAC,2BAA4B,qBAAqB,EAAG,GAAI,GAAI,GAAI,CAAC,EACnL,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EACjF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EAChF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,iBAAiB,EAAG,GAAI,GAAI,GAAI,CAAC,EAClF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,GAAI,EAAG,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,GAAI,EAAG,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,GAAI,EAAG,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,eAAe,EAAG,GAAI,EAAG,GAAI,CAAC,EACrF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,KAAK,EAAG,GAAI,EAAG,GAAI,CAAC,EAC3E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9E,uBAAwB,CAAC,CAAC,8BAAkC,wBAA4B,WAAc,EAAG,GAAI,GAAI,CAAC,qBAAsB,yBAAyB,EAAG,GAAI,GAAI,GAAI,CAAC,EACjL,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EACpI,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EAChI,uBAAwB,CAAC,CAAC,8BAAkC,wBAA4B,WAAc,EAAG,GAAI,GAAI,CAAC,aAAc,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3J,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EACjF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAClF,uBAAwB,CAAC,CAAC,8BAAkC,wBAA4B,WAAc,EAAG,GAAI,GAAI,CAAC,wBAAyB,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EACpK,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,qBAAqB,EAAG,GAAI,EAAG,GAAI,CAAC,EACtI,uBAAwB,CAAC,CAAC,8BAAkC,wBAA4B,WAAc,EAAG,GAAI,GAAI,CAAC,wBAAyB,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EACpK,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,qBAAqB,EAAG,GAAI,GAAI,GAAI,CAAC,EACvI,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAChF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,KAAK,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EACnF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,SAAS,EAAG,GAAI,EAAG,GAAI,CAAC,EAC/E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,mBAAmB,EAAG,GAAI,EAAG,GAAI,CAAC,EACzF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAChF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAClF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,EAAG,KAAM,EAC7F,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,iBAAiB,EAAG,GAAI,GAAI,GAAI,CAAC,EAClF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EACnF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,EAAG,IAAI,EACzF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,EAAG,IAAI,EAC1F,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,EAAG,IAAI,EAC3F,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,EAAG,IAAI,EAC3F,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EACnF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EACnF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EACzF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,iCAAiC,EAAG,GAAI,GAAI,GAAI,CAAC,EAClG,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,KAAK,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,OAAQ,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EACpF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EACpF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,SAAU,OAAQ,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/F,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,OAAO,EAAG,GAAI,EAAG,GAAI,CAAC,EACvE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,gBAAgB,EAAG,GAAI,EAAG,GAAI,CAAC,EAChF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,iBAAiB,EAAG,GAAI,EAAG,GAAI,CAAC,EACrE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,cAAc,EAAG,GAAI,EAAG,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,KAAK,EAAG,GAAI,EAAG,GAAI,CAAC,EACrE,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,UAAU,EAAG,GAAI,EAAG,GAAI,CAAC,EAChF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,mBAAmB,EAAG,GAAI,EAAG,GAAI,CAAC,EACzF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,mBAAmB,EAAG,GAAI,GAAI,GAAI,CAAC,EACpF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,KAAK,EAAG,GAAI,GAAI,GAAI,CAAC,EACtE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EACzE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EACnF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EACjF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAClF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EACjF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,IAAI,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,KAAK,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EACnF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,gBAAgB,EAAG,GAAI,GAAI,GAAI,CAAC,EACjF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,gBAAgB,EAAG,GAAI,GAAI,GAAI,CAAC,EACjF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EACvE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,0BAA0B,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3F,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,4BAA4B,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7F,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EAChF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,gBAAgB,EAAG,GAAI,GAAI,GAAI,CAAC,EACjF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EACnF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EAChF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EACzE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,gCAAgC,EAAG,GAAI,GAAI,GAAI,CAAC,EACjG,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAQ,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1F,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EACxE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EACzE,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAQ,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EACvF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,oBAAoB,EAAG,GAAI,GAAI,GAAI,CAAC,EACrF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EACxE,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,KAAK,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,mBAAmB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1F,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EACpF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,YAAY,EAAG,GAAI,EAAG,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,SAAS,EAAG,GAAI,EAAG,GAAI,CAAC,EACzE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,QAAQ,EAAG,GAAI,EAAG,GAAI,CAAC,EACxE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,mBAAmB,EAAG,GAAI,EAAG,GAAI,CAAC,EACnF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,qBAAqB,EAAG,GAAI,EAAG,GAAI,CAAC,EAC3F,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,gBAAgB,EAAG,GAAI,EAAG,GAAI,CAAC,EAChF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,SAAS,EAAG,GAAI,EAAG,GAAI,CAAC,EAC/E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,mBAAmB,EAAG,GAAI,EAAG,GAAI,CAAC,EACvE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,sBAAsB,EAAG,GAAI,EAAG,GAAI,CAAC,EAC1E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,SAAS,EAAG,GAAI,EAAG,GAAI,CAAC,EAC/E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAClE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAChF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,gBAAgB,EAAG,GAAI,GAAI,GAAI,CAAC,EACvF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EACzF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EACvE,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,iBAAiB,EAAG,GAAI,GAAI,GAAI,CAAC,EACxF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,mBAAmB,EAAG,GAAI,GAAI,GAAI,CAAC,EACxE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,IAAI,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,KAAK,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5E,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,GAAI,GAAI,GAAI,CAAC,EAChG,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EACnE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,2BAA2B,EAAG,GAAI,GAAI,GAAI,CAAC,EAChF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EACjE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EACnF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,yBAAyB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,GAAI,GAAI,GAAI,CAAC,EACrE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,iBAAiB,EAAG,GAAI,GAAI,GAAI,CAAC,EACtE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5D,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EACnF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EAChF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,KAAK,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,mBAAmB,EAAG,GAAI,GAAI,GAAI,CAAC,EACpF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,sBAAsB,EAAG,GAAI,GAAI,GAAI,CAAC,EACvF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,KAAK,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EACvE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EACvE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,KAAK,EAAG,GAAI,GAAI,GAAI,CAAC,EACtE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,IAAI,EAAG,GAAI,GAAI,GAAI,CAAC,EACrE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EACvE,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,KAAK,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EACjF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EACvE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EACvE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,SAAS,EAAG,GAAI,EAAG,GAAI,CAAC,EACzE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,KAAK,EAAG,GAAI,EAAG,GAAI,CAAC,EACrE,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,GAAI,EAAG,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,YAAY,EAAG,GAAI,EAAG,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,QAAQ,EAAG,GAAI,EAAG,GAAI,CAAC,EACxE,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,GAAI,EAAG,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,cAAc,EAAG,GAAI,EAAG,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,QAAS,OAAO,EAAG,GAAI,EAAG,GAAI,CAAC,EAChF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,KAAK,EAAG,GAAI,EAAG,GAAI,CAAC,EAC3E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,GAAI,EAAG,GAAI,CAAC,EAChE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAChE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EACzF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EACjF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAChF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,qBAAqB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5F,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,qBAAqB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5F,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EACnF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,mBAAmB,EAAG,GAAI,GAAI,GAAI,CAAC,EACpF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,sBAAsB,EAAG,GAAI,GAAI,GAAI,CAAC,EACvF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,oBAAoB,EAAG,GAAI,GAAI,GAAI,CAAC,EACrF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,sBAAsB,EAAG,GAAI,GAAI,GAAI,CAAC,EACvF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,oBAAoB,EAAG,GAAI,GAAI,GAAI,CAAC,EACrF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,oBAAoB,EAAG,GAAI,GAAI,GAAI,CAAC,EACrF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,yBAAyB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1F,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,gBAAgB,EAAG,GAAI,GAAI,GAAI,CAAC,EACjF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EACnF,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3F,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/F,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAChE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,4BAA4B,EAAG,GAAI,GAAI,GAAI,CAAC,EACjF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAChF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAChF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAChF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAChE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAChE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAChE,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EACxF,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,mBAAmB,EAAG,GAAI,GAAI,GAAI,CAAC,EACnG,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EACtF,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,iCAAiC,EAAG,GAAI,GAAI,GAAI,CAAC,EACjH,4BAA6B,CAAC,CAAC,mCAAsC,EAAG,GAAI,GAAI,CAAC,kBAAkB,EAAG,GAAI,EAAG,EAAG,CAAC,EACjH,4BAA6B,CAAC,CAAC,oCAAwC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,iBAAkB,eAAe,EAAG,GAAI,GAAI,EAAG,CAAC,EACvK,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,iBAAiB,EAAG,GAAI,GAAI,GAAI,CAAC,EACjG,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EACxF,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5F,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1F,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAClE,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,mBAAmB,EAAG,GAAI,GAAI,GAAI,CAAC,EACnG,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,0BAA0B,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1G,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,yBAAyB,EAAG,GAAI,GAAI,GAAI,CAAC,EACzG,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,uBAAuB,EAAG,GAAI,GAAI,GAAI,CAAC,EACvG,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,mBAAmB,EAAG,GAAI,GAAI,GAAI,CAAC,EACnG,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,kCAAkC,EAAG,GAAI,GAAI,GAAI,CAAC,EAClH,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,gBAAiB,2CAA2C,EAAG,GAAI,GAAI,GAAI,CAAC,EACjH,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EACjE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAClE,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EAClG,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EACzF,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,oBAAoB,EAAG,GAAI,GAAI,GAAI,CAAC,EACpG,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3F,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,oBAAoB,EAAG,GAAI,EAAG,GAAI,CAAC,EACnG,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,qBAAqB,EAAG,GAAI,EAAG,GAAI,CAAC,EACpG,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,EAAG,GAAI,CAAC,EAC9F,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,EAAG,GAAI,CAAC,EAC7F,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,EAAG,GAAI,CAAC,EAC5F,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,iBAAiB,EAAG,GAAI,EAAG,GAAI,CAAC,EAChG,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,qBAAqB,EAAG,GAAI,EAAG,GAAI,CAAC,EACpG,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,EAAG,GAAI,CAAC,EAC5F,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,EAAG,GAAI,CAAC,EACxF,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,qBAAqB,EAAG,GAAI,EAAG,GAAI,CAAC,EACpG,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9F,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,6BAA6B,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7G,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,oBAAoB,EAAG,GAAI,GAAI,GAAI,CAAC,EACpG,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,oBAAoB,EAAG,GAAI,GAAI,GAAI,CAAC,EACpG,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,wBAAwB,EAAG,GAAI,GAAI,GAAI,CAAC,EACxG,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3F,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EACnF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EACpF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,mBAAmB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1F,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EACxE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EACxE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,EAAG,IAAI,EACrE,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,KAAK,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,EAAG,IAAI,EACrF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,EAAG,IAAI,EACpF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,WAAY,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EACxF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAClE,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,EAAG,IAAI,EACnF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,EAAG,IAAI,EACpF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,KAAK,EAAG,GAAI,GAAI,GAAI,CAAC,EACtE,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EACjF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EACnF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EACjE,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EACnE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,GAAI,GAAI,GAAI,CAAC,EACrE,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,EAAG,IAAI,EACvF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAChF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/D,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EACnF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9D,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EACtF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,sBAAsB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,qBAAqB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5F,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,EAAG,IAAI,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,8BAA8B,EAAG,GAAI,GAAI,GAAI,EAAG,IAAI,EAC3G,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,8BAA8B,EAAG,GAAI,GAAI,GAAI,CAAC,EACrG,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,EAAG,IAAI,EAC3F,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9D,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,KAAK,EAAG,GAAI,GAAI,GAAI,EAAG,KAAK,EACnF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAClF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,uBAAuB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9F,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAChE,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,SAAS,EAAG,GAAI,EAAG,GAAI,CAAC,EAC/E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,OAAO,EAAG,GAAI,EAAG,GAAI,CAAC,EACvE,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,GAAI,EAAG,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,YAAY,EAAG,GAAI,EAAG,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,EAAG,GAAI,CAAC,EAC/D,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,KAAK,EAAG,GAAI,EAAG,GAAI,EAAG,KAAK,EAClF,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,EAAG,GAAI,CAAC,EAChG,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,GAAI,EAAG,GAAI,CAAC,EAChE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,EAAG,GAAI,CAAC,EAC5D,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,YAAY,EAAG,GAAI,EAAG,GAAI,CAAC,EAClF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EACnF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAChF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/D,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,uBAAuB,EAAG,GAAI,GAAI,GAAI,CAAC,EACzG,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,wBAAyB,CAAC,CAAC,iCAAwC,0BAAgC,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/I,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/D,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,gBAAgB,EAAG,GAAI,GAAI,GAAI,CAAC,EACjF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,iBAAiB,EAAG,GAAI,GAAI,GAAI,CAAC,EAClF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,wBAAwB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,uBAAuB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EACvE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,wBAAwB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,uBAAwB,CAAC,CAAC,8BAAkC,wBAA4B,WAAc,EAAG,GAAI,GAAI,CAAC,qBAAsB,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EACjK,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EACpI,uBAAwB,CAAC,CAAC,8BAAkC,wBAA4B,WAAc,EAAG,GAAI,GAAI,CAAC,qBAAsB,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAClK,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EACpI,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,EAAG,GAAI,CAAC,EAC/H,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9H,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,KAAK,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EAChF,uBAAwB,CAAC,CAAC,8BAAkC,wBAA4B,WAAc,EAAG,GAAI,GAAI,CAAC,qBAAsB,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EACtK,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EACpI,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EACrF,uBAAwB,CAAC,CAAC,8BAAkC,wBAA4B,WAAc,EAAG,GAAI,GAAI,CAAC,iBAAkB,iBAAiB,EAAG,GAAI,GAAI,GAAI,CAAC,EACrK,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EAChI,uBAAwB,CAAC,CAAC,8BAAkC,wBAA4B,WAAc,EAAG,GAAI,GAAI,CAAC,gBAAiB,0BAA0B,EAAG,GAAI,EAAG,GAAI,CAAC,EAC5K,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/H,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EACjE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EACvE,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EACpF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EACzF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,mBAAmB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1F,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7D,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EACjE,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAChF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5D,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,KAAK,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EACnE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EACjE,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAChF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9D,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAClF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EACpF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EACnF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,qBAAqB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EACpE,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAO,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EACvF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,qBAAqB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EACjF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,mBAAmB,EAAG,GAAI,GAAI,GAAI,CAAC,EACxE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,EAAG,GAAI,CAAC,EAC7D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,EAAG,GAAI,CAAC,EAC9D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,kBAAkB,EAAG,GAAI,EAAG,GAAI,CAAC,EACtE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,oBAAoB,EAAG,GAAI,EAAG,GAAI,CAAC,EACxE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,mBAAmB,EAAG,GAAI,EAAG,GAAI,CAAC,EACvE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,GAAI,EAAG,GAAI,CAAC,EACpE,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,GAAI,EAAG,GAAI,CAAC,EAC5E,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,mBAAmB,EAAG,GAAI,EAAG,GAAI,CAAC,EACpI,uBAAwB,CAAC,CAAC,8BAAkC,wBAA4B,WAAc,EAAG,GAAI,GAAI,CAAC,kBAAmB,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9J,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAClF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EACtF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,wBAAwB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EACrF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,gBAAgB,EAAG,GAAI,GAAI,GAAI,CAAC,EACjF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,yBAAyB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1F,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EACvE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,YAAgB,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EAChF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAChF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EACnF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,yBAAyB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EACpE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EACpE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,mBAAmB,EAAG,GAAI,GAAI,GAAI,CAAC,EACxE,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAClE,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EAChI,uBAAwB,CAAC,CAAC,8BAAkC,wBAA4B,WAAc,EAAG,GAAI,GAAI,CAAC,aAAc,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3J,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,uBAAuB,EAAG,GAAI,GAAI,GAAI,CAAC,EACzI,uBAAwB,CAAC,CAAC,8BAAkC,wBAA4B,WAAc,EAAG,GAAI,GAAI,CAAC,sBAAuB,oBAAoB,EAAG,GAAI,EAAG,GAAI,CAAC,EAC5K,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EACjI,uBAAwB,CAAC,CAAC,8BAAkC,wBAA4B,WAAc,EAAG,GAAI,GAAI,CAAC,cAAe,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1J,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,GAAI,GAAI,GAAI,CAAC,EACrE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,mBAAmB,EAAG,GAAI,GAAI,GAAI,CAAC,EACxE,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EACjF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EACpF,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/E,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,IAAI,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7D,QAAS,CAAC,CAAC,WAAc,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EACvE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EACpE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EACnE,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,GAAI,GAAI,GAAI,CAAC,EAChG,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,wBAAwB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,EAAG,GAAI,CAAC,EAC9F,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,EAAG,GAAI,CAAC,EAC7F,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,KAAK,EAAG,GAAI,EAAG,GAAI,CAAC,EACpF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,kBAAkB,EAAG,GAAI,EAAG,GAAI,CAAC,EACtE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,GAAI,EAAG,GAAI,CAAC,EACpE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,kBAAkB,EAAG,GAAI,EAAG,GAAI,CAAC,EACtE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,EAAG,GAAI,CAAC,EAClE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,KAAK,EAAG,GAAI,EAAG,GAAI,CAAC,EACzD,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,EAAG,GAAI,CAAC,EAC9D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,EAAG,EAAG,CAAC,EAC7D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EACvE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAChE,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,mBAAmB,EAAG,GAAI,GAAI,GAAI,CAAC,EACnG,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EACxF,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1F,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1F,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/F,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5F,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,GAAI,GAAI,GAAI,CAAC,EAChG,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,oBAAoB,EAAG,GAAI,GAAI,GAAI,CAAC,EACzE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,mBAAmB,EAAG,GAAI,GAAI,GAAI,CAAC,EACxE,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3F,aAAc,CAAC,CAAC,kBAAsB,WAAc,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,GAAI,GAAI,GAAI,CAAC,EAChG,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EACpE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EACpE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EACjE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EACpE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EACnE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EACnE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,qBAAqB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,qBAAqB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,oBAAoB,EAAG,GAAI,GAAI,GAAI,CAAC,EACzE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,qBAAqB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,oBAAoB,EAAG,GAAI,GAAI,GAAI,CAAC,EACzE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EACvE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,mBAAmB,EAAG,GAAI,GAAI,GAAI,CAAC,EACxE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,qBAAqB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,qBAAqB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,oBAAoB,EAAG,GAAI,GAAI,GAAI,CAAC,EACzE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,qBAAqB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,oBAAoB,EAAG,GAAI,GAAI,GAAI,CAAC,EACzE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,mBAAmB,EAAG,GAAI,GAAI,GAAI,CAAC,EACxE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,iBAAiB,EAAG,GAAI,GAAI,GAAI,CAAC,EACtE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAClE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAClE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EACpE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,mBAAmB,EAAG,GAAI,GAAI,GAAI,CAAC,EACxE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,kBAAkB,EAAG,GAAI,EAAG,GAAI,CAAC,EACtE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,uBAAuB,EAAG,GAAI,EAAG,GAAI,CAAC,EAC3E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,EAAG,GAAI,CAAC,EAC/D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,EAAG,GAAI,CAAC,EACnE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,wBAAwB,EAAG,GAAI,EAAG,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,GAAI,EAAG,GAAI,CAAC,EAChE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,EAAG,GAAI,CAAC,EAClE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,YAAa,mBAAmB,EAAG,GAAI,EAAG,GAAI,CAAC,EACpF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EACnE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,qBAAqB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EACvE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,mBAAmB,EAAG,GAAI,GAAI,GAAI,CAAC,EACxE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAChE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,kBAAmB,4CAA4C,EAAG,GAAI,EAAG,GAAI,CAAC,EACnH,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,sBAAsB,EAAG,GAAI,EAAG,GAAI,CAAC,EAC1E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,sBAAsB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EACjE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,GAAI,GAAI,GAAI,CAAC,EACrE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,+BAA+B,EAAG,GAAI,GAAI,GAAI,CAAC,EACpF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EACpE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EACjE,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,mBAAmB,EAAG,GAAI,GAAI,GAAI,CAAC,EACrI,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,iBAAiB,EAAG,GAAI,GAAI,GAAI,CAAC,EACnI,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAChE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EACpE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,2BAA4B,8BAA8B,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/G,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,cAAe,8BAA8B,EAAG,GAAI,GAAI,GAAI,CAAC,EAClG,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,YAAa,gDAAgD,EAAG,GAAI,GAAI,GAAI,CAAC,EAClH,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,gBAAiB,uCAAuC,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7G,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,6BAA8B,0CAA0C,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7H,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,4BAA6B,wDAAwD,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1I,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,gBAAiB,+BAA+B,EAAG,GAAI,GAAI,GAAI,CAAC,EACrG,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,iBAAkB,kCAAkC,EAAG,GAAI,GAAI,GAAI,CAAC,EACzG,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,GAAI,GAAI,GAAI,CAAC,EACrE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,GAAI,GAAI,GAAI,CAAC,EACrE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,mBAAmB,EAAG,GAAI,GAAI,GAAI,CAAC,EACxE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,EAAG,GAAI,CAAC,EAC5D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7D,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,iBAAiB,EAAG,GAAI,GAAI,GAAI,CAAC,EACnI,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EACjI,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EACvE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,YAAa,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EACpF,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,iBAAiB,EAAG,GAAI,GAAI,GAAI,CAAC,EACnI,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EACjI,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5D,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,oBAAoB,EAAG,GAAI,GAAI,GAAI,CAAC,EACtI,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,kBAAkB,EAAG,GAAI,EAAG,GAAI,CAAC,EACnI,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,wBAAwB,EAAG,GAAI,EAAG,GAAI,CAAC,EAC5E,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,GAAI,GAAI,GAAI,CAAC,EAClI,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EAChI,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7D,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,iBAAiB,EAAG,GAAI,GAAI,GAAI,CAAC,EACnI,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EACjI,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAChE,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,0BAA0B,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5I,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,wBAAwB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1I,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EACjE,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,wBAAwB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1I,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,sBAAsB,EAAG,GAAI,EAAG,GAAI,CAAC,EACvI,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,EAAG,GAAI,CAAC,EAC9D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAClE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EACpE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,sBAAsB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EACvE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EACpE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,mBAAmB,EAAG,GAAI,GAAI,GAAI,CAAC,EACxE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,oBAAoB,EAAG,GAAI,GAAI,GAAI,CAAC,EACzE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,mBAAmB,EAAG,GAAI,GAAI,GAAI,CAAC,EACxE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EACnE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,sBAAsB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EACpE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAClE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAChE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,GAAI,GAAI,GAAI,CAAC,EACrE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAClE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,qBAAqB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,mBAAmB,EAAG,GAAI,GAAI,GAAI,CAAC,EACxE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,KAAK,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EACpE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAChE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,GAAI,GAAI,GAAI,CAAC,EACrE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAClE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EACjE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,iBAAiB,EAAG,GAAI,GAAI,GAAI,CAAC,EACtE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,GAAI,GAAI,GAAI,CAAC,EACrE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,KAAK,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAClE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAClE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAClE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAChE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,4BAA4B,EAAG,GAAI,GAAI,GAAI,CAAC,EACjF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,EAAG,GAAI,CAAC,EAClE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,wBAAwB,EAAG,GAAI,EAAG,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,EAAG,GAAI,CAAC,EACnE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,GAAI,EAAG,GAAI,CAAC,EAChE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,EAAG,GAAI,CAAC,EAC9D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,EAAG,GAAI,CAAC,EAC/D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,EAAG,GAAI,CAAC,EAC3D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,GAAI,GAAI,GAAI,CAAC,EACrE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,yBAAyB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EACpE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAClE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EACvE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAChE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EACnE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,KAAK,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,KAAK,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAChE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EACjE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EACnE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EACjE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EACnE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAChE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,EAAG,GAAI,CAAC,EAC9D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,EAAG,GAAI,CAAC,EAC5D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,EAAG,GAAI,CAAC,EAC5D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,EAAG,GAAI,CAAC,EAC3D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,MAAM,EAAG,GAAI,EAAG,GAAI,CAAC,EAC1D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,EAAG,GAAI,CAAC,EAC/D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,EAAG,GAAI,CAAC,EAClE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,MAAM,EAAG,GAAI,EAAG,GAAI,CAAC,EAC1D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,KAAK,EAAG,GAAI,EAAG,GAAI,CAAC,EACzD,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5D,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EACpI,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,GAAI,GAAI,GAAI,CAAC,EAClI,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAChE,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,qBAAqB,EAAG,GAAI,GAAI,GAAI,CAAC,EACvI,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,mBAAmB,EAAG,GAAI,GAAI,GAAI,CAAC,EACrI,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EACnE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAClE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,sBAAsB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,sBAAsB,EAAG,GAAI,EAAG,GAAI,CAAC,EAC1E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,mBAAmB,EAAG,GAAI,EAAG,GAAI,CAAC,EACvE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,GAAI,EAAG,GAAI,CAAC,EACpE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,GAAI,EAAG,GAAI,CAAC,EACpE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,EAAG,GAAI,CAAC,EAClE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,EAAG,GAAI,CAAC,EAC7D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,MAAM,EAAG,GAAI,EAAG,GAAI,CAAC,EAC1D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EACnE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EACjE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EACjE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5D,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,GAAI,GAAI,GAAI,CAAC,EAClI,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EAChI,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,iBAAiB,EAAG,GAAI,GAAI,GAAI,CAAC,EACtE,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,GAAI,GAAI,GAAI,CAAC,EAClI,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EAChI,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,iBAAiB,EAAG,GAAI,GAAI,GAAI,CAAC,EACtE,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9H,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,EAAG,GAAI,CAAC,EAC3H,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,EAAG,GAAI,CAAC,EACjE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,mBAAmB,EAAG,GAAI,GAAI,GAAI,CAAC,EACxE,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1F,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EACxF,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,qBAAqB,EAAG,GAAI,GAAI,GAAI,CAAC,EACvG,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5F,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3F,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1F,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1F,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3F,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,GAAI,EAAG,GAAI,CAAC,EACjG,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,EAAG,GAAI,CAAC,EAC/F,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EACjG,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5F,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7F,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7F,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/F,8BAA+B,CAAC,CAAC,yCAAkD,EAAG,GAAI,GAAI,CAAC,sBAAsB,EAAG,GAAI,GAAI,GAAI,CAAC,EACrI,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,0BAA0B,EAAG,GAAI,EAAG,GAAI,CAAC,EAC3G,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,mBAAmB,EAAG,GAAI,GAAI,GAAI,CAAC,EACrG,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,qBAAqB,EAAG,GAAI,GAAI,GAAI,CAAC,EACvG,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/F,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,qBAAqB,EAAG,GAAI,GAAI,GAAI,CAAC,EACvG,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,gCAAgC,EAAG,GAAI,GAAI,GAAI,CAAC,EAClH,mBAAoB,CAAC,CAAC,0BAAgC,EAAG,GAAI,GAAI,CAAC,6BAA6B,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/G,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EACjI,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EACzH,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,EAAG,GAAI,CAAC,EACxH,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,EAAG,GAAI,CAAC,EAC3D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAClE,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EACpI,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,GAAI,GAAI,GAAI,CAAC,EAClI,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,GAAI,GAAI,GAAI,CAAC,EACrE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,uBAAuB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5E,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,sBAAsB,EAAG,GAAI,GAAI,GAAI,CAAC,EACxI,uBAAwB,CAAC,CAAC,8BAAkC,wBAA4B,WAAc,EAAG,GAAI,GAAI,CAAC,qBAAsB,uBAAuB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/K,uBAAwB,CAAC,CAAC,8BAAkC,wBAA4B,WAAc,EAAG,GAAI,GAAI,CAAC,iBAAkB,iBAAiB,EAAG,GAAI,EAAG,GAAI,CAAC,EACpK,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EAChI,uBAAwB,CAAC,CAAC,8BAAkC,wBAA4B,WAAc,EAAG,GAAI,GAAI,CAAC,0BAA2B,0BAA0B,EAAG,GAAI,GAAI,GAAI,CAAC,EACvL,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,uBAAuB,EAAG,GAAI,GAAI,GAAI,CAAC,EACzI,uBAAwB,CAAC,CAAC,8BAAkC,wBAA4B,WAAc,EAAG,GAAI,GAAI,CAAC,cAAe,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EACvJ,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7H,uBAAwB,CAAC,CAAC,8BAAkC,wBAA4B,WAAc,EAAG,GAAI,GAAI,CAAC,eAAgB,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EACzJ,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,GAAI,EAAG,GAAI,CAAC,EAC7H,uBAAwB,CAAC,CAAC,8BAAkC,wBAA4B,WAAc,EAAG,GAAI,GAAI,CAAC,iBAAkB,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7J,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EAChI,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3H,uBAAwB,CAAC,CAAC,8BAAkC,wBAA4B,WAAc,EAAG,GAAI,GAAI,CAAC,SAAU,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EACvJ,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9H,uBAAwB,CAAC,CAAC,8BAAkC,wBAA4B,WAAc,EAAG,GAAI,GAAI,CAAC,WAAY,KAAK,EAAG,GAAI,GAAI,GAAI,CAAC,EACnJ,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EAChI,uBAAwB,CAAC,CAAC,8BAAkC,wBAA4B,WAAc,EAAG,GAAI,GAAI,CAAC,aAAc,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EACvJ,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EACjI,uBAAwB,CAAC,CAAC,8BAAkC,wBAA4B,WAAc,EAAG,GAAI,GAAI,CAAC,cAAe,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EACzJ,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EACnE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EACjE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EACnE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAClE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAChE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EACjE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,KAAK,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,mBAAmB,EAAG,GAAI,GAAI,GAAI,CAAC,EACxE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EACpE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EACjE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EACjE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EACpE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EACnE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EACnE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,oBAAoB,EAAG,GAAI,GAAI,GAAI,CAAC,EACzE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EACnE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,kBAAkB,EAAG,GAAI,GAAI,EAAG,CAAC,EACtE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,GAAI,GAAI,EAAG,CAAC,EAChE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,GAAI,GAAI,EAAG,CAAC,EAChE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EACpE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EACvE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAClE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,EAAG,GAAI,CAAC,EAC3D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,MAAM,EAAG,GAAI,EAAG,GAAI,CAAC,EAC1D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,EAAG,GAAI,CAAC,EAC/D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,EAAG,GAAI,CAAC,EAC/D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,GAAI,EAAG,GAAI,CAAC,EAChE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,EAAG,GAAI,CAAC,EAC5D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,EAAG,GAAI,CAAC,EACnE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,EAAG,EAAG,CAAC,EAC5D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,EAAG,EAAG,CAAC,EAC1D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,EAAG,GAAI,CAAC,EACnE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,KAAK,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAChE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,iBAAiB,EAAG,GAAI,GAAI,GAAI,CAAC,EACtE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAChE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAChE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EACpE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAClE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EACpE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EACjE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EACjE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAChE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAClE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,qBAAqB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAClE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,kBAAkB,EAAG,GAAI,GAAI,EAAG,CAAC,EACtE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,GAAI,EAAG,CAAC,EAC/D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,EAAG,CAAC,EAC5D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,KAAK,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAChE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EACnE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EACjE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,GAAI,GAAI,GAAI,CAAC,EACrE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,EAAG,CAAC,EAC9D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,GAAI,EAAG,CAAC,EAC/D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,MAAM,EAAG,GAAI,GAAI,EAAG,CAAC,EAC1D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,GAAI,EAAG,CAAC,EAC3D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EACvE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,GAAI,GAAI,GAAI,CAAC,EACrE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EACnE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,iBAAiB,EAAG,GAAI,EAAG,GAAI,CAAC,EACrE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,mBAAmB,EAAG,GAAI,GAAI,GAAI,CAAC,EACxE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,GAAI,EAAG,CAAC,EAC3D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,EAAG,CAAC,EAC5D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAClE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAClE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAChE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,GAAI,GAAI,GAAI,CAAC,EACrE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,KAAK,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,GAAI,EAAG,CAAC,EACjE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,GAAI,EAAG,CAAC,EAC7D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EACnE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EACpE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,yCAAyC,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9F,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,uBAAuB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,0BAA0B,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EACvE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EACjE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9D,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,GAAI,EAAG,CAAC,EAClE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,0CAA0C,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/F,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,iBAAiB,EAAG,GAAI,GAAI,GAAI,CAAC,EACtE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,GAAI,GAAI,GAAI,CAAC,EACrE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,GAAI,GAAI,GAAI,CAAC,EACrE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,EAAG,GAAI,CAAC,EAClE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,8BAA8B,EAAG,GAAI,EAAG,GAAI,CAAC,EAClF,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAClE,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,wBAAwB,EAAG,GAAI,GAAI,EAAG,CAAC,EAC5E,QAAS,CAAC,CAAC,WAAc,EAAG,GAAI,GAAI,CAAC,yBAAyB,EAAG,GAAI,GAAI,EAAG,CAAC,EAC7E,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,YAAgB,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EACzF,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,YAAgB,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5F,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,SAAU,YAAgB,CAAC,IAAI,EAAG,GAAI,GAAI,GAAI,CAAC,EACzF,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,YAAgB,CAAC,oBAAoB,EAAG,GAAI,GAAI,GAAI,CAAC,EACnG,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,YAAgB,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EACjG,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,YAAgB,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9F,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,SAAU,YAAgB,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EACvG,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,SAAU,YAAgB,CAAC,mBAAmB,EAAG,GAAI,GAAI,GAAI,CAAC,EACxG,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,SAAU,YAAgB,CAAC,mBAAmB,EAAG,GAAI,GAAI,GAAI,CAAC,EACxG,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,SAAU,YAAgB,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EACvG,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,YAAgB,CAAC,2BAA2B,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1G,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,YAAgB,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EACjG,OAAQ,CAAC,CAAC,QAAQ,EAAG,GAAI,YAAgB,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EACjE,OAAQ,CAAC,CAAC,QAAQ,EAAG,GAAI,YAAgB,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EACrE,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1E,OAAQ,CAAC,CAAC,QAAQ,EAAG,SAAU,YAAgB,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9E,OAAQ,CAAC,CAAC,QAAQ,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EACxE,OAAQ,CAAC,CAAC,QAAQ,EAAG,GAAI,YAAgB,CAAC,iBAAiB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3E,OAAQ,CAAC,CAAC,QAAQ,EAAG,GAAI,YAAgB,CAAC,mBAAmB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,wDAAwD,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3H,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,uDAAuD,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1H,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,wDAAwD,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3H,OAAQ,CAAC,CAAC,QAAQ,EAAG,GAAI,YAAgB,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EACvE,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9E,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAChF,OAAQ,CAAC,CAAC,QAAQ,EAAG,GAAI,YAAgB,CAAC,wBAAwB,EAAG,GAAI,GAAI,GAAI,CAAC,EAClF,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,qBAAqB,EAAG,GAAI,GAAI,GAAI,CAAC,EACxF,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,uBAAuB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1F,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,yBAAyB,EAAG,GAAI,EAAG,GAAI,CAAC,EAC3F,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,YAAgB,CAAC,GAAG,EAAG,GAAI,EAAG,GAAI,CAAC,EACjF,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,YAAgB,CAAC,oBAAoB,EAAG,GAAI,EAAG,GAAI,CAAC,EAClG,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,YAAgB,CAAC,oBAAoB,EAAG,GAAI,EAAG,GAAI,CAAC,EAClG,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,SAAU,YAAgB,CAAC,eAAe,EAAG,GAAI,EAAG,GAAI,CAAC,EACnG,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,SAAU,YAAgB,CAAC,gBAAgB,EAAG,GAAI,EAAG,GAAI,CAAC,EACpG,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,YAAgB,CAAC,qBAAqB,EAAG,GAAI,EAAG,GAAI,CAAC,EACnG,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,YAAgB,CAAC,qBAAqB,EAAG,GAAI,EAAG,GAAI,CAAC,EACnG,OAAQ,CAAC,CAAC,QAAQ,EAAG,GAAI,YAAgB,CAAC,2BAA2B,EAAG,GAAI,EAAG,GAAI,CAAC,EACpF,OAAQ,CAAC,CAAC,QAAQ,EAAG,GAAI,YAAgB,CAAC,2BAA2B,EAAG,GAAI,EAAG,GAAI,CAAC,EACpF,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5F,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5F,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5E,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1E,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,SAAU,YAAgB,CAAC,QAAS,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EACzG,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,YAAgB,CAAC,uBAAuB,EAAG,GAAI,GAAI,GAAI,CAAC,EACtG,KAAQ,CAAC,CAAC,QAAQ,EAAG,SAAU,YAAgB,CAAC,0BAA0B,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1F,KAAQ,CAAC,CAAC,QAAQ,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EACxE,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,SAAU,YAAgB,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/F,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,sBAAsB,EAAG,GAAI,GAAI,GAAI,CAAC,EACzF,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EACrF,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,GAAI,GAAI,GAAI,CAAC,EACnF,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,GAAI,GAAI,GAAI,CAAC,EACnF,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,mBAAmB,EAAG,GAAI,GAAI,GAAI,CAAC,EACtF,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EACjF,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,iBAAiB,EAAG,GAAI,GAAI,GAAI,CAAC,EACpF,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,qBAAqB,EAAG,GAAI,GAAI,GAAI,CAAC,EACxF,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,SAAU,YAAgB,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9F,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAChF,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9E,KAAQ,CAAC,CAAC,QAAQ,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EACvE,KAAQ,CAAC,CAAC,QAAQ,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EACxE,OAAQ,CAAC,CAAC,QAAQ,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EACxE,OAAQ,CAAC,CAAC,QAAQ,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EACxE,OAAQ,CAAC,CAAC,QAAQ,EAAG,SAAU,YAAgB,CAAC,KAAK,EAAG,GAAI,GAAI,GAAI,CAAC,EACrE,OAAQ,CAAC,CAAC,QAAQ,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EACvE,OAAQ,CAAC,CAAC,QAAQ,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EACvE,OAAQ,CAAC,CAAC,QAAQ,EAAG,SAAU,YAAgB,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1E,KAAQ,CAAC,CAAC,QAAQ,EAAG,SAAU,YAAgB,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,KAAQ,CAAC,CAAC,QAAQ,EAAG,SAAU,YAAgB,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3E,KAAQ,CAAC,CAAC,QAAQ,EAAG,SAAU,YAAgB,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1E,KAAQ,CAAC,CAAC,QAAQ,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EACxE,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/E,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7F,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5F,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7F,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,SAAU,YAAgB,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/F,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,SAAU,YAAgB,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EACjG,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,YAAgB,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EACxF,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,OAAQ,CAAC,CAAC,QAAQ,EAAG,SAAU,YAAgB,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5E,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,iBAAiB,EAAG,GAAI,GAAI,GAAI,CAAC,EACpF,KAAQ,CAAC,CAAC,QAAQ,EAAG,GAAI,YAAgB,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAClE,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,gBAAgB,EAAG,GAAI,EAAG,GAAI,CAAC,EAClF,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,iBAAkB,sBAAsB,EAAG,GAAI,EAAG,GAAI,CAAC,EAC1G,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,EAAG,GAAI,CAAC,EAC1E,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,SAAS,EAAG,GAAI,EAAG,GAAI,CAAC,EAC3E,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,MAAM,EAAG,GAAI,EAAG,GAAI,CAAC,EACxE,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,EAAG,GAAI,CAAC,EAC/E,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,EAAG,GAAI,CAAC,EAChF,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,SAAU,YAAgB,CAAC,SAAS,EAAG,GAAI,EAAG,GAAI,CAAC,EAC7F,OAAQ,CAAC,CAAC,QAAQ,EAAG,SAAU,YAAgB,CAAC,KAAK,EAAG,GAAI,EAAG,GAAI,CAAC,EACpE,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,oBAAoB,EAAG,GAAI,EAAG,GAAI,CAAC,EACtF,OAAQ,CAAC,CAAC,QAAQ,EAAG,GAAI,YAAgB,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EACxE,OAAQ,CAAC,CAAC,QAAQ,EAAG,GAAI,YAAgB,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EACxE,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3E,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAChF,OAAQ,CAAC,CAAC,QAAQ,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EACxE,OAAQ,CAAC,CAAC,QAAQ,EAAG,SAAU,YAAgB,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1E,OAAQ,CAAC,CAAC,QAAQ,EAAG,SAAU,YAAgB,CAAC,sBAAsB,EAAG,GAAI,GAAI,GAAI,CAAC,EACtF,OAAQ,CAAC,CAAC,QAAQ,EAAG,GAAI,YAAgB,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EACxE,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,wBAAwB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3F,OAAQ,CAAC,CAAC,QAAQ,EAAG,SAAU,YAAgB,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3E,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EACzE,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,yBAAyB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5F,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3E,OAAQ,CAAC,CAAC,QAAQ,EAAG,GAAI,YAAgB,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EACpE,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EAClF,OAAQ,CAAC,CAAC,QAAQ,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,EACxE,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC7E,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,oBAAoB,EAAG,GAAI,GAAI,GAAI,CAAC,EACvF,OAAQ,CAAC,CAAC,QAAQ,EAAG,SAAU,YAAgB,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1E,OAAQ,CAAC,CAAC,QAAQ,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EACtE,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1E,OAAQ,CAAC,CAAC,QAAQ,EAAG,SAAU,YAAgB,CAAC,OAAQ,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAClF,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1E,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9E,2BAA4B,CAAC,CAAC,gCAAgC,EAAG,GAAI,GAAI,CAAC,qBAAqB,EAAG,GAAI,GAAI,EAAG,CAAC,EAC9G,2BAA4B,CAAC,CAAC,iCAAkC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,oBAAqB,kBAAkB,EAAG,GAAI,GAAI,EAAG,CAAC,EAC1J,OAAQ,CAAC,CAAC,QAAQ,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EACtE,OAAQ,CAAC,CAAC,QAAQ,EAAG,SAAU,YAAgB,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1E,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,SAAU,YAAgB,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/F,KAAQ,CAAC,CAAC,QAAQ,EAAG,GAAI,YAAgB,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5E,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,SAAU,YAAgB,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/F,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,YAAgB,CAAC,QAAS,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAClG,OAAQ,CAAC,CAAC,QAAQ,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EACtE,OAAQ,CAAC,CAAC,QAAQ,EAAG,SAAU,YAAgB,CAAC,OAAQ,aAAa,EAAG,GAAI,EAAG,GAAI,CAAC,EACpF,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,SAAU,YAAgB,CAAC,GAAG,EAAG,GAAI,EAAG,GAAI,CAAC,EACvF,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,cAAc,EAAG,GAAI,GAAI,GAAI,CAAC,EACjF,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,YAAgB,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EACxF,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,YAAgB,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1F,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,YAAgB,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EACjG,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,YAAgB,CAAC,wBAAwB,EAAG,GAAI,GAAI,GAAI,CAAC,EACvG,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAChF,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EAClF,KAAQ,CAAC,CAAC,QAAQ,EAAG,SAAU,YAAgB,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1E,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,SAAU,YAAgB,CAAC,uBAAuB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5G,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,SAAU,YAAgB,CAAC,0BAA0B,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/G,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,YAAgB,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1F,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,YAAgB,CAAC,SAAS,EAAG,GAAI,GAAI,GAAI,CAAC,EACxF,OAAQ,CAAC,CAAC,QAAQ,EAAG,SAAU,YAAgB,CAAC,GAAG,EAAG,GAAI,GAAI,GAAI,CAAC,EACnE,OAAQ,CAAC,CAAC,QAAQ,EAAG,GAAI,YAAgB,CAAC,6BAA6B,EAAG,GAAI,GAAI,GAAI,CAAC,EACvF,KAAQ,CAAC,CAAC,QAAQ,EAAG,SAAU,YAAgB,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1E,KAAQ,CAAC,CAAC,QAAQ,EAAG,SAAU,YAAgB,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/E,KAAQ,CAAC,CAAC,QAAQ,EAAG,SAAU,YAAgB,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EAClF,KAAQ,CAAC,CAAC,QAAQ,EAAG,SAAU,YAAgB,CAAC,cAAe,wBAAwB,EAAG,GAAI,GAAI,GAAI,CAAC,EACvG,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,GAAI,CAAC,uCAAuC,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1G,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EACjI,uBAAwB,CAAC,CAAC,8BAAkC,uBAA0B,EAAG,GAAI,GAAI,CAAC,eAAe,EAAG,GAAI,GAAI,GAAI,CAAC,EACjI,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,SAAU,YAAgB,CAAC,OAAO,EAAG,GAAI,GAAI,GAAI,EAAG,IAAI,EAClG,KAAQ,CAAC,CAAC,QAAQ,EAAG,GAAI,YAAgB,CAAC,iBAAiB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC3E,KAAQ,CAAC,CAAC,QAAQ,EAAG,GAAI,YAAgB,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5E,KAAQ,CAAC,CAAC,QAAQ,EAAG,GAAI,YAAgB,CAAC,qBAAqB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/E,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,SAAU,YAAgB,CAAC,aAAa,EAAG,GAAI,GAAI,GAAI,CAAC,EAClG,OAAQ,CAAC,CAAC,QAAQ,EAAG,GAAI,YAAgB,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EACtE,OAAQ,CAAC,CAAC,QAAQ,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EACtE,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,YAAgB,CAAC,kBAAkB,EAAG,GAAI,GAAI,GAAI,CAAC,EACjG,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,YAAgB,CAAC,oBAAoB,EAAG,GAAI,GAAI,GAAI,CAAC,EACnG,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,SAAU,YAAgB,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EACjG,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,SAAU,YAAgB,CAAC,UAAU,EAAG,GAAI,GAAI,GAAI,CAAC,EAC/F,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,SAAU,YAAgB,CAAC,YAAY,EAAG,GAAI,GAAI,GAAI,CAAC,EACjG,OAAQ,CAAC,CAAC,QAAQ,EAAG,GAAI,YAAgB,CAAC,oBAAoB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9E,OAAQ,CAAC,CAAC,QAAQ,EAAG,GAAI,YAAgB,CAAC,oBAAoB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC9E,OAAQ,CAAC,CAAC,QAAQ,EAAG,SAAU,YAAgB,CAAC,MAAM,EAAG,GAAI,GAAI,GAAI,CAAC,EACtE,OAAQ,CAAC,CAAC,QAAQ,EAAG,SAAU,YAAgB,CAAC,GAAG,EAAG,GAAI,GAAI,GAAI,CAAC,EACnE,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,GAAI,YAAgB,CAAC,WAAW,EAAG,GAAI,GAAI,GAAI,CAAC,EAC1F,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,SAAU,YAAgB,CAAC,uBAAuB,EAAG,GAAI,GAAI,GAAI,CAAC,EAC5G,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,SAAU,YAAgB,CAAC,iBAAiB,EAAG,GAAI,GAAI,GAAI,CAAC,EACtG,YAAa,CAAC,CAAC,eAAgB,QAAQ,EAAG,SAAU,YAAgB,CAAC,QAAQ,EAAG,GAAI,GAAI,GAAI,CAAC,CAC/F,EAEAA,EAAM,UAAU,eAAiB,CAC/B,MAAO,cACP,MAAQ,eACR,KAAM,SACN,MAAO,SACP,KAAM,QACN,KAAM,QACN,KAAM,QACN,MAAO,QACP,KAAM,WACN,MAAO,WACP,KAAM,OACN,MAAO,OACP,KAAM,aACN,KAAM,eACN,MAAO,eACP,MAAO,WACP,OAAQ,WACR,KAAO,WACP,MAAQ,WACR,KAAM,gBACN,MAAO,gBACP,KAAM,mBACN,MAAO,mBACP,KAAM,mBACN,MAAO,mBACP,KAAM,mBACN,MAAO,mBACP,KAAM,+BACN,MAAO,+BACP,KAAM,+BACN,MAAO,+BACP,KAAM,+BACN,MAAO,+BACP,KAAM,eACN,KAAM,eACN,MAAO,eACP,MAAO,QACP,OAAQ,QACR,MAAO,MACP,KAAM,YACN,KAAM,aACN,MAAO,aACP,KAAM,aACN,MAAO,aACP,KAAM,wBACN,KAAM,wBACN,MAAO,wBACP,KAAM,OACR,EAEAA,EAAM,UAAU,gBAAkB,CAChC,QAAS,CACP,QAAS,CAAC,cAAe,EAAG,EAAG,GAAI,CAAC,oBAA0B,CAAC,EAC/D,QAAS,CAAC,cAAe,EAAG,GAAI,GAAI,CAAC,oBAA0B,CAAC,EAChE,QAAS,CAAC,cAAe,EAAG,GAAI,GAAI,CAAC,oBAA0B,CAAC,EAChE,QAAS,CAAC,cAAe,EAAG,GAAI,GAAI,CAAC,oBAA0B,CAAC,EAChE,QAAS,CAAC,cAAe,EAAG,GAAI,GAAI,CAAC,oBAA0B,CAAC,CAClE,EACA,QAAS,CACP,QAAS,CAAC,cAAe,EAAG,EAAG,GAAI,CAAC,oBAA0B,CAAC,EAC/D,QAAS,CAAC,cAAe,EAAG,GAAI,GAAI,CAAC,oBAA0B,CAAC,EAChE,QAAS,CAAC,cAAe,EAAG,GAAI,GAAI,CAAC,oBAA0B,CAAC,EAChE,QAAS,CAAC,cAAe,EAAG,GAAI,GAAI,CAAC,oBAA0B,CAAC,EAChE,QAAS,CAAC,cAAe,EAAG,GAAI,GAAI,CAAC,oBAA0B,CAAC,CAClE,EACA,uBAAwB,CACtB,QAAS,CAAC,6BAA8B,EAAG,GAAI,GAAI,CAAC,sCAA4C,CAAC,EACjG,QAAS,CAAC,6BAA8B,EAAG,GAAI,GAAI,CAAC,sCAA4C,CAAC,EACjG,QAAS,CAAC,6BAA8B,EAAG,GAAI,GAAI,CAAC,sCAA4C,CAAC,EACjG,QAAS,CAAC,6BAA8B,EAAG,GAAI,GAAI,CAAC,sCAA4C,CAAC,EACjG,QAAS,CAAC,6BAA8B,EAAG,GAAI,GAAI,CAAC,sCAA4C,CAAC,CACnG,EACA,uBAAwB,CACtB,QAAS,CAAC,6BAA8B,EAAG,GAAI,GAAI,CAAC,uCAA8C,oBAA0B,CAAC,EAC7H,QAAS,CAAC,6BAA8B,EAAG,GAAI,GAAI,CAAC,uCAA8C,oBAA0B,CAAC,EAC7H,QAAS,CAAC,6BAA8B,EAAG,GAAI,GAAI,CAAC,uCAA8C,oBAA0B,CAAC,EAC7H,QAAS,CAAC,6BAA8B,EAAG,GAAI,GAAI,CAAC,uCAA8C,oBAA0B,CAAC,EAC7H,QAAS,CAAC,6BAA8B,EAAG,GAAI,GAAI,CAAC,uCAA8C,oBAA0B,CAAC,CAC/H,EACA,uBAAwB,CACtB,QAAS,CAAC,6BAA8B,EAAG,GAAI,GAAI,CAAC,sCAA4C,CAAC,EACjG,QAAS,CAAC,6BAA8B,EAAG,GAAI,GAAI,CAAC,sCAA4C,CAAC,EACjG,QAAS,CAAC,6BAA8B,EAAG,GAAI,GAAI,CAAC,sCAA4C,CAAC,EACjG,QAAS,CAAC,6BAA8B,EAAG,GAAI,GAAI,CAAC,sCAA4C,CAAC,EACjG,QAAS,CAAC,6BAA8B,EAAG,GAAI,GAAI,CAAC,sCAA4C,CAAC,CACnG,EACA,uBAAwB,CACtB,QAAS,CAAC,6BAA8B,EAAG,GAAI,GAAI,CAAC,uCAA8C,oBAA0B,CAAC,EAC7H,QAAS,CAAC,6BAA8B,EAAG,GAAI,GAAI,CAAC,uCAA8C,oBAA0B,CAAC,EAC7H,QAAS,CAAC,6BAA8B,EAAG,GAAI,GAAI,CAAC,uCAA8C,oBAA0B,CAAC,EAC7H,QAAS,CAAC,6BAA8B,EAAG,GAAI,GAAI,CAAC,uCAA8C,oBAA0B,CAAC,EAC7H,QAAS,CAAC,6BAA8B,EAAG,GAAI,GAAI,CAAC,uCAA8C,oBAA0B,CAAC,CAC/H,EACA,QAAS,CACP,QAAS,CAAC,cAAe,EAAG,GAAI,GAAI,CAAC,oBAA0B,CAAC,EAChE,QAAS,CAAC,cAAe,EAAG,GAAI,GAAI,CAAC,oBAA0B,CAAC,EAChE,QAAS,CAAC,cAAe,EAAG,GAAI,GAAI,CAAC,oBAA0B,CAAC,EAChE,QAAS,CAAC,cAAe,EAAG,GAAI,GAAI,CAAC,oBAA0B,CAAC,EAChE,QAAS,CAAC,cAAe,EAAG,GAAI,GAAI,CAAC,oBAA0B,CAAC,CAClE,EACA,uBAAwB,CACtB,QAAS,CAAC,6BAA8B,EAAG,EAAG,GAAI,CAAC,sCAA4C,CAAC,EAChG,QAAS,CAAC,6BAA8B,EAAG,EAAG,GAAI,CAAC,sCAA4C,CAAC,EAChG,QAAS,CAAC,6BAA8B,EAAG,EAAG,GAAI,CAAC,sCAA4C,CAAC,EAChG,QAAS,CAAC,6BAA8B,EAAG,EAAG,GAAI,CAAC,sCAA4C,CAAC,EAChG,QAAS,CAAC,6BAA8B,EAAG,EAAG,GAAI,CAAC,sCAA4C,CAAC,CAClG,EACA,uBAAwB,CACtB,QAAS,CAAC,6BAA8B,EAAG,EAAG,GAAI,CAAC,uCAA8C,oBAA0B,CAAC,EAC5H,QAAS,CAAC,6BAA8B,EAAG,EAAG,GAAI,CAAC,uCAA8C,oBAA0B,CAAC,EAC5H,QAAS,CAAC,6BAA8B,EAAG,EAAG,GAAI,CAAC,uCAA8C,oBAA0B,CAAC,EAC5H,QAAS,CAAC,6BAA8B,EAAG,EAAG,GAAI,CAAC,uCAA8C,oBAA0B,CAAC,EAC5H,QAAS,CAAC,6BAA8B,EAAG,GAAI,GAAI,CAAC,uCAA8C,oBAA0B,CAAC,CAC/H,EACA,4BAA6B,CAC3B,QAAS,CAAC,6BAA8B,EAAG,GAAI,GAAI,CAAC,sCAA4C,CAAC,EACjG,QAAS,CAAC,6BAA8B,EAAG,GAAI,GAAI,CAAC,sCAA4C,CAAC,EACjG,QAAS,CAAC,6BAA8B,EAAG,GAAI,GAAI,CAAC,sCAA4C,CAAC,EACjG,QAAS,CAAC,6BAA8B,EAAG,GAAI,GAAI,CAAC,sCAA4C,CAAC,EACjG,QAAS,CAAC,6BAA8B,EAAG,GAAI,GAAI,CAAC,sCAA4C,CAAC,CACnG,EACA,4BAA6B,CAC3B,QAAS,CAAC,6BAA8B,EAAG,GAAI,GAAI,CAAC,uCAA8C,oBAA0B,CAAC,EAC7H,QAAS,CAAC,6BAA8B,EAAG,GAAI,GAAI,CAAC,uCAA8C,oBAA0B,CAAC,EAC7H,QAAS,CAAC,6BAA8B,EAAG,GAAI,GAAI,CAAC,uCAA8C,oBAA0B,CAAC,EAC7H,QAAS,CAAC,6BAA8B,EAAG,GAAI,GAAI,CAAC,uCAA8C,oBAA0B,CAAC,EAC7H,QAAS,CAAC,6BAA8B,EAAG,GAAI,GAAI,CAAC,uCAA8C,oBAA0B,CAAC,CAC/H,EACA,4BAA6B,CAC3B,QAAS,CAAC,6BAA8B,EAAG,GAAI,GAAI,CAAC,sCAA4C,CAAC,EACjG,QAAS,CAAC,6BAA8B,EAAG,GAAI,GAAI,CAAC,sCAA4C,CAAC,EACjG,QAAS,CAAC,6BAA8B,EAAG,GAAI,GAAI,CAAC,sCAA4C,CAAC,EACjG,QAAS,CAAC,6BAA8B,EAAG,GAAI,GAAI,CAAC,sCAA4C,CAAC,EACjG,QAAS,CAAC,6BAA8B,EAAG,GAAI,GAAI,CAAC,sCAA4C,CAAC,CACnG,EACA,4BAA6B,CAC3B,QAAS,CAAC,6BAA8B,EAAG,GAAI,GAAI,CAAC,uCAA8C,oBAA0B,CAAC,EAC7H,QAAS,CAAC,6BAA8B,EAAG,GAAI,GAAI,CAAC,uCAA8C,oBAA0B,CAAC,EAC7H,QAAS,CAAC,6BAA8B,EAAG,GAAI,GAAI,CAAC,uCAA8C,oBAA0B,CAAC,EAC7H,QAAS,CAAC,6BAA8B,EAAG,GAAI,GAAI,CAAC,uCAA8C,oBAA0B,CAAC,EAC7H,QAAS,CAAC,6BAA8B,EAAG,GAAI,GAAI,CAAC,uCAA8C,oBAA0B,CAAC,CAC/H,EACA,QAAS,CACP,QAAS,CAAC,cAAe,GAAI,GAAI,GAAI,CAAC,oBAA0B,CAAC,EACjE,QAAS,CAAC,cAAe,GAAI,GAAI,GAAI,CAAC,oBAA0B,CAAC,EACjE,QAAS,CAAC,cAAe,GAAI,GAAI,GAAI,CAAC,oBAA0B,CAAC,EACjE,QAAS,CAAC,cAAe,GAAI,GAAI,GAAI,CAAC,oBAA0B,CAAC,EACjE,QAAS,CAAC,cAAe,GAAI,EAAG,GAAI,CAAC,oBAA0B,CAAC,CAClE,EACA,QAAS,CACP,QAAS,CAAC,cAAe,GAAI,EAAG,GAAI,CAAC,oBAA0B,CAAC,EAChE,QAAS,CAAC,cAAe,GAAI,EAAG,GAAI,CAAC,oBAA0B,CAAC,EAChE,QAAS,CAAC,cAAe,GAAI,EAAG,GAAI,CAAC,oBAA0B,CAAC,EAChE,QAAS,CAAC,cAAe,GAAI,EAAG,GAAI,CAAC,oBAA0B,CAAC,EAChE,QAAS,CAAC,cAAe,GAAI,EAAG,GAAI,CAAC,oBAA0B,CAAC,CAClE,EACA,QAAS,CACP,QAAS,CAAC,cAAe,GAAI,GAAI,GAAI,CAAC,oBAA0B,CAAC,EACjE,QAAS,CAAC,cAAe,GAAI,GAAI,GAAI,CAAC,oBAA0B,CAAC,EACjE,QAAS,CAAC,cAAe,GAAI,GAAI,GAAI,CAAC,oBAA0B,CAAC,EACjE,QAAS,CAAC,cAAe,GAAI,GAAI,GAAI,CAAC,oBAA0B,CAAC,EACjE,QAAS,CAAC,cAAe,GAAI,GAAI,GAAI,CAAC,oBAA0B,CAAC,CACnE,EACA,QAAS,CACP,QAAS,CAAC,cAAe,GAAI,GAAI,GAAI,CAAC,oBAA0B,CAAC,EACjE,QAAS,CAAC,cAAe,GAAI,GAAI,GAAI,CAAC,oBAA0B,CAAC,EACjE,QAAS,CAAC,cAAe,GAAI,GAAI,GAAI,CAAC,oBAA0B,CAAC,EACjE,QAAS,CAAC,cAAe,GAAI,GAAI,GAAI,CAAC,oBAA0B,CAAC,EACjE,QAAS,CAAC,cAAe,GAAI,GAAI,GAAI,CAAC,oBAA0B,CAAC,CACnE,EACA,QAAS,CACP,QAAS,CAAC,cAAe,GAAI,GAAI,GAAI,CAAC,oBAA0B,CAAC,EACjE,QAAS,CAAC,cAAe,GAAI,GAAI,GAAI,CAAC,oBAA0B,CAAC,EACjE,QAAS,CAAC,cAAe,GAAI,GAAI,GAAI,CAAC,oBAA0B,CAAC,EACjE,QAAS,CAAC,cAAe,GAAI,GAAI,GAAI,CAAC,oBAA0B,CAAC,EACjE,QAAS,CAAC,cAAe,GAAI,GAAI,GAAI,CAAC,oBAA0B,CAAC,CACnE,EACA,QAAS,CACP,QAAS,CAAC,cAAe,GAAI,GAAI,GAAI,CAAC,oBAA0B,CAAC,EACjE,QAAS,CAAC,cAAe,GAAI,GAAI,GAAI,CAAC,oBAA0B,CAAC,EACjE,QAAS,CAAC,cAAe,GAAI,GAAI,GAAI,CAAC,oBAA0B,CAAC,EACjE,QAAS,CAAC,cAAe,GAAI,GAAI,GAAI,CAAC,oBAA0B,CAAC,EACjE,QAAS,CAAC,cAAe,GAAI,GAAI,GAAI,CAAC,oBAA0B,CAAC,CACnE,EACA,QAAS,CACP,QAAS,CAAC,cAAe,GAAI,GAAI,GAAI,CAAC,oBAA0B,CAAC,EACjE,QAAS,CAAC,cAAe,GAAI,GAAI,GAAI,CAAC,oBAA0B,CAAC,EACjE,QAAS,CAAC,cAAe,GAAI,GAAI,GAAI,CAAC,oBAA0B,CAAC,EACjE,QAAS,CAAC,cAAe,GAAI,GAAI,GAAI,CAAC,oBAA0B,CAAC,EACjE,QAAS,CAAC,cAAe,GAAI,GAAI,GAAI,CAAC,oBAA0B,CAAC,CACnE,EACA,QAAS,CACP,QAAS,CAAC,cAAe,GAAI,GAAI,GAAI,CAAC,oBAA0B,CAAC,EACjE,QAAS,CAAC,cAAe,GAAI,GAAI,GAAI,CAAC,oBAA0B,CAAC,EACjE,QAAS,CAAC,cAAe,GAAI,GAAI,GAAI,CAAC,oBAA0B,CAAC,EACjE,QAAS,CAAC,cAAe,GAAI,GAAI,GAAI,CAAC,oBAA0B,CAA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,CAAC,8DAA0E,CAAC,EACvJ,cAAe,CAAC,8CAA+C,GAAI,GAAI,GAAI,CAAC,8DAA0E,CAAC,EACvJ,cAAe,CAAC,8CAA+C,GAAI,GAAI,GAAI,CAAC,8DAA0E,CAAC,EACvJ,cAAe,CAAC,8CAA+C,GAAI,GAAI,GAAI,CAAC,8DAA0E,CAAC,EACvJ,cAAe,CAAC,8CAA+C,GAAI,GAAI,GAAI,CAAC,8DAA0E,CAAC,EACvJ,cAAe,CAAC,8CAA+C,GAAI,GAAI,GAAI,CAAC,8DAA0E,CAAC,EACvJ,cAAe,CAAC,8CAA+C,GAAI,GAAI,GAAI,CAAC,8DAA0E,CAAC,EACvJ,cAAe,CAAC,8CAA+C,GAAI,GAAI,GAAI,CAAC,8DAA0E,CAAC,EACvJ,cAAe,CAAC,8CAA+C,GAAI,EAAG,GAAI,CAAC,8DAA0E,CAAC,EACtJ,cAAe,CAAC,8CAA+C,GAAI,EAAG,GAAI,CAAC,8DAA0E,CAAC,EACtJ,cAAe,CAAC,8CAA+C,GAAI,EAAG,GAAI,CAAC,8DAA0E,CAAC,EACtJ,cAAe,CAAC,8CAA+C,GAAI,EAAG,GAAI,CAAC,8DAA0E,CAAC,EACtJ,cAAe,CAAC,8CAA+C,GAAI,EAAG,GAAI,CAAC,8DAA0E,CAAC,EACtJ,cAAe,CAAC,8CAA+C,GAAI,EAAG,GAAI,CAAC,8DAA0E,CAAC,EACtJ,cAAe,CAAC,8CAA+C,GAAI,EAAG,GAAI,CAAC,8DAA0E,CAAC,EACtJ,cAAe,CAAC,8CAA+C,GAAI,EAAG,GAAI,CAAC,8DAA0E,CAAC,EACtJ,cAAe,CAAC,8CAA+C,GAAI,EAAG,GAAI,CAAC,8DAA0E,CAAC,EACtJ,cAAe,CAAC,8CAA+C,GAAI,EAAG,GAAI,CAAC,8DAA0E,CAAC,EACtJ,cAAe,CAAC,8CAA+C,GAAI,GAAI,GAAI,CAAC,8DAA0E,CAAC,EACvJ,cAAe,CAAC,8CAA+C,GAAI,GAAI,GAAI,CAAC,8DAA0E,CAAC,EACvJ,cAAe,CAAC,8CAA+C,GAAI,GAAI,GAAI,CAAC,8DAA0E,CAAC,EACvJ,cAAe,CAAC,8CAA+C,GAAI,GAAI,GAAI,CAAC,8DAA0E,CAAC,EACvJ,cAAe,CAAC,8CAA+C,GAAI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,GAAI,EAAE,EAC5C,6BAA8B,CAAC,cAAe,GAAI,GAAI,EAAE,EACxD,6BAA8B,CAAC,cAAe,GAAI,GAAI,EAAE,EACxD,6BAA8B,CAAC,cAAe,GAAI,GAAI,EAAE,EACxD,6BAA8B,CAAC,cAAe,GAAI,GAAI,EAAE,EACxD,6BAA8B,CAAC,cAAe,GAAI,GAAI,EAAE,EACxD,uBAAwB,CAAC,QAAS,GAAI,GAAI,EAAE,EAC5C,6BAA8B,CAAC,cAAe,GAAI,GAAI,EAAE,EACxD,6BAA8B,CAAC,cAAe,GAAI,GAAI,EAAE,EACxD,6BAA8B,CAAC,cAAe,GAAI,GAAI,EAAE,EACxD,6BAA8B,CAAC,cAAe,GAAI,GAAI,EAAE,EACxD,6BAA8B,CAAC,cAAe,GAAI,GAAI,EAAE,EACxD,uBAAwB,CAAC,QAAS,GAAI,GAAI,EAAE,EAC5C,6BAA8B,CAAC,cAAe,GAAI,GAAI,EAAE,EACxD,6BAA8B,CAAC,cAAe,GAAI,GAAI,EAAE,EACxD,6BAA8B,CAAC,cAAe,GAAI,GAAI,EAAE,EACxD,6BAA8B,CAAC,cAAe,GAAI,GAAI,EAAE,EACxD,6BAA8B,CAAC,cAAe,GAAI,GAAI,EAAE,EACxD,uBAAwB,CAAC,QAAS,GAAI,GAAI,EAAE,EAC5C,6BAA8B,CAAC,cAAe,GAAI,GAAI,EAAE,EACxD,6BAA8B,CAAC,cAAe,GAAI,GAAI,EAAE,EACxD,6BAA8B,CAAC,cAAe,GAAI,GAAI,EAAE,EACxD,6BAA8B,CAAC,cAAe,GAAI,GAAI,EAAE,EACxD,6BAA8B,CAAC,cAAe,GAAI,GAAI,EAAE,EACxD,uBAAwB,CAAC,QAAS,GAAI,GAAI,EAAE,EAC5C,6BAA8B,CAAC,cAAe,GAAI,GAAI,EAAE,EACxD,6BAA8B,CAAC,cAAe,GAAI,GAAI,EAAE,EACxD,6BAA8B,CAAC,cAAe,GAAI,GAAI,EAAE,EACxD,6BAA8B,CAAC,cAAe,GAAI,GAAI,EAAE,EACxD,6BAA8B,CAAC,cAAe,GAAI,GAAI,EAAE,EACxD,uBAAwB,CAAC,QAAS,GAAI,GAAI,EAAE,EAC5C,6BAA8B,CAAC,cAAe,GAAI,GAAI,EAAE,EACxD,6BAA8B,CAAC,cAAe,GAAI,GAAI,EAAE,EACxD,6BAA8B,CAAC,cAAe,GAAI,GAAI,EAAE,EACxD,6BAA8B,CAAC,cAAe,GAAI,GAAI,EAAE,EACxD,6BAA8B,CAAC,cAAe,GAAI,GAAI,EAAE,EACxD,uBAAwB,CAAC,QAAS,GAAI,EAAG,EAAE,EAC3C,6BAA8B,CAAC,cAAe,GAAI,EAAG,EAAE,EACvD,6BAA8B,CAAC,cAAe,GAAI,EAAG,EAAE,EACvD,6BAA8B,CAAC,cAAe,GAAI,EAAG,EAAE,EACvD,6BAA8B,CAAC,cAAe,GAAI,EAAG,EAAE,EACvD,6BAA8B,CAAC,cAAe,GAAI,EAAG,EAAE,EACvD,uBAAwB,CAAC,QAAS,GAAI,GAAI,EAAE,EAC5C,uBAAwB,CAAC,QAAS,GAAI,GAAI,EAAE,EAC5C,2BAA4B,CAAC,YAAa,GAAI,GAAI,EAAE,EACpD,4BAA6B,CAAC,aAAc,GAAI,GAAI,EAAE,EACtD,4BAA6B,CAAC,aAAc,GAAI,GAAI,EAAE,EACtD,4BAA6B,CAAC,aAAc,GAAI,GAAI,EAAE,EACtD,4BAA6B,CAAC,aAAc,GAAI,GAAI,EAAE,EACtD,4BAA6B,CAAC,aAAc,GAAI,GAAI,EAAE,CACxD,EAGI,OAAOJ,EAAY,KACjB,OAAOC,EAAW,KAAeA,EAAO,UAC1CD,EAAUC,EAAO,QAAUG,GAE7BJ,EAAQ,eAAiBI,GAChB,OAAO,QAAW,YAAc,OAAO,IAChD,OAAO,UAAY,CACjB,OAAOA,CACT,CAAC,EAEDF,EAAK,eAAiBE,CAE1B,GAAG,KAAK,UAAY,CAClB,OAAO,OAAS,OAAO,OAAW,IAAc,OAAS,OAC3D,EAAE,CAAC,ICvyJG,SAAU4D,EAAgBC,EAAyBC,EAAqBC,EAAuBC,EAAiB,CAClH,MAAO,CAAEH,gBAAAA,EAAiBC,YAAAA,EAAaC,cAAAA,EAAeC,UAAAA,CAAS,CACnE,CCXM,IAAOC,EAAP,MAAOA,CAAkB,CAENC,WACAC,OAFrBC,YACqBF,EACAC,EAAc,CADd,KAAAD,WAAAA,EACA,KAAAC,OAAAA,CAClB,CAMHE,WAAWF,EAAc,CACrB,OAAO,IAAIF,EAAmB,KAAKC,WAAYC,CAAM,CACzD,CAEAG,eAAa,CACT,OAAO,KAAKJ,UAChB,CAEAK,WAAS,CACL,OAAO,KAAKJ,MAChB,GClBE,IAAOK,EAAP,KAAsB,CAOHC,cACAC,YAFrBC,YACqBF,EACAC,EAA+B,CAD/B,KAAAD,cAAAA,EACA,KAAAC,YAAAA,CAClB,CAEHE,kBAAgB,CACZ,OAAO,KAAKH,aAChB,CAEAI,gBAAc,CACV,OAAO,KAAKH,WAChB,GAUE,SAAUI,GAAoBC,EAAyBC,EAAqBC,EAAuBC,EAAiB,CACtH,OAAO,IAAIV,EAAgB,IAAIW,EAAmBJ,EAAiBC,CAAW,EAAG,IAAIG,EAAmBF,EAAeC,CAAS,CAAC,CACrI,CChCA,IAAYE,GAAZ,SAAYA,EAA4B,CAIpCA,OAAAA,EAAAA,EAAA,QAAA,CAAA,EAAA,UAIAA,EAAAA,EAAA,KAAA,CAAA,EAAA,OARQA,CASZ,EATYA,IAA4B,CAAA,CAAA,EAe3BC,GAAP,KAA+B,CAUZC,MACAC,WACAC,WACAC,KACAC,MALrBC,YACqBL,EACAC,EACAC,EACAC,EACAC,EAAsB,CAJtB,KAAAJ,MAAAA,EACA,KAAAC,WAAAA,EACA,KAAAC,WAAAA,EACA,KAAAC,KAAAA,EACA,KAAAC,MAAAA,CAClB,CAEHE,UAAQ,CACJ,OAAO,KAAKN,KAChB,CAEAO,eAAa,CACT,OAAO,KAAKN,UAChB,CAEAO,eAAa,CACT,OAAO,KAAKN,UAChB,CAEAO,SAAO,CACH,OAAO,KAAKN,IAChB,CAEAO,UAAQ,CACJ,OAAO,KAAKN,KAChB,GCpDJ,IAAYO,EAAZ,SAAYA,EAAiB,CACzBA,OAAAA,EAAAA,EAAA,KAAA,CAAA,EAAA,OACAA,EAAAA,EAAA,KAAA,CAAA,EAAA,OACAA,EAAAA,EAAA,KAAA,CAAA,EAAA,OAHQA,CAIZ,EAJYA,GAAiB,CAAA,CAAA,EAMjBC,GAAZ,SAAYA,EAAqB,CAI7BA,OAAAA,EAAAA,EAAA,QAAA,CAAA,EAAA,UAJQA,CAKZ,EALYA,IAAqB,CAAA,CAAA,EAOpBC,GAAP,KAA2B,CAERC,IACAC,SAFrBC,YACqBF,EACAC,EAA+B,CAD/B,KAAAD,IAAAA,EACA,KAAAC,SAAAA,CAClB,CAEHE,QAAM,CACF,OAAO,KAAKH,GAChB,CAEAI,aAAW,CACP,OAAO,KAAKH,QAChB,GCfE,IAAOI,EAAP,MAAOA,CAAuB,CASZC,OARZ,OAAgBC,aAAe,IAAIC,IAA+B,CACtE,CAACC,EAAkBC,KAAaC,EAAQD,IAAI,EAC5C,CAACD,EAAkBG,KAAaD,EAAQC,IAAI,EAC5C,CAACH,EAAkBI,KAAaF,EAAQE,IAAI,CAAC,CAChD,EAEO,OAAgBC,aAAe,IAAIN,IAAmC,CAAC,CAACO,GAAsBC,QAAgBC,EAAOD,OAAO,CAAC,CAAC,EAEtIE,YAAoBZ,EAA2C,CAA3C,KAAAA,OAAAA,CAA8C,CAElEa,UAAUC,EAAwB,CAC9B,IAAMC,EAAoD,CACtDC,GAAIF,EAAOE,GACXC,MAAOH,EAAOG,MACdC,YAAaJ,EAAOI,aAAaC,IAAI,KAAKC,kBAAkB,EAC5DC,IAAKA,CAACC,EAAGC,IAAQ,CACbT,EAAOO,IAAI,KAAME,CAAI,CACzB,GAEJ,OAAO,KAAKvB,OAAOa,UAAUE,CAAgB,CACjD,CAEAS,cAAcV,EAA0BS,EAAa,CACjD,KAAKvB,OAAOyB,QAAQ,mCAAoCX,EAAOE,GAAIO,CAAI,CAC3E,CAMAG,aAAaC,EAAuC,CAChD,IAAMC,EAAQ,KAAK5B,OAAO6B,SAAQ,EAClC,GAAI,CAACD,EACD,MAAM,IAAIE,MAAM,iEAAiE,EAErF,IAAMC,EAAmBJ,EAAUI,iBACnC,GAAIA,IAAqBC,QAAaD,EAAiBE,SAAW,EAC9D,MAAM,IAAIH,MAAM,mDAAmD,EAEvE,IAAMI,EAAaN,EAAMO,cAAa,EAChCC,EAAUR,EAAMZ,GAGhBqB,EAAyBN,EAAmB,EAAI,EACtD,OAAcO,EAAUC,+BAA+BL,EAAY,CAE/DM,kBAAmBT,EAAmB,CAACA,EAAkB,GAAG,YAAY,EAAIC,OAC5ES,uBAAwB,CAAOb,EAA8Bc,IAAkFC,GAAA,sBAC3I,GAAIf,EAAMZ,KAAOoB,EACb,OAEJ,IAAMQ,EAAwB,KAAKC,+BAA+BjB,EAAOc,EAAUX,CAAgB,EACnG,GAAI,CAACa,EACD,OAEJ,IAAME,EAAQ,CACVC,gBAAiBL,EAASM,WAC1BC,YAAaL,EAAsBK,YAAcZ,EACjDa,cAAeR,EAASM,WACxBG,UAAWP,EAAsBO,WAE/BC,EAAaxB,EAAMyB,gBAAgB,CACrCN,gBAAiBL,EAASM,WAC1BC,YAAaL,EAAsBK,YAAcZ,EACjDa,cAAeR,EAASM,WACxBG,UAAWP,EAAsBK,YACpC,EAGD,OAAIlB,GAAoBa,EAAsBU,OAASvB,GAAoBqB,IAAerB,EACtF,OAIG,CACHwB,aAHW,MAAM5B,EAAU6B,YAAYZ,EAAsBU,IAAI,GAAGnC,IAAKsC,GAAS9B,EAAU+B,kBAAkBD,EAAM,KAAKE,gBAAgBb,CAAK,CAAC,CAAC,EAG7H3B,IAAKsC,IACb,CACHxC,MAAOwC,EAAKG,SAAQ,EACpBC,KAAM,KAAKC,uBAAuBL,EAAKM,QAAO,CAAE,EAChDC,WAAYP,EAAKQ,cAAa,EAC9BnB,MAAO,KAAKoB,cAAcT,EAAKU,SAAQ,CAAE,EACzCC,OAAQX,EAAKY,cAAa,GAEjC,EACDC,WAAY3C,EAAU2C,WAE9B,GACH,CACL,CASQzB,+BACJjB,EACAc,EACAX,EACAwC,EAAc,GAAE,CAGhB,GAAI,CAACxC,EACD,OAAOH,EAAM4C,qBAAqB9B,CAAQ,EAE9C,IAAM+B,EAAaC,KAAKC,IAAI,EAAGjC,EAASkC,OAASL,CAAW,EACtDM,EAAYC,EAAgBpC,EAASM,WAAYyB,EAAY/B,EAASM,WAAYN,EAASkC,MAAM,EACjGG,EAAOnD,EAAMyB,gBAAgBwB,CAAS,EACtCG,EAAeD,EAAKE,YAAYlD,CAAgB,EACtD,GAAIiD,IAAiB,GAIrB,MAAO,CACH1B,KAAMyB,EAAKG,MAAMF,EAAe,CAAC,EACjC/B,YAAa4B,EAAU5B,YAAc+B,EAAe,EACpD7B,UAAWT,EAASkC,OAE5B,CAEAO,QAAM,CACF,KAAKnF,OAAOmF,OAAM,CACtB,CAEAC,OAAK,CACD,KAAKpF,OAAOoF,MAAK,CACrB,CAEAC,mBAAmBvC,EAAwBiC,EAAY,CACnD,KAAK/E,OAAOsF,aAAa,8CAA+C,CACpE,CACIxC,MAAO,KAAKoB,cAAcpB,CAAK,EAC/BiC,KAAAA,EACH,CACJ,CACL,CAEAQ,YAAU,CACN,OAAO,KAAKvF,OAAOuF,WAAU,GAAMvD,MACvC,CAEAwD,mBAAiB,CACb,KAAKxF,OAAOyB,QAAQ,6CAA8C,+BAAgC,CAAA,CAAE,CACxG,CAEAgE,eAAe3C,EAAsB,CACjC,OAAO,KAAK9C,OAAO6B,SAAQ,GAAIwB,gBAAgB,KAAKa,cAAcpB,CAAK,EAAU9C,EAAO0F,oBAAoBC,EAAE,GAAK,EACvH,CAEAC,YAAY5C,EAAkB,CAC1B,OAAO,KAAKhD,OAAO6B,SAAQ,GAAIgE,eAAe7C,CAAU,GAAK,EACjE,CAEA8C,kBAAgB,CACZ,OAAO,KAAK9F,OAAO6B,SAAQ,GAAIkE,aAAY,GAAM,CACrD,CAEAC,gBAAc,CACV,OAAO,KAAKC,mBAAmB,KAAKjG,OAAO6B,SAAQ,GAAIqE,kBAAiB,EAAGF,eAAc,GAAM,CAAEhD,WAAY,EAAG4B,OAAQ,CAAC,CAAE,CAC/H,CAEAuB,aAAW,CACP,IAAMzD,EAAW,KAAK1C,OAAOmG,YAAW,GAAM,CAAEvB,OAAQ,EAAG5B,WAAY,CAAC,EACxE,OAAO,KAAKiD,mBAAmBvD,CAAQ,CAC3C,CAEA0D,YAAY1D,EAA4B,CACpC,KAAK1C,OAAOoG,YAAY,KAAKC,iBAAiB3D,CAAQ,CAAC,CAC3D,CAEA4D,cAAY,CACR,IAAMC,EAAY,KAAKvG,OAAOsG,aAAY,GAAM,CAAErD,YAAa,EAAGF,gBAAiB,EAAGI,UAAW,EAAGD,cAAe,CAAC,EACpH,OAAO,KAAKS,gBAAgB4C,CAAS,CACzC,CAEAC,aAAaD,EAA0B,CACnC,KAAKvG,OAAOwG,aAAa,KAAKtC,cAAcqC,CAAS,CAAC,CAC1D,CAEAE,YAAY3D,EAAsB,CAC9B,KAAK9C,OAAO0G,oBAAoB,KAAKxC,cAAcpB,CAAK,CAAC,CAC7D,CAEA6D,iBAAiBC,EAAwD,CACrE,OAAO,KAAK5G,OAAO6G,WAAYC,GAAc,CACzCF,EAAS,KAAKnB,eAAe,KAAK9B,gBAAgBmD,EAAWhE,KAAK,CAAC,CAAC,CACxE,CAAC,CACL,CAEQuD,iBAAiB3D,EAA4B,CACjD,OAAO,IAAWqE,GAASrE,EAASsE,cAAa,EAAItE,EAASuE,UAAS,CAAE,CAC7E,CAEQhB,mBAAmBvD,EAA0B,CACjD,OAAO,IAAIwE,EAAmBxE,EAASM,WAAYN,EAASkC,MAAM,CACtE,CAEQV,cAAcpB,EAAsB,CACxC,IAAMqE,EAAgBrE,EAAMsE,iBAAgB,EACtCC,EAAcvE,EAAMkD,eAAc,EACxC,OAAO,IAAWsB,EAAMH,EAAcH,cAAa,EAAIG,EAAcF,UAAS,EAAII,EAAYL,cAAa,EAAIK,EAAYJ,UAAS,CAAE,CAC1I,CAEQtD,gBAAgBb,EAAoB,CACxC,OAAOyE,GAAoBzE,EAAMC,gBAAiBD,EAAMG,YAAaH,EAAMI,cAAeJ,EAAMK,SAAS,CAC7G,CAEQW,uBAAuBD,EAAkC,CAC7D,OAAQA,EAAI,CACR,KAAK2D,GAA6BC,KAC9B,OAAcnF,EAAUoF,mBAAmBD,KAC/C,QACI,OAAcnF,EAAUoF,mBAAmBC,QACnD,CACJ,CAEQvG,mBAAmBwG,EAAgC,CACvD,IAAMC,EAAU9H,EAAwBE,aAAa6H,IAAIF,EAAWG,OAAM,CAAE,GAAY1H,EAAQ2H,QAC1FC,EAAWlI,EAAwBS,aAAasH,IAAIF,EAAWM,YAAW,CAAE,GAAK,EACvF,OAAOL,EAAUI,CACrB,CAEAE,aAAW,CACP,IAAMC,EAAgB,IAAIlB,EAAmB,EAAG,CAAC,EAC3CmB,EAAe,KAAKrC,eAAc,EAClClD,EAAQ,IAAIwF,EAAgBF,EAAeC,CAAY,EAC7D,OAAO,KAAK5C,eAAe3C,CAAK,CACpC,GC1OJ,IAAsByF,GAAuB,IAAA,CAAvC,MAAgBA,CAAuB,CACzC,OAAgBC,iBAAmB,wBAE3BC,GACAC,QAAU,GACCC,OAMnBC,YAAsBD,EAA6CF,EAAsB,CACrF,KAAKE,OAASA,EACd,KAAKF,GAAKA,CACd,CAKAI,OAAK,CACD,GAAI,KAAKJ,KAAOK,OACZ,MAAM,IAAIC,MAAM,gCAAgC,EAEpD,OAAO,KAAKN,EAChB,CAEAO,MAAMP,EAAU,CACZ,KAAKA,GAAKA,CACd,CAEAQ,WAAWP,EAAgB,CACvB,KAAKA,QAAUA,CACnB,CAEAQ,WAAS,CACL,OAAO,KAAKR,OAChB,CAKUS,gBAAc,CAAU,CAWlCC,gBAAc,CACV,KAAKC,iBAAgB,EACrB,KAAKC,YAAW,CACpB,CAWAC,SAAO,CACH,KAAKF,iBAAgB,CACzB,CAOAG,uBAAuBd,KAAqBe,EAA2B,CAC/Df,EACAe,EAAaC,QAASC,GAAYA,EAAQC,UAAUC,OAAOtB,EAAwBC,gBAAgB,CAAC,EAEpGiB,EAAaC,QAASC,GAAYA,EAAQC,UAAUE,IAAIvB,EAAwBC,gBAAgB,CAAC,CAEzG,SAjFkBD,CAAuB,GAAA,ECEvC,IAAOwB,EAAP,cAA6CC,CAAuB,CACrDC,QACTC,WACSC,KASjBC,YAAYC,EAA6CC,EAAYL,EAAsBC,EAAoBC,EAAmC,CAC9I,MAAME,EAAQC,CAAE,EAChB,KAAKL,QAAUA,EACf,KAAKC,WAAaA,EAClB,KAAKC,KAAOA,CAChB,CAEAI,YAAU,CACN,OAAO,KAAKN,OAChB,CAEAO,aAAW,CACP,MAAO,CACHL,KAAM,KAAKA,KACXM,OAAQ,GACRC,MAAOC,EAAgB,KAAKT,WAAY,EAAG,KAAKA,WAAY,CAAC,EAErE,CAEAU,eAAa,CACT,OAAO,KAAKV,UAChB,CAEAW,cAAcX,EAAkB,CAC5B,KAAKA,WAAaA,CACtB,CAEAY,aAAW,CACP,KAAKT,OAAOU,qBAAqB,IAAI,CACzC,CACAC,kBAAgB,CACZ,KAAKX,OAAOY,wBAAwB,IAAI,CAC5C,GC/CJ,IAAYC,EAAZ,SAAYA,EAA+B,CACvCA,OAAAA,EAAA,QAAA,UACAA,EAAA,MAAA,QAFQA,CAGZ,EAHYA,GAA+B,CAAA,CAAA,EAW9BC,EAAP,cAA2CC,CAAuB,CAC5DC,kBACAC,sBACAC,SACAC,aACAC,KACAC,eAURC,YAAYC,EAA6CC,EAAYC,EAAoBN,EAAsBC,EAAuCF,EAAW,GAAK,CAClK,MAAMK,EAAQC,CAAE,EAChB,KAAKP,sBAAwB,KAAKM,OAAOG,4BAA4B,CAAA,CAAE,EACvE,KAAKP,aAAeA,EACpB,KAAKC,KAAOA,EACZ,KAAKF,SAAWA,EAChB,IAAMS,EAAqBC,SAASC,cAAc,KAAK,EACvDF,EAAmBH,GAAK,qCAAqCA,CAAE,GAC/DG,EAAmBG,UAAY,mBAAmB,KAAKV,IAAI,GAC3D,KAAKJ,kBAAoB,IAAIe,EAA8BR,EAAQC,EAAIG,EAAoBF,EAAmBF,EAAOS,gBAAgBC,MAAM,EAC3I,KAAKC,eAAc,CACvB,CAMQC,8BAA4B,CAChC,IAAMC,EAAkB,KAAKlB,SAAW,6BAA+B,qBAAqB,KAAKE,IAAI,GAC/FK,EAAa,KAAKY,cAAa,EACrC,MAAO,CACHC,MAAOC,EAAgBd,EAAY,EAAGA,EAAY,CAAC,EACnDe,QAAS,CACLJ,gBAAAA,EACAK,YAAa,GACbC,WAAmBnB,EAAOoB,uBAAuBC,4BACjDC,uBAAwB,CAAEC,MAAO,KAAK3B,YAAY,EAClD4B,wBAAyB,CAAED,MAAO,KAAK3B,YAAY,GAG/D,CAMA6B,qBAAqB9B,EAAiB,CAClC,KAAKA,SAAWA,EAChB,IAAM+B,EAAY,KAAKC,sBAAqB,EAAGD,UAC3C/B,GACA+B,EAAUE,OAAO,gBAAgB,KAAK/B,IAAI,EAAE,EAC5C6B,EAAUG,IAAI,uBAAuB,IAErCH,EAAUE,OAAO,uBAAuB,EACxCF,EAAUG,IAAI,gBAAgB,KAAKhC,IAAI,EAAE,GAE7C,KAAKiC,eAAc,CACvB,CAEAC,YAAU,CACN,OAAO,KAAKpC,QAChB,CAEAmB,eAAa,CACT,OAAO,KAAKrB,kBAAkBqB,cAAa,CAC/C,CAEAa,uBAAqB,CACjB,OAAO,KAAKlC,kBAAkBuC,WAAU,CAC5C,CAEUrB,gBAAc,CACpB,KAAKb,eAAiB,KAAKE,OAAOiC,wBAAwB,IAAK,CAE3D,KAAKR,qBAAqB,EAAI,CAClC,CAAC,CACL,CAEAS,aAAW,CACP,IAAMC,EAAU,KAAKrB,cAAa,IAAO,KAAKd,OAAOoC,SAAQ,GAAIC,aAAY,GAAM,GACnF,KAAKC,WAAWH,CAAO,EACnBA,IACA,KAAK1C,kBAAkByC,YAAW,EAElC,KAAKxC,sBAAsB6C,OAAO,CAAC,KAAK3B,6BAA4B,CAAE,CAAC,EAE/E,CACA4B,kBAAgB,CACZ,KAAK/C,kBAAkB+C,iBAAgB,EAEvC,KAAK9C,sBAAsB+C,MAAK,CACpC,CAEAC,SAAO,CACH,MAAMA,QAAO,EACb,KAAKjD,kBAAkBiD,QAAO,EAC9B,KAAK5C,eAAe4C,QAAO,CAC/B,GCjHE,IAAOC,EAAP,cAAoCC,CAAuB,CACrDC,qBACAC,eAERC,gBACAC,WAKAC,QAAuBC,SAASC,cAAc,KAAK,EAQnDC,YAAYC,EAA6CN,EAAyBF,EAAiC,CAE/G,MAAMQ,EAAQC,MAAS,EACvB,KAAKP,gBAAkBA,EACvB,KAAKF,qBAAuBA,EAC5B,KAAKG,WAAa,KAAKH,qBAAqBU,YAChD,CAEAC,aAAW,CACP,KAAKH,OAAOI,gBAAiBC,GAAY,CACrC,KAAKC,MAAMD,EAASE,QAAQ,IAAI,CAAC,EACjC,KAAKC,sBAAqB,CAC9B,CAAC,EACD,KAAKf,eAAiB,IAAIgB,eAAe,IAAK,CAC1C,KAAKD,sBAAqB,CAC9B,CAAC,EACD,KAAKf,eAAeiB,QAAQ,KAAKlB,oBAAoB,CACzD,CAEQgB,uBAAqB,CACzB,KAAKR,OAAOI,gBAAiBC,GAAY,CACrC,KAAKV,WAAa,KAAKH,qBAAqBU,aAC5CG,EAASM,WAAW,KAAKC,MAAK,CAAE,CACpC,CAAC,CACL,CAEAC,kBAAgB,CACZ,KAAKb,OAAOI,gBAAiBC,GAAY,CACrCA,EAASS,WAAW,KAAKF,MAAK,CAAE,CACpC,CAAC,EACD,KAAKnB,eAAesB,WAAU,CAClC,CAOAC,aAAaC,EAAW,CACpB,KAAKzB,qBAAqB0B,MAAMD,IAAMA,EAAM,IAChD,GCvDE,IAAOE,EAAP,cAAyCC,CAAuB,CACjDC,QACAC,SAQjBC,YAAYC,EAA6CC,EAAYJ,EAAsBC,EAA+B,CACtH,MAAME,EAAQC,CAAE,EAChB,KAAKJ,QAAUA,EAEf,KAAKA,QAAQK,MAAMC,MAAQ,OAC3B,KAAKL,SAAWA,CACpB,CAEAM,WAAWC,EAAgB,CACvB,MAAMD,WAAWC,CAAO,EAExB,KAAKC,uBAAuBD,EAAS,KAAKR,OAAO,CACrD,CAEAU,aAAW,CACP,KAAKP,OAAOQ,iBAAiB,IAAI,EACjC,KAAKJ,WAAW,EAAI,CACxB,CACAK,kBAAgB,CACZ,KAAKT,OAAOU,oBAAoB,IAAI,CACxC,CAEAC,YAAU,CACN,OAAO,KAAKd,OAChB,CACAe,aAAW,CACP,OAAO,KAAKd,QAChB,GClCE,IAAOe,EAAP,cAAsCC,CAAuB,CACvDC,SACAC,cAQRC,YAAYC,EAA6CC,EAAyBC,EAA6BC,EAAuB,CAClI,MAAMH,EAAQC,CAAe,EAC7B,KAAKH,cAAgB,IAAIM,EACrBJ,EACAC,EACAC,EACA,IAAI,EAER,KAAKL,SAAW,IAAIQ,EAAqBL,EAAQG,EAAiBD,CAAc,CACpF,CAEAI,aAAW,CACP,KAAKR,cAAcQ,YAAW,EAC9B,KAAKT,SAASS,YAAW,CAC7B,CAEAC,kBAAgB,CACZ,KAAKT,cAAcS,iBAAgB,EACnC,KAAKV,SAASU,iBAAgB,CAClC,CAEAC,SAAO,CACH,MAAMA,QAAO,EACb,KAAKV,cAAcU,QAAO,EAC1B,KAAKX,SAASW,QAAO,CACzB,GCvCE,IAAOC,EAAP,cAAyCC,CAAuB,CAC1DC,MACAC,UACAC,gBACAC,sBAURC,YAAYC,EAA6CC,EAAYC,EAAmBC,EAAiBP,EAAoBC,EAAwB,CACjJ,MAAMG,EAAQC,CAAE,EAChB,KAAKN,MAAQS,EAAgBF,EAAW,EAAGC,EAAS,CAAC,EACrD,KAAKP,UAAYA,EACjB,KAAKC,gBAAkBA,EACvB,KAAKC,sBAAwBE,EAAOK,4BAA4B,CAAA,CAAE,CACtE,CAEQC,8BAA4B,CAChC,MAAO,CACHX,MAAO,KAAKA,MACZY,QAAS,CACLV,gBAAiB,KAAKA,gBACtBD,UAAW,KAAKA,UAChBY,YAAa,GACbC,WAAmBT,EAAOU,uBAAuBC,6BAG7D,CAEAC,aAAW,CACP,KAAKd,sBAAsBe,OAAO,CAAC,KAAKP,6BAA4B,CAAE,CAAC,CAC3E,CAEAQ,kBAAgB,CACZ,KAAKhB,sBAAsBiB,MAAK,CACpC,GCpCJ,IAAAC,GAAsB,SAEtBC,GAA+B,SCNzB,IAAOC,EAAP,cAAsDC,CAAuB,CACvEC,cACAC,kBAAoB,EACpBC,sBACSC,UAETC,kBACAC,kBACAC,mBAQRC,YAAYC,EAA6CC,EAAYN,EAAmBH,EAA2C,CAC/H,MAAMQ,EAAQC,CAAE,EAChB,KAAKT,cAAgBA,EACrB,KAAKG,UAAYA,EACjB,KAAKD,sBAAwBM,EAAOE,4BAA4B,CAAA,CAAE,EAElE,KAAKC,WAAW,EAAK,EACrB,KAAKC,eAAc,CACvB,CAEUA,gBAAc,CACpB,MAAMA,eAAc,EACpB,KAAKR,kBAAoB,KAAKI,OAAOK,YAAaC,GAAqD,CAEnG,IAAMC,EAAaD,EAAiBE,QAAQC,UAAUF,WACtD,KAAKG,cAAcH,CAAU,CACjC,CAAC,EAED,KAAKT,mBAAqB,KAAKE,OAAOW,aAAa,IAAK,CACpD,KAAKC,iBAAgB,CACzB,CAAC,EAED,KAAKf,kBAAoB,KAAKG,OAAOa,YAAY,KAAKC,QAAQC,KAAK,IAAI,CAAC,CAC5E,CAMAD,QAAQR,EAAiD,CACrD,IAAMC,EAAaD,EAAiBE,QAAQC,UAAUF,WAElDA,GAAcD,EAAiBE,QAAQQ,SAASC,WAAWC,SAAS,KAAKvB,SAAS,GAClF,KAAKH,cAAce,CAAU,CAErC,CAMAG,cAAcH,EAAmB,CACzBA,IAAeY,OACf,KAAKP,iBAAgB,GACd,CAAC,KAAKQ,UAAS,GAAMb,IAAe,KAAKd,qBAChD,KAAKA,kBAAoBc,EACzB,KAAKc,eAAc,EAE3B,CAEAC,SAAO,CACH,MAAMA,QAAO,EACb,KAAK1B,mBAAmB0B,QAAO,EAC/B,KAAKzB,mBAAmByB,QAAO,EAC/B,KAAKxB,oBAAoBwB,QAAO,CACpC,CAEAC,aAAW,CACP,KAAKpB,WAAW,EAAI,EACpB,KAAKT,sBAAsB8B,IAAI,CAAC,KAAKC,6BAA4B,CAAE,CAAC,CACxE,CAEQA,8BAA4B,CAChC,MAAO,CACHC,MAAOC,EAAgB,KAAKlC,kBAAmB,EAAG,KAAKA,kBAAmB,CAAC,EAC3EmC,QAAS,CACLC,YAAa,GACbC,0BAA2B,KAAKnC,WAG5C,CAEAiB,kBAAgB,CACZ,KAAKT,WAAW,EAAK,EACrB,KAAKT,sBAAsBqC,MAAK,CACpC,GDjFG,IAAMC,GAAe,EASfC,IAAqB,IAAA,CAA5B,MAAOA,CAAqB,CAKtB,OAAgBC,qCAAuC,QACvD,OAAgBC,oBAAsB,uBAE7BC,QACAC,kBACAC,6BACAC,eAAiB,IAAIC,kBAKtCC,OAAkC,CAAA,EAClCC,YAAwC,CAAA,EACxCC,iBAAkD,CAAA,EAClDC,eAA8C,CAAA,EAC9CC,QAA8B,CAAA,EAC9BC,2BAKAC,qBAAuBC,EAAK,EAC5BC,YAAcD,EAAe,EAAI,EACjCE,aAAeF,EAAe,EAAK,EACnCG,SAAWH,EAAe,EAAK,EAE/BI,YAAcC,EAAM,EACpBC,qBAAuBD,EAAM,EAC7BE,aAAeF,EAAM,EAKbG,sBACAC,oBACAC,yBACAC,uBACAC,yBAKSC,SAAWC,EAAOC,EAAS,EAC3BC,iBAAmBF,EAAOG,EAAgB,EAC1CC,WAAaJ,EAAOK,EAAU,EAC9BC,oBAAsBN,EAAOO,EAAmB,EAEjEC,aAAA,CAMI,KAAKhC,6BAA+B,KAAKuB,SAASU,cAAc,KAAK,EACrE,KAAKV,SAASW,SAAS,KAAKlC,6BAA8B,yBAAyB,EACnF,KAAKuB,SAASW,SAAS,KAAKlC,6BAA8BL,EAAsBE,mBAAmB,EACnG,KAAKC,QAAU,KAAKgC,oBAAoBK,2BAA2B,KAAKnC,4BAA4B,EACpG,KAAKD,kBAAoB,IAAIqC,EAAwB,KAAKtC,OAAO,EACjE,KAAKyB,SAASc,YAAY,KAAKT,WAAWU,cAAe,KAAKtC,4BAA4B,EAE1F,KAAKC,eAAesC,aAAe,UACnC,KAAKtC,eAAeuC,aAAe,GAEnCC,EAAO,IAAK,CAEJ,KAAK9B,YAAW,EAChB,KAAKY,SAASW,SAAS,KAAKlC,6BAA8BL,EAAsBE,mBAAmB,EAEnG,KAAK0B,SAASmB,YAAY,KAAK1C,6BAA8BL,EAAsBE,mBAAmB,CAE9G,CAAC,EAED4C,EAAO,IAAK,CACR,KAAK3C,QAAQ6C,cAAc,CACvB/B,aAAc,CAAEgC,QAAS,KAAKhC,aAAY,CAAE,EAC5CC,SAAU,KAAKA,SAAQ,EAC1B,CACL,CAAC,CACL,CAEAgC,mBAAmBC,EAAY,CAM3B,OALcA,EAAKC,MAAM,GAAG,EACCC,IAAKC,GACvBA,EAAKC,WAAW,GAAG,EAAI,KAAKjD,eAAekD,kBAAkBF,CAAI,EAAIA,CAC/E,EAEqBG,KAAK,GAAG,CAClC,CAEOC,wBAAwBC,EAAkE,CAC7F,OAAO,KAAKxD,QAAQuD,wBAAwBC,CAAQ,CACxD,CAEOC,UAAQ,CACX,OAAO,KAAKzD,QAAQyD,SAAQ,CAChC,CAEOC,eAAeC,EAAkB,CACpC,IAAMC,EAAQ,KAAK5D,QAAQyD,SAAQ,EACnC,OAAOG,EAAQA,EAAMF,eAAeC,CAAU,EAAI,EACtD,CAEAE,UAAQ,CACmB,IAAIC,eAAe,IAAK,CAC3C,KAAK9D,QAAQ+D,OAAM,CACvB,CAAC,EACcC,QAAQ,KAAK9D,4BAA4B,EAExD,KAAKmB,oBAAsB,KAAKrB,QAAQuD,wBAAwB,IAAK,CACjE,KAAKU,oBAAmB,CAC5B,EAAG,IAAI,EAEP,KAAK7C,sBAAwB,KAAKpB,QAAQkE,uBAAwBC,GAAS,CACnEA,EAAMjD,sBACN,KAAKA,qBAAqBkD,KAAKD,EAAME,cAAgB,KAAKrE,QAAQsE,UAAiBC,EAAOC,aAAaC,UAAU,CAAC,CAE1H,CAAC,EAED,KAAKnD,yBAA2B,KAAKtB,QAAQ0E,sBAAsB,IAAK,CAGhEC,GAAK,IAAO,OAASC,SAASC,eAAiB,SAAUD,SAASC,eAAiB,OAAOD,SAASC,cAAcC,MAAS,YAC1HF,SAASC,cAAcC,KAAI,EAE/B,KAAK3D,aAAaiD,KAAI,CAC1B,CAAC,EAED,KAAKpE,QAAQ+E,qBAAqB,IAAK,CACnC,KAAKC,8BAA8B,KAAKhF,OAAO,CACnD,CAAC,EAED,KAAKgF,8BAA8B,KAAKhF,OAAO,CACnD,CAEAiF,aAAW,CACP,KAAKC,MAAK,EACV,KAAKlF,QAAQmF,QAAO,EACpB,KAAK9D,qBAAqB8D,QAAO,EACjC,KAAK/D,uBAAuB+D,QAAO,EACnC,KAAK7D,0BAA0B6D,QAAO,CAC1C,CAEQlB,qBAAmB,CACvB,IAAMmB,EAAW,KAAKC,QAAO,EACvBC,EAAQ,KAAK3E,qBAAoB,EAClC2E,GAGG,KAAK/D,yBACLgE,aAAa,KAAKhE,sBAAsB,EACxC,KAAKA,uBAAyBiE,QAElC,KAAKjE,uBAAyBkE,WAAW,IAAK,CAC1C,KAAKzE,YAAYoD,KAAKgB,CAAQ,CAClC,EAAGE,CAAK,GARR,KAAKtE,YAAYoD,KAAKgB,CAAQ,CAUtC,CAEAM,aAAW,CACP,OAAO,KAAK1F,QAAQ0F,YAAW,GAAM,CAAEC,OAAQ,EAAGhC,WAAY,CAAC,CACnE,CAEAiC,YAAYC,EAAwB,CAChC,KAAK7F,QAAQ4F,YAAYC,CAAQ,CACrC,CAEAC,cAAY,CACR,OAAO,KAAK9F,QAAQ8F,aAAY,CACpC,CAEAC,aAAaC,EAAiB,CAC1B,KAAKhG,QAAQ+F,aAAaC,CAAS,CACvC,CAEAC,aAAaC,EAAkB,CAC3B,KAAKlG,QAAQiG,aAAaC,CAAK,CACnC,CAEAb,SAAO,CACH,OAAO,KAAKrF,QAAQmG,SAAQ,CAChC,CAEAC,kBAAgB,CACZ,OAAO,KAAKpG,QAAQoG,iBAAgB,EAAK,KAAKpG,QAAQsE,UAAiBC,EAAOC,aAAaC,UAAU,CACzG,CAEA4B,mBAAmBC,EAAsBC,EAAqB,CAC1D,OAAOD,IAAiBC,CAC5B,CAEAC,QAAQxD,EAAY,CAChB,IAAMuD,EAAgB,KAAKxD,mBAAmBC,CAAI,EAC9C,KAAKqD,mBAAmBrD,EAAMuD,CAAa,IAC3C,KAAKvG,QAAQyG,SAASF,CAAa,EACnC,KAAKX,YAAY,CAAED,OAAQ,KAAKD,YAAW,EAAGC,OAASY,EAAcG,OAAS1D,EAAK0D,OAAQ/C,WAAY,KAAK+B,YAAW,EAAG/B,UAAU,CAAE,GAEtI,KAAK0B,QAAO,IAAOkB,GACnB,KAAKvG,QAAQyG,SAASF,CAAa,CAE3C,CAMAI,mBAAmB3D,EAAY,CAC3B,KAAKhD,QAAQ4G,QAAQ,4CAA6C,OAAQ,CAAE5D,KAAAA,CAAI,CAAE,CACtF,CAEA6D,OAAK,CACD,KAAK7G,QAAQ6G,MAAK,CACtB,CAEAC,kBAAgB,CACZ,OAAO,KAAK9G,QAAQyD,SAAQ,GAAIsD,aAAY,GAAM,CACtD,CAEAC,YAAU,CACN,OAAO,KAAKhH,QAAQsE,UAAiBC,EAAOC,aAAazD,QAAQ,CACrE,CAUAkG,YAAYC,EAAkBC,EAAyBC,EAAmB,CACtE,IAAMC,EAAaC,GAAIC,MAAM,oBAAoB,KAAKvH,QAAQwH,MAAK,CAAE,IAAIN,CAAQ,EAAE,EAC7EtD,EAAeW,EAAOd,SAAS4D,CAAG,GAAY9C,EAAOkD,YAAYN,GAAkB,GAAI3B,OAAW6B,CAAG,EAEtG,KAAKhH,OAAOqH,SAAS9D,CAAK,GAC3B,KAAKvD,OAAOsH,KAAK/D,CAAK,EAEtBuD,IAAmB3B,QACnB5B,EAAM6C,SAASU,CAAc,EAIjC,KAAKS,sBAAqB,EAEnBrD,EAAOsD,iBAAiBjE,EAAOwD,IAAe5B,OAAY4B,EAAaxD,EAAMkE,cAAa,CAAE,EACnGlE,EAAMmE,OAAcxD,EAAOyD,kBAAkBC,EAAE,EAC/C,KAAKjI,QAAQkI,SAAStE,CAAK,CAC/B,CAMAuE,2BAA2BC,EAAkB,CACzC,KAAKpI,QAAQyD,SAAQ,GAAIZ,cAAc,CAAEuF,WAAAA,CAAU,CAAE,CACzD,CAEAC,eAAa,CACT,KAAKrI,QAAQkI,SAAS,IAAI,EAC1B,KAAK7H,OAAOiI,QAASC,GAAMA,EAAEpD,QAAO,CAAE,EACtC,KAAK9E,OAAS,CAAA,CAClB,CAEA6E,OAAK,CACD,KAAK0C,sBAAqB,EAC1B,KAAKS,cAAa,CACtB,CAEAT,uBAAqB,CACjB,KAAKY,mBAAkB,EACvB,KAAKC,eAAc,EACnB,KAAKC,sBAAqB,EAC1B,KAAKC,eAAc,EACnB,KAAKjI,4BAA4ByE,QAAO,CAC5C,CAEAsD,gBAAc,CACV,KAAKnI,YAAYgI,QAASM,GAAK,CAC3BA,EAAEzD,QAAO,CACb,CAAC,EACD,KAAK7E,YAAc,CAAA,CACvB,CAEAkI,oBAAkB,CACd,KAAKjI,iBAAiB+H,QAASO,GAAK,CAChCA,EAAE1D,QAAO,CACb,CAAC,EACD,KAAK5E,iBAAmB,CAAA,CAC5B,CAEAmI,uBAAqB,CACjB,KAAKlI,eAAe8H,QAASO,GAAK,CAC9BA,EAAE1D,QAAO,CACb,CAAC,EACD,KAAK3E,eAAiB,CAAA,CAC1B,CAEAmI,gBAAc,CACV,KAAKlI,QAAQ6H,QAASQ,GAAK,CACvBA,EAAE3D,QAAO,CACb,CAAC,EACD,KAAK1E,QAAU,CAAA,CACnB,CAEAsD,QAAM,CACF,KAAK/D,QAAQ+D,OAAM,CACvB,CAQAgF,oBAAoBC,EAAeC,EAAc,CAC7C,KAAKjJ,QAAQ+D,OAAO,CAAEiF,MAAAA,EAAOC,OAAAA,CAAM,CAAE,CACzC,CAQAC,eAAeC,EAA2BC,EAAoB,GAAK,CAC/D,KAAKZ,mBAAkB,EACvB,QAAWa,KAAcF,EAAa,CAClC,IAAMxF,EAAa0F,EAAWC,IAAM,EAC9BC,EAAwB,IAAIC,EAC9B,KAAKxJ,QACL,GAAGqJ,EAAWnC,QAAQ,IAAIvD,CAAU,IAAI0F,EAAWrG,IAAI,GACvDW,EACA0F,EAAWrG,KACXqG,EAAWI,OAAS,QAAUC,EAAgCC,MAAQD,EAAgCE,OAAO,EAEjHL,EAAsBM,YAAW,EACjCN,EAAsBO,qBAAqBV,CAAQ,EACnD,KAAK7I,iBAAiBoH,KAAK4B,CAAqB,CACpD,CACJ,CAQAQ,cAAcpG,EAAoBqG,EAAYC,EAAoB,CAC9D,IAAMC,EAAa,IAAIC,EAAuB,KAAKnK,QAASgK,EAAIC,EAAStG,CAAU,EACnFuG,EAAWL,YAAW,EACtB,KAAKvJ,YAAYqH,KAAKuC,CAAU,CACpC,CAQAE,8BAA8BC,EAAmBC,EAA2C,CACxF,KAAK5J,4BAA4ByE,QAAO,EACxC,KAAKzE,2BAA6B,IAAI6J,EAClC,KAAKvK,QACL,iCAAiC,KAAKA,QAAQwH,MAAK,CAAE,GACrD6C,EACAC,CAAa,EAGjB,KAAKtK,QAAQ6C,cAAc,CACvB2H,QAAS,GACTC,qBAAsB5K,EAAsBC,qCAC/C,CACL,CASA4K,eAAeC,EAAmBC,EAAiBP,EAAoBQ,EAAwB,CAC3F,IAAMC,EAAY,IAAIC,EAA0B,KAAK/K,QAAS,iBAAkB2K,EAAWC,EAASP,EAAWQ,CAAe,EAC9HC,EAAUjB,YAAW,EACrB,KAAKrJ,eAAemH,KAAKmD,CAAS,CACtC,CAEAE,mBAAiB,CACb,OAAO,KAAKxK,cAChB,CAMAyK,eAAeC,EAAwB,CACnCA,EAAOC,SAAS,KAAKlL,kBAAmB,KAAK2B,gBAAgB,EAC7D,KAAKnB,QAAQkH,KAAKuD,CAAM,CAC5B,CAEAE,YAAYC,EAAc,CACtB,KAAKrL,QAAQ6C,cAAc,CACvByI,SAAUD,EAAQ,KAAO,MAC5B,CACL,CAMAE,mBAAmBC,EAAuB,CACtC,KAAKxL,QAAQ6C,cAAc,CACvB4I,YAAcC,GAAW,GAAGF,EAAkBE,EAAS,CAAC,GAC3D,CACL,CAMAC,kBAAkBC,EAAiC,CAC/CA,EAAQC,MAAM,KAAK7L,OAAO,CAC9B,CAEO8L,6BAA2B,CAC9B,OAAO,KAAKtK,wBAChB,CAMQwD,8BAA8BT,EAA2C,CAC7E,KAAK/C,yBACD+C,EAAOwH,WAAkBC,EAAQC,UAAW,IAAK,CAC7C,IAAMrI,EAAQW,EAAOd,SAAQ,EACvByI,EAAY3H,EAAO4H,aAAY,EACrC,GAAI,CAACvI,GAAS,CAACsI,EAAW,OAE1B,GAAI,CAACA,EAAUE,QAAO,EAAI,CACtB7H,EAAOqC,QAAQ,WAAY,aAAc,IAAI,EAC7C,MACJ,CAEA,IAAMjD,EAAauI,EAAUV,gBACvB7F,EAASuG,EAAUG,YACnBC,EAAc1I,EAAMF,eAAeC,CAAU,EAE7C4I,EAAmBD,EAAYE,UAAU,EAAG7G,EAAS,CAAC,EAEtD8G,EADW,IAAIC,GAAAA,QAAS,EACHC,eAAeJ,CAAgB,EAE1D,GAAIA,EAAiB7F,SAAW,EAAG,CAC/BnC,EAAOqC,QAAQ,WAAY,aAAc,IAAI,EAC7C,MACJ,CAGA,IAAMgG,EADeH,EAAUI,IAAG,GACEnG,QAAU,EACxCoG,EAAsBL,EAAUnJ,KAAK,EAAE,EACvCyJ,EAAkBT,EAAYE,UAAU7G,EAAS,CAAC,EAElDqH,EAAiBF,EAAsBC,EAE7CnJ,EAAMqJ,mBACF,CAAA,EACA,CACI,CACI/G,MAAO,IAAWgH,EAAMvJ,EAAY,EAAGA,EAAY2I,EAAY5F,OAAS,CAAC,EACzE1D,KAAMgK,EACT,EAEL,IAAM,IAAI,EAEd,IAAMG,EAAoBxH,EAASiH,EACnCrI,EAAO0B,aAAa,IAAWiH,EAAMvJ,EAAYwJ,EAAmBxJ,EAAYwJ,CAAiB,CAAC,CACtG,CAAC,GAAK3H,MACd,4CAjeS3F,EAAqB,4BAArBA,EAAqBuN,UAAA,CAAA,CAAA,mBAAA,CAAA,EAAAC,OAAA,CAAA1M,qBAAA,CAAA,EAAA,sBAAA,EAAAE,YAAA,CAAA,EAAA,aAAA,EAAAC,aAAA,CAAA,EAAA,cAAA,EAAAC,SAAA,CAAA,EAAA,UAAA,CAAA,EAAAuM,QAAA,CAAAtM,YAAA,cAAAE,qBAAA,uBAAAC,aAAA,cAAA,EAAAoM,MAAA,EAAAC,KAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAA,EAAAC,OAAA,CAAA;CAAA,EAAAC,cAAA,EAAAC,gBAAA,CAAA,CAAA,SAArBjO,CAAqB,GAAA","names":["require_boundaries","__commonJSMin","exports","CLUSTER_BREAK","require_GraphemerHelper","__commonJSMin","exports","boundaries_1","NotBreak","BreakStart","Break","BreakLastRegional","BreakPenultimateRegional","GraphemerHelper","str","pos","idx","code","hi","low","start","mid","end","startEmoji","midEmoji","endEmoji","all","allEmoji","previous","next","nextEmoji","rIIndex","c","previousNonExtendIndex","require_GraphemerIterator","__commonJSMin","exports","GraphemerIterator","str","nextBreak","brk","value","require_Graphemer","__commonJSMin","exports","__importDefault","mod","boundaries_1","GraphemerHelper_1","GraphemerIterator_1","Graphemer","_Graphemer","string","index","prevCP","prev","prevEmoji","mid","midEmoji","i","nextCP","next","nextEmoji","str","res","brk","count","code","require_lib","__commonJSMin","exports","__importDefault","mod","Graphemer_1","require_emoji","__commonJSMin","exports","module","root","previous_emoji","emoji","self","str","colonized","_prev_offset","emoticons_with_parens","str_replaced","m","$1","emoticon","offset","prev_offset","has_open_paren","has_close_paren","piece","before_match","val","escaped_emoticons","parenthetical_rx","$2","idx","skin_tone","skin_idx","skin_val","p1","p2","map","i","list","alias","finder_block","j","k","actual","wrapper","variation","is_extra","full_idx","extra","var_idx","text_name","img","title","text","sheet_x","sheet_y","sheet_sz","style","native","allow_wrap","out","use_mask","var_data","try_order","ob_data","a","b","supports_css","ua","st","makeEditorRange","startLineNumber","startColumn","endLineNumber","endColumn","TextEditorPosition","lineNumber","column","constructor","withColumn","getLineNumber","getColumn","TextEditorRange","startPosition","endPosition","constructor","getStartPosition","getEndPosition","makeTextEditorRange","startLineNumber","startColumn","endLineNumber","endColumn","TextEditorPosition","TextEditorCompletionItemKind","TextEditorCompletionItem","label","detailText","insertText","kind","range","constructor","getLabel","getDetailText","getInsertText","getKind","getRange","TextEditorKeyCode","TextEditorKeyModifier","TextEditorKeybinding","key","modifier","constructor","getKey","getModifier","MonacoTextEditorAdapter","editor","KEY_CODE_MAP","Map","TextEditorKeyCode","KeyB","KeyCode","KeyI","KeyU","MODIFIER_MAP","TextEditorKeyModifier","CtrlCmd","KeyMod","constructor","addAction","action","actionDescriptor","id","label","keybindings","map","toMonacoKeybinding","run","_","args","executeAction","trigger","addCompleter","completer","model","getModel","Error","triggerCharacter","undefined","length","languageId","getLanguageId","modelId","triggerCharacterOffset","languages","registerCompletionItemProvider","triggerCharacters","provideCompletionItems","position","__async","sequenceUntilPosition","findTypedSequenceUntilPosition","range","startLineNumber","lineNumber","startColumn","endLineNumber","endColumn","beforeWord","getValueInRange","word","suggestions","searchItems","item","mapCompletionItem","fromMonacoRange","getLabel","kind","toMonacoCompletionKind","getKind","insertText","getInsertText","toMonacoRange","getRange","detail","getDetailText","incomplete","lengthLimit","getWordUntilPosition","scanColumn","Math","max","column","scanRange","makeEditorRange","text","triggerIndex","lastIndexOf","slice","layout","focus","replaceTextAtRange","executeEdits","getDomNode","triggerCompletion","getTextAtRange","EndOfLinePreference","LF","getLineText","getLineContent","getNumberOfLines","getLineCount","getEndPosition","fromMonacoPosition","getFullModelRange","getPosition","setPosition","toMonacoPosition","getSelection","selection","setSelection","revealRange","revealRangeInCenter","addPasteListener","callback","onDidPaste","pasteEvent","Position","getLineNumber","getColumn","TextEditorPosition","startPosition","getStartPosition","endPosition","Range","makeTextEditorRange","TextEditorCompletionItemKind","User","CompletionItemKind","Constant","keybinding","keyCode","get","getKey","Unknown","modifier","getModifier","getFullText","firstPosition","lastPosition","TextEditorRange","MonacoCodeEditorElement","CSS_HIDDEN_CLASS","id","visible","editor","constructor","getId","undefined","Error","setId","setVisible","isVisible","setupListeners","updateInEditor","removeFromEditor","addToEditor","dispose","setHtmlElementsVisible","htmlElements","forEach","element","classList","remove","add","MonacoEditorGlyphMarginWidget","MonacoCodeEditorElement","domNode","lineNumber","lane","constructor","editor","id","getDomNode","getPosition","zIndex","range","makeEditorRange","getLineNumber","setLineNumber","addToEditor","addGlyphMarginWidget","removeFromEditor","removeGlyphMarginWidget","MonacoEditorBuildAnnotationType","MonacoEditorBuildAnnotation","MonacoCodeEditorElement","glyphMarginWidget","decorationsCollection","outdated","hoverMessage","type","updateListener","constructor","editor","id","lineNumber","createDecorationsCollection","glyphMarginDomNode","document","createElement","className","MonacoEditorGlyphMarginWidget","GlyphMarginLane","Center","setupListeners","getAssociatedDeltaDecoration","marginClassName","getLineNumber","range","makeEditorRange","options","isWholeLine","stickiness","TrackedRangeStickiness","NeverGrowsWhenTypingAtEdges","lineNumberHoverMessage","value","glyphMarginHoverMessage","setOutdatedAndUpdate","classList","getGlyphMarginDomNode","remove","add","updateInEditor","isOutdated","getDomNode","onDidChangeModelContent","addToEditor","inRange","getModel","getLineCount","setVisible","append","removeFromEditor","clear","dispose","MonacoEditorViewZone","MonacoCodeEditorElement","linkedContentDomNode","resizeObserver","afterLineNumber","heightInPx","domNode","document","createElement","constructor","editor","undefined","offsetHeight","addToEditor","changeViewZones","accessor","setId","addZone","adjustHeightAndLayout","ResizeObserver","observe","layoutZone","getId","removeFromEditor","removeZone","disconnect","onDomNodeTop","top","style","MonacoEditorOverlayWidget","MonacoCodeEditorElement","domNode","position","constructor","editor","id","style","width","setVisible","visible","setHtmlElementsVisible","addToEditor","addOverlayWidget","removeFromEditor","removeOverlayWidget","getDomNode","getPosition","MonacoEditorLineWidget","MonacoCodeEditorElement","viewZone","overlayWidget","constructor","editor","overlayWidgetId","contentDomNode","afterLineNumber","MonacoEditorOverlayWidget","MonacoEditorViewZone","addToEditor","removeFromEditor","dispose","MonacoEditorLineHighlight","MonacoCodeEditorElement","range","className","marginClassName","decorationsCollection","constructor","editor","id","startLine","endLine","makeEditorRange","createDecorationsCollection","getAssociatedDeltaDecoration","options","isWholeLine","stickiness","TrackedRangeStickiness","NeverGrowsWhenTypingAtEdges","addToEditor","append","removeFromEditor","clear","import_graphemer","import_emoji_js","MonacoEditorLineDecorationsHoverButton","MonacoCodeEditorElement","clickCallback","currentLineNumber","decorationsCollection","className","mouseMoveListener","mouseDownListener","mouseLeaveListener","constructor","editor","id","createDecorationsCollection","setVisible","setupListeners","onMouseMove","editorMouseEvent","lineNumber","target","position","moveAndUpdate","onMouseLeave","removeFromEditor","onMouseDown","onClick","bind","element","classList","contains","undefined","isVisible","updateInEditor","dispose","addToEditor","set","getAssociatedDeltaDecoration","range","makeEditorRange","options","isWholeLine","linesDecorationsClassName","clear","MAX_TAB_SIZE","MonacoEditorComponent","DEFAULT_LINE_DECORATION_BUTTON_WIDTH","SHRINK_TO_FIT_CLASS","_editor","textEditorAdapter","monacoEditorContainerElement","emojiConvertor","EmojiConvertor","models","lineWidgets","buildAnnotations","lineHighlights","actions","lineDecorationsHoverButton","textChangedEmitDelay","input","shrinkToFit","stickyScroll","readOnly","textChanged","output","contentHeightChanged","onBlurEditor","contentHeightListener","textChangedListener","blurEditorWidgetListener","textChangedEmitTimeout","customBackspaceCommandId","renderer","inject","Renderer2","translateService","TranslateService","elementRef","ElementRef","monacoEditorService","MonacoEditorService","constructor","createElement","addClass","createStandaloneCodeEditor","MonacoTextEditorAdapter","appendChild","nativeElement","replace_mode","allow_native","effect","removeClass","updateOptions","enabled","convertTextToEmoji","text","split","map","word","startsWith","replace_emoticons","join","onDidChangeModelContent","listener","getModel","getLineContent","lineNumber","model","ngOnInit","ResizeObserver","layout","observe","emitTextChangeEvent","onDidContentSizeChange","event","emit","contentHeight","getOption","editor","EditorOption","lineHeight","onDidBlurEditorWidget","getOS","document","activeElement","blur","onDidFocusEditorText","registerCustomBackspaceAction","ngOnDestroy","reset","dispose","newValue","getText","delay","clearTimeout","undefined","setTimeout","getPosition","column","setPosition","position","getScrollTop","setScrollTop","scrollTop","setSelection","range","getValue","getContentHeight","isConvertedToEmoji","originalText","convertedText","setText","setValue","length","triggerKeySequence","trigger","focus","getNumberOfLines","getLineCount","isReadOnly","changeModel","fileName","newFileContent","languageId","uri","Uri","parse","getId","createModel","includes","push","disposeEditorElements","setModelLanguage","getLanguageId","setEOL","EndOfLineSequence","LF","setModel","updateModelIndentationSize","indentSize","disposeModels","forEach","m","disposeAnnotations","disposeWidgets","disposeLineHighlights","disposeActions","i","o","a","layoutWithFixedSize","width","height","setAnnotations","annotations","outdated","annotation","row","editorBuildAnnotation","MonacoEditorBuildAnnotation","type","MonacoEditorBuildAnnotationType","ERROR","WARNING","addToEditor","setOutdatedAndUpdate","addLineWidget","id","domNode","lineWidget","MonacoEditorLineWidget","setLineDecorationsHoverButton","className","clickCallback","MonacoEditorLineDecorationsHoverButton","folding","lineDecorationsWidth","highlightLines","startLine","endLine","marginClassName","highlight","MonacoEditorLineHighlight","getLineHighlights","registerAction","action","register","setWordWrap","value","wordWrap","setStartLineNumber","startLineNumber","lineNumbers","number","applyOptionPreset","options","apply","getCustomBackspaceCommandId","addCommand","KeyCode","Backspace","selection","getSelection","isEmpty","startColumn","lineContent","textBeforeCursor","substring","graphemes","Graphemer","splitGraphemes","deletedLength","pop","newTextBeforeCursor","textAfterCursor","newLineContent","pushEditOperations","Range","newCursorPosition","selectors","inputs","outputs","decls","vars","template","rf","ctx","styles","encapsulation","changeDetection"],"x_google_ignoreList":[0,1,2,3,4,5]}