{
  "version": 3,
  "sources": ["src/main/webapp/app/shared/competency-selection/competency-selection.component.ts", "src/main/webapp/app/shared/competency-selection/competency-selection.component.html"],
  "sourcesContent": ["import { ChangeDetectorRef, Component, EventEmitter, Input, OnDestroy, OnInit, Output, forwardRef, inject } from '@angular/core';\r\nimport { ControlValueAccessor, FormsModule, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport {\r\n    CompetencyLearningObjectLink,\r\n    CourseCompetency,\r\n    HIGH_COMPETENCY_LINK_WEIGHT,\r\n    LOW_COMPETENCY_LINK_WEIGHT,\r\n    LOW_COMPETENCY_LINK_WEIGHT_CUT_OFF,\r\n    MEDIUM_COMPETENCY_LINK_WEIGHT,\r\n    MEDIUM_COMPETENCY_LINK_WEIGHT_CUT_OFF,\r\n    getIcon,\r\n} from 'app/entities/competency.model';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CourseStorageService } from 'app/course/manage/course-storage.service';\r\nimport { Subscription, finalize } from 'rxjs';\r\nimport { CourseCompetencyService } from 'app/course/competencies/course-competency.service';\r\nimport { FaIconComponent, FaStackComponent, FaStackItemSizeDirective } from '@fortawesome/angular-fontawesome';\r\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TranslateDirective } from '../language/translate.directive';\r\nimport { ArtemisTranslatePipe } from '../pipes/artemis-translate.pipe';\r\nimport { ProfileService } from 'app/shared/layouts/profiles/profile.service';\r\nimport { PROFILE_ATLAS } from 'app/app.constants';\r\n\r\n@Component({\r\n    selector: 'jhi-competency-selection',\r\n    templateUrl: './competency-selection.component.html',\r\n    styleUrls: ['./competency-selection.component.scss'],\r\n    providers: [\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            multi: true,\r\n            useExisting: forwardRef(() => CompetencySelectionComponent),\r\n        },\r\n    ],\r\n    imports: [FaStackComponent, NgbTooltip, FaIconComponent, FaStackItemSizeDirective, FormsModule, TranslateDirective, ArtemisTranslatePipe],\r\n})\r\nexport class CompetencySelectionComponent implements OnInit, ControlValueAccessor, OnDestroy {\r\n    private route = inject(ActivatedRoute);\r\n    private courseStorageService = inject(CourseStorageService);\r\n    private courseCompetencyService = inject(CourseCompetencyService);\r\n    private changeDetector = inject(ChangeDetectorRef);\r\n    private profileService = inject(ProfileService);\r\n\r\n    @Input() labelName: string;\r\n    @Input() labelTooltip: string;\r\n\r\n    @Output() valueChange = new EventEmitter();\r\n\r\n    disabled: boolean;\r\n    // selected competencies\r\n    selectedCompetencyLinks?: CompetencyLearningObjectLink[];\r\n    // all course competencies\r\n    competencyLinks?: CompetencyLearningObjectLink[];\r\n\r\n    isLoading = false;\r\n    checkboxStates: Record<number, boolean>;\r\n\r\n    getIcon = getIcon;\r\n    faQuestionCircle = faQuestionCircle;\r\n\r\n    _onChange = (_value: any) => {};\r\n\r\n    protected readonly HIGH_COMPETENCY_LINK_WEIGHT = HIGH_COMPETENCY_LINK_WEIGHT;\r\n    protected readonly MEDIUM_COMPETENCY_LINK_WEIGHT = MEDIUM_COMPETENCY_LINK_WEIGHT;\r\n    protected readonly LOW_COMPETENCY_LINK_WEIGHT = LOW_COMPETENCY_LINK_WEIGHT;\r\n    protected readonly LOW_COMPETENCY_LINK_WEIGHT_CUT_OFF = LOW_COMPETENCY_LINK_WEIGHT_CUT_OFF; // halfway between low and medium\r\n    protected readonly MEDIUM_COMPETENCY_LINK_WEIGHT_CUT_OFF = MEDIUM_COMPETENCY_LINK_WEIGHT_CUT_OFF;\r\n    // halfway between medium and high\r\n\r\n    private profileSubscription?: Subscription = undefined;\r\n\r\n    ngOnInit(): void {\r\n        // it's an explicit design decision to not clutter every component that uses this component with the need to check if the atlas profile is enabled\r\n        this.profileSubscription = this.profileService.getProfileInfo().subscribe((profileInfo) => {\r\n            const atlasEnabled = profileInfo.activeProfiles.includes(PROFILE_ATLAS);\r\n            if (atlasEnabled) {\r\n                this.initialize();\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.profileSubscription?.unsubscribe();\r\n    }\r\n\r\n    initialize(): void {\r\n        const courseId = Number(this.route.snapshot.paramMap.get('courseId'));\r\n        if (!this.competencyLinks && courseId) {\r\n            const course = this.courseStorageService.getCourse(courseId);\r\n            // an empty array is used as fallback, if a course is cached, where no competencies have been queried\r\n            if (course?.competencies?.length || course?.prerequisites?.length) {\r\n                this.setCompetencyLinks([...(course.competencies ?? []), ...(course.prerequisites ?? [])]);\r\n            } else {\r\n                this.isLoading = true;\r\n                this.courseCompetencyService\r\n                    .getAllForCourse(courseId)\r\n                    .pipe(\r\n                        finalize(() => {\r\n                            this.isLoading = false;\r\n\r\n                            // trigger change detection manually\r\n                            // necessary because quiz exercises use ChangeDetectionStrategy.OnPush\r\n                            this.changeDetector.detectChanges();\r\n                        }),\r\n                    )\r\n                    .subscribe({\r\n                        next: (response) => {\r\n                            this.setCompetencyLinks(response.body!);\r\n                            this.writeValue(this.selectedCompetencyLinks);\r\n                        },\r\n                        error: () => {\r\n                            this.disabled = true;\r\n                        },\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set the available competencyLinks for selection\r\n     * @param competencies The competencies of the course\r\n     */\r\n    setCompetencyLinks(competencies: CourseCompetency[]) {\r\n        this.competencyLinks = competencies.map((competency) => {\r\n            // Remove unnecessary properties\r\n            competency.course = undefined;\r\n            competency.userProgress = undefined;\r\n            return new CompetencyLearningObjectLink(competency, MEDIUM_COMPETENCY_LINK_WEIGHT);\r\n        });\r\n        this.checkboxStates = this.competencyLinks.reduce(\r\n            (states, competencyLink) => {\r\n                if (competencyLink.competency?.id) {\r\n                    states[competencyLink.competency.id] = !!this.selectedCompetencyLinks?.find((value) => value.competency?.id === competencyLink.competency?.id);\r\n                }\r\n                return states;\r\n            },\r\n            {} as Record<number, boolean>,\r\n        );\r\n    }\r\n\r\n    toggleCompetency(newValue: CompetencyLearningObjectLink) {\r\n        if (newValue.competency?.id) {\r\n            if (this.checkboxStates[newValue.competency.id]) {\r\n                this.selectedCompetencyLinks = this.selectedCompetencyLinks?.filter((value) => value.competency?.id !== newValue.competency?.id);\r\n            } else {\r\n                this.selectedCompetencyLinks = [...(this.selectedCompetencyLinks ?? []), newValue];\r\n            }\r\n\r\n            this.checkboxStates[newValue.competency.id] = !this.checkboxStates[newValue.competency.id];\r\n\r\n            // make sure to do not send an empty list to server\r\n            if (!this.selectedCompetencyLinks?.length) {\r\n                this.selectedCompetencyLinks = undefined;\r\n            }\r\n\r\n            this._onChange(this.selectedCompetencyLinks);\r\n            this.valueChange.emit(this.selectedCompetencyLinks);\r\n        }\r\n    }\r\n\r\n    updateLinkWeight(link: CompetencyLearningObjectLink, value: number) {\r\n        link.weight = value;\r\n\r\n        this._onChange(this.selectedCompetencyLinks);\r\n        this.valueChange.emit(this.selectedCompetencyLinks);\r\n    }\r\n\r\n    writeValue(value?: CompetencyLearningObjectLink[]): void {\r\n        this.competencyLinks?.forEach((link) => {\r\n            const selectedLink = value?.find((value) => value.competency?.id === link.competency?.id);\r\n            link.weight = selectedLink?.weight ?? MEDIUM_COMPETENCY_LINK_WEIGHT;\r\n        });\r\n\r\n        if (value && this.competencyLinks) {\r\n            // Compare the ids of the competencies instead of the whole objects\r\n            const ids = value.map((el) => el.competency?.id);\r\n            this.selectedCompetencyLinks = this.competencyLinks.filter((competencyLink) => ids.includes(competencyLink.competency?.id));\r\n        } else {\r\n            this.selectedCompetencyLinks = value ?? [];\r\n        }\r\n    }\r\n\r\n    registerOnChange(fn: any): void {\r\n        this._onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(_fn: any): void {}\r\n\r\n    setDisabledState?(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n    }\r\n}\r\n", "@if (isLoading || competencyLinks?.length) {\r\n    <div>\r\n        @if (labelName) {\r\n            <label for=\"competency-selector\">\r\n                {{ labelName }}\r\n            </label>\r\n        }\r\n        @if (labelTooltip) {\r\n            <fa-stack class=\"text-secondary icon-full-size\" [ngbTooltip]=\"labelTooltip\">\r\n                <fa-icon [icon]=\"faQuestionCircle\" stackItemSize=\"1x\" />\r\n            </fa-stack>\r\n        }\r\n        @if (isLoading) {\r\n            <div>\r\n                <div class=\"spinner-border\" role=\"status\">\r\n                    <span class=\"sr-only\">Loading...</span>\r\n                </div>\r\n            </div>\r\n        } @else {\r\n            <div class=\"competency-selector p-2\" id=\"competency-selector\">\r\n                @for (competencyLink of competencyLinks; track competencyLink) {\r\n                    @if (competencyLink && competencyLink.competency && competencyLink.competency.id) {\r\n                        <div>\r\n                            <input\r\n                                id=\"competency-{{ competencyLink.competency.id }}\"\r\n                                type=\"checkbox\"\r\n                                [ngModel]=\"checkboxStates[competencyLink.competency.id]\"\r\n                                (ngModelChange)=\"toggleCompetency(competencyLink)\"\r\n                                [disabled]=\"disabled\"\r\n                            />\r\n                            <label for=\"competency-{{ competencyLink.competency.id }}\">\r\n                                <fa-icon [icon]=\"getIcon(competencyLink.competency.taxonomy)\" [fixedWidth]=\"true\" />\r\n                                {{ competencyLink.competency.title }}\r\n                            </label>\r\n                            @if (checkboxStates[competencyLink.competency.id]) {\r\n                                <select\r\n                                    [ngModel]=\"\r\n                                        competencyLink.weight < LOW_COMPETENCY_LINK_WEIGHT_CUT_OFF\r\n                                            ? LOW_COMPETENCY_LINK_WEIGHT\r\n                                            : competencyLink.weight < MEDIUM_COMPETENCY_LINK_WEIGHT_CUT_OFF\r\n                                              ? MEDIUM_COMPETENCY_LINK_WEIGHT\r\n                                              : HIGH_COMPETENCY_LINK_WEIGHT\r\n                                    \"\r\n                                    (ngModelChange)=\"updateLinkWeight(competencyLink, $event)\"\r\n                                    ngbTooltip=\"{{ 'artemisApp.competency.link.weightTooltip' | artemisTranslate }}\"\r\n                                >\r\n                                    <option [ngValue]=\"LOW_COMPETENCY_LINK_WEIGHT\" [jhiTranslate]=\"'artemisApp.competency.link.weightLabels.low'\"></option>\r\n                                    <option [ngValue]=\"MEDIUM_COMPETENCY_LINK_WEIGHT\" [jhiTranslate]=\"'artemisApp.competency.link.weightLabels.medium'\"></option>\r\n                                    <option [ngValue]=\"HIGH_COMPETENCY_LINK_WEIGHT\" [jhiTranslate]=\"'artemisApp.competency.link.weightLabels.high'\"></option>\r\n                                </select>\r\n                            }\r\n                        </div>\r\n                    }\r\n                }\r\n            </div>\r\n        }\r\n    </div>\r\n}\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275textInterpolate1", "ctx_r0", "labelName", "\u0275\u0275element", "\u0275\u0275property", "labelTooltip", "faQuestionCircle", "\u0275\u0275listener", "$event", "\u0275\u0275restoreView", "_r4", "competencyLink_r3", "\u0275\u0275nextContext", "$implicit", "\u0275\u0275resetView", "updateLinkWeight", "\u0275\u0275propertyInterpolate", "\u0275\u0275pipeBind1", "weight", "LOW_COMPETENCY_LINK_WEIGHT_CUT_OFF", "LOW_COMPETENCY_LINK_WEIGHT", "MEDIUM_COMPETENCY_LINK_WEIGHT_CUT_OFF", "MEDIUM_COMPETENCY_LINK_WEIGHT", "HIGH_COMPETENCY_LINK_WEIGHT", "_r2", "toggleCompetency", "\u0275\u0275template", "CompetencySelectionComponent_Conditional_0_Conditional_6_For_4_Conditional_1_Conditional_10_Template", "\u0275\u0275propertyInterpolate1", "competency", "id", "checkboxStates", "disabled", "getIcon", "taxonomy", "title", "\u0275\u0275conditional", "CompetencySelectionComponent_Conditional_0_Conditional_6_For_4_Conditional_1_Template", "\u0275\u0275repeaterCreate", "CompetencySelectionComponent_Conditional_0_Conditional_6_For_4_Template", "\u0275\u0275repeaterTrackByIdentity", "\u0275\u0275repeater", "competencyLinks", "CompetencySelectionComponent_Conditional_0_Conditional_3_Template", "CompetencySelectionComponent_Conditional_0_Conditional_4_Template", "CompetencySelectionComponent_Conditional_0_Conditional_5_Template", "CompetencySelectionComponent_Conditional_0_Conditional_6_Template", "isLoading", "CompetencySelectionComponent", "route", "inject", "ActivatedRoute", "courseStorageService", "CourseStorageService", "courseCompetencyService", "CourseCompetencyService", "changeDetector", "ChangeDetectorRef", "profileService", "ProfileService", "valueChange", "EventEmitter", "selectedCompetencyLinks", "_onChange", "_value", "profileSubscription", "undefined", "ngOnInit", "getProfileInfo", "subscribe", "profileInfo", "activeProfiles", "includes", "PROFILE_ATLAS", "initialize", "ngOnDestroy", "unsubscribe", "courseId", "Number", "snapshot", "paramMap", "get", "course", "getCourse", "competencies", "length", "prerequisites", "setCompetencyLinks", "getAllForCourse", "pipe", "finalize", "detectChanges", "next", "response", "body", "writeValue", "error", "map", "userProgress", "CompetencyLearningObjectLink", "reduce", "states", "competencyLink", "find", "value", "newValue", "filter", "emit", "link", "forEach", "selectedLink", "ids", "el", "registerOnChange", "fn", "registerOnTouched", "_fn", "setDisabledState", "isDisabled", "selectors", "inputs", "outputs", "features", "\u0275\u0275ProvidersFeature", "provide", "NG_VALUE_ACCESSOR", "multi", "useExisting", "forwardRef", "decls", "vars", "consts", "template", "rf", "ctx", "CompetencySelectionComponent_Conditional_0_Template", "FaStackComponent", "NgbTooltip", "FaIconComponent", "FaStackItemSizeDirective", "FormsModule", "NgSelectOption", "\u0275NgSelectMultipleOption", "CheckboxControlValueAccessor", "SelectControlValueAccessor", "NgControlStatus", "NgModel", "TranslateDirective", "ArtemisTranslatePipe", "styles"]
}
