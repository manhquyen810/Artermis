{
  "version": 3,
  "sources": ["src/main/webapp/app/assessment/unreferenced-feedback-detail/unreferenced-feedback-detail.component.ts", "src/main/webapp/app/assessment/unreferenced-feedback-detail/unreferenced-feedback-detail.component.html", "src/main/webapp/app/exercises/shared/unreferenced-feedback/unreferenced-feedback.component.ts", "src/main/webapp/app/exercises/shared/unreferenced-feedback/unreferenced-feedback.component.html"],
  "sourcesContent": ["import { Component, EventEmitter, Input, InputSignal, OnInit, Output, inject, input } from '@angular/core';\r\nimport { faCheck, faExclamation, faExclamationTriangle, faQuestionCircle, faTrash, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Feedback, FeedbackType } from 'app/entities/feedback.model';\r\nimport { StructuredGradingCriterionService } from 'app/exercises/shared/structured-grading-criterion/structured-grading-criterion.service';\r\nimport { ButtonSize } from 'app/shared/components/button.component';\r\nimport { Subject } from 'rxjs';\r\nimport { FeedbackService } from 'app/exercises/shared/feedback/feedback.service';\r\nimport { FeedbackSuggestionBadgeComponent } from '../../exercises/shared/feedback/feedback-suggestion-badge/feedback-suggestion-badge.component';\r\nimport { GradingInstructionLinkIconComponent } from 'app/shared/grading-instruction-link-icon/grading-instruction-link-icon.component';\r\nimport { DeleteButtonDirective } from 'app/shared/delete-dialog/delete-button.directive';\r\nimport { FaIconComponent, FaLayersComponent } from '@fortawesome/angular-fontawesome';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AssessmentCorrectionRoundBadgeComponent } from './assessment-correction-round-badge/assessment-correction-round-badge.component';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\nimport { FeedbackContentPipe } from 'app/shared/pipes/feedback-content.pipe';\r\nimport { QuotePipe } from 'app/shared/pipes/quote.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-unreferenced-feedback-detail',\r\n    templateUrl: './unreferenced-feedback-detail.component.html',\r\n    styleUrls: ['./unreferenced-feedback-detail.component.scss'],\r\n    imports: [\r\n        FeedbackSuggestionBadgeComponent,\r\n        GradingInstructionLinkIconComponent,\r\n        DeleteButtonDirective,\r\n        FaIconComponent,\r\n        TranslateDirective,\r\n        FormsModule,\r\n        NgbTooltip,\r\n        FaLayersComponent,\r\n        AssessmentCorrectionRoundBadgeComponent,\r\n        ArtemisTranslatePipe,\r\n        FeedbackContentPipe,\r\n        QuotePipe,\r\n    ],\r\n})\r\nexport class UnreferencedFeedbackDetailComponent implements OnInit {\r\n    structuredGradingCriterionService = inject(StructuredGradingCriterionService);\r\n\r\n    @Input() public feedback: Feedback;\r\n    resultId: InputSignal<number> = input.required<number>();\r\n    @Input() isSuggestion: boolean;\r\n    @Input() public readOnly: boolean;\r\n    @Input() highlightDifferences: boolean;\r\n    @Input() useDefaultFeedbackSuggestionBadgeText: boolean;\r\n\r\n    @Output() public onFeedbackChange = new EventEmitter<Feedback>();\r\n    @Output() public onFeedbackDelete = new EventEmitter<Feedback>();\r\n    @Output() onAcceptSuggestion = new EventEmitter<Feedback>();\r\n    @Output() onDiscardSuggestion = new EventEmitter<Feedback>();\r\n    private feedbackService = inject(FeedbackService);\r\n\r\n    // Icons\r\n    faTrashAlt = faTrashAlt;\r\n    faQuestionCircle = faQuestionCircle;\r\n    faExclamation = faExclamation;\r\n    faExclamationTriangle = faExclamationTriangle;\r\n    faCheck = faCheck;\r\n    faTrash = faTrash;\r\n\r\n    // Expose to template\r\n    protected readonly Feedback = Feedback;\r\n    readonly ButtonSize = ButtonSize;\r\n\r\n    private dialogErrorSource = new Subject<string>();\r\n    dialogError$ = this.dialogErrorSource.asObservable();\r\n\r\n    ngOnInit() {\r\n        this.loadLongFeedback();\r\n    }\r\n\r\n    /**\r\n     * Call this method to load long feedback if needed\r\n     */\r\n    public async loadLongFeedback() {\r\n        if (this.feedback.id && this.feedback.hasLongFeedbackText) {\r\n            this.feedback.detailText = await this.feedbackService.getLongFeedbackText(this.feedback.id);\r\n            this.onFeedbackChange.emit(this.feedback);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Emits assessment changes to parent component\r\n     */\r\n    public emitChanges(): void {\r\n        if (this.feedback.type === FeedbackType.AUTOMATIC) {\r\n            this.feedback.type = FeedbackType.AUTOMATIC_ADAPTED;\r\n        }\r\n        Feedback.updateFeedbackTypeOnChange(this.feedback);\r\n        this.onFeedbackChange.emit(this.feedback);\r\n    }\r\n\r\n    /**\r\n     * Emits the deletion of a feedback\r\n     */\r\n    public delete() {\r\n        this.onFeedbackDelete.emit(this.feedback);\r\n        this.dialogErrorSource.next('');\r\n    }\r\n\r\n    updateFeedbackOnDrop(event: Event) {\r\n        event.stopPropagation();\r\n        this.structuredGradingCriterionService.updateFeedbackWithStructuredGradingInstructionEvent(this.feedback, event);\r\n        this.onFeedbackChange.emit(this.feedback);\r\n    }\r\n}\r\n", "<div (drop)=\"updateFeedbackOnDrop($event)\" (dragover)=\"$event.preventDefault()\" class=\"unreferenced-feedback-detail card mb-3\" [class.is-suggestion]=\"isSuggestion\">\r\n    <div class=\"card-header\">\r\n        @if (isSuggestion || Feedback.isFeedbackSuggestion(feedback)) {\r\n            <jhi-feedback-suggestion-badge [feedback]=\"feedback\" [useDefaultText]=\"useDefaultFeedbackSuggestionBadgeText\" />\r\n        }\r\n        @if (feedback.gradingInstruction) {\r\n            <jhi-grading-instruction-link-icon [feedback]=\"feedback\" />\r\n        }\r\n        @if (!readOnly) {\r\n            <button\r\n                jhiDeleteButton\r\n                [buttonSize]=\"ButtonSize.SMALL\"\r\n                [translateValues]=\"{ text: this.feedback | feedbackContent | quoted: ' ' }\"\r\n                deleteQuestion=\"artemisApp.feedback.delete.question\"\r\n                (delete)=\"delete()\"\r\n                [dialogError]=\"dialogError$\"\r\n                [renderButtonStyle]=\"false\"\r\n                [renderButtonText]=\"false\"\r\n                class=\"btn float-end\"\r\n            >\r\n                <fa-icon [icon]=\"faTrashAlt\" />\r\n            </button>\r\n        }\r\n        <!-- Accept/Discard for feedback suggestions -->\r\n        @if (isSuggestion) {\r\n            <div class=\"row float-end suggestion-action-buttons\">\r\n                <button class=\"btn btn-success m-1 btn-sm\" (click)=\"onAcceptSuggestion.emit(feedback)\">\r\n                    <fa-icon [icon]=\"faCheck\" />\r\n                    <span jhiTranslate=\"artemisApp.assessment.detail.accept\"></span>\r\n                </button>\r\n                <button class=\"btn btn-danger m-1 btn-sm\" (click)=\"onDiscardSuggestion.emit(feedback)\">\r\n                    <fa-icon [icon]=\"faTrash\" />\r\n                    <span jhiTranslate=\"artemisApp.assessment.detail.discard\"></span>\r\n                </button>\r\n            </div>\r\n        }\r\n    </div>\r\n    <div class=\"card-body\">\r\n        <div class=\"form-group row\">\r\n            <label for=\"feedback-points\" class=\"col-4 feedback-label\" jhiTranslate=\"artemisApp.exercise.score\"></label>\r\n            <input\r\n                id=\"feedback-points\"\r\n                class=\"col form-control\"\r\n                type=\"number\"\r\n                step=\"0.5\"\r\n                [(ngModel)]=\"feedback.credits\"\r\n                (ngModelChange)=\"emitChanges()\"\r\n                [disabled]=\"!!feedback.gradingInstruction || readOnly\"\r\n                [readOnly]=\"!!feedback.gradingInstruction || readOnly\"\r\n                [required]=\"!feedback.gradingInstruction\"\r\n            />\r\n        </div>\r\n        <div class=\"form-group row\">\r\n            <div class=\"col-4 assessment-label\">\r\n                <label class=\"pe-0\" jhiTranslate=\"artemisApp.assessment.detail.feedback\"></label>\r\n                @if (feedback.gradingInstruction) {\r\n                    <div>\r\n                        <fa-icon [icon]=\"faQuestionCircle\" class=\"text-secondary ps-1\" [ngbTooltip]=\"'artemisApp.assessment.feedbackHint' | artemisTranslate\" />\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div class=\"col p-0\">\r\n                @if (feedback.gradingInstruction) {\r\n                    <div>\r\n                        <span>{{ feedback.gradingInstruction!.feedback }}</span>\r\n                    </div>\r\n                }\r\n                <textarea\r\n                    id=\"feedback-textarea\"\r\n                    class=\"form-control\"\r\n                    rows=\"2\"\r\n                    [(ngModel)]=\"feedback.detailText\"\r\n                    (ngModelChange)=\"emitChanges()\"\r\n                    [readOnly]=\"readOnly\"\r\n                    [disabled]=\"readOnly\"\r\n                    [placeholder]=\"\r\n                        feedback.gradingInstruction?.feedback\r\n                            ? ('artemisApp.assessment.additionalFeedbackCommentPlaceholder' | artemisTranslate)\r\n                            : ('artemisApp.assessment.feedbackCommentPlaceholder' | artemisTranslate)\r\n                    \"\r\n                    [required]=\"!feedback.gradingInstruction?.feedback\"\r\n                ></textarea>\r\n            </div>\r\n        </div>\r\n        <!-- Text showing whether the tutor feedback is correct or not (upon validation on the server) -->\r\n        @if (feedback.correctionStatus !== undefined) {\r\n            <div>\r\n                @if (feedback.correctionStatus === 'CORRECT') {\r\n                    <span class=\"text-success\">{{ 'artemisApp.exampleSubmission.feedback.' + feedback.correctionStatus! | artemisTranslate }} </span>\r\n                }\r\n                @if (feedback.correctionStatus !== 'CORRECT') {\r\n                    <span class=\"text-danger\">{{ 'artemisApp.exampleSubmission.feedback.' + feedback.correctionStatus! | artemisTranslate }} </span>\r\n                }\r\n                <!-- :warning: emoji was rendered as a black-white glyph, hence the solution with the fa-icon -->\r\n                @if (feedback.correctionStatus !== 'CORRECT') {\r\n                    <fa-layers>\r\n                        <fa-icon class=\"text-warning\" [icon]=\"faExclamationTriangle\" />\r\n                        <fa-icon class=\"text-dark exclamation-icon\" [icon]=\"faExclamation\" size=\"2x\" transform=\"shrink-10\" />\r\n                    </fa-layers>\r\n                }\r\n            </div>\r\n        }\r\n        <jhi-assessment-correction-round-badge [feedback]=\"feedback\" [highlightDifferences]=\"highlightDifferences\" />\r\n    </div>\r\n</div>\r\n", "import { Component, EventEmitter, Input, Output, inject } from '@angular/core';\r\nimport { FEEDBACK_SUGGESTION_ACCEPTED_IDENTIFIER, FEEDBACK_SUGGESTION_IDENTIFIER, Feedback, FeedbackType } from 'app/entities/feedback.model';\r\nimport { StructuredGradingCriterionService } from 'app/exercises/shared/structured-grading-criterion/structured-grading-criterion.service';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { UnreferencedFeedbackDetailComponent } from 'app/assessment/unreferenced-feedback-detail/unreferenced-feedback-detail.component';\r\n\r\n@Component({\r\n    selector: 'jhi-unreferenced-feedback',\r\n    templateUrl: './unreferenced-feedback.component.html',\r\n    styleUrls: [],\r\n    imports: [TranslateDirective, UnreferencedFeedbackDetailComponent],\r\n})\r\nexport class UnreferencedFeedbackComponent {\r\n    private structuredGradingCriterionService = inject(StructuredGradingCriterionService);\r\n\r\n    FeedbackType = FeedbackType;\r\n\r\n    unreferencedFeedback: Feedback[] = [];\r\n    assessmentsAreValid: boolean;\r\n\r\n    @Input() readOnly: boolean;\r\n    @Input() highlightDifferences: boolean;\r\n    @Input() useDefaultFeedbackSuggestionBadgeText = false;\r\n    @Input() resultId: number;\r\n\r\n    /**\r\n     * In order to make it possible to mark unreferenced feedback based on the correction status, we assign reference ids to the unreferenced feedback\r\n     */\r\n    @Input() addReferenceIdForExampleSubmission = false;\r\n\r\n    @Input() set feedbacks(feedbacks: Feedback[]) {\r\n        this.unreferencedFeedback = [...feedbacks];\r\n    }\r\n\r\n    @Input() feedbackSuggestions: Feedback[] = [];\r\n\r\n    @Output() feedbacksChange = new EventEmitter<Feedback[]>();\r\n    @Output() onAcceptSuggestion = new EventEmitter<Feedback>();\r\n    @Output() onDiscardSuggestion = new EventEmitter<Feedback>();\r\n\r\n    public deleteFeedback(feedbackToDelete: Feedback): void {\r\n        const indexToDelete = this.unreferencedFeedback.indexOf(feedbackToDelete);\r\n        this.unreferencedFeedback.splice(indexToDelete, 1);\r\n        this.feedbacksChange.emit(this.unreferencedFeedback);\r\n        this.validateFeedback();\r\n    }\r\n\r\n    /**\r\n     * Validates the feedback:\r\n     *   - There must be any form of feedback, either general feedback or feedback referencing a model element or both\r\n     *   - Each reference feedback must have a score that is a valid number\r\n     */\r\n    validateFeedback() {\r\n        if (!this.unreferencedFeedback || this.unreferencedFeedback.length === 0) {\r\n            this.assessmentsAreValid = false;\r\n            return;\r\n        }\r\n        for (const feedback of this.unreferencedFeedback) {\r\n            if (feedback.credits == undefined || isNaN(feedback.credits)) {\r\n                this.assessmentsAreValid = false;\r\n                return;\r\n            }\r\n        }\r\n        this.assessmentsAreValid = true;\r\n    }\r\n\r\n    /**\r\n     * Update the feedback in the list of unreferenced feedback, changing or adding it.\r\n     * @param feedback The feedback to update\r\n     */\r\n    updateFeedback(feedback: Feedback) {\r\n        const indexToUpdate = this.unreferencedFeedback.indexOf(feedback);\r\n        if (indexToUpdate < 0) {\r\n            this.unreferencedFeedback.push(feedback);\r\n        } else {\r\n            this.unreferencedFeedback[indexToUpdate] = feedback;\r\n        }\r\n        this.validateFeedback();\r\n        this.feedbacksChange.emit(this.unreferencedFeedback);\r\n    }\r\n\r\n    public addUnreferencedFeedback(): void {\r\n        const feedback = new Feedback();\r\n        feedback.type = FeedbackType.MANUAL_UNREFERENCED;\r\n\r\n        // Assign the next id to the unreferenced feedback\r\n        if (this.addReferenceIdForExampleSubmission) {\r\n            feedback.reference = this.generateNewUnreferencedFeedbackReference().toString();\r\n        }\r\n\r\n        this.unreferencedFeedback.push(feedback);\r\n        this.validateFeedback();\r\n        this.feedbacksChange.emit(this.unreferencedFeedback);\r\n    }\r\n\r\n    /**\r\n     * Generate the new reference, by computing what is currently the maximum reference within all feedback and add 1\r\n     */\r\n    private generateNewUnreferencedFeedbackReference(): number {\r\n        if (this.unreferencedFeedback.length === 0) {\r\n            return 1;\r\n        }\r\n\r\n        const references = this.unreferencedFeedback.map((feedback) => {\r\n            const id = +(feedback.reference ?? '0');\r\n            if (isNaN(id)) {\r\n                return 0;\r\n            }\r\n            return id;\r\n        });\r\n        return Math.max(...references.concat([0])) + 1;\r\n    }\r\n\r\n    /**\r\n     * Accept a feedback suggestion: Make it \"real\" feedback and remove the suggestion card\r\n     */\r\n    acceptSuggestion(feedback: Feedback) {\r\n        this.feedbackSuggestions = this.feedbackSuggestions.filter((f) => f !== feedback); // Remove the suggestion card\r\n        // We need to change the feedback type to \"manual\" because non-manual feedback is never editable in the editor\r\n        // and will be filtered out in all kinds of places\r\n        feedback.type = FeedbackType.MANUAL_UNREFERENCED;\r\n        // Change the prefix \"FeedbackSuggestion:\" to \"FeedbackSuggestion:accepted:\"\r\n        feedback.text = (feedback.text ?? FEEDBACK_SUGGESTION_IDENTIFIER).replace(FEEDBACK_SUGGESTION_IDENTIFIER, FEEDBACK_SUGGESTION_ACCEPTED_IDENTIFIER);\r\n        this.updateFeedback(feedback); // Make it \"real\" feedback\r\n        this.onAcceptSuggestion.emit(feedback);\r\n    }\r\n\r\n    /**\r\n     * Discard a feedback suggestion: Remove the suggestion card and emit the event\r\n     */\r\n    discardSuggestion(feedback: Feedback) {\r\n        this.feedbackSuggestions = this.feedbackSuggestions.filter((f) => f !== feedback); // Remove the suggestion card\r\n        this.onDiscardSuggestion.emit(feedback);\r\n    }\r\n\r\n    createAssessmentOnDrop(event: Event) {\r\n        this.addUnreferencedFeedback();\r\n        const newFeedback: Feedback | undefined = this.unreferencedFeedback.last();\r\n        if (newFeedback) {\r\n            this.structuredGradingCriterionService.updateFeedbackWithStructuredGradingInstructionEvent(newFeedback, event);\r\n            this.updateFeedback(newFeedback);\r\n        }\r\n    }\r\n}\r\n", "<div (drop)=\"createAssessmentOnDrop($event)\" (dragover)=\"$event.preventDefault()\">\r\n    <div class=\"col-md-6\">\r\n        <button\r\n            class=\"add-unreferenced-feedback btn btn-success mt-4\"\r\n            (click)=\"addUnreferencedFeedback()\"\r\n            [disabled]=\"readOnly\"\r\n            jhiTranslate=\"artemisApp.fileUploadAssessment.addFeedback\"\r\n        ></button>\r\n        <div class=\"row mt-4\">\r\n            <h4 class=\"col-12\" jhiTranslate=\"artemisApp.assessment.detail.feedback\"></h4>\r\n            @if (unreferencedFeedback.length + feedbackSuggestions.length === 0) {\r\n                <div class=\"col-12 col-lg-8 col-xl-6\">\r\n                    <div class=\"alert alert-secondary text-center\" role=\"alert\">\r\n                        <p jhiTranslate=\"artemisApp.fileUploadAssessment.assessInstructionWithDropOption\"></p>\r\n                    </div>\r\n                </div>\r\n            }\r\n            @for (feedback of unreferencedFeedback; track feedback) {\r\n                <div class=\"col-12 col-lg-6 col-xl-6\">\r\n                    <jhi-unreferenced-feedback-detail\r\n                        [feedback]=\"feedback\"\r\n                        [resultId]=\"resultId\"\r\n                        (onFeedbackChange)=\"updateFeedback(feedback)\"\r\n                        (onFeedbackDelete)=\"deleteFeedback(feedback)\"\r\n                        [readOnly]=\"readOnly\"\r\n                        [highlightDifferences]=\"highlightDifferences\"\r\n                        [useDefaultFeedbackSuggestionBadgeText]=\"useDefaultFeedbackSuggestionBadgeText\"\r\n                    />\r\n                </div>\r\n            }\r\n            @for (suggestion of feedbackSuggestions; track suggestion) {\r\n                <div class=\"col-12 col-lg-6 col-xl-6\">\r\n                    <jhi-unreferenced-feedback-detail\r\n                        [feedback]=\"suggestion\"\r\n                        [resultId]=\"resultId\"\r\n                        [isSuggestion]=\"true\"\r\n                        [readOnly]=\"true\"\r\n                        (onAcceptSuggestion)=\"acceptSuggestion($event)\"\r\n                        (onDiscardSuggestion)=\"discardSuggestion($event)\"\r\n                        [useDefaultFeedbackSuggestionBadgeText]=\"useDefaultFeedbackSuggestionBadgeText\"\r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    </div>\r\n</div>\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275property", "ctx_r0", "feedback", "useDefaultFeedbackSuggestionBadgeText", "\u0275\u0275elementStart", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r2", "\u0275\u0275nextContext", "\u0275\u0275resetView", "delete", "\u0275\u0275elementEnd", "ButtonSize", "SMALL", "\u0275\u0275pureFunction1", "_c0", "\u0275\u0275pipeBind2", "\u0275\u0275pipeBind1", "dialogError$", "faTrashAlt", "_r3", "onAcceptSuggestion", "emit", "onDiscardSuggestion", "faCheck", "faTrash", "faQuestionCircle", "\u0275\u0275textInterpolate", "gradingInstruction", "\u0275\u0275textInterpolate1", "correctionStatus", "faExclamationTriangle", "faExclamation", "\u0275\u0275template", "UnreferencedFeedbackDetailComponent_Conditional_36_Conditional_3_Template", "UnreferencedFeedbackDetailComponent_Conditional_36_Conditional_4_Template", "UnreferencedFeedbackDetailComponent_Conditional_36_Conditional_5_Template", "\u0275\u0275conditional", "UnreferencedFeedbackDetailComponent", "structuredGradingCriterionService", "inject", "StructuredGradingCriterionService", "resultId", "input", "required", "isSuggestion", "readOnly", "highlightDifferences", "onFeedbackChange", "EventEmitter", "onFeedbackDelete", "feedbackService", "FeedbackService", "Feedback", "dialogErrorSource", "Subject", "asObservable", "ngOnInit", "loadLongFeedback", "__async", "id", "hasLongFeedbackText", "detailText", "getLongFeedbackText", "emitChanges", "type", "FeedbackType", "AUTOMATIC", "AUTOMATIC_ADAPTED", "updateFeedbackTypeOnChange", "next", "updateFeedbackOnDrop", "event", "stopPropagation", "updateFeedbackWithStructuredGradingInstructionEvent", "selectors", "inputs", "outputs", "decls", "vars", "consts", "template", "rf", "ctx", "$event", "preventDefault", "UnreferencedFeedbackDetailComponent_Conditional_4_Template", "UnreferencedFeedbackDetailComponent_Conditional_5_Template", "UnreferencedFeedbackDetailComponent_Conditional_6_Template", "UnreferencedFeedbackDetailComponent_Conditional_7_Template", "\u0275\u0275twoWayListener", "i0", "\u0275\u0275twoWayBindingSet", "credits", "UnreferencedFeedbackDetailComponent_Conditional_24_Template", "UnreferencedFeedbackDetailComponent_Conditional_28_Template", "UnreferencedFeedbackDetailComponent_Conditional_36_Template", "\u0275\u0275classProp", "isFeedbackSuggestion", "\u0275\u0275twoWayProperty", "undefined", "FeedbackSuggestionBadgeComponent", "GradingInstructionLinkIconComponent", "DeleteButtonDirective", "FaIconComponent", "TranslateDirective", "FormsModule", "DefaultValueAccessor", "NumberValueAccessor", "NgControlStatus", "RequiredValidator", "NgModel", "NgbTooltip", "FaLayersComponent", "AssessmentCorrectionRoundBadgeComponent", "ArtemisTranslatePipe", "FeedbackContentPipe", "QuotePipe", "styles", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275listener", "feedback_r2", "\u0275\u0275restoreView", "_r1", "$implicit", "ctx_r2", "\u0275\u0275nextContext", "\u0275\u0275resetView", "updateFeedback", "deleteFeedback", "\u0275\u0275advance", "\u0275\u0275property", "resultId", "readOnly", "highlightDifferences", "useDefaultFeedbackSuggestionBadgeText", "$event", "_r4", "acceptSuggestion", "discardSuggestion", "suggestion_r5", "UnreferencedFeedbackComponent", "structuredGradingCriterionService", "inject", "StructuredGradingCriterionService", "FeedbackType", "unreferencedFeedback", "assessmentsAreValid", "addReferenceIdForExampleSubmission", "feedbacks", "feedbackSuggestions", "feedbacksChange", "EventEmitter", "onAcceptSuggestion", "onDiscardSuggestion", "feedbackToDelete", "indexToDelete", "indexOf", "splice", "emit", "validateFeedback", "length", "feedback", "credits", "undefined", "isNaN", "indexToUpdate", "push", "addUnreferencedFeedback", "Feedback", "type", "MANUAL_UNREFERENCED", "reference", "generateNewUnreferencedFeedbackReference", "toString", "references", "map", "id", "Math", "max", "concat", "filter", "f", "text", "FEEDBACK_SUGGESTION_IDENTIFIER", "replace", "FEEDBACK_SUGGESTION_ACCEPTED_IDENTIFIER", "createAssessmentOnDrop", "event", "newFeedback", "last", "updateFeedbackWithStructuredGradingInstructionEvent", "selectors", "inputs", "outputs", "decls", "vars", "consts", "template", "rf", "ctx", "preventDefault", "\u0275\u0275template", "UnreferencedFeedbackComponent_Conditional_10_Template", "\u0275\u0275repeaterCreate", "UnreferencedFeedbackComponent_For_12_Template", "\u0275\u0275repeaterTrackByIdentity", "UnreferencedFeedbackComponent_For_14_Template", "\u0275\u0275conditional", "\u0275\u0275repeater", "TranslateDirective", "UnreferencedFeedbackDetailComponent", "encapsulation"]
}
