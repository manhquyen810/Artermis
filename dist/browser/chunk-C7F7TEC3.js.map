{
  "version": 3,
  "sources": ["src/main/webapp/app/exercises/quiz/manage/quiz-exercise-manage-buttons.component.ts", "src/main/webapp/app/exercises/quiz/manage/quiz-exercise-manage-buttons.component.html", "src/main/webapp/app/exercises/quiz/manage/quiz-exercise-lifecycle-buttons.component.ts", "src/main/webapp/app/exercises/quiz/manage/quiz-exercise-lifecycle-buttons.component.html"],
  "sourcesContent": ["import { Component, EventEmitter, Input, OnInit, Output, inject } from '@angular/core';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { QuizExercise } from 'app/entities/quiz/quiz-exercise.model';\r\nimport { QuizExerciseService } from './quiz-exercise.service';\r\nimport { ActivatedRoute, Router, RouterLink } from '@angular/router';\r\nimport { ActionType } from 'app/shared/delete-dialog/delete-dialog.model';\r\nimport { ExerciseService } from 'app/exercises/shared/exercise/exercise.service';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { EventManager } from 'app/core/util/event-manager.service';\r\nimport { faClipboardCheck, faEye, faFileExport, faListAlt, faSignal, faTable, faTrash, faUndo, faWrench } from '@fortawesome/free-solid-svg-icons';\r\nimport { Subject } from 'rxjs';\r\nimport { ButtonSize, ButtonType } from 'app/shared/components/button.component';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { ButtonComponent } from 'app/shared/components/button.component';\r\nimport { DeleteButtonDirective } from 'app/shared/delete-dialog/delete-button.directive';\r\n\r\n@Component({\r\n    selector: 'jhi-quiz-exercise-manage-buttons',\r\n    templateUrl: './quiz-exercise-manage-buttons.component.html',\r\n    imports: [RouterLink, FaIconComponent, TranslateDirective, ButtonComponent, DeleteButtonDirective],\r\n})\r\nexport class QuizExerciseManageButtonsComponent implements OnInit {\r\n    private quizExerciseService = inject(QuizExerciseService);\r\n    private eventManager = inject(EventManager);\r\n    private alertService = inject(AlertService);\r\n    private exerciseService = inject(ExerciseService);\r\n    private route = inject(ActivatedRoute);\r\n    private router = inject(Router);\r\n\r\n    protected readonly ActionType = ActionType;\r\n    readonly faEye = faEye;\r\n    readonly faSignal = faSignal;\r\n    readonly faTable = faTable;\r\n    readonly faFileExport = faFileExport;\r\n    readonly faWrench = faWrench;\r\n    readonly faTrash = faTrash;\r\n    readonly faListAlt = faListAlt;\r\n    readonly faUndo = faUndo;\r\n    readonly faClipboardCheck = faClipboardCheck;\r\n\r\n    readonly ButtonType = ButtonType;\r\n    readonly ButtonSize = ButtonSize;\r\n\r\n    protected dialogErrorSource = new Subject<string>();\r\n    dialogError$ = this.dialogErrorSource.asObservable();\r\n\r\n    courseId: number;\r\n    examId: number;\r\n    isExamMode: boolean;\r\n\r\n    baseUrl: string;\r\n    isEvaluatingQuizExercise: boolean;\r\n\r\n    @Input()\r\n    isDetailPage: boolean;\r\n\r\n    @Input()\r\n    quizExercise: QuizExercise;\r\n\r\n    @Output()\r\n    loadQuizExercises = new EventEmitter();\r\n\r\n    ngOnInit() {\r\n        this.courseId = Number(this.route.snapshot.paramMap.get('courseId'));\r\n        this.examId = Number(this.route.snapshot.paramMap.get('examId'));\r\n        const groupId = Number(this.route.snapshot.paramMap.get('exerciseGroupId'));\r\n        if (this.examId && groupId) {\r\n            this.isExamMode = true;\r\n        }\r\n\r\n        if (this.isExamMode) {\r\n            this.baseUrl = `/course-management/${this.courseId}/exams/${this.examId}/exercise-groups/${groupId}`;\r\n        } else {\r\n            this.baseUrl = `/course-management/${this.courseId}`;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Exports questions for the given quiz exercise in json file\r\n     * @param exportAll If true exports all questions, else exports only those whose export flag is true\r\n     */\r\n    exportQuizExercise(exportAll: boolean) {\r\n        this.quizExerciseService.find(this.quizExercise.id!).subscribe((response: HttpResponse<QuizExercise>) => {\r\n            const exercise = response.body!;\r\n            this.quizExerciseService.exportQuiz(exercise.quizQuestions, exportAll, exercise.title);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Deletes quiz exercise\r\n     */\r\n    deleteQuizExercise() {\r\n        this.quizExerciseService.delete(this.quizExercise.id!).subscribe({\r\n            next: () => {\r\n                this.eventManager.broadcast({\r\n                    name: 'quizExerciseListModification',\r\n                    content: 'Deleted an quizExercise',\r\n                });\r\n                this.dialogErrorSource.next('');\r\n                if (this.isDetailPage) {\r\n                    this.router.navigate(['course-management', this.quizExercise.course!.id, 'exercises']);\r\n                }\r\n            },\r\n            error: (error: HttpErrorResponse) => this.dialogErrorSource.next(error.message),\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Resets quiz exercise\r\n     */\r\n    resetQuizExercise() {\r\n        this.exerciseService.reset(this.quizExercise.id!).subscribe({\r\n            next: () => {\r\n                this.eventManager.broadcast({\r\n                    name: 'quizExerciseListModification',\r\n                    content: 'Reset an quizExercise',\r\n                });\r\n                this.dialogErrorSource.next('');\r\n                this.alertService.success('artemisApp.quizExercise.resetSuccessful', { title: this.quizExercise.title });\r\n                this.loadQuizExercises.emit();\r\n            },\r\n            error: (error: HttpErrorResponse) => this.dialogErrorSource.next(error.message),\r\n        });\r\n    }\r\n\r\n    evaluateQuizExercise() {\r\n        this.isEvaluatingQuizExercise = true;\r\n        this.exerciseService.evaluateQuizExercise(this.quizExercise.id!).subscribe({\r\n            next: () => {\r\n                this.alertService.success('artemisApp.quizExercise.evaluateQuizExerciseSuccess');\r\n                this.isEvaluatingQuizExercise = false;\r\n            },\r\n            error: (error: HttpErrorResponse) => {\r\n                this.dialogErrorSource.next(error.message);\r\n                this.isEvaluatingQuizExercise = false;\r\n            },\r\n        });\r\n    }\r\n}\r\n", "<div class=\"btn-group {{ isDetailPage ? 'flex-wrap' : 'flex-btn-group-container' }}\">\r\n    @if (quizExercise.isAtLeastTutor) {\r\n        <div class=\"{{ isDetailPage ? 'd-flex' : 'btn-group-vertical me-1 mb-1' }} \">\r\n            <a id=\"preview-quiz\" [routerLink]=\"[baseUrl, 'quiz-exercises', quizExercise.id, 'preview']\" class=\"btn btn-success btn-sm me-1 mb-1\">\r\n                <fa-icon [icon]=\"faEye\" />\r\n                <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.quizExercise.preview\"></span>\r\n            </a>\r\n            <a [routerLink]=\"[baseUrl, 'quiz-exercises', quizExercise.id, 'solution']\" class=\"btn btn-success btn-sm me-1 mb-1\">\r\n                <fa-icon [icon]=\"faEye\" />\r\n                <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.quizExercise.solution\"></span>\r\n            </a>\r\n        </div>\r\n        <div class=\"{{ isDetailPage ? 'd-flex' : 'btn-group-vertical me-1 mb-1' }} \">\r\n            <a [routerLink]=\"[baseUrl, 'quiz-exercises', quizExercise.id, 'quiz-point-statistic']\" class=\"btn btn-info btn-sm me-1 mb-1\">\r\n                <span>\r\n                    <fa-icon [icon]=\"faSignal\" />\r\n                    <span class=\"d-none d-md-inline\" jhiTranslate=\"global.menu.entities.quizStatistic\"></span>\r\n                </span>\r\n            </a>\r\n            <a [routerLink]=\"[baseUrl, 'quiz-exercises', quizExercise.id, 'scores']\" class=\"btn btn-info btn-sm me-1 mb-1\">\r\n                <fa-icon [icon]=\"faTable\" />\r\n                <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.scores\"></span>\r\n            </a>\r\n            @if (isDetailPage) {\r\n                <a [routerLink]=\"[baseUrl, 'quiz-exercises', quizExercise.id, 'participations']\" class=\"btn btn-primary btn-sm me-1 mb-1\">\r\n                    <fa-icon [icon]=\"faListAlt\" />\r\n                    <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.exercise.participations\"></span>\r\n                </a>\r\n            }\r\n        </div>\r\n    }\r\n    <div class=\"{{ isDetailPage ? 'd-flex' : 'btn-group-vertical me-1 mb-1' }} \">\r\n        @if (quizExercise.isAtLeastEditor) {\r\n            <button type=\"submit\" (click)=\"exportQuizExercise(true)\" class=\"btn btn-warning btn-sm me-1 mb-1\">\r\n                <fa-icon [icon]=\"faFileExport\" />\r\n                <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.export\"></span>\r\n            </button>\r\n        }\r\n        @if (quizExercise.isAtLeastEditor && !quizExercise.quizEnded) {\r\n            <a [class.disabled]=\"!quizExercise.isEditable\" [routerLink]=\"[baseUrl, 'quiz-exercises', quizExercise.id, 'edit']\" class=\"btn btn-warning btn-sm me-1 mb-1\">\r\n                <fa-icon [icon]=\"faWrench\" />\r\n                <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.edit\"></span>\r\n            </a>\r\n        }\r\n        @if (quizExercise.isAtLeastInstructor && quizExercise.quizEnded) {\r\n            <a [routerLink]=\"[baseUrl, 'quiz-exercises', quizExercise.id, 're-evaluate']\" class=\"btn btn-warning btn-sm me-1 mb-1\">\r\n                <fa-icon [icon]=\"faWrench\" />\r\n                <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.re-evaluate\"></span>\r\n            </a>\r\n            @if (isDetailPage) {\r\n                <jhi-button\r\n                    [btnType]=\"ButtonType.WARNING\"\r\n                    [btnSize]=\"ButtonSize.SMALL\"\r\n                    [title]=\"'artemisApp.quizExercise.evaluateQuizExercise'\"\r\n                    [icon]=\"faClipboardCheck\"\r\n                    [isLoading]=\"isEvaluatingQuizExercise\"\r\n                    (onClick)=\"evaluateQuizExercise()\"\r\n                    class=\"me-1 mb-1\"\r\n                />\r\n            }\r\n        }\r\n    </div>\r\n    @if (quizExercise.isAtLeastInstructor) {\r\n        <div class=\"{{ isDetailPage ? 'd-flex' : 'btn-group-vertical me-1 mb-1' }} \">\r\n            <button\r\n                jhiDeleteButton\r\n                [entityTitle]=\"quizExercise.title || ''\"\r\n                [actionType]=\"ActionType.Reset\"\r\n                deleteConfirmationText=\"artemisApp.exercise.delete.typeNameToConfirm\"\r\n                (delete)=\"resetQuizExercise()\"\r\n                [dialogError]=\"dialogError$\"\r\n                deleteQuestion=\"artemisApp.quizExercise.reset.question\"\r\n                class=\"mb-1\"\r\n            >\r\n                <fa-icon [icon]=\"faUndo\" />\r\n            </button>\r\n            <button\r\n                jhiDeleteButton\r\n                [entityTitle]=\"quizExercise.title || ''\"\r\n                deleteQuestion=\"artemisApp.quizExercise.delete.question\"\r\n                deleteConfirmationText=\"artemisApp.exercise.delete.typeNameToConfirm\"\r\n                (delete)=\"deleteQuizExercise()\"\r\n                [dialogError]=\"dialogError$\"\r\n                id=\"delete-quiz-{{ quizExercise.id }}\"\r\n                class=\"mb-1\"\r\n            >\r\n                <fa-icon [icon]=\"faTrash\" />\r\n            </button>\r\n        </div>\r\n    }\r\n</div>\r\n", "import { Component, EventEmitter, Input, Output, inject } from '@angular/core';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { QuizExercise, QuizMode, QuizStatus } from 'app/entities/quiz/quiz-exercise.model';\r\nimport { QuizExerciseService } from './quiz-exercise.service';\r\nimport { ActionType } from 'app/shared/delete-dialog/delete-dialog.model';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { faEye, faFileExport, faPlayCircle, faPlus, faSignal, faSort, faStopCircle, faTable, faTimes, faWrench } from '@fortawesome/free-solid-svg-icons';\r\nimport { Subject } from 'rxjs';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { DeleteButtonDirective } from 'app/shared/delete-dialog/delete-button.directive';\r\n\r\n@Component({\r\n    selector: 'jhi-quiz-exercise-lifecycle-buttons',\r\n    templateUrl: './quiz-exercise-lifecycle-buttons.component.html',\r\n    imports: [FaIconComponent, TranslateDirective, DeleteButtonDirective],\r\n})\r\nexport class QuizExerciseLifecycleButtonsComponent {\r\n    private quizExerciseService = inject(QuizExerciseService);\r\n    private alertService = inject(AlertService);\r\n\r\n    protected readonly QuizMode = QuizMode;\r\n    protected readonly QuizStatus = QuizStatus;\r\n    protected readonly ActionType = ActionType;\r\n\r\n    // Icons\r\n    faSort = faSort;\r\n    faPlus = faPlus;\r\n    faTimes = faTimes;\r\n    faEye = faEye;\r\n    faWrench = faWrench;\r\n    faTable = faTable;\r\n    faSignal = faSignal;\r\n    faFileExport = faFileExport;\r\n    faPlayCircle = faPlayCircle;\r\n    faStopCircle = faStopCircle;\r\n\r\n    protected dialogErrorSource = new Subject<string>();\r\n    dialogError$ = this.dialogErrorSource.asObservable();\r\n\r\n    @Input()\r\n    quizExercise: QuizExercise;\r\n\r\n    @Output()\r\n    loadOne = new EventEmitter<number>();\r\n\r\n    @Output()\r\n    handleNewQuizExercise = new EventEmitter<QuizExercise>();\r\n\r\n    /**\r\n     * Set the quiz open for practice\r\n     */\r\n    openForPractice() {\r\n        this.quizExerciseService.openForPractice(this.quizExercise.id!).subscribe({\r\n            next: (res: HttpResponse<QuizExercise>) => {\r\n                this.handleNewQuizExercise.emit(res.body!);\r\n            },\r\n            error: (res: HttpErrorResponse) => {\r\n                this.onError(res);\r\n            },\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Start the given quiz-exercise immediately\r\n     */\r\n    startQuiz() {\r\n        this.quizExerciseService.start(this.quizExercise.id!).subscribe({\r\n            next: (res: HttpResponse<QuizExercise>) => {\r\n                this.handleNewQuizExercise.emit(res.body!);\r\n            },\r\n            error: (res: HttpErrorResponse) => {\r\n                this.onError(res);\r\n            },\r\n        });\r\n    }\r\n\r\n    /**\r\n     * End the given quiz-exercise immediately\r\n     */\r\n    endQuiz() {\r\n        return this.quizExerciseService.end(this.quizExercise.id!).subscribe({\r\n            next: (res: HttpResponse<QuizExercise>) => {\r\n                this.handleNewQuizExercise.emit(res.body!);\r\n                this.dialogErrorSource.next('');\r\n            },\r\n            error: (error: HttpErrorResponse) => this.dialogErrorSource.next(error.message),\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Start the given quiz-batch immediately\r\n     *\r\n     * @param quizBatchId the quiz batch id to start\r\n     */\r\n    startBatch(quizBatchId: number) {\r\n        this.quizExerciseService.startBatch(quizBatchId).subscribe({\r\n            next: () => {\r\n                this.loadOne.emit(this.quizExercise.id!);\r\n            },\r\n            error: (res: HttpErrorResponse) => {\r\n                this.onError(res);\r\n            },\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Adds a new batch to the given quiz\r\n     */\r\n    addBatch() {\r\n        this.quizExerciseService.addBatch(this.quizExercise.id!).subscribe({\r\n            next: () => {\r\n                this.loadOne.emit(this.quizExercise.id!);\r\n            },\r\n            error: (res: HttpErrorResponse) => {\r\n                this.onError(res);\r\n            },\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Make the given quiz-exercise visible to students\r\n     */\r\n    showQuiz() {\r\n        this.quizExerciseService.setVisible(this.quizExercise.id!).subscribe({\r\n            next: (res: HttpResponse<QuizExercise>) => {\r\n                this.handleNewQuizExercise.emit(res.body!);\r\n            },\r\n            error: (res: HttpErrorResponse) => {\r\n                this.onError(res);\r\n            },\r\n        });\r\n    }\r\n\r\n    private onError(error: HttpErrorResponse) {\r\n        this.alertService.error(error.headers.get('X-artemisApp-error')!);\r\n        this.loadOne.emit(this.quizExercise.id!);\r\n    }\r\n}\r\n", "@if (quizExercise.status === QuizStatus.CLOSED && quizExercise.isAtLeastEditor) {\r\n    <button type=\"submit\" (click)=\"openForPractice()\" class=\"btn btn-warning btn-sm me-1 mb-1\">\r\n        <fa-icon [icon]=\"faPlayCircle\" />\r\n        <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.quizExercise.openForPractice\"></span>\r\n    </button>\r\n}\r\n@if (\r\n    (quizExercise.status === QuizStatus.VISIBLE || quizExercise.status === QuizStatus.INVISIBLE) && quizExercise.quizMode === QuizMode.SYNCHRONIZED && quizExercise.isAtLeastEditor\r\n) {\r\n    <button id=\"instructor-quiz-start-{{ quizExercise.id }}\" type=\"submit\" (click)=\"startQuiz()\" class=\"btn btn-warning btn-sm me-1 mb-1\">\r\n        <fa-icon [icon]=\"faPlayCircle\" />\r\n        <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.quizExercise.startQuiz\"></span>\r\n    </button>\r\n}\r\n@if ((quizExercise.status === QuizStatus.VISIBLE || quizExercise.status === QuizStatus.ACTIVE) && quizExercise.quizMode === QuizMode.BATCHED) {\r\n    @for (batch of quizExercise.quizBatches; track batch) {\r\n        <div>\r\n            ID: {{ batch.id }}\r\n            @if (!batch.ended) {\r\n                <span> PW: {{ batch.password }} </span>\r\n            }\r\n            @if (batch.started && !batch.ended) {\r\n                <span> Running </span>\r\n            }\r\n            @if (batch.ended) {\r\n                <span> Done </span>\r\n            }\r\n            @if (!batch.started) {\r\n                <button id=\"instructor-quiz-start-{{ quizExercise.id }}-{{ batch.id }}\" type=\"submit\" (click)=\"startBatch(batch.id!)\" class=\"btn btn-warning btn-sm me-1 mb-1\">\r\n                    <fa-icon [icon]=\"faPlayCircle\" />\r\n                    <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.quizExercise.startQuiz\"></span>\r\n                </button>\r\n            }\r\n        </div>\r\n    }\r\n    <div>\r\n        <button id=\"instructor-quiz-add-{{ quizExercise.id }}\" type=\"submit\" (click)=\"addBatch()\" class=\"btn btn-primary btn-sm me-1 mb-1\">\r\n            <fa-icon [icon]=\"faPlus\" />\r\n            <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.quizExercise.addBatch\"></span>\r\n        </button>\r\n    </div>\r\n}\r\n@if (\r\n    (quizExercise.status === QuizStatus.VISIBLE || quizExercise.status === QuizStatus.ACTIVE) && quizExercise.quizMode !== QuizMode.SYNCHRONIZED && quizExercise.isAtLeastInstructor\r\n) {\r\n    <button\r\n        id=\"quiz-set-end-{{ quizExercise.id }}\"\r\n        class=\"mb-1\"\r\n        jhiDeleteButton\r\n        [actionType]=\"ActionType.EndNow\"\r\n        [entityTitle]=\"quizExercise.title || ''\"\r\n        deleteQuestion=\"artemisApp.quizExercise.endNow.question\"\r\n        deleteConfirmationText=\"artemisApp.exercise.delete.typeNameToConfirm\"\r\n        (delete)=\"endQuiz()\"\r\n        [dialogError]=\"dialogError$\"\r\n    >\r\n        <fa-icon [icon]=\"faStopCircle\" />\r\n    </button>\r\n}\r\n@if (quizExercise.status === QuizStatus.INVISIBLE && quizExercise.isAtLeastEditor) {\r\n    <button id=\"quiz-set-visible-{{ quizExercise.id }}\" type=\"submit\" (click)=\"showQuiz()\" class=\"btn btn-warning btn-sm me-1 mb-1\">\r\n        <fa-icon [icon]=\"faEye\" />\r\n        <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.quizExercise.showNow\"></span>\r\n    </button>\r\n}\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "\u0275\u0275pureFunction2", "_c4", "ctx_r0", "baseUrl", "quizExercise", "id", "faListAlt", "\u0275\u0275template", "QuizExerciseManageButtonsComponent_Conditional_2_Conditional_37_Template", "\u0275\u0275classMapInterpolate1", "isDetailPage", "_c0", "faEye", "_c1", "_c2", "faSignal", "_c3", "faTable", "\u0275\u0275conditional", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r2", "\u0275\u0275nextContext", "\u0275\u0275resetView", "exportQuizExercise", "faFileExport", "\u0275\u0275classProp", "isEditable", "_c5", "faWrench", "_r3", "evaluateQuizExercise", "ButtonType", "WARNING", "ButtonSize", "SMALL", "faClipboardCheck", "isEvaluatingQuizExercise", "QuizExerciseManageButtonsComponent_Conditional_7_Conditional_8_Template", "_c6", "_r4", "resetQuizExercise", "deleteQuizExercise", "title", "ActionType", "Reset", "dialogError$", "faUndo", "\u0275\u0275propertyInterpolate1", "faTrash", "QuizExerciseManageButtonsComponent", "quizExerciseService", "inject", "QuizExerciseService", "eventManager", "EventManager", "alertService", "AlertService", "exerciseService", "ExerciseService", "route", "ActivatedRoute", "router", "Router", "dialogErrorSource", "Subject", "asObservable", "courseId", "examId", "isExamMode", "loadQuizExercises", "EventEmitter", "ngOnInit", "Number", "snapshot", "paramMap", "get", "groupId", "exportAll", "find", "subscribe", "response", "exercise", "body", "exportQuiz", "quizQuestions", "delete", "next", "broadcast", "name", "content", "navigate", "course", "error", "message", "reset", "success", "emit", "selectors", "inputs", "outputs", "decls", "vars", "consts", "template", "rf", "ctx", "QuizExerciseManageButtonsComponent_Conditional_2_Template", "QuizExerciseManageButtonsComponent_Conditional_5_Template", "QuizExerciseManageButtonsComponent_Conditional_6_Template", "QuizExerciseManageButtonsComponent_Conditional_7_Template", "QuizExerciseManageButtonsComponent_Conditional_9_Template", "isAtLeastTutor", "isAtLeastEditor", "quizEnded", "isAtLeastInstructor", "RouterLink", "FaIconComponent", "TranslateDirective", "ButtonComponent", "DeleteButtonDirective", "encapsulation", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "openForPractice", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "faPlayCircle", "_r3", "startQuiz", "\u0275\u0275propertyInterpolate1", "quizExercise", "id", "\u0275\u0275textInterpolate1", "batch_r5", "password", "_r6", "$implicit", "startBatch", "\u0275\u0275propertyInterpolate2", "\u0275\u0275template", "QuizExerciseLifecycleButtonsComponent_Conditional_2_For_2_Conditional_3_Template", "QuizExerciseLifecycleButtonsComponent_Conditional_2_For_2_Conditional_4_Template", "QuizExerciseLifecycleButtonsComponent_Conditional_2_For_2_Conditional_5_Template", "QuizExerciseLifecycleButtonsComponent_Conditional_2_For_2_Conditional_6_Template", "\u0275\u0275conditional", "ended", "started", "\u0275\u0275repeaterCreate", "QuizExerciseLifecycleButtonsComponent_Conditional_2_For_2_Template", "\u0275\u0275repeaterTrackByIdentity", "_r4", "addBatch", "\u0275\u0275repeater", "quizBatches", "faPlus", "_r7", "endQuiz", "ActionType", "EndNow", "title", "dialogError$", "faStopCircle", "_r8", "showQuiz", "faEye", "QuizExerciseLifecycleButtonsComponent", "quizExerciseService", "inject", "QuizExerciseService", "alertService", "AlertService", "QuizMode", "QuizStatus", "faSort", "faTimes", "faWrench", "faTable", "faSignal", "faFileExport", "dialogErrorSource", "Subject", "asObservable", "loadOne", "EventEmitter", "handleNewQuizExercise", "subscribe", "next", "res", "emit", "body", "error", "onError", "start", "end", "message", "quizBatchId", "setVisible", "headers", "get", "selectors", "inputs", "outputs", "decls", "vars", "consts", "template", "rf", "ctx", "QuizExerciseLifecycleButtonsComponent_Conditional_0_Template", "QuizExerciseLifecycleButtonsComponent_Conditional_1_Template", "QuizExerciseLifecycleButtonsComponent_Conditional_2_Template", "QuizExerciseLifecycleButtonsComponent_Conditional_3_Template", "QuizExerciseLifecycleButtonsComponent_Conditional_4_Template", "status", "CLOSED", "isAtLeastEditor", "VISIBLE", "INVISIBLE", "quizMode", "SYNCHRONIZED", "ACTIVE", "BATCHED", "isAtLeastInstructor", "FaIconComponent", "TranslateDirective", "DeleteButtonDirective", "encapsulation"]
}
