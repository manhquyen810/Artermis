{
  "version": 3,
  "sources": ["src/main/webapp/app/course/manage/course-update.component.ts", "src/main/webapp/app/course/manage/course-update.component.html"],
  "sourcesContent": ["import { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, ElementRef, OnInit, ViewChild, inject } from '@angular/core';\r\nimport { FormControl, FormGroup, FormsModule, ReactiveFormsModule, ValidatorFn, Validators } from '@angular/forms';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { AlertService, AlertType } from 'app/core/util/alert.service';\r\nimport { HasAnyAuthorityDirective } from 'app/shared/auth/has-any-authority.directive';\r\nimport { Observable, OperatorFunction, Subject, debounceTime, distinctUntilChanged, filter, map, merge, tap } from 'rxjs';\r\nimport { regexValidator } from 'app/shared/form/shortname-validator.directive';\r\nimport { Course, CourseInformationSharingConfiguration, isCommunicationEnabled, isMessagingEnabled } from 'app/entities/course.model';\r\nimport { CourseManagementService } from './course-management.service';\r\nimport { ColorSelectorComponent } from 'app/shared/color-selector/color-selector.component';\r\nimport { ARTEMIS_DEFAULT_COLOR, PROFILE_ATHENA, PROFILE_ATLAS, PROFILE_LTI } from 'app/app.constants';\r\nimport { CachingStrategy } from 'app/shared/image/secured-image.component';\r\nimport { ProfileService } from 'app/shared/layouts/profiles/profile.service';\r\nimport dayjs from 'dayjs/esm';\r\nimport { ArtemisNavigationUtilService } from 'app/utils/navigation.utils';\r\nimport { SHORT_NAME_PATTERN } from 'app/shared/constants/input.constants';\r\nimport { Organization } from 'app/entities/organization.model';\r\nimport { NgbModal, NgbTooltip, NgbTypeahead } from '@ng-bootstrap/ng-bootstrap';\r\nimport { OrganizationManagementService } from 'app/admin/organization-management/organization-management.service';\r\nimport { OrganizationSelectorComponent } from 'app/shared/organization-selector/organization-selector.component';\r\nimport { faBan, faExclamationTriangle, faPen, faQuestionCircle, faSave, faTimes, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { base64StringToBlob } from 'app/utils/blob-util';\r\nimport { ProgrammingLanguage } from 'app/entities/programming/programming-exercise.model';\r\nimport { CourseAdminService } from 'app/course/manage/course-admin.service';\r\nimport { FeatureToggle, FeatureToggleService } from 'app/shared/feature-toggle/feature-toggle.service';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\nimport { EventManager } from 'app/core/util/event-manager.service';\r\nimport { FileService } from 'app/shared/http/file.service';\r\nimport { onError } from 'app/shared/util/global.utils';\r\nimport { getSemesters } from 'app/utils/semester-utils';\r\nimport { ImageCropperModalComponent } from 'app/course/manage/image-cropper-modal.component';\r\nimport { scrollToTopOfPage } from 'app/shared/util/utils';\r\nimport { CourseStorageService } from 'app/course/manage/course-storage.service';\r\nimport { SecuredImageComponent } from 'app/shared/image/secured-image.component';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { KeyValuePipe, NgClass, NgStyle, NgTemplateOutlet } from '@angular/common';\r\nimport { FormDateTimePickerComponent } from 'app/shared/date-time-picker/date-time-picker.component';\r\nimport { HelpIconComponent } from 'app/shared/components/help-icon.component';\r\nimport { MarkdownEditorMonacoComponent } from 'app/shared/markdown-editor/monaco/markdown-editor-monaco.component';\r\nimport { FeatureToggleHideDirective } from 'app/shared/feature-toggle/feature-toggle-hide.directive';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\nimport { RemoveKeysPipe } from 'app/shared/pipes/remove-keys.pipe';\r\nimport { FeatureOverlayComponent } from 'app/shared/components/feature-overlay/feature-overlay.component';\r\n\r\nconst DEFAULT_CUSTOM_GROUP_NAME = 'artemis-dev';\r\n\r\n@Component({\r\n    selector: 'jhi-course-update',\r\n    templateUrl: './course-update.component.html',\r\n    styleUrls: ['./course-update.component.scss'],\r\n    imports: [\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        SecuredImageComponent,\r\n        FaIconComponent,\r\n        TranslateDirective,\r\n        NgStyle,\r\n        ColorSelectorComponent,\r\n        NgClass,\r\n        NgbTooltip,\r\n        FormDateTimePickerComponent,\r\n        HelpIconComponent,\r\n        MarkdownEditorMonacoComponent,\r\n        FeatureToggleHideDirective,\r\n        NgbTypeahead,\r\n        NgTemplateOutlet,\r\n        KeyValuePipe,\r\n        ArtemisTranslatePipe,\r\n        RemoveKeysPipe,\r\n        FeatureOverlayComponent,\r\n        // NOTE: this is actually used in the html template, otherwise *jhiHasAnyAuthority would not work\r\n        HasAnyAuthorityDirective,\r\n    ],\r\n})\r\nexport class CourseUpdateComponent implements OnInit {\r\n    private eventManager = inject(EventManager);\r\n    private courseManagementService = inject(CourseManagementService);\r\n    private courseAdminService = inject(CourseAdminService);\r\n    private activatedRoute = inject(ActivatedRoute);\r\n    private fileService = inject(FileService);\r\n    private alertService = inject(AlertService);\r\n    private profileService = inject(ProfileService);\r\n    private organizationService = inject(OrganizationManagementService);\r\n    private modalService = inject(NgbModal);\r\n    private navigationUtilService = inject(ArtemisNavigationUtilService);\r\n    private router = inject(Router);\r\n    private featureToggleService = inject(FeatureToggleService);\r\n    private accountService = inject(AccountService);\r\n\r\n    CachingStrategy = CachingStrategy;\r\n    ProgrammingLanguage = ProgrammingLanguage;\r\n\r\n    @ViewChild('fileInput', { static: false }) fileInput: ElementRef<HTMLInputElement>;\r\n    @ViewChild(ColorSelectorComponent, { static: false }) colorSelector: ColorSelectorComponent;\r\n    @ViewChild('timeZoneInput') tzTypeAhead: NgbTypeahead;\r\n\r\n    tzFocus$ = new Subject<string>();\r\n    tzClick$ = new Subject<string>();\r\n    timeZones: string[] = [];\r\n    originalTimeZone?: string;\r\n\r\n    readonly ARTEMIS_DEFAULT_COLOR = ARTEMIS_DEFAULT_COLOR;\r\n\r\n    courseForm: FormGroup;\r\n    course: Course;\r\n    isSaving: boolean;\r\n    courseImageUploadFile?: File;\r\n    croppedImage?: string;\r\n    complaintsEnabled = true;\r\n    requestMoreFeedbackEnabled = true;\r\n    customizeGroupNames = false;\r\n    courseOrganizations: Organization[];\r\n    isAdmin = false;\r\n    // Icons\r\n    faSave = faSave;\r\n    faBan = faBan;\r\n    faTimes = faTimes;\r\n    faTrash = faTrash;\r\n    faQuestionCircle = faQuestionCircle;\r\n    faExclamationTriangle = faExclamationTriangle;\r\n    faPen = faPen;\r\n\r\n    faqEnabled = true;\r\n    communicationEnabled = true;\r\n    messagingEnabled = true;\r\n    atlasEnabled = false;\r\n    ltiEnabled = false;\r\n    isAthenaEnabled = false;\r\n    tutorialGroupsFeatureActivated = false;\r\n\r\n    private courseStorageService = inject(CourseStorageService);\r\n\r\n    readonly semesters = getSemesters();\r\n\r\n    // NOTE: These constants are used to define the maximum length of complaints and complaint responses.\r\n    // This is the maximum value allowed in our database. These values must be the same as in Constants.java\r\n    // Currently set to 65535 as this is the limit of TEXT\r\n    readonly COMPLAINT_RESPONSE_TEXT_LIMIT = 65535;\r\n    readonly COMPLAINT_TEXT_LIMIT = 65535;\r\n    readonly COURSE_TITLE_LIMIT = 255;\r\n\r\n    ngOnInit() {\r\n        this.timeZones = (Intl as any).supportedValuesOf('timeZone');\r\n        this.isSaving = false;\r\n        // create a new course, and only overwrite it if we fetch a course to edit\r\n        this.course = new Course();\r\n        this.activatedRoute.parent!.data.subscribe(({ course }) => {\r\n            if (course) {\r\n                this.course = course;\r\n                this.organizationService.getOrganizationsByCourse(course.id).subscribe((organizations) => {\r\n                    this.courseOrganizations = organizations;\r\n                });\r\n                this.originalTimeZone = this.course.timeZone;\r\n                this.faqEnabled = course.faqEnabled;\r\n                // complaints are only enabled when at least one complaint is allowed and the complaint duration is positive\r\n                this.complaintsEnabled =\r\n                    (this.course.maxComplaints! > 0 || this.course.maxTeamComplaints! > 0) &&\r\n                    this.course.maxComplaintTimeDays! > 0 &&\r\n                    this.course.maxComplaintTextLimit! > 0 &&\r\n                    this.course.maxComplaintResponseTextLimit! > 0;\r\n                this.requestMoreFeedbackEnabled = this.course.maxRequestMoreFeedbackTimeDays! > 0;\r\n            } else {\r\n                this.fileService.getTemplateCodeOfConduct().subscribe({\r\n                    next: (res: HttpResponse<string>) => {\r\n                        if (res.body) {\r\n                            this.course.courseInformationSharingMessagingCodeOfConduct = res.body;\r\n                        }\r\n                    },\r\n                    error: (res: HttpErrorResponse) => onError(this.alertService, res),\r\n                });\r\n            }\r\n        });\r\n\r\n        this.profileService.getProfileInfo().subscribe((profileInfo) => {\r\n            if (profileInfo) {\r\n                if (!profileInfo.inProduction) {\r\n                    // developers may want to customize the groups\r\n                    this.customizeGroupNames = true;\r\n                    if (!this.course.studentGroupName) {\r\n                        this.course.studentGroupName = DEFAULT_CUSTOM_GROUP_NAME;\r\n                    }\r\n                    if (!this.course.teachingAssistantGroupName) {\r\n                        this.course.teachingAssistantGroupName = DEFAULT_CUSTOM_GROUP_NAME;\r\n                    }\r\n                    if (!this.course.editorGroupName) {\r\n                        this.course.editorGroupName = DEFAULT_CUSTOM_GROUP_NAME;\r\n                    }\r\n                    if (!this.course.instructorGroupName) {\r\n                        this.course.instructorGroupName = DEFAULT_CUSTOM_GROUP_NAME;\r\n                    }\r\n                }\r\n                this.atlasEnabled = profileInfo.activeProfiles.includes(PROFILE_ATLAS);\r\n                this.ltiEnabled = profileInfo.activeProfiles.includes(PROFILE_LTI);\r\n                this.isAthenaEnabled = profileInfo.activeProfiles.includes(PROFILE_ATHENA);\r\n            }\r\n        });\r\n\r\n        this.communicationEnabled = isCommunicationEnabled(this.course);\r\n        this.messagingEnabled = isMessagingEnabled(this.course);\r\n\r\n        this.courseForm = new FormGroup(\r\n            {\r\n                id: new FormControl(this.course.id),\r\n                title: new FormControl(this.course.title, {\r\n                    validators: [Validators.required, Validators.maxLength(this.COURSE_TITLE_LIMIT)],\r\n                    updateOn: 'blur',\r\n                }),\r\n                shortName: new FormControl(\r\n                    { value: this.course.shortName, disabled: !!this.course.id },\r\n                    {\r\n                        validators: [Validators.required, Validators.minLength(3), regexValidator(SHORT_NAME_PATTERN)],\r\n                        updateOn: 'blur',\r\n                    },\r\n                ),\r\n                // note: we still reference them here so that they are used in the update method when the course is retrieved from the course form\r\n                customizeGroupNames: new FormControl(this.customizeGroupNames),\r\n                studentGroupName: new FormControl(this.course.studentGroupName),\r\n                teachingAssistantGroupName: new FormControl(this.course.teachingAssistantGroupName),\r\n                editorGroupName: new FormControl(this.course.editorGroupName),\r\n                instructorGroupName: new FormControl(this.course.instructorGroupName),\r\n                description: new FormControl(this.course.description),\r\n                courseInformationSharingMessagingCodeOfConduct: new FormControl(this.course.courseInformationSharingMessagingCodeOfConduct),\r\n                organizations: new FormControl(this.courseOrganizations),\r\n                startDate: new FormControl(this.course.startDate),\r\n                endDate: new FormControl(this.course.endDate),\r\n                semester: new FormControl(this.course.semester),\r\n                testCourse: new FormControl(this.course.testCourse),\r\n                learningPathsEnabled: new FormControl(this.course.learningPathsEnabled),\r\n                studentCourseAnalyticsDashboardEnabled: new FormControl(this.course.studentCourseAnalyticsDashboardEnabled),\r\n                onlineCourse: new FormControl(this.course.onlineCourse),\r\n                complaintsEnabled: new FormControl(this.complaintsEnabled),\r\n                faqEnabled: new FormControl(this.faqEnabled),\r\n                requestMoreFeedbackEnabled: new FormControl(this.requestMoreFeedbackEnabled),\r\n                maxPoints: new FormControl(this.course.maxPoints, {\r\n                    validators: [Validators.min(1)],\r\n                }),\r\n                accuracyOfScores: new FormControl(this.course.accuracyOfScores, {\r\n                    validators: [Validators.min(1)],\r\n                }),\r\n                defaultProgrammingLanguage: new FormControl(this.course.defaultProgrammingLanguage),\r\n                maxComplaints: new FormControl(this.course.maxComplaints, {\r\n                    validators: [Validators.required, Validators.min(0)],\r\n                }),\r\n                maxTeamComplaints: new FormControl(this.course.maxTeamComplaints, {\r\n                    validators: [Validators.required, Validators.min(0)],\r\n                }),\r\n                maxComplaintTimeDays: new FormControl(this.course.maxComplaintTimeDays, {\r\n                    validators: [Validators.required, Validators.min(0)],\r\n                }),\r\n                maxComplaintTextLimit: new FormControl(this.course.maxComplaintTextLimit, {\r\n                    validators: [Validators.required, Validators.min(0), Validators.max(this.COMPLAINT_TEXT_LIMIT)],\r\n                }),\r\n                maxComplaintResponseTextLimit: new FormControl(this.course.maxComplaintResponseTextLimit, {\r\n                    validators: [Validators.required, Validators.min(0), Validators.max(this.COMPLAINT_RESPONSE_TEXT_LIMIT)],\r\n                }),\r\n                maxRequestMoreFeedbackTimeDays: new FormControl(this.course.maxRequestMoreFeedbackTimeDays, {\r\n                    validators: [Validators.required, Validators.min(0)],\r\n                }),\r\n                restrictedAthenaModulesAccess: new FormControl(this.course.restrictedAthenaModulesAccess),\r\n                enrollmentEnabled: new FormControl(this.course.enrollmentEnabled),\r\n                enrollmentStartDate: new FormControl(this.course.enrollmentStartDate),\r\n                enrollmentEndDate: new FormControl(this.course.enrollmentEndDate),\r\n                enrollmentConfirmationMessage: new FormControl(this.course.enrollmentConfirmationMessage, {\r\n                    validators: [Validators.maxLength(2000)],\r\n                }),\r\n                unenrollmentEnabled: new FormControl(this.course.unenrollmentEnabled),\r\n                unenrollmentEndDate: new FormControl(this.course.unenrollmentEndDate),\r\n                color: new FormControl(this.course.color),\r\n                courseIcon: new FormControl(this.course.courseIcon),\r\n            },\r\n            { validators: CourseValidator },\r\n        );\r\n        this.croppedImage = this.course.courseIcon;\r\n\r\n        this.featureToggleService\r\n            .getFeatureToggleActive(FeatureToggle.TutorialGroups)\r\n            .pipe(\r\n                tap((active) => {\r\n                    this.tutorialGroupsFeatureActivated = active;\r\n                }),\r\n            )\r\n            .subscribe(() => {\r\n                if (this.tutorialGroupsFeatureActivated && this.courseForm) {\r\n                    this.courseForm.addControl('timeZone', new FormControl(this.course?.timeZone));\r\n                }\r\n            });\r\n\r\n        this.isAdmin = this.accountService.isAdmin();\r\n    }\r\n    tzResultFormatter = (timeZone: string) => timeZone;\r\n    tzInputFormatter = (timeZone: string) => timeZone;\r\n\r\n    tzSearch: OperatorFunction<string, readonly string[]> = (text$: Observable<string>) => {\r\n        const debouncedText$ = text$.pipe(debounceTime(200), distinctUntilChanged());\r\n        const clicksWithClosedPopup$ = this.tzClick$.pipe(filter(() => !this.tzTypeAhead.isPopupOpen()));\r\n        const inputFocus$ = this.tzFocus$;\r\n\r\n        return merge(debouncedText$, inputFocus$, clicksWithClosedPopup$).pipe(\r\n            map((term) => (term.length < 3 ? [] : this.timeZones.filter((tz) => tz.toLowerCase().indexOf(term.toLowerCase()) > -1))),\r\n        );\r\n    };\r\n\r\n    get timeZoneChanged() {\r\n        return this.course?.id && this.originalTimeZone && this.originalTimeZone !== this.courseForm.value.timeZone;\r\n    }\r\n\r\n    /**\r\n     * Returns to previous state (same as back button in the browser)\r\n     * Returns to the detail page if there is no previous state, and we edited an existing course\r\n     * Returns to the overview page if there is no previous state, and we created a new course\r\n     */\r\n    previousState() {\r\n        this.navigationUtilService.navigateBackWithOptional(['course-management'], this.course.id?.toString());\r\n    }\r\n\r\n    /**\r\n     * Save the changes on a course\r\n     * This function is called by pressing save after creating or editing a course\r\n     */\r\n    save() {\r\n        this.isSaving = true;\r\n        if (this.courseForm.controls['organizations'] !== undefined) {\r\n            this.courseForm.controls['organizations'].setValue(this.courseOrganizations);\r\n        }\r\n        let file = undefined;\r\n        if (this.courseImageUploadFile && this.croppedImage) {\r\n            const base64Data = this.croppedImage.replace('data:image/png;base64,', '');\r\n            file = base64StringToBlob(base64Data, 'image/*');\r\n        }\r\n\r\n        const course = this.courseForm.getRawValue() as Course;\r\n        // NOTE: prevent overriding this value accidentally\r\n        // TODO: move presentationScore to gradingScale to avoid this\r\n        course.presentationScore = this.course.presentationScore;\r\n\r\n        if (this.communicationEnabled && this.messagingEnabled) {\r\n            course.courseInformationSharingConfiguration = CourseInformationSharingConfiguration.COMMUNICATION_AND_MESSAGING;\r\n        } else if (this.communicationEnabled && !this.messagingEnabled) {\r\n            course.courseInformationSharingConfiguration = CourseInformationSharingConfiguration.COMMUNICATION_ONLY;\r\n        } else {\r\n            this.communicationEnabled = false;\r\n            course.courseInformationSharingConfiguration = CourseInformationSharingConfiguration.DISABLED;\r\n        }\r\n\r\n        if (!course.enrollmentEnabled) {\r\n            course.enrollmentConfirmationMessage = undefined;\r\n        }\r\n\r\n        if (this.course.id !== undefined) {\r\n            this.subscribeToSaveResponse(this.courseManagementService.update(this.course.id, course, file));\r\n        } else {\r\n            this.subscribeToSaveResponse(this.courseAdminService.create(course, file));\r\n        }\r\n    }\r\n\r\n    openColorSelector(event: MouseEvent) {\r\n        this.colorSelector.openColorSelector(event);\r\n    }\r\n\r\n    onSelectedColor(selectedColor: string) {\r\n        this.courseForm.patchValue({ color: selectedColor });\r\n    }\r\n\r\n    /**\r\n     * Async response after saving a course, handles appropriate action in case of error\r\n     * @param result The Http response from the server\r\n     */\r\n    private subscribeToSaveResponse(result: Observable<HttpResponse<Course>>) {\r\n        result.subscribe({\r\n            next: (response: HttpResponse<Course>) => this.onSaveSuccess(response.body),\r\n            error: (res: HttpErrorResponse) => this.onSaveError(res),\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Action on successful course creation or edit\r\n     */\r\n    private onSaveSuccess(updatedCourse: Course | null) {\r\n        this.isSaving = false;\r\n\r\n        if (this.course != updatedCourse) {\r\n            this.eventManager.broadcast({\r\n                name: 'courseModification',\r\n                content: 'Changed a course',\r\n            });\r\n            this.courseStorageService.updateCourse(updatedCourse!);\r\n        }\r\n\r\n        this.router.navigate(['course-management', updatedCourse?.id?.toString()]);\r\n        scrollToTopOfPage();\r\n    }\r\n\r\n    /**\r\n     * @function set course icon\r\n     * @param event {object} Event object which contains the uploaded file\r\n     */\r\n    setCourseImage(event: Event): void {\r\n        const element = event.currentTarget as HTMLInputElement;\r\n        if (element.files && element.files.length > 0) {\r\n            this.courseImageUploadFile = element.files[0];\r\n            this.openCropper();\r\n        }\r\n        element.value = '';\r\n    }\r\n\r\n    /**\r\n     * Action on unsuccessful course creation or edit\r\n     * @param error The error for providing feedback\r\n     */\r\n    private onSaveError(error: HttpErrorResponse) {\r\n        const errorMessage = error.error ? error.error.title : error.headers?.get('x-artemisapp-alert');\r\n        if (errorMessage) {\r\n            this.alertService.addAlert({\r\n                type: AlertType.DANGER,\r\n                message: errorMessage,\r\n                disableTranslation: true,\r\n            });\r\n        }\r\n\r\n        this.isSaving = false;\r\n        window.scrollTo(0, 0);\r\n    }\r\n\r\n    get shortName() {\r\n        return this.courseForm.get('shortName')!;\r\n    }\r\n\r\n    /**\r\n     * Enable or disable online course\r\n     */\r\n    changeOnlineCourse() {\r\n        this.course.onlineCourse = !this.course.onlineCourse;\r\n        if (this.course.onlineCourse) {\r\n            // enrollment enabled cannot be activated if online course is active\r\n            this.courseForm.controls['enrollmentEnabled'].setValue(false);\r\n        }\r\n        this.courseForm.controls['onlineCourse'].setValue(this.course.onlineCourse);\r\n    }\r\n    /**\r\n     * Enable or disable student course enrollment\r\n     */\r\n    changeEnrollmentEnabled() {\r\n        this.course.enrollmentEnabled = !this.course.enrollmentEnabled;\r\n        if (this.course.enrollmentEnabled) {\r\n            // online course cannot be activated if enrollment enabled is set\r\n            this.courseForm.controls['onlineCourse'].setValue(false);\r\n            if (!this.course.enrollmentStartDate || !this.course.enrollmentEndDate) {\r\n                this.course.enrollmentStartDate = this.course.startDate;\r\n                this.courseForm.controls['enrollmentStartDate'].setValue(this.course.startDate);\r\n                this.course.enrollmentEndDate = this.course.endDate;\r\n                this.courseForm.controls['enrollmentEndDate'].setValue(this.course.endDate);\r\n            }\r\n        } else {\r\n            if (this.course.unenrollmentEnabled) {\r\n                this.changeUnenrollmentEnabled();\r\n            }\r\n        }\r\n        this.courseForm.controls['enrollmentEnabled'].setValue(this.course.enrollmentEnabled);\r\n    }\r\n\r\n    /**\r\n     * Enable or disable student course unenrollment\r\n     */\r\n    changeUnenrollmentEnabled() {\r\n        this.course.unenrollmentEnabled = !this.course.unenrollmentEnabled;\r\n        this.courseForm.controls['unenrollmentEnabled'].setValue(this.course.unenrollmentEnabled);\r\n        if (this.course.unenrollmentEnabled && !this.course.unenrollmentEndDate) {\r\n            this.course.unenrollmentEndDate = this.course.endDate;\r\n            this.courseForm.controls['unenrollmentEndDate'].setValue(this.course.unenrollmentEndDate);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Enable or disable complaints\r\n     */\r\n    changeComplaintsEnabled() {\r\n        if (!this.complaintsEnabled) {\r\n            this.complaintsEnabled = true;\r\n            this.courseForm.controls['maxComplaints'].setValue(3);\r\n            this.courseForm.controls['maxTeamComplaints'].setValue(3);\r\n            this.courseForm.controls['maxComplaintTimeDays'].setValue(7);\r\n            this.courseForm.controls['maxComplaintTextLimit'].setValue(2000);\r\n            this.courseForm.controls['maxComplaintResponseTextLimit'].setValue(2000);\r\n        } else {\r\n            this.complaintsEnabled = false;\r\n            this.courseForm.controls['maxComplaints'].setValue(0);\r\n            this.courseForm.controls['maxTeamComplaints'].setValue(0);\r\n            this.courseForm.controls['maxComplaintTimeDays'].setValue(0);\r\n            this.courseForm.controls['maxComplaintTextLimit'].setValue(2000);\r\n            this.courseForm.controls['maxComplaintResponseTextLimit'].setValue(2000);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Enable or disable complaints\r\n     */\r\n    changeRequestMoreFeedbackEnabled() {\r\n        if (!this.requestMoreFeedbackEnabled) {\r\n            this.requestMoreFeedbackEnabled = true;\r\n            this.courseForm.controls['maxRequestMoreFeedbackTimeDays'].setValue(7);\r\n        } else {\r\n            this.requestMoreFeedbackEnabled = false;\r\n            this.courseForm.controls['maxRequestMoreFeedbackTimeDays'].setValue(0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Enable or disable the customization of groups\r\n     */\r\n    changeCustomizeGroupNames() {\r\n        if (!this.customizeGroupNames) {\r\n            this.customizeGroupNames = true;\r\n            this.setGroupNameValuesInCourseForm(\r\n                this.course.studentGroupName ?? DEFAULT_CUSTOM_GROUP_NAME,\r\n                this.course.teachingAssistantGroupName ?? DEFAULT_CUSTOM_GROUP_NAME,\r\n                this.course.editorGroupName ?? DEFAULT_CUSTOM_GROUP_NAME,\r\n                this.course.instructorGroupName ?? DEFAULT_CUSTOM_GROUP_NAME,\r\n            );\r\n        } else {\r\n            this.customizeGroupNames = false;\r\n            if (!this.course.id) {\r\n                // Creating: clear the values so groups are no longer customized\r\n                this.setGroupNameValuesInCourseForm(undefined, undefined, undefined, undefined);\r\n            } else {\r\n                // Editing: restore the old values -> no change.\r\n                this.setGroupNameValuesInCourseForm(\r\n                    this.course.studentGroupName,\r\n                    this.course.teachingAssistantGroupName,\r\n                    this.course.editorGroupName,\r\n                    this.course.instructorGroupName,\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    private setGroupNameValuesInCourseForm(studentGroupName?: string, teachingAssistantGroupName?: string, editorGroupName?: string, instructorGroupName?: string) {\r\n        this.courseForm.controls['studentGroupName'].setValue(studentGroupName);\r\n        this.courseForm.controls['teachingAssistantGroupName'].setValue(teachingAssistantGroupName);\r\n        this.courseForm.controls['editorGroupName'].setValue(editorGroupName);\r\n        this.courseForm.controls['instructorGroupName'].setValue(instructorGroupName);\r\n    }\r\n\r\n    changeFaqEnabled() {\r\n        this.faqEnabled = !this.faqEnabled;\r\n        this.courseForm.controls['faqEnabled'].setValue(this.faqEnabled);\r\n    }\r\n    /**\r\n     * Enable or disable test course\r\n     */\r\n    changeTestCourseEnabled() {\r\n        this.course.testCourse = !this.course.testCourse;\r\n    }\r\n\r\n    changeRestrictedAthenaModulesEnabled() {\r\n        this.course.restrictedAthenaModulesAccess = !this.course.restrictedAthenaModulesAccess;\r\n        this.courseForm.controls['restrictedAthenaModulesAccess'].setValue(this.course.restrictedAthenaModulesAccess);\r\n    }\r\n\r\n    /**\r\n     * Opens the organizations modal used to select an organization to add\r\n     */\r\n    openOrganizationsModal() {\r\n        const modalRef = this.modalService.open(OrganizationSelectorComponent, { size: 'xl', backdrop: 'static' });\r\n        modalRef.componentInstance.organizations = this.courseOrganizations;\r\n        modalRef.closed.subscribe((organization) => {\r\n            if (organization !== undefined) {\r\n                if (this.courseOrganizations === undefined) {\r\n                    this.courseOrganizations = [];\r\n                }\r\n                this.courseOrganizations.push(organization);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Removes an organization from the course\r\n     * @param organization to remove\r\n     */\r\n    removeOrganizationFromCourse(organization: Organization) {\r\n        this.courseOrganizations = this.courseOrganizations.filter((o) => o.id !== organization.id);\r\n    }\r\n\r\n    /**\r\n     * Updates enrollmentConfirmationMessage on markdown change\r\n     * @param message new enrollmentConfirmationMessage\r\n     */\r\n    updateEnrollmentConfirmationMessage(message: string) {\r\n        this.courseForm.controls['enrollmentConfirmationMessage'].setValue(message);\r\n    }\r\n\r\n    /**\r\n     * Updates courseInformationSharingMessagingCodeOfConduct on markdown change\r\n     * @param message new courseInformationSharingMessagingCodeOfConduct\r\n     */\r\n    updateCourseInformationSharingMessagingCodeOfConduct(message: string) {\r\n        this.courseForm.controls['courseInformationSharingMessagingCodeOfConduct'].setValue(message);\r\n    }\r\n\r\n    /**\r\n     * Returns whether the dates are valid or not\r\n     * @return true if the dats are valid\r\n     */\r\n    get isValidDate(): boolean {\r\n        // allow instructors to set startDate and endDate later\r\n        if (this.atLeastOneDateNotExisting()) {\r\n            return true;\r\n        }\r\n        return dayjs(this.course.startDate).isBefore(this.course.endDate);\r\n    }\r\n\r\n    /**\r\n     * Returns whether the enrollment start and end dates are valid\r\n     * @return true if the dates are valid\r\n     */\r\n    get isValidEnrollmentPeriod(): boolean {\r\n        // allow instructors to set enrollment dates later\r\n        if (!this.course.enrollmentStartDate || !this.course.enrollmentEndDate) {\r\n            return true;\r\n        }\r\n\r\n        // enrollment period requires configured start and end date of the course\r\n        if (this.atLeastOneDateNotExisting() || !this.isValidDate) {\r\n            return false;\r\n        }\r\n\r\n        return (\r\n            dayjs(this.course.enrollmentStartDate).isBefore(this.course.enrollmentEndDate) &&\r\n            !dayjs(this.course.enrollmentStartDate).isAfter(this.course.startDate) &&\r\n            !dayjs(this.course.enrollmentEndDate).isAfter(this.course.endDate)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Returns whether the unenrollment end date is valid or not\r\n     * @return true if the date is valid\r\n     */\r\n    get isValidUnenrollmentEndDate(): boolean {\r\n        // allow instructors to set unenrollment end date later\r\n        if (!this.course.unenrollmentEndDate) {\r\n            return true;\r\n        }\r\n\r\n        // course enrollment period is required to configure unenrollment end date\r\n        if (!this.course.enrollmentStartDate || !this.course.enrollmentEndDate || !this.isValidEnrollmentPeriod) {\r\n            return false;\r\n        }\r\n\r\n        return !dayjs(this.course.unenrollmentEndDate).isBefore(this.course.enrollmentEndDate) && !dayjs(this.course.unenrollmentEndDate).isAfter(this.course.endDate);\r\n    }\r\n\r\n    /**\r\n     * Auxiliary method checking if at least one date is not set or simply deleted by the user\r\n     */\r\n    private atLeastOneDateNotExisting(): boolean {\r\n        // we need to take into account that the date is only deleted by the user, which leads to a invalid state of the date\r\n        return !this.course.startDate || !this.course.endDate || !this.course.startDate.isValid() || !this.course.endDate.isValid();\r\n    }\r\n\r\n    get isValidConfiguration(): boolean {\r\n        return this.isValidDate && this.isValidEnrollmentPeriod && this.isValidUnenrollmentEndDate;\r\n    }\r\n\r\n    /**\r\n     * Deletes the course icon\r\n     */\r\n    deleteCourseIcon() {\r\n        this.course.courseIcon = undefined;\r\n        this.croppedImage = undefined;\r\n        this.courseForm.controls['courseIcon'].setValue(undefined);\r\n    }\r\n\r\n    protected readonly FeatureToggle = FeatureToggle;\r\n\r\n    triggerFileInput() {\r\n        this.fileInput.nativeElement.click();\r\n    }\r\n\r\n    openCropper(): void {\r\n        const modalRef = this.modalService.open(ImageCropperModalComponent, { size: 'm' });\r\n        modalRef.componentInstance.uploadFile = this.courseImageUploadFile;\r\n        modalRef.componentInstance.croppedImage = this.croppedImage;\r\n        modalRef.result.then((result) => {\r\n            if (result) {\r\n                this.croppedImage = result;\r\n            }\r\n        });\r\n    }\r\n\r\n    disableMessaging() {\r\n        this.messagingEnabled = false;\r\n    }\r\n}\r\n\r\nconst CourseValidator: ValidatorFn = (formGroup: FormGroup) => {\r\n    const onlineCourse = formGroup.controls['onlineCourse'].value;\r\n    const enrollmentEnabled = formGroup.controls['enrollmentEnabled'].value;\r\n    // it cannot be the case that both values are true\r\n    return onlineCourse != undefined && enrollmentEnabled != undefined && !(onlineCourse && enrollmentEnabled) ? null : { range: true };\r\n};\r\n", "<div class=\"row justify-content-center\">\r\n    <div class=\"col-md-8\">\r\n        <form [formGroup]=\"courseForm\" (ngSubmit)=\"save()\" #formDir=\"ngForm\">\r\n            <div class=\"container headline\">\r\n                <input type=\"file\" #fileInput style=\"display: none\" (change)=\"setCourseImage($event)\" />\r\n                @if (croppedImage) {\r\n                    <div class=\"position-relative\">\r\n                        <jhi-secured-image class=\"secured-image\" [src]=\"croppedImage\" [cachingStrategy]=\"CachingStrategy.LOCAL_STORAGE\" />\r\n\r\n                        <button id=\"delete-course-icon\" type=\"button\" class=\"btn icon-button-wrapper btn-danger position-absolute bottom-0 start-0\" (click)=\"deleteCourseIcon()\">\r\n                            <fa-icon [icon]=\"faTrash\" />\r\n                        </button>\r\n\r\n                        <button id=\"edit-course-icon\" type=\"button\" class=\"btn icon-button-wrapper btn-warning position-absolute bottom-0 end-0\" (click)=\"triggerFileInput()\">\r\n                            <fa-icon [icon]=\"faPen\" />\r\n                        </button>\r\n                    </div>\r\n                }\r\n                @if (!croppedImage) {\r\n                    <div id=\"no-image-placeholder\" class=\"no-image clickable me-2 lh-sm\" (click)=\"triggerFileInput()\">\r\n                        <div class=\"h3 my-0 font-weight-bold\">+</div>\r\n                        <div class=\"small\" jhiTranslate=\"artemisApp.course.imageCropper.uploadTitle\"></div>\r\n                    </div>\r\n                }\r\n                <div class=\"col ps-3\">\r\n                    @if (!course.id) {\r\n                        <h4 id=\"jhi-course-heading-create\" jhiTranslate=\"artemisApp.course.home.createLabel\"></h4>\r\n                    } @else {\r\n                        <h4 id=\"jhi-course-heading-edit\" jhiTranslate=\"artemisApp.course.home.editLabel\"></h4>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <hr />\r\n            <div>\r\n                <div class=\"row\">\r\n                    <div class=\"col\">\r\n                        <div class=\"form-group\">\r\n                            <label class=\"form-control-label\" jhiTranslate=\"artemisApp.course.title\" for=\"field_title\"></label>\r\n                            <input type=\"text\" class=\"form-control\" name=\"title\" id=\"field_title\" formControlName=\"title\" required />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-2\">\r\n                        <div class=\"form-group\" style=\"position: relative\">\r\n                            <label class=\"form-control-label\" jhiTranslate=\"artemisApp.course.color\" for=\"field_title\"></label>\r\n                            <div\r\n                                class=\"color-preview form-control\"\r\n                                [ngStyle]=\"{ backgroundColor: courseForm.get('color')!.value || ARTEMIS_DEFAULT_COLOR }\"\r\n                                (click)=\"openColorSelector($event)\"\r\n                            ></div>\r\n                            <jhi-color-selector (selectedColor)=\"onSelectedColor($event)\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label class=\"form-control-label\" jhiTranslate=\"artemisApp.course.shortName\" for=\"field_shortName\"></label>\r\n                    <input required type=\"text\" class=\"form-control\" name=\"shortName\" id=\"field_shortName\" formControlName=\"shortName\" [readOnly]=\"course.id\" />\r\n                    @if (shortName.invalid && (shortName.dirty || shortName.touched)) {\r\n                        @if ((shortName.errors! | keyvalue | removekeys: ['required']).length > 0) {\r\n                            <div class=\"alert alert-danger\">\r\n                                @for (e of shortName.errors! | keyvalue | removekeys: ['required']; track e) {\r\n                                    <div>\r\n                                        <div [jhiTranslate]=\"'artemisApp.course.form.shortname' + '.' + e.key\"></div>\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        }\r\n                    }\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label class=\"form-control-label\" jhiTranslate=\"artemisApp.course.description\" for=\"field_description\"></label>\r\n                    <textarea id=\"field_description\" class=\"form-control\" rows=\"2\" formControlName=\"description\" [(ngModel)]=\"course.description\"></textarea>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label class=\"form-control-label\" jhiTranslate=\"artemisApp.course.organizations\"></label>\r\n                    <div class=\"btn-group d-flex flex-wrap\">\r\n                        @for (organization of courseOrganizations; track organization) {\r\n                            <div>\r\n                                <h5>\r\n                                    <span class=\"badge bg-primary font-weight-normal m-1\" [ngClass]=\"{ 'ps-3': isAdmin }\">\r\n                                        {{ organization.name }}\r\n                                        @if (isAdmin) {\r\n                                            <button id=\"removeOrganizationButton\" type=\"button\" class=\"btn text-light\" (click)=\"removeOrganizationFromCourse(organization)\">\r\n                                                <fa-icon [icon]=\"faTimes\" />\r\n                                            </button>\r\n                                        }\r\n                                    </span>\r\n                                </h5>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    @if (courseOrganizations && courseOrganizations.length === 0) {\r\n                        <div>\r\n                            <h5>\r\n                                <span class=\"badge bg-secondary font-weight-normal m-1\" jhiTranslate=\"artemisApp.course.noOrganizations\"></span>\r\n                                <fa-icon\r\n                                    [icon]=\"faQuestionCircle\"\r\n                                    class=\"text-secondary align-middle\"\r\n                                    ngbTooltip=\"{{ 'artemisApp.course.organizationAddingHint' | artemisTranslate }}\"\r\n                                />\r\n                            </h5>\r\n                        </div>\r\n                    }\r\n                    @if (isAdmin) {\r\n                        <button id=\"addOrganizationButton\" type=\"button\" class=\"btn btn-outline-primary\" (click)=\"openOrganizationsModal()\">Add</button>\r\n                    }\r\n                </div>\r\n                <div class=\"d-flex\">\r\n                    <div class=\"form-group flex-grow-1\">\r\n                        <jhi-date-time-picker\r\n                            id=\"field_startDate\"\r\n                            labelName=\"{{ 'artemisApp.course.startDate' | artemisTranslate }}\"\r\n                            formControlName=\"startDate\"\r\n                            [(ngModel)]=\"course.startDate\"\r\n                            [error]=\"!isValidDate\"\r\n                        />\r\n                        @if (!isValidDate) {\r\n                            <span class=\"invalid-feedback\" jhiTranslate=\"artemisApp.course.form.startDate.invalid\"></span>\r\n                        }\r\n                    </div>\r\n                    <div class=\"form-group flex-grow-1 ms-3\">\r\n                        <jhi-date-time-picker\r\n                            id=\"field_endDate\"\r\n                            labelName=\"{{ 'artemisApp.course.endDate' | artemisTranslate }}\"\r\n                            formControlName=\"endDate\"\r\n                            [(ngModel)]=\"course.endDate\"\r\n                            [error]=\"!isValidDate\"\r\n                        />\r\n                        @if (!isValidDate) {\r\n                            <span class=\"invalid-feedback\" jhiTranslate=\"artemisApp.course.form.endDate.invalid\"></span>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-check\">\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        class=\"form-check-input\"\r\n                        name=\"testCourse\"\r\n                        id=\"field_testCourse\"\r\n                        formControlName=\"testCourse\"\r\n                        [checked]=\"course.testCourse\"\r\n                        (change)=\"changeTestCourseEnabled()\"\r\n                    />\r\n                    <label class=\"form-control-label\" jhiTranslate=\"artemisApp.course.testCourse.title\" for=\"field_testCourse\"></label>\r\n                    <fa-icon [icon]=\"faQuestionCircle\" class=\"text-secondary\" ngbTooltip=\"{{ 'artemisApp.course.testCourse.description' | artemisTranslate }}\" />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"semester\" jhiTranslate=\"artemisApp.course.semester\"></label>\r\n                    <select id=\"semester\" class=\"form-select\" formControlName=\"semester\">\r\n                        @for (semester of semesters; track semester) {\r\n                            <option [value]=\"semester\">{{ semester }}</option>\r\n                        }\r\n                    </select>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label class=\"form-control-label\" for=\"field_maxPoints\" jhiTranslate=\"artemisApp.course.maxPoints.title\"></label>\r\n                    <fa-icon [icon]=\"faQuestionCircle\" class=\"text-secondary\" ngbTooltip=\"{{ 'artemisApp.course.maxPoints.info' | artemisTranslate }}\" />\r\n                    <input type=\"number\" class=\"form-control\" name=\"maxPoints\" id=\"field_maxPoints\" min=\"1\" formControlName=\"maxPoints\" />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label class=\"form-control-label\" for=\"field_accuracyOfScores\" jhiTranslate=\"artemisApp.course.accuracyOfScores\"></label>\r\n                    <input required type=\"number\" class=\"form-control\" name=\"accuracyOfScores\" id=\"field_accuracyOfScores\" min=\"0\" max=\"5\" formControlName=\"accuracyOfScores\" />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"programmingLanguage\" jhiTranslate=\"artemisApp.course.defaultProgrammingLanguage\"></label>\r\n                    <select id=\"programmingLanguage\" class=\"form-select\" formControlName=\"defaultProgrammingLanguage\">\r\n                        <option [ngValue]=\"null\"></option>\r\n                        @for (programmingLanguage of ProgrammingLanguage | keyvalue; track programmingLanguage) {\r\n                            <option [value]=\"programmingLanguage.key\">{{ programmingLanguage.value }}</option>\r\n                        }\r\n                    </select>\r\n                </div>\r\n                <div *jhiHasAnyAuthority=\"'ROLE_ADMIN'\">\r\n                    <div class=\"form-check\">\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            [checked]=\"customizeGroupNames\"\r\n                            (change)=\"changeCustomizeGroupNames()\"\r\n                            class=\"form-check-input\"\r\n                            name=\"customizeGroupNamesEnabled\"\r\n                            id=\"field_customizeGroupNamesEnabled\"\r\n                            formControlName=\"customizeGroupNames\"\r\n                        />\r\n                        <label class=\"form-control-label\" jhiTranslate=\"artemisApp.course.customizeGroupNames.title\" for=\"field_customizeGroupNamesEnabled\"\r\n                            >Customize Group Names</label\r\n                        >\r\n                        <fa-icon [icon]=\"faExclamationTriangle\" class=\"text-secondary\" ngbTooltip=\"{{ 'artemisApp.course.customizeGroupNames.description' | artemisTranslate }}\" />\r\n                    </div>\r\n                    @if (customizeGroupNames) {\r\n                        <div>\r\n                            <div class=\"form-group\">\r\n                                <label class=\"form-control-label\" jhiTranslate=\"artemisApp.course.studentGroupName\" for=\"field_studentGroupName\"></label>\r\n                                <input type=\"text\" class=\"form-control\" name=\"studentGroupName\" id=\"field_studentGroupName\" formControlName=\"studentGroupName\" />\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label class=\"form-control-label\" jhiTranslate=\"artemisApp.course.teachingAssistantGroupName\" for=\"field_teachingAssistantGroupName\"\r\n                                    >Teaching Assistant Group Name</label\r\n                                >\r\n                                <input\r\n                                    type=\"text\"\r\n                                    class=\"form-control\"\r\n                                    name=\"teachingAssistantGroupName\"\r\n                                    id=\"field_teachingAssistantGroupName\"\r\n                                    formControlName=\"teachingAssistantGroupName\"\r\n                                />\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label class=\"form-control-label\" jhiTranslate=\"artemisApp.course.editorGroupName\" for=\"field_editorGroupName\"></label>\r\n                                <input type=\"text\" class=\"form-control\" name=\"editorGroupName\" id=\"field_editorGroupName\" formControlName=\"editorGroupName\" />\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label class=\"form-control-label\" jhiTranslate=\"artemisApp.course.instructorGroupName\" for=\"field_instructorGroupName\"></label>\r\n                                <input type=\"text\" class=\"form-control\" name=\"instructorGroupName\" id=\"field_instructorGroupName\" formControlName=\"instructorGroupName\" />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <div class=\"form-check\">\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        class=\"form-check-input\"\r\n                        name=\"complaintsEnabled\"\r\n                        [checked]=\"complaintsEnabled\"\r\n                        id=\"field_maxComplaintSettingEnabled\"\r\n                        (change)=\"changeComplaintsEnabled()\"\r\n                        formControlName=\"complaintsEnabled\"\r\n                    />\r\n                    <label class=\"form-control-label\" jhiTranslate=\"artemisApp.course.complaintsEnabled.title\" for=\"field_maxComplaintSettingEnabled\"></label>\r\n                    <fa-icon [icon]=\"faQuestionCircle\" class=\"text-secondary\" ngbTooltip=\"{{ 'artemisApp.course.complaintsEnabled.description' | artemisTranslate }}\" />\r\n                </div>\r\n                @if (complaintsEnabled) {\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-control-label\" jhiTranslate=\"artemisApp.course.maxComplaints.title\" for=\"field_maxComplaints\"></label>\r\n                        <fa-icon [icon]=\"faQuestionCircle\" class=\"text-secondary\" ngbTooltip=\"{{ 'artemisApp.course.maxComplaints.description' | artemisTranslate }}\" />\r\n                        <input required type=\"number\" class=\"form-control\" name=\"maxComplaints\" id=\"field_maxComplaints\" formControlName=\"maxComplaints\" />\r\n                    </div>\r\n                }\r\n                @if (complaintsEnabled) {\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-control-label\" jhiTranslate=\"artemisApp.course.maxTeamComplaints.title\" for=\"field_maxTeamComplaints\"\r\n                            >Maximum amount of complaints per team</label\r\n                        >\r\n                        <fa-icon [icon]=\"faQuestionCircle\" class=\"text-secondary\" ngbTooltip=\"{{ 'artemisApp.course.maxTeamComplaints.description' | artemisTranslate }}\" />\r\n                        <input required type=\"number\" class=\"form-control\" name=\"maxTeamComplaints\" id=\"field_maxTeamComplaints\" formControlName=\"maxTeamComplaints\" />\r\n                    </div>\r\n                }\r\n                @if (complaintsEnabled) {\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-control-label\" jhiTranslate=\"artemisApp.course.maxComplaintTimeDays.title\" for=\"field_maxComplaintTimeDays\"></label>\r\n                        <fa-icon [icon]=\"faQuestionCircle\" class=\"text-secondary\" ngbTooltip=\"{{ 'artemisApp.course.maxComplaintTimeDays.description' | artemisTranslate }}\" />\r\n                        <input required type=\"number\" class=\"form-control\" name=\"maxComplaintTimeDays\" id=\"field_maxComplaintTimeDays\" formControlName=\"maxComplaintTimeDays\" />\r\n                    </div>\r\n                }\r\n                @if (complaintsEnabled) {\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-control-label\" jhiTranslate=\"artemisApp.course.maxComplaintTextLimit.title\" for=\"field_maxComplaintTextLimit\"></label>\r\n                        <fa-icon [icon]=\"faQuestionCircle\" class=\"text-secondary\" ngbTooltip=\"{{ 'artemisApp.course.maxComplaintTextLimit.description' | artemisTranslate }}\" />\r\n                        <input required type=\"number\" class=\"form-control\" name=\"maxComplaintTextLimit\" id=\"field_maxComplaintTextLimit\" formControlName=\"maxComplaintTextLimit\" />\r\n                    </div>\r\n                }\r\n                @if (complaintsEnabled) {\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-control-label\" jhiTranslate=\"artemisApp.course.maxComplaintResponseTextLimit.title\" for=\"field_maxComplaintResponseTextLimit\"></label>\r\n                        <fa-icon\r\n                            [icon]=\"faQuestionCircle\"\r\n                            class=\"text-secondary\"\r\n                            ngbTooltip=\"{{ 'artemisApp.course.maxComplaintResponseTextLimit.description' | artemisTranslate }}\"\r\n                        />\r\n                        <input\r\n                            required\r\n                            type=\"number\"\r\n                            class=\"form-control\"\r\n                            name=\"maxComplaintResponseTextLimit\"\r\n                            id=\"field_maxComplaintResponseTextLimit\"\r\n                            formControlName=\"maxComplaintResponseTextLimit\"\r\n                        />\r\n                    </div>\r\n                }\r\n                <div class=\"form-check\">\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        class=\"form-check-input\"\r\n                        name=\"requestMoreFeedbackEnabled\"\r\n                        [checked]=\"requestMoreFeedbackEnabled\"\r\n                        id=\"field_maxRequestMoreFeedbackSettingEnabled\"\r\n                        (change)=\"changeRequestMoreFeedbackEnabled()\"\r\n                        formControlName=\"requestMoreFeedbackEnabled\"\r\n                    />\r\n                    <label class=\"form-control-label\" jhiTranslate=\"artemisApp.course.requestMoreFeedbackEnabled.title\" for=\"field_maxRequestMoreFeedbackSettingEnabled\"\r\n                        >Enable More Feedback Requests</label\r\n                    >\r\n                    <fa-icon [icon]=\"faQuestionCircle\" class=\"text-secondary\" ngbTooltip=\"{{ 'artemisApp.course.requestMoreFeedbackEnabled.description' | artemisTranslate }}\" />\r\n                </div>\r\n                @if (requestMoreFeedbackEnabled) {\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-control-label\" jhiTranslate=\"artemisApp.course.maxRequestMoreFeedbackTimeDays.title\" for=\"field_maxComplaintTimeDays\"></label>\r\n                        <fa-icon\r\n                            [icon]=\"faQuestionCircle\"\r\n                            class=\"text-secondary\"\r\n                            ngbTooltip=\"{{ 'artemisApp.course.maxRequestMoreFeedbackTimeDays.description' | artemisTranslate }}\"\r\n                        />\r\n                        <input\r\n                            required\r\n                            type=\"number\"\r\n                            class=\"form-control\"\r\n                            name=\"maxRequestMoreFeedbackTimeDays\"\r\n                            id=\"field_maxRequestMoreFeedbackTimeDays\"\r\n                            formControlName=\"maxRequestMoreFeedbackTimeDays\"\r\n                        />\r\n                    </div>\r\n                }\r\n                <div class=\"form-group\">\r\n                    <div class=\"form-check\">\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            class=\"form-check-input\"\r\n                            name=\"faqEnabled\"\r\n                            [checked]=\"faqEnabled\"\r\n                            (change)=\"changeFaqEnabled()\"\r\n                            id=\"field_faq_enabled\"\r\n                            formControlName=\"faqEnabled\"\r\n                        />\r\n                        <label for=\"field_faq_enabled\" class=\"form-control-label\" jhiTranslate=\"artemisApp.course.courseCommunicationSetting.faqEnabled.label\"></label>\r\n                        <fa-icon\r\n                            [icon]=\"faQuestionCircle\"\r\n                            class=\"text-secondary\"\r\n                            ngbTooltip=\"{{ 'artemisApp.course.courseCommunicationSetting.faqEnabled.tooltip' | artemisTranslate }}\"\r\n                        />\r\n                    </div>\r\n                    <!-- Not part of model -->\r\n                    <div class=\"form-check\">\r\n                        <input\r\n                            id=\"field_communicationEnabled\"\r\n                            class=\"form-check-input\"\r\n                            type=\"checkbox\"\r\n                            [(ngModel)]=\"communicationEnabled\"\r\n                            [ngModelOptions]=\"{ standalone: true }\"\r\n                            (change)=\"disableMessaging()\"\r\n                        />\r\n                        <label\r\n                            for=\"field_communicationEnabled\"\r\n                            class=\"form-check-label\"\r\n                            jhiTranslate=\"artemisApp.course.courseCommunicationSetting.communicationEnabled.label\"\r\n                        ></label>\r\n                        <fa-icon\r\n                            [icon]=\"faQuestionCircle\"\r\n                            class=\"text-secondary\"\r\n                            ngbTooltip=\"{{ 'artemisApp.course.courseCommunicationSetting.communicationEnabled.tooltip' | artemisTranslate }}\"\r\n                        />\r\n                    </div>\r\n                    <!-- Not part of model -->\r\n                    <div class=\"form-check\">\r\n                        <input\r\n                            id=\"field_messagingEnabled\"\r\n                            class=\"form-check-input\"\r\n                            type=\"checkbox\"\r\n                            [(ngModel)]=\"messagingEnabled\"\r\n                            [ngModelOptions]=\"{ standalone: true }\"\r\n                            [disabled]=\"!communicationEnabled\"\r\n                        />\r\n                        <label for=\"field_messagingEnabled\" class=\"form-check-label\" jhiTranslate=\"artemisApp.course.courseCommunicationSetting.messagingEnabled.label\"></label>\r\n                        <fa-icon\r\n                            [icon]=\"faQuestionCircle\"\r\n                            class=\"text-secondary\"\r\n                            ngbTooltip=\"{{ 'artemisApp.course.courseCommunicationSetting.messagingEnabled.tooltip' | artemisTranslate }}\"\r\n                        />\r\n                    </div>\r\n                    @if (communicationEnabled) {\r\n                        <div class=\"form-group\">\r\n                            <label class=\"form-control-label\" jhiTranslate=\"artemisApp.codeOfConduct.title\"></label>\r\n                            <jhi-help-icon text=\"artemisApp.codeOfConduct.tooltip\" />\r\n                            <jhi-markdown-editor-monaco\r\n                                class=\"markdown-editor\"\r\n                                [(markdown)]=\"course.courseInformationSharingMessagingCodeOfConduct\"\r\n                                (markdownChange)=\"updateCourseInformationSharingMessagingCodeOfConduct($event)\"\r\n                            />\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <jhi-feature-overlay [enabled]=\"atlasEnabled\">\r\n                    <div class=\"form-group\" [jhiFeatureToggleHide]=\"FeatureToggle.LearningPaths\">\r\n                        <div class=\"form-check\">\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                class=\"form-check-input\"\r\n                                name=\"learningPathsEnabled\"\r\n                                id=\"field_learningPathsEnabled\"\r\n                                formControlName=\"learningPathsEnabled\"\r\n                                [(ngModel)]=\"course.learningPathsEnabled\"\r\n                            />\r\n                            <label class=\"form-control-label\" jhiTranslate=\"artemisApp.course.learningPaths.label\" for=\"field_learningPathsEnabled\"></label>\r\n                            <fa-icon [icon]=\"faQuestionCircle\" class=\"text-secondary\" ngbTooltip=\"{{ 'artemisApp.course.learningPaths.tooltip' | artemisTranslate }}\" />\r\n                        </div>\r\n                    </div>\r\n                </jhi-feature-overlay>\r\n                @if (this.isAdmin) {\r\n                    <div class=\"form-group\" [jhiFeatureToggleHide]=\"FeatureToggle.StudentCourseAnalyticsDashboard\">\r\n                        <div class=\"form-check\">\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                class=\"form-check-input\"\r\n                                name=\"studentCourseAnalyticsDashboardEnabled\"\r\n                                id=\"field_studentCourseAnalyticsDashboardEnabled\"\r\n                                formControlName=\"studentCourseAnalyticsDashboardEnabled\"\r\n                                [(ngModel)]=\"course.studentCourseAnalyticsDashboardEnabled\"\r\n                            />\r\n                            <label class=\"form-control-label\" jhiTranslate=\"artemisApp.course.dashboard.label\" for=\"field_studentCourseAnalyticsDashboardEnabled\"></label>\r\n                            <fa-icon [icon]=\"faQuestionCircle\" class=\"text-secondary\" ngbTooltip=\"{{ 'artemisApp.course.dashboard.tooltip' | artemisTranslate }}\" />\r\n                        </div>\r\n                    </div>\r\n                }\r\n                @if (this.isAdmin && this.isAthenaEnabled) {\r\n                    <div class=\"form-check\">\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            class=\"form-check-input\"\r\n                            name=\"restrictedAthenaModulesEnabled\"\r\n                            id=\"field_restrictedAthenaModulesEnabled\"\r\n                            [checked]=\"course.restrictedAthenaModulesAccess\"\r\n                            (change)=\"this.changeRestrictedAthenaModulesEnabled()\"\r\n                        />\r\n                        <label class=\"form-control-label\" jhiTranslate=\"artemisApp.course.restrictedAthenaModulesAccess.label\" for=\"field_restrictedAthenaModulesEnabled\">\r\n                            Access to Restricted Athena Modules Enabled\r\n                        </label>\r\n                        <fa-icon [icon]=\"faQuestionCircle\" class=\"text-secondary\" ngbTooltip=\"{{ 'artemisApp.course.restrictedAthenaModulesAccess.tooltip' | artemisTranslate }}\" />\r\n                    </div>\r\n                }\r\n                @if (ltiEnabled && !this.course.enrollmentEnabled) {\r\n                    <div class=\"form-check\">\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            class=\"form-check-input\"\r\n                            name=\"onlineCourse\"\r\n                            id=\"field_onlineCourse\"\r\n                            formControlName=\"onlineCourse\"\r\n                            [checked]=\"course.onlineCourse\"\r\n                            (change)=\"this.changeOnlineCourse()\"\r\n                        />\r\n                        <label class=\"form-control-label\" jhiTranslate=\"artemisApp.course.onlineCourse.title\" for=\"field_onlineCourse\"></label>\r\n                        <fa-icon [icon]=\"faQuestionCircle\" class=\"text-secondary\" ngbTooltip=\"{{ 'artemisApp.course.onlineCourse.description' | artemisTranslate }}\" />\r\n                    </div>\r\n                }\r\n                <!-- enrollment -->\r\n                @if (!this.course.onlineCourse) {\r\n                    <div class=\"form-check\">\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            class=\"form-check-input\"\r\n                            name=\"enrollmentEnabled\"\r\n                            id=\"field_enrollmentEnabled\"\r\n                            [checked]=\"course.enrollmentEnabled\"\r\n                            (change)=\"this.changeEnrollmentEnabled()\"\r\n                        />\r\n                        <label class=\"form-control-label\" jhiTranslate=\"artemisApp.course.enrollmentEnabled.title\" for=\"field_enrollmentEnabled\"></label>\r\n                        <fa-icon [icon]=\"faQuestionCircle\" class=\"text-secondary\" ngbTooltip=\"{{ 'artemisApp.course.enrollmentEnabled.description' | artemisTranslate }}\" />\r\n                    </div>\r\n                }\r\n                @if (course.enrollmentEnabled) {\r\n                    <div class=\"d-flex\">\r\n                        <div class=\"form-group flex-grow-1\">\r\n                            <jhi-date-time-picker\r\n                                id=\"field_enrollmentStartDate\"\r\n                                labelName=\"{{ 'artemisApp.course.enrollmentStartDate' | artemisTranslate }}\"\r\n                                formControlName=\"enrollmentStartDate\"\r\n                                [(ngModel)]=\"course.enrollmentStartDate\"\r\n                                [error]=\"!isValidEnrollmentPeriod\"\r\n                            />\r\n                            @if (!isValidEnrollmentPeriod) {\r\n                                <span class=\"invalid-feedback\" jhiTranslate=\"artemisApp.course.form.enrollmentStartDate.invalid\"></span>\r\n                            }\r\n                        </div>\r\n                        <div class=\"form-group flex-grow-1 ms-3\">\r\n                            <jhi-date-time-picker\r\n                                id=\"field_enrollmentEndDate\"\r\n                                labelName=\"{{ 'artemisApp.course.enrollmentEndDate' | artemisTranslate }}\"\r\n                                formControlName=\"enrollmentEndDate\"\r\n                                [(ngModel)]=\"course.enrollmentEndDate\"\r\n                                [error]=\"!isValidEnrollmentPeriod\"\r\n                            />\r\n                            @if (!isValidEnrollmentPeriod) {\r\n                                <span class=\"invalid-feedback\" jhiTranslate=\"artemisApp.course.form.enrollmentEndDate.invalid\"></span>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                }\r\n                @if (course.enrollmentEnabled) {\r\n                    <div class=\"form-group\" id=\"field_enrollmentConfirmationMessage\">\r\n                        <label class=\"form-control-label\" jhiTranslate=\"artemisApp.course.enrollmentConfirmationMessage\" for=\"field_enrollmentConfirmationMessage\"\r\n                            >Enrollment Confirmation Message</label\r\n                        >\r\n                        <jhi-markdown-editor-monaco\r\n                            class=\"markdown-editor\"\r\n                            [(markdown)]=\"course.enrollmentConfirmationMessage\"\r\n                            (markdownChange)=\"updateEnrollmentConfirmationMessage($event)\"\r\n                        />\r\n                    </div>\r\n                }\r\n                <!-- unenrollment -->\r\n                @if (this.course.enrollmentEnabled) {\r\n                    <div class=\"form-check\">\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            class=\"form-check-input\"\r\n                            name=\"unenrollmentEnabled\"\r\n                            id=\"field_unenrollmentEnabled\"\r\n                            [checked]=\"course.unenrollmentEnabled\"\r\n                            (change)=\"this.changeUnenrollmentEnabled()\"\r\n                        />\r\n                        <label class=\"form-control-label\" jhiTranslate=\"artemisApp.course.unenrollmentEnabled.title\" for=\"field_unenrollmentEnabled\"></label>\r\n                        <fa-icon [icon]=\"faQuestionCircle\" class=\"text-secondary\" ngbTooltip=\"{{ 'artemisApp.course.unenrollmentEnabled.description' | artemisTranslate }}\" />\r\n                    </div>\r\n                }\r\n                @if (course.unenrollmentEnabled) {\r\n                    <div class=\"form-group\">\r\n                        <jhi-date-time-picker\r\n                            id=\"field_unenrollmentEndDate\"\r\n                            labelName=\"{{ 'artemisApp.course.unenrollmentEndDate' | artemisTranslate }}\"\r\n                            formControlName=\"unenrollmentEndDate\"\r\n                            [(ngModel)]=\"course.unenrollmentEndDate\"\r\n                            [error]=\"!isValidUnenrollmentEndDate\"\r\n                        />\r\n                        @if (!isValidUnenrollmentEndDate) {\r\n                            <span class=\"invalid-feedback\" jhiTranslate=\"artemisApp.course.form.unenrollmentEndDate.invalid\"></span>\r\n                        }\r\n                    </div>\r\n                }\r\n            </div>\r\n            <!-- timezone -->\r\n            @if (tutorialGroupsFeatureActivated) {\r\n                <div class=\"col-auto border border-warning p-3\">\r\n                    <span class=\"badge rounded-pill text-bg-warning ms-1\">BETA</span>\r\n                    <label class=\"form-label\" for=\"timeZone\" jhiTranslate=\"artemisApp.forms.configurationForm.timeZoneInput.label\"></label>\r\n                    @if (timeZoneChanged) {\r\n                        <div class=\"alert alert-danger\" role=\"alert\" jhiTranslate=\"artemisApp.forms.configurationForm.timeZoneInput.changeWarning\"></div>\r\n                    }\r\n                    <div jhiTranslate=\"artemisApp.forms.configurationForm.timeZoneInput.beta\"></div>\r\n                    <input\r\n                        id=\"timeZone\"\r\n                        type=\"text\"\r\n                        class=\"form-control\"\r\n                        formControlName=\"timeZone\"\r\n                        [placeholder]=\"'Europe/Berlin'\"\r\n                        [resultFormatter]=\"tzResultFormatter\"\r\n                        [inputFormatter]=\"tzInputFormatter\"\r\n                        [ngbTypeahead]=\"tzSearch\"\r\n                        [editable]=\"false\"\r\n                        #timeZoneInput=\"ngbTypeahead\"\r\n                        (focus)=\"tzFocus$.next($any($event).target.value)\"\r\n                        (click)=\"tzClick$.next($any($event).target.value)\"\r\n                    />\r\n                    <div class=\"form-text\" jhiTranslate=\"artemisApp.forms.configurationForm.timeZoneInput.explanation\"></div>\r\n                </div>\r\n            }\r\n            <div class=\"mt-3 d-flex\">\r\n                <button type=\"button\" id=\"cancel-save\" class=\"btn btn-secondary\" (click)=\"previousState()\">\r\n                    <fa-icon [icon]=\"faBan\" />&nbsp;<span jhiTranslate=\"entity.action.cancel\"></span>\r\n                </button>\r\n                @if (courseForm.invalid) {\r\n                    <span [ngbTooltip]=\"'artemisApp.course.form.invalidForm' | artemisTranslate\">\r\n                        <ng-container *ngTemplateOutlet=\"saveButtonTpl\" />\r\n                    </span>\r\n                } @else {\r\n                    <ng-container *ngTemplateOutlet=\"saveButtonTpl\" />\r\n                }\r\n                <ng-template #saveButtonTpl>\r\n                    <button type=\"submit\" id=\"save-entity\" [disabled]=\"courseForm.invalid || isSaving || !isValidConfiguration\" class=\"btn btn-primary ms-2\">\r\n                        <fa-icon [icon]=\"faSave\" />&nbsp;<span jhiTranslate=\"entity.action.save\"></span>\r\n                    </button>\r\n                </ng-template>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r2", "ctx_r2", "\u0275\u0275nextContext", "\u0275\u0275resetView", "deleteCourseIcon", "\u0275\u0275elementEnd", "triggerFileInput", "\u0275\u0275advance", "\u0275\u0275property", "croppedImage", "CachingStrategy", "LOCAL_STORAGE", "faTrash", "faPen", "_r4", "e_r5", "key", "\u0275\u0275repeaterCreate", "CourseUpdateComponent_Conditional_55_Conditional_1_For_4_Template", "\u0275\u0275repeaterTrackByIdentity", "\u0275\u0275repeater", "\u0275\u0275pipeBind2", "\u0275\u0275pipeBind1", "shortName", "errors", "\u0275\u0275pureFunction0", "_c4", "\u0275\u0275template", "CourseUpdateComponent_Conditional_55_Conditional_1_Template", "\u0275\u0275conditional", "length", "_r6", "organization_r7", "$implicit", "removeOrganizationFromCourse", "faTimes", "CourseUpdateComponent_For_71_Conditional_7_Template", "\u0275\u0275pureFunction1", "_c5", "isAdmin", "\u0275\u0275textInterpolate1", "name", "\u0275\u0275propertyInterpolate", "faQuestionCircle", "_r8", "openOrganizationsModal", "semester_r9", "\u0275\u0275textInterpolate", "programmingLanguage_r10", "value", "_r11", "changeCustomizeGroupNames", "CourseUpdateComponent_div_143_Conditional_13_Template", "customizeGroupNames", "faExclamationTriangle", "\u0275\u0275twoWayListener", "$event", "_r12", "i0", "\u0275\u0275twoWayBindingSet", "course", "courseInformationSharingMessagingCodeOfConduct", "updateCourseInformationSharingMessagingCodeOfConduct", "\u0275\u0275twoWayProperty", "_r13", "studentCourseAnalyticsDashboardEnabled", "FeatureToggle", "StudentCourseAnalyticsDashboard", "_r14", "changeRestrictedAthenaModulesEnabled", "restrictedAthenaModulesAccess", "_r15", "changeOnlineCourse", "onlineCourse", "_r16", "changeEnrollmentEnabled", "enrollmentEnabled", "_r17", "enrollmentStartDate", "CourseUpdateComponent_Conditional_228_Conditional_8_Template", "enrollmentEndDate", "CourseUpdateComponent_Conditional_228_Conditional_15_Template", "isValidEnrollmentPeriod", "_r18", "enrollmentConfirmationMessage", "updateEnrollmentConfirmationMessage", "_r19", "changeUnenrollmentEnabled", "unenrollmentEnabled", "_r20", "unenrollmentEndDate", "CourseUpdateComponent_Conditional_231_Conditional_6_Template", "isValidUnenrollmentEndDate", "CourseUpdateComponent_Conditional_234_Conditional_8_Template", "_r21", "tzFocus$", "next", "target", "tzClick$", "timeZoneChanged", "tzResultFormatter", "tzInputFormatter", "tzSearch", "\u0275\u0275elementContainer", "CourseUpdateComponent_Conditional_244_ng_container_4_Template", "saveButtonTpl_r22", "CourseUpdateComponent_Conditional_245_ng_container_1_Template", "courseForm", "invalid", "isSaving", "isValidConfiguration", "faSave", "DEFAULT_CUSTOM_GROUP_NAME", "CourseUpdateComponent", "eventManager", "inject", "EventManager", "courseManagementService", "CourseManagementService", "courseAdminService", "CourseAdminService", "activatedRoute", "ActivatedRoute", "fileService", "FileService", "alertService", "AlertService", "profileService", "ProfileService", "organizationService", "OrganizationManagementService", "modalService", "NgbModal", "navigationUtilService", "ArtemisNavigationUtilService", "router", "Router", "featureToggleService", "FeatureToggleService", "accountService", "AccountService", "ProgrammingLanguage", "fileInput", "colorSelector", "tzTypeAhead", "Subject", "timeZones", "originalTimeZone", "ARTEMIS_DEFAULT_COLOR", "courseImageUploadFile", "complaintsEnabled", "requestMoreFeedbackEnabled", "courseOrganizations", "faBan", "faqEnabled", "communicationEnabled", "messagingEnabled", "atlasEnabled", "ltiEnabled", "isAthenaEnabled", "tutorialGroupsFeatureActivated", "courseStorageService", "CourseStorageService", "semesters", "getSemesters", "COMPLAINT_RESPONSE_TEXT_LIMIT", "COMPLAINT_TEXT_LIMIT", "COURSE_TITLE_LIMIT", "ngOnInit", "Intl", "supportedValuesOf", "Course", "parent", "data", "subscribe", "getOrganizationsByCourse", "id", "organizations", "timeZone", "maxComplaints", "maxTeamComplaints", "maxComplaintTimeDays", "maxComplaintTextLimit", "maxComplaintResponseTextLimit", "maxRequestMoreFeedbackTimeDays", "getTemplateCodeOfConduct", "res", "body", "error", "onError", "getProfileInfo", "profileInfo", "inProduction", "studentGroupName", "teachingAssistantGroupName", "editorGroupName", "instructorGroupName", "activeProfiles", "includes", "PROFILE_ATLAS", "PROFILE_LTI", "PROFILE_ATHENA", "isCommunicationEnabled", "isMessagingEnabled", "FormGroup", "FormControl", "title", "validators", "Validators", "required", "maxLength", "updateOn", "disabled", "minLength", "regexValidator", "SHORT_NAME_PATTERN", "description", "startDate", "endDate", "semester", "testCourse", "learningPathsEnabled", "maxPoints", "min", "accuracyOfScores", "defaultProgrammingLanguage", "max", "color", "courseIcon", "CourseValidator", "getFeatureToggleActive", "TutorialGroups", "pipe", "tap", "active", "addControl", "text$", "debouncedText$", "debounceTime", "distinctUntilChanged", "clicksWithClosedPopup$", "filter", "isPopupOpen", "inputFocus$", "merge", "map", "term", "tz", "toLowerCase", "indexOf", "previousState", "navigateBackWithOptional", "toString", "save", "controls", "undefined", "setValue", "file", "base64Data", "replace", "base64StringToBlob", "getRawValue", "presentationScore", "courseInformationSharingConfiguration", "CourseInformationSharingConfiguration", "COMMUNICATION_AND_MESSAGING", "COMMUNICATION_ONLY", "DISABLED", "subscribeToSaveResponse", "update", "create", "openColorSelector", "event", "onSelectedColor", "selectedColor", "patchValue", "result", "response", "onSaveSuccess", "onSaveError", "updatedCourse", "broadcast", "content", "updateCourse", "navigate", "scrollToTopOfPage", "setCourseImage", "element", "currentTarget", "files", "openCropper", "errorMessage", "headers", "get", "addAlert", "type", "AlertType", "DANGER", "message", "disableTranslation", "window", "scrollTo", "changeComplaintsEnabled", "changeRequestMoreFeedbackEnabled", "setGroupNameValuesInCourseForm", "changeFaqEnabled", "changeTestCourseEnabled", "modalRef", "open", "OrganizationSelectorComponent", "size", "backdrop", "componentInstance", "closed", "organization", "push", "o", "isValidDate", "atLeastOneDateNotExisting", "dayjs", "isBefore", "isAfter", "isValid", "nativeElement", "click", "ImageCropperModalComponent", "uploadFile", "then", "disableMessaging", "selectors", "viewQuery", "rf", "ctx", "ColorSelectorComponent", "_r1", "CourseUpdateComponent_Conditional_12_Template", "CourseUpdateComponent_Conditional_13_Template", "CourseUpdateComponent_Conditional_16_Template", "CourseUpdateComponent_Conditional_17_Template", "CourseUpdateComponent_Conditional_55_Template", "CourseUpdateComponent_For_71_Template", "CourseUpdateComponent_Conditional_73_Template", "CourseUpdateComponent_Conditional_74_Template", "CourseUpdateComponent_Conditional_83_Template", "CourseUpdateComponent_Conditional_90_Template", "CourseUpdateComponent_For_110_Template", "CourseUpdateComponent_For_139_Template", "CourseUpdateComponent_div_143_Template", "CourseUpdateComponent_Conditional_155_Template", "CourseUpdateComponent_Conditional_156_Template", "CourseUpdateComponent_Conditional_157_Template", "CourseUpdateComponent_Conditional_158_Template", "CourseUpdateComponent_Conditional_159_Template", "CourseUpdateComponent_Conditional_171_Template", "CourseUpdateComponent_Conditional_206_Template", "CourseUpdateComponent_Conditional_224_Template", "CourseUpdateComponent_Conditional_225_Template", "CourseUpdateComponent_Conditional_226_Template", "CourseUpdateComponent_Conditional_227_Template", "CourseUpdateComponent_Conditional_228_Template", "CourseUpdateComponent_Conditional_229_Template", "CourseUpdateComponent_Conditional_230_Template", "CourseUpdateComponent_Conditional_231_Template", "CourseUpdateComponent_Conditional_234_Template", "CourseUpdateComponent_Conditional_244_Template", "CourseUpdateComponent_Conditional_245_Template", "CourseUpdateComponent_ng_template_246_Template", "\u0275\u0275templateRefExtractor", "_c2", "dirty", "touched", "_c3", "LearningPaths", "FormsModule", "\u0275NgNoValidate", "NgSelectOption", "\u0275NgSelectMultipleOption", "DefaultValueAccessor", "NumberValueAccessor", "CheckboxControlValueAccessor", "SelectControlValueAccessor", "NgControlStatus", "NgControlStatusGroup", "RequiredValidator", "MinValidator", "MaxValidator", "NgModel", "ReactiveFormsModule", "FormGroupDirective", "FormControlName", "SecuredImageComponent", "FaIconComponent", "TranslateDirective", "NgStyle", "NgClass", "NgbTooltip", "FormDateTimePickerComponent", "HelpIconComponent", "MarkdownEditorMonacoComponent", "FeatureToggleHideDirective", "NgbTypeahead", "NgTemplateOutlet", "KeyValuePipe", "ArtemisTranslatePipe", "RemoveKeysPipe", "FeatureOverlayComponent", "HasAnyAuthorityDirective", "styles", "formGroup", "range"]
}
