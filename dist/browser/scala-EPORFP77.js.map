{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/scala/scala.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.2(404545bded1df6ffa41ea0af4e8ddb219018c6c1)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/scala/scala.ts\nvar conf = {\n  /*\n   * `...` is allowed as an identifier.\n   * $ is allowed in identifiers.\n   * unary_<op> is allowed as an identifier.\n   * <name>_= is allowed as an identifier.\n   */\n  wordPattern: /(unary_[@~!#%^&*()\\-=+\\\\|:<>\\/?]+)|([a-zA-Z_$][\\w$]*?_=)|(`[^`]+`)|([a-zA-Z_$][\\w$]*)/g,\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]],\n  autoClosingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }],\n  surroundingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\n      end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\n    }\n  }\n};\nvar language = {\n  tokenPostfix: \".scala\",\n  // We can't easily add everything from Dotty, but we can at least add some of its keywords\n  keywords: [\"asInstanceOf\", \"catch\", \"class\", \"classOf\", \"def\", \"do\", \"else\", \"extends\", \"finally\", \"for\", \"foreach\", \"forSome\", \"if\", \"import\", \"isInstanceOf\", \"macro\", \"match\", \"new\", \"object\", \"package\", \"return\", \"throw\", \"trait\", \"try\", \"type\", \"until\", \"val\", \"var\", \"while\", \"with\", \"yield\",\n  // Dotty-specific:\n  \"given\", \"enum\", \"then\"],\n  // Dotty-specific:\n  softKeywords: [\"as\", \"export\", \"extension\", \"end\", \"derives\", \"on\"],\n  constants: [\"true\", \"false\", \"null\", \"this\", \"super\"],\n  modifiers: [\"abstract\", \"final\", \"implicit\", \"lazy\", \"override\", \"private\", \"protected\", \"sealed\"],\n  // Dotty-specific:\n  softModifiers: [\"inline\", \"opaque\", \"open\", \"transparent\", \"using\"],\n  name: /(?:[a-z_$][\\w$]*|`[^`]+`)/,\n  type: /(?:[A-Z][\\w$]*)/,\n  // we include these common regular expressions\n  symbols: /[=><!~?:&|+\\-*\\/^\\\\%@#]+/,\n  digits: /\\d+(_+\\d+)*/,\n  hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\n  // C# style strings\n  escapes: /\\\\(?:[btnfr\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  fstring_conv: /[bBhHsScCdoxXeEfgGaAt]|[Tn](?:[HIklMSLNpzZsQ]|[BbhAaCYyjmde]|[RTrDFC])/,\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [\n    // strings\n    [/\\braw\"\"\"/, {\n      token: \"string.quote\",\n      bracket: \"@open\",\n      next: \"@rawstringt\"\n    }], [/\\braw\"/, {\n      token: \"string.quote\",\n      bracket: \"@open\",\n      next: \"@rawstring\"\n    }], [/\\bs\"\"\"/, {\n      token: \"string.quote\",\n      bracket: \"@open\",\n      next: \"@sstringt\"\n    }], [/\\bs\"/, {\n      token: \"string.quote\",\n      bracket: \"@open\",\n      next: \"@sstring\"\n    }], [/\\bf\"\"\"\"/, {\n      token: \"string.quote\",\n      bracket: \"@open\",\n      next: \"@fstringt\"\n    }], [/\\bf\"/, {\n      token: \"string.quote\",\n      bracket: \"@open\",\n      next: \"@fstring\"\n    }], [/\"\"\"/, {\n      token: \"string.quote\",\n      bracket: \"@open\",\n      next: \"@stringt\"\n    }], [/\"/, {\n      token: \"string.quote\",\n      bracket: \"@open\",\n      next: \"@string\"\n    }],\n    // numbers\n    [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, \"number.float\", \"@allowMethod\"], [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, \"number.float\", \"@allowMethod\"], [/0[xX](@hexdigits)[Ll]?/, \"number.hex\", \"@allowMethod\"], [/(@digits)[fFdD]/, \"number.float\", \"@allowMethod\"], [/(@digits)[lL]?/, \"number\", \"@allowMethod\"], [/\\b_\\*/, \"key\"], [/\\b(_)\\b/, \"keyword\", \"@allowMethod\"],\n    // identifiers and keywords\n    [/\\bimport\\b/, \"keyword\", \"@import\"], [/\\b(case)([ \\t]+)(class)\\b/, [\"keyword.modifier\", \"white\", \"keyword\"]], [/\\bcase\\b/, \"keyword\", \"@case\"], [/\\bva[lr]\\b/, \"keyword\", \"@vardef\"], [/\\b(def)([ \\t]+)((?:unary_)?@symbols|@name(?:_=)|@name)/, [\"keyword\", \"white\", \"identifier\"]], [/@name(?=[ \\t]*:(?!:))/, \"variable\"], [/(\\.)(@name|@symbols)/, [\"operator\", {\n      token: \"@rematch\",\n      next: \"@allowMethod\"\n    }]], [/([{(])(\\s*)(@name(?=\\s*=>))/, [\"@brackets\", \"white\", \"variable\"]], [/@name/, {\n      cases: {\n        \"@keywords\": \"keyword\",\n        \"@softKeywords\": \"keyword\",\n        \"@modifiers\": \"keyword.modifier\",\n        \"@softModifiers\": \"keyword.modifier\",\n        \"@constants\": {\n          token: \"constant\",\n          next: \"@allowMethod\"\n        },\n        \"@default\": {\n          token: \"identifier\",\n          next: \"@allowMethod\"\n        }\n      }\n    }], [/@type/, \"type\", \"@allowMethod\"],\n    // whitespace\n    {\n      include: \"@whitespace\"\n    },\n    // @ annotations.\n    [/@[a-zA-Z_$][\\w$]*(?:\\.[a-zA-Z_$][\\w$]*)*/, \"annotation\"],\n    // delimiters and operators\n    [/[{(]/, \"@brackets\"], [/[})]/, \"@brackets\", \"@allowMethod\"], [/\\[/, \"operator.square\"], [/](?!\\s*(?:va[rl]|def|type)\\b)/, \"operator.square\", \"@allowMethod\"], [/]/, \"operator.square\"], [/([=-]>|<-|>:|<:|:>|<%)(?=[\\s\\w()[\\]{},\\.\"'`])/, \"keyword\"], [/@symbols/, \"operator\"],\n    // delimiter: after number because of .\\d floats\n    [/[;,\\.]/, \"delimiter\"],\n    // symbols\n    [/'[a-zA-Z$][\\w$]*(?!')/, \"attribute.name\"],\n    // characters\n    [/'[^\\\\']'/, \"string\", \"@allowMethod\"], [/(')(@escapes)(')/, [\"string\", \"string.escape\", {\n      token: \"string\",\n      next: \"@allowMethod\"\n    }]], [/'/, \"string.invalid\"]],\n    import: [[/;/, \"delimiter\", \"@pop\"], [/^|$/, \"\", \"@pop\"], [/[ \\t]+/, \"white\"], [/[\\n\\r]+/, \"white\", \"@pop\"], [/\\/\\*/, \"comment\", \"@comment\"], [/@name|@type/, \"type\"], [/[(){}]/, \"@brackets\"], [/[[\\]]/, \"operator.square\"], [/[\\.,]/, \"delimiter\"]],\n    allowMethod: [[/^|$/, \"\", \"@pop\"], [/[ \\t]+/, \"white\"], [/[\\n\\r]+/, \"white\", \"@pop\"], [/\\/\\*/, \"comment\", \"@comment\"], [/(?==>[\\s\\w([{])/, \"keyword\", \"@pop\"], [/(@name|@symbols)(?=[ \\t]*[[({\"'`]|[ \\t]+(?:[+-]?\\.?\\d|\\w))/, {\n      cases: {\n        \"@keywords\": {\n          token: \"keyword\",\n          next: \"@pop\"\n        },\n        \"->|<-|>:|<:|<%\": {\n          token: \"keyword\",\n          next: \"@pop\"\n        },\n        \"@default\": {\n          token: \"@rematch\",\n          next: \"@pop\"\n        }\n      }\n    }], [\"\", \"\", \"@pop\"]],\n    comment: [[/[^\\/*]+/, \"comment\"], [/\\/\\*/, \"comment\", \"@push\"],\n    // nested comment\n    [/\\*\\//, \"comment\", \"@pop\"], [/[\\/*]/, \"comment\"]],\n    case: [[/\\b_\\*/, \"key\"], [/\\b(_|true|false|null|this|super)\\b/, \"keyword\", \"@allowMethod\"], [/\\bif\\b|=>/, \"keyword\", \"@pop\"], [/`[^`]+`/, \"identifier\", \"@allowMethod\"], [/@name/, \"variable\", \"@allowMethod\"], [/:::?|\\||@(?![a-z_$])/, \"keyword\"], {\n      include: \"@root\"\n    }],\n    vardef: [[/\\b_\\*/, \"key\"], [/\\b(_|true|false|null|this|super)\\b/, \"keyword\"], [/@name/, \"variable\"], [/:::?|\\||@(?![a-z_$])/, \"keyword\"], [/=|:(?!:)/, \"operator\", \"@pop\"], [/$/, \"white\", \"@pop\"], {\n      include: \"@root\"\n    }],\n    string: [[/[^\\\\\"\\n\\r]+/, \"string\"], [/@escapes/, \"string.escape\"], [/\\\\./, \"string.escape.invalid\"], [/\"/, {\n      token: \"string.quote\",\n      bracket: \"@close\",\n      switchTo: \"@allowMethod\"\n    }]],\n    stringt: [[/[^\\\\\"\\n\\r]+/, \"string\"], [/@escapes/, \"string.escape\"], [/\\\\./, \"string.escape.invalid\"], [/\"(?=\"\"\")/, \"string\"], [/\"\"\"/, {\n      token: \"string.quote\",\n      bracket: \"@close\",\n      switchTo: \"@allowMethod\"\n    }], [/\"/, \"string\"]],\n    fstring: [[/@escapes/, \"string.escape\"], [/\"/, {\n      token: \"string.quote\",\n      bracket: \"@close\",\n      switchTo: \"@allowMethod\"\n    }], [/\\$\\$/, \"string\"], [/(\\$)([a-z_]\\w*)/, [\"operator\", \"identifier\"]], [/\\$\\{/, \"operator\", \"@interp\"], [/%%/, \"string\"], [/(%)([\\-#+ 0,(])(\\d+|\\.\\d+|\\d+\\.\\d+)(@fstring_conv)/, [\"metatag\", \"keyword.modifier\", \"number\", \"metatag\"]], [/(%)(\\d+|\\.\\d+|\\d+\\.\\d+)(@fstring_conv)/, [\"metatag\", \"number\", \"metatag\"]], [/(%)([\\-#+ 0,(])(@fstring_conv)/, [\"metatag\", \"keyword.modifier\", \"metatag\"]], [/(%)(@fstring_conv)/, [\"metatag\", \"metatag\"]], [/./, \"string\"]],\n    fstringt: [[/@escapes/, \"string.escape\"], [/\"(?=\"\"\")/, \"string\"], [/\"\"\"/, {\n      token: \"string.quote\",\n      bracket: \"@close\",\n      switchTo: \"@allowMethod\"\n    }], [/\\$\\$/, \"string\"], [/(\\$)([a-z_]\\w*)/, [\"operator\", \"identifier\"]], [/\\$\\{/, \"operator\", \"@interp\"], [/%%/, \"string\"], [/(%)([\\-#+ 0,(])(\\d+|\\.\\d+|\\d+\\.\\d+)(@fstring_conv)/, [\"metatag\", \"keyword.modifier\", \"number\", \"metatag\"]], [/(%)(\\d+|\\.\\d+|\\d+\\.\\d+)(@fstring_conv)/, [\"metatag\", \"number\", \"metatag\"]], [/(%)([\\-#+ 0,(])(@fstring_conv)/, [\"metatag\", \"keyword.modifier\", \"metatag\"]], [/(%)(@fstring_conv)/, [\"metatag\", \"metatag\"]], [/./, \"string\"]],\n    sstring: [[/@escapes/, \"string.escape\"], [/\"/, {\n      token: \"string.quote\",\n      bracket: \"@close\",\n      switchTo: \"@allowMethod\"\n    }], [/\\$\\$/, \"string\"], [/(\\$)([a-z_]\\w*)/, [\"operator\", \"identifier\"]], [/\\$\\{/, \"operator\", \"@interp\"], [/./, \"string\"]],\n    sstringt: [[/@escapes/, \"string.escape\"], [/\"(?=\"\"\")/, \"string\"], [/\"\"\"/, {\n      token: \"string.quote\",\n      bracket: \"@close\",\n      switchTo: \"@allowMethod\"\n    }], [/\\$\\$/, \"string\"], [/(\\$)([a-z_]\\w*)/, [\"operator\", \"identifier\"]], [/\\$\\{/, \"operator\", \"@interp\"], [/./, \"string\"]],\n    interp: [[/{/, \"operator\", \"@push\"], [/}/, \"operator\", \"@pop\"], {\n      include: \"@root\"\n    }],\n    rawstring: [[/[^\"]/, \"string\"], [/\"/, {\n      token: \"string.quote\",\n      bracket: \"@close\",\n      switchTo: \"@allowMethod\"\n    }]],\n    rawstringt: [[/[^\"]/, \"string\"], [/\"(?=\"\"\")/, \"string\"], [/\"\"\"/, {\n      token: \"string.quote\",\n      bracket: \"@close\",\n      switchTo: \"@allowMethod\"\n    }], [/\"/, \"string\"]],\n    whitespace: [[/[ \\t\\r\\n]+/, \"white\"], [/\\/\\*/, \"comment\", \"@comment\"], [/\\/\\/.*$/, \"comment\"]]\n  }\n};\nexport { conf, language };"],"mappings":"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","names":["conf","language"],"x_google_ignoreList":[0]}