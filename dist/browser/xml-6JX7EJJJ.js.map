{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/xml/xml.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.2(404545bded1df6ffa41ea0af4e8ddb219018c6c1)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\n\n// src/fillers/monaco-editor-core.ts\nvar monaco_editor_core_exports = {};\n__reExport(monaco_editor_core_exports, monaco_editor_core_star);\nimport * as monaco_editor_core_star from \"../../editor/editor.api.js\";\n\n// src/basic-languages/xml/xml.ts\nvar conf = {\n  comments: {\n    blockComment: [\"<!--\", \"-->\"]\n  },\n  brackets: [[\"<\", \">\"]],\n  autoClosingPairs: [{\n    open: \"<\",\n    close: \">\"\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }],\n  surroundingPairs: [{\n    open: \"<\",\n    close: \">\"\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }],\n  onEnterRules: [{\n    beforeText: new RegExp(`<([_:\\\\w][_:\\\\w-.\\\\d]*)([^/>]*(?!/)>)[^<]*$`, \"i\"),\n    afterText: /^<\\/([_:\\w][_:\\w-.\\d]*)\\s*>$/i,\n    action: {\n      indentAction: monaco_editor_core_exports.languages.IndentAction.IndentOutdent\n    }\n  }, {\n    beforeText: new RegExp(`<(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$`, \"i\"),\n    action: {\n      indentAction: monaco_editor_core_exports.languages.IndentAction.Indent\n    }\n  }]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".xml\",\n  ignoreCase: true,\n  // Useful regular expressions\n  qualifiedName: /(?:[\\w\\.\\-]+:)?[\\w\\.\\-]+/,\n  tokenizer: {\n    root: [[/[^<&]+/, \"\"], {\n      include: \"@whitespace\"\n    },\n    // Standard opening tag\n    [/(<)(@qualifiedName)/, [{\n      token: \"delimiter\"\n    }, {\n      token: \"tag\",\n      next: \"@tag\"\n    }]],\n    // Standard closing tag\n    [/(<\\/)(@qualifiedName)(\\s*)(>)/, [{\n      token: \"delimiter\"\n    }, {\n      token: \"tag\"\n    }, \"\", {\n      token: \"delimiter\"\n    }]],\n    // Meta tags - instruction\n    [/(<\\?)(@qualifiedName)/, [{\n      token: \"delimiter\"\n    }, {\n      token: \"metatag\",\n      next: \"@tag\"\n    }]],\n    // Meta tags - declaration\n    [/(<\\!)(@qualifiedName)/, [{\n      token: \"delimiter\"\n    }, {\n      token: \"metatag\",\n      next: \"@tag\"\n    }]],\n    // CDATA\n    [/<\\!\\[CDATA\\[/, {\n      token: \"delimiter.cdata\",\n      next: \"@cdata\"\n    }], [/&\\w+;/, \"string.escape\"]],\n    cdata: [[/[^\\]]+/, \"\"], [/\\]\\]>/, {\n      token: \"delimiter.cdata\",\n      next: \"@pop\"\n    }], [/\\]/, \"\"]],\n    tag: [[/[ \\t\\r\\n]+/, \"\"], [/(@qualifiedName)(\\s*=\\s*)(\"[^\"]*\"|'[^']*')/, [\"attribute.name\", \"\", \"attribute.value\"]], [/(@qualifiedName)(\\s*=\\s*)(\"[^\">?\\/]*|'[^'>?\\/]*)(?=[\\?\\/]\\>)/, [\"attribute.name\", \"\", \"attribute.value\"]], [/(@qualifiedName)(\\s*=\\s*)(\"[^\">]*|'[^'>]*)/, [\"attribute.name\", \"\", \"attribute.value\"]], [/@qualifiedName/, \"attribute.name\"], [/\\?>/, {\n      token: \"delimiter\",\n      next: \"@pop\"\n    }], [/(\\/)(>)/, [{\n      token: \"tag\"\n    }, {\n      token: \"delimiter\",\n      next: \"@pop\"\n    }]], [/>/, {\n      token: \"delimiter\",\n      next: \"@pop\"\n    }]],\n    whitespace: [[/[ \\t\\r\\n]+/, \"\"], [/<!--/, {\n      token: \"comment\",\n      next: \"@comment\"\n    }]],\n    comment: [[/[^<\\-]+/, \"comment.content\"], [/-->/, {\n      token: \"comment\",\n      next: \"@pop\"\n    }], [/<!--/, \"comment.content.invalid\"], [/[<\\-]/, \"comment.content\"]]\n  }\n};\nexport { conf, language };"],"mappings":"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","names":["__defProp","__getOwnPropDesc","__getOwnPropNames","__hasOwnProp","__copyProps","to","from","except","desc","key","__reExport","target","mod","secondTarget","monaco_editor_core_exports","editor_api_exports","conf","language"],"x_google_ignoreList":[0]}