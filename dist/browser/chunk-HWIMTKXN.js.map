{
  "version": 3,
  "sources": ["src/main/webapp/app/course/dashboards/stats-for-dashboard.model.ts", "src/main/webapp/app/course/dashboards/assessment-dashboard/assessment-dashboard-information.component.ts", "src/main/webapp/app/course/dashboards/assessment-dashboard/assessment-dashboard-information.component.html", "src/main/webapp/app/shared/dashboards/tutor-participation-graph/tutor-participation-graph.component.ts", "src/main/webapp/app/shared/dashboards/tutor-participation-graph/tutor-participation-graph.component.html", "src/main/webapp/app/exercises/shared/dashboards/tutor/second-correction-button/second-correction-enable-button.component.ts", "src/main/webapp/app/exercises/shared/dashboards/tutor/second-correction-button/second-correction-enable-button.component.html", "src/main/webapp/app/shared/dashboards/tutor-leaderboard/tutor-leaderboard.component.ts", "src/main/webapp/app/shared/dashboards/tutor-leaderboard/tutor-leaderboard.component.html"],
  "sourcesContent": ["import { TutorLeaderboardElement } from 'app/shared/dashboards/tutor-leaderboard/tutor-leaderboard.model';\r\nimport { DueDateStat } from 'app/course/dashboards/due-date-stat.model';\r\n\r\nexport class StatsForDashboard {\r\n    public numberOfStudents = 0;\r\n    public numberOfSubmissions = new DueDateStat();\r\n    public totalNumberOfAssessments = new DueDateStat();\r\n    public numberOfAutomaticAssistedAssessments = new DueDateStat();\r\n    public numberOfComplaints = 0;\r\n    public numberOfOpenComplaints = 0;\r\n    public numberOfMoreFeedbackRequests = 0;\r\n    public numberOfOpenMoreFeedbackRequests = 0;\r\n    public numberOfAssessmentLocks = 0;\r\n    public totalNumberOfAssessmentLocks = 0;\r\n    public complaintsEnabled = true;\r\n    public feedbackRequestEnabled = true;\r\n    public numberOfAssessmentsOfCorrectionRounds = [new DueDateStat()]; // Array with number of assessments for each correction round\r\n    public numberOfLockedAssessmentByOtherTutorsOfCorrectionRound = [new DueDateStat()]; // Array with number of locked assessments for each correction round\r\n    public numberOfRatings = 0;\r\n\r\n    public tutorLeaderboardEntries: TutorLeaderboardElement[] = [];\r\n\r\n    /**\r\n     * Correctly initializes a class instance from a typecasted object.\r\n     * Returns a 'real' class instance that supports all class methods.\r\n     * @param object: The typecasted object\r\n     * @returns The class instance\r\n     */\r\n    static from(object: StatsForDashboard): StatsForDashboard {\r\n        const stats = Object.assign(new StatsForDashboard(), object);\r\n        stats.numberOfSubmissions = Object.assign(new DueDateStat(), stats.numberOfSubmissions);\r\n        stats.totalNumberOfAssessments = Object.assign(new DueDateStat(), stats.totalNumberOfAssessments);\r\n        stats.numberOfAutomaticAssistedAssessments = Object.assign(new DueDateStat(), stats.numberOfAutomaticAssistedAssessments);\r\n        return stats;\r\n    }\r\n}\r\n", "import { Component, Input, OnChanges, OnDestroy, OnInit, inject } from '@angular/core';\r\nimport { DueDateStat } from 'app/course/dashboards/due-date-stat.model';\r\nimport { LegendPosition, PieChartModule } from '@swimlane/ngx-charts';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { GraphColors } from 'app/entities/statistics.model';\r\nimport { SidePanelComponent } from 'app/shared/side-panel/side-panel.component';\r\nimport { Subscription } from 'rxjs';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { RouterLink } from '@angular/router';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\nexport class AssessmentDashboardInformationEntry {\r\n    constructor(\r\n        public total: number,\r\n        public tutor: number,\r\n        public done?: number,\r\n    ) {}\r\n\r\n    /**\r\n     * Computes the percentage of done/total ratio and returns it as a string\r\n     */\r\n    get doneToTotalPercentage(): string {\r\n        if (this.done == undefined) {\r\n            return '';\r\n        }\r\n\r\n        if (this.total === 0) {\r\n            return '100%';\r\n        }\r\n\r\n        return `${((100 * this.done) / this.total).toFixed().toString()}%`;\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'jhi-assessment-dashboard-information',\r\n    templateUrl: './assessment-dashboard-information.component.html',\r\n    styleUrls: ['./assessment-dashboard-information.component.scss'],\r\n    imports: [TranslateDirective, PieChartModule, RouterLink, ArtemisTranslatePipe, SidePanelComponent],\r\n})\r\nexport class AssessmentDashboardInformationComponent implements OnInit, OnChanges, OnDestroy {\r\n    private translateService = inject(TranslateService);\r\n\r\n    @Input() isExamMode: boolean;\r\n    @Input() course: Course;\r\n    @Input() examId?: number;\r\n    @Input() tutorId: number;\r\n\r\n    @Input() complaintsEnabled: boolean;\r\n    @Input() feedbackRequestEnabled: boolean;\r\n\r\n    @Input() numberOfCorrectionRounds: number;\r\n    @Input() numberOfAssessmentsOfCorrectionRounds: DueDateStat[];\r\n\r\n    @Input() totalNumberOfAssessments: DueDateStat;\r\n    @Input() numberOfSubmissions: DueDateStat;\r\n    @Input() numberOfTutorAssessments: number;\r\n    @Input() totalAssessmentPercentage: number;\r\n\r\n    @Input() complaints: AssessmentDashboardInformationEntry;\r\n    @Input() moreFeedbackRequests: AssessmentDashboardInformationEntry;\r\n    @Input() assessmentLocks: AssessmentDashboardInformationEntry;\r\n    @Input() ratings: AssessmentDashboardInformationEntry;\r\n\r\n    // Graph data.\r\n    completedAssessmentsTitle: string;\r\n    openedAssessmentsTitle: string;\r\n    assessments: any[];\r\n    customColors: any[];\r\n    view: [number, number] = [320, 150];\r\n    legendPosition = LegendPosition.Below;\r\n\r\n    complaintsLink: any[];\r\n    moreFeedbackRequestsLink: any[];\r\n    assessmentLocksLink: any[];\r\n    ratingsLink: any[];\r\n\r\n    themeSubscription: Subscription;\r\n\r\n    ngOnInit(): void {\r\n        this.setup();\r\n        this.translateService.onLangChange.subscribe(() => {\r\n            this.setupGraph();\r\n        });\r\n\r\n        this.customColors = [\r\n            {\r\n                name: this.openedAssessmentsTitle,\r\n                value: GraphColors.RED,\r\n            },\r\n            {\r\n                name: this.completedAssessmentsTitle,\r\n                value: GraphColors.BLUE,\r\n            },\r\n        ];\r\n    }\r\n\r\n    ngOnChanges() {\r\n        this.setup();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.themeSubscription?.unsubscribe();\r\n    }\r\n\r\n    setup() {\r\n        this.setupLinks();\r\n        this.setupGraph();\r\n    }\r\n\r\n    setupLinks() {\r\n        const examRouteIfNeeded = this.isExamMode ? ['exams', this.examId!] : [];\r\n\r\n        this.complaintsLink = ['/course-management', this.course.id].concat(examRouteIfNeeded).concat(['complaints']);\r\n        this.moreFeedbackRequestsLink = ['/course-management', this.course.id].concat(examRouteIfNeeded).concat(['more-feedback-requests']);\r\n        this.assessmentLocksLink = ['/course-management', this.course.id].concat(examRouteIfNeeded).concat(['assessment-locks']);\r\n        this.ratingsLink = ['/course-management', this.course.id, 'ratings'];\r\n    }\r\n\r\n    setupGraph() {\r\n        this.completedAssessmentsTitle = this.translateService.instant('artemisApp.exerciseAssessmentDashboard.closedAssessments');\r\n        this.openedAssessmentsTitle = this.translateService.instant('artemisApp.exerciseAssessmentDashboard.openAssessments');\r\n\r\n        this.assessments = [\r\n            {\r\n                name: this.openedAssessmentsTitle,\r\n                value: this.numberOfSubmissions.total - this.totalNumberOfAssessments.total / this.numberOfCorrectionRounds,\r\n            },\r\n            {\r\n                name: this.completedAssessmentsTitle,\r\n                value: this.totalNumberOfAssessments.total / this.numberOfCorrectionRounds,\r\n            },\r\n        ];\r\n    }\r\n}\r\n", "<div class=\"row mt-3 g-3\">\r\n    <div class=\"col-12 col-md-6 col-lg-7 mt-0\">\r\n        @if (isExamMode) {\r\n            <span style=\"font-size: 16px\" jhiTranslate=\"artemisApp.assessmentDashboard.exerciseTable.examInformation\"></span>\r\n        } @else {\r\n            <span style=\"font-size: 16px\" jhiTranslate=\"artemisApp.assessmentDashboard.exerciseTable.courseInformation\"></span>\r\n        }\r\n        <!-- chart -->\r\n        @if (numberOfSubmissions.total !== 0) {\r\n            <div class=\"pie-chart pb-2\" style=\"margin-top: -10px\">\r\n                <ngx-charts-pie-chart\r\n                    [customColors]=\"customColors\"\r\n                    [view]=\"view\"\r\n                    [results]=\"assessments\"\r\n                    [legend]=\"true\"\r\n                    [legendTitle]=\"''\"\r\n                    [legendPosition]=\"legendPosition\"\r\n                    [animations]=\"false\"\r\n                >\r\n                    <ng-template #tooltipTemplate let-model=\"model\"> {{ ((model.value * 100) / this.numberOfSubmissions.total).toFixed(2) }}% </ng-template>\r\n                </ngx-charts-pie-chart>\r\n            </div>\r\n        }\r\n    </div>\r\n    <div class=\"col-12 col-md-6 col-lg-5 overflow-auto\">\r\n        <jhi-side-panel\r\n            style=\"min-width: 360px\"\r\n            class=\"d-block\"\r\n            [panelHeader]=\"'artemisApp.assessmentDashboard.assessmentInformation' | artemisTranslate\"\r\n            [panelDescriptionHeader]=\"'artemisApp.exerciseAssessmentDashboard.totalYours' | artemisTranslate\"\r\n        >\r\n            @if (!isExamMode) {\r\n                <div>\r\n                    <div class=\"row g-0 mb-1\">\r\n                        <div class=\"col-7\" jhiTranslate=\"artemisApp.assessmentDashboard.assessments\"></div>\r\n                        <div class=\"col-5\">\r\n                            {{ totalNumberOfAssessments.total }} / {{ numberOfSubmissions.total }} ({{ totalAssessmentPercentage }}%) | {{ numberOfTutorAssessments }}\r\n                        </div>\r\n                    </div>\r\n                    @if (complaintsEnabled) {\r\n                        <div class=\"row g-0 mb-1\">\r\n                            <div class=\"col-7\" jhiTranslate=\"artemisApp.assessmentDashboard.complaints\"></div>\r\n                            <div class=\"col-5\">\r\n                                @if (course?.isAtLeastInstructor) {\r\n                                    <div>\r\n                                        <a id=\"open-complaints\" [routerLink]=\"complaintsLink\">\r\n                                            {{ complaints.done }} / {{ complaints.total }} ({{ complaints.doneToTotalPercentage }})\r\n                                        </a>\r\n                                        |\r\n                                        <a [routerLink]=\"complaintsLink\" [queryParams]=\"{ tutorId: tutorId }\">\r\n                                            {{ complaints.tutor }}\r\n                                        </a>\r\n                                    </div>\r\n                                }\r\n                                @if (course && !course.isAtLeastInstructor) {\r\n                                    <div>\r\n                                        {{ complaints.done }} / {{ complaints.total }} ({{ complaints.doneToTotalPercentage }}) |\r\n                                        <a [routerLink]=\"complaintsLink\" [queryParams]=\"{ tutorId: tutorId }\">\r\n                                            {{ complaints.tutor }}\r\n                                        </a>\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    @if (feedbackRequestEnabled) {\r\n                        <div class=\"row g-0 mb-1\">\r\n                            <div class=\"col-7\" jhiTranslate=\"artemisApp.assessmentDashboard.moreFeedbackRequests\"></div>\r\n                            <div class=\"col-5\">\r\n                                @if (course?.isAtLeastInstructor) {\r\n                                    <div>\r\n                                        @if (course?.isAtLeastInstructor) {\r\n                                            <a [routerLink]=\"moreFeedbackRequestsLink\">\r\n                                                {{ moreFeedbackRequests.done }} / {{ moreFeedbackRequests.total }} ({{ moreFeedbackRequests.doneToTotalPercentage }})\r\n                                            </a>\r\n                                        }\r\n                                        |\r\n                                        <a [routerLink]=\"moreFeedbackRequestsLink\" [queryParams]=\"{ tutorId: tutorId }\">\r\n                                            {{ moreFeedbackRequests.tutor }}\r\n                                        </a>\r\n                                    </div>\r\n                                }\r\n                                @if (course && !course.isAtLeastInstructor) {\r\n                                    <div>\r\n                                        {{ moreFeedbackRequests.done }} / {{ moreFeedbackRequests.total }} ({{ moreFeedbackRequests.doneToTotalPercentage }}) |\r\n                                        <a [routerLink]=\"moreFeedbackRequestsLink\" [queryParams]=\"{ tutorId: tutorId }\">\r\n                                            {{ moreFeedbackRequests.tutor }}\r\n                                        </a>\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    <div class=\"row g-0 mb-1\">\r\n                        <div class=\"col-7\" jhiTranslate=\"artemisApp.assessmentDashboard.assessmentLocks\"></div>\r\n                        <div class=\"col-5\">\r\n                            {{ assessmentLocks.tutor }} |\r\n                            <a [routerLink]=\"assessmentLocksLink\" [queryParams]=\"{ tutorId: tutorId }\">\r\n                                {{ assessmentLocks.tutor }}\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row g-0 mb-1\">\r\n                        <div class=\"col-7\" jhiTranslate=\"artemisApp.exerciseAssessmentDashboard.ratings\"></div>\r\n                        <div class=\"col-5\">\r\n                            @if (course?.isAtLeastInstructor) {\r\n                                <a [routerLink]=\"ratingsLink\"> {{ ratings.total }} </a>\r\n                            }\r\n                            @if (course && !course.isAtLeastInstructor) {\r\n                                <span> {{ ratings.total }} </span>\r\n                            }\r\n                            |\r\n                            {{ ratings.tutor }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n            @if (isExamMode) {\r\n                <div>\r\n                    <div class=\"row g-0 mb-1\">\r\n                        <div class=\"col-7\" jhiTranslate=\"artemisApp.assessmentDashboard.assessments\"></div>\r\n                        <div class=\"col-5\">\r\n                            ({{ totalNumberOfAssessments.total }} / {{ numberOfSubmissions.total * numberOfCorrectionRounds }}) ({{ totalAssessmentPercentage }}%) |\r\n                            {{ numberOfTutorAssessments }}\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row g-0 mb-1\">\r\n                        <div class=\"col-7\" jhiTranslate=\"artemisApp.assessmentDashboard.complaints\"></div>\r\n                        <div class=\"col-5\">\r\n                            @if (course?.isAtLeastInstructor) {\r\n                                <div>\r\n                                    <a [routerLink]=\"complaintsLink\" [queryParams]=\"{ correctionRound: numberOfCorrectionRounds - 1 }\">\r\n                                        {{ complaints.done }} / {{ complaints.total }} ({{ complaints.doneToTotalPercentage }})\r\n                                    </a>\r\n                                    | {{ complaints.tutor }}\r\n                                </div>\r\n                            }\r\n                            <!-- TODO: make those links work (REST calls to fetch for individual students do not exist yet) -->\r\n                            <!-- this value is not yet available for exam mode. As soon as the leaderboards exist add it again. {{ complaints.tutor }} -->\r\n                            @if (course && !course.isAtLeastInstructor) {\r\n                                <div>{{ complaints.done }} / {{ complaints.total }} ({{ complaints.doneToTotalPercentage }}) | -</div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row g-0 mb-1\">\r\n                        <div class=\"col-7\" jhiTranslate=\"artemisApp.assessmentDashboard.assessmentLocks\"></div>\r\n                        <div class=\"col-5\">\r\n                            {{ assessmentLocks.total }}\r\n                            |\r\n                            <a [routerLink]=\"assessmentLocksLink\" [queryParams]=\"{ tutorId: tutorId }\">\r\n                                {{ assessmentLocks.tutor }}\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row g-0 mb-1\">\r\n                        <div class=\"col-7\" jhiTranslate=\"artemisApp.assessmentDashboard.totalAssessmentsForCorrectionrounds\"></div>\r\n                        <div class=\"col-5\">\r\n                            {{ numberOfAssessmentsOfCorrectionRounds[0].inTime }}\r\n                            @if (numberOfAssessmentsOfCorrectionRounds[1]) {\r\n                                <span> - {{ numberOfAssessmentsOfCorrectionRounds[1].inTime }}</span>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </jhi-side-panel>\r\n    </div>\r\n</div>\r\n", "import { Component, Input, OnChanges, OnInit, SimpleChanges, ViewEncapsulation, inject } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { get } from 'lodash-es';\r\nimport { Exercise, ExerciseType } from 'app/entities/exercise.model';\r\nimport { TutorParticipation, TutorParticipationStatus } from 'app/entities/participation/tutor-participation.model';\r\nimport { DueDateStat } from 'app/course/dashboards/due-date-stat.model';\r\nimport { ProgrammingExercise } from 'app/entities/programming/programming-exercise.model';\r\nimport { faBook, faChalkboardTeacher } from '@fortawesome/free-solid-svg-icons';\r\nimport { NgClass } from '@angular/common';\r\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { ProgressBarComponent } from './progress-bar/progress-bar.component';\r\nimport { ArtemisTranslatePipe } from '../../pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-tutor-participation-graph',\r\n    templateUrl: './tutor-participation-graph.component.html',\r\n    styleUrls: ['./tutor-participation-graph.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    imports: [NgClass, NgbTooltip, FaIconComponent, ProgressBarComponent, ArtemisTranslatePipe],\r\n})\r\nexport class TutorParticipationGraphComponent implements OnInit, OnChanges {\r\n    private router = inject(Router);\r\n\r\n    @Input() public tutorParticipation: TutorParticipation;\r\n    @Input() public numberOfSubmissions?: DueDateStat;\r\n    @Input() public totalNumberOfAssessments?: DueDateStat;\r\n    @Input() public numberOfComplaints: number;\r\n    @Input() public numberOfOpenComplaints: number;\r\n    @Input() public numberOfMoreFeedbackRequests: number;\r\n    @Input() public numberOfOpenMoreFeedbackRequests: number;\r\n    @Input() exercise: Exercise;\r\n    @Input() public numberOfAssessmentsOfCorrectionRounds: DueDateStat[];\r\n\r\n    tutorParticipationStatus: TutorParticipationStatus = TutorParticipationStatus.NOT_PARTICIPATED;\r\n\r\n    ExerciseType = ExerciseType;\r\n    NOT_PARTICIPATED = TutorParticipationStatus.NOT_PARTICIPATED;\r\n    REVIEWED_INSTRUCTIONS = TutorParticipationStatus.REVIEWED_INSTRUCTIONS;\r\n    TRAINED = TutorParticipationStatus.TRAINED;\r\n    COMPLETED = TutorParticipationStatus.COMPLETED;\r\n\r\n    percentageComplaintsProgress = 0;\r\n\r\n    percentageInTimeAssessmentProgressOfCorrectionRound: number[] = [];\r\n    percentageLateAssessmentProgressOfCorrectionRound: number[] = [];\r\n\r\n    routerLink: string;\r\n\r\n    shouldShowManualAssessments = true;\r\n\r\n    // Icons\r\n    faBook = faBook;\r\n    faChalkboardTeacher = faChalkboardTeacher;\r\n\r\n    /**\r\n     * Life cycle hook called by Angular to indicate that Angular is done creating the component\r\n     */\r\n    ngOnInit() {\r\n        this.tutorParticipationStatus = this.tutorParticipation.status!;\r\n        const exerciseId = get(this.tutorParticipation, 'trainedExampleSubmissions[0].exercise.id');\r\n        const courseId = get(this.tutorParticipation, 'trainedExampleSubmissions[0].exercise.course.id');\r\n\r\n        if (courseId && exerciseId) {\r\n            this.routerLink = `/course-management/${courseId}/assessment-dashboard/${exerciseId}`;\r\n        }\r\n        this.calculatePercentageAssessmentProgress();\r\n        this.calculatePercentageComplaintsProgress();\r\n\r\n        if (this.exercise && this.exercise.type === ExerciseType.PROGRAMMING) {\r\n            this.shouldShowManualAssessments = !(this.exercise as ProgrammingExercise).allowComplaintsForAutomaticAssessments;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Function wrapping router.navigate safely by checking for null and empty string\r\n     */\r\n    navigate() {\r\n        if (this.routerLink && this.routerLink.length > 0) {\r\n            this.router.navigate([this.routerLink]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * A lifecycle hook called by Angular when any data-bound property of a component changes\r\n     *\r\n     * @param changes Changes made\r\n     */\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes.tutorParticipation) {\r\n            this.tutorParticipation = changes.tutorParticipation.currentValue;\r\n            this.tutorParticipationStatus = this.tutorParticipation.status!;\r\n        }\r\n        this.calculatePercentageAssessmentProgress();\r\n        this.calculatePercentageComplaintsProgress();\r\n    }\r\n\r\n    /**\r\n     * Function to calculate the percentage of the number of assessments divided by the number of participations\r\n     */\r\n    calculatePercentageAssessmentProgress() {\r\n        for (const [index, numberOfAssessments] of this.numberOfAssessmentsOfCorrectionRounds.entries()) {\r\n            this.percentageInTimeAssessmentProgressOfCorrectionRound[index] = 0;\r\n            this.percentageLateAssessmentProgressOfCorrectionRound[index] = 0;\r\n            if (this.numberOfSubmissions && this.numberOfSubmissions.inTime !== 0) {\r\n                this.percentageInTimeAssessmentProgressOfCorrectionRound[index] = Math.floor((numberOfAssessments.inTime / this.numberOfSubmissions.inTime) * 100);\r\n            }\r\n            if (this.numberOfSubmissions && this.numberOfSubmissions?.late !== 0) {\r\n                this.percentageLateAssessmentProgressOfCorrectionRound[index] = Math.floor((numberOfAssessments.late / this.numberOfSubmissions.late) * 100);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Function to calculate the percentage of responded complaints\r\n     * This is calculated adding the number of not evaluated complaints and feedback requests and dividing\r\n     * by the total number of complaints and feedbacks and rounding it tpwards zero.\r\n     */\r\n    calculatePercentageComplaintsProgress() {\r\n        if (this.numberOfComplaints + this.numberOfMoreFeedbackRequests !== 0) {\r\n            this.percentageComplaintsProgress = Math.floor(\r\n                ((this.numberOfComplaints -\r\n                    this.numberOfOpenComplaints + // nr of evaluated complaints\r\n                    (this.numberOfMoreFeedbackRequests - this.numberOfOpenMoreFeedbackRequests)) / // nr of evaluated more feedback requests\r\n                    (this.numberOfComplaints + this.numberOfMoreFeedbackRequests)) * // total nr of complaints and feedback requests\r\n                    100,\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Calculates the classes for the steps (circles) in the tutor participation graph\r\n     * @param step for which the class should be calculated for (NOT_PARTICIPATED, REVIEWED_INSTRUCTIONS, TRAINED)\r\n     */\r\n    calculateClasses(step: TutorParticipationStatus): string {\r\n        // Returns 'active' if the current participation status is not trained\r\n        if (step === this.tutorParticipationStatus && step !== this.TRAINED) {\r\n            return 'active';\r\n        }\r\n\r\n        // Returns 'opaque' if the tutor has not participated yet\r\n        if (step === this.TRAINED && this.tutorParticipationStatus === this.NOT_PARTICIPATED) {\r\n            return 'opaque';\r\n        }\r\n\r\n        if (step === this.TRAINED && this.exercise.exampleSubmissions && this.tutorParticipation.trainedExampleSubmissions) {\r\n            const reviewedByTutor = this.tutorParticipation.trainedExampleSubmissions.filter((exampleSubmission) => !exampleSubmission.usedForTutorial);\r\n            const exercisesToReview = this.exercise.exampleSubmissions.filter((exampleSubmission) => !exampleSubmission.usedForTutorial);\r\n            const assessedByTutor = this.tutorParticipation.trainedExampleSubmissions.filter((exampleSubmission) => exampleSubmission.usedForTutorial);\r\n            const exercisesToAssess = this.exercise.exampleSubmissions.filter((exampleSubmission) => exampleSubmission.usedForTutorial);\r\n\r\n            // Returns 'orange' if there are still open example reviews or assessments\r\n            if (\r\n                (exercisesToReview.length > 0 && exercisesToReview.length !== reviewedByTutor.length) ||\r\n                (exercisesToAssess.length > 0 && exercisesToAssess.length !== assessedByTutor.length)\r\n            ) {\r\n                return 'orange';\r\n            }\r\n        }\r\n\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * Returns a string representation of the progress bar class based on the current status\r\n     */\r\n    calculateClassProgressBar() {\r\n        if (this.tutorParticipationStatus !== this.TRAINED && this.tutorParticipationStatus !== this.COMPLETED) {\r\n            return 'opaque';\r\n        }\r\n\r\n        if (\r\n            this.tutorParticipationStatus === this.COMPLETED ||\r\n            (this.numberOfSubmissions && this.totalNumberOfAssessments && this.numberOfSubmissions.inTime === this.totalNumberOfAssessments.inTime) ||\r\n            this.numberOfOpenComplaints + this.numberOfOpenMoreFeedbackRequests === 0\r\n        ) {\r\n            return 'active';\r\n        }\r\n\r\n        return 'orange';\r\n    }\r\n\r\n    /**\r\n     * Returns the total number of evaluated complaints and feedback requests\r\n     */\r\n    calculateComplaintsNumerator() {\r\n        return this.numberOfComplaints - this.numberOfOpenComplaints + (this.numberOfMoreFeedbackRequests - this.numberOfOpenMoreFeedbackRequests);\r\n    }\r\n\r\n    /**\r\n     * Returns the total number of complaints and feedback requests\r\n     */\r\n    calculateComplaintsDenominator() {\r\n        return this.numberOfComplaints + this.numberOfMoreFeedbackRequests;\r\n    }\r\n}\r\n", "<div class=\"row justify-content-center overflow-hidden\">\r\n    <ul>\r\n        <li class=\"not_participated\" [ngClass]=\"calculateClasses(NOT_PARTICIPATED)\">0</li>\r\n        <li\r\n            class=\"ms-0\"\r\n            [ngClass]=\"calculateClasses(REVIEWED_INSTRUCTIONS)\"\r\n            (click)=\"navigate()\"\r\n            [ngbTooltip]=\"'artemisApp.assessmentDashboard.readGradingInstructions' | artemisTranslate\"\r\n        >\r\n            <fa-icon [icon]=\"faBook\" />\r\n        </li>\r\n        @if (exercise.type !== ExerciseType.PROGRAMMING) {\r\n            <li [ngClass]=\"calculateClasses(TRAINED)\" (click)=\"navigate()\" [ngbTooltip]=\"'artemisApp.assessmentDashboard.trainOnExampleSubmissions' | artemisTranslate\">\r\n                <fa-icon [icon]=\"faChalkboardTeacher\" />\r\n            </li>\r\n        }\r\n        @if (shouldShowManualAssessments) {\r\n            @for (numberOfAssessedSubmissions of numberOfAssessmentsOfCorrectionRounds; track numberOfAssessedSubmissions; let i = $index) {\r\n                <li class=\"progress-bar-li stacked-li\" [ngClass]=\"calculateClassProgressBar()\">\r\n                    <div class=\"stacked-item\">\r\n                        <jhi-progress-bar\r\n                            [tooltip]=\"'artemisApp.assessmentDashboard.assessStudentsSubmissions' | artemisTranslate\"\r\n                            [percentage]=\"percentageInTimeAssessmentProgressOfCorrectionRound[i]\"\r\n                            [numerator]=\"numberOfAssessedSubmissions.inTime\"\r\n                            [denominator]=\"numberOfSubmissions?.inTime || 0\"\r\n                        />\r\n                    </div>\r\n                    @if (numberOfSubmissions && numberOfSubmissions!.late > 0) {\r\n                        <div class=\"stacked-item\">\r\n                            <jhi-progress-bar\r\n                                [tooltip]=\"'artemisApp.assessmentDashboard.assessStudentsLateSubmissions' | artemisTranslate\"\r\n                                [percentage]=\"percentageLateAssessmentProgressOfCorrectionRound[i]\"\r\n                                [numerator]=\"numberOfAssessedSubmissions.late\"\r\n                                [denominator]=\"numberOfSubmissions?.late || 0\"\r\n                            />\r\n                        </div>\r\n                    }\r\n                </li>\r\n            }\r\n        }\r\n        <li class=\"progress-bar-li me-0\" [ngClass]=\"calculateClassProgressBar()\">\r\n            <jhi-progress-bar\r\n                [tooltip]=\"'artemisApp.assessmentDashboard.evaluateStudentsComplaints' | artemisTranslate\"\r\n                [percentage]=\"percentageComplaintsProgress\"\r\n                [numerator]=\"calculateComplaintsNumerator()\"\r\n                [denominator]=\"calculateComplaintsDenominator()\"\r\n            />\r\n        </li>\r\n    </ul>\r\n</div>\r\n", "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { faSpinner, faToggleOff, faToggleOn } from '@fortawesome/free-solid-svg-icons';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-second-correction-enable-button',\r\n    templateUrl: './second-correction-enable-button.component.html',\r\n    styles: ['div { cursor: pointer; }'],\r\n    imports: [FaIconComponent, ArtemisTranslatePipe],\r\n})\r\nexport class SecondCorrectionEnableButtonComponent {\r\n    @Input() secondCorrectionEnabled: boolean;\r\n    @Input() togglingSecondCorrectionButton: boolean;\r\n\r\n    @Output() ngModelChange = new EventEmitter();\r\n\r\n    // Icons\r\n    faToggleOn = faToggleOn;\r\n    faToggleOff = faToggleOff;\r\n    faSpinner = faSpinner;\r\n\r\n    triggerSecondCorrectionButton() {\r\n        this.ngModelChange.emit();\r\n    }\r\n}\r\n", "<div class=\"btn-group\">\r\n    <!-- Enable second correction with this button -->\r\n    @if (!secondCorrectionEnabled) {\r\n        <button (click)=\"triggerSecondCorrectionButton()\" class=\"btn btn-success float-end btn-sm\">\r\n            <fa-icon [icon]=\"faToggleOn\" [fixedWidth]=\"true\" />&nbsp;{{ 'artemisApp.exerciseAssessmentDashboard.toggleSecondCorrectionOn' | artemisTranslate }}\r\n            @if (togglingSecondCorrectionButton) {\r\n                <fa-icon [icon]=\"faSpinner\" animation=\"spin\" />\r\n            }\r\n        </button>\r\n    }\r\n    <!-- Disable second correction with this button -->\r\n    @if (secondCorrectionEnabled) {\r\n        <button (click)=\"triggerSecondCorrectionButton()\" class=\"btn btn-danger float-end btn-sm\">\r\n            <fa-icon [icon]=\"faToggleOff\" [fixedWidth]=\"true\" />&nbsp;{{ 'artemisApp.exerciseAssessmentDashboard.toggleSecondCorrectionOff' | artemisTranslate }}\r\n            @if (togglingSecondCorrectionButton) {\r\n                <fa-icon [icon]=\"faSpinner\" animation=\"spin\" />\r\n            }\r\n        </button>\r\n    }\r\n</div>\r\n", "import { Component, Input, OnInit, inject } from '@angular/core';\r\nimport { TutorLeaderboardElement } from 'app/shared/dashboards/tutor-leaderboard/tutor-leaderboard.model';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { Exercise, getCourseFromExercise } from 'app/entities/exercise.model';\r\nimport { SortService } from 'app/shared/service/sort.service';\r\nimport { Exam } from 'app/entities/exam/exam.model';\r\nimport { faExclamationTriangle, faSort } from '@fortawesome/free-solid-svg-icons';\r\nimport { SortDirective } from '../../sort/sort.directive';\r\nimport { SortByDirective } from '../../sort/sort-by.directive';\r\nimport { TranslateDirective } from '../../language/translate.directive';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { RouterLink } from '@angular/router';\r\nimport { ArtemisTranslatePipe } from '../../pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-tutor-leaderboard',\r\n    templateUrl: './tutor-leaderboard.component.html',\r\n    imports: [SortDirective, SortByDirective, TranslateDirective, FaIconComponent, NgbTooltip, RouterLink, ArtemisTranslatePipe],\r\n})\r\nexport class TutorLeaderboardComponent implements OnInit {\r\n    private sortService = inject(SortService);\r\n\r\n    @Input() public tutorsData: TutorLeaderboardElement[] = [];\r\n    @Input() public course?: Course;\r\n    @Input() public exercise?: Exercise;\r\n    @Input() public exam?: Exam;\r\n\r\n    isExerciseDashboard = false;\r\n    isExamMode = false;\r\n    sortPredicate = 'points';\r\n    reverseOrder = false;\r\n\r\n    // Icons\r\n    faSort = faSort;\r\n    faExclamationTriangle = faExclamationTriangle;\r\n\r\n    /**\r\n     * Life cycle hook called by Angular to indicate that Angular is done creating the component\r\n     */\r\n    ngOnInit(): void {\r\n        if (this.exercise) {\r\n            this.course = getCourseFromExercise(this.exercise);\r\n        }\r\n        this.isExerciseDashboard = !!(this.exercise && this.course);\r\n        this.isExamMode = !!this.exam;\r\n        this.sortRows();\r\n    }\r\n\r\n    sortRows() {\r\n        this.sortService.sortByProperty(this.tutorsData, this.sortPredicate, this.reverseOrder);\r\n    }\r\n}\r\n", "<div class=\"row table-responsive mt-3\">\r\n    <table class=\"table\">\r\n        <thead>\r\n            <tr jhiSort [(predicate)]=\"sortPredicate\" [(ascending)]=\"reverseOrder\" (sortChange)=\"sortRows()\">\r\n                <th>#</th>\r\n                <th jhiSortBy=\"name\">\r\n                    <a class=\"th-link\" jhiTranslate=\"artemisApp.assessmentDashboard.tutorLeaderboard.name\"></a>\r\n                    <fa-icon [icon]=\"faSort\" />\r\n                </th>\r\n                <th jhiSortBy=\"points\">\r\n                    <a class=\"th-link\" jhiTranslate=\"artemisApp.assessmentDashboard.tutorLeaderboard.points\"></a>\r\n                    <fa-icon [icon]=\"faSort\" />\r\n                </th>\r\n                <th jhiSortBy=\"numberOfAssessments\">\r\n                    <a class=\"th-link\" jhiTranslate=\"artemisApp.assessmentDashboard.tutorLeaderboard.numberOfAssessments\"></a>\r\n                    <fa-icon [icon]=\"faSort\" />\r\n                </th>\r\n                <th jhiSortBy=\"numberOfAcceptedComplaints\">\r\n                    <a class=\"th-link\" jhiTranslate=\"artemisApp.assessmentDashboard.tutorLeaderboard.numberOfAcceptedComplaints\"></a>\r\n                    <fa-icon [icon]=\"faSort\" />\r\n                </th>\r\n                @if (!isExamMode) {\r\n                    <th jhiSortBy=\"numberOfNotAnsweredMoreFeedbackRequests\">\r\n                        <a class=\"th-link\" jhiTranslate=\"artemisApp.assessmentDashboard.tutorLeaderboard.numberOfNotAnsweredMoreFeedbackRequests\"></a>\r\n                        <fa-icon [icon]=\"faSort\" />\r\n                    </th>\r\n                }\r\n                <th jhiSortBy=\"numberOfComplaintResponses\">\r\n                    <a class=\"th-link\" jhiTranslate=\"artemisApp.assessmentDashboard.tutorLeaderboard.numberOfComplaintResponses\"></a>\r\n                    <fa-icon [icon]=\"faSort\" />\r\n                </th>\r\n                @if (!isExamMode) {\r\n                    <th jhiSortBy=\"numberOfAnsweredMoreFeedbackRequests\">\r\n                        <a class=\"th-link\" jhiTranslate=\"artemisApp.assessmentDashboard.tutorLeaderboard.numberOfAnsweredMoreFeedbackRequests\"></a>\r\n                        <fa-icon [icon]=\"faSort\" />\r\n                    </th>\r\n                }\r\n                <th jhiSortBy=\"averageScore\">\r\n                    <a class=\"th-link\" jhiTranslate=\"artemisApp.assessmentDashboard.tutorLeaderboard.averageScore\"></a>\r\n                    <fa-icon [icon]=\"faSort\" />\r\n                </th>\r\n                <th jhiSortBy=\"averageRating\">\r\n                    <a class=\"th-link\" jhiTranslate=\"artemisApp.assessmentDashboard.tutorLeaderboard.averageRating\"></a>\r\n                    <fa-icon [icon]=\"faSort\" />\r\n                </th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            @for (tutor of tutorsData; track tutor; let i = $index) {\r\n                <tr>\r\n                    <td>{{ i + 1 }}</td>\r\n                    <td>\r\n                        {{ tutor.name }}\r\n                        @if (course?.isAtLeastInstructor && tutor.hasIssuesWithPerformance) {\r\n                            <fa-icon\r\n                                [icon]=\"faExclamationTriangle\"\r\n                                class=\"text-warning\"\r\n                                ngbTooltip=\"{{ 'artemisApp.assessmentDashboard.tutorPerformanceIssues.tutor' | artemisTranslate: { tutorName: tutor.name } }}\"\r\n                            />\r\n                        }\r\n                    </td>\r\n                    <td>{{ tutor.points }}</td>\r\n                    <td>{{ tutor.numberOfAssessments }}</td>\r\n                    @if (course && !course.isAtLeastInstructor) {\r\n                        <td>{{ tutor.numberOfAcceptedComplaints }}</td>\r\n                        @if (!isExamMode) {\r\n                            <td>{{ tutor.numberOfNotAnsweredMoreFeedbackRequests }}</td>\r\n                        }\r\n                    } @else {\r\n                        @if (isExerciseDashboard && exercise && exercise.id && course && course.id) {\r\n                            <td>\r\n                                <a\r\n                                    [routerLink]=\"['/course-management', course.id, exercise.type + '-exercises', exercise.id, 'complaints']\"\r\n                                    [queryParams]=\"{ tutorId: tutor.userId }\"\r\n                                >\r\n                                    {{ tutor.numberOfAcceptedComplaints }}\r\n                                </a>\r\n                            </td>\r\n                            @if (!isExamMode) {\r\n                                <td>\r\n                                    <a\r\n                                        [routerLink]=\"['/course-management', course.id, exercise.type + '-exercises', exercise.id, 'more-feedback-requests']\"\r\n                                        [queryParams]=\"{ tutorId: tutor.userId }\"\r\n                                    >\r\n                                        {{ tutor.numberOfNotAnsweredMoreFeedbackRequests }}\r\n                                    </a>\r\n                                </td>\r\n                            }\r\n                        }\r\n                        @if (!isExerciseDashboard && course && course.id) {\r\n                            @if (isExamMode) {\r\n                                <td>\r\n                                    <a [routerLink]=\"['/course-management', course.id, 'exams', exam!.id, 'complaints']\" [queryParams]=\"{ tutorId: tutor.userId }\">\r\n                                        {{ tutor.numberOfAcceptedComplaints }}\r\n                                    </a>\r\n                                </td>\r\n                            }\r\n                            @if (!isExamMode) {\r\n                                <td>\r\n                                    <a [routerLink]=\"['/course-management', course.id, 'complaints']\" [queryParams]=\"{ tutorId: tutor.userId }\">\r\n                                        {{ tutor.numberOfAcceptedComplaints }}\r\n                                    </a>\r\n                                </td>\r\n                            }\r\n                            @if (!isExamMode) {\r\n                                <td>\r\n                                    <a [routerLink]=\"['/course-management', course.id, 'more-feedback-requests']\" [queryParams]=\"{ tutorId: tutor.userId }\">\r\n                                        {{ tutor.numberOfNotAnsweredMoreFeedbackRequests }}\r\n                                    </a>\r\n                                </td>\r\n                            }\r\n                        }\r\n                    }\r\n                    <td>{{ tutor.numberOfComplaintResponses }}</td>\r\n                    @if (!isExamMode) {\r\n                        <td>{{ tutor.numberOfAnsweredMoreFeedbackRequests }}</td>\r\n                    }\r\n                    <td>\r\n                        @if (tutor.numberOfAssessments > 0) {\r\n                            <span> {{ tutor.averageScore.toFixed(1) }}% </span>\r\n                        }\r\n                        @if (tutor.numberOfAssessments === 0) {\r\n                            <span> n.a. </span>\r\n                        }\r\n                    </td>\r\n                    <td>\r\n                        @if (tutor.numberOfTutorRatings > 0) {\r\n                            <span> {{ tutor.averageRating.toFixed(1) }} ⭐ ({{ tutor.numberOfTutorRatings }}) </span>\r\n                        }\r\n                        @if (tutor.numberOfTutorRatings === 0) {\r\n                            <span> n.a. </span>\r\n                        }\r\n                    </td>\r\n                </tr>\r\n            }\r\n        </tbody>\r\n    </table>\r\n</div>\r\n"],
  "mappings": "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",
  "names": ["StatsForDashboard", "numberOfStudents", "numberOfSubmissions", "DueDateStat", "totalNumberOfAssessments", "numberOfAutomaticAssistedAssessments", "numberOfComplaints", "numberOfOpenComplaints", "numberOfMoreFeedbackRequests", "numberOfOpenMoreFeedbackRequests", "numberOfAssessmentLocks", "totalNumberOfAssessmentLocks", "complaintsEnabled", "feedbackRequestEnabled", "numberOfAssessmentsOfCorrectionRounds", "numberOfLockedAssessmentByOtherTutorsOfCorrectionRound", "numberOfRatings", "tutorLeaderboardEntries", "from", "object", "stats", "Object", "assign", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275textInterpolate1", "model_r1", "value", "ctx_r1", "numberOfSubmissions", "total", "toFixed", "\u0275\u0275elementStart", "\u0275\u0275template", "AssessmentDashboardInformationComponent_Conditional_6_ng_template_5_Template", "\u0275\u0275templateRefExtractor", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "customColors", "view", "assessments", "legendPosition", "complaintsLink", "\u0275\u0275textInterpolate3", "complaints", "done", "doneToTotalPercentage", "\u0275\u0275pureFunction1", "_c0", "tutorId", "tutor", "AssessmentDashboardInformationComponent_Conditional_14_Conditional_11_Conditional_7_Template", "AssessmentDashboardInformationComponent_Conditional_14_Conditional_11_Conditional_8_Template", "\u0275\u0275conditional", "course", "isAtLeastInstructor", "moreFeedbackRequestsLink", "moreFeedbackRequests", "AssessmentDashboardInformationComponent_Conditional_14_Conditional_12_Conditional_7_Conditional_3_Template", "AssessmentDashboardInformationComponent_Conditional_14_Conditional_12_Conditional_7_Template", "AssessmentDashboardInformationComponent_Conditional_14_Conditional_12_Conditional_8_Template", "ratingsLink", "ratings", "AssessmentDashboardInformationComponent_Conditional_14_Conditional_11_Template", "AssessmentDashboardInformationComponent_Conditional_14_Conditional_12_Template", "AssessmentDashboardInformationComponent_Conditional_14_Conditional_30_Template", "AssessmentDashboardInformationComponent_Conditional_14_Conditional_31_Template", "\u0275\u0275textInterpolate4", "totalNumberOfAssessments", "totalAssessmentPercentage", "numberOfTutorAssessments", "complaintsEnabled", "feedbackRequestEnabled", "assessmentLocks", "assessmentLocksLink", "_c1", "numberOfCorrectionRounds", "numberOfAssessmentsOfCorrectionRounds", "inTime", "AssessmentDashboardInformationComponent_Conditional_15_Conditional_17_Template", "AssessmentDashboardInformationComponent_Conditional_15_Conditional_18_Template", "AssessmentDashboardInformationComponent_Conditional_15_Conditional_38_Template", "AssessmentDashboardInformationEntry", "constructor", "undefined", "toString", "AssessmentDashboardInformationComponent", "translateService", "inject", "TranslateService", "isExamMode", "examId", "completedAssessmentsTitle", "openedAssessmentsTitle", "LegendPosition", "Below", "themeSubscription", "ngOnInit", "setup", "onLangChange", "subscribe", "setupGraph", "name", "GraphColors", "RED", "BLUE", "ngOnChanges", "ngOnDestroy", "unsubscribe", "setupLinks", "examRouteIfNeeded", "id", "concat", "instant", "selectors", "inputs", "features", "\u0275\u0275NgOnChangesFeature", "decls", "vars", "consts", "template", "rf", "ctx", "AssessmentDashboardInformationComponent_Conditional_4_Template", "AssessmentDashboardInformationComponent_Conditional_5_Template", "AssessmentDashboardInformationComponent_Conditional_6_Template", "AssessmentDashboardInformationComponent_Conditional_14_Template", "AssessmentDashboardInformationComponent_Conditional_15_Template", "\u0275\u0275pipeBind1", "TranslateDirective", "PieChartModule", "PieChartComponent", "RouterLink", "ArtemisTranslatePipe", "SidePanelComponent", "styles", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "navigate", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "calculateClasses", "TRAINED", "\u0275\u0275pipeBind1", "faChalkboardTeacher", "percentageLateAssessmentProgressOfCorrectionRound", "\u0275$index_31_r5", "numberOfAssessedSubmissions_r4", "late", "numberOfSubmissions", "\u0275\u0275template", "TutorParticipationGraphComponent_Conditional_14_For_2_Conditional_9_Template", "calculateClassProgressBar", "percentageInTimeAssessmentProgressOfCorrectionRound", "inTime", "\u0275\u0275conditional", "\u0275\u0275repeaterCreate", "TutorParticipationGraphComponent_Conditional_14_For_2_Template", "\u0275\u0275repeaterTrackByIdentity", "\u0275\u0275repeater", "numberOfAssessmentsOfCorrectionRounds", "TutorParticipationGraphComponent", "router", "inject", "Router", "tutorParticipation", "totalNumberOfAssessments", "numberOfComplaints", "numberOfOpenComplaints", "numberOfMoreFeedbackRequests", "numberOfOpenMoreFeedbackRequests", "exercise", "tutorParticipationStatus", "ExerciseType", "NOT_PARTICIPATED", "REVIEWED_INSTRUCTIONS", "COMPLETED", "percentageComplaintsProgress", "routerLink", "shouldShowManualAssessments", "faBook", "ngOnInit", "status", "exerciseId", "get", "courseId", "calculatePercentageAssessmentProgress", "calculatePercentageComplaintsProgress", "type", "PROGRAMMING", "allowComplaintsForAutomaticAssessments", "length", "ngOnChanges", "changes", "currentValue", "index", "numberOfAssessments", "entries", "Math", "floor", "step", "exampleSubmissions", "trainedExampleSubmissions", "reviewedByTutor", "filter", "exampleSubmission", "usedForTutorial", "exercisesToReview", "assessedByTutor", "exercisesToAssess", "calculateComplaintsNumerator", "calculateComplaintsDenominator", "selectors", "inputs", "features", "\u0275\u0275NgOnChangesFeature", "decls", "vars", "consts", "template", "rf", "ctx", "TutorParticipationGraphComponent_Conditional_13_Template", "TutorParticipationGraphComponent_Conditional_14_Template", "NgClass", "NgbTooltip", "FaIconComponent", "ProgressBarComponent", "ArtemisTranslatePipe", "styles", "encapsulation", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275property", "ctx_r1", "faSpinner", "\u0275\u0275elementStart", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "triggerSecondCorrectionButton", "\u0275\u0275template", "SecondCorrectionEnableButtonComponent_Conditional_3_Conditional_6_Template", "\u0275\u0275elementEnd", "faToggleOn", "\u0275\u0275textInterpolate1", "\u0275\u0275pipeBind1", "\u0275\u0275conditional", "togglingSecondCorrectionButton", "_r3", "SecondCorrectionEnableButtonComponent_Conditional_4_Conditional_6_Template", "faToggleOff", "SecondCorrectionEnableButtonComponent", "secondCorrectionEnabled", "ngModelChange", "EventEmitter", "emit", "selectors", "inputs", "outputs", "decls", "vars", "consts", "template", "rf", "ctx", "SecondCorrectionEnableButtonComponent_Conditional_3_Template", "SecondCorrectionEnableButtonComponent_Conditional_4_Template", "FaIconComponent", "ArtemisTranslatePipe", "styles", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "ctx_r0", "faSort", "\u0275\u0275propertyInterpolate", "\u0275\u0275pipeBind2", "\u0275\u0275pureFunction1", "_c0", "tutor_r2", "name", "faExclamationTriangle", "\u0275\u0275textInterpolate", "numberOfNotAnsweredMoreFeedbackRequests", "\u0275\u0275template", "TutorLeaderboardComponent_For_67_Conditional_16_Conditional_4_Template", "numberOfAcceptedComplaints", "\u0275\u0275conditional", "isExamMode", "\u0275\u0275pureFunction3", "_c3", "course", "id", "exercise", "type", "_c2", "userId", "\u0275\u0275textInterpolate1", "TutorLeaderboardComponent_For_67_Conditional_17_Conditional_1_Conditional_7_Template", "_c1", "\u0275\u0275pureFunction2", "_c4", "exam", "_c5", "_c6", "TutorLeaderboardComponent_For_67_Conditional_17_Conditional_2_Conditional_1_Template", "TutorLeaderboardComponent_For_67_Conditional_17_Conditional_2_Conditional_2_Template", "TutorLeaderboardComponent_For_67_Conditional_17_Conditional_2_Conditional_3_Template", "TutorLeaderboardComponent_For_67_Conditional_17_Conditional_1_Template", "TutorLeaderboardComponent_For_67_Conditional_17_Conditional_2_Template", "isExerciseDashboard", "numberOfAnsweredMoreFeedbackRequests", "averageScore", "toFixed", "\u0275\u0275textInterpolate2", "averageRating", "numberOfTutorRatings", "TutorLeaderboardComponent_For_67_Conditional_8_Template", "TutorLeaderboardComponent_For_67_Conditional_16_Template", "TutorLeaderboardComponent_For_67_Conditional_17_Template", "TutorLeaderboardComponent_For_67_Conditional_21_Template", "TutorLeaderboardComponent_For_67_Conditional_24_Template", "TutorLeaderboardComponent_For_67_Conditional_25_Template", "TutorLeaderboardComponent_For_67_Conditional_29_Template", "TutorLeaderboardComponent_For_67_Conditional_30_Template", "\u0275$index_116_r3", "isAtLeastInstructor", "hasIssuesWithPerformance", "points", "numberOfAssessments", "numberOfComplaintResponses", "TutorLeaderboardComponent", "sortService", "inject", "SortService", "tutorsData", "sortPredicate", "reverseOrder", "ngOnInit", "getCourseFromExercise", "sortRows", "sortByProperty", "selectors", "inputs", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275twoWayListener", "$event", "i0", "\u0275\u0275twoWayBindingSet", "\u0275\u0275listener", "TutorLeaderboardComponent_Conditional_39_Template", "TutorLeaderboardComponent_Conditional_47_Template", "\u0275\u0275repeaterCreate", "TutorLeaderboardComponent_For_67_Template", "\u0275\u0275repeaterTrackByIdentity", "\u0275\u0275twoWayProperty", "\u0275\u0275repeater", "SortDirective", "SortByDirective", "TranslateDirective", "FaIconComponent", "NgbTooltip", "RouterLink", "ArtemisTranslatePipe", "encapsulation"]
}
