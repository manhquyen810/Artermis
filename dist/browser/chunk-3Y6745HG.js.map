{"version":3,"sources":["src/main/webapp/app/environments/environment.override.ts","node_modules/@ngx-translate/http-loader/fesm2022/ngx-translate-http-loader.mjs","src/main/webapp/app/core/config/translation.config.ts"],"sourcesContent":["// Don't change this file manually, it will be overwritten by the build process!\nexport const __DEBUG_INFO_ENABLED__ = false;\nexport const __VERSION__ = '8.0.0';\n// The root URL for API calls, ending with a '/' - for example: `\"https://www.jhipster.tech:8081/myservice/\"`.\n// If you use an API server, in `prod` mode, you will need to enable CORS\n// (see the `jhipster.cors` common JHipster property in the `application-*.yml` configurations)\nexport const I18N_HASH = 'ead73c3304560a967aff698db9e4a747';\n","import * as i0 from '@angular/core';\nimport { Injectable, Inject } from '@angular/core';\nimport * as i1 from '@angular/common/http';\nlet TranslateHttpLoader = /*#__PURE__*/(() => {\n  class TranslateHttpLoader {\n    http;\n    prefix;\n    suffix;\n    constructor(http, prefix = \"/assets/i18n/\", suffix = \".json\") {\n      this.http = http;\n      this.prefix = prefix;\n      this.suffix = suffix;\n    }\n    /**\n     * Gets the translations from the server\n     */\n    getTranslation(lang) {\n      return this.http.get(`${this.prefix}${lang}${this.suffix}`);\n    }\n    static ɵfac = function TranslateHttpLoader_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TranslateHttpLoader)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(String), i0.ɵɵinject(String));\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: TranslateHttpLoader,\n      factory: TranslateHttpLoader.ɵfac\n    });\n  }\n  return TranslateHttpLoader;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TranslateHttpLoader };\n","import { HttpClient } from '@angular/common/http';\r\nimport { MissingTranslationHandler, MissingTranslationHandlerParams, TranslateLoader } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { I18N_HASH } from 'app/environments/environment';\r\n\r\nexport const translationNotFoundMessage = 'translation-not-found';\r\n\r\nexport class MissingTranslationHandlerImpl implements MissingTranslationHandler {\r\n    handle(params: MissingTranslationHandlerParams): string {\r\n        const key = params.key;\r\n        return `${translationNotFoundMessage}[${key}]`;\r\n    }\r\n}\r\n\r\nexport function translatePartialLoader(http: HttpClient): TranslateLoader {\r\n    return new TranslateHttpLoader(http, 'i18n/', `.json?_=${I18N_HASH}`);\r\n}\r\n\r\nexport function missingTranslationHandler(): MissingTranslationHandler {\r\n    return new MissingTranslationHandlerImpl();\r\n}\r\n"],"mappings":"yFAEO,IAAMA,EAAc,QAIdC,EAAY,mCCHzB,IAAIC,GAAoC,IAAM,CAC5C,MAAMA,CAAoB,CACxB,KACA,OACA,OACA,YAAYC,EAAMC,EAAS,gBAAiBC,EAAS,QAAS,CAC5D,KAAK,KAAOF,EACZ,KAAK,OAASC,EACd,KAAK,OAASC,CAChB,CAIA,eAAeC,EAAM,CACnB,OAAO,KAAK,KAAK,IAAI,GAAG,KAAK,MAAM,GAAGA,CAAI,GAAG,KAAK,MAAM,EAAE,CAC5D,CACA,OAAO,UAAO,SAAqCC,EAAmB,CACpE,OAAO,IAAKA,GAAqBL,GAAwBM,EAAYC,CAAU,EAAMD,EAAS,MAAM,EAAMA,EAAS,MAAM,CAAC,CAC5H,EACA,OAAO,WAA0BE,EAAmB,CAClD,MAAOR,EACP,QAASA,EAAoB,SAC/B,CAAC,CACH,CACA,OAAOA,CACT,GAAG,ECvBI,IAAMS,EAA6B,wBAE7BC,EAAP,KAAoC,CACtCC,OAAOC,EAAuC,CAC1C,IAAMC,EAAMD,EAAOC,IACnB,MAAO,GAAGJ,CAA0B,IAAII,CAAG,GAC/C,GAGE,SAAUC,EAAuBC,EAAgB,CACnD,OAAO,IAAIC,EAAoBD,EAAM,QAAS,WAAWE,CAAS,EAAE,CACxE,CAEM,SAAUC,GAAyB,CACrC,OAAO,IAAIR,CACf","names":["__VERSION__","I18N_HASH","TranslateHttpLoader","http","prefix","suffix","lang","__ngFactoryType__","ɵɵinject","HttpClient","ɵɵdefineInjectable","translationNotFoundMessage","MissingTranslationHandlerImpl","handle","params","key","translatePartialLoader","http","TranslateHttpLoader","I18N_HASH","missingTranslationHandler"],"x_google_ignoreList":[1]}