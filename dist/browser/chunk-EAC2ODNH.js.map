{
  "version": 3,
  "sources": ["src/main/webapp/app/exercises/programming/git-diff-report/git-diff-line-stat.component.ts", "src/main/webapp/app/exercises/programming/git-diff-report/git-diff-line-stat.component.html", "src/main/webapp/app/exercises/programming/git-diff-report/git-diff-file-panel-title.component.ts", "src/main/webapp/app/exercises/programming/git-diff-report/git-diff-file-panel-title.component.html", "src/main/webapp/app/shared/monaco-editor/monaco-diff-editor.component.ts", "src/main/webapp/app/exercises/programming/git-diff-report/git-diff-file.component.ts", "src/main/webapp/app/exercises/programming/git-diff-report/git-diff-file.component.html", "src/main/webapp/app/exercises/programming/git-diff-report/git-diff-file-panel.component.ts", "src/main/webapp/app/exercises/programming/git-diff-report/git-diff-file-panel.component.html", "src/main/webapp/app/exercises/programming/git-diff-report/git-diff-report.component.ts", "src/main/webapp/app/exercises/programming/git-diff-report/git-diff-report.component.html"],
  "sourcesContent": ["import { ChangeDetectionStrategy, Component, computed, input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'jhi-git-diff-line-stat',\r\n    templateUrl: './git-diff-line-stat.component.html',\r\n    styleUrls: ['./git-diff-line-stat.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class GitDiffLineStatComponent {\r\n    readonly addedLineCount = input<number>(0);\r\n    readonly removedLineCount = input<number>(0);\r\n    readonly squareCounts = computed(() => this.getSquareCounts());\r\n    readonly addedSquareArray = computed(() => Array.from({ length: this.squareCounts().addedSquareCount }));\r\n    readonly removedSquareArray = computed(() => Array.from({ length: this.squareCounts().removedSquareCount }));\r\n\r\n    private getSquareCounts(): { addedSquareCount: number; removedSquareCount: number } {\r\n        const addedLineCount = this.addedLineCount();\r\n        const removedLineCount = this.removedLineCount();\r\n        if (!addedLineCount && !removedLineCount) {\r\n            return { addedSquareCount: 1, removedSquareCount: 1 };\r\n        } else if (addedLineCount === 0) {\r\n            return { addedSquareCount: 0, removedSquareCount: 5 };\r\n        } else if (removedLineCount === 0) {\r\n            return { addedSquareCount: 5, removedSquareCount: 0 };\r\n        } else {\r\n            const totalLineCount = addedLineCount + removedLineCount;\r\n            // Calculates the amount of green rectangles to show between 1 and 4\r\n            // This is the rounded percentage of added lines divided by total lines\r\n            const addedSquareCount = Math.round(Math.max(1, Math.min(4, (addedLineCount / totalLineCount) * 5)));\r\n            return { addedSquareCount, removedSquareCount: 5 - addedSquareCount };\r\n        }\r\n    }\r\n}\r\n", "<span class=\"diff-line-stat\">\r\n    <span class=\"text-success\">+{{ addedLineCount() }}</span>\r\n    <span class=\"text-danger\">-{{ removedLineCount() }}</span>\r\n    <span class=\"diff-block-bar\">\r\n        @for (i of addedSquareArray(); track $index) {\r\n            <span class=\"diff-block bg-success\"></span>\r\n        }\r\n        @for (i of removedSquareArray(); track $index) {\r\n            <span class=\"diff-block bg-danger\"></span>\r\n        }\r\n    </span>\r\n</span>\r\n", "import { NgClass } from '@angular/common';\r\nimport { ChangeDetectionStrategy, Component, computed, input } from '@angular/core';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\n\r\nenum FileStatus {\r\n    CREATED = 'created',\r\n    RENAMED = 'renamed',\r\n    DELETED = 'deleted',\r\n    UNCHANGED = 'unchanged',\r\n}\r\n@Component({\r\n    selector: 'jhi-git-diff-file-panel-title',\r\n    templateUrl: './git-diff-file-panel-title.component.html',\r\n    styleUrls: ['./git-diff-file-panel-title.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    imports: [TranslateDirective, NgClass],\r\n})\r\nexport class GitDiffFilePanelTitleComponent {\r\n    readonly originalFilePath = input<string>();\r\n    readonly modifiedFilePath = input<string>();\r\n\r\n    readonly titleAndFileStatus = computed(() => this.getTitleAndFileStatus());\r\n    readonly title = computed(() => this.titleAndFileStatus().title);\r\n    readonly fileStatus = computed(() => this.titleAndFileStatus().fileStatus);\r\n\r\n    protected readonly FileStatus = FileStatus;\r\n\r\n    private getTitleAndFileStatus(): { title?: string; fileStatus: FileStatus } {\r\n        const originalFilePath = this.originalFilePath();\r\n        const modifiedFilePath = this.modifiedFilePath();\r\n        if (modifiedFilePath && originalFilePath) {\r\n            if (modifiedFilePath !== originalFilePath) {\r\n                return { title: `${originalFilePath} â†’ ${modifiedFilePath}`, fileStatus: FileStatus.RENAMED };\r\n            } else {\r\n                return { title: modifiedFilePath, fileStatus: FileStatus.UNCHANGED };\r\n            }\r\n        } else if (modifiedFilePath) {\r\n            return { title: modifiedFilePath, fileStatus: FileStatus.CREATED };\r\n        } else {\r\n            return { title: originalFilePath, fileStatus: FileStatus.DELETED };\r\n        }\r\n    }\r\n}\r\n", "<div class=\"my-2 ps-1 file-path-with-badge\">\r\n    {{ title() }}\r\n    @if (fileStatus() !== FileStatus.UNCHANGED) {\r\n        <span\r\n            [jhiTranslate]=\"'artemisApp.programmingExercise.diffReport.fileChange.' + fileStatus()\"\r\n            [ngClass]=\"{\r\n                badge: true,\r\n                'bg-success': fileStatus() === FileStatus.CREATED,\r\n                'bg-warning': fileStatus() === FileStatus.RENAMED,\r\n                'bg-danger': fileStatus() === FileStatus.DELETED,\r\n            }\"\r\n        ></span>\r\n    }\r\n</div>\r\n", "import { ChangeDetectionStrategy, Component, ElementRef, OnDestroy, Renderer2, ViewEncapsulation, effect, inject, input, output } from '@angular/core';\r\nimport { Disposable } from 'app/shared/monaco-editor/model/actions/monaco-editor.util';\r\n\r\nimport * as monaco from 'monaco-editor';\r\nimport { MonacoEditorService } from './monaco-editor.service';\r\n\r\nexport type MonacoEditorDiffText = { original: string; modified: string };\r\n@Component({\r\n    selector: 'jhi-monaco-diff-editor',\r\n    template: '',\r\n    styleUrls: ['monaco-diff-editor.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class MonacoDiffEditorComponent implements OnDestroy {\r\n    private _editor: monaco.editor.IStandaloneDiffEditor;\r\n    monacoDiffEditorContainerElement: HTMLElement;\r\n\r\n    allowSplitView = input<boolean>(true);\r\n    onReadyForDisplayChange = output<boolean>();\r\n\r\n    /*\r\n     * Subscriptions and listeners that need to be disposed of when this component is destroyed.\r\n     */\r\n    listeners: Disposable[] = [];\r\n\r\n    /*\r\n     * Injected services and elements.\r\n     */\r\n    private readonly elementRef = inject(ElementRef);\r\n    private readonly renderer = inject(Renderer2);\r\n    private readonly monacoEditorService = inject(MonacoEditorService);\r\n\r\n    constructor() {\r\n        /*\r\n         * The constructor injects the editor along with its container into the empty template of this component.\r\n         * This makes the editor available immediately (not just after ngOnInit), preventing errors when the methods\r\n         * of this component are called.\r\n         */\r\n        this.monacoDiffEditorContainerElement = this.renderer.createElement('div');\r\n        this._editor = this.monacoEditorService.createStandaloneDiffEditor(this.monacoDiffEditorContainerElement);\r\n        this.renderer.appendChild(this.elementRef.nativeElement, this.monacoDiffEditorContainerElement);\r\n        this.renderer.addClass(this.monacoDiffEditorContainerElement, 'diff-editor-container');\r\n        this.setupDiffListener();\r\n        this.setupContentHeightListeners();\r\n\r\n        effect(() => {\r\n            this._editor.updateOptions({\r\n                renderSideBySide: this.allowSplitView(),\r\n            });\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.listeners.forEach((listener) => {\r\n            listener.dispose();\r\n        });\r\n        this._editor.dispose();\r\n    }\r\n\r\n    /**\r\n     * Sets up a listener that responds to changes in the diff. It will signal via {@link onReadyForDisplayChange} that\r\n     * the component is ready to display the diff.\r\n     */\r\n    setupDiffListener(): void {\r\n        const diffListener = this._editor.onDidUpdateDiff(() => {\r\n            this.adjustContainerHeight(this.getMaximumContentHeight());\r\n            this.onReadyForDisplayChange.emit(true);\r\n        });\r\n\r\n        this.listeners.push(diffListener);\r\n    }\r\n\r\n    /**\r\n     * Sets up listeners that adjust the height of the editor to the height of its current content.\r\n     */\r\n    setupContentHeightListeners(): void {\r\n        const editors = [this._editor.getOriginalEditor(), this._editor.getModifiedEditor()];\r\n\r\n        editors.forEach((editor) => {\r\n            // Called e.g. when the content of the editor changes.\r\n            const contentSizeListener = editor.onDidContentSizeChange((e: monaco.editor.IContentSizeChangedEvent) => {\r\n                if (e.contentHeightChanged) {\r\n                    // Using the content height of the larger editor here ensures that neither of the editors break out of the container.\r\n                    this.adjustContainerHeight(this.getMaximumContentHeight());\r\n                }\r\n            });\r\n\r\n            // Called when the user reveals or collapses a hidden region.\r\n            const hiddenAreaListener = editor.onDidChangeHiddenAreas(() => {\r\n                this.adjustContainerHeight(this.getContentHeightOfEditor(editor));\r\n            });\r\n\r\n            this.listeners.push(contentSizeListener, hiddenAreaListener);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Adjusts the height of the editor's container to fit the new content height.\r\n     * @param newContentHeight The new content height of the editor.\r\n     */\r\n    adjustContainerHeight(newContentHeight: number) {\r\n        this.monacoDiffEditorContainerElement.style.height = newContentHeight + 'px';\r\n    }\r\n\r\n    /**\r\n     * Updates the files displayed in this editor. When this happens, {@link onReadyForDisplayChange} will signal that the editor is not\r\n     * ready to display the diff (as it must be computed first). This will later be change by the appropriate listener.\r\n     * @param original The content of the original file, if available.\r\n     * @param originalFileName The name of the original file, if available. The name is used to determine the syntax highlighting of the left editor.\r\n     * @param modified The content of the modified file, if available.\r\n     * @param modifiedFileName The name of the modified file, if available. The name is used to determine the syntax highlighting of the right editor.\r\n     */\r\n    setFileContents(original?: string, originalFileName?: string, modified?: string, modifiedFileName?: string): void {\r\n        this.onReadyForDisplayChange.emit(false);\r\n        const originalModelUri = monaco.Uri.parse(`inmemory://model/original-${this._editor.getId()}/${originalFileName ?? 'left'}`);\r\n        const modifiedFileUri = monaco.Uri.parse(`inmemory://model/modified-${this._editor.getId()}/${modifiedFileName ?? 'right'}`);\r\n        const originalModel = monaco.editor.getModel(originalModelUri) ?? monaco.editor.createModel(original ?? '', undefined, originalModelUri);\r\n        const modifiedModel = monaco.editor.getModel(modifiedFileUri) ?? monaco.editor.createModel(modified ?? '', undefined, modifiedFileUri);\r\n\r\n        originalModel.setValue(original ?? '');\r\n        modifiedModel.setValue(modified ?? '');\r\n\r\n        monaco.editor.setModelLanguage(originalModel, originalModel.getLanguageId());\r\n        monaco.editor.setModelLanguage(modifiedModel, modifiedModel.getLanguageId());\r\n\r\n        const newModel = {\r\n            original: originalModel,\r\n            modified: modifiedModel,\r\n        };\r\n\r\n        this._editor.setModel(newModel);\r\n    }\r\n\r\n    /**\r\n     * Returns the content height of the larger of the two editors in this view.\r\n     */\r\n    getMaximumContentHeight(): number {\r\n        return Math.max(this.getContentHeightOfEditor(this._editor.getOriginalEditor()), this.getContentHeightOfEditor(this._editor.getModifiedEditor()));\r\n    }\r\n\r\n    /**\r\n     * Returns the content height of the provided editor.\r\n     * @param editor The editor whose content height should be retrieved.\r\n     */\r\n    getContentHeightOfEditor(editor: monaco.editor.IStandaloneCodeEditor): number {\r\n        return editor.getContentHeight();\r\n    }\r\n\r\n    /**\r\n     * Returns the text (original and modified) currently stored in the editor.\r\n     */\r\n    getText(): MonacoEditorDiffText {\r\n        const original = this._editor.getOriginalEditor().getValue();\r\n        const modified = this._editor.getModifiedEditor().getValue();\r\n        return { original, modified };\r\n    }\r\n}\r\n", "import { ChangeDetectionStrategy, Component, ViewEncapsulation, computed, effect, input, output, viewChild } from '@angular/core';\r\nimport { ProgrammingExerciseGitDiffEntry } from 'app/entities/programming-exercise-git-diff-entry.model';\r\nimport { MonacoDiffEditorComponent } from 'app/shared/monaco-editor/monaco-diff-editor.component';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\n\r\n@Component({\r\n    selector: 'jhi-git-diff-file',\r\n    templateUrl: './git-diff-file.component.html',\r\n    encapsulation: ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    imports: [MonacoDiffEditorComponent, TranslateDirective],\r\n})\r\nexport class GitDiffFileComponent {\r\n    readonly monacoDiffEditor = viewChild.required(MonacoDiffEditorComponent);\r\n    readonly diffForTemplateAndSolution = input<boolean>(false);\r\n    readonly diffEntries = input.required<ProgrammingExerciseGitDiffEntry[]>();\r\n    readonly originalFileContent = input<string>();\r\n    readonly originalFilePath = input<string>();\r\n    readonly modifiedFileContent = input<string>();\r\n    readonly modifiedFilePath = input<string>();\r\n    readonly allowSplitView = input<boolean>(true);\r\n    readonly onDiffReady = output<boolean>();\r\n    readonly fileUnchanged = computed(() => this.originalFileContent() === this.modifiedFileContent());\r\n\r\n    constructor() {\r\n        effect(() => {\r\n            this.monacoDiffEditor().setFileContents(this.originalFileContent(), this.originalFilePath(), this.modifiedFileContent(), this.modifiedFilePath());\r\n        });\r\n    }\r\n}\r\n", "<div class=\"ph-1\">\r\n    @if (fileUnchanged()) {\r\n        <div class=\"w-100 d-flex justify-content-center\">\r\n            <span class=\"p-2\" jhiTranslate=\"artemisApp.repository.commitHistory.commitDetails.fileUnchanged\"></span>\r\n        </div>\r\n    }\r\n    <!-- The editor is only hidden, not removed, as we still want it to report its readiness. -->\r\n    <jhi-monaco-diff-editor [hidden]=\"fileUnchanged()\" [allowSplitView]=\"allowSplitView()\" (onReadyForDisplayChange)=\"onDiffReady.emit($event)\" />\r\n</div>\r\n", "import { ChangeDetectionStrategy, Component, ViewEncapsulation, computed, input, output } from '@angular/core';\r\nimport { ProgrammingExerciseGitDiffEntry } from 'app/entities/programming-exercise-git-diff-entry.model';\r\nimport { faAngleDown, faAngleUp } from '@fortawesome/free-solid-svg-icons';\r\nimport { GitDiffFilePanelTitleComponent } from 'app/exercises/programming/git-diff-report/git-diff-file-panel-title.component';\r\nimport { GitDiffLineStatComponent } from 'app/exercises/programming/git-diff-report/git-diff-line-stat.component';\r\nimport { GitDiffFileComponent } from 'app/exercises/programming/git-diff-report/git-diff-file.component';\r\n\r\nimport { NgbAccordionModule, NgbCollapse, NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\n\r\n@Component({\r\n    selector: 'jhi-git-diff-file-panel',\r\n    templateUrl: './git-diff-file-panel.component.html',\r\n    styleUrls: ['./git-diff-file-panel.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    imports: [\r\n        GitDiffFilePanelTitleComponent,\r\n        GitDiffLineStatComponent,\r\n        GitDiffFileComponent,\r\n        NgbAccordionModule,\r\n        NgbCollapse,\r\n        ArtemisTranslatePipe,\r\n        FontAwesomeModule,\r\n        NgbTooltipModule,\r\n    ],\r\n})\r\nexport class GitDiffFilePanelComponent {\r\n    protected readonly faAngleUp = faAngleUp;\r\n    protected readonly faAngleDown = faAngleDown;\r\n\r\n    readonly diffEntries = input.required<ProgrammingExerciseGitDiffEntry[]>();\r\n    readonly originalFileContent = input<string>();\r\n    readonly modifiedFileContent = input<string>();\r\n    readonly diffForTemplateAndSolution = input<boolean>(true);\r\n    readonly allowSplitView = input<boolean>(true);\r\n    readonly onDiffReady = output<boolean>();\r\n\r\n    readonly originalFilePath = computed(() =>\r\n        this.diffEntries()\r\n            .map((entry) => entry.previousFilePath)\r\n            .filter((filePath) => filePath)\r\n            .first(),\r\n    );\r\n\r\n    readonly modifiedFilePath = computed(() =>\r\n        this.diffEntries()\r\n            .map((entry) => entry.filePath)\r\n            .filter((filePath) => filePath)\r\n            .first(),\r\n    );\r\n\r\n    readonly addedLineCount = computed(\r\n        () =>\r\n            this.diffEntries()\r\n                .filter((entry) => entry && entry.filePath && entry.startLine && entry.lineCount)\r\n                .flatMap((entry) => {\r\n                    return this.modifiedFileContent()\r\n                        ?.split('\\n')\r\n                        .slice(entry.startLine! - 1, entry.startLine! + entry.lineCount! - 1);\r\n                })\r\n                .filter((line) => line && line.trim().length !== 0).length,\r\n    );\r\n\r\n    readonly removedLineCount = computed(\r\n        () =>\r\n            this.diffEntries()\r\n                .filter((entry) => entry && entry.previousFilePath && entry.previousStartLine && entry.previousLineCount)\r\n                .flatMap((entry) => {\r\n                    return this.originalFileContent()\r\n                        ?.split('\\n')\r\n                        .slice(entry.previousStartLine! - 1, entry.previousStartLine! + entry.previousLineCount! - 1);\r\n                })\r\n                .filter((line) => line && line.trim().length !== 0).length,\r\n    );\r\n}\r\n", "<div ngbAccordion [destroyOnHide]=\"false\" class=\"git-diff-file-panel\">\r\n    <div ngbAccordionItem #fileDiffPanel=\"ngbAccordionItem\" [collapsed]=\"false\">\r\n        <div ngbAccordionHeader class=\"d-flex align-items-center justify-content-between\">\r\n            <jhi-git-diff-file-panel-title [modifiedFilePath]=\"modifiedFilePath()\" [originalFilePath]=\"originalFilePath()\" />\r\n            <div>\r\n                <jhi-git-diff-line-stat\r\n                    [addedLineCount]=\"addedLineCount()\"\r\n                    [removedLineCount]=\"removedLineCount()\"\r\n                    ngbTooltip=\"{{\r\n                        (diffForTemplateAndSolution()\r\n                            ? 'artemisApp.programmingExercise.diffReport.lineStatTooltipFullReport'\r\n                            : 'artemisApp.programmingExercise.diffReport.lineStatTooltipFullReportExamTimeline'\r\n                        ) | artemisTranslate\r\n                    }}\"\r\n                />\r\n                <button ngbAccordionToggle class=\"btn ms-1\">\r\n                    <fa-icon [icon]=\"!fileDiffPanel.collapsed ? faAngleUp : faAngleDown\" />\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div ngbAccordionCollapse>\r\n            <div ngbAccordionBody>\r\n                <jhi-git-diff-file\r\n                    [allowSplitView]=\"allowSplitView()\"\r\n                    [diffForTemplateAndSolution]=\"diffForTemplateAndSolution()\"\r\n                    [diffEntries]=\"diffEntries()\"\r\n                    [originalFileContent]=\"originalFileContent()\"\r\n                    [originalFilePath]=\"originalFilePath()\"\r\n                    [modifiedFileContent]=\"modifiedFileContent()\"\r\n                    [modifiedFilePath]=\"modifiedFilePath()\"\r\n                    (onDiffReady)=\"onDiffReady.emit($event)\"\r\n                />\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n", "import { ChangeDetectionStrategy, Component, computed, effect, input, signal, untracked } from '@angular/core';\r\nimport { ProgrammingExerciseGitDiffReport } from 'app/entities/programming-exercise-git-diff-report.model';\r\nimport { ProgrammingExerciseGitDiffEntry } from 'app/entities/programming-exercise-git-diff-entry.model';\r\nimport { faSpinner, faTableColumns } from '@fortawesome/free-solid-svg-icons';\r\nimport { ButtonComponent, ButtonSize, ButtonType, TooltipPlacement } from 'app/shared/components/button.component';\r\nimport { GitDiffLineStatComponent } from 'app/exercises/programming/git-diff-report/git-diff-line-stat.component';\r\n\r\nimport { GitDiffFilePanelComponent } from 'app/exercises/programming/git-diff-report/git-diff-file-panel.component';\r\nimport { captureException } from '@sentry/angular';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\ninterface DiffInformation {\r\n    path: string;\r\n    entries: ProgrammingExerciseGitDiffEntry[];\r\n    templateFileContent?: string;\r\n    solutionFileContent?: string;\r\n    diffReady: boolean;\r\n}\r\n\r\n@Component({\r\n    selector: 'jhi-git-diff-report',\r\n    templateUrl: './git-diff-report.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    imports: [GitDiffLineStatComponent, GitDiffFilePanelComponent, ArtemisTranslatePipe, TranslateDirective, FontAwesomeModule, NgbTooltipModule, ButtonComponent],\r\n})\r\nexport class GitDiffReportComponent {\r\n    protected readonly faSpinner = faSpinner;\r\n    protected readonly faTableColumns = faTableColumns;\r\n    protected readonly ButtonSize = ButtonSize;\r\n    protected readonly ButtonType = ButtonType;\r\n    protected readonly TooltipPlacement = TooltipPlacement;\r\n\r\n    readonly report = input.required<ProgrammingExerciseGitDiffReport>();\r\n    readonly templateFileContentByPath = input.required<Map<string, string>>();\r\n    readonly solutionFileContentByPath = input.required<Map<string, string>>();\r\n    readonly diffForTemplateAndSolution = input<boolean>(true);\r\n    readonly diffForTemplateAndEmptyRepository = input<boolean>(false);\r\n    readonly isRepositoryView = input<boolean>(false);\r\n\r\n    readonly sortedEntries = computed(() => {\r\n        return (\r\n            this.report().entries?.sort((a, b) => {\r\n                const filePathA = a.filePath ?? a.previousFilePath ?? '';\r\n                const filePathB = b.filePath ?? b.previousFilePath ?? '';\r\n                if (filePathA < filePathB) {\r\n                    return -1;\r\n                }\r\n                if (filePathA > filePathB) {\r\n                    return 1;\r\n                }\r\n                return (a.startLine ?? a.previousStartLine ?? 0) - (b.startLine ?? b.previousStartLine ?? 0);\r\n            }) ?? []\r\n        );\r\n    });\r\n\r\n    readonly addedLineCount = computed(() => {\r\n        return this.sortedEntries()\r\n            .flatMap((entry) => {\r\n                if (entry && entry.filePath && entry.startLine && entry.lineCount) {\r\n                    return this.solutionFileContentByPath()\r\n                        .get(entry.filePath)\r\n                        ?.split('\\n')\r\n                        .slice(entry.startLine - 1, entry.startLine + entry.lineCount - 1);\r\n                }\r\n            })\r\n            .filter((line) => line && line.trim().length !== 0).length;\r\n    });\r\n\r\n    readonly removedLineCount = computed(() => {\r\n        return this.sortedEntries()\r\n            .flatMap((entry) => {\r\n                if (entry && entry.previousFilePath && entry.previousStartLine && entry.previousLineCount) {\r\n                    return this.templateFileContentByPath()\r\n                        .get(entry.previousFilePath!)\r\n                        ?.split('\\n')\r\n                        .slice(entry.previousStartLine - 1, entry.previousStartLine + entry.previousLineCount - 1);\r\n                }\r\n            })\r\n            .filter((line) => line && line.trim().length !== 0).length;\r\n    });\r\n\r\n    readonly filePaths = computed(() => {\r\n        return [...new Set([...this.templateFileContentByPath().keys(), ...this.solutionFileContentByPath().keys()])].sort();\r\n    });\r\n\r\n    readonly renamedFilePaths = computed(() => {\r\n        const renamedFilePaths: { [before: string]: string | undefined } = {};\r\n        this.sortedEntries().forEach((entry) => {\r\n            // Accounts only for files that have existed in the original and the modified version, but under different names\r\n            if (entry.filePath && entry.previousFilePath && entry.filePath !== entry.previousFilePath) {\r\n                renamedFilePaths[entry.filePath] = entry.previousFilePath;\r\n            }\r\n        });\r\n        return renamedFilePaths;\r\n    });\r\n\r\n    readonly entriesByPath = computed(() => {\r\n        const entriesByPath = new Map<string, ProgrammingExerciseGitDiffEntry[]>();\r\n        [...this.templateFileContentByPath().keys()].forEach((filePath) => {\r\n            entriesByPath.set(\r\n                filePath,\r\n                this.sortedEntries().filter((entry) => entry.previousFilePath === filePath && !entry.filePath),\r\n            );\r\n        });\r\n        [...this.solutionFileContentByPath().keys()].forEach((filePath) => {\r\n            entriesByPath.set(\r\n                filePath,\r\n                this.sortedEntries().filter((entry) => entry.filePath === filePath),\r\n            );\r\n        });\r\n        return entriesByPath;\r\n    });\r\n\r\n    readonly leftCommit = computed(() => this.report().leftCommitHash?.substring(0, 10));\r\n    readonly rightCommit = computed(() => this.report().rightCommitHash?.substring(0, 10));\r\n    readonly diffInformationForPaths = signal<DiffInformation[]>([]);\r\n    readonly nothingToDisplay = computed(() => this.diffInformationForPaths().length === 0);\r\n    readonly allDiffsReady = computed(() => Object.values(this.diffInformationForPaths()).every((info) => info.diffReady));\r\n    readonly allowSplitView = signal<boolean>(true);\r\n\r\n    constructor() {\r\n        effect(() => {\r\n            untracked(() => {\r\n                this.diffInformationForPaths.set(\r\n                    this.filePaths()\r\n                        .filter((path) => this.entriesByPath().get(path)?.length)\r\n                        .map((path) => {\r\n                            // entries is not undefined due to the filter above\r\n                            const entries = this.entriesByPath().get(path)!;\r\n                            const templateFileContent = this.templateFileContentByPath().get(this.renamedFilePaths()[path] ?? path);\r\n                            const solutionFileContent = this.solutionFileContentByPath().get(path);\r\n                            return { path, entries, templateFileContent, solutionFileContent, diffReady: false };\r\n                        }),\r\n                );\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Records that the diff editor for a file has changed its \"ready\" state.\r\n     * If all paths have reported that they are ready, {@link allDiffsReady} will be set to true.\r\n     * @param path The path of the file whose diff this event refers to.\r\n     * @param ready Whether the diff is ready to be displayed or not.\r\n     */\r\n    onDiffReady(path: string, ready: boolean) {\r\n        const diffInformation = [...this.diffInformationForPaths()];\r\n        const index = diffInformation.findIndex((info) => info.path === path);\r\n        if (index !== -1) {\r\n            diffInformation[index].diffReady = ready;\r\n            this.diffInformationForPaths.set(diffInformation);\r\n        } else {\r\n            captureException(`Received diff ready event for unknown path: ${path}`);\r\n        }\r\n    }\r\n}\r\n", "<div class=\"row border-bottom\">\r\n    <div class=\"col-6\">\r\n        <h4 class=\"ps-2\">\r\n            @if (isRepositoryView() && leftCommit()) {\r\n                @if (diffForTemplateAndEmptyRepository()) {\r\n                    {{ 'artemisApp.programmingExercise.diffReport.emptyRepository' | artemisTranslate }}\r\n                } @else {\r\n                    {{ 'artemisApp.programmingExercise.diffReport.previousCommit' | artemisTranslate }}\r\n                    <span class=\"text-primary\">\r\n                        {{ leftCommit() }}\r\n                    </span>\r\n                }\r\n            } @else {\r\n                {{\r\n                    (diffForTemplateAndSolution() || !report().participationIdForLeftCommit\r\n                        ? 'artemisApp.programmingExercise.diffReport.template'\r\n                        : 'artemisApp.programmingExercise.diffReport.previousSubmission'\r\n                    ) | artemisTranslate\r\n                }}\r\n            }\r\n        </h4>\r\n    </div>\r\n    <div class=\"col-3\">\r\n        <h4 class=\"ps-2\">\r\n            @if (isRepositoryView() && rightCommit()) {\r\n                @if (diffForTemplateAndEmptyRepository()) {\r\n                    {{ 'artemisApp.programmingExercise.diffReport.template' | artemisTranslate }}\r\n                } @else {\r\n                    {{ 'artemisApp.programmingExercise.diffReport.currentCommit' | artemisTranslate }}\r\n                    <span class=\"text-primary\">\r\n                        {{ rightCommit() }}\r\n                    </span>\r\n                }\r\n            } @else {\r\n                {{\r\n                    (diffForTemplateAndSolution() ? 'artemisApp.programmingExercise.diffReport.solution' : 'artemisApp.programmingExercise.diffReport.currentSubmission')\r\n                        | artemisTranslate\r\n                }}\r\n            }\r\n        </h4>\r\n    </div>\r\n    <div class=\"col-3\">\r\n        <div class=\"d-flex flex-row gap-2 justify-content-end\">\r\n            <jhi-button\r\n                [btnType]=\"ButtonType.PRIMARY\"\r\n                [btnSize]=\"ButtonSize.SMALL\"\r\n                [icon]=\"faTableColumns\"\r\n                tooltip=\"artemisApp.programmingExercise.diffReport.splitView.tooltip\"\r\n                [tooltipPlacement]=\"TooltipPlacement.BOTTOM\"\r\n                [title]=\"'artemisApp.programmingExercise.diffReport.splitView.' + (allowSplitView() ? 'disable' : 'enable')\"\r\n                (onClick)=\"allowSplitView.set(!allowSplitView())\"\r\n            />\r\n            <jhi-git-diff-line-stat\r\n                class=\"mt-1 fw-bold\"\r\n                [addedLineCount]=\"addedLineCount()\"\r\n                [removedLineCount]=\"removedLineCount()\"\r\n                ngbTooltip=\"{{\r\n                    (diffForTemplateAndSolution()\r\n                        ? 'artemisApp.programmingExercise.diffReport.lineStatTooltipFullReport'\r\n                        : 'artemisApp.programmingExercise.diffReport.lineStatTooltipFullReportExamTimeline'\r\n                    ) | artemisTranslate\r\n                }}\"\r\n            />\r\n        </div>\r\n    </div>\r\n</div>\r\n<div [hidden]=\"!allDiffsReady()\">\r\n    @for (diffInformation of diffInformationForPaths(); track diffInformation) {\r\n        <div class=\"mt-2\">\r\n            <jhi-git-diff-file-panel\r\n                [allowSplitView]=\"allowSplitView()\"\r\n                [diffForTemplateAndSolution]=\"diffForTemplateAndSolution()\"\r\n                [diffEntries]=\"diffInformation.entries\"\r\n                [originalFileContent]=\"diffInformation.templateFileContent\"\r\n                [modifiedFileContent]=\"diffInformation.solutionFileContent\"\r\n                (onDiffReady)=\"onDiffReady(diffInformation.path, $event)\"\r\n            />\r\n        </div>\r\n    }\r\n</div>\r\n<div class=\"d-flex w-100 justify-content-center align-items-center fs-4\">\r\n    @if (nothingToDisplay()) {\r\n        <div class=\"text-secondary mt-3\" jhiTranslate=\"artemisApp.repository.commitHistory.commitDetails.empty\"></div>\r\n    } @else if (!allDiffsReady()) {\r\n        <div>\r\n            <fa-icon [icon]=\"faSpinner\" animation=\"spin\" />\r\n        </div>\r\n    }\r\n</div>\r\n"],
  "mappings": "o3BCKYA,EAAA,EAAA;aAAA,EAAAC,EAAA,EAAA,OAAA,CAAA,EACJD,EAAA,EAAA;SAAA,0BAEIA,EAAA,EAAA;aAAA,EAAAC,EAAA,EAAA,OAAA,CAAA,EACJD,EAAA,EAAA;SAAA,GDDR,IAAaE,GAAwB,IAAA,CAA/B,MAAOA,CAAwB,CACxBC,eAAiBC,EAAc,CAAC,EAChCC,iBAAmBD,EAAc,CAAC,EAClCE,aAAeC,EAAS,IAAM,KAAKC,gBAAe,CAAE,EACpDC,iBAAmBF,EAAS,IAAMG,MAAMC,KAAK,CAAEC,OAAQ,KAAKN,aAAY,EAAGO,gBAAgB,CAAE,CAAC,EAC9FC,mBAAqBP,EAAS,IAAMG,MAAMC,KAAK,CAAEC,OAAQ,KAAKN,aAAY,EAAGS,kBAAkB,CAAE,CAAC,EAEnGP,iBAAe,CACnB,IAAML,EAAiB,KAAKA,eAAc,EACpCE,EAAmB,KAAKA,iBAAgB,EAC9C,GAAI,CAACF,GAAkB,CAACE,EACpB,MAAO,CAAEQ,iBAAkB,EAAGE,mBAAoB,CAAC,EAChD,GAAIZ,IAAmB,EAC1B,MAAO,CAAEU,iBAAkB,EAAGE,mBAAoB,CAAC,EAChD,GAAIV,IAAqB,EAC5B,MAAO,CAAEQ,iBAAkB,EAAGE,mBAAoB,CAAC,EAChD,CACH,IAAMC,EAAiBb,EAAiBE,EAGlCQ,EAAmBI,KAAKC,MAAMD,KAAKE,IAAI,EAAGF,KAAKG,IAAI,EAAIjB,EAAiBa,EAAkB,CAAC,CAAC,CAAC,EACnG,MAAO,CAAEH,iBAAAA,EAAkBE,mBAAoB,EAAIF,CAAgB,CACvE,CACJ,4CAvBSX,EAAwB,2BAAxBA,EAAwBmB,UAAA,CAAA,CAAA,wBAAA,CAAA,EAAAC,OAAA,CAAAnB,eAAA,CAAA,EAAA,gBAAA,EAAAE,iBAAA,CAAA,EAAA,kBAAA,CAAA,EAAAkB,MAAA,GAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,gBAAA,EAAA,CAAA,EAAA,cAAA,EAAA,CAAA,EAAA,aAAA,EAAA,CAAA,EAAA,gBAAA,EAAA,CAAA,EAAA,aAAA,YAAA,EAAA,CAAA,EAAA,aAAA,WAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,ICRrCE,EAAA,EAAA,OAAA,CAAA,EACI7B,EAAA,EAAA;KAAA,EAAA6B,EAAA,EAAA,OAAA,CAAA,EAA2B7B,EAAA,CAAA,EAAuB8B,EAAA,EAClD9B,EAAA,EAAA;KAAA,EAAA6B,EAAA,EAAA,OAAA,CAAA,EAA0B7B,EAAA,CAAA,EAAyB8B,EAAA,EACnD9B,EAAA,EAAA;KAAA,EAAA6B,EAAA,EAAA,OAAA,CAAA,EACI7B,EAAA,EAAA;SAAA,EAAA+B,EAAA,GAAAC,GAAA,EAAA,EAAA,KAAA,KAAAC,CAAA,EAGAF,EAAA,GAAAG,GAAA,EAAA,EAAA,KAAA,KAAAD,CAAA,EAGJH,EAAA,EACJ9B,EAAA,GAAA;CAAA,EAAA8B,EAAA,EACA9B,EAAA,GAAA;CAAA,SAX+BmC,EAAA,CAAA,EAAAC,EAAA,IAAAR,EAAAzB,eAAA,EAAA,EAAA,EACDgC,EAAA,CAAA,EAAAC,EAAA,IAAAR,EAAAvB,iBAAA,EAAA,EAAA,EAEtB8B,EAAA,CAAA,EAAAE,EAAAT,EAAAnB,iBAAA,CAAkB,EAGlB0B,EAAA,CAAA,EAAAE,EAAAT,EAAAd,mBAAA,CAAoB,qTDCfZ,CAAwB,GAAA,qGGL7BoC,EAAA,EAAA;SAAA,EAAAC,EAAA,EAAA,OAAA,CAAA,EASJD,EAAA,EAAA;KAAA,kBARQE,EAAA,EAAAC,EAAA,eAAA,wDAAAC,EAAAC,WAAA,CAAA,EAAuF,UAAAC,GAAA,EAAAC,GAAAH,EAAAC,WAAA,IAAAD,EAAAI,WAAAC,QAAAL,EAAAC,WAAA,IAAAD,EAAAI,WAAAE,QAAAN,EAAAC,WAAA,IAAAD,EAAAI,WAAAG,OAAA,CAAA,GDAnG,IAAKH,EAAL,SAAKA,EAAU,CACXA,OAAAA,EAAA,QAAA,UACAA,EAAA,QAAA,UACAA,EAAA,QAAA,UACAA,EAAA,UAAA,YAJCA,CAKL,EALKA,GAAU,CAAA,CAAA,EAaFI,IAA8B,IAAA,CAArC,MAAOA,CAA8B,CAC9BC,iBAAmBC,EAAK,EACxBC,iBAAmBD,EAAK,EAExBE,mBAAqBC,EAAS,IAAM,KAAKC,sBAAqB,CAAE,EAChEC,MAAQF,EAAS,IAAM,KAAKD,mBAAkB,EAAGG,KAAK,EACtDd,WAAaY,EAAS,IAAM,KAAKD,mBAAkB,EAAGX,UAAU,EAEtDG,WAAaA,EAExBU,uBAAqB,CACzB,IAAML,EAAmB,KAAKA,iBAAgB,EACxCE,EAAmB,KAAKA,iBAAgB,EAC9C,OAAIA,GAAoBF,EAChBE,IAAqBF,EACd,CAAEM,MAAO,GAAGN,CAAgB,WAAME,CAAgB,GAAIV,WAAYG,EAAWE,OAAO,EAEpF,CAAES,MAAOJ,EAAkBV,WAAYG,EAAWY,SAAS,EAE/DL,EACA,CAAEI,MAAOJ,EAAkBV,WAAYG,EAAWC,OAAO,EAEzD,CAAEU,MAAON,EAAkBR,WAAYG,EAAWG,OAAO,CAExE,4CAxBSC,EAA8B,2BAA9BA,EAA8BS,UAAA,CAAA,CAAA,+BAAA,CAAA,EAAAC,OAAA,CAAAT,iBAAA,CAAA,EAAA,kBAAA,EAAAE,iBAAA,CAAA,EAAA,kBAAA,CAAA,EAAAQ,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,OAAA,OAAA,sBAAA,EAAA,CAAA,EAAA,eAAA,SAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,ICjB3CE,EAAA,EAAA,MAAA,CAAA,EACI7B,EAAA,CAAA,EACA8B,EAAA,EAAAC,GAAA,EAAA,CAAA,EAWJC,EAAA,EACAhC,EAAA,EAAA;CAAA,SAbIE,EAAA,EAAA+B,EAAA;MAAAL,EAAAT,MAAA,EAAA;KAAA,EACAjB,EAAA,EAAAgC,EAAAN,EAAAvB,WAAA,IAAAuB,EAAApB,WAAAY,UAAA,EAAA,EAAA,kBDaUe,EAAoBC,EAAO,EAAAC,OAAA,CAAA,8KAAA,EAAAC,gBAAA,CAAA,CAAA,SAE5B1B,CAA8B,GAAA,EEH3C,IAAa2B,GAAyB,IAAA,CAAhC,MAAOA,CAAyB,CAC1BC,QACRC,iCAEAC,eAAiBC,EAAe,EAAI,EACpCC,wBAA0BC,EAAM,EAKhCC,UAA0B,CAAA,EAKTC,WAAaC,EAAOC,CAAU,EAC9BC,SAAWF,EAAOG,CAAS,EAC3BC,oBAAsBJ,EAAOK,EAAmB,EAEjEC,aAAA,CAMI,KAAKb,iCAAmC,KAAKS,SAASK,cAAc,KAAK,EACzE,KAAKf,QAAU,KAAKY,oBAAoBI,2BAA2B,KAAKf,gCAAgC,EACxG,KAAKS,SAASO,YAAY,KAAKV,WAAWW,cAAe,KAAKjB,gCAAgC,EAC9F,KAAKS,SAASS,SAAS,KAAKlB,iCAAkC,uBAAuB,EACrF,KAAKmB,kBAAiB,EACtB,KAAKC,4BAA2B,EAEhCC,EAAO,IAAK,CACR,KAAKtB,QAAQuB,cAAc,CACvBC,iBAAkB,KAAKtB,eAAc,EACxC,CACL,CAAC,CACL,CAEAuB,aAAW,CACP,KAAKnB,UAAUoB,QAASC,GAAY,CAChCA,EAASC,QAAO,CACpB,CAAC,EACD,KAAK5B,QAAQ4B,QAAO,CACxB,CAMAR,mBAAiB,CACb,IAAMS,EAAe,KAAK7B,QAAQ8B,gBAAgB,IAAK,CACnD,KAAKC,sBAAsB,KAAKC,wBAAuB,CAAE,EACzD,KAAK5B,wBAAwB6B,KAAK,EAAI,CAC1C,CAAC,EAED,KAAK3B,UAAU4B,KAAKL,CAAY,CACpC,CAKAR,6BAA2B,CACP,CAAC,KAAKrB,QAAQmC,kBAAiB,EAAI,KAAKnC,QAAQoC,kBAAiB,CAAE,EAE3EV,QAASW,GAAU,CAEvB,IAAMC,EAAsBD,EAAOE,uBAAwBC,GAA6C,CAChGA,EAAEC,sBAEF,KAAKV,sBAAsB,KAAKC,wBAAuB,CAAE,CAEjE,CAAC,EAGKU,EAAqBL,EAAOM,uBAAuB,IAAK,CAC1D,KAAKZ,sBAAsB,KAAKa,yBAAyBP,CAAM,CAAC,CACpE,CAAC,EAED,KAAK/B,UAAU4B,KAAKI,EAAqBI,CAAkB,CAC/D,CAAC,CACL,CAMAX,sBAAsBc,EAAwB,CAC1C,KAAK5C,iCAAiC6C,MAAMC,OAASF,EAAmB,IAC5E,CAUAG,gBAAgBC,EAAmBC,EAA2BC,EAAmBC,EAAyB,CACtG,KAAKhD,wBAAwB6B,KAAK,EAAK,EACvC,IAAMoB,EAA0BC,EAAIC,MAAM,6BAA6B,KAAKvD,QAAQwD,MAAK,CAAE,IAAIN,GAAoB,MAAM,EAAE,EACrHO,EAAyBH,EAAIC,MAAM,6BAA6B,KAAKvD,QAAQwD,MAAK,CAAE,IAAIJ,GAAoB,OAAO,EAAE,EACrHM,EAAuBrB,EAAOsB,SAASN,CAAgB,GAAYhB,EAAOuB,YAAYX,GAAY,GAAIY,OAAWR,CAAgB,EACjIS,EAAuBzB,EAAOsB,SAASF,CAAe,GAAYpB,EAAOuB,YAAYT,GAAY,GAAIU,OAAWJ,CAAe,EAErIC,EAAcK,SAASd,GAAY,EAAE,EACrCa,EAAcC,SAASZ,GAAY,EAAE,EAE9Bd,EAAO2B,iBAAiBN,EAAeA,EAAcO,cAAa,CAAE,EACpE5B,EAAO2B,iBAAiBF,EAAeA,EAAcG,cAAa,CAAE,EAE3E,IAAMC,GAAW,CACbjB,SAAUS,EACVP,SAAUW,GAGd,KAAK9D,QAAQmE,SAASD,EAAQ,CAClC,CAKAlC,yBAAuB,CACnB,OAAOoC,KAAKC,IAAI,KAAKzB,yBAAyB,KAAK5C,QAAQmC,kBAAiB,CAAE,EAAG,KAAKS,yBAAyB,KAAK5C,QAAQoC,kBAAiB,CAAE,CAAC,CACpJ,CAMAQ,yBAAyBP,EAA2C,CAChE,OAAOA,EAAOiC,iBAAgB,CAClC,CAKAC,SAAO,CACH,IAAMtB,EAAW,KAAKjD,QAAQmC,kBAAiB,EAAGqC,SAAQ,EACpDrB,EAAW,KAAKnD,QAAQoC,kBAAiB,EAAGoC,SAAQ,EAC1D,MAAO,CAAEvB,SAAAA,EAAUE,SAAAA,CAAQ,CAC/B,4CA9ISpD,EAAyB,2BAAzBA,EAAyB0E,UAAA,CAAA,CAAA,wBAAA,CAAA,EAAAC,OAAA,CAAAxE,eAAA,CAAA,EAAA,gBAAA,CAAA,EAAAyE,QAAA,CAAAvE,wBAAA,yBAAA,EAAAwE,MAAA,EAAAC,KAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAA,EAAAC,OAAA,CAAA;CAAA,EAAAC,cAAA,EAAAC,gBAAA,CAAA,CAAA,SAAzBpF,CAAyB,GAAA,yBEZ9BqF,EAAA,EAAA;SAAA,EAAAC,EAAA,EAAA,MAAA,CAAA,EACID,EAAA,EAAA;aAAA,EAAAE,EAAA,EAAA,OAAA,CAAA,EACJF,EAAA,EAAA;SAAA,EAAAG,EAAA,EACJH,EAAA,EAAA;KAAA,GDOJ,IAAaI,IAAoB,IAAA,CAA3B,MAAOA,CAAoB,CACpBC,iBAAmBC,EAAUC,SAASC,CAAyB,EAC/DC,2BAA6BC,EAAe,EAAK,EACjDC,YAAcD,EAAMH,SAAQ,EAC5BK,oBAAsBF,EAAK,EAC3BG,iBAAmBH,EAAK,EACxBI,oBAAsBJ,EAAK,EAC3BK,iBAAmBL,EAAK,EACxBM,eAAiBN,EAAe,EAAI,EACpCO,YAAcC,EAAM,EACpBC,cAAgBC,EAAS,IAAM,KAAKR,oBAAmB,IAAO,KAAKE,oBAAmB,CAAE,EAEjGO,aAAA,CACIC,EAAO,IAAK,CACR,KAAKjB,iBAAgB,EAAGkB,gBAAgB,KAAKX,oBAAmB,EAAI,KAAKC,iBAAgB,EAAI,KAAKC,oBAAmB,EAAI,KAAKC,iBAAgB,CAAE,CACpJ,CAAC,CACL,4CAhBSX,EAAoB,2BAApBA,EAAoBoB,UAAA,CAAA,CAAA,mBAAA,CAAA,EAAAC,UAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,wBACkBlB,EAAyB,CAAA,qmBCb5EP,EAAA,EAAA,MAAA,CAAA,EACID,EAAA,EAAA;KAAA,EAAA4B,EAAA,EAAAC,GAAA,EAAA,CAAA,EAMA5B,EAAA,EAAA,yBAAA,CAAA,EAAuF6B,EAAA,0BAAA,SAAAC,EAAA,CAAA,OAA2BJ,EAAAV,YAAAe,KAAAD,CAAA,CAAwB,CAAA,EAA1I5B,EAAA,EACJH,EAAA,EAAA;CAAA,EAAAG,EAAA,EACAH,EAAA,EAAA;CAAA,SARIiC,EAAA,CAAA,EAAAC,EAAAP,EAAAR,cAAA,EAAA,EAAA,EAAA,EAMwBc,EAAA,EAAAE,EAAA,SAAAR,EAAAR,cAAA,CAAA,EAA0B,iBAAAQ,EAAAX,eAAA,CAAA,kBDGxCR,EAA2B4B,CAAkB,EAAAC,cAAA,EAAAC,gBAAA,CAAA,CAAA,SAE9ClC,CAAoB,GAAA,EEgBjC,IAAamC,IAAyB,IAAA,CAAhC,MAAOA,CAAyB,CACfC,UAAYA,GACZC,YAAcA,GAExBC,YAAcC,EAAMC,SAAQ,EAC5BC,oBAAsBF,EAAK,EAC3BG,oBAAsBH,EAAK,EAC3BI,2BAA6BJ,EAAe,EAAI,EAChDK,eAAiBL,EAAe,EAAI,EACpCM,YAAcC,EAAM,EAEpBC,iBAAmBC,EAAS,IACjC,KAAKV,YAAW,EACXW,IAAKC,GAAUA,EAAMC,gBAAgB,EACrCC,OAAQC,GAAaA,CAAQ,EAC7BC,MAAK,CAAE,EAGPC,iBAAmBP,EAAS,IACjC,KAAKV,YAAW,EACXW,IAAKC,GAAUA,EAAMG,QAAQ,EAC7BD,OAAQC,GAAaA,CAAQ,EAC7BC,MAAK,CAAE,EAGPE,eAAiBR,EACtB,IACI,KAAKV,YAAW,EACXc,OAAQF,GAAUA,GAASA,EAAMG,UAAYH,EAAMO,WAAaP,EAAMQ,SAAS,EAC/EC,QAAST,GACC,KAAKR,oBAAmB,GACzBkB,MAAM;CAAI,EACXC,MAAMX,EAAMO,UAAa,EAAGP,EAAMO,UAAaP,EAAMQ,UAAa,CAAC,CAC3E,EACAN,OAAQU,GAASA,GAAQA,EAAKC,KAAI,EAAGC,SAAW,CAAC,EAAEA,MAAM,EAG7DC,iBAAmBjB,EACxB,IACI,KAAKV,YAAW,EACXc,OAAQF,GAAUA,GAASA,EAAMC,kBAAoBD,EAAMgB,mBAAqBhB,EAAMiB,iBAAiB,EACvGR,QAAST,GACC,KAAKT,oBAAmB,GACzBmB,MAAM;CAAI,EACXC,MAAMX,EAAMgB,kBAAqB,EAAGhB,EAAMgB,kBAAqBhB,EAAMiB,kBAAqB,CAAC,CACnG,EACAf,OAAQU,GAASA,GAAQA,EAAKC,KAAI,EAAGC,SAAW,CAAC,EAAEA,MAAM,6CA9C7D7B,EAAyB,2BAAzBA,EAAyBiC,UAAA,CAAA,CAAA,yBAAA,CAAA,EAAAC,OAAA,CAAA/B,YAAA,CAAA,EAAA,aAAA,EAAAG,oBAAA,CAAA,EAAA,qBAAA,EAAAC,oBAAA,CAAA,EAAA,qBAAA,EAAAC,2BAAA,CAAA,EAAA,4BAAA,EAAAC,eAAA,CAAA,EAAA,gBAAA,CAAA,EAAA0B,QAAA,CAAAzB,YAAA,aAAA,EAAA0B,MAAA,GAAAC,KAAA,GAAAC,OAAA,CAAA,CAAA,gBAAA,kBAAA,EAAA,CAAA,eAAA,GAAA,EAAA,sBAAA,EAAA,eAAA,EAAA,CAAA,mBAAA,GAAA,EAAA,WAAA,EAAA,CAAA,qBAAA,GAAA,EAAA,SAAA,qBAAA,yBAAA,EAAA,CAAA,EAAA,mBAAA,kBAAA,EAAA,CAAA,EAAA,iBAAA,mBAAA,YAAA,EAAA,CAAA,qBAAA,GAAA,EAAA,MAAA,MAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,uBAAA,EAAA,EAAA,CAAA,mBAAA,EAAA,EAAA,CAAA,EAAA,cAAA,iBAAA,6BAAA,cAAA,sBAAA,mBAAA,sBAAA,kBAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAA,GAAAD,EAAA,EAAA,WC5BtCE,EAAA,EAAA,MAAA,CAAA,EACIC,EAAA,EAAA;KAAA,EAAAD,EAAA,EAAA,MAAA,EAAA,CAAA,EACIC,EAAA,EAAA;SAAA,EAAAD,EAAA,EAAA,MAAA,CAAA,EACIC,EAAA,EAAA;aAAA,EAAAC,EAAA,EAAA,gCAAA,CAAA,EACAD,EAAA,EAAA;aAAA,EAAAD,EAAA,EAAA,KAAA,EACIC,EAAA,GAAA;iBAAA,EAAAC,EAAA,GAAA,yBAAA,CAAA,2BAUAD,EAAA,GAAA;iBAAA,EAAAD,EAAA,GAAA,SAAA,CAAA,EACIC,EAAA,GAAA;qBAAA,EAAAC,EAAA,GAAA,UAAA,CAAA,EACJD,EAAA,GAAA;iBAAA,EAAAE,EAAA,EACJF,EAAA,GAAA;aAAA,EAAAE,EAAA,EACJF,EAAA,GAAA;SAAA,EAAAE,EAAA,EACAF,EAAA,GAAA;SAAA,EAAAD,EAAA,GAAA,MAAA,CAAA,EACIC,EAAA,GAAA;aAAA,EAAAD,EAAA,GAAA,MAAA,CAAA,EACIC,EAAA,GAAA;iBAAA,EAAAD,EAAA,GAAA,oBAAA,EAAA,EAQII,EAAA,cAAA,SAAAC,EAAA,CAAAC,OAAAC,EAAAC,CAAA,EAAAC,EAAeV,EAAA/B,YAAA0C,KAAAL,CAAA,CAAwB,CAAA,CAAA,EAR3CF,EAAA,EAUJF,EAAA,GAAA;aAAA,EAAAE,EAAA,EACJF,EAAA,GAAA;SAAA,EAAAE,EAAA,EACJF,EAAA,GAAA;KAAA,EAAAE,EAAA,EACJF,EAAA,GAAA;CAAA,EAAAE,EAAA,EACAF,EAAA,GAAA;CAAA,sBApCkBU,EAAA,gBAAA,EAAA,EAC0CC,EAAA,CAAA,EAAAD,EAAA,YAAA,EAAA,EAEjBC,EAAA,CAAA,EAAAD,EAAA,mBAAAZ,EAAArB,iBAAA,CAAA,EAAuC,mBAAAqB,EAAA7B,iBAAA,CAAA,EAK9D0C,EAAA,CAAA,EAAAC,EAAA,aAAAC,EAAA,GAAA,GAAAf,EAAAjC,2BAAA,EAAA,sEAAA,iFAAA,CAAA,EAFA6C,EAAA,iBAAAZ,EAAApB,eAAA,CAAA,EAAmC,mBAAAoB,EAAAX,iBAAA,CAAA,EAU1BwB,EAAA,CAAA,EAAAD,EAAA,OAAAI,EAAAC,UAAAjB,EAAAvC,YAAAuC,EAAAxC,SAAA,EAOTqD,EAAA,CAAA,EAAAD,EAAA,iBAAAZ,EAAAhC,eAAA,CAAA,EAAmC,6BAAAgC,EAAAjC,2BAAA,CAAA,EACwB,cAAAiC,EAAAtC,YAAA,CAAA,EAC9B,sBAAAsC,EAAAnC,oBAAA,CAAA,EACgB,mBAAAmC,EAAA7B,iBAAA,CAAA,EACN,sBAAA6B,EAAAlC,oBAAA,CAAA,EACM,mBAAAkC,EAAArB,iBAAA,CAAA,kBDVzDuC,GACAC,EACAC,GACAC,GAAkBC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAElBC,EACAC,EAAiBC,EACjBC,EAAgBC,CAAA,EAAAC,OAAA,CAAA;CAAA,EAAAC,cAAA,EAAAC,gBAAA,CAAA,CAAA,SAGX5E,CAAyB,GAAA,yBGvBlB6E,EAAA,CAAA,gCAAAC,EAAA;sBAAAC,EAAA,EAAA,EAAA,2DAAA,EAAA;iBAAA,4BAEAF,EAAA,CAAA,0BACAG,EAAA,EAAA,OAAA,CAAA,EACIH,EAAA,CAAA,EACJI,EAAA,EACJJ,EAAA,EAAA;iBAAA,mBAJIC,EAAA;sBAAAC,EAAA,EAAA,EAAA,0DAAA,EAAA;qBAAA,EAEIG,EAAA,CAAA,EAAAJ,EAAA;0BAAAK,EAAAC,WAAA,EAAA;qBAAA,6BALRP,EAAA,EAAA;iBAAA,EAAAQ,EAAA,EAAAC,GAAA,EAAA,CAAA,EAA2C,EAAAC,GAAA,EAAA,CAAA,kBAA3CL,EAAA,EAAAM,EAAAL,EAAAM,kCAAA,EAAA,EAAA,CAAA,6BASAZ,EAAA,CAAA,0CAAAC,EAAA;kBAAAC,EAAA,EAAA,EAAAI,EAAAO,2BAAA,GAAA,CAAAP,EAAAQ,OAAA,EAAAC,6BAAA,qDAAA,8DAAA,EAAA;aAAA,0BAaIf,EAAA,CAAA,gCAAAC,EAAA;sBAAAC,EAAA,EAAA,EAAA,oDAAA,EAAA;iBAAA,4BAEAF,EAAA,CAAA,0BACAG,EAAA,EAAA,OAAA,CAAA,EACIH,EAAA,CAAA,EACJI,EAAA,EACJJ,EAAA,EAAA;iBAAA,mBAJIC,EAAA;sBAAAC,EAAA,EAAA,EAAA,yDAAA,EAAA;qBAAA,EAEIG,EAAA,CAAA,EAAAJ,EAAA;0BAAAK,EAAAU,YAAA,EAAA;qBAAA,6BALRhB,EAAA,EAAA;iBAAA,EAAAQ,EAAA,EAAAS,GAAA,EAAA,CAAA,EAA2C,EAAAC,GAAA,EAAA,CAAA,kBAA3Cb,EAAA,EAAAM,EAAAL,EAAAM,kCAAA,EAAA,EAAA,CAAA,6BASAZ,EAAA,CAAA,0CAAAC,EAAA;kBAAAC,EAAA,EAAA,EAAAI,EAAAO,2BAAA,EAAA,qDAAA,6DAAA,EAAA;aAAA,sCAkCRb,EAAA,EAAA;SAAA,EAAAG,EAAA,EAAA,MAAA,EAAA,EACIH,EAAA,EAAA;aAAA,EAAAG,EAAA,EAAA,0BAAA,EAAA,EAMIgB,EAAA,cAAA,SAAAC,EAAA,CAAA,IAAAC,EAAAC,EAAAC,CAAA,EAAAC,UAAAlB,EAAAmB,EAAA,EAAA,OAAAC,EAAepB,EAAAqB,YAAAN,EAAAO,KAAAR,CAAA,CAAyC,CAAA,CAAA,EAN5DhB,EAAA,EAQJJ,EAAA,EAAA;SAAA,EAAAI,EAAA,EACJJ,EAAA,EAAA;KAAA,kCARYK,EAAA,CAAA,EAAAwB,EAAA,iBAAAvB,EAAAwB,eAAA,CAAA,EAAmC,6BAAAxB,EAAAO,2BAAA,CAAA,EACwB,cAAAQ,EAAAU,OAAA,EACpB,sBAAAV,EAAAW,mBAAA,EACoB,sBAAAX,EAAAY,mBAAA,0BASnEjC,EAAA,EAAA;SAAA,EAAAkC,EAAA,EAAA,MAAA,EAAA,EACJlC,EAAA,EAAA;KAAA,6BACIA,EAAA,EAAA;SAAA,EAAAG,EAAA,EAAA,KAAA,EACIH,EAAA,EAAA;aAAA,EAAAkC,EAAA,EAAA,UAAA,EAAA,EACJlC,EAAA,EAAA;SAAA,EAAAI,EAAA,EACJJ,EAAA,EAAA;KAAA,kBAFiBK,EAAA,CAAA,EAAAwB,EAAA,OAAAvB,EAAA6B,SAAA,GDzDrB,IAAaC,IAAsB,IAAA,CAA7B,MAAOA,CAAsB,CACZD,UAAYA,GACZE,eAAiBA,GACjBC,WAAaA,GACbC,WAAaA,GACbC,iBAAmBA,GAE7B1B,OAAS2B,EAAMC,SAAQ,EACvBC,0BAA4BF,EAAMC,SAAQ,EAC1CE,0BAA4BH,EAAMC,SAAQ,EAC1C7B,2BAA6B4B,EAAe,EAAI,EAChD7B,kCAAoC6B,EAAe,EAAK,EACxDI,iBAAmBJ,EAAe,EAAK,EAEvCK,cAAgBC,EAAS,IAE1B,KAAKjC,OAAM,EAAGiB,SAASiB,KAAK,CAACC,EAAGC,IAAK,CACjC,IAAMC,EAAYF,EAAEG,UAAYH,EAAEI,kBAAoB,GAChDC,EAAYJ,EAAEE,UAAYF,EAAEG,kBAAoB,GACtD,OAAIF,EAAYG,EACL,GAEPH,EAAYG,EACL,GAEHL,EAAEM,WAAaN,EAAEO,mBAAqB,IAAMN,EAAEK,WAAaL,EAAEM,mBAAqB,EAC9F,CAAC,GAAK,CAAA,CAEb,EAEQC,eAAiBV,EAAS,IACxB,KAAKD,cAAa,EACpBY,QAASC,GAAS,CACf,GAAIA,GAASA,EAAMP,UAAYO,EAAMJ,WAAaI,EAAMC,UACpD,OAAO,KAAKhB,0BAAyB,EAChCiB,IAAIF,EAAMP,QAAQ,GACjBU,MAAM;CAAI,EACXC,MAAMJ,EAAMJ,UAAY,EAAGI,EAAMJ,UAAYI,EAAMC,UAAY,CAAC,CAE7E,CAAC,EACAI,OAAQC,GAASA,GAAQA,EAAKC,KAAI,EAAGC,SAAW,CAAC,EAAEA,MAC3D,EAEQC,iBAAmBrB,EAAS,IAC1B,KAAKD,cAAa,EACpBY,QAASC,GAAS,CACf,GAAIA,GAASA,EAAMN,kBAAoBM,EAAMH,mBAAqBG,EAAMU,kBACpE,OAAO,KAAK1B,0BAAyB,EAChCkB,IAAIF,EAAMN,gBAAiB,GAC1BS,MAAM;CAAI,EACXC,MAAMJ,EAAMH,kBAAoB,EAAGG,EAAMH,kBAAoBG,EAAMU,kBAAoB,CAAC,CAErG,CAAC,EACAL,OAAQC,GAASA,GAAQA,EAAKC,KAAI,EAAGC,SAAW,CAAC,EAAEA,MAC3D,EAEQG,UAAYvB,EAAS,IACnB,CAAC,GAAG,IAAIwB,IAAI,CAAC,GAAG,KAAK5B,0BAAyB,EAAG6B,KAAI,EAAI,GAAG,KAAK5B,0BAAyB,EAAG4B,KAAI,CAAE,CAAC,CAAC,EAAExB,KAAI,CACrH,EAEQyB,iBAAmB1B,EAAS,IAAK,CACtC,IAAM0B,EAA6D,CAAA,EACnE,YAAK3B,cAAa,EAAG4B,QAASf,GAAS,CAE/BA,EAAMP,UAAYO,EAAMN,kBAAoBM,EAAMP,WAAaO,EAAMN,mBACrEoB,EAAiBd,EAAMP,QAAQ,EAAIO,EAAMN,iBAEjD,CAAC,EACMoB,CACX,CAAC,EAEQE,cAAgB5B,EAAS,IAAK,CACnC,IAAM4B,EAAgB,IAAIC,IAC1B,OAAC,GAAG,KAAKjC,0BAAyB,EAAG6B,KAAI,CAAE,EAAEE,QAAStB,GAAY,CAC9DuB,EAAcE,IACVzB,EACA,KAAKN,cAAa,EAAGkB,OAAQL,GAAUA,EAAMN,mBAAqBD,GAAY,CAACO,EAAMP,QAAQ,CAAC,CAEtG,CAAC,EACD,CAAC,GAAG,KAAKR,0BAAyB,EAAG4B,KAAI,CAAE,EAAEE,QAAStB,GAAY,CAC9DuB,EAAcE,IACVzB,EACA,KAAKN,cAAa,EAAGkB,OAAQL,GAAUA,EAAMP,WAAaA,CAAQ,CAAC,CAE3E,CAAC,EACMuB,CACX,CAAC,EAEQpE,WAAawC,EAAS,IAAM,KAAKjC,OAAM,EAAGgE,gBAAgBC,UAAU,EAAG,EAAE,CAAC,EAC1E/D,YAAc+B,EAAS,IAAM,KAAKjC,OAAM,EAAGkE,iBAAiBD,UAAU,EAAG,EAAE,CAAC,EAC5EE,wBAA0BC,EAA0B,CAAA,CAAE,EACtDC,iBAAmBpC,EAAS,IAAM,KAAKkC,wBAAuB,EAAGd,SAAW,CAAC,EAC7EiB,cAAgBrC,EAAS,IAAMsC,OAAOC,OAAO,KAAKL,wBAAuB,CAAE,EAAEM,MAAOC,GAASA,EAAKC,SAAS,CAAC,EAC5G3D,eAAiBoD,EAAgB,EAAI,EAE9CQ,aAAA,CACIC,EAAO,IAAK,CACRC,GAAU,IAAK,CACX,KAAKX,wBAAwBJ,IACzB,KAAKP,UAAS,EACTN,OAAQpC,GAAS,KAAK+C,cAAa,EAAGd,IAAIjC,CAAI,GAAGuC,MAAM,EACvD0B,IAAKjE,GAAQ,CAEV,IAAMG,EAAU,KAAK4C,cAAa,EAAGd,IAAIjC,CAAI,EACvCI,EAAsB,KAAKW,0BAAyB,EAAGkB,IAAI,KAAKY,iBAAgB,EAAG7C,CAAI,GAAKA,CAAI,EAChGK,EAAsB,KAAKW,0BAAyB,EAAGiB,IAAIjC,CAAI,EACrE,MAAO,CAAEA,KAAAA,EAAMG,QAAAA,EAASC,oBAAAA,EAAqBC,oBAAAA,EAAqBwD,UAAW,EAAK,CACtF,CAAC,CAAC,CAEd,CAAC,CACL,CAAC,CACL,CAQA9D,YAAYC,EAAckE,EAAc,CACpC,IAAMC,EAAkB,CAAC,GAAG,KAAKd,wBAAuB,CAAE,EACpDe,EAAQD,EAAgBE,UAAWT,GAASA,EAAK5D,OAASA,CAAI,EAChEoE,IAAU,IACVD,EAAgBC,CAAK,EAAEP,UAAYK,EACnC,KAAKb,wBAAwBJ,IAAIkB,CAAe,GAEhDG,GAAiB,+CAA+CtE,CAAI,EAAE,CAE9E,4CAhISQ,EAAsB,2BAAtBA,EAAsB+D,UAAA,CAAA,CAAA,qBAAA,CAAA,EAAAC,OAAA,CAAAtF,OAAA,CAAA,EAAA,QAAA,EAAA6B,0BAAA,CAAA,EAAA,2BAAA,EAAAC,0BAAA,CAAA,EAAA,2BAAA,EAAA/B,2BAAA,CAAA,EAAA,4BAAA,EAAAD,kCAAA,CAAA,EAAA,mCAAA,EAAAiC,iBAAA,CAAA,EAAA,kBAAA,CAAA,EAAAwD,MAAA,GAAAC,KAAA,GAAAC,OAAA,CAAA,CAAA,EAAA,MAAA,eAAA,EAAA,CAAA,EAAA,OAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,EAAA,OAAA,EAAA,CAAA,EAAA,SAAA,WAAA,QAAA,qBAAA,EAAA,CAAA,UAAA,8DAAA,EAAA,UAAA,UAAA,UAAA,OAAA,mBAAA,OAAA,EAAA,CAAA,EAAA,OAAA,UAAA,EAAA,iBAAA,mBAAA,YAAA,EAAA,CAAA,EAAA,QAAA,EAAA,CAAA,EAAA,SAAA,QAAA,yBAAA,qBAAA,MAAA,EAAA,CAAA,EAAA,cAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,EAAA,cAAA,iBAAA,6BAAA,cAAA,sBAAA,qBAAA,EAAA,CAAA,eAAA,0DAAA,EAAA,iBAAA,MAAA,EAAA,CAAA,YAAA,OAAA,EAAA,MAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,IC5BnCtG,EAAA,EAAA,MAAA,CAAA,EACIH,EAAA,EAAA;KAAA,EAAAG,EAAA,EAAA,MAAA,CAAA,EACIH,EAAA,EAAA;SAAA,EAAAG,EAAA,EAAA,KAAA,CAAA,EACIH,EAAA,EAAA;aAAA,EAAAQ,EAAA,EAAAmG,GAAA,EAAA,CAAA,EAA0C,EAAAC,GAAA,EAAA,CAAA,EAiB9CxG,EAAA,EACJJ,EAAA,EAAA;KAAA,EAAAI,EAAA,EACAJ,EAAA,EAAA;KAAA,EAAAG,EAAA,GAAA,MAAA,CAAA,EACIH,EAAA,GAAA;SAAA,EAAAG,EAAA,GAAA,KAAA,CAAA,EACIH,EAAA,GAAA;aAAA,EAAAQ,EAAA,GAAAqG,GAAA,EAAA,CAAA,EAA2C,GAAAC,GAAA,EAAA,CAAA,EAe/C1G,EAAA,EACJJ,EAAA,GAAA;KAAA,EAAAI,EAAA,EACAJ,EAAA,GAAA;KAAA,EAAAG,EAAA,GAAA,MAAA,CAAA,EACIH,EAAA,GAAA;SAAA,EAAAG,EAAA,GAAA,MAAA,CAAA,EACIH,EAAA,GAAA;aAAA,EAAAG,EAAA,GAAA,aAAA,CAAA,EAOIgB,EAAA,UAAA,UAAA,CAAA,OAAWuF,EAAA5E,eAAA+C,IAAA,CAAoB6B,EAAA5E,eAAA,CAAgB,CAAC,CAAA,EAPpD1B,EAAA,EASAJ,EAAA,GAAA;aAAA,EAAAkC,EAAA,GAAA,yBAAA,CAAA,2BAWJlC,EAAA,GAAA;SAAA,EAAAI,EAAA,EACJJ,EAAA,GAAA;KAAA,EAAAI,EAAA,EACJJ,EAAA,GAAA;CAAA,EAAAI,EAAA,EACAJ,EAAA,GAAA;CAAA,EAAAG,EAAA,GAAA,MAAA,CAAA,EACIH,EAAA,GAAA;KAAA,EAAA+G,EAAA,GAAAC,GAAA,EAAA,EAAA,KAAA,KAAAC,CAAA,EAYJ7G,EAAA,EACAJ,EAAA,GAAA;CAAA,EAAAG,EAAA,GAAA,MAAA,CAAA,EACIH,EAAA,GAAA;KAAA,EAAAQ,EAAA,GAAA0G,GAAA,EAAA,CAAA,EAA0B,GAAAC,GAAA,EAAA,CAAA,EAO9B/G,EAAA,EACAJ,EAAA,GAAA;CAAA,SAtFYK,EAAA,CAAA,EAAAM,EAAA+F,EAAA7D,iBAAA,GAAA6D,EAAAnG,WAAA,EAAA,EAAA,CAAA,EAqBAF,EAAA,CAAA,EAAAM,EAAA+F,EAAA7D,iBAAA,GAAA6D,EAAA1F,YAAA,EAAA,GAAA,EAAA,EAoBIX,EAAA,CAAA,EAAAwB,EAAA,UAAA6E,EAAAnE,WAAA6E,OAAA,EAA8B,UAAAV,EAAApE,WAAA+E,KAAA,EACF,OAAAX,EAAArE,cAAA,EACL,mBAAAqE,EAAAlE,iBAAA8E,MAAA,EAEqB,QAAA,wDAAAZ,EAAA5E,eAAA,EAAA,UAAA,SAAA,EAQ5CzB,EAAA,CAAA,EAAAkH,EAAA,aAAArH,EAAA,GAAA,GAAAwG,EAAA7F,2BAAA,EAAA,sEAAA,iFAAA,CAAA,EAFAgB,EAAA,iBAAA6E,EAAAjD,eAAA,CAAA,EAAmC,mBAAAiD,EAAAtC,iBAAA,CAAA,EAY9C/D,EAAA,CAAA,EAAAwB,EAAA,SAAA,CAAA6E,EAAAtB,cAAA,CAAA,EACD/E,EAAA,CAAA,EAAAmH,EAAAd,EAAAzB,wBAAA,CAAyB,EAczB5E,EAAA,CAAA,EAAAM,EAAA+F,EAAAvB,iBAAA,EAAA,GAAAuB,EAAAtB,cAAA,EAAA,GAAA,EAAA,kBDvDUqC,EAA0BC,GAA2BC,EAAsBC,EAAoBC,EAAiBC,EAAEC,EAAgBC,EAAEC,EAAe,EAAAC,cAAA,EAAAC,gBAAA,CAAA,CAAA,SAEpJ/F,CAAsB,GAAA",
  "names": ["\u0275\u0275text", "\u0275\u0275element", "GitDiffLineStatComponent", "addedLineCount", "input", "removedLineCount", "squareCounts", "computed", "getSquareCounts", "addedSquareArray", "Array", "from", "length", "addedSquareCount", "removedSquareArray", "removedSquareCount", "totalLineCount", "Math", "round", "max", "min", "selectors", "inputs", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275repeaterCreate", "GitDiffLineStatComponent_For_11_Template", "\u0275\u0275repeaterTrackByIndex", "GitDiffLineStatComponent_For_13_Template", "\u0275\u0275advance", "\u0275\u0275textInterpolate1", "\u0275\u0275repeater", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275property", "ctx_r0", "fileStatus", "\u0275\u0275pureFunction3", "_c0", "FileStatus", "CREATED", "RENAMED", "DELETED", "GitDiffFilePanelTitleComponent", "originalFilePath", "input", "modifiedFilePath", "titleAndFileStatus", "computed", "getTitleAndFileStatus", "title", "UNCHANGED", "selectors", "inputs", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275template", "GitDiffFilePanelTitleComponent_Conditional_2_Template", "\u0275\u0275elementEnd", "\u0275\u0275textInterpolate1", "\u0275\u0275conditional", "TranslateDirective", "NgClass", "styles", "changeDetection", "MonacoDiffEditorComponent", "_editor", "monacoDiffEditorContainerElement", "allowSplitView", "input", "onReadyForDisplayChange", "output", "listeners", "elementRef", "inject", "ElementRef", "renderer", "Renderer2", "monacoEditorService", "MonacoEditorService", "constructor", "createElement", "createStandaloneDiffEditor", "appendChild", "nativeElement", "addClass", "setupDiffListener", "setupContentHeightListeners", "effect", "updateOptions", "renderSideBySide", "ngOnDestroy", "forEach", "listener", "dispose", "diffListener", "onDidUpdateDiff", "adjustContainerHeight", "getMaximumContentHeight", "emit", "push", "getOriginalEditor", "getModifiedEditor", "editor", "contentSizeListener", "onDidContentSizeChange", "e", "contentHeightChanged", "hiddenAreaListener", "onDidChangeHiddenAreas", "getContentHeightOfEditor", "newContentHeight", "style", "height", "setFileContents", "original", "originalFileName", "modified", "modifiedFileName", "originalModelUri", "Uri", "parse", "getId", "modifiedFileUri", "originalModel", "getModel", "createModel", "undefined", "modifiedModel", "setValue", "setModelLanguage", "getLanguageId", "newModel", "setModel", "Math", "max", "getContentHeight", "getText", "getValue", "selectors", "inputs", "outputs", "decls", "vars", "template", "rf", "ctx", "styles", "encapsulation", "changeDetection", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "GitDiffFileComponent", "monacoDiffEditor", "viewChild", "required", "MonacoDiffEditorComponent", "diffForTemplateAndSolution", "input", "diffEntries", "originalFileContent", "originalFilePath", "modifiedFileContent", "modifiedFilePath", "allowSplitView", "onDiffReady", "output", "fileUnchanged", "computed", "constructor", "effect", "setFileContents", "selectors", "viewQuery", "rf", "ctx", "\u0275\u0275template", "GitDiffFileComponent_Conditional_2_Template", "\u0275\u0275listener", "$event", "emit", "\u0275\u0275advance", "\u0275\u0275conditional", "\u0275\u0275property", "TranslateDirective", "encapsulation", "changeDetection", "GitDiffFilePanelComponent", "faAngleUp", "faAngleDown", "diffEntries", "input", "required", "originalFileContent", "modifiedFileContent", "diffForTemplateAndSolution", "allowSplitView", "onDiffReady", "output", "originalFilePath", "computed", "map", "entry", "previousFilePath", "filter", "filePath", "first", "modifiedFilePath", "addedLineCount", "startLine", "lineCount", "flatMap", "split", "slice", "line", "trim", "length", "removedLineCount", "previousStartLine", "previousLineCount", "selectors", "inputs", "outputs", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275listener", "$event", "i0", "\u0275\u0275restoreView", "_r1", "\u0275\u0275resetView", "emit", "\u0275\u0275property", "\u0275\u0275advance", "\u0275\u0275propertyInterpolate", "\u0275\u0275pipeBind1", "fileDiffPanel_r2", "collapsed", "GitDiffFilePanelTitleComponent", "GitDiffLineStatComponent", "GitDiffFileComponent", "NgbAccordionModule", "NgbAccordionDirective", "NgbAccordionItem", "NgbAccordionHeader", "NgbAccordionToggle", "NgbAccordionBody", "NgbAccordionCollapse", "ArtemisTranslatePipe", "FontAwesomeModule", "FaIconComponent", "NgbTooltipModule", "NgbTooltip", "styles", "encapsulation", "changeDetection", "\u0275\u0275text", "\u0275\u0275textInterpolate1", "\u0275\u0275pipeBind1", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275advance", "ctx_r0", "leftCommit", "\u0275\u0275template", "GitDiffReportComponent_Conditional_6_Conditional_1_Template", "GitDiffReportComponent_Conditional_6_Conditional_2_Template", "\u0275\u0275conditional", "diffForTemplateAndEmptyRepository", "diffForTemplateAndSolution", "report", "participationIdForLeftCommit", "rightCommit", "GitDiffReportComponent_Conditional_14_Conditional_1_Template", "GitDiffReportComponent_Conditional_14_Conditional_2_Template", "\u0275\u0275listener", "$event", "diffInformation_r3", "\u0275\u0275restoreView", "_r2", "$implicit", "\u0275\u0275nextContext", "\u0275\u0275resetView", "onDiffReady", "path", "\u0275\u0275property", "allowSplitView", "entries", "templateFileContent", "solutionFileContent", "\u0275\u0275element", "faSpinner", "GitDiffReportComponent", "faTableColumns", "ButtonSize", "ButtonType", "TooltipPlacement", "input", "required", "templateFileContentByPath", "solutionFileContentByPath", "isRepositoryView", "sortedEntries", "computed", "sort", "a", "b", "filePathA", "filePath", "previousFilePath", "filePathB", "startLine", "previousStartLine", "addedLineCount", "flatMap", "entry", "lineCount", "get", "split", "slice", "filter", "line", "trim", "length", "removedLineCount", "previousLineCount", "filePaths", "Set", "keys", "renamedFilePaths", "forEach", "entriesByPath", "Map", "set", "leftCommitHash", "substring", "rightCommitHash", "diffInformationForPaths", "signal", "nothingToDisplay", "allDiffsReady", "Object", "values", "every", "info", "diffReady", "constructor", "effect", "untracked", "map", "ready", "diffInformation", "index", "findIndex", "captureException", "selectors", "inputs", "decls", "vars", "consts", "template", "rf", "ctx", "GitDiffReportComponent_Conditional_6_Template", "GitDiffReportComponent_Conditional_7_Template", "GitDiffReportComponent_Conditional_14_Template", "GitDiffReportComponent_Conditional_15_Template", "\u0275\u0275repeaterCreate", "GitDiffReportComponent_For_33_Template", "\u0275\u0275repeaterTrackByIdentity", "GitDiffReportComponent_Conditional_37_Template", "GitDiffReportComponent_Conditional_38_Template", "PRIMARY", "SMALL", "BOTTOM", "\u0275\u0275propertyInterpolate", "\u0275\u0275repeater", "GitDiffLineStatComponent", "GitDiffFilePanelComponent", "ArtemisTranslatePipe", "TranslateDirective", "FontAwesomeModule", "FaIconComponent", "NgbTooltipModule", "NgbTooltip", "ButtonComponent", "encapsulation", "changeDetection"]
}
