{
  "version": 3,
  "sources": ["src/main/webapp/app/entities/quiz/quiz-exercise.model.ts"],
  "sourcesContent": ["import dayjs from 'dayjs/esm';\r\nimport { Exercise, ExerciseType, resetForImport } from 'app/entities/exercise.model';\r\nimport { QuizPointStatistic } from 'app/entities/quiz/quiz-point-statistic.model';\r\nimport { QuizQuestion } from 'app/entities/quiz/quiz-question.model';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { ExerciseGroup } from 'app/entities/exercise-group.model';\r\nimport { QuizConfiguration } from 'app/entities/quiz/quiz-configuration.model';\r\nimport { QuizParticipation } from 'app/entities/quiz/quiz-participation.model';\r\n\r\nexport enum QuizStatus {\r\n    CLOSED,\r\n    OPEN_FOR_PRACTICE,\r\n    ACTIVE,\r\n    VISIBLE,\r\n    INVISIBLE,\r\n}\r\n\r\nexport enum QuizMode {\r\n    SYNCHRONIZED = 'SYNCHRONIZED',\r\n    BATCHED = 'BATCHED',\r\n    INDIVIDUAL = 'INDIVIDUAL',\r\n}\r\n\r\nexport class QuizBatch {\r\n    id?: number;\r\n    startTime?: dayjs.Dayjs;\r\n    started?: boolean;\r\n    ended?: boolean;\r\n    submissionAllowed?: boolean;\r\n    password?: string;\r\n\r\n    // local helpers\r\n    startTimeError?: boolean;\r\n}\r\n\r\nexport class QuizExercise extends Exercise implements QuizConfiguration, QuizParticipation {\r\n    public visibleToStudents?: boolean; // (computed by server)\r\n    public allowedNumberOfAttempts?: number;\r\n    public remainingNumberOfAttempts?: number;\r\n    public randomizeQuestionOrder?: boolean;\r\n    public isOpenForPractice?: boolean;\r\n    public duration?: number;\r\n    public quizPointStatistic?: QuizPointStatistic;\r\n    public quizQuestions?: QuizQuestion[];\r\n    public status?: QuizStatus;\r\n    public quizMode?: QuizMode = QuizMode.INDIVIDUAL; // default value\r\n    public quizBatches?: QuizBatch[];\r\n\r\n    // helper attributes\r\n    public quizEnded?: boolean;\r\n    public quizStarted?: boolean;\r\n\r\n    public isActiveQuiz?: boolean;\r\n    public isPracticeModeAvailable?: boolean;\r\n    public isEditable?: boolean;\r\n\r\n    constructor(course: Course | undefined, exerciseGroup: ExerciseGroup | undefined) {\r\n        super(ExerciseType.QUIZ);\r\n        this.course = course;\r\n        this.exerciseGroup = exerciseGroup;\r\n        this.randomizeQuestionOrder = true; // default value (set by server)\r\n        this.isOpenForPractice = false; // default value (set by server)\r\n        this.isActiveQuiz = false; // default value (set by client, might need to be computed before evaluated)\r\n        this.isPracticeModeAvailable = true; // default value (set by client, might need to be computed before evaluated)\r\n        this.isEditable = false; // default value (set by client, might need to be computed before evaluated)\r\n    }\r\n}\r\n\r\nexport function resetQuizForImport(exercise: QuizExercise) {\r\n    resetForImport(exercise);\r\n\r\n    exercise.quizBatches = [];\r\n    exercise.isEditable = true;\r\n}\r\n"],
  "mappings": "sDASA,IAAYA,EAAZ,SAAYA,EAAU,CAClBA,OAAAA,EAAAA,EAAA,OAAA,CAAA,EAAA,SACAA,EAAAA,EAAA,kBAAA,CAAA,EAAA,oBACAA,EAAAA,EAAA,OAAA,CAAA,EAAA,SACAA,EAAAA,EAAA,QAAA,CAAA,EAAA,UACAA,EAAAA,EAAA,UAAA,CAAA,EAAA,YALQA,CAMZ,EANYA,GAAU,CAAA,CAAA,EAQVC,EAAZ,SAAYA,EAAQ,CAChBA,OAAAA,EAAA,aAAA,eACAA,EAAA,QAAA,UACAA,EAAA,WAAA,aAHQA,CAIZ,EAJYA,GAAQ,CAAA,CAAA,EAMPC,EAAP,KAAgB,CAClBC,GACAC,UACAC,QACAC,MACAC,kBACAC,SAGAC,gBAGSC,EAAP,cAA4BC,CAAQ,CAC/BC,kBACAC,wBACAC,0BACAC,uBACAC,kBACAC,SACAC,mBACAC,cACAC,OACAC,SAAsBpB,EAASqB,WAC/BC,YAGAC,UACAC,YAEAC,aACAC,wBACAC,WAEPC,YAAYC,EAA4BC,EAAwC,CAC5E,MAAMC,EAAaC,IAAI,EACvB,KAAKH,OAASA,EACd,KAAKC,cAAgBA,EACrB,KAAKhB,uBAAyB,GAC9B,KAAKC,kBAAoB,GACzB,KAAKU,aAAe,GACpB,KAAKC,wBAA0B,GAC/B,KAAKC,WAAa,EACtB,GAGE,SAAUM,EAAmBC,EAAsB,CACrDC,EAAeD,CAAQ,EAEvBA,EAASZ,YAAc,CAAA,EACvBY,EAASP,WAAa,EAC1B",
  "names": ["QuizStatus", "QuizMode", "QuizBatch", "id", "startTime", "started", "ended", "submissionAllowed", "password", "startTimeError", "QuizExercise", "Exercise", "visibleToStudents", "allowedNumberOfAttempts", "remainingNumberOfAttempts", "randomizeQuestionOrder", "isOpenForPractice", "duration", "quizPointStatistic", "quizQuestions", "status", "quizMode", "INDIVIDUAL", "quizBatches", "quizEnded", "quizStarted", "isActiveQuiz", "isPracticeModeAvailable", "isEditable", "constructor", "course", "exerciseGroup", "ExerciseType", "QUIZ", "resetQuizForImport", "exercise", "resetForImport"]
}
