{
  "version": 3,
  "sources": ["src/main/webapp/app/exercises/shared/team/team-participation-table/team-participation-table.component.ts", "src/main/webapp/app/exercises/shared/team/team-participation-table/team-participation-table.component.html", "src/main/webapp/app/exercises/shared/team/team.component.ts", "src/main/webapp/app/exercises/shared/team/team.component.html"],
  "sourcesContent": ["import { Component, Input, OnInit, ViewEncapsulation, inject } from '@angular/core';\r\nimport { Router, RouterLink } from '@angular/router';\r\nimport { Team } from 'app/entities/team.model';\r\nimport { Exercise, ExerciseType } from 'app/entities/exercise.model';\r\nimport dayjs from 'dayjs/esm';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { TeamService } from 'app/exercises/shared/team/team.service';\r\nimport { StudentParticipation } from 'app/entities/participation/student-participation.model';\r\nimport { get } from 'lodash-es';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Submission, SubmissionExerciseType, getLatestSubmissionResult, setLatestSubmissionResult } from 'app/entities/submission.model';\r\nimport { ExerciseService } from 'app/exercises/shared/exercise/exercise.service';\r\nimport { AssessmentType } from 'app/entities/assessment-type.model';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\nimport { onError } from 'app/shared/util/global.utils';\r\nimport { Participation } from 'app/entities/participation/participation.model';\r\nimport { getLinkToSubmissionAssessment } from 'app/utils/navigation.utils';\r\nimport { getExerciseDueDate, hasExerciseDueDatePassed } from 'app/exercises/shared/exercise/exercise.utils';\r\nimport { faFlag, faFolderOpen } from '@fortawesome/free-solid-svg-icons';\r\nimport { AssessmentWarningComponent } from 'app/assessment/assessment-warning/assessment-warning.component';\r\nimport { DataTableComponent } from 'app/shared/data-table/data-table.component';\r\nimport { NgxDatatableModule } from '@siemens/ngx-datatable';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\nconst currentExerciseRowClass = 'datatable-row-current-exercise';\r\n\r\nenum AssessmentAction {\r\n    START = 'start',\r\n    CONTINUE = 'continue',\r\n    OPEN = 'open',\r\n}\r\n\r\nclass ExerciseForTeam extends Exercise {\r\n    team: Team;\r\n    participation?: StudentParticipation;\r\n    submission?: Submission;\r\n    individualDueDate?: dayjs.Dayjs;\r\n}\r\n\r\n@Component({\r\n    selector: 'jhi-team-participation-table',\r\n    templateUrl: './team-participation-table.component.html',\r\n    styleUrls: ['./team-participation-table.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    imports: [\r\n        AssessmentWarningComponent,\r\n        DataTableComponent,\r\n        NgxDatatableModule,\r\n        TranslateDirective,\r\n        FaIconComponent,\r\n        RouterLink,\r\n        NgbTooltip,\r\n        ArtemisDatePipe,\r\n        ArtemisTranslatePipe,\r\n    ],\r\n})\r\nexport class TeamParticipationTableComponent implements OnInit {\r\n    private teamService = inject(TeamService);\r\n    private alertService = inject(AlertService);\r\n    private router = inject(Router);\r\n    private accountService = inject(AccountService);\r\n\r\n    readonly ExerciseType = ExerciseType;\r\n    readonly dayjs = dayjs;\r\n\r\n    @Input() team: Team;\r\n    @Input() course: Course;\r\n    @Input() exercise: Exercise;\r\n    @Input() isAdmin = false;\r\n    @Input() isTeamOwner = false;\r\n\r\n    exercises: ExerciseForTeam[] = [];\r\n    submissions: Submission[] = [];\r\n    isLoading: boolean;\r\n\r\n    // Icons\r\n    faFolderOpen = faFolderOpen;\r\n    faFlag = faFlag;\r\n\r\n    /**\r\n     * Loads all needed data from the server for this component\r\n     */\r\n    ngOnInit(): void {\r\n        this.loadAll();\r\n    }\r\n\r\n    /**\r\n     * Fetches the course with all the team exercises (and participations) in which this team is present\r\n     * For the team owner tutor or instructors, the participations also contains the latest submission (for assessment)\r\n     */\r\n    loadAll() {\r\n        this.isLoading = true;\r\n        this.teamService.findCourseWithExercisesAndParticipationsForTeam(this.course, this.team).subscribe({\r\n            next: (courseResponse) => {\r\n                this.exercises = this.transformExercisesFromServer(courseResponse.body!.exercises || []).map((exercise) => {\r\n                    return {\r\n                        ...exercise,\r\n                        isAtLeastTutor: this.accountService.isAtLeastTutorInCourse(exercise.course),\r\n                        isAtLeastEditor: this.accountService.isAtLeastEditorInCourse(exercise.course),\r\n                        isAtLeastInstructor: this.accountService.isAtLeastInstructorInCourse(exercise.course),\r\n                    };\r\n                });\r\n                this.submissions = this.exercises.filter((exercise) => exercise.submission).map((exercise) => exercise.submission!);\r\n                this.isLoading = false;\r\n            },\r\n            error: (error) => this.onError(error),\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Assigns this team, the participation and latest submission directly onto the exercise for easier access\r\n     * @param exercises Exercises from the server which to transform\r\n     */\r\n    transformExercisesFromServer(exercises: Exercise[]): ExerciseForTeam[] {\r\n        return ExerciseService.convertExercisesDateFromServer(exercises).map((exercise: ExerciseForTeam) => {\r\n            exercise.team = exercise.teams![0];\r\n            const participation = get(exercise, 'studentParticipations[0]', undefined);\r\n            exercise.participation = participation;\r\n            exercise.individualDueDate = getExerciseDueDate(exercise, exercise.participation);\r\n            exercise.submission = get(exercise, 'participation.submissions[0]', undefined); // only exists for instructor and team tutor\r\n            if (exercise.submission) {\r\n                exercise.submission.participation = participation;\r\n\r\n                setLatestSubmissionResult(exercise.submission, get(exercise, 'participation.results[0]', undefined));\r\n                // assign this value so that it can be used later on in the view hierarchy (e.g. when updating a result, i.e. overriding an assessment\r\n                if (exercise.submission.results) {\r\n                    getLatestSubmissionResult(exercise.submission)!.participation = participation;\r\n                }\r\n            }\r\n            return exercise;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Computes the class for a row (used to highlight the exercise to which the current team belongs to)\r\n     *\r\n     * @param exercise Exercise is passed in from the template (instead of doing this.exercise) to trigger the ngx-datatable change detection\r\n     */\r\n    rowClass =\r\n        (exercise: Exercise) =>\r\n        (row: Exercise): string => {\r\n            return exercise.id === row.id ? currentExerciseRowClass : '';\r\n        };\r\n\r\n    /**\r\n     * Uses the router to navigate to the assessment editor for a given/new submission\r\n     * @param exercise Exercise to which the submission belongs\r\n     * @param participation Participation for which the editor should be opened\r\n     * @param submission Either submission or 'new'\r\n     */\r\n    async openAssessmentEditor(exercise: Exercise, participation: Participation, submission: Submission | 'new'): Promise<void> {\r\n        const route = this.getAssessmentLink(exercise, participation, submission);\r\n        await this.router.navigate(route);\r\n    }\r\n\r\n    /**\r\n     * Generates and returns the link that leads to the assessment editor\r\n     * @param exercise Exercise to which the submission belongs\r\n     * @param participation Participation for which the editor should be opened\r\n     * @param submission Either submission or 'new'\r\n     */\r\n    getAssessmentLink(exercise: Exercise, participation: Participation | undefined, submission: Submission | 'new' | undefined): string[] {\r\n        const submissionUrlParameter: number | 'new' = submission === 'new' || submission == undefined ? 'new' : submission.id!;\r\n        return getLinkToSubmissionAssessment(exercise.type!, this.course.id!, exercise.id!, participation?.id, submissionUrlParameter, undefined, undefined);\r\n    }\r\n\r\n    /**\r\n     * Returns the assessment action depending on the state of the result on the submission\r\n     * @param submission Submission which to check\r\n     */\r\n    assessmentAction(submission?: Submission): AssessmentAction {\r\n        if (\r\n            !submission ||\r\n            !getLatestSubmissionResult(submission) ||\r\n            (submission.submissionExerciseType === SubmissionExerciseType.PROGRAMMING && getLatestSubmissionResult(submission)!.assessmentType === AssessmentType.AUTOMATIC)\r\n        ) {\r\n            return AssessmentAction.START;\r\n        } else if (!getLatestSubmissionResult(submission)!.completionDate) {\r\n            return AssessmentAction.CONTINUE;\r\n        }\r\n        return AssessmentAction.OPEN;\r\n    }\r\n\r\n    onActivate() {\r\n        window.scroll(0, 0);\r\n    }\r\n\r\n    /**\r\n     * Returns whether the assessment button should be disabled\r\n     * @param exercise Exercise for which the submission is to be assessed\r\n     * @param submission Submission that is to be assessed\r\n     */\r\n    isAssessmentButtonDisabled(exercise: Exercise, submission?: Submission): boolean {\r\n        // Non-Submitted exercises can not be assessed\r\n        if (!submission || !submission.submitted) {\r\n            return true;\r\n        }\r\n        // Exercises without due date can be assessed\r\n        if (!exercise.dueDate) {\r\n            return false;\r\n        }\r\n        // Programming exercises can only be assessed by anyone / all other exercises can be assessed by tutors\r\n        // if the exercise due date has passed\r\n        if (exercise.type === ExerciseType.PROGRAMMING || !exercise.isAtLeastInstructor) {\r\n            return !hasExerciseDueDatePassed(exercise, submission.participation);\r\n        } else if (exercise.isAtLeastInstructor) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private onError(error: HttpErrorResponse) {\r\n        onError(this.alertService, error);\r\n        this.isLoading = false;\r\n    }\r\n}\r\n", "@if (exercise && exercise.isAtLeastInstructor) {\r\n    <jhi-assessment-warning [exercise]=\"exercise\" [submissions]=\"submissions\" />\r\n}\r\n<jhi-data-table [isLoading]=\"isLoading\" [showPageSizeDropdown]=\"false\" [showSearchField]=\"false\" [allEntities]=\"exercises\">\r\n    <ng-template let-settings=\"settings\" let-controls=\"controls\">\r\n        <ngx-datatable\r\n            class=\"bootstrap\"\r\n            [limit]=\"settings.limit\"\r\n            [sortType]=\"settings.sortType\"\r\n            [columnMode]=\"settings.columnMode\"\r\n            [headerHeight]=\"settings.headerHeight\"\r\n            [footerHeight]=\"0\"\r\n            [rowHeight]=\"settings.rowHeight\"\r\n            [rows]=\"settings.rows\"\r\n            [rowClass]=\"rowClass(exercise)\"\r\n            [scrollbarH]=\"settings.scrollbarH\"\r\n        >\r\n            <ngx-datatable-column prop=\"title\" [minWidth]=\"180\" [width]=\"200\" [maxWidth]=\"240\" [frozenLeft]=\"true\">\r\n                <ng-template ngx-datatable-header-template>\r\n                    <span class=\"datatable-header-cell-wrapper\" (click)=\"controls.onSort('title')\">\r\n                        <span class=\"datatable-header-cell-label bold sortable\" jhiTranslate=\"artemisApp.exercise.exercise\"></span>\r\n                        <fa-icon [icon]=\"controls.iconForSortPropField('title')\" />\r\n                    </span>\r\n                </ng-template>\r\n                <ng-template ngx-datatable-cell-template let-value=\"row\">\r\n                    <a [routerLink]=\"['/courses', course.id, 'exercises', value.id]\">\r\n                        {{ value.title }}\r\n                    </a>\r\n                </ng-template>\r\n            </ngx-datatable-column>\r\n            <ngx-datatable-column prop=\"releaseDate\" [minWidth]=\"160\" [width]=\"160\" [maxWidth]=\"160\" [frozenLeft]=\"true\">\r\n                <ng-template ngx-datatable-header-template>\r\n                    <span class=\"datatable-header-cell-wrapper\" (click)=\"controls.onSort('releaseDate')\">\r\n                        <span class=\"datatable-header-cell-label bold sortable\" jhiTranslate=\"artemisApp.exercise.releaseDate\"></span>\r\n                        <fa-icon [icon]=\"controls.iconForSortPropField('releaseDate')\" />\r\n                    </span>\r\n                </ng-template>\r\n                <ng-template ngx-datatable-cell-template let-value=\"value\" class=\"me-5\">\r\n                    {{ value ? (dayjs(value) | artemisDate: 'short-date') : ('artemisApp.exercise.dateNotSet' | artemisTranslate) }}\r\n                </ng-template>\r\n            </ngx-datatable-column>\r\n            <ngx-datatable-column prop=\"individualDueDate\" [minWidth]=\"160\" [width]=\"160\" [maxWidth]=\"160\" [frozenLeft]=\"true\">\r\n                <ng-template ngx-datatable-header-template>\r\n                    <span class=\"datatable-header-cell-wrapper\" (click)=\"controls.onSort('dueDate')\">\r\n                        <span class=\"datatable-header-cell-label bold sortable\" jhiTranslate=\"artemisApp.exercise.dueDate\"></span>\r\n                        <fa-icon [icon]=\"controls.iconForSortPropField('individualDueDate')\" />\r\n                    </span>\r\n                </ng-template>\r\n                <ng-template ngx-datatable-cell-template let-value=\"value\" class=\"me-5\">\r\n                    {{ value ? (dayjs(value) | artemisDate: 'short-date') : ('artemisApp.exercise.dateNotSet' | artemisTranslate) }}\r\n                </ng-template>\r\n            </ngx-datatable-column>\r\n            <ngx-datatable-column [minWidth]=\"120\" [width]=\"120\" [maxWidth]=\"120\" [frozenLeft]=\"true\">\r\n                <ng-template ngx-datatable-cell-template let-value=\"row\">\r\n                    @if (exercise.id !== value.id) {\r\n                        <a (click)=\"onActivate()\" [routerLink]=\"['/courses', course.id, 'exercises', value.id, 'teams', value.team.id]\" jhiTranslate=\"entity.action.view\"></a>\r\n                    } @else {\r\n                        <span class=\"current-team\" jhiTranslate=\"entity.action.view\"></span>\r\n                    }\r\n                </ng-template>\r\n            </ngx-datatable-column>\r\n            @if (isAdmin) {\r\n                <ngx-datatable-column prop=\"participation\" [minWidth]=\"150\" [width]=\"150\" [maxWidth]=\"150\">\r\n                    <ng-template ngx-datatable-header-template>\r\n                        <span class=\"datatable-header-cell-wrapper\" (click)=\"controls.onSort('id')\">\r\n                            <span class=\"datatable-header-cell-label bold sortable\" jhiTranslate=\"artemisApp.team.detail.participationsTable.columns.participationId.label\"></span>\r\n                            <fa-icon [icon]=\"controls.iconForSortPropField('id')\" />\r\n                        </span>\r\n                    </ng-template>\r\n                    <ng-template ngx-datatable-cell-template let-value=\"row\">\r\n                        @if (value.participation) {\r\n                            @if (exercise.isAtLeastInstructor) {\r\n                                <div>\r\n                                    <a\r\n                                        [routerLink]=\"[\r\n                                            '/course-management',\r\n                                            course.id,\r\n                                            value.type + '-exercises',\r\n                                            value.id,\r\n                                            'participations',\r\n                                            value.participation.id,\r\n                                            'submissions',\r\n                                        ]\"\r\n                                    >\r\n                                        {{ value.participation.id }}\r\n                                    </a>\r\n                                </div>\r\n                            } @else {\r\n                                {{ value.participation.id }}\r\n                            }\r\n                        } @else {\r\n                            <div class=\"text-center\">–</div>\r\n                        }\r\n                    </ng-template>\r\n                </ngx-datatable-column>\r\n            }\r\n            <ngx-datatable-column prop=\"participation.initializationDate\" [minWidth]=\"190\" [width]=\"190\" [maxWidth]=\"190\">\r\n                <ng-template ngx-datatable-header-template>\r\n                    <span class=\"datatable-header-cell-wrapper\" (click)=\"controls.onSort('participation.initializationDate')\">\r\n                        <span class=\"datatable-header-cell-label bold sortable\" jhiTranslate=\"artemisApp.participation.initializationDate\"></span>\r\n                        <fa-icon [icon]=\"controls.iconForSortPropField('participation.initializationDate')\" />\r\n                    </span>\r\n                </ng-template>\r\n                <ng-template ngx-datatable-cell-template let-value=\"row\">\r\n                    @if (value.participation) {\r\n                        {{ value.participation.initializationDate | artemisDate }}\r\n                    } @else {\r\n                        {{ 'artemisApp.participation.initializationNotYetStarted' | artemisTranslate }}\r\n                    }\r\n                </ng-template>\r\n            </ngx-datatable-column>\r\n            @if (isTeamOwner || exercise.isAtLeastInstructor) {\r\n                <ngx-datatable-column [minWidth]=\"200\" [width]=\"200\">\r\n                    <ng-template ngx-datatable-header-template>\r\n                        <span class=\"datatable-header-cell-wrapper\">\r\n                            <span class=\"datatable-header-cell-label bold\" jhiTranslate=\"artemisApp.team.detail.participationsTable.columns.assessment.label\"></span>\r\n                        </span>\r\n                    </ng-template>\r\n                    <ng-template ngx-datatable-cell-template let-value=\"row\">\r\n                        <div class=\"d-flex justify-content-start align-items-center\">\r\n                            <div\r\n                                ngbTooltip=\"{{ 'artemisApp.team.detail.participationsTable.columns.assessment.tooltip' | artemisTranslate }}\"\r\n                                [disableTooltip]=\"!isAssessmentButtonDisabled(value, value.submission)\"\r\n                                placement=\"left auto\"\r\n                            >\r\n                                <a\r\n                                    [class.disabled]=\"isAssessmentButtonDisabled(value, value.submission)\"\r\n                                    [routerLink]=\"getAssessmentLink(value, value.participation, value.submission)\"\r\n                                    class=\"btn btn-warning btn-sm\"\r\n                                    ><fa-icon [icon]=\"faFolderOpen\" [fixedWidth]=\"true\" />\r\n                                    {{ 'artemisApp.exerciseAssessmentDashboard.' + assessmentAction(value.submission) + 'Assessment' | artemisTranslate }}</a\r\n                                >\r\n                            </div>\r\n                            @if (value.submission?.result?.hasComplaint) {\r\n                                <fa-icon\r\n                                    class=\"mx-3\"\r\n                                    [icon]=\"faFlag\"\r\n                                    ngbTooltip=\"{{ 'artemisApp.team.detail.participationsTable.complaintOrMoreFeedbackRequest' | artemisTranslate }}\"\r\n                                />\r\n                            }\r\n                        </div>\r\n                    </ng-template>\r\n                </ngx-datatable-column>\r\n            }\r\n        </ngx-datatable>\r\n    </ng-template>\r\n</jhi-data-table>\r\n", "import { Component, OnInit, ViewEncapsulation, inject } from '@angular/core';\r\nimport { ActivatedRoute, Router, RouterLink } from '@angular/router';\r\nimport { Team } from 'app/entities/team.model';\r\nimport { TeamService } from 'app/exercises/shared/team/team.service';\r\nimport { Exercise } from 'app/entities/exercise.model';\r\nimport { ExerciseService } from 'app/exercises/shared/exercise/exercise.service';\r\nimport { User } from 'app/core/user/user.model';\r\nimport { ButtonSize } from 'app/shared/components/button.component';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TeamUpdateButtonComponent } from './team-update-dialog/team-update-button.component';\r\nimport { TeamDeleteButtonComponent } from './team-update-dialog/team-delete-button.component';\r\nimport { DataTableComponent } from 'app/shared/data-table/data-table.component';\r\nimport { NgxDatatableModule } from '@siemens/ngx-datatable';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { TeamParticipationTableComponent } from './team-participation-table/team-participation-table.component';\r\nimport { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-team',\r\n    templateUrl: './team.component.html',\r\n    styleUrls: ['./team.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    imports: [\r\n        RouterLink,\r\n        TranslateDirective,\r\n        NgbTooltip,\r\n        TeamUpdateButtonComponent,\r\n        TeamDeleteButtonComponent,\r\n        DataTableComponent,\r\n        NgxDatatableModule,\r\n        FaIconComponent,\r\n        TeamParticipationTableComponent,\r\n        ArtemisDatePipe,\r\n        ArtemisTranslatePipe,\r\n    ],\r\n})\r\nexport class TeamComponent implements OnInit {\r\n    private route = inject(ActivatedRoute);\r\n    private alertService = inject(AlertService);\r\n    private exerciseService = inject(ExerciseService);\r\n    private teamService = inject(TeamService);\r\n    private accountService = inject(AccountService);\r\n    private router = inject(Router);\r\n\r\n    ButtonSize = ButtonSize;\r\n\r\n    team: Team;\r\n    exercise: Exercise;\r\n    isLoading: boolean;\r\n    isTransitioning: boolean;\r\n\r\n    currentUser: User;\r\n    isAdmin = false;\r\n    isTeamOwner = false;\r\n\r\n    constructor() {\r\n        this.accountService.identity().then((user: User) => {\r\n            this.currentUser = user;\r\n            this.isAdmin = this.accountService.isAdmin();\r\n            this.setTeamOwnerFlag();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Fetches the exercise and team from the server\r\n     */\r\n    ngOnInit() {\r\n        this.route.params.subscribe({\r\n            next: (params) => {\r\n                this.setLoadingState(true);\r\n                this.exerciseService.find(params['exerciseId']).subscribe({\r\n                    next: (exerciseResponse) => {\r\n                        this.exercise = exerciseResponse.body!;\r\n                        this.teamService.find(this.exercise, params['teamId']).subscribe({\r\n                            next: (teamResponse) => {\r\n                                this.team = teamResponse.body!;\r\n                                this.setTeamOwnerFlag();\r\n                                this.setLoadingState(false);\r\n                            },\r\n                            error: this.onLoadError,\r\n                        });\r\n                    },\r\n                    error: this.onLoadError,\r\n                });\r\n            },\r\n            error: this.onLoadError,\r\n        });\r\n    }\r\n\r\n    private setTeamOwnerFlag() {\r\n        if (this.currentUser && this.team) {\r\n            this.isTeamOwner = this.currentUser.id === this.team.owner?.id;\r\n        }\r\n    }\r\n\r\n    private setLoadingState(loading: boolean) {\r\n        if (this.exercise && this.team && !this.isLoading) {\r\n            this.isTransitioning = loading;\r\n        } else {\r\n            this.isLoading = loading;\r\n        }\r\n    }\r\n\r\n    private onLoadError(error: any) {\r\n        this.alertService.error(error.message);\r\n        this.isLoading = false;\r\n    }\r\n\r\n    /**\r\n     * Called when the team was updated by TeamUpdateButtonComponent\r\n     *\r\n     * @param team Updated team\r\n     */\r\n    onTeamUpdate(team: Team) {\r\n        this.team = team;\r\n    }\r\n\r\n    /**\r\n     * Called when the team was deleted by TeamDeleteButtonComponent\r\n     *\r\n     * Navigates back to the overviews of teams for the exercise.\r\n     */\r\n    onTeamDelete() {\r\n        this.router.navigate(['/course-management', this.exercise.course?.id, 'exercises', this.exercise.id, 'teams']);\r\n    }\r\n}\r\n", "<div>\r\n    @if (exercise && team) {\r\n        <div class=\"d-flex\">\r\n            <div class=\"mb-2\">\r\n                <h2 class=\"d-flex align-items-baseline mb-2\">\r\n                    <span>{{ exercise.title }} - {{ team.name }}</span\r\n                    ><code class=\"ms-2 team-short-name\">{{ team.shortName }}</code>\r\n                </h2>\r\n                <div>\r\n                    <span class=\"d-inline-block\">\r\n                        <span class=\"text-body-secondary font-weight-bolder\">Tutor:</span>\r\n                        @if (isAdmin && team.owner) {\r\n                            <a [routerLink]=\"['/admin', 'user-management', team.owner?.login]\">{{ team.owner?.name }}</a>\r\n                        }\r\n                        @if (!isAdmin && team.owner) {\r\n                            <a [href]=\"'mailto:' + team.owner.email\">{{ team.owner?.name }}</a>\r\n                        }\r\n                        @if (!team.owner) {\r\n                            <span class=\"font-weight-bold\" jhiTranslate=\"artemisApp.team.detail.noOwner\"></span>\r\n                        }\r\n                    </span>\r\n                    <span class=\"d-inline-block ms-2\">\r\n                        <span class=\"text-body-secondary font-weight-bolder\">Created:</span>\r\n                        <span ngbTooltip=\"{{ team.createdDate | artemisDate }}\" tooltipClass=\"date-tooltip\">\r\n                            {{ team.createdDate!.fromNow() }}\r\n                        </span>\r\n                        @if (isAdmin) {\r\n                            <a [routerLink]=\"['/admin', 'user-management', team.createdBy]\">({{ team.createdBy }})</a>\r\n                        }\r\n                    </span>\r\n                    @if (team.lastModifiedDate && team.lastModifiedDate.isAfter(team.createdDate)) {\r\n                        <span class=\"d-inline-block ms-2\">\r\n                            <span class=\"text-body-secondary font-weight-bolder\">Last modified:</span>\r\n                            <span ngbTooltip=\"{{ team.lastModifiedDate | artemisDate }}\" position=\"top\" tooltipClass=\"date-tooltip\">\r\n                                {{ team.lastModifiedDate!.fromNow() }}\r\n                            </span>\r\n                            @if (isAdmin) {\r\n                                <a [routerLink]=\"['/admin', 'user-management', team.lastModifiedBy]\">({{ team.lastModifiedBy }})</a>\r\n                            }\r\n                        </span>\r\n                    }\r\n                </div>\r\n            </div>\r\n            @if (exercise.isAtLeastTutor) {\r\n                <div class=\"d-flex ms-auto\">\r\n                    @if (exercise.isAtLeastInstructor || team.owner?.id === currentUser.id) {\r\n                        <jhi-team-update-button [exercise]=\"exercise\" [team]=\"team\" [buttonSize]=\"ButtonSize.MEDIUM\" (save)=\"onTeamUpdate($event)\" />\r\n                    }\r\n                    @if (exercise.isAtLeastInstructor) {\r\n                        <jhi-team-delete-button class=\"ms-1\" [exercise]=\"exercise\" [team]=\"team\" [buttonSize]=\"ButtonSize.MEDIUM\" (delete)=\"onTeamDelete()\" />\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    }\r\n    <jhi-data-table [isLoading]=\"isLoading\" [isTransitioning]=\"isTransitioning\" [showPageSizeDropdown]=\"false\" [showSearchField]=\"false\" [allEntities]=\"team?.students || []\">\r\n        <ng-template let-settings=\"settings\" let-controls=\"controls\">\r\n            <ngx-datatable\r\n                class=\"bootstrap\"\r\n                [limit]=\"settings.limit\"\r\n                [sortType]=\"settings.sortType\"\r\n                [columnMode]=\"settings.columnMode\"\r\n                [headerHeight]=\"settings.headerHeight\"\r\n                [footerHeight]=\"0\"\r\n                [rowHeight]=\"settings.rowHeight\"\r\n                [rows]=\"settings.rows\"\r\n                [rowClass]=\"settings.rowClass\"\r\n                [scrollbarH]=\"settings.scrollbarH\"\r\n            >\r\n                <ngx-datatable-column prop=\"login\" [minWidth]=\"150\" [width]=\"250\" [maxWidth]=\"250\">\r\n                    <ng-template ngx-datatable-header-template>\r\n                        <span class=\"datatable-header-cell-wrapper\" (click)=\"controls.onSort('login')\">\r\n                            <span class=\"datatable-header-cell-label bold sortable\" jhiTranslate=\"artemisApp.team.detail.students.login\"></span>\r\n                            <fa-icon [icon]=\"controls.iconForSortPropField('login')\" />\r\n                        </span>\r\n                    </ng-template>\r\n                    <ng-template ngx-datatable-cell-template let-value=\"value\">\r\n                        <span>{{ value }}</span>\r\n                    </ng-template>\r\n                </ngx-datatable-column>\r\n                <ngx-datatable-column prop=\"name\" [minWidth]=\"150\" [width]=\"250\" [maxWidth]=\"250\">\r\n                    <ng-template ngx-datatable-header-template>\r\n                        <span class=\"datatable-header-cell-wrapper\" (click)=\"controls.onSort('name')\">\r\n                            <span class=\"datatable-header-cell-label bold sortable\" jhiTranslate=\"artemisApp.team.detail.students.name\"></span>\r\n                            <fa-icon [icon]=\"controls.iconForSortPropField('name')\" />\r\n                        </span>\r\n                    </ng-template>\r\n                    <ng-template ngx-datatable-cell-template let-value=\"value\">\r\n                        <span>{{ value }}</span>\r\n                    </ng-template>\r\n                </ngx-datatable-column>\r\n                <ngx-datatable-column prop=\"email\" [minWidth]=\"150\" [width]=\"250\">\r\n                    <ng-template ngx-datatable-header-template>\r\n                        <span class=\"datatable-header-cell-wrapper\" (click)=\"controls.onSort('email')\">\r\n                            <span class=\"datatable-header-cell-label bold sortable\" jhiTranslate=\"artemisApp.team.detail.students.email\"></span>\r\n                            <fa-icon [icon]=\"controls.iconForSortPropField('email')\" />\r\n                        </span>\r\n                    </ng-template>\r\n                    <ng-template ngx-datatable-cell-template let-value=\"value\">\r\n                        <span>{{ value }}</span>\r\n                    </ng-template>\r\n                </ngx-datatable-column>\r\n            </ngx-datatable>\r\n        </ng-template>\r\n    </jhi-data-table>\r\n    @if (exercise && team) {\r\n        <h4 class=\"mt-4 d-flex align-items-baseline\">\r\n            {{ 'artemisApp.team.detail.participationsTable.title' | artemisTranslate: { courseTitle: exercise.course!.title } }}\r\n            <code class=\"ms-2 team-short-name\">{{ team.shortName }}</code>\r\n        </h4>\r\n        <jhi-team-participation-table [team]=\"team\" [course]=\"exercise.course!\" [exercise]=\"exercise\" [isAdmin]=\"isAdmin\" [isTeamOwner]=\"isTeamOwner\" />\r\n    }\r\n</div>\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275property", "ctx_r0", "exercise", "submissions", "\u0275\u0275elementStart", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r2", "controls_r3", "\u0275\u0275nextContext", "controls", "\u0275\u0275resetView", "onSort", "\u0275\u0275elementEnd", "iconForSortPropField", "\u0275\u0275pureFunction2", "_c0", "course", "id", "value_r4", "\u0275\u0275textInterpolate1", "title", "_r5", "value_r6", "\u0275\u0275pipeBind2", "dayjs", "\u0275\u0275pipeBind1", "_r7", "value_r8", "_r9", "onActivate", "\u0275\u0275pureFunction3", "_c1", "value_r10", "team", "\u0275\u0275template", "TeamParticipationTableComponent_ng_template_3_ng_template_26_Conditional_1_Template", "TeamParticipationTableComponent_ng_template_3_ng_template_26_Conditional_2_Template", "\u0275\u0275conditional", "_r11", "\u0275\u0275pureFunction4", "_c2", "value_r12", "type", "participation", "TeamParticipationTableComponent_ng_template_3_Conditional_29_ng_template_5_Conditional_1_Conditional_1_Template", "TeamParticipationTableComponent_ng_template_3_Conditional_29_ng_template_5_Conditional_1_Conditional_2_Template", "isAtLeastInstructor", "TeamParticipationTableComponent_ng_template_3_Conditional_29_ng_template_5_Conditional_1_Template", "TeamParticipationTableComponent_ng_template_3_Conditional_29_ng_template_5_Conditional_2_Template", "TeamParticipationTableComponent_ng_template_3_Conditional_29_ng_template_3_Template", "TeamParticipationTableComponent_ng_template_3_Conditional_29_ng_template_5_Template", "_r13", "value_r14", "initializationDate", "TeamParticipationTableComponent_ng_template_3_ng_template_34_Conditional_1_Template", "TeamParticipationTableComponent_ng_template_3_ng_template_34_Conditional_2_Template", "\u0275\u0275propertyInterpolate", "faFlag", "TeamParticipationTableComponent_ng_template_3_Conditional_37_ng_template_5_Conditional_12_Template", "isAssessmentButtonDisabled", "value_r15", "submission", "\u0275\u0275classProp", "getAssessmentLink", "faFolderOpen", "assessmentAction", "result", "hasComplaint", "TeamParticipationTableComponent_ng_template_3_Conditional_37_ng_template_3_Template", "TeamParticipationTableComponent_ng_template_3_Conditional_37_ng_template_5_Template", "TeamParticipationTableComponent_ng_template_3_ng_template_5_Template", "TeamParticipationTableComponent_ng_template_3_ng_template_7_Template", "TeamParticipationTableComponent_ng_template_3_ng_template_12_Template", "TeamParticipationTableComponent_ng_template_3_ng_template_14_Template", "TeamParticipationTableComponent_ng_template_3_ng_template_19_Template", "TeamParticipationTableComponent_ng_template_3_ng_template_21_Template", "TeamParticipationTableComponent_ng_template_3_ng_template_26_Template", "TeamParticipationTableComponent_ng_template_3_Conditional_29_Template", "TeamParticipationTableComponent_ng_template_3_ng_template_32_Template", "TeamParticipationTableComponent_ng_template_3_ng_template_34_Template", "TeamParticipationTableComponent_ng_template_3_Conditional_37_Template", "settings_r16", "limit", "sortType", "columnMode", "headerHeight", "rowHeight", "rows", "rowClass", "scrollbarH", "isAdmin", "isTeamOwner", "currentExerciseRowClass", "AssessmentAction", "TeamParticipationTableComponent", "teamService", "inject", "TeamService", "alertService", "AlertService", "router", "Router", "accountService", "AccountService", "ExerciseType", "dayjs", "team", "course", "exercise", "isAdmin", "isTeamOwner", "exercises", "submissions", "isLoading", "faFolderOpen", "faFlag", "ngOnInit", "loadAll", "findCourseWithExercisesAndParticipationsForTeam", "subscribe", "next", "courseResponse", "transformExercisesFromServer", "body", "map", "__spreadProps", "__spreadValues", "isAtLeastTutor", "isAtLeastTutorInCourse", "isAtLeastEditor", "isAtLeastEditorInCourse", "isAtLeastInstructor", "isAtLeastInstructorInCourse", "filter", "submission", "error", "onError", "ExerciseService", "convertExercisesDateFromServer", "teams", "participation", "get", "undefined", "individualDueDate", "getExerciseDueDate", "setLatestSubmissionResult", "results", "getLatestSubmissionResult", "rowClass", "row", "id", "currentExerciseRowClass", "openAssessmentEditor", "__async", "route", "getAssessmentLink", "navigate", "submissionUrlParameter", "getLinkToSubmissionAssessment", "type", "assessmentAction", "submissionExerciseType", "assessmentType", "AssessmentType", "AUTOMATIC", "AssessmentAction", "START", "completionDate", "OPEN", "CONTINUE", "onActivate", "window", "scroll", "isAssessmentButtonDisabled", "submitted", "dueDate", "PROGRAMMING", "hasExerciseDueDatePassed", "selectors", "inputs", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275template", "TeamParticipationTableComponent_Conditional_0_Template", "\u0275\u0275elementStart", "\u0275\u0275text", "TeamParticipationTableComponent_ng_template_3_Template", "\u0275\u0275elementEnd", "\u0275\u0275conditional", "\u0275\u0275advance", "\u0275\u0275property", "AssessmentWarningComponent", "DataTableComponent", "NgxDatatableModule", "DatatableComponent", "DataTableColumnDirective", "DataTableColumnHeaderDirective", "DataTableColumnCellDirective", "TranslateDirective", "FaIconComponent", "RouterLink", "NgbTooltip", "ArtemisDatePipe", "ArtemisTranslatePipe", "styles", "encapsulation", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "\u0275\u0275pureFunction1", "_c1", "ctx_r0", "team", "owner", "login", "\u0275\u0275textInterpolate", "name", "email", "\u0275\u0275sanitizeUrl", "\u0275\u0275element", "createdBy", "\u0275\u0275textInterpolate1", "lastModifiedBy", "\u0275\u0275template", "TeamComponent_Conditional_2_Conditional_35_Conditional_10_Template", "\u0275\u0275propertyInterpolate", "\u0275\u0275pipeBind1", "lastModifiedDate", "fromNow", "\u0275\u0275conditional", "isAdmin", "\u0275\u0275listener", "$event", "\u0275\u0275restoreView", "_r2", "\u0275\u0275nextContext", "\u0275\u0275resetView", "onTeamUpdate", "exercise", "ButtonSize", "MEDIUM", "_r3", "onTeamDelete", "TeamComponent_Conditional_2_Conditional_38_Conditional_3_Template", "TeamComponent_Conditional_2_Conditional_38_Conditional_4_Template", "isAtLeastInstructor", "id", "currentUser", "TeamComponent_Conditional_2_Conditional_20_Template", "TeamComponent_Conditional_2_Conditional_21_Template", "TeamComponent_Conditional_2_Conditional_22_Template", "TeamComponent_Conditional_2_Conditional_33_Template", "TeamComponent_Conditional_2_Conditional_35_Template", "TeamComponent_Conditional_2_Conditional_38_Template", "\u0275\u0275textInterpolate2", "title", "shortName", "createdDate", "isAfter", "isAtLeastTutor", "_r4", "controls_r5", "controls", "onSort", "iconForSortPropField", "value_r6", "_r7", "value_r8", "_r9", "value_r10", "TeamComponent_ng_template_5_ng_template_5_Template", "TeamComponent_ng_template_5_ng_template_7_Template", "TeamComponent_ng_template_5_ng_template_12_Template", "TeamComponent_ng_template_5_ng_template_14_Template", "TeamComponent_ng_template_5_ng_template_19_Template", "TeamComponent_ng_template_5_ng_template_21_Template", "settings_r11", "limit", "sortType", "columnMode", "headerHeight", "rowHeight", "rows", "rowClass", "scrollbarH", "\u0275\u0275pipeBind2", "_c2", "course", "isTeamOwner", "TeamComponent", "route", "inject", "ActivatedRoute", "alertService", "AlertService", "exerciseService", "ExerciseService", "teamService", "TeamService", "accountService", "AccountService", "router", "Router", "isLoading", "isTransitioning", "constructor", "identity", "then", "user", "setTeamOwnerFlag", "ngOnInit", "params", "subscribe", "next", "setLoadingState", "find", "exerciseResponse", "body", "teamResponse", "error", "onLoadError", "loading", "message", "navigate", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "TeamComponent_Conditional_2_Template", "TeamComponent_ng_template_5_Template", "TeamComponent_Conditional_8_Template", "students", "\u0275\u0275pureFunction0", "_c0", "RouterLink", "TranslateDirective", "NgbTooltip", "TeamUpdateButtonComponent", "TeamDeleteButtonComponent", "DataTableComponent", "NgxDatatableModule", "DatatableComponent", "DataTableColumnDirective", "DataTableColumnHeaderDirective", "DataTableColumnCellDirective", "FaIconComponent", "TeamParticipationTableComponent", "ArtemisDatePipe", "ArtemisTranslatePipe", "styles", "encapsulation"]
}
