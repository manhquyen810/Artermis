import{a as _,b as re,c as ge,e as R,h as it,i as Z}from"./chunk-P2M2VQE3.js";import{b as st}from"./chunk-5JBXU6VG.js";import{a as tt}from"./chunk-ZPITQMA6.js";import{d as ye}from"./chunk-AR57MWOI.js";import{c as A}from"./chunk-5MVJAZRV.js";import{a as Ue}from"./chunk-G3JOQOSD.js";import{a as le,b as h}from"./chunk-EELXLOHY.js";import{e as he}from"./chunk-WA5GEAJB.js";import{b as rt}from"./chunk-DRSQQEUE.js";import{C as ke,D as We,E as G,F as je,G as Ge,H as He,I as Ve,K as Xe,L as ze,N as Qe,O as Be,P as qe,Q as Ye,R as Je,S as Ze,T as Ke,U as et,g as fe,h as ve,i as me,j as Re,k as we,l as be,m as _e,n as De,o as Me,p as Le,s as Fe}from"./chunk-7XXWL6ER.js";import{e as pe}from"./chunk-5GXY5RYT.js";import{a as ot}from"./chunk-K3W6YFKH.js";import{b as xe,c as Ae}from"./chunk-JXJXC4DZ.js";import{b as O}from"./chunk-R5BZWVRQ.js";import{p as T}from"./chunk-DID2YGL7.js";import{a as j}from"./chunk-5ZXXURLP.js";import{b as se,f as Ne,h as ie}from"./chunk-M6Z6DKZQ.js";import{b as $e}from"./chunk-3Y6745HG.js";import{c as Oe}from"./chunk-E2KBL4LX.js";import{L as b,O as f}from"./chunk-IOA4DPXY.js";import{Ea as n,F as Ee,L as Ie,P as S,aa as ue,f as ce,g as J,h as g,j as de,oa as W,ra as C,s as x,t as y,ya as u,z as c}from"./chunk-5LC5EQRR.js";import{a as N,b as U}from"./chunk-3E746U5Y.js";var H=function(i){return i[i.PROGRESS=0]="PROGRESS",i[i.COMPLETED=1]="COMPLETED",i[i.ARCHIVED=2]="ARCHIVED",i}(H||{}),V=function(i){return i.PROGRESS="progress",i.COMPLETED="completed",i.ARCHIVED="archived",i}(V||{}),$=function(i){return i[i.POST=0]="POST",i[i.ANSWER=1]="ANSWER",i}($||{}),X=class{id;referencePostId;author;authorRole;creationDate;updatedDate;content;isSaved;savedPostStatus;postingType;reactions;hasForwardedMessages=!1;isConsecutive=!1;conversation;static mapToStatus(d){switch(d){case V.COMPLETED:return H.COMPLETED;case V.ARCHIVED:return H.ARCHIVED;default:return H.PROGRESS}}static statusToMap(d){switch(d){case H.COMPLETED:return V.COMPLETED;case H.ARCHIVED:return V.ARCHIVED;default:return V.PROGRESS}}};var gt=function(i){return i[i.CREATE=0]="CREATE",i[i.UPDATE=1]="UPDATE",i}(gt||{}),K=function(i){return i.PINNED="PINNED",i.ARCHIVED="ARCHIVED",i.NONE="NONE",i}(K||{}),ee=function(i){return i.OVERVIEW="OVERVIEW",i.PAGE_SECTION="PAGE_SECTION",i.PLAGIARISM_CASE_INSTRUCTOR="PLAGIARISM_CASE_INSTRUCTOR",i.PLAGIARISM_CASE_STUDENT="PLAGIARISM_CASE_STUDENT",i}(ee||{});var oe=function(i){return i.ASCENDING="ASCENDING",i.DESCENDING="DESCENDING",i}(oe||{}),Ce=function(i){return i.CREATION_DATE="CREATION_DATE",i.VOTES="VOTES",i}(Ce||{}),v=function(i){return i.CREATE="CREATE",i.UPDATE="UPDATE",i.DELETE="DELETE",i.NEW_MESSAGE="NEW_MESSAGE",i}(v||{}),Ct=function(i){return i.POST="POST",i.LECTURE="LECTURE",i.ATTACHMENT="ATTACHMENT",i.ATTACHMENT_UNITS="ATTACHMENT_UNITS",i.SLIDE="SLIDE",i.PROGRAMMING="programming",i.MODELING="modeling",i.QUIZ="quiz",i.TEXT="text",i.FILE_UPLOAD="file-upload",i.USER="USER",i.CHANNEL="CHANNEL",i.FAQ="FAQ",i.IMAGE="IMAGE",i}(Ct||{}),St=function(i){return i.INSTRUCTOR="INSTRUCTOR",i.TUTOR="TUTOR",i.USER="USER",i}(St||{}),z="/topic/metis/",Ot=he.pattern(/^(.)*\S+(.)*$/),$t=he.pattern(/^(\n|\r|.)*\S+(\n|\r|.)*$/);function D({firstName:i,lastName:d,login:e},t=!0){let s="";return i&&(s+=`${i} `),d&&(s+=`${d} `),e&&t&&(s+=`(${e})`),s.trim()}function Ut(i){let d="artemisApp.conversationsLayout.";switch(i){case R.EXERCISE:return d+"goToExercise";case R.LECTURE:return d+"goToLecture";case R.EXAM:return d+"goToExam";default:return}}var yt={size:"lg",scrollable:!1,backdrop:"static"},Rt={size:"lg",scrollable:!1,backdrop:"static",backdropClass:"second-layer-modal-bg",centered:!0};var M=class extends X{title;answers;tags;plagiarismCase;displayPriority;resolved;forwardedPosts=[];forwardedAnswerPosts=[];constructor(){super(),this.displayPriority=K.NONE}};var Q=class{convertPostingDateFromClient(d){return U(N({},d),{creationDate:le(d.creationDate),updatedDate:le(d.updatedDate)})}convertPostingResponseDateFromServer(d){return d.body&&(d.body.creationDate=h(d.body.creationDate),d.body.updatedDate=h(d.body.updatedDate)),d}};var nt=(()=>{class i extends Q{http=n(f);constructor(){super()}create(e,t){let s=this.convertPostingDateFromClient(t);return this.http.post(`${this.getResourceEndpoint(e,void 0,t)}`,s,{observe:"response"}).pipe(c(this.convertPostingResponseDateFromServer))}getPosts(e,t){let s=new b;return t.postSortCriterion&&(s=s.set("postSortCriterion",t.postSortCriterion.toString())),t.sortingOrder&&(s=s.set("sortingOrder",t.sortingOrder.toString())),t.courseWideChannelIds&&(s=s.set("courseWideChannelIds",t.courseWideChannelIds.toString())),t.plagiarismCaseId&&(s=s.set("plagiarismCaseId",t.plagiarismCaseId.toString())),t.searchText&&(s=s.set("searchText",t.searchText.toString())),t.conversationId&&(s=s.set("conversationId",t.conversationId.toString())),t.filterToUnresolved&&(s=s.set("filterToUnresolved",t.filterToUnresolved)),t.filterToOwn&&(s=s.set("filterToOwn",t.filterToOwn)),t.filterToAnsweredOrReacted&&(s=s.set("filterToAnsweredOrReacted",t.filterToAnsweredOrReacted)),t.pagingEnabled&&(s=s.set("pagingEnabled",t.pagingEnabled),s=s.set("page",t.page),s=s.set("size",t.pageSize)),t.pinnedOnly&&(s=s.set("pinnedOnly",t.pinnedOnly)),this.http.get(`${this.getResourceEndpoint(e,t,void 0)}`,{params:s,observe:"response"}).pipe(c(this.convertPostResponseArrayDatesFromServer))}update(e,t){let s=this.convertPostingDateFromClient(t);return this.http.put(`${this.getResourceEndpoint(e,void 0,t)}/${t.id}`,s,{observe:"response"}).pipe(c(this.convertPostingResponseDateFromServer))}updatePostDisplayPriority(e,t,s){return this.http.put(`api/communication/courses/${e}/messages/${t}/display-priority`,{},{params:{displayPriority:s},observe:"response"}).pipe(c(this.convertPostingResponseDateFromServer))}delete(e,t){return this.http.delete(`${this.getResourceEndpoint(e,void 0,t)}/${t.id}`,{observe:"response"})}getSourcePostsByIds(e,t){let s=new b().set("postIds",t.join(","));return this.http.get(`api/communication/courses/${e}/messages-source-posts`,{params:s,observe:"response"}).pipe(c(r=>r.body))}convertPostResponseArrayDatesFromServer(e){return e.body&&e.body.forEach(t=>{t.creationDate=h(t.creationDate),t.answers?.forEach(s=>{s.creationDate=h(s.creationDate)})}),e}getResourceEndpoint(e,t,s){return s?.conversation||t?.conversationId||t?.courseWideChannelIds?`api/communication/courses/${e}/messages`:`api/plagiarism/courses/${e}/posts`}static \u0275fac=function(t){return new(t||i)};static \u0275prov=u({token:i,factory:i.\u0275fac,providedIn:"root"})}return i})();var at=(()=>{class i extends Q{http=n(f);constructor(){super()}create(e,t){let s=this.convertPostingDateFromClient(t);return this.http.post(`${this.getResourceEndpoint(e,t)}`,s,{observe:"response"}).pipe(c(this.convertPostingResponseDateFromServer))}update(e,t){let s=this.convertPostingDateFromClient(t);return this.http.put(`${this.getResourceEndpoint(e,t)}/${t.id}`,s,{observe:"response"}).pipe(c(this.convertPostingResponseDateFromServer))}delete(e,t){return this.http.delete(`${this.getResourceEndpoint(e,t)}/${t.id}`,{observe:"response"})}getSourceAnswerPostsByIds(e,t){let s=new b().set("answerPostIds",t.join(","));return this.http.get(`api/communication/courses/${e}/answer-messages-source-posts`,{params:s,observe:"response"}).pipe(c(r=>r.body))}getResourceEndpoint(e,t){return t.post?.conversation?`api/communication/courses/${e}/answer-messages`:`api/plagiarism/courses/${e}/answer-posts`}static \u0275fac=function(t){return new(t||i)};static \u0275prov=u({token:i,factory:i.\u0275fac,providedIn:"root"})}return i})();var B=class extends X{resolvesPost;post;forwardedPosts=[];forwardedAnswerPosts=[];constructor(){super(),this.resolvesPost=!1}};var ct=(()=>{class i{http=n(f);resourceUrl="api/communication/courses/";create(e,t){return this.http.post(`${this.resourceUrl}${e}/postings/reactions`,t,{observe:"response"}).pipe(c(this.convertPostingResponseDateFromServer))}delete(e,t){return this.http.delete(`${this.resourceUrl}${e}/postings/reactions/${t.id}`,{observe:"response"})}convertPostingResponseDateFromServer(e){return e.body&&(e.body.creationDate=h(e.body.creationDate)),e}static \u0275fac=function(t){return new(t||i)};static \u0275prov=u({token:i,factory:i.\u0275fac,providedIn:"root"})}return i})();var dt=class extends re{name;constructor(){super(_.GROUP_CHAT)}},ut=class extends ge{members;name;constructor(){super(_.GROUP_CHAT)}};function Se(i){return i.type===_.GROUP_CHAT}function cs(i){if(i)return Se(i)?i:void 0}var ht=class extends re{constructor(){super(_.ONE_TO_ONE)}};function Pe(i){return i.type===_.ONE_TO_ONE}function hs(i){if(i)return Pe(i)?i:void 0}var Te=function(i){return i[i.ALL=0]="ALL",i[i.INSTRUCTOR=1]="INSTRUCTOR",i[i.EDITOR=2]="EDITOR",i[i.TUTOR=3]="TUTOR",i[i.STUDENT=4]="STUDENT",i[i.CHANNEL_MODERATOR=5]="CHANNEL_MODERATOR",i}(Te||{}),w=(()=>{class i{resourceUrl="/api/communication/courses/";http=n(f);translationService=n(Oe);getConversationName(e,t=!1){if(!e)return"";if(it(e)){let s=e.name??"";return e.isArchived&&(s+=" ("+this.translationService.instant("artemisApp.conversationsLayout.archived")+")"),s}else if(Pe(e)){let s=e.members?.find(r=>r.isRequestingUser===!1);return s?D(s,t):""}else if(Se(e)){if(e.name&&e.name.length>0)return e.name;let s=e.members??[],r=s.some(a=>a.isRequestingUser),o=s.filter(a=>a.isRequestingUser===!1);return o.length===0?r?this.translationService.instant("artemisApp.conversationsLayout.onlyYou"):"":o.length===1?D(o[0],t):o.length===2?`${D(o[0],!1)}, ${D(o[1],!1)}`:`${D(o[0],!1)}, ${D(o[1],!1)}, `+this.translationService.instant("artemisApp.conversationsLayout.others",{count:o.length-2})}else return""}searchMembersOfConversation(e,t,s,r,o,a){let p=[{sortProperty:"firstName",sortDirection:"asc"},{sortProperty:"lastName",sortDirection:"asc"}],m=this.creatSearchPagingParams(p,r,o,s,a);return this.http.get(`${this.resourceUrl}${e}/conversations/${t}/members/search`,{observe:"response",params:m})}getConversationsOfUser(e){return this.http.get(`${this.resourceUrl}${e}/conversations`,{observe:"response"}).pipe(c(this.convertDateArrayFromServer))}updateIsFavorite(e,t,s){let r=new b;return r=r.append("isFavorite",s.toString()),this.http.post(`${this.resourceUrl}${e}/conversations/${t}/favorite`,null,{observe:"response",params:r})}updateIsHidden(e,t,s){let r=new b;return r=r.append("isHidden",s.toString()),this.http.post(`${this.resourceUrl}${e}/conversations/${t}/hidden`,null,{observe:"response",params:r})}updateIsMuted(e,t,s){let r=new b;return r=r.append("isMuted",s.toString()),this.http.post(`${this.resourceUrl}${e}/conversations/${t}/muted`,null,{observe:"response",params:r})}markAsRead(e,t){return this.http.patch(`${this.resourceUrl}${e}/conversations/${t}/mark-as-read`,null,{observe:"response"})}checkForUnreadMessages(e){return this.http.get(`${this.resourceUrl}${e}/unread-messages`,{observe:"response"})}acceptCodeOfConduct(e){return this.http.patch(`${this.resourceUrl}${e}/code-of-conduct/agreement`,null,{observe:"response"})}checkIsCodeOfConductAccepted(e){return this.http.get(`${this.resourceUrl}${e}/code-of-conduct/agreement`,{observe:"response"})}getResponsibleUsersForCodeOfConduct(e){return this.http.get(`${this.resourceUrl}${e}/code-of-conduct/responsible-users`,{observe:"response"})}convertDateFromServer=e=>(e.body&&this.convertServerDates(e.body),e);convertServerDates(e){return e.creationDate=h(e.creationDate),e.lastMessageDate=h(e.lastMessageDate),e.lastReadDate=h(e.lastReadDate),e}convertDateArrayFromServer=e=>(e.body&&e.body.forEach(t=>{this.convertServerDates(t)}),e);creatSearchPagingParams=(e,t,s,r,o)=>{let a=new b;`${o}`!=`${Te.ALL}`&&(a=a.set("filter",Te[o])),a=a.set("loginOrName",r);for(let p of e)a=a.append("sort",`${p.sortProperty},${p.sortDirection}`);return a=a.set("page",String(t)),a.set("size",String(s))};markAllChannelsAsRead(e){return this.http.post(`${this.resourceUrl}${e}/channels/mark-as-read`,{observe:"response"})}static \u0275fac=function(t){return new(t||i)};static \u0275prov=u({token:i,factory:i.\u0275fac,providedIn:"root"})}return i})();var pt=(()=>{class i{resourceUrl="/api/communication/courses/";http=n(f);conversationService=n(w);create(e,t){return this.http.post(`${this.resourceUrl}${e}/one-to-one-chats`,[t],{observe:"response"}).pipe(c(this.conversationService.convertDateFromServer))}createWithId(e,t){return this.http.post(`${this.resourceUrl}${e}/one-to-one-chats/${t}`,null,{observe:"response"}).pipe(c(this.conversationService.convertDateFromServer))}static \u0275fac=function(t){return new(t||i)};static \u0275prov=u({token:i,factory:i.\u0275fac,providedIn:"root"})}return i})();var lt=(()=>{class i{resourceUrl="/api/communication/courses/";http=n(f);accountService=n(O);getChannelsOfCourse(e){return this.http.get(`${this.resourceUrl}${e}/channels/overview`,{observe:"response"})}getPublicChannelsOfCourse(e){return this.http.get(`${this.resourceUrl}${e}/channels/public-overview`,{observe:"response"})}getChannelOfExercise(e,t){return this.http.get(`${this.resourceUrl}${e}/exercises/${t}/channel`,{observe:"response"})}getChannelOfLecture(e,t){return this.http.get(`${this.resourceUrl}${e}/lectures/${t}/channel`,{observe:"response"})}delete(e,t){return this.http.delete(`${this.resourceUrl}${e}/channels/${t}`,{observe:"response"})}archive(e,t){return this.http.post(`${this.resourceUrl}${e}/channels/${t}/archive`,null,{observe:"response"})}unarchive(e,t){return this.http.post(`${this.resourceUrl}${e}/channels/${t}/unarchive`,null,{observe:"response"})}create(e,t){return this.http.post(`${this.resourceUrl}${e}/channels`,t,{observe:"response"}).pipe(c(this.convertDateFromServer))}update(e,t,s){return this.http.put(`${this.resourceUrl}${e}/channels/${t}`,s,{observe:"response"}).pipe(c(this.convertDateFromServer))}deregisterUsersFromChannel(e,t,s){let r=s||[this.accountService.userIdentity?.login];return this.http.post(`${this.resourceUrl}${e}/channels/${t}/deregister`,r,{observe:"response"})}registerUsersToChannel(e,t,s=!1,r=!1,o=!1,a){let p=a||[this.accountService.userIdentity?.login],m=new b;return s&&(m=m.set("addAllStudents","true")),r&&(m=m.set("addAllTutors","true")),o&&(m=m.set("addAllInstructors","true")),this.http.post(`${this.resourceUrl}${e}/channels/${t}/register`,p,{observe:"response",params:m})}grantChannelModeratorRole(e,t,s){let r=s||[this.accountService.userIdentity?.login];return this.http.post(`${this.resourceUrl}${e}/channels/${t}/grant-channel-moderator`,r,{observe:"response"})}revokeChannelModeratorRole(e,t,s){let r=s||[this.accountService.userIdentity?.login];return this.http.post(`${this.resourceUrl}${e}/channels/${t}/revoke-channel-moderator`,r,{observe:"response"})}toggleChannelPrivacy(e,t){return this.http.post(`${this.resourceUrl}${e}/channels/${t}/toggle-privacy`,null,{observe:"response"}).pipe(c(this.convertDateFromServer))}convertDateFromServer=e=>(e.body&&this.convertServerDates(e.body),e);convertServerDates(e){return e.creationDate=h(e.creationDate),e.lastMessageDate=h(e.lastMessageDate),e.lastReadDate=h(e.lastReadDate),e}static \u0275fac=function(t){return new(t||i)};static \u0275prov=u({token:i,factory:i.\u0275fac,providedIn:"root"})}return i})();var ft=(()=>{class i{resourceUrl="api/communication/courses/";http=n(f);conversationService=n(w);accountService=n(O);create(e,t){return this.http.post(`${this.resourceUrl}${e}/group-chats`,t,{observe:"response"}).pipe(c(this.conversationService.convertDateFromServer))}update(e,t,s){return this.http.put(`${this.resourceUrl}${e}/group-chats/${t}`,s,{observe:"response"}).pipe(c(this.conversationService.convertDateFromServer))}removeUsersFromGroupChat(e,t,s){let r=s||[this.accountService.userIdentity?.login];return this.http.post(`${this.resourceUrl}${e}/group-chats/${t}/deregister`,r,{observe:"response"})}addUsersToGroupChat(e,t,s){return this.http.post(`${this.resourceUrl}${e}/group-chats/${t}/register`,s,{observe:"response"})}static \u0275fac=function(t){return new(t||i)};static \u0275prov=u({token:i,factory:i.\u0275fac,providedIn:"root"})}return i})();var L=(()=>{class i{groupChatService=n(ft);oneToOneChatService=n(pt);channelService=n(lt);conversationService=n(w);websocketService=n(j);accountService=n(O);alertService=n(Ae);router=n(ie);notificationService=n(ne);conversationsOfUser=[];_conversationsOfUser$=new g(1);activeConversation=void 0;_activeConversation$=new g(1);isCodeOfConductAccepted=!1;_isCodeOfConductAccepted$=new g(1);isCodeOfConductPresented=!1;_isCodeOfConductPresented$=new g(1);hasUnreadMessages=!1;_hasUnreadMessages$=new g(1);_course=void 0;isLoading=!1;_isLoading$=new g(1);subscribedConversationMembershipTopic;activeConversationSubscription;userId;_courseId;_isServiceSetup$=new g(1);constructor(){this.accountService.identity().then(e=>{this.userId=e.id}),this.activeConversationSubscription=this.notificationService.newOrUpdatedMessage.subscribe(e=>{e.action===v.CREATE&&e.post.author?.id!==this.userId&&this.handleNewMessage(e.post.conversation?.id,e.post.conversation?.lastMessageDate)})}ngOnDestroy(){this.subscribedConversationMembershipTopic&&(this.websocketService.unsubscribe(this.subscribedConversationMembershipTopic),this.subscribedConversationMembershipTopic=void 0),this.activeConversationSubscription&&(this.activeConversationSubscription.unsubscribe(),this.activeConversationSubscription=void 0)}get conversationsOfUser$(){return this._conversationsOfUser$.asObservable()}get activeConversation$(){return this._activeConversation$.asObservable()}get isCodeOfConductAccepted$(){return this._isCodeOfConductAccepted$.asObservable()}get isCodeOfConductPresented$(){return this._isCodeOfConductPresented$.asObservable()}get hasUnreadMessages$(){return this._hasUnreadMessages$.asObservable()}get isServiceSetup$(){return this._isServiceSetup$.asObservable()}get course(){return this._course}get isLoading$(){return this._isLoading$.asObservable()}setActiveConversation(e){this.updateLastReadDateAndNumberOfUnreadMessages();let t;if(e){let s=typeof e=="number";t=this.conversationsOfUser.find(r=>r.id===(s?e:e.id))}!t&&e&&this.alertService.addAlert({type:xe.WARNING,message:"artemisApp.metis.channel.notAMember"}),this.activeConversation=t,this._activeConversation$.next(this.activeConversation),this.isCodeOfConductPresented=!1,this._isCodeOfConductPresented$.next(this.isCodeOfConductPresented)}setCodeOfConduct(){this.activeConversation=void 0,this._activeConversation$.next(this.activeConversation),this.isCodeOfConductPresented=!0,this._isCodeOfConductPresented$.next(this.isCodeOfConductPresented)}markAsRead(e){let t=this.conversationsOfUser.findIndex(s=>s.id===e);t!==-1&&(this.conversationsOfUser[t].lastMessageDate=T(),this.conversationsOfUser[t].unreadMessagesCount=0),this.hasUnreadMessagesCheck()}updateLastReadDateAndNumberOfUnreadMessages(){this.activeConversation&&(this.activeConversation.lastReadDate=T(),this.activeConversation.unreadMessagesCount=0,this.activeConversation.hasUnreadMessage=!1)}forceRefresh(e=!0,t=!0){if(!this._course)throw new Error("Course is not set. The service does not seem to be initialized.");return this.setIsLoading(!0),this.conversationService.getConversationsOfUser(this._courseId).pipe(c(s=>s.body??[]),S(s=>(A(this.alertService,s),this.setIsLoading(!1),x([]))),c(s=>{if(this.conversationsOfUser=s,this.hasUnreadMessagesCheck(),this._conversationsOfUser$.next(this.conversationsOfUser),this.activeConversation){let r=this.conversationsOfUser.find(o=>o.id===this.activeConversation?.id);r?this.activeConversation=r:this.activeConversation=void 0}t&&this._conversationsOfUser$.next(this.conversationsOfUser),e&&this._activeConversation$.next(this.activeConversation),this.setIsLoading(!1)}),ue(()=>{this.setIsLoading(!1)}),W(()=>de))}createOneToOneChat=e=>this.onConversationCreation(this.oneToOneChatService.create(this._courseId,e));createOneToOneChatWithId=e=>this.onConversationCreation(this.oneToOneChatService.createWithId(this._courseId,e));createChannel=e=>this.onConversationCreation(this.channelService.create(this._courseId,e));createGroupChat=e=>this.onConversationCreation(this.groupChatService.create(this._courseId,e));onConversationCreation=e=>e.pipe(C(t=>{this.activeConversation=t.body}),S(t=>t.error?.skipAlert?(A(this.alertService,t),t.error&&t.error.title?this.alertService.addErrorAlert(t.error.title,t.error.message,t.error.params):A(this.alertService,t),this.setIsLoading(!1),x(null)):x(null)),W(()=>this.forceRefresh()));createGroupConversation(e){return this.groupChatService.create(this._courseId,e)}createDirectConversation(e){return this.oneToOneChatService.create(this._courseId,e)}setUpConversationService=e=>(this._courseId=e.id,this._course=e,this.conversationService.getConversationsOfUser(this._courseId).pipe(c(t=>t.body??[]),S(t=>(A(this.alertService,t),this.setIsLoading(!1),this._isServiceSetup$.next(!1),x([]))),c(t=>{this.conversationsOfUser=t,this.hasUnreadMessagesCheck(),this._conversationsOfUser$.next(this.conversationsOfUser),this.activeConversation=void 0,this._activeConversation$.next(this.activeConversation),this.subscribeToConversationMembershipTopic(e.id,this.userId),this.subscribeToRouteChange(),this.setIsLoading(!1),this._isServiceSetup$.next(!0)}),ue(()=>{this.setIsLoading(!1)}),W(()=>de)));checkForUnreadMessages=e=>{e?.id&&this.conversationService.checkForUnreadMessages(e.id).subscribe({next:t=>{t?.body!==this.hasUnreadMessages&&(this.hasUnreadMessages=t?.body??!1,this._hasUnreadMessages$.next(this.hasUnreadMessages))},error:t=>{A(this.alertService,t)}})};acceptCodeOfConduct(e){e?.id&&this.conversationService.acceptCodeOfConduct(e.id).subscribe({next:()=>{this.isCodeOfConductAccepted=!0,this._isCodeOfConductAccepted$.next(!0)},error:t=>{A(this.alertService,t)}})}checkIsCodeOfConductAccepted(e){e?.id&&this.conversationService.checkIsCodeOfConductAccepted(e.id).subscribe({next:t=>{t.body!==null&&(this.isCodeOfConductAccepted=t.body,this._isCodeOfConductAccepted$.next(this.isCodeOfConductAccepted))},error:t=>{A(this.alertService,t)}})}hasUnreadMessagesCheck=()=>{let e=this.conversationsOfUser.some(t=>t?.unreadMessagesCount&&t.unreadMessagesCount>0);e!==this.hasUnreadMessages&&(this.hasUnreadMessages=e,this._hasUnreadMessages$.next(this.hasUnreadMessages)),e&&this.updateUnread()};updateUnread(){this.conversationsOfUser.forEach(e=>e.hasUnreadMessage=!!e.unreadMessagesCount&&e.unreadMessagesCount>0)}setIsLoading(e){this.isLoading=e,this._isLoading$.next(this.isLoading)}getConversationMembershipTopic(e,t){return"/user"+z+"courses/"+e+"/conversations/user/"+t}subscribeToRouteChange(){this.router.events.subscribe(e=>{e instanceof se&&this.activeConversation&&(this.activeConversation.lastReadDate=T(),this.activeConversation.unreadMessagesCount=0,this.hasUnreadMessagesCheck())})}subscribeToConversationMembershipTopic(e,t){if(this.subscribedConversationMembershipTopic)return;let s=this.getConversationMembershipTopic(e,t);this.websocketService.subscribe(s),this.subscribedConversationMembershipTopic=s,this.websocketService.receive(s).subscribe(r=>{this.onConversationMembershipMessageReceived(r)})}onConversationMembershipMessageReceived(e){let t=this.conversationService.convertServerDates(e.conversation);switch(e.action){case v.CREATE:this.handleCreateConversation(t);break;case v.UPDATE:this.handleUpdateConversation(t);break;case v.DELETE:this.handleDeleteConversation(t);break;case v.NEW_MESSAGE:this.handleNewMessage(t.id,t.lastMessageDate);break}this._conversationsOfUser$.next(this.conversationsOfUser)}handleCreateConversation(e){this.handleUpdateOrCreate(e)}handleUpdateConversation(e){this.handleUpdateOrCreate(e)}handleUpdateOrCreate(e){let t=[...this.conversationsOfUser],s=t.findIndex(r=>r.id===e.id);s===-1?t.push(e):t[s]=e,this.conversationsOfUser=t,this.hasUnreadMessagesCheck()}handleDeleteConversation(e){let t=[...this.conversationsOfUser],s=t.findIndex(r=>r.id===e.id);s!==-1&&t.splice(s,1),this.conversationsOfUser=t,this.activeConversation?.id===e.id&&(this.activeConversation=void 0,this._activeConversation$.next(this.activeConversation))}handleNewMessage(e,t){let s=[...this.conversationsOfUser],r=s.findIndex(o=>o.id===e);r!==-1&&(s[r].lastMessageDate=t,s[r].hasUnreadMessage=!0,s[r].unreadMessagesCount=(s[r].unreadMessagesCount??0)+1,this.hasUnreadMessages||(this.hasUnreadMessages=!0,this._hasUnreadMessages$.next(this.hasUnreadMessages))),this.conversationsOfUser=s}static getQueryParamsForConversation(e){let t={};return t.conversationId=e,t}static getLinkForConversation(e){return["/courses",e,"communication"]}markAllChannelsAsRead(e){return e?.id?this.conversationService.markAllChannelsAsRead(e.id).pipe(S(t=>(A(this.alertService,t),x()))):x()}static \u0275fac=function(t){return new(t||i)};static \u0275prov=u({token:i,factory:i.\u0275fac})}return i})();var Pt=25,Tt=[ke,ve,me,we,be],Et=[Ye,Je,Ze,Ke,et],ne=(()=>{class i{websocketService=n(j);router=n(ie);http=n(f);accountService=n(O);activatedRoute=n(Ne);courseManagementService=n(ye);notificationSettingsService=n(rt);artemisTranslatePipe=n(ot);resourceUrl="api/communication/notifications";notificationSubject;singleNotificationSubject;notifications=[];totalNotifications=0;totalNotificationsSubject;page=0;loadingSubject=new J(!1);initialized=!1;loadTimeout;subscribedTopics=[];wsSubscriptions=[];subscribedCourseWideChannelTopic;courseWideChannelSubscription;_singlePostSubject$;mutedConversations=[];loadedMutedConversations=!1;constructor(){this.initNotificationObserver(),this.notificationSettingsService.getNotificationSettingsUpdates().subscribe(()=>{this.resetAndLoad()}),this.accountService.getAuthenticationState().subscribe(e=>this.onUserIdentityChange(e)),this.router.events.pipe(Ie(e=>e instanceof se)).subscribe(e=>{let t=e.urlAfterRedirects;if(t.startsWith("/courses")||t.startsWith("/course-management")){let s=t.split("/",3).last();if(!s)return;let r=parseInt(s);isNaN(r)?this.clearCourseWideChannelSubscription():this.subscribeToCourseWideChannelTopic(r)}})}onUserIdentityChange(e){e&&!this.initialized?(this.subscribeToSingleUserNotificationUpdates(e),this.subscribeToTutorialGroupNotificationUpdates(e),this.subscribeToConversationNotificationUpdates(e),this.loadTimeout=setTimeout(()=>{this.courseManagementService.getCoursesForNotifications().subscribe(t=>{t&&this.initialized&&(this.subscribeToGroupNotificationUpdates(t),this.subscribeToQuizUpdates(t),this.loadedMutedConversations||(this.loadedMutedConversations=!0,this.getMutedConversations(t)))}),this.notificationSettingsService.refreshNotificationSettings()},15*1e3),this.initialized=!0):!e&&this.initialized&&(this.notifications=[],this.notificationSubject.next([]),this.page=0,this.totalNotifications=0,this.totalNotificationsSubject.next(0),clearTimeout(this.loadTimeout),this.subscribedTopics.forEach(t=>this.websocketService.unsubscribe(t)),this.wsSubscriptions.forEach(t=>t.unsubscribe()),this.subscribedTopics=[],this.wsSubscriptions=[],this.clearCourseWideChannelSubscription(),this.initialized=!1)}get newOrUpdatedMessage(){return this._singlePostSubject$.asObservable()}setTotalNotificationCount(e){this.totalNotifications=e,this.totalNotificationsSubject.next(e)}incrementPageAndLoad(){this.loadingSubject.value||(this.page+=1,this.loadNotifications())}resetAndLoad(){this.page=0,this.notifications=[],this.totalNotifications=0,this.loadNotifications()}loadNotifications(){(this.totalNotifications===0||this.notifications.length<this.totalNotifications)&&(this.loadingSubject.next(!0),this.queryNotificationsFilteredBySettings({page:this.page,size:Pt,sort:["notificationDate,desc"]}).subscribe({next:e=>this.loadNotificationsSuccess(e.body,e.headers)}))}loadNotificationsSuccess(e,t){this.addNotifications(e,!1),this.setTotalNotificationCount(Number(t.get("X-Total-Count"))),this.loadingSubject.next(!1)}addNotification(e){this.notificationSettingsService.isNotificationAllowedBySettings(e)&&((!e.title||!Tt.includes(e.title))&&this.addNotifications([e]),this.singleNotificationSubject.next(e))}addNotifications(e,t=!0){e&&(e.forEach(s=>{s.notificationDate&&(s.notificationDate=h(s.notificationDate)),this.notificationSettingsService.isNotificationAllowedBySettings(s)&&!this.notifications.some(({id:r})=>s.id&&r===s.id)&&s.notificationDate&&this.notifications.push(s)}),this.notificationSubject.next(this.notifications),t&&this.setTotalNotificationCount(this.notifications.length))}queryNotificationsFilteredBySettings(e){let t=Ue(e);return this.http.get(this.resourceUrl,{params:t,observe:"response"}).pipe(c(s=>this.convertNotificationResponseArrayDateFromServer(s)))}interpretNotification(e){if(e.target){let t=JSON.parse(e.target),s=t.course||e.course?.id,r=t.conversation;if(e.title===Be)this.router.navigate([t.mainPage,"data-exports",t.id]);else if(e.title===qe)this.router.navigate([t.mainPage,"data-exports"]);else if(e.title===fe)this.router.navigate([t.mainPage,s,"quiz-exercises",t.id,"live"]);else if(e.title===Re||e.title==="New announcement"||e.title===be||e.title==="New course-wide post"||e.title==="New reply for course-wide post")if(r){let o=L.getQueryParamsForConversation(r),a=L.getLinkForConversation(s);this.navigateToNotificationTarget(s,a,o)}else{let o=F.getQueryParamsForCoursePost(t.id),a=F.getLinkForCoursePost(s);this.navigateToNotificationTarget(s,a,o)}else if(e.title===ve||e.title==="New exercise post"||e.title==="New reply for exercise post"){let o=F.getQueryParamsForLectureOrExercisePost(t.id),a=F.getLinkForExercisePost(s,t.exercise??t.exerciseId);this.navigateToNotificationTarget(s,a,o)}else if(e.title===me||e.title==="New lecture post"||e.title==="New reply for lecture post"){let o=F.getQueryParamsForLectureOrExercisePost(t.id),a=F.getLinkForLecturePost(s,t.lecture??t.lectureId);this.navigateToNotificationTarget(s,a,o)}else if(e.title===Ge||e.title===He||e.title===Ve||e.title===Xe||e.title===ze){let o=L.getQueryParamsForConversation(r),a=L.getLinkForConversation(s);this.navigateToNotificationTarget(s,a,o)}else if(e.title===G||e.title===De||e.title===_e||e.title===Me||e.title===We||e.title===Le){let o=L.getQueryParamsForConversation(r);o.messageId=t.id;let a=L.getLinkForConversation(s);this.navigateToNotificationTarget(s,a,o)}else if(e.title===Fe){let o=["course-management",s,t.entity,t.id];this.navigateToNotificationTarget(s,o,{})}else{let o=[t.mainPage,s,t.entity,t.id];this.navigateToNotificationTarget(s,o,{})}}}getNotificationTextTranslation(e,t){if(e.textIsPlaceholder){let s=this.artemisTranslatePipe.transform(e.text,{placeholderValues:this.getParsedPlaceholderValues(e)});if(s?.includes($e))return e.text??"No text found";if(e.text&&Et.includes(e.text)){let r=/\[(?<tag>\w+)](.*?)\(.*?\)\[\/\k<tag>]/g;s=s.replace(r,(o,a,p)=>p)}return s?.length>t?s.substring(0,t-1)+"...":s}else return e.text??"No text found"}getParsedPlaceholderValues(e){return e.placeholderValues?JSON.parse(e.placeholderValues):[]}navigateToNotificationTarget(e,t,s){let r=this.getCurrentCourseId();r===void 0||r!==e||this.isUnderMessagesTabOfSpecificCourse(e.toString())?this.forceComponentReload(t,s):this.router.navigate(t,{queryParams:s})}getCurrentCourseId(){return this.activatedRoute.snapshot.firstChild?.params.courseId}forceComponentReload(e,t){this.router.navigate(["/courses"],{skipLocationChange:!0}).then(()=>{this.router.navigate(e,{queryParams:t})})}subscribeToNotificationUpdates(){return this.notificationSubject.asObservable()}subscribeToSingleIncomingNotifications(){return this.singleNotificationSubject.asObservable()}subscribeToLoadingStateUpdates(){return this.loadingSubject.asObservable()}subscribeToTotalNotificationCountUpdates(){return this.totalNotificationsSubject.asObservable()}subscribeToSingleUserNotificationUpdates(e){let t=`/topic/user/${e.id}/notifications`;if(!this.subscribedTopics.includes(t)){this.subscribedTopics.push(t),this.websocketService.subscribe(t);let s=this.websocketService.receive(t).subscribe(r=>{r.title!==je&&e.id!==r.author?.id&&this.addNotification(r)});this.wsSubscriptions.push(s)}}isUnderMessagesTabOfSpecificCourse(e){return this.router.url.includes(`courses/${e}/messages`)}subscribeToGroupNotificationUpdates(e){e.forEach(t=>{let s=`/topic/course/${t.id}/STUDENT`;if(t.isAtLeastInstructor?s=`/topic/course/${t.id}/INSTRUCTOR`:t.isAtLeastEditor?s=`/topic/course/${t.id}/EDITOR`:t.isAtLeastTutor&&(s=`/topic/course/${t.id}/TA`),!this.subscribedTopics.includes(s)){this.subscribedTopics.push(s),this.websocketService.subscribe(s);let r=this.websocketService.receive(s).subscribe(o=>{this.addNotification(o)});this.wsSubscriptions.push(r)}})}subscribeToTutorialGroupNotificationUpdates(e){let t=`/topic/user/${e.id}/notifications/tutorial-groups`;if(!this.subscribedTopics.includes(t)){this.subscribedTopics.push(t),this.websocketService.subscribe(t);let s=this.websocketService.receive(t).subscribe(r=>{this.addNotification(r)});this.wsSubscriptions.push(s)}}subscribeToConversationNotificationUpdates(e){let t=`/topic/user/${e.id}/notifications/conversations`;if(!this.subscribedTopics.includes(t)){this.subscribedTopics.push(t),this.websocketService.subscribe(t);let s=this.websocketService.receive(t).subscribe(this.handleNewPostDTO);this.wsSubscriptions.push(s)}}subscribeToCourseWideChannelTopic(e){let t=z+`courses/${e}`;this.subscribedCourseWideChannelTopic!==t&&(this.subscribedCourseWideChannelTopic&&this.clearCourseWideChannelSubscription(),this.websocketService.subscribe(t),this.subscribedCourseWideChannelTopic=t,this.courseWideChannelSubscription=this.websocketService.receive(t).subscribe(this.handleNewPostDTO))}handleNewPostDTO=e=>{e.post?.answers&&e.post.answers.forEach(s=>{s.post=U(N({},e.post),{answers:[],reactions:[]}),s.creationDate=T(s.creationDate)}),e.post.creationDate=T(e.post.creationDate),e.post.conversation?.lastMessageDate&&(e.post.conversation.lastMessageDate=h(e.post.conversation?.lastMessageDate));let t=this.accountService.userIdentity;t&&e.notification&&this.changeTitleIfMentioned(t,e,e.notification),this._singlePostSubject$.next(e),!(e.action===v.CREATE&&this.mutedConversations.find(s=>s===e.post.conversation?.id)&&e.notification?.title!==G)&&this.handleNotification(e)};handleNotification(e){let t=e.notification;if(t?.target){let s=this.accountService.userIdentity;t.author?.id!==s?.id&&this.notificationSettingsService.isNotificationAllowedBySettings(t)&&this.shouldNotify(e,s?.id)&&this.addNotification(t)}}muteNotificationsForConversation(e){this.mutedConversations.indexOf(e)===-1&&this.mutedConversations.push(e)}unmuteNotificationsForConversation(e){this.mutedConversations.splice(this.mutedConversations.indexOf(e),1)}shouldNotify(e,t){return!Z(e.post.conversation)?.isCourseWide||e.action!==v.UPDATE||!t||e.notification?.title===G?!0:e.post.author?.id===t||e.post.answers?.map(s=>s.author?.id).includes(t)}changeTitleIfMentioned(e,t,s){let r=`[user]${e?.name}(${e?.login})[/user]`;t.action===v.CREATE&&t.post.content?.includes(r)?s.title=G:t.action===v.UPDATE&&t.post.answers?.last()?.content?.includes(r)&&(s.title=G)}subscribeToQuizUpdates(e){e.forEach(t=>{let s="/topic/courses/"+t.id+"/quizExercises";if(!this.subscribedTopics.includes(s)){this.subscribedTopics.push(s),this.websocketService.subscribe(s);let r=this.websocketService.receive(s).subscribe(o=>{o.visibleToStudents&&o.quizMode===st.SYNCHRONIZED&&o.quizBatches?.[0]?.started&&!o.isOpenForPractice&&this.addNotification(i.createNotificationFromStartedQuizExercise(o))});this.wsSubscriptions.push(r)}})}static createNotificationFromStartedQuizExercise(e){return{title:fe,text:Qe,textIsPlaceholder:!0,placeholderValues:'["'+e.course.title+'","'+e.title+'"]',notificationDate:T(),target:JSON.stringify({course:e.course.id,mainPage:"courses",entity:"exercises",id:e.id})}}convertNotificationResponseArrayDateFromServer(e){return e.body&&e.body.forEach(t=>{t.notificationDate=h(t.notificationDate)}),e}initNotificationObserver(){this.notificationSubject=new g(1),this.totalNotificationsSubject=new g(1),this.singleNotificationSubject=new ce,this._singlePostSubject$=new ce}clearCourseWideChannelSubscription(){this.subscribedCourseWideChannelTopic&&this.websocketService.unsubscribe(this.subscribedCourseWideChannelTopic),this.subscribedCourseWideChannelTopic=void 0,this.courseWideChannelSubscription?.unsubscribe(),this.courseWideChannelSubscription=void 0}getMutedConversations(e){e.find(t=>t.courseInformationSharingConfiguration!==tt.DISABLED)&&this.http.get("api/communication/muted-conversations",{observe:"response"}).subscribe({next:t=>{this.mutedConversations.push(...t.body)}})}static \u0275fac=function(t){return new(t||i)};static \u0275prov=u({token:i,factory:i.\u0275fac,providedIn:"root"})}return i})();var vt=(()=>{class i{resourceUrl="api/communication/saved-posts/";http=n(f);savePost(e){let t=this.getPostingType(e).toString();return this.http.post(`${this.resourceUrl}${e.id}/${t}`,{},{observe:"response"})}removeSavedPost(e){let t=this.getPostingType(e).toString();return this.http.delete(`${this.resourceUrl}${e.id}/${t}`,{observe:"response"})}changeSavedPostStatus(e,t){let s=this.getPostingType(e).toString();return this.http.put(`${this.resourceUrl}${e.id}/${s}?status=${t.toString()}`,null,{observe:"response"})}fetchSavedPosts(e,t){return this.http.get(`${this.resourceUrl}${e}/${t.toString()}`,{observe:"response"}).pipe(c(this.convertPostResponseFromServer))}convertPostingToCorrespondingType(e){return Object.assign(e.postingType===$.POST?new M:new B,e)}convertPostResponseFromServer(e){return e.body&&e.body.forEach(t=>{t.creationDate=h(t.creationDate),t.updatedDate=h(t.updatedDate),t.conversation?.type!==void 0&&(t.conversation.type=t.conversation.type.toLowerCase())}),e}getPostingType(e){return e instanceof M?$.POST:$.ANSWER}static \u0275fac=function(t){return new(t||i)};static \u0275prov=u({token:i,factory:i.\u0275fac,providedIn:"root"})}return i})();var mt=(()=>{class i{resourceUrl="api/communication/forwarded-messages";http=n(f);createForwardedMessage(e,t){let s=e.toDTO(),r=new b;return t&&(r=r.set("courseId",t.toString())),this.http.post(`${this.resourceUrl}`,s,{params:r,observe:"response"}).pipe(S(o=>y(()=>new Error("Failed to create forwarded message"))))}getForwardedMessages(e,t,s){if(!e||e.length===0)return y(()=>new Error("IDs cannot be empty"));let r=$[t],o=new b().set("postingIds",e.join(",")).set("type",r).set("courseId",s.toString());return this.http.get(this.resourceUrl,{params:o,observe:"response"}).pipe(S(a=>y(()=>new Error("Failed to retrieve forwarded messages"))))}static \u0275fac=function(t){return new(t||i)};static \u0275prov=u({token:i,factory:i.\u0275fac,providedIn:"root"})}return i})();var ae=class{id;sourceId;sourceType;destinationPost;destinationAnswerPost;content;validateDestinations(){let d=this.destinationPost!==void 0&&this.destinationPost!==null,e=this.destinationAnswerPost!==void 0&&this.destinationAnswerPost!==null;return d&&!e||!d&&e}constructor(d,e,t,s,r,o){if(this.id=d,this.sourceId=e,this.sourceType=t,this.destinationPost=s,this.destinationAnswerPost=r,this.content=o,!this.validateDestinations())throw new Error("A ForwardedMessage must have exactly one destination")}toDTO(){return{id:this.id,sourceId:this.sourceId,sourceType:this.sourceType,destinationPostId:this.destinationPost?this.destinationPost.id:void 0,destinationAnswerPostId:this.destinationAnswerPost?this.destinationAnswerPost.id:void 0,content:this.content}}};var F=(()=>{class i{postService=n(nt);answerPostService=n(at);reactionService=n(ct);accountService=n(O);websocketService=n(j);conversationService=n(w);forwardedMessageService=n(mt);savedPostService=n(vt);posts$=new g(1);tags$=new J([]);totalNumberOfPosts$=new g(1);pinnedPosts$=new J([]);currentPostContextFilter={};currentConversation=void 0;user;pageType;courseId;cachedPosts=[];cachedTotalNumberOfPosts;subscriptionChannel;courseWideTopicSubscription;course;constructor(){let e=n(ne);this.accountService.identity().then(t=>{this.user=t}),this.courseWideTopicSubscription=e.newOrUpdatedMessage.subscribe(this.handleNewOrUpdatedMessage)}get posts(){return this.posts$.asObservable()}get tags(){return this.tags$.asObservable()}get totalNumberOfPosts(){return this.totalNumberOfPosts$.asObservable()}getPinnedPosts(){return this.pinnedPosts$.asObservable()}getCurrentConversation(){return this.currentConversation}static getLinkForLecturePost(e,t){return["/courses",e,"lectures",t]}static getLinkForExercisePost(e,t){return["/courses",e,"exercises",t]}static getLinkForCoursePost(e){return["/courses",e,"discussion"]}static getLinkForPlagiarismCasePost(e,t){return["/courses",e,"plagiarism-cases",t]}static getQueryParamsForCoursePost(e){let t={};return t.searchText=`#${e}`,t}static getQueryParamsForLectureOrExercisePost(e){let t={};return t.postId=e,t}ngOnDestroy(){this.subscriptionChannel&&this.websocketService.unsubscribe(this.subscriptionChannel),this.courseWideTopicSubscription.unsubscribe()}getPageType(){return this.pageType}setPageType(e){this.pageType=e}getUser(){return this.user}getCourse(){return this.course}setCourse(e){e&&(this.courseId===void 0||this.courseId!==e.id)&&(this.courseId=e.id,this.course=e)}setPosts(e){this.posts$.next(e)}getFilteredPosts(e,t=!0,s=void 0){t||e?.courseId!==this.currentPostContextFilter?.courseId||e?.conversationId!==this.currentPostContextFilter?.conversationId||this.hasDifferentContexts(e)||e?.plagiarismCaseId!==this.currentPostContextFilter?.plagiarismCaseId||e?.page!==this.currentPostContextFilter?.page?(this.currentPostContextFilter=e,this.currentConversation=s,this.postService.getPosts(this.courseId,e).subscribe(r=>{!t&&(ee.OVERVIEW===this.pageType||ee.PAGE_SECTION===this.pageType)?this.cachedPosts.push(...r.body):this.cachedPosts=r.body,this.cachedTotalNumberOfPosts=Number(r.headers.get("X-Total-Count")??"0"),this.posts$.next(this.cachedPosts),this.totalNumberOfPosts$.next(this.cachedTotalNumberOfPosts),this.createSubscriptionFromPostContextFilter()})):(this.posts$.next(this.cachedPosts),this.totalNumberOfPosts$.next(this.cachedTotalNumberOfPosts))}createPost(e){return this.postService.create(this.courseId,e).pipe(c(t=>t.body),C(t=>{this.cachedPosts.findIndex(r=>r.id===t.id)===-1&&(this.cachedPosts=[t,...this.cachedPosts],this.posts$.next(this.cachedPosts),this.totalNumberOfPosts$.next(this.cachedTotalNumberOfPosts))}))}createAnswerPost(e){return this.answerPostService.create(this.courseId,e).pipe(c(t=>t.body),C(t=>{let s=this.cachedPosts.findIndex(r=>r.id===e.post?.id);s>-1&&(this.cachedPosts[s].answers?.findIndex(o=>o.id===t.id)??-1)===-1&&(this.cachedPosts[s].answers||(this.cachedPosts[s]=U(N({},this.cachedPosts[s]),{answers:[],reactions:[]})),this.cachedPosts[s].answers.push(t),this.posts$.next(this.cachedPosts),this.totalNumberOfPosts$.next(this.cachedTotalNumberOfPosts))}))}updatePost(e){return this.postService.update(this.courseId,e).pipe(c(t=>t.body),C(t=>{let s=this.cachedPosts.findIndex(r=>r.id===t.id);s>-1&&(t.answers=[...this.cachedPosts[s].answers??[]],t.authorRole=this.cachedPosts[s].authorRole,this.cachedPosts[s]=t,this.posts$.next(this.cachedPosts),this.totalNumberOfPosts$.next(this.cachedTotalNumberOfPosts))}))}updateAnswerPost(e){return this.answerPostService.update(this.courseId,e).pipe(c(t=>t.body),C(t=>{let s=this.cachedPosts.findIndex(r=>r.id===e.post?.id);if(s>-1){let r=this.cachedPosts[s].answers?.findIndex(o=>o.id===t.id)??-1;r>-1&&(t.post=U(N({},this.cachedPosts[s]),{answers:[],reactions:[]}),t.authorRole=this.cachedPosts[s].answers[r].authorRole,this.cachedPosts[s].answers[r]=t,this.posts$.next(this.cachedPosts),this.totalNumberOfPosts$.next(this.cachedTotalNumberOfPosts))}}))}updatePostDisplayPriority(e,t){return this.postService.updatePostDisplayPriority(this.courseId,e,t).pipe(c(s=>s.body))}fetchAllPinnedPosts(e){let t={courseId:this.courseId,conversationId:e,postSortCriterion:Ce.CREATION_DATE,sortingOrder:oe.DESCENDING,pinnedOnly:!0,pagingEnabled:!1};return this.postService.getPosts(this.courseId,t).pipe(c(s=>s.body??[]),C(s=>{this.pinnedPosts$.next(s)}),S(s=>(this.pinnedPosts$.next([]),x([]))))}deletePost(e){this.postService.delete(this.courseId,e).pipe(C(()=>{let t=this.cachedPosts.findIndex(s=>s.id===e.id);t>-1&&(this.cachedPosts.splice(t,1),this.posts$.next(this.cachedPosts),this.totalNumberOfPosts$.next(this.cachedTotalNumberOfPosts))})).subscribe()}deleteAnswerPost(e){this.answerPostService.delete(this.courseId,e).pipe(C(()=>{let t=this.cachedPosts.findIndex(s=>s.id===e.post?.id);if(t>-1){let s=this.cachedPosts[t].answers?.findIndex(r=>r.id===e.id)??-1;s>-1&&(this.cachedPosts[t].answers?.splice(s,1),this.posts$.next(this.cachedPosts),this.totalNumberOfPosts$.next(this.cachedTotalNumberOfPosts))}})).subscribe()}createReaction(e){return this.reactionService.create(this.courseId,e).pipe(c(t=>t.body),C(t=>{let s=this.cachedPosts.findIndex(r=>r.id===t.post?.id);if(s>-1){let r=this.cachedPosts[s];(r.reactions?.findIndex(a=>a.id===t.id)??-1)===-1&&(r.reactions=r.reactions??[],r.reactions.push(t),this.cachedPosts[s]=N({},r),this.posts$.next(this.cachedPosts),this.totalNumberOfPosts$.next(this.cachedTotalNumberOfPosts))}}))}deleteReaction(e){return this.reactionService.delete(this.courseId,e).pipe(c(t=>t.body),C(()=>{let t=this.cachedPosts.findIndex(s=>s.id===e.post?.id);if(t>-1){let s=this.cachedPosts[t],r=s.reactions?.findIndex(o=>o.id==e.id)??-1;r>-1&&(s.reactions.splice(r,1),this.cachedPosts[t]=N({},s),this.posts$.next(this.cachedPosts),this.totalNumberOfPosts$.next(this.cachedTotalNumberOfPosts))}}))}metisUserIsAtLeastTutorInCourse(){return!!this.course.isAtLeastTutor}metisUserIsAtLeastInstructorInCourse(){return!!this.course.isAtLeastInstructor}metisUserIsAuthorOfPosting(e){return e?.author?.id&&this.getUser()?.id?e.author.id===this.getUser().id:!1}createEmptyPostForContext(e,t){let s=new M;return e?s.conversation=e:t&&(s.plagiarismCase={id:t.id}),s}getLinkForPost(){return i.getLinkForCoursePost(this.courseId)}getLinkForExercise(e){return`/courses/${this.getCourse().id}/exercises/${e}`}getLinkForLecture(e){return`/courses/${this.getCourse().id}/lectures/${e}`}getLinkForExam(e){return`/courses/${this.getCourse().id}/exams/${e}`}getLinkForChannelSubType(e){let t=e?.subTypeReferenceId?.toString();if(t)switch(e?.subType){case R.EXERCISE:return this.getLinkForExercise(t);case R.LECTURE:return this.getLinkForLecture(t);case R.EXAM:return this.getLinkForExam(t);default:return}}getLinkForFaq(){return`/courses/${this.getCourse().id}/faq`}getQueryParamsForPost(e){return e.conversation?i.getQueryParamsForCoursePost(e.id):{}}getContextInformation(e){let t,s,r="";return e.conversation&&(r=Z(e.conversation)?.name??"",t=["/courses",this.courseId,"communication"],s={conversationId:e.conversation.id}),{routerLinkComponents:t,displayName:r,queryParams:s}}createWebsocketSubscription(e){this.subscriptionChannel!==e&&(this.subscriptionChannel&&(this.websocketService.unsubscribe(this.subscriptionChannel),this.subscriptionChannel=void 0),this.subscriptionChannel=e,this.websocketService.subscribe(this.subscriptionChannel),this.websocketService.receive(this.subscriptionChannel).subscribe(this.handleNewOrUpdatedMessage))}savePost(e){this.setIsSavedAndStatusOfPost(e,!0,e.savedPostStatus),this.savedPostService.savePost(e).subscribe({next:()=>{}}),this.posts$.next(this.cachedPosts)}removeSavedPost(e){this.setIsSavedAndStatusOfPost(e,!1,e.savedPostStatus),this.savedPostService.removeSavedPost(e).subscribe({next:()=>{}}),this.posts$.next(this.cachedPosts)}changeSavedPostStatus(e,t){this.setIsSavedAndStatusOfPost(e,e.isSaved,t),this.savedPostService.changeSavedPostStatus(e,t).subscribe({next:()=>{}}),this.posts$.next(this.cachedPosts)}resetCachedPosts(){this.cachedPosts=[],this.posts$.next(this.cachedPosts),this.cachedTotalNumberOfPosts=0,this.totalNumberOfPosts$.next(this.cachedTotalNumberOfPosts)}setIsSavedAndStatusOfPost(e,t,s){if(e instanceof B){let r=this.cachedPosts.findIndex(p=>p.id===e.post.id),o=this.cachedPosts[r].answers?.findIndex(p=>p.id===e.id)??-1,a=pe(this.cachedPosts[r].answers[o]);a.isSaved=t,a.savedPostStatus=s?.valueOf(),this.cachedPosts[r].answers[o]=a}else{let r=this.cachedPosts.findIndex(a=>a.id===e.id),o=pe(this.cachedPosts[r]);o.isSaved=t,o.savedPostStatus=s?.valueOf(),this.cachedPosts[r]=o}}handleNewOrUpdatedMessage=e=>{let t=e.post.conversation?.id,s=this.currentPostContextFilter.conversationId&&t!==this.currentPostContextFilter.conversationId,r=this.currentPostContextFilter.plagiarismCaseId&&e.post.plagiarismCase?.id!==this.currentPostContextFilter.plagiarismCaseId,o=this.currentPostContextFilter.courseWideChannelIds?.length!==void 0&&(!Z(e.post.conversation)?.isCourseWide||this.currentPostContextFilter.courseWideChannelIds.length>0&&t&&!this.currentPostContextFilter.courseWideChannelIds.includes(t));if(!(s||o||r)){switch(e.post.creationDate=T(e.post.creationDate),e.post.answers?.forEach(a=>{a.creationDate=T(a.creationDate)}),e.action){case v.CREATE:let a=this.currentPostContextFilter.filterToOwn&&e.post.author?.id!==this.user.id,p=this.currentPostContextFilter.filterToAnsweredOrReacted,m=this.currentPostContextFilter.searchText?.length&&!e.post.content?.toLowerCase().includes(this.currentPostContextFilter.searchText.toLowerCase().trim());if(a||p||m)break;this.cachedPosts.findIndex(l=>l.id===e.post.id)===-1&&(this.currentPostContextFilter.sortingOrder===oe.ASCENDING?this.cachedPosts.push(e.post):this.cachedPosts=[e.post,...this.cachedPosts]),this.currentPostContextFilter.conversationId&&e.post.author?.id!==this.user.id&&this.conversationService.markAsRead(this.courseId,this.currentPostContextFilter.conversationId).subscribe(),this.addTags(e.post.tags);break;case v.UPDATE:let k=this.cachedPosts.findIndex(l=>l.id===e.post.id);if(k>-1&&(e.post.authorRole=this.cachedPosts[k].authorRole,e.post.answers?.forEach(l=>{let P=this.cachedPosts[k].answers?.find(Y=>Y.id===l.id);P&&(l.authorRole=P.authorRole)}),this.cachedPosts[k]=e.post),e.post.displayPriority===K.PINNED){let l=this.pinnedPosts$.getValue(),P=l.findIndex(Y=>Y.id===e.post.id);P>-1?(l[P]=e.post,this.pinnedPosts$.next([...l])):this.pinnedPosts$.next([e.post,...l])}else this.removeFromPinnedPosts(e.post.id);this.addTags(e.post.tags);break;case v.DELETE:let I=this.cachedPosts.findIndex(l=>l.id===e.post.id);I>-1&&this.cachedPosts.splice(I,1);let q=this.pinnedPosts$.getValue();if(q.some(l=>l.id===e.post.id)){let l=q.filter(P=>P.id!==e.post.id);this.pinnedPosts$.next(l)}break;default:break}if(ee.OVERVIEW===this.pageType){let a=this.currentPostContextFilter.page,p=this.currentPostContextFilter.pageSize;this.currentPostContextFilter.pageSize=p*(a+1),this.currentPostContextFilter.page=0,this.getFilteredPosts(this.currentPostContextFilter,!t,this.currentConversation),this.currentPostContextFilter.pageSize=p,this.currentPostContextFilter.page=a}else this.getFilteredPosts(this.currentPostContextFilter,!1)}};createSubscriptionFromPostContextFilter(){if(this.currentPostContextFilter.plagiarismCaseId){let e=z+"plagiarismCase/"+this.currentPostContextFilter.plagiarismCaseId;this.createWebsocketSubscription(e)}else{this.subscriptionChannel&&(this.websocketService.unsubscribe(this.subscriptionChannel),this.subscriptionChannel=void 0);return}}getForwardedMessagesByIds(e,t){if(e&&e.length>0)return this.forwardedMessageService.getForwardedMessages(e,t,this.courseId)}getSourcePostsByIds(e){if(e)return this.postService.getSourcePostsByIds(this.courseId,e)}getSourceAnswerPostsByIds(e){if(e)return this.answerPostService.getSourceAnswerPostsByIds(this.courseId,e)}createForwardedMessages(e,t,s,r){if(!this.courseId)return y(()=>new Error("Course ID is not set. Ensure that setCourse() is called before forwarding posts."));let o={content:r||"",conversation:t,hasForwardedMessages:!0},a=$.POST;return s&&(a=$.ANSWER),this.postService.create(this.courseId,o).pipe(W(p=>{let m=p.body,k=e.map(I=>new ae(void 0,I.id,a,{id:m.id},void 0,r||"")).map(I=>this.forwardedMessageService.createForwardedMessage(I,this.courseId).pipe(c(q=>q.body)));return Ee(k).pipe(C(I=>{t.id===this.currentConversation?.id&&(this.cachedPosts.findIndex(te=>te.id===m.id)===-1&&(this.cachedPosts=[m,...this.cachedPosts]),I.forEach(te=>{let l=this.cachedPosts.findIndex(P=>P.id===te.destinationPost?.id);if(l>-1){let P=this.cachedPosts[l],Y=U(N({},P),{hasForwardedMessages:!0});this.cachedPosts[l]=Y}}),this.posts$.next(this.cachedPosts),this.cachedTotalNumberOfPosts+=1,this.totalNumberOfPosts$.next(this.cachedTotalNumberOfPosts))}),S(I=>y(()=>I)))}),S(p=>y(()=>p)))}addTags(e){if(e&&e.length>0){let t=Array.from(new Set([...this.tags$.getValue(),...e]));this.tags$.next(t)}}hasDifferentContexts(e){return this.currentPostContextFilter.courseWideChannelIds?.sort((t,s)=>t-s),e.courseWideChannelIds?.sort((t,s)=>t-s),this.currentPostContextFilter.courseWideChannelIds?.toString()!==e.courseWideChannelIds?.toString()}removeFromPinnedPosts(e){let t=this.pinnedPosts$.getValue();if(t.some(r=>r.id===e)){let r=t.filter(o=>o.id!==e);this.pinnedPosts$.next(r)}}static \u0275fac=function(t){return new(t||i)};static \u0275prov=u({token:i,factory:i.\u0275fac})}return i})();export{H as a,V as b,$ as c,X as d,gt as e,K as f,ee as g,oe as h,Ce as i,Ct as j,St as k,Ot as l,$t as m,M as n,B as o,dt as p,ut as q,Se as r,cs as s,ht as t,Pe as u,hs as v,D as w,Ut as x,yt as y,Rt as z,Te as A,w as B,vt as C,F as D,pt as E,lt as F,ft as G,L as H,ne as I};
//# sourceMappingURL=chunk-QH7SWO42.js.map
