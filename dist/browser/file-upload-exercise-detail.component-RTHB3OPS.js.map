{
  "version": 3,
  "sources": ["src/main/webapp/app/exercises/file-upload/manage/file-upload-exercise-detail.component.ts", "src/main/webapp/app/exercises/file-upload/manage/file-upload-exercise-detail.component.html"],
  "sourcesContent": ["import { Component, OnDestroy, OnInit, inject } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { SafeHtml } from '@angular/platform-browser';\r\nimport { NonProgrammingExerciseDetailCommonActionsComponent } from 'app/exercises/shared/exercise-detail-common-actions/non-programming-exercise-detail-common-actions.component';\r\nimport { ExerciseDetailStatisticsComponent } from 'app/exercises/shared/statistics/exercise-detail-statistics.component';\r\nimport { Subscription } from 'rxjs';\r\nimport { FileUploadExercise } from 'app/entities/file-upload-exercise.model';\r\nimport { FileUploadExerciseService } from './file-upload-exercise.service';\r\nimport { filter } from 'rxjs/operators';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { ExerciseManagementStatisticsDto } from 'app/exercises/shared/statistics/exercise-management-statistics-dto';\r\nimport { ExerciseType } from 'app/entities/exercise.model';\r\nimport { StatisticsService } from 'app/shared/statistics-graph/statistics.service';\r\nimport dayjs from 'dayjs/esm';\r\nimport { onError } from 'app/shared/util/global.utils';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { EventManager } from 'app/core/util/event-manager.service';\r\nimport { DocumentationType } from 'app/shared/components/documentation-button/documentation-button.component';\r\nimport { DetailOverviewSection } from 'app/detail-overview-list/detail-overview-list.component';\r\nimport {\r\n    getExerciseGeneralDetailsSection,\r\n    getExerciseGradingDefaultDetails,\r\n    getExerciseGradingInstructionsCriteriaDetails,\r\n    getExerciseMarkdownSolution,\r\n    getExerciseModeDetailSection,\r\n    getExerciseProblemDetailSection,\r\n} from 'app/exercises/shared/utils';\r\nimport { ArtemisMarkdownService } from 'app/shared/markdown.service';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { DocumentationButtonComponent } from 'app/shared/components/documentation-button/documentation-button.component';\r\nimport { DetailOverviewListComponent } from 'app/detail-overview-list/detail-overview-list.component';\r\n\r\n@Component({\r\n    selector: 'jhi-file-upload-exercise-detail',\r\n    templateUrl: './file-upload-exercise-detail.component.html',\r\n    imports: [TranslateDirective, DocumentationButtonComponent, NonProgrammingExerciseDetailCommonActionsComponent, ExerciseDetailStatisticsComponent, DetailOverviewListComponent],\r\n})\r\nexport class FileUploadExerciseDetailComponent implements OnInit, OnDestroy {\r\n    private eventManager = inject(EventManager);\r\n    private fileUploadExerciseService = inject(FileUploadExerciseService);\r\n    private route = inject(ActivatedRoute);\r\n    private alertService = inject(AlertService);\r\n    private statisticsService = inject(StatisticsService);\r\n    private artemisMarkdown = inject(ArtemisMarkdownService);\r\n\r\n    readonly documentationType: DocumentationType = 'FileUpload';\r\n    readonly ExerciseType = ExerciseType;\r\n    readonly dayjs = dayjs;\r\n\r\n    private subscription: Subscription;\r\n    private eventSubscriber: Subscription;\r\n\r\n    fileUploadExercise: FileUploadExercise;\r\n    isExamExercise: boolean;\r\n    course?: Course;\r\n    doughnutStats: ExerciseManagementStatisticsDto;\r\n    exerciseDetailSections: DetailOverviewSection[];\r\n    formattedProblemStatement: SafeHtml | null;\r\n    formattedExampleSolution: SafeHtml | null;\r\n    formattedGradingInstructions: SafeHtml | null;\r\n\r\n    /**\r\n     * Initializes subscription for file upload exercise\r\n     */\r\n    ngOnInit() {\r\n        // TODO: route determines whether the component is in exam mode\r\n        this.subscription = this.route.params.subscribe((params) => {\r\n            this.load(params['exerciseId']);\r\n        });\r\n        this.registerChangeInFileUploadExercises();\r\n    }\r\n\r\n    /**\r\n     * Loads file upload exercise from the server\r\n     * @param exerciseId the id of the file upload exercise\r\n     */\r\n    load(exerciseId: number) {\r\n        // TODO: Use a separate find method for exam exercises containing course, exam, exerciseGroup and exercise id\r\n        this.fileUploadExerciseService\r\n            .find(exerciseId)\r\n            .pipe(filter((res) => !!res.body))\r\n            .subscribe({\r\n                next: (fileUploadExerciseResponse: HttpResponse<FileUploadExercise>) => {\r\n                    this.fileUploadExercise = fileUploadExerciseResponse.body!;\r\n                    this.isExamExercise = this.fileUploadExercise.exerciseGroup !== undefined;\r\n                    this.course = this.isExamExercise ? this.fileUploadExercise.exerciseGroup?.exam?.course : this.fileUploadExercise.course;\r\n                    this.formattedGradingInstructions = this.artemisMarkdown.safeHtmlForMarkdown(this.fileUploadExercise.gradingInstructions);\r\n                    this.formattedProblemStatement = this.artemisMarkdown.safeHtmlForMarkdown(this.fileUploadExercise.problemStatement);\r\n                    this.formattedExampleSolution = this.artemisMarkdown.safeHtmlForMarkdown(this.fileUploadExercise.exampleSolution);\r\n                    this.exerciseDetailSections = this.getExerciseDetailSections();\r\n                },\r\n                error: (error: HttpErrorResponse) => onError(this.alertService, error),\r\n            });\r\n        this.statisticsService.getExerciseStatistics(exerciseId).subscribe((statistics: ExerciseManagementStatisticsDto) => {\r\n            this.doughnutStats = statistics;\r\n        });\r\n    }\r\n\r\n    getExerciseDetailSections(): DetailOverviewSection[] {\r\n        const exercise = this.fileUploadExercise;\r\n        const generalSection = getExerciseGeneralDetailsSection(exercise);\r\n        const modeSection = getExerciseModeDetailSection(exercise);\r\n        const problemSection = getExerciseProblemDetailSection(this.formattedProblemStatement, this.fileUploadExercise);\r\n        const solutionSection = getExerciseMarkdownSolution(exercise, this.formattedExampleSolution);\r\n        const defaultGradingDetails = getExerciseGradingDefaultDetails(exercise);\r\n        const gradingInstructionsCriteriaDetails = getExerciseGradingInstructionsCriteriaDetails(exercise, this.formattedGradingInstructions);\r\n        return [\r\n            generalSection,\r\n            modeSection,\r\n            problemSection,\r\n            solutionSection,\r\n            {\r\n                headline: 'artemisApp.exercise.sections.grading',\r\n                details: [...defaultGradingDetails, ...gradingInstructionsCriteriaDetails],\r\n            },\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Unsubscribes on component destruction\r\n     */\r\n    ngOnDestroy() {\r\n        this.subscription.unsubscribe();\r\n        this.eventManager.destroy(this.eventSubscriber);\r\n    }\r\n\r\n    /**\r\n     * Listens to file upload exercise list modifications\r\n     */\r\n    registerChangeInFileUploadExercises() {\r\n        this.eventSubscriber = this.eventManager.subscribe('fileUploadExerciseListModification', () => this.load(this.fileUploadExercise.id!));\r\n    }\r\n}\r\n", "<div class=\"row justify-content-center\">\r\n    <div class=\"col-md-8\">\r\n        @if (fileUploadExercise) {\r\n            <div>\r\n                <div class=\"d-flex align-items-center\">\r\n                    <h2><span jhiTranslate=\"artemisApp.fileUploadExercise.detail.title\"></span> {{ fileUploadExercise.id }}</h2>\r\n                    <jhi-documentation-button [type]=\"documentationType\" />\r\n                </div>\r\n                <hr />\r\n                <div class=\"text-start\">\r\n                    @if (course) {\r\n                        <jhi-non-programming-exercise-detail-common-actions [isExamExercise]=\"isExamExercise\" [course]=\"course\" [exercise]=\"fileUploadExercise\" />\r\n                    }\r\n                </div>\r\n                @if (!fileUploadExercise.releaseDate || dayjs(fileUploadExercise.releaseDate).isBefore(dayjs())) {\r\n                    <div class=\"mt-3\">\r\n                        <jhi-exercise-detail-statistics\r\n                            [exercise]=\"fileUploadExercise\"\r\n                            [doughnutStats]=\"doughnutStats\"\r\n                            [exerciseType]=\"ExerciseType.FILE_UPLOAD\"\r\n                            class=\"d-flex justify-content-around\"\r\n                        />\r\n                    </div>\r\n                }\r\n                @if (exerciseDetailSections) {\r\n                    <jhi-detail-overview-list [sections]=\"exerciseDetailSections\" />\r\n                }\r\n            </div>\r\n        }\r\n    </div>\r\n</div>\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275property", "ctx_r0", "isExamExercise", "course", "fileUploadExercise", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "doughnutStats", "ExerciseType", "FILE_UPLOAD", "exerciseDetailSections", "\u0275\u0275template", "FileUploadExerciseDetailComponent_Conditional_4_Conditional_16_Template", "FileUploadExerciseDetailComponent_Conditional_4_Conditional_18_Template", "FileUploadExerciseDetailComponent_Conditional_4_Conditional_19_Template", "\u0275\u0275textInterpolate1", "id", "documentationType", "\u0275\u0275conditional", "releaseDate", "dayjs", "isBefore", "FileUploadExerciseDetailComponent", "eventManager", "inject", "EventManager", "fileUploadExerciseService", "FileUploadExerciseService", "route", "ActivatedRoute", "alertService", "AlertService", "statisticsService", "StatisticsService", "artemisMarkdown", "ArtemisMarkdownService", "subscription", "eventSubscriber", "formattedProblemStatement", "formattedExampleSolution", "formattedGradingInstructions", "ngOnInit", "params", "subscribe", "load", "registerChangeInFileUploadExercises", "exerciseId", "find", "pipe", "filter", "res", "body", "next", "fileUploadExerciseResponse", "exerciseGroup", "undefined", "exam", "safeHtmlForMarkdown", "gradingInstructions", "problemStatement", "exampleSolution", "getExerciseDetailSections", "error", "onError", "getExerciseStatistics", "statistics", "exercise", "generalSection", "getExerciseGeneralDetailsSection", "modeSection", "getExerciseModeDetailSection", "problemSection", "getExerciseProblemDetailSection", "solutionSection", "getExerciseMarkdownSolution", "defaultGradingDetails", "getExerciseGradingDefaultDetails", "gradingInstructionsCriteriaDetails", "getExerciseGradingInstructionsCriteriaDetails", "headline", "details", "ngOnDestroy", "unsubscribe", "destroy", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "FileUploadExerciseDetailComponent_Conditional_4_Template", "TranslateDirective", "DocumentationButtonComponent", "NonProgrammingExerciseDetailCommonActionsComponent", "ExerciseDetailStatisticsComponent", "DetailOverviewListComponent", "encapsulation"]
}
