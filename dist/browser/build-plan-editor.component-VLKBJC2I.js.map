{
  "version": 3,
  "sources": ["src/main/webapp/app/exercises/programming/manage/services/build-plan.service.ts", "src/main/webapp/app/exercises/programming/manage/build-plan-editor.component.ts", "src/main/webapp/app/exercises/programming/manage/build-plan-editor.component.html"],
  "sourcesContent": ["import { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Injectable, inject } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { BuildPlan } from 'app/entities/programming/build-plan.model';\r\n\r\nexport type EntityResponseType = HttpResponse<BuildPlan>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class BuildPlanService {\r\n    private http = inject(HttpClient);\r\n\r\n    public resourceUrl = `/api/programming/programming-exercises`;\r\n\r\n    getBuildPlan(programmingExerciseId: number): Observable<EntityResponseType> {\r\n        return this.http.get<BuildPlan>(`${this.resourceUrl}/${programmingExerciseId}/build-plan/for-editor`, { observe: 'response' });\r\n    }\r\n\r\n    putBuildPlan(programmingExerciseId: number, buildPlan: BuildPlan): Observable<EntityResponseType> {\r\n        return this.http.put<BuildPlan>(`${this.resourceUrl}/${programmingExerciseId}/build-plan`, buildPlan, { observe: 'response' });\r\n    }\r\n}\r\n", "import { AfterViewInit, Component, OnInit, ViewChild, ViewEncapsulation, inject } from '@angular/core';\r\nimport { faCircleNotch, faPlayCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { UpdatingResultComponent } from 'app/exercises/shared/result/updating-result.component';\r\nimport { onError } from 'app/shared/util/global.utils';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { BuildPlanService } from 'app/exercises/programming/manage/services/build-plan.service';\r\nimport { BuildPlan } from 'app/entities/programming/build-plan.model';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ProgrammingExercise } from 'app/entities/programming/programming-exercise.model';\r\nimport { ProgrammingExerciseService } from 'app/exercises/programming/manage/services/programming-exercise.service';\r\nimport { MonacoEditorComponent } from 'app/shared/monaco-editor/monaco-editor.component';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { CodeEditorHeaderComponent } from '../shared/code-editor/header/code-editor-header.component';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-build-plan-editor',\r\n    templateUrl: './build-plan-editor.component.html',\r\n    styleUrls: ['./build-plan-editor.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    imports: [TranslateDirective, UpdatingResultComponent, NgbTooltip, FaIconComponent, CodeEditorHeaderComponent, MonacoEditorComponent, ArtemisTranslatePipe],\r\n})\r\nexport class BuildPlanEditorComponent implements AfterViewInit, OnInit {\r\n    private buildPlanService = inject(BuildPlanService);\r\n    private programmingExerciseService = inject(ProgrammingExerciseService);\r\n    private alertService = inject(AlertService);\r\n    private activatedRoute = inject(ActivatedRoute);\r\n\r\n    // Icons\r\n    readonly faCircleNotch = faCircleNotch;\r\n    readonly farPlayCircle = faPlayCircle;\r\n\r\n    @ViewChild('editor', { static: true })\r\n    editor: MonacoEditorComponent;\r\n    isLoading = false;\r\n\r\n    loadingResults = true;\r\n    exerciseId: number;\r\n    programmingExercise: ProgrammingExercise;\r\n    buildPlan: BuildPlan | undefined;\r\n\r\n    /**\r\n     * @function ngOnInit\r\n     * Sets the exercise and corresponding build plan based on the exerciseId in the current URL.\r\n     */\r\n    ngOnInit(): void {\r\n        this.activatedRoute.data.subscribe(({ exercise }) => {\r\n            this.programmingExercise = exercise;\r\n            this.loadSolutionAndTemplateParticipation();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @function ngAfterViewInit\r\n     * @desc Sets the theme and other editor options\r\n     */\r\n    ngAfterViewInit(): void {\r\n        this.loadBuildPlan(this.activatedRoute.snapshot.params.exerciseId);\r\n    }\r\n\r\n    private loadSolutionAndTemplateParticipation() {\r\n        this.programmingExerciseService.findWithTemplateAndSolutionParticipationAndLatestResults(this.programmingExercise.id!).subscribe((response) => {\r\n            this.programmingExercise = response.body!;\r\n            this.exerciseId = this.programmingExercise.id!;\r\n\r\n            this.loadingResults = false;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Fetches the requested file by filename and opens a new editor session for it (if not yet done)\r\n     */\r\n    private loadBuildPlan(exerciseId: number) {\r\n        this.isLoading = true;\r\n        this.buildPlanService.getBuildPlan(exerciseId).subscribe({\r\n            next: (buildPlan) => {\r\n                this.buildPlan = buildPlan.body!;\r\n                this.initEditor();\r\n                this.isLoading = false;\r\n            },\r\n            error: (error) => {\r\n                this.buildPlan = undefined;\r\n                this.isLoading = false;\r\n\r\n                if (error.status == 404) {\r\n                    this.alertService.error('artemisApp.programmingExercise.buildPlanFetchError');\r\n                } else {\r\n                    onError(this.alertService, error);\r\n                }\r\n            },\r\n        });\r\n    }\r\n\r\n    private initEditor() {\r\n        this.onBuildPlanUpdate();\r\n        this.editor.layout();\r\n    }\r\n\r\n    private onBuildPlanUpdate() {\r\n        const text = this.buildPlan?.buildPlan ?? '';\r\n        this.editor.setText(text);\r\n    }\r\n\r\n    /**\r\n     * @function submit\r\n     * Replaces the initial build plan with the current content of the editor window, but only if a build plan is\r\n     * currently loaded.\r\n     */\r\n    submit() {\r\n        if (!this.buildPlan) {\r\n            return;\r\n        }\r\n\r\n        this.buildPlanService.putBuildPlan(this.exerciseId, this.buildPlan).subscribe((buildPlan) => {\r\n            this.buildPlan = buildPlan.body!;\r\n            this.onBuildPlanUpdate();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @function onTextChanged\r\n     * Replaces the build plan with the current text from the editor window.\r\n     * @param event The text inside the editor window.\r\n     */\r\n    onTextChanged(event: any) {\r\n        this.buildPlan!.buildPlan = event as string;\r\n    }\r\n\r\n    /**\r\n     * Updates the tab size of the editor.\r\n     * @param tabSize The new tab size.\r\n     */\r\n    updateTabSize(tabSize: number) {\r\n        this.editor.updateModelIndentationSize(tabSize);\r\n    }\r\n}\r\n", "<div class=\"d-flex align-content-between flex-wrap mb-2\">\r\n    @if (!loadingResults) {\r\n        <div class=\"f-flex flex-column\">\r\n            <div>\r\n                <span class=\"me-1\" jhiTranslate=\"artemisApp.participation.templateParticipation\"></span>\r\n                @if (programmingExercise.templateParticipation) {\r\n                    <jhi-updating-result\r\n                        [exercise]=\"programmingExercise\"\r\n                        [participation]=\"programmingExercise.templateParticipation!\"\r\n                        [showUngradedResults]=\"true\"\r\n                        [personalParticipation]=\"false\"\r\n                    />\r\n                }\r\n            </div>\r\n            <div>\r\n                <span class=\"me-1\" jhiTranslate=\"artemisApp.participation.solutionParticipation\"></span>\r\n                @if (programmingExercise.solutionParticipation) {\r\n                    <jhi-updating-result\r\n                        [exercise]=\"programmingExercise\"\r\n                        [participation]=\"programmingExercise.solutionParticipation!\"\r\n                        [showUngradedResults]=\"true\"\r\n                        [personalParticipation]=\"false\"\r\n                    />\r\n                }\r\n            </div>\r\n        </div>\r\n    }\r\n    <button\r\n        id=\"submit_button\"\r\n        type=\"button\"\r\n        class=\"guided-tour-submit-button btn btn-success navbar-btn ms-auto\"\r\n        [disabled]=\"!this.buildPlan\"\r\n        (click)=\"submit()\"\r\n        [ngbTooltip]=\"'artemisApp.editor.submitDescription' | artemisTranslate\"\r\n    >\r\n        <span>\r\n            <fa-icon [icon]=\"farPlayCircle\" />\r\n            <span jhiTranslate=\"artemisApp.editor.submit\"></span>\r\n        </span>\r\n    </button>\r\n</div>\r\n<div class=\"card build-plan-editor\">\r\n    <jhi-code-editor-header [fileName]=\"'artemisApp.programmingExercise.buildplan' | artemisTranslate\" [isLoading]=\"isLoading\" (onValidateTabSize)=\"updateTabSize($event)\" />\r\n    <div class=\"d-flex card-body build-plan-editor__content\">\r\n        <div class=\"build-plan-editor__content__editor\">\r\n            <jhi-monaco-editor\r\n                #editor\r\n                id=\"build-plan-editor\"\r\n                [stickyScroll]=\"false\"\r\n                [readOnly]=\"isLoading\"\r\n                [shrinkToFit]=\"false\"\r\n                [textChangedEmitDelay]=\"200\"\r\n                (textChanged)=\"onTextChanged($event)\"\r\n            />\r\n        </div>\r\n    </div>\r\n</div>\r\n"],
  "mappings": "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",
  "names": ["BuildPlanService", "http", "inject", "HttpClient", "resourceUrl", "getBuildPlan", "programmingExerciseId", "get", "observe", "putBuildPlan", "buildPlan", "put", "factory", "\u0275fac", "providedIn", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275property", "ctx_r1", "programmingExercise", "templateParticipation", "solutionParticipation", "\u0275\u0275elementStart", "\u0275\u0275template", "BuildPlanEditorComponent_Conditional_2_Conditional_7_Template", "\u0275\u0275elementEnd", "BuildPlanEditorComponent_Conditional_2_Conditional_13_Template", "\u0275\u0275conditional", "BuildPlanEditorComponent", "buildPlanService", "inject", "BuildPlanService", "programmingExerciseService", "ProgrammingExerciseService", "alertService", "AlertService", "activatedRoute", "ActivatedRoute", "faCircleNotch", "farPlayCircle", "faPlayCircle", "editor", "isLoading", "loadingResults", "exerciseId", "buildPlan", "ngOnInit", "data", "subscribe", "exercise", "loadSolutionAndTemplateParticipation", "ngAfterViewInit", "loadBuildPlan", "snapshot", "params", "findWithTemplateAndSolutionParticipationAndLatestResults", "id", "response", "body", "getBuildPlan", "next", "initEditor", "error", "undefined", "status", "onError", "onBuildPlanUpdate", "layout", "text", "setText", "submit", "putBuildPlan", "onTextChanged", "event", "updateTabSize", "tabSize", "updateModelIndentationSize", "selectors", "viewQuery", "rf", "ctx", "BuildPlanEditorComponent_Conditional_2_Template", "\u0275\u0275listener", "i0", "\u0275\u0275restoreView", "_r1", "\u0275\u0275resetView", "$event", "\u0275\u0275pipeBind1", "TranslateDirective", "UpdatingResultComponent", "NgbTooltip", "FaIconComponent", "CodeEditorHeaderComponent", "MonacoEditorComponent", "ArtemisTranslatePipe", "styles", "encapsulation"]
}
