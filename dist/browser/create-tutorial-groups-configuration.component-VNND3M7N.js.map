{
  "version": 3,
  "sources": ["src/main/webapp/app/course/tutorial-groups/tutorial-groups-management/tutorial-groups-configuration/crud/create-tutorial-groups-configuration/create-tutorial-groups-configuration.component.ts", "src/main/webapp/app/course/tutorial-groups/tutorial-groups-management/tutorial-groups-configuration/crud/create-tutorial-groups-configuration/create-tutorial-groups-configuration.component.html"],
  "sourcesContent": ["import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit, inject } from '@angular/core';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TutorialGroupsConfiguration } from 'app/entities/tutorial-group/tutorial-groups-configuration.model';\r\nimport { onError } from 'app/shared/util/global.utils';\r\nimport { TutorialGroupsConfigurationFormData } from 'app/course/tutorial-groups/tutorial-groups-management/tutorial-groups-configuration/crud/tutorial-groups-configuration-form/tutorial-groups-configuration-form.component';\r\nimport { TutorialGroupsConfigurationService } from 'app/course/tutorial-groups/services/tutorial-groups-configuration.service';\r\nimport { finalize, switchMap, take, takeUntil } from 'rxjs/operators';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { CourseManagementService } from 'app/course/manage/course-management.service';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { Subject } from 'rxjs';\r\nimport { CourseStorageService } from 'app/course/manage/course-storage.service';\r\nimport { LoadingIndicatorContainerComponent } from 'app/shared/loading-indicator-container/loading-indicator-container.component';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { TutorialGroupsConfigurationFormComponent } from '../tutorial-groups-configuration-form/tutorial-groups-configuration-form.component';\r\n\r\n@Component({\r\n    selector: 'jhi-create-tutorial-groups-configuration',\r\n    templateUrl: './create-tutorial-groups-configuration.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    imports: [LoadingIndicatorContainerComponent, TranslateDirective, TutorialGroupsConfigurationFormComponent],\r\n})\r\nexport class CreateTutorialGroupsConfigurationComponent implements OnInit, OnDestroy {\r\n    private activatedRoute = inject(ActivatedRoute);\r\n    private router = inject(Router);\r\n    private tutorialGroupsConfigurationService = inject(TutorialGroupsConfigurationService);\r\n    private courseManagementService = inject(CourseManagementService);\r\n    private alertService = inject(AlertService);\r\n    private courseStorageService = inject(CourseStorageService);\r\n    private cdr = inject(ChangeDetectorRef);\r\n\r\n    ngUnsubscribe = new Subject<void>();\r\n\r\n    newTutorialGroupsConfiguration = new TutorialGroupsConfiguration();\r\n    isLoading: boolean;\r\n    course: Course;\r\n\r\n    ngOnInit(): void {\r\n        this.isLoading = true;\r\n        this.activatedRoute.paramMap\r\n            .pipe(\r\n                take(1),\r\n                switchMap((params) => {\r\n                    const courseId = Number(params.get('courseId'));\r\n                    return this.courseManagementService.find(courseId);\r\n                }),\r\n                finalize(() => (this.isLoading = false)),\r\n                takeUntil(this.ngUnsubscribe),\r\n            )\r\n            .subscribe({\r\n                next: (courseResult) => {\r\n                    if (courseResult.body) {\r\n                        this.course = courseResult.body;\r\n                        this.newTutorialGroupsConfiguration = new TutorialGroupsConfiguration();\r\n                    }\r\n                },\r\n                error: (res: HttpErrorResponse) => onError(this.alertService, res),\r\n            })\r\n            .add(() => this.cdr.detectChanges());\r\n    }\r\n\r\n    createTutorialsGroupConfiguration(formData: TutorialGroupsConfigurationFormData) {\r\n        const { period, usePublicTutorialGroupChannels, useTutorialGroupChannels } = formData;\r\n        this.isLoading = true;\r\n        this.newTutorialGroupsConfiguration.useTutorialGroupChannels = useTutorialGroupChannels;\r\n        this.newTutorialGroupsConfiguration.usePublicTutorialGroupChannels = usePublicTutorialGroupChannels;\r\n        this.tutorialGroupsConfigurationService\r\n            .create(this.newTutorialGroupsConfiguration, this.course.id!, period ?? [])\r\n            .pipe(\r\n                finalize(() => {\r\n                    this.isLoading = false;\r\n                }),\r\n                takeUntil(this.ngUnsubscribe),\r\n            )\r\n            .subscribe({\r\n                next: (resp) => {\r\n                    this.course.tutorialGroupsConfiguration = resp.body!;\r\n                    this.courseStorageService.updateCourse(this.course);\r\n                    this.router.navigate(['/course-management', this.course.id!, 'tutorial-groups-checklist']);\r\n                },\r\n                error: (res: HttpErrorResponse) => onError(this.alertService, res),\r\n            });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.ngUnsubscribe.next();\r\n        this.ngUnsubscribe.complete();\r\n    }\r\n}\r\n", "<jhi-loading-indicator-container [isLoading]=\"isLoading\">\r\n    <h3 jhiTranslate=\"artemisApp.pages.createTutorialGroupsConfiguration.title\"></h3>\r\n    <div class=\"alert alert-info\" role=\"alert\" jhiTranslate=\"artemisApp.pages.createTutorialGroupsConfiguration.explanation\"></div>\r\n    <jhi-tutorial-groups-configuration-form [isEditMode]=\"false\" (formSubmitted)=\"createTutorialsGroupConfiguration($event)\" [course]=\"course\" />\r\n</jhi-loading-indicator-container>\r\n"],
  "mappings": "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",
  "names": ["CreateTutorialGroupsConfigurationComponent", "activatedRoute", "inject", "ActivatedRoute", "router", "Router", "tutorialGroupsConfigurationService", "TutorialGroupsConfigurationService", "courseManagementService", "CourseManagementService", "alertService", "AlertService", "courseStorageService", "CourseStorageService", "cdr", "ChangeDetectorRef", "ngUnsubscribe", "Subject", "newTutorialGroupsConfiguration", "TutorialGroupsConfiguration", "isLoading", "course", "ngOnInit", "paramMap", "pipe", "take", "switchMap", "params", "courseId", "Number", "get", "find", "finalize", "takeUntil", "subscribe", "next", "courseResult", "body", "error", "res", "onError", "add", "detectChanges", "createTutorialsGroupConfiguration", "formData", "period", "usePublicTutorialGroupChannels", "useTutorialGroupChannels", "create", "id", "resp", "tutorialGroupsConfiguration", "updateCourse", "navigate", "ngOnDestroy", "complete", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275listener", "$event", "\u0275\u0275elementEnd", "\u0275\u0275property", "\u0275\u0275advance", "LoadingIndicatorContainerComponent", "TranslateDirective", "TutorialGroupsConfigurationFormComponent", "encapsulation", "changeDetection"]
}
