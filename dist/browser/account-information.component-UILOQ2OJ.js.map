{
  "version": 3,
  "sources": ["src/main/webapp/app/shared/user-settings/account-information/account-information.component.ts", "src/main/webapp/app/shared/user-settings/account-information/account-information.component.html"],
  "sourcesContent": ["import { Component, ElementRef, OnInit, ViewChild, inject } from '@angular/core';\r\nimport { User } from 'app/core/user/user.model';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\nimport { Observable } from 'rxjs';\r\nimport { CachingStrategy } from 'app/shared/image/secured-image.component';\r\nimport { faPencil, faPlus, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { ImageCropperModalComponent } from 'app/course/manage/image-cropper-modal.component';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { base64StringToBlob } from 'app/utils/blob-util';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { UserSettingsService } from 'app/shared/user-settings/user-settings.service';\r\nimport { AlertService, AlertType } from 'app/core/util/alert.service';\r\nimport { TranslateDirective } from '../../language/translate.directive';\r\nimport { SecuredImageComponent } from '../../image/secured-image.component';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-account-information',\r\n    templateUrl: './account-information.component.html',\r\n    styleUrls: ['../user-settings.scss'],\r\n    imports: [TranslateDirective, SecuredImageComponent, FaIconComponent, ArtemisDatePipe],\r\n})\r\nexport class AccountInformationComponent implements OnInit {\r\n    private accountService = inject(AccountService);\r\n    private modalService = inject(NgbModal);\r\n    private userSettingsService = inject(UserSettingsService);\r\n    private alertService = inject(AlertService);\r\n\r\n    currentUser?: User;\r\n    croppedImage?: string;\r\n\r\n    @ViewChild('fileInput', { static: false }) fileInput: ElementRef<HTMLInputElement>;\r\n\r\n    // Icons\r\n    faPen = faPencil;\r\n    faTrash = faTrash;\r\n    faPlus = faPlus;\r\n\r\n    ngOnInit() {\r\n        this.accountService.getAuthenticationState().subscribe((user) => {\r\n            this.currentUser = user;\r\n        });\r\n    }\r\n\r\n    setUserImage(event: Event) {\r\n        const element = event.currentTarget as HTMLInputElement;\r\n        if (element.files && element.files.length > 0) {\r\n            const modalRef = this.modalService.open(ImageCropperModalComponent, { size: 'm' });\r\n            modalRef.componentInstance.roundCropper = false;\r\n            modalRef.componentInstance.fileFormat = 'jpeg';\r\n            modalRef.componentInstance.uploadFile = element.files[0];\r\n            const mimeType = element.files[0].type;\r\n            modalRef.result.then((result: any) => {\r\n                if (result) {\r\n                    const base64Data = result.replace('data:image/jpeg;base64,', '');\r\n                    const fileToUpload = base64StringToBlob(base64Data, mimeType);\r\n                    this.subscribeToUpdateProfilePictureResponse(this.userSettingsService.updateProfilePicture(fileToUpload));\r\n                }\r\n            });\r\n        }\r\n        element.value = '';\r\n    }\r\n\r\n    deleteUserImage() {\r\n        this.subscribeToRemoveProfilePictureResponse(this.userSettingsService.removeProfilePicture());\r\n    }\r\n\r\n    triggerUserImageFileInput() {\r\n        this.fileInput.nativeElement.click();\r\n    }\r\n\r\n    private subscribeToUpdateProfilePictureResponse(result: Observable<HttpResponse<User>>) {\r\n        result.subscribe({\r\n            next: (response: HttpResponse<User>) => this.onProfilePictureUploadSuccess(response.body),\r\n            error: (res: HttpErrorResponse) => this.onProfilePictureUploadError(res),\r\n        });\r\n    }\r\n\r\n    private subscribeToRemoveProfilePictureResponse(result: Observable<HttpResponse<User>>) {\r\n        result.subscribe({\r\n            next: () => this.onProfilePictureRemoveSuccess(),\r\n            error: (res: HttpErrorResponse) => this.onProfilePictureRemoveError(res),\r\n        });\r\n    }\r\n\r\n    private onProfilePictureUploadSuccess(user: User | null) {\r\n        if (user !== null && user.imageUrl !== undefined) {\r\n            this.currentUser!.imageUrl = user.imageUrl;\r\n            this.accountService.setImageUrl(user.imageUrl);\r\n        }\r\n    }\r\n\r\n    private onProfilePictureUploadError(error: HttpErrorResponse) {\r\n        const errorMessage = error.error ? error.error.title : error.headers?.get('x-artemisapp-alert');\r\n        if (errorMessage) {\r\n            this.alertService.addAlert({\r\n                type: AlertType.DANGER,\r\n                message: errorMessage,\r\n                disableTranslation: true,\r\n            });\r\n        }\r\n    }\r\n\r\n    private onProfilePictureRemoveSuccess() {\r\n        this.currentUser!.imageUrl = undefined;\r\n        this.accountService.setImageUrl(undefined);\r\n    }\r\n\r\n    private onProfilePictureRemoveError(error: HttpErrorResponse) {\r\n        const errorMessage = error.error ? error.error.title : error.headers?.get('x-artemisapp-alert');\r\n        if (errorMessage) {\r\n            this.alertService.addAlert({\r\n                type: AlertType.DANGER,\r\n                message: errorMessage,\r\n                disableTranslation: true,\r\n            });\r\n        }\r\n    }\r\n\r\n    protected readonly CachingStrategy = CachingStrategy;\r\n}\r\n", "<h1 jhiTranslate=\"artemisApp.userSettings.accountInformation\"></h1>\r\n@if (currentUser) {\r\n    <div class=\"list-group d-block\">\r\n        @if (currentUser.name) {\r\n            <div class=\"list-group-item\">\r\n                <dt jhiTranslate=\"artemisApp.userSettings.accountInformationPage.fullName\"></dt>\r\n                <dd>{{ currentUser.name }}</dd>\r\n            </div>\r\n        }\r\n        @if (currentUser.login) {\r\n            <div class=\"list-group-item\">\r\n                <dt jhiTranslate=\"artemisApp.userSettings.accountInformationPage.login\"></dt>\r\n                <dd>{{ currentUser.login }}</dd>\r\n            </div>\r\n        }\r\n        @if (currentUser.email) {\r\n            <div class=\"list-group-item\">\r\n                <dt jhiTranslate=\"artemisApp.userSettings.accountInformationPage.email\"></dt>\r\n                <dd>{{ currentUser.email }}</dd>\r\n            </div>\r\n        }\r\n        @if (currentUser.visibleRegistrationNumber) {\r\n            <div class=\"list-group-item\">\r\n                <dt jhiTranslate=\"artemisApp.userSettings.accountInformationPage.registrationNumber\"></dt>\r\n                <dd>{{ currentUser.visibleRegistrationNumber }}</dd>\r\n            </div>\r\n        }\r\n        @if (currentUser.createdDate) {\r\n            <div class=\"list-group-item\">\r\n                <dt jhiTranslate=\"artemisApp.userSettings.accountInformationPage.joinedArtemis\"></dt>\r\n                <dd>{{ currentUser.createdDate | artemisDate }}</dd>\r\n            </div>\r\n        }\r\n        <div class=\"list-group-item\">\r\n            <dt jhiTranslate=\"artemisApp.userSettings.accountInformationPage.profilePicture\"></dt>\r\n            <input type=\"file\" accept=\"image/png, image/jpeg\" #fileInput style=\"display: none\" (change)=\"setUserImage($event)\" />\r\n            @if (currentUser.imageUrl) {\r\n                <div class=\"position-relative d-inline-block rounded-3 overflow-hidden\">\r\n                    <jhi-secured-image class=\"secured-image\" [src]=\"currentUser.imageUrl\" [cachingStrategy]=\"CachingStrategy.LOCAL_STORAGE\" />\r\n\r\n                    <button\r\n                        id=\"delete-course-icon\"\r\n                        type=\"button\"\r\n                        class=\"btn icon-button-wrapper btn-danger position-absolute bottom-0 start-0 mb-1 ms-1\"\r\n                        (click)=\"deleteUserImage()\"\r\n                    >\r\n                        <fa-icon [icon]=\"faTrash\" />\r\n                    </button>\r\n\r\n                    <button\r\n                        id=\"edit-course-icon\"\r\n                        type=\"button\"\r\n                        class=\"btn icon-button-wrapper btn-warning position-absolute bottom-0 end-0 mb-1 me-1\"\r\n                        (click)=\"triggerUserImageFileInput()\"\r\n                    >\r\n                        <fa-icon [icon]=\"faPen\" />\r\n                    </button>\r\n                </div>\r\n            }\r\n            @if (!currentUser.imageUrl) {\r\n                <button (click)=\"triggerUserImageFileInput()\" class=\"btn btn-primary mt-1\">\r\n                    <fa-icon [icon]=\"faPlus\" />\r\n                    <div class=\"d-inline\" jhiTranslate=\"artemisApp.userSettings.accountInformationPage.addProfilePicture\"></div>\r\n                </button>\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275textInterpolate", "ctx_r1", "currentUser", "name", "login", "email", "visibleRegistrationNumber", "\u0275\u0275pipeBind1", "createdDate", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r3", "\u0275\u0275nextContext", "\u0275\u0275resetView", "deleteUserImage", "triggerUserImageFileInput", "\u0275\u0275property", "imageUrl", "CachingStrategy", "LOCAL_STORAGE", "faTrash", "faPen", "_r4", "faPlus", "\u0275\u0275template", "AccountInformationComponent_Conditional_2_Conditional_3_Template", "AccountInformationComponent_Conditional_2_Conditional_4_Template", "AccountInformationComponent_Conditional_2_Conditional_5_Template", "AccountInformationComponent_Conditional_2_Conditional_6_Template", "AccountInformationComponent_Conditional_2_Conditional_7_Template", "$event", "_r1", "setUserImage", "AccountInformationComponent_Conditional_2_Conditional_15_Template", "AccountInformationComponent_Conditional_2_Conditional_16_Template", "\u0275\u0275conditional", "AccountInformationComponent", "accountService", "inject", "AccountService", "modalService", "NgbModal", "userSettingsService", "UserSettingsService", "alertService", "AlertService", "croppedImage", "fileInput", "faPencil", "ngOnInit", "getAuthenticationState", "subscribe", "user", "event", "element", "currentTarget", "files", "length", "modalRef", "open", "ImageCropperModalComponent", "size", "componentInstance", "roundCropper", "fileFormat", "uploadFile", "mimeType", "type", "result", "then", "base64Data", "replace", "fileToUpload", "base64StringToBlob", "subscribeToUpdateProfilePictureResponse", "updateProfilePicture", "value", "subscribeToRemoveProfilePictureResponse", "removeProfilePicture", "nativeElement", "click", "next", "response", "onProfilePictureUploadSuccess", "body", "error", "res", "onProfilePictureUploadError", "onProfilePictureRemoveSuccess", "onProfilePictureRemoveError", "undefined", "setImageUrl", "errorMessage", "title", "headers", "get", "addAlert", "AlertType", "DANGER", "message", "disableTranslation", "selectors", "viewQuery", "rf", "ctx", "AccountInformationComponent_Conditional_2_Template", "TranslateDirective", "SecuredImageComponent", "FaIconComponent", "ArtemisDatePipe", "styles"]
}
