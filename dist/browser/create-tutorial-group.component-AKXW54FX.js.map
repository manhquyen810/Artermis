{
  "version": 3,
  "sources": ["src/main/webapp/app/course/tutorial-groups/tutorial-groups-management/tutorial-groups/crud/create-tutorial-group/create-tutorial-group.component.ts", "src/main/webapp/app/course/tutorial-groups/tutorial-groups-management/tutorial-groups/crud/create-tutorial-group/create-tutorial-group.component.html"],
  "sourcesContent": ["import { ChangeDetectionStrategy, Component, OnDestroy, OnInit, inject } from '@angular/core';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TutorialGroupsService } from 'app/course/tutorial-groups/services/tutorial-groups.service';\r\nimport { TutorialGroup } from 'app/entities/tutorial-group/tutorial-group.model';\r\nimport { onError } from 'app/shared/util/global.utils';\r\nimport { TutorialGroupFormData } from 'app/course/tutorial-groups/tutorial-groups-management/tutorial-groups/crud/tutorial-group-form/tutorial-group-form.component';\r\nimport { finalize, takeUntil } from 'rxjs/operators';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { TutorialGroupSchedule } from 'app/entities/tutorial-group/tutorial-group-schedule.model';\r\nimport dayjs from 'dayjs/esm';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { Subject } from 'rxjs';\r\nimport { LoadingIndicatorContainerComponent } from 'app/shared/loading-indicator-container/loading-indicator-container.component';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { TutorialGroupFormComponent } from '../tutorial-group-form/tutorial-group-form.component';\r\n\r\n@Component({\r\n    selector: 'jhi-create-tutorial-group',\r\n    templateUrl: './create-tutorial-group.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    imports: [LoadingIndicatorContainerComponent, TranslateDirective, TutorialGroupFormComponent],\r\n})\r\nexport class CreateTutorialGroupComponent implements OnInit, OnDestroy {\r\n    private activatedRoute = inject(ActivatedRoute);\r\n    private router = inject(Router);\r\n    private tutorialGroupService = inject(TutorialGroupsService);\r\n    private alertService = inject(AlertService);\r\n\r\n    tutorialGroupToCreate: TutorialGroup = new TutorialGroup();\r\n    isLoading: boolean;\r\n    course: Course;\r\n\r\n    ngUnsubscribe = new Subject<void>();\r\n\r\n    ngOnInit(): void {\r\n        this.activatedRoute.data.pipe(takeUntil(this.ngUnsubscribe)).subscribe(({ course }) => {\r\n            if (course) {\r\n                this.course = course;\r\n            }\r\n        });\r\n        this.tutorialGroupToCreate = new TutorialGroup();\r\n    }\r\n\r\n    createTutorialGroup(formData: TutorialGroupFormData) {\r\n        const { title, teachingAssistant, additionalInformation, capacity, isOnline, language, campus, schedule } = formData;\r\n        this.tutorialGroupToCreate.title = title;\r\n        this.tutorialGroupToCreate.teachingAssistant = teachingAssistant;\r\n        this.tutorialGroupToCreate.additionalInformation = additionalInformation;\r\n        this.tutorialGroupToCreate.capacity = capacity;\r\n        this.tutorialGroupToCreate.isOnline = isOnline;\r\n        this.tutorialGroupToCreate.language = language;\r\n        this.tutorialGroupToCreate.campus = campus;\r\n\r\n        if (schedule) {\r\n            this.tutorialGroupToCreate.tutorialGroupSchedule = new TutorialGroupSchedule();\r\n            if (schedule.period && schedule.period.length === 2) {\r\n                this.tutorialGroupToCreate.tutorialGroupSchedule.validFromInclusive = dayjs(schedule.period[0]);\r\n                this.tutorialGroupToCreate.tutorialGroupSchedule.validToInclusive = dayjs(schedule.period[1]);\r\n            }\r\n            this.tutorialGroupToCreate.tutorialGroupSchedule.dayOfWeek = schedule.dayOfWeek;\r\n            this.tutorialGroupToCreate.tutorialGroupSchedule.startTime = schedule.startTime;\r\n            this.tutorialGroupToCreate.tutorialGroupSchedule.endTime = schedule.endTime;\r\n            this.tutorialGroupToCreate.tutorialGroupSchedule.repetitionFrequency = schedule.repetitionFrequency;\r\n            this.tutorialGroupToCreate.tutorialGroupSchedule.location = schedule.location;\r\n        }\r\n\r\n        this.isLoading = true;\r\n\r\n        this.tutorialGroupService\r\n            .create(this.tutorialGroupToCreate, this.course.id!)\r\n            .pipe(\r\n                finalize(() => {\r\n                    this.isLoading = false;\r\n                }),\r\n                takeUntil(this.ngUnsubscribe),\r\n            )\r\n            .subscribe({\r\n                next: () => {\r\n                    this.router.navigate(['/course-management', this.course.id!, 'tutorial-groups']);\r\n                },\r\n                error: (res: HttpErrorResponse) => onError(this.alertService, res),\r\n            });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.ngUnsubscribe.next();\r\n        this.ngUnsubscribe.complete();\r\n    }\r\n}\r\n", "<jhi-loading-indicator-container [isLoading]=\"isLoading\">\r\n    <h3 jhiTranslate=\"artemisApp.pages.createTutorialGroup.title\"></h3>\r\n    @if (course) {\r\n        <jhi-tutorial-group-form [isEditMode]=\"false\" [course]=\"course\" (formSubmitted)=\"createTutorialGroup($event)\" />\r\n    }\r\n</jhi-loading-indicator-container>\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275listener", "$event", "\u0275\u0275restoreView", "_r1", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "createTutorialGroup", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "course", "CreateTutorialGroupComponent", "activatedRoute", "inject", "ActivatedRoute", "router", "Router", "tutorialGroupService", "TutorialGroupsService", "alertService", "AlertService", "tutorialGroupToCreate", "TutorialGroup", "isLoading", "ngUnsubscribe", "Subject", "ngOnInit", "data", "pipe", "takeUntil", "subscribe", "formData", "title", "teachingAssistant", "additionalInformation", "capacity", "isOnline", "language", "campus", "schedule", "tutorialGroupSchedule", "TutorialGroupSchedule", "period", "length", "validFromInclusive", "dayjs", "validToInclusive", "dayOfWeek", "startTime", "endTime", "repetitionFrequency", "location", "create", "id", "finalize", "next", "navigate", "error", "res", "onError", "ngOnDestroy", "complete", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275element", "\u0275\u0275template", "CreateTutorialGroupComponent_Conditional_4_Template", "\u0275\u0275conditional", "LoadingIndicatorContainerComponent", "TranslateDirective", "TutorialGroupFormComponent", "encapsulation", "changeDetection"]
}
