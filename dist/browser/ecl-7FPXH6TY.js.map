{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/ecl/ecl.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.2(404545bded1df6ffa41ea0af4e8ddb219018c6c1)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/ecl/ecl.ts\nvar conf = {\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]],\n  autoClosingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: \"'\",\n    close: \"'\",\n    notIn: [\"string\", \"comment\"]\n  }, {\n    open: '\"',\n    close: '\"',\n    notIn: [\"string\", \"comment\"]\n  }],\n  surroundingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: \"<\",\n    close: \">\"\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".ecl\",\n  ignoreCase: true,\n  brackets: [{\n    open: \"{\",\n    close: \"}\",\n    token: \"delimiter.curly\"\n  }, {\n    open: \"[\",\n    close: \"]\",\n    token: \"delimiter.square\"\n  }, {\n    open: \"(\",\n    close: \")\",\n    token: \"delimiter.parenthesis\"\n  }, {\n    open: \"<\",\n    close: \">\",\n    token: \"delimiter.angle\"\n  }],\n  pounds: [\"append\", \"break\", \"declare\", \"demangle\", \"end\", \"for\", \"getdatatype\", \"if\", \"inmodule\", \"loop\", \"mangle\", \"onwarning\", \"option\", \"set\", \"stored\", \"uniquename\"].join(\"|\"),\n  keywords: [\"__compressed__\", \"after\", \"all\", \"and\", \"any\", \"as\", \"atmost\", \"before\", \"beginc\", \"best\", \"between\", \"case\", \"cluster\", \"compressed\", \"compression\", \"const\", \"counter\", \"csv\", \"default\", \"descend\", \"embed\", \"encoding\", \"encrypt\", \"end\", \"endc\", \"endembed\", \"endmacro\", \"enum\", \"escape\", \"except\", \"exclusive\", \"expire\", \"export\", \"extend\", \"fail\", \"few\", \"fileposition\", \"first\", \"flat\", \"forward\", \"from\", \"full\", \"function\", \"functionmacro\", \"group\", \"grouped\", \"heading\", \"hole\", \"ifblock\", \"import\", \"in\", \"inner\", \"interface\", \"internal\", \"joined\", \"keep\", \"keyed\", \"last\", \"left\", \"limit\", \"linkcounted\", \"literal\", \"little_endian\", \"load\", \"local\", \"locale\", \"lookup\", \"lzw\", \"macro\", \"many\", \"maxcount\", \"maxlength\", \"min skew\", \"module\", \"mofn\", \"multiple\", \"named\", \"namespace\", \"nocase\", \"noroot\", \"noscan\", \"nosort\", \"not\", \"noxpath\", \"of\", \"onfail\", \"only\", \"opt\", \"or\", \"outer\", \"overwrite\", \"packed\", \"partition\", \"penalty\", \"physicallength\", \"pipe\", \"prefetch\", \"quote\", \"record\", \"repeat\", \"retry\", \"return\", \"right\", \"right1\", \"right2\", \"rows\", \"rowset\", \"scan\", \"scope\", \"self\", \"separator\", \"service\", \"shared\", \"skew\", \"skip\", \"smart\", \"soapaction\", \"sql\", \"stable\", \"store\", \"terminator\", \"thor\", \"threshold\", \"timelimit\", \"timeout\", \"token\", \"transform\", \"trim\", \"type\", \"unicodeorder\", \"unordered\", \"unsorted\", \"unstable\", \"update\", \"use\", \"validate\", \"virtual\", \"whole\", \"width\", \"wild\", \"within\", \"wnotrim\", \"xml\", \"xpath\"],\n  functions: [\"abs\", \"acos\", \"aggregate\", \"allnodes\", \"apply\", \"ascii\", \"asin\", \"assert\", \"asstring\", \"atan\", \"atan2\", \"ave\", \"build\", \"buildindex\", \"case\", \"catch\", \"choose\", \"choosen\", \"choosesets\", \"clustersize\", \"combine\", \"correlation\", \"cos\", \"cosh\", \"count\", \"covariance\", \"cron\", \"dataset\", \"dedup\", \"define\", \"denormalize\", \"dictionary\", \"distribute\", \"distributed\", \"distribution\", \"ebcdic\", \"enth\", \"error\", \"evaluate\", \"event\", \"eventextra\", \"eventname\", \"exists\", \"exp\", \"fail\", \"failcode\", \"failmessage\", \"fetch\", \"fromunicode\", \"fromxml\", \"getenv\", \"getisvalid\", \"global\", \"graph\", \"group\", \"hash\", \"hash32\", \"hash64\", \"hashcrc\", \"hashmd5\", \"having\", \"httpcall\", \"httpheader\", \"if\", \"iff\", \"index\", \"intformat\", \"isvalid\", \"iterate\", \"join\", \"keydiff\", \"keypatch\", \"keyunicode\", \"length\", \"library\", \"limit\", \"ln\", \"loadxml\", \"local\", \"log\", \"loop\", \"map\", \"matched\", \"matchlength\", \"matchposition\", \"matchtext\", \"matchunicode\", \"max\", \"merge\", \"mergejoin\", \"min\", \"nofold\", \"nolocal\", \"nonempty\", \"normalize\", \"nothor\", \"notify\", \"output\", \"parallel\", \"parse\", \"pipe\", \"power\", \"preload\", \"process\", \"project\", \"pull\", \"random\", \"range\", \"rank\", \"ranked\", \"realformat\", \"recordof\", \"regexfind\", \"regexreplace\", \"regroup\", \"rejected\", \"rollup\", \"round\", \"roundup\", \"row\", \"rowdiff\", \"sample\", \"sequential\", \"set\", \"sin\", \"sinh\", \"sizeof\", \"soapcall\", \"sort\", \"sorted\", \"sqrt\", \"stepped\", \"stored\", \"sum\", \"table\", \"tan\", \"tanh\", \"thisnode\", \"topn\", \"tounicode\", \"toxml\", \"transfer\", \"transform\", \"trim\", \"truncate\", \"typeof\", \"ungroup\", \"unicodeorder\", \"variance\", \"wait\", \"which\", \"workunit\", \"xmldecode\", \"xmlencode\", \"xmltext\", \"xmlunicode\"],\n  typesint: [\"integer\", \"unsigned\"].join(\"|\"),\n  typesnum: [\"data\", \"qstring\", \"string\", \"unicode\", \"utf8\", \"varstring\", \"varunicode\"],\n  typesone: [\"ascii\", \"big_endian\", \"boolean\", \"data\", \"decimal\", \"ebcdic\", \"grouped\", \"integer\", \"linkcounted\", \"pattern\", \"qstring\", \"real\", \"record\", \"rule\", \"set of\", \"streamed\", \"string\", \"token\", \"udecimal\", \"unicode\", \"unsigned\", \"utf8\", \"varstring\", \"varunicode\"].join(\"|\"),\n  operators: [\"+\", \"-\", \"/\", \":=\", \"<\", \"<>\", \"=\", \">\", \"\\\\\", \"and\", \"in\", \"not\", \"or\"],\n  symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n  // escape sequences\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [[/@typesint[4|8]/, \"type\"], [/#(@pounds)/, \"type\"], [/@typesone/, \"type\"], [/[a-zA-Z_$][\\w-$]*/, {\n      cases: {\n        \"@functions\": \"keyword.function\",\n        \"@keywords\": \"keyword\",\n        \"@operators\": \"operator\"\n      }\n    }],\n    // whitespace\n    {\n      include: \"@whitespace\"\n    }, [/[{}()\\[\\]]/, \"@brackets\"], [/[<>](?!@symbols)/, \"@brackets\"], [/@symbols/, {\n      cases: {\n        \"@operators\": \"delimiter\",\n        \"@default\": \"\"\n      }\n    }],\n    // numbers\n    [/[0-9_]*\\.[0-9_]+([eE][\\-+]?\\d+)?/, \"number.float\"], [/0[xX][0-9a-fA-F_]+/, \"number.hex\"], [/0[bB][01]+/, \"number.hex\"],\n    // binary: use same theme style as hex\n    [/[0-9_]+/, \"number\"],\n    // delimiter: after number because of .\\d floats\n    [/[;,.]/, \"delimiter\"],\n    // strings\n    [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"], [/\"/, \"string\", \"@string\"],\n    // characters\n    [/'[^\\\\']'/, \"string\"], [/(')(@escapes)(')/, [\"string\", \"string.escape\", \"string\"]], [/'/, \"string.invalid\"]],\n    whitespace: [[/[ \\t\\v\\f\\r\\n]+/, \"\"], [/\\/\\*/, \"comment\", \"@comment\"], [/\\/\\/.*$/, \"comment\"]],\n    comment: [[/[^\\/*]+/, \"comment\"], [/\\*\\//, \"comment\", \"@pop\"], [/[\\/*]/, \"comment\"]],\n    string: [[/[^\\\\']+/, \"string\"], [/@escapes/, \"string.escape\"], [/\\\\./, \"string.escape.invalid\"], [/'/, \"string\", \"@pop\"]]\n  }\n};\nexport { conf, language };"],"mappings":"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","names":["conf","language"],"x_google_ignoreList":[0]}