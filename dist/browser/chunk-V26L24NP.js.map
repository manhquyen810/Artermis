{"version":3,"sources":["node_modules/split.js/dist/split.es.js","src/main/webapp/app/exercises/shared/plagiarism/types/text/TextSubmissionElement.ts","src/main/webapp/app/exercises/shared/plagiarism/types/PlagiarismMatch.ts","src/main/webapp/app/exercises/shared/plagiarism/plagiarism-split-view/split-pane-header/split-pane-header.component.ts","src/main/webapp/app/exercises/shared/plagiarism/plagiarism-split-view/split-pane-header/split-pane-header.component.html","src/main/webapp/app/exercises/shared/plagiarism/plagiarism-split-view/modeling-submission-viewer/modeling-submission-viewer.component.ts","src/main/webapp/app/exercises/shared/plagiarism/plagiarism-split-view/modeling-submission-viewer/modeling-submission-viewer.component.html","src/main/webapp/app/exercises/shared/plagiarism/plagiarism-split-view/text-submission-viewer/text-submission-viewer.component.ts","src/main/webapp/app/exercises/shared/plagiarism/plagiarism-split-view/text-submission-viewer/text-submission-viewer.component.html","src/main/webapp/app/exercises/shared/plagiarism/plagiarism-split-view/plagiarism-split-view.component.ts","src/main/webapp/app/exercises/shared/plagiarism/plagiarism-split-view/plagiarism-split-view.component.html"],"sourcesContent":["// The programming goals of Split.js are to deliver readable, understandable and\n// maintainable code, while at the same time manually optimizing for tiny minified file size,\n// browser compatibility without additional requirements\n// and very few assumptions about the user's page layout.\nvar global = typeof window !== 'undefined' ? window : null;\nvar ssr = global === null;\nvar document = !ssr ? global.document : undefined;\n\n// Save a couple long function names that are used frequently.\n// This optimization saves around 400 bytes.\nvar addEventListener = 'addEventListener';\nvar removeEventListener = 'removeEventListener';\nvar getBoundingClientRect = 'getBoundingClientRect';\nvar gutterStartDragging = '_a';\nvar aGutterSize = '_b';\nvar bGutterSize = '_c';\nvar HORIZONTAL = 'horizontal';\nvar NOOP = function () {\n  return false;\n};\n\n// Helper function determines which prefixes of CSS calc we need.\n// We only need to do this once on startup, when this anonymous function is called.\n//\n// Tests -webkit, -moz and -o prefixes. Modified from StackOverflow:\n// http://stackoverflow.com/questions/16625140/js-feature-detection-to-detect-the-usage-of-webkit-calc-over-calc/16625167#16625167\nvar calc = ssr ? 'calc' : ['', '-webkit-', '-moz-', '-o-'].filter(function (prefix) {\n  var el = document.createElement('div');\n  el.style.cssText = \"width:\" + prefix + \"calc(9px)\";\n  return !!el.style.length;\n}).shift() + \"calc\";\n\n// Helper function checks if its argument is a string-like type\nvar isString = function (v) {\n  return typeof v === 'string' || v instanceof String;\n};\n\n// Helper function allows elements and string selectors to be used\n// interchangeably. In either case an element is returned. This allows us to\n// do `Split([elem1, elem2])` as well as `Split(['#id1', '#id2'])`.\nvar elementOrSelector = function (el) {\n  if (isString(el)) {\n    var ele = document.querySelector(el);\n    if (!ele) {\n      throw new Error(\"Selector \" + el + \" did not match a DOM element\");\n    }\n    return ele;\n  }\n  return el;\n};\n\n// Helper function gets a property from the properties object, with a default fallback\nvar getOption = function (options, propName, def) {\n  var value = options[propName];\n  if (value !== undefined) {\n    return value;\n  }\n  return def;\n};\nvar getGutterSize = function (gutterSize, isFirst, isLast, gutterAlign) {\n  if (isFirst) {\n    if (gutterAlign === 'end') {\n      return 0;\n    }\n    if (gutterAlign === 'center') {\n      return gutterSize / 2;\n    }\n  } else if (isLast) {\n    if (gutterAlign === 'start') {\n      return 0;\n    }\n    if (gutterAlign === 'center') {\n      return gutterSize / 2;\n    }\n  }\n  return gutterSize;\n};\n\n// Default options\nvar defaultGutterFn = function (i, gutterDirection) {\n  var gut = document.createElement('div');\n  gut.className = \"gutter gutter-\" + gutterDirection;\n  return gut;\n};\nvar defaultElementStyleFn = function (dim, size, gutSize) {\n  var style = {};\n  if (!isString(size)) {\n    style[dim] = calc + \"(\" + size + \"% - \" + gutSize + \"px)\";\n  } else {\n    style[dim] = size;\n  }\n  return style;\n};\nvar defaultGutterStyleFn = function (dim, gutSize) {\n  var obj;\n  return obj = {}, obj[dim] = gutSize + \"px\", obj;\n};\n\n// The main function to initialize a split. Split.js thinks about each pair\n// of elements as an independant pair. Dragging the gutter between two elements\n// only changes the dimensions of elements in that pair. This is key to understanding\n// how the following functions operate, since each function is bound to a pair.\n//\n// A pair object is shaped like this:\n//\n// {\n//     a: DOM element,\n//     b: DOM element,\n//     aMin: Number,\n//     bMin: Number,\n//     dragging: Boolean,\n//     parent: DOM element,\n//     direction: 'horizontal' | 'vertical'\n// }\n//\n// The basic sequence:\n//\n// 1. Set defaults to something sane. `options` doesn't have to be passed at all.\n// 2. Initialize a bunch of strings based on the direction we're splitting.\n//    A lot of the behavior in the rest of the library is paramatized down to\n//    rely on CSS strings and classes.\n// 3. Define the dragging helper functions, and a few helpers to go with them.\n// 4. Loop through the elements while pairing them off. Every pair gets an\n//    `pair` object and a gutter.\n// 5. Actually size the pair elements, insert gutters and attach event listeners.\nvar Split = function (idsOption, options) {\n  if (options === void 0) options = {};\n  if (ssr) {\n    return {};\n  }\n  var ids = idsOption;\n  var dimension;\n  var clientAxis;\n  var position;\n  var positionEnd;\n  var clientSize;\n  var elements;\n\n  // Allow HTMLCollection to be used as an argument when supported\n  if (Array.from) {\n    ids = Array.from(ids);\n  }\n\n  // All DOM elements in the split should have a common parent. We can grab\n  // the first elements parent and hope users read the docs because the\n  // behavior will be whacky otherwise.\n  var firstElement = elementOrSelector(ids[0]);\n  var parent = firstElement.parentNode;\n  var parentStyle = getComputedStyle ? getComputedStyle(parent) : null;\n  var parentFlexDirection = parentStyle ? parentStyle.flexDirection : null;\n\n  // Set default options.sizes to equal percentages of the parent element.\n  var sizes = getOption(options, 'sizes') || ids.map(function () {\n    return 100 / ids.length;\n  });\n\n  // Standardize minSize and maxSize to an array if it isn't already.\n  // This allows minSize and maxSize to be passed as a number.\n  var minSize = getOption(options, 'minSize', 100);\n  var minSizes = Array.isArray(minSize) ? minSize : ids.map(function () {\n    return minSize;\n  });\n  var maxSize = getOption(options, 'maxSize', Infinity);\n  var maxSizes = Array.isArray(maxSize) ? maxSize : ids.map(function () {\n    return maxSize;\n  });\n\n  // Get other options\n  var expandToMin = getOption(options, 'expandToMin', false);\n  var gutterSize = getOption(options, 'gutterSize', 10);\n  var gutterAlign = getOption(options, 'gutterAlign', 'center');\n  var snapOffset = getOption(options, 'snapOffset', 30);\n  var snapOffsets = Array.isArray(snapOffset) ? snapOffset : ids.map(function () {\n    return snapOffset;\n  });\n  var dragInterval = getOption(options, 'dragInterval', 1);\n  var direction = getOption(options, 'direction', HORIZONTAL);\n  var cursor = getOption(options, 'cursor', direction === HORIZONTAL ? 'col-resize' : 'row-resize');\n  var gutter = getOption(options, 'gutter', defaultGutterFn);\n  var elementStyle = getOption(options, 'elementStyle', defaultElementStyleFn);\n  var gutterStyle = getOption(options, 'gutterStyle', defaultGutterStyleFn);\n\n  // 2. Initialize a bunch of strings based on the direction we're splitting.\n  // A lot of the behavior in the rest of the library is paramatized down to\n  // rely on CSS strings and classes.\n  if (direction === HORIZONTAL) {\n    dimension = 'width';\n    clientAxis = 'clientX';\n    position = 'left';\n    positionEnd = 'right';\n    clientSize = 'clientWidth';\n  } else if (direction === 'vertical') {\n    dimension = 'height';\n    clientAxis = 'clientY';\n    position = 'top';\n    positionEnd = 'bottom';\n    clientSize = 'clientHeight';\n  }\n\n  // 3. Define the dragging helper functions, and a few helpers to go with them.\n  // Each helper is bound to a pair object that contains its metadata. This\n  // also makes it easy to store references to listeners that that will be\n  // added and removed.\n  //\n  // Even though there are no other functions contained in them, aliasing\n  // this to self saves 50 bytes or so since it's used so frequently.\n  //\n  // The pair object saves metadata like dragging state, position and\n  // event listener references.\n\n  function setElementSize(el, size, gutSize, i) {\n    // Split.js allows setting sizes via numbers (ideally), or if you must,\n    // by string, like '300px'. This is less than ideal, because it breaks\n    // the fluid layout that `calc(% - px)` provides. You're on your own if you do that,\n    // make sure you calculate the gutter size by hand.\n    var style = elementStyle(dimension, size, gutSize, i);\n    Object.keys(style).forEach(function (prop) {\n      // eslint-disable-next-line no-param-reassign\n      el.style[prop] = style[prop];\n    });\n  }\n  function setGutterSize(gutterElement, gutSize, i) {\n    var style = gutterStyle(dimension, gutSize, i);\n    Object.keys(style).forEach(function (prop) {\n      // eslint-disable-next-line no-param-reassign\n      gutterElement.style[prop] = style[prop];\n    });\n  }\n  function getSizes() {\n    return elements.map(function (element) {\n      return element.size;\n    });\n  }\n\n  // Supports touch events, but not multitouch, so only the first\n  // finger `touches[0]` is counted.\n  function getMousePosition(e) {\n    if ('touches' in e) {\n      return e.touches[0][clientAxis];\n    }\n    return e[clientAxis];\n  }\n\n  // Actually adjust the size of elements `a` and `b` to `offset` while dragging.\n  // calc is used to allow calc(percentage + gutterpx) on the whole split instance,\n  // which allows the viewport to be resized without additional logic.\n  // Element a's size is the same as offset. b's size is total size - a size.\n  // Both sizes are calculated from the initial parent percentage,\n  // then the gutter size is subtracted.\n  function adjust(offset) {\n    var a = elements[this.a];\n    var b = elements[this.b];\n    var percentage = a.size + b.size;\n    a.size = offset / this.size * percentage;\n    b.size = percentage - offset / this.size * percentage;\n    setElementSize(a.element, a.size, this[aGutterSize], a.i);\n    setElementSize(b.element, b.size, this[bGutterSize], b.i);\n  }\n\n  // drag, where all the magic happens. The logic is really quite simple:\n  //\n  // 1. Ignore if the pair is not dragging.\n  // 2. Get the offset of the event.\n  // 3. Snap offset to min if within snappable range (within min + snapOffset).\n  // 4. Actually adjust each element in the pair to offset.\n  //\n  // ---------------------------------------------------------------------\n  // |    | <- a.minSize               ||              b.minSize -> |    |\n  // |    |  | <- this.snapOffset      ||     this.snapOffset -> |  |    |\n  // |    |  |                         ||                        |  |    |\n  // |    |  |                         ||                        |  |    |\n  // ---------------------------------------------------------------------\n  // | <- this.start                                        this.size -> |\n  function drag(e) {\n    var offset;\n    var a = elements[this.a];\n    var b = elements[this.b];\n    if (!this.dragging) {\n      return;\n    }\n\n    // Get the offset of the event from the first side of the\n    // pair `this.start`. Then offset by the initial position of the\n    // mouse compared to the gutter size.\n    offset = getMousePosition(e) - this.start + (this[aGutterSize] - this.dragOffset);\n    if (dragInterval > 1) {\n      offset = Math.round(offset / dragInterval) * dragInterval;\n    }\n\n    // If within snapOffset of min or max, set offset to min or max.\n    // snapOffset buffers a.minSize and b.minSize, so logic is opposite for both.\n    // Include the appropriate gutter sizes to prevent overflows.\n    if (offset <= a.minSize + a.snapOffset + this[aGutterSize]) {\n      offset = a.minSize + this[aGutterSize];\n    } else if (offset >= this.size - (b.minSize + b.snapOffset + this[bGutterSize])) {\n      offset = this.size - (b.minSize + this[bGutterSize]);\n    }\n    if (offset >= a.maxSize - a.snapOffset + this[aGutterSize]) {\n      offset = a.maxSize + this[aGutterSize];\n    } else if (offset <= this.size - (b.maxSize - b.snapOffset + this[bGutterSize])) {\n      offset = this.size - (b.maxSize + this[bGutterSize]);\n    }\n\n    // Actually adjust the size.\n    adjust.call(this, offset);\n\n    // Call the drag callback continously. Don't do anything too intensive\n    // in this callback.\n    getOption(options, 'onDrag', NOOP)(getSizes());\n  }\n\n  // Cache some important sizes when drag starts, so we don't have to do that\n  // continously:\n  //\n  // `size`: The total size of the pair. First + second + first gutter + second gutter.\n  // `start`: The leading side of the first element.\n  //\n  // ------------------------------------------------\n  // |      aGutterSize -> |||                      |\n  // |                     |||                      |\n  // |                     |||                      |\n  // |                     ||| <- bGutterSize       |\n  // ------------------------------------------------\n  // | <- start                             size -> |\n  function calculateSizes() {\n    // Figure out the parent size minus padding.\n    var a = elements[this.a].element;\n    var b = elements[this.b].element;\n    var aBounds = a[getBoundingClientRect]();\n    var bBounds = b[getBoundingClientRect]();\n    this.size = aBounds[dimension] + bBounds[dimension] + this[aGutterSize] + this[bGutterSize];\n    this.start = aBounds[position];\n    this.end = aBounds[positionEnd];\n  }\n  function innerSize(element) {\n    // Return nothing if getComputedStyle is not supported (< IE9)\n    // Or if parent element has no layout yet\n    if (!getComputedStyle) {\n      return null;\n    }\n    var computedStyle = getComputedStyle(element);\n    if (!computedStyle) {\n      return null;\n    }\n    var size = element[clientSize];\n    if (size === 0) {\n      return null;\n    }\n    if (direction === HORIZONTAL) {\n      size -= parseFloat(computedStyle.paddingLeft) + parseFloat(computedStyle.paddingRight);\n    } else {\n      size -= parseFloat(computedStyle.paddingTop) + parseFloat(computedStyle.paddingBottom);\n    }\n    return size;\n  }\n\n  // When specifying percentage sizes that are less than the computed\n  // size of the element minus the gutter, the lesser percentages must be increased\n  // (and decreased from the other elements) to make space for the pixels\n  // subtracted by the gutters.\n  function trimToMin(sizesToTrim) {\n    // Try to get inner size of parent element.\n    // If it's no supported, return original sizes.\n    var parentSize = innerSize(parent);\n    if (parentSize === null) {\n      return sizesToTrim;\n    }\n    if (minSizes.reduce(function (a, b) {\n      return a + b;\n    }, 0) > parentSize) {\n      return sizesToTrim;\n    }\n\n    // Keep track of the excess pixels, the amount of pixels over the desired percentage\n    // Also keep track of the elements with pixels to spare, to decrease after if needed\n    var excessPixels = 0;\n    var toSpare = [];\n    var pixelSizes = sizesToTrim.map(function (size, i) {\n      // Convert requested percentages to pixel sizes\n      var pixelSize = parentSize * size / 100;\n      var elementGutterSize = getGutterSize(gutterSize, i === 0, i === sizesToTrim.length - 1, gutterAlign);\n      var elementMinSize = minSizes[i] + elementGutterSize;\n\n      // If element is too smal, increase excess pixels by the difference\n      // and mark that it has no pixels to spare\n      if (pixelSize < elementMinSize) {\n        excessPixels += elementMinSize - pixelSize;\n        toSpare.push(0);\n        return elementMinSize;\n      }\n\n      // Otherwise, mark the pixels it has to spare and return it's original size\n      toSpare.push(pixelSize - elementMinSize);\n      return pixelSize;\n    });\n\n    // If nothing was adjusted, return the original sizes\n    if (excessPixels === 0) {\n      return sizesToTrim;\n    }\n    return pixelSizes.map(function (pixelSize, i) {\n      var newPixelSize = pixelSize;\n\n      // While there's still pixels to take, and there's enough pixels to spare,\n      // take as many as possible up to the total excess pixels\n      if (excessPixels > 0 && toSpare[i] - excessPixels > 0) {\n        var takenPixels = Math.min(excessPixels, toSpare[i] - excessPixels);\n\n        // Subtract the amount taken for the next iteration\n        excessPixels -= takenPixels;\n        newPixelSize = pixelSize - takenPixels;\n      }\n\n      // Return the pixel size adjusted as a percentage\n      return newPixelSize / parentSize * 100;\n    });\n  }\n\n  // stopDragging is very similar to startDragging in reverse.\n  function stopDragging() {\n    var self = this;\n    var a = elements[self.a].element;\n    var b = elements[self.b].element;\n    if (self.dragging) {\n      getOption(options, 'onDragEnd', NOOP)(getSizes());\n    }\n    self.dragging = false;\n\n    // Remove the stored event listeners. This is why we store them.\n    global[removeEventListener]('mouseup', self.stop);\n    global[removeEventListener]('touchend', self.stop);\n    global[removeEventListener]('touchcancel', self.stop);\n    global[removeEventListener]('mousemove', self.move);\n    global[removeEventListener]('touchmove', self.move);\n\n    // Clear bound function references\n    self.stop = null;\n    self.move = null;\n    a[removeEventListener]('selectstart', NOOP);\n    a[removeEventListener]('dragstart', NOOP);\n    b[removeEventListener]('selectstart', NOOP);\n    b[removeEventListener]('dragstart', NOOP);\n    a.style.userSelect = '';\n    a.style.webkitUserSelect = '';\n    a.style.MozUserSelect = '';\n    a.style.pointerEvents = '';\n    b.style.userSelect = '';\n    b.style.webkitUserSelect = '';\n    b.style.MozUserSelect = '';\n    b.style.pointerEvents = '';\n    self.gutter.style.cursor = '';\n    self.parent.style.cursor = '';\n    document.body.style.cursor = '';\n  }\n\n  // startDragging calls `calculateSizes` to store the inital size in the pair object.\n  // It also adds event listeners for mouse/touch events,\n  // and prevents selection while dragging so avoid the selecting text.\n  function startDragging(e) {\n    // Right-clicking can't start dragging.\n    if ('button' in e && e.button !== 0) {\n      return;\n    }\n\n    // Alias frequently used variables to save space. 200 bytes.\n    var self = this;\n    var a = elements[self.a].element;\n    var b = elements[self.b].element;\n\n    // Call the onDragStart callback.\n    if (!self.dragging) {\n      getOption(options, 'onDragStart', NOOP)(getSizes());\n    }\n\n    // Don't actually drag the element. We emulate that in the drag function.\n    e.preventDefault();\n\n    // Set the dragging property of the pair object.\n    self.dragging = true;\n\n    // Create two event listeners bound to the same pair object and store\n    // them in the pair object.\n    self.move = drag.bind(self);\n    self.stop = stopDragging.bind(self);\n\n    // All the binding. `window` gets the stop events in case we drag out of the elements.\n    global[addEventListener]('mouseup', self.stop);\n    global[addEventListener]('touchend', self.stop);\n    global[addEventListener]('touchcancel', self.stop);\n    global[addEventListener]('mousemove', self.move);\n    global[addEventListener]('touchmove', self.move);\n\n    // Disable selection. Disable!\n    a[addEventListener]('selectstart', NOOP);\n    a[addEventListener]('dragstart', NOOP);\n    b[addEventListener]('selectstart', NOOP);\n    b[addEventListener]('dragstart', NOOP);\n    a.style.userSelect = 'none';\n    a.style.webkitUserSelect = 'none';\n    a.style.MozUserSelect = 'none';\n    a.style.pointerEvents = 'none';\n    b.style.userSelect = 'none';\n    b.style.webkitUserSelect = 'none';\n    b.style.MozUserSelect = 'none';\n    b.style.pointerEvents = 'none';\n\n    // Set the cursor at multiple levels\n    self.gutter.style.cursor = cursor;\n    self.parent.style.cursor = cursor;\n    document.body.style.cursor = cursor;\n\n    // Cache the initial sizes of the pair.\n    calculateSizes.call(self);\n\n    // Determine the position of the mouse compared to the gutter\n    self.dragOffset = getMousePosition(e) - self.end;\n  }\n\n  // adjust sizes to ensure percentage is within min size and gutter.\n  sizes = trimToMin(sizes);\n\n  // 5. Create pair and element objects. Each pair has an index reference to\n  // elements `a` and `b` of the pair (first and second elements).\n  // Loop through the elements while pairing them off. Every pair gets a\n  // `pair` object and a gutter.\n  //\n  // Basic logic:\n  //\n  // - Starting with the second element `i > 0`, create `pair` objects with\n  //   `a = i - 1` and `b = i`\n  // - Set gutter sizes based on the _pair_ being first/last. The first and last\n  //   pair have gutterSize / 2, since they only have one half gutter, and not two.\n  // - Create gutter elements and add event listeners.\n  // - Set the size of the elements, minus the gutter sizes.\n  //\n  // -----------------------------------------------------------------------\n  // |     i=0     |         i=1         |        i=2       |      i=3     |\n  // |             |                     |                  |              |\n  // |           pair 0                pair 1             pair 2           |\n  // |             |                     |                  |              |\n  // -----------------------------------------------------------------------\n  var pairs = [];\n  elements = ids.map(function (id, i) {\n    // Create the element object.\n    var element = {\n      element: elementOrSelector(id),\n      size: sizes[i],\n      minSize: minSizes[i],\n      maxSize: maxSizes[i],\n      snapOffset: snapOffsets[i],\n      i: i\n    };\n    var pair;\n    if (i > 0) {\n      // Create the pair object with its metadata.\n      pair = {\n        a: i - 1,\n        b: i,\n        dragging: false,\n        direction: direction,\n        parent: parent\n      };\n      pair[aGutterSize] = getGutterSize(gutterSize, i - 1 === 0, false, gutterAlign);\n      pair[bGutterSize] = getGutterSize(gutterSize, false, i === ids.length - 1, gutterAlign);\n\n      // if the parent has a reverse flex-direction, switch the pair elements.\n      if (parentFlexDirection === 'row-reverse' || parentFlexDirection === 'column-reverse') {\n        var temp = pair.a;\n        pair.a = pair.b;\n        pair.b = temp;\n      }\n    }\n\n    // Determine the size of the current element. IE8 is supported by\n    // staticly assigning sizes without draggable gutters. Assigns a string\n    // to `size`.\n    //\n    // Create gutter elements for each pair.\n    if (i > 0) {\n      var gutterElement = gutter(i, direction, element.element);\n      setGutterSize(gutterElement, gutterSize, i);\n\n      // Save bound event listener for removal later\n      pair[gutterStartDragging] = startDragging.bind(pair);\n\n      // Attach bound event listener\n      gutterElement[addEventListener]('mousedown', pair[gutterStartDragging]);\n      gutterElement[addEventListener]('touchstart', pair[gutterStartDragging]);\n      parent.insertBefore(gutterElement, element.element);\n      pair.gutter = gutterElement;\n    }\n    setElementSize(element.element, element.size, getGutterSize(gutterSize, i === 0, i === ids.length - 1, gutterAlign), i);\n\n    // After the first iteration, and we have a pair object, append it to the\n    // list of pairs.\n    if (i > 0) {\n      pairs.push(pair);\n    }\n    return element;\n  });\n  function adjustToMin(element) {\n    var isLast = element.i === pairs.length;\n    var pair = isLast ? pairs[element.i - 1] : pairs[element.i];\n    calculateSizes.call(pair);\n    var size = isLast ? pair.size - element.minSize - pair[bGutterSize] : element.minSize + pair[aGutterSize];\n    adjust.call(pair, size);\n  }\n  elements.forEach(function (element) {\n    var computedSize = element.element[getBoundingClientRect]()[dimension];\n    if (computedSize < element.minSize) {\n      if (expandToMin) {\n        adjustToMin(element);\n      } else {\n        // eslint-disable-next-line no-param-reassign\n        element.minSize = computedSize;\n      }\n    }\n  });\n  function setSizes(newSizes) {\n    var trimmed = trimToMin(newSizes);\n    trimmed.forEach(function (newSize, i) {\n      if (i > 0) {\n        var pair = pairs[i - 1];\n        var a = elements[pair.a];\n        var b = elements[pair.b];\n        a.size = trimmed[i - 1];\n        b.size = newSize;\n        setElementSize(a.element, a.size, pair[aGutterSize], a.i);\n        setElementSize(b.element, b.size, pair[bGutterSize], b.i);\n      }\n    });\n  }\n  function destroy(preserveStyles, preserveGutter) {\n    pairs.forEach(function (pair) {\n      if (preserveGutter !== true) {\n        pair.parent.removeChild(pair.gutter);\n      } else {\n        pair.gutter[removeEventListener]('mousedown', pair[gutterStartDragging]);\n        pair.gutter[removeEventListener]('touchstart', pair[gutterStartDragging]);\n      }\n      if (preserveStyles !== true) {\n        var style = elementStyle(dimension, pair.a.size, pair[aGutterSize]);\n        Object.keys(style).forEach(function (prop) {\n          elements[pair.a].element.style[prop] = '';\n          elements[pair.b].element.style[prop] = '';\n        });\n      }\n    });\n  }\n  return {\n    setSizes: setSizes,\n    getSizes: getSizes,\n    collapse: function collapse(i) {\n      adjustToMin(elements[i]);\n    },\n    destroy: destroy,\n    parent: parent,\n    pairs: pairs\n  };\n};\nexport default Split;","import { PlagiarismSubmissionElement } from '../PlagiarismSubmissionElement';\r\n\r\nexport class FromToElement {\r\n    from: TextSubmissionElement;\r\n    to: TextSubmissionElement;\r\n    constructor(from: TextSubmissionElement, to: TextSubmissionElement) {\r\n        this.from = from;\r\n        this.to = to;\r\n    }\r\n}\r\n\r\nexport class TextSubmissionElement extends PlagiarismSubmissionElement {\r\n    id: number;\r\n    column: number;\r\n    line: number;\r\n    file: string;\r\n    length: number;\r\n}\r\n","export class SimpleMatch {\r\n    start: number;\r\n    length: number;\r\n\r\n    constructor(start: number, length: number) {\r\n        this.start = start;\r\n        this.length = length;\r\n    }\r\n}\r\n\r\n/**\r\n * A `PlagiarismMatch` is a sequence of identical elements of both submissions.\r\n */\r\nexport class PlagiarismMatch {\r\n    /**\r\n     * Index of the first element of submission A that is part of this match.\r\n     */\r\n    startA: number;\r\n\r\n    /**\r\n     * Index of the first element of submission B that is part of this match.\r\n     */\r\n    startB: number;\r\n\r\n    /**\r\n     * Length of the sequence of identical elements, beginning at startA and startB, respectively.\r\n     */\r\n    length: number;\r\n}\r\n","import { Component, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges, input } from '@angular/core';\r\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { TextPlagiarismFileElement } from 'app/exercises/shared/plagiarism/types/text/TextPlagiarismFileElement';\r\nimport { NgbDropdown, NgbDropdownItem } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgClass } from '@angular/common';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n/**\r\n * A file name that additionally stores if a plagiarism match has been found for it.\r\n */\r\nexport type FileWithHasMatch = {\r\n    file: string;\r\n    hasMatch: boolean;\r\n};\r\n\r\n@Component({\r\n    selector: 'jhi-split-pane-header',\r\n    templateUrl: './split-pane-header.component.html',\r\n    styleUrls: ['./split-pane-header.component.scss'],\r\n    imports: [NgbDropdown, NgClass, FaIconComponent, NgbDropdownItem, TranslateDirective, ArtemisTranslatePipe],\r\n})\r\nexport class SplitPaneHeaderComponent implements OnChanges, OnInit, OnDestroy {\r\n    @Input() files: FileWithHasMatch[];\r\n    @Input() studentLogin: string;\r\n    fileSelectedSubject = input<Subject<TextPlagiarismFileElement>>();\r\n    isLockFilesEnabled = input<boolean>();\r\n    showFilesSubject = input<Subject<boolean>>();\r\n    dropdownHoverSubject = input<Subject<TextPlagiarismFileElement>>();\r\n\r\n    @Output() selectFile = new EventEmitter<string>();\r\n\r\n    public showFiles = false;\r\n    public activeFileIndex = 0;\r\n\r\n    private fileSelectSubscription?: Subscription;\r\n    private showFilesSubscription?: Subscription;\r\n    private dropdownHoverSubscription?: Subscription;\r\n\r\n    // Icons\r\n    faChevronDown = faChevronDown;\r\n    hoveredFileIndex: number;\r\n\r\n    ngOnInit(): void {\r\n        this.subscribeToFileSelection();\r\n        this.subscribeToShowFiles();\r\n        this.subscribeToDropdownHover();\r\n    }\r\n\r\n    /**\r\n     * subscribes to listening onto file changes in component instance\r\n     * @private helper method\r\n     */\r\n    private subscribeToFileSelection(): void {\r\n        this.fileSelectSubscription = this.fileSelectedSubject()!.subscribe((textPlagiarismElement) => {\r\n            if (this.isLockFilesEnabled()) {\r\n                this.handleLockedFileSelection(textPlagiarismElement.file, textPlagiarismElement.idx);\r\n            }\r\n        });\r\n    }\r\n\r\n    private handleLockedFileSelection(file: FileWithHasMatch, idx: number): void {\r\n        const index = this.files[idx]?.file === file.file ? idx : this.getIndexOf(file);\r\n\r\n        if (index >= 0) {\r\n            this.handleFileSelect(file, index, false);\r\n        } else {\r\n            this.showFiles = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * subscribes to listening onto dropdown toggle in component instance\r\n     * @private helper method\r\n     */\r\n    private subscribeToShowFiles(): void {\r\n        this.showFilesSubscription = this.showFilesSubject()?.subscribe((showFiles) => {\r\n            if (this.isLockFilesEnabled()! || (!this.isLockFilesEnabled()! && !showFiles)) {\r\n                this.toggleShowFiles(false, showFiles);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * subscribes to listening onto mouse enter changes in dropdown in component instance\r\n     * @private helper method\r\n     */\r\n    private subscribeToDropdownHover(): void {\r\n        this.dropdownHoverSubscription = this.dropdownHoverSubject()?.subscribe((textPlagiarismElement) => {\r\n            if (this.isLockFilesEnabled()) {\r\n                this.handleDropdownHover(textPlagiarismElement.file, textPlagiarismElement.idx);\r\n            }\r\n        });\r\n    }\r\n\r\n    private handleDropdownHover(file: FileWithHasMatch, idx: number): void {\r\n        const index = this.files[idx]?.file === file.file ? idx : this.getIndexOf(file);\r\n\r\n        this.hoveredFileIndex = index >= 0 ? index : -1;\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.files) {\r\n            const fileWithHasMatch: FileWithHasMatch[] = changes.files.currentValue;\r\n\r\n            this.activeFileIndex = 0;\r\n\r\n            if (this.hasFiles()) {\r\n                this.selectFile.emit(fileWithHasMatch[0].file);\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.fileSelectSubscription?.unsubscribe();\r\n        this.showFilesSubscription?.unsubscribe();\r\n        this.dropdownHoverSubscription?.unsubscribe();\r\n    }\r\n\r\n    hasActiveFile(): boolean {\r\n        return this.hasFiles() && this.activeFileIndex < this.files.length;\r\n    }\r\n\r\n    getActiveFile(): string {\r\n        return this.files[this.activeFileIndex].file;\r\n    }\r\n\r\n    /**\r\n     * handles selection of file from dropdown, propagates change to fileslectionsubject component for lock sync\r\n     * @param file to be selected\r\n     * @param idx index of the file from the dropdown\r\n     * @param propagateChanges propagate changes to listeners subscribed to fileSelectedSubject\r\n     */\r\n    handleFileSelect(file: FileWithHasMatch, idx: number, propagateChanges: boolean): void {\r\n        if (propagateChanges) {\r\n            this.fileSelectedSubject()!.next({ idx: idx, file: file });\r\n            file.hasMatch = true;\r\n        }\r\n        this.activeFileIndex = idx;\r\n        this.showFiles = false;\r\n        this.selectFile.emit(file.file);\r\n    }\r\n\r\n    hasFiles(): boolean {\r\n        return !!this.files?.length;\r\n    }\r\n\r\n    /**\r\n     * Toggles the dropdown visibility and optionally propagates changes to the parent component.\r\n     * @param showFiles Optional toggle status; if undefined, the status will be toggled.\r\n     * @param propagateChanges Whether to propagate the change to the parent component.\r\n     */\r\n    toggleShowFiles(propagateChanges: boolean, showFiles?: boolean): void {\r\n        if (this.hasFiles()) {\r\n            this.showFiles = showFiles !== undefined ? showFiles : !this.showFiles;\r\n\r\n            if (propagateChanges) {\r\n                this.showFilesSubject()!.next(this.showFiles);\r\n            }\r\n        }\r\n    }\r\n\r\n    triggerMouseEnter(file: FileWithHasMatch, idx: number) {\r\n        const subject = this.dropdownHoverSubject();\r\n        if (subject) {\r\n            subject.next({ idx, file });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * gets index of the file if it exists\r\n     * @param file The file to look up.\r\n     * @returns index if found, -1 otherwise\r\n     */\r\n    private getIndexOf(file: FileWithHasMatch): number {\r\n        return this.files.findIndex((f) => f.file === file.file);\r\n    }\r\n}\r\n","<div class=\"split-pane-header\" ngbDropdown>\r\n    <div class=\"split-pane-header-top\" data-toggle=\"dropdown\" [ngClass]=\"{ active: showFiles, clickable: hasFiles() }\" (click)=\"toggleShowFiles(true)\">\r\n        @if (hasActiveFile()) {\r\n            <div class=\"split-pane-header-file-name\">\r\n                <fa-icon class=\"file-arrow-down\" [icon]=\"faChevronDown\" />\r\n                <span class=\"split-pane-header-selected-file\">{{ getActiveFile() }}</span>\r\n            </div>\r\n        }\r\n        <div>{{ studentLogin || ('artemisApp.plagiarism.unknownStudent' | artemisTranslate) }}</div>\r\n    </div>\r\n    @if (showFiles) {\r\n        <ul (mouseleave)=\"toggleShowFiles(true, false)\" class=\"split-pane-header-files\">\r\n            @for (file of files; track file; let idx = $index) {\r\n                <li\r\n                    class=\"split-pane-header-file\"\r\n                    ngbDropdownItem\r\n                    (mouseenter)=\"triggerMouseEnter(file, idx)\"\r\n                    (click)=\"handleFileSelect(file, idx, true)\"\r\n                    [ngClass]=\"{ hover: idx === hoveredFileIndex }\"\r\n                >\r\n                    <span [class.split-pane-header-file-with-match]=\"file.hasMatch\">{{ file.file }}</span>\r\n                </li>\r\n            }\r\n            @if (!hasFiles()) {\r\n                <li jhiTranslate=\"artemisApp.plagiarism.noFilesFound\"></li>\r\n            }\r\n        </ul>\r\n    }\r\n</div>\r\n","import { Component, Input, OnChanges, SimpleChanges, inject } from '@angular/core';\r\nimport { ModelingSubmissionService } from 'app/exercises/modeling/participate/modeling-submission.service';\r\nimport { ModelingEditorComponent } from 'app/exercises/modeling/shared/modeling-editor.component';\r\nimport { PlagiarismSubmission } from 'app/exercises/shared/plagiarism/types/PlagiarismSubmission';\r\nimport { ModelingSubmissionElement } from 'app/exercises/shared/plagiarism/types/modeling/ModelingSubmissionElement';\r\nimport { ModelingExercise } from 'app/entities/modeling-exercise.model';\r\nimport { ModelingSubmission } from 'app/entities/modeling-submission.model';\r\nimport { UMLModel } from '@ls1intum/apollon';\r\nimport { SplitPaneHeaderComponent } from '../split-pane-header/split-pane-header.component';\r\n\r\n@Component({\r\n    selector: 'jhi-modeling-submission-viewer',\r\n    styleUrls: ['./modeling-submission-viewer.component.scss'],\r\n    templateUrl: './modeling-submission-viewer.component.html',\r\n    imports: [SplitPaneHeaderComponent, ModelingEditorComponent],\r\n})\r\nexport class ModelingSubmissionViewerComponent implements OnChanges {\r\n    private modelingSubmissionService = inject(ModelingSubmissionService);\r\n\r\n    @Input() exercise: ModelingExercise;\r\n    @Input() plagiarismSubmission: PlagiarismSubmission<ModelingSubmissionElement>;\r\n    @Input() hideContent: boolean;\r\n\r\n    public loading: boolean;\r\n    public submissionModel: UMLModel;\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes.plagiarismSubmission) {\r\n            const currentPlagiarismSubmission: PlagiarismSubmission<ModelingSubmissionElement> = changes.plagiarismSubmission.currentValue;\r\n\r\n            if (!this.hideContent) {\r\n                this.loading = true;\r\n                this.modelingSubmissionService.getSubmissionWithoutLock(currentPlagiarismSubmission.submissionId).subscribe({\r\n                    next: (submission: ModelingSubmission) => {\r\n                        this.loading = false;\r\n                        this.submissionModel = JSON.parse(submission.model!) as UMLModel;\r\n                    },\r\n                    error: () => {\r\n                        this.loading = false;\r\n                    },\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\n","<jhi-split-pane-header studentLogin=\"{{ plagiarismSubmission?.studentLogin }}\" />\r\n@if (!loading) {\r\n    <jhi-modeling-editor [umlModel]=\"submissionModel\" [diagramType]=\"exercise.diagramType\" [readOnly]=\"true\" />\r\n}\r\n@if (loading) {\r\n    <div class=\"plagiarism-submission-loader\">\r\n        <div class=\"spinner-border text-primary\" role=\"status\">\r\n            <span class=\"sr-only\">Loading...</span>\r\n        </div>\r\n    </div>\r\n}\r\n","import { Component, Input, OnChanges, SimpleChanges, ViewEncapsulation, inject } from '@angular/core';\r\nimport { TextSubmissionService } from 'app/exercises/text/participate/text-submission.service';\r\nimport { PlagiarismSubmission } from 'app/exercises/shared/plagiarism/types/PlagiarismSubmission';\r\nimport { TextSubmission } from 'app/entities/text/text-submission.model';\r\nimport { FromToElement, TextSubmissionElement } from 'app/exercises/shared/plagiarism/types/text/TextSubmissionElement';\r\nimport { TextExercise } from 'app/entities/text/text-exercise.model';\r\nimport { ProgrammingExercise } from 'app/entities/programming/programming-exercise.model';\r\nimport { ExerciseType } from 'app/entities/exercise.model';\r\nimport { DomainChange, DomainType, FileType } from 'app/exercises/programming/shared/code-editor/model/code-editor.model';\r\nimport { CodeEditorRepositoryFileService } from 'app/exercises/programming/shared/code-editor/service/code-editor-repository.service';\r\nimport { FileWithHasMatch } from 'app/exercises/shared/plagiarism/plagiarism-split-view/split-pane-header/split-pane-header.component';\r\nimport { escape } from 'lodash-es';\r\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\r\nimport { TEXT_FILE_EXTENSIONS } from 'app/shared/constants/file-extensions.constants';\r\nimport { Subject } from 'rxjs';\r\nimport { TextPlagiarismFileElement } from 'app/exercises/shared/plagiarism/types/text/TextPlagiarismFileElement';\r\nimport { SplitPaneHeaderComponent } from '../split-pane-header/split-pane-header.component';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { NgClass } from '@angular/common';\r\n\r\ntype FilesWithType = { [p: string]: FileType };\r\n\r\n@Component({\r\n    selector: 'jhi-text-submission-viewer',\r\n    styleUrls: ['./text-submission-viewer.component.scss'],\r\n    templateUrl: './text-submission-viewer.component.html',\r\n    encapsulation: ViewEncapsulation.None,\r\n    imports: [SplitPaneHeaderComponent, FaIconComponent, TranslateDirective, NgClass],\r\n})\r\nexport class TextSubmissionViewerComponent implements OnChanges {\r\n    private repositoryService = inject(CodeEditorRepositoryFileService);\r\n    private textSubmissionService = inject(TextSubmissionService);\r\n\r\n    @Input() exercise: ProgrammingExercise | TextExercise;\r\n    @Input() matches: Map<string, FromToElement[]>;\r\n    @Input() plagiarismSubmission: PlagiarismSubmission<TextSubmissionElement>;\r\n    @Input() hideContent: boolean;\r\n    @Input() fileSelectedSubject!: Subject<TextPlagiarismFileElement>;\r\n    @Input() isLockFilesEnabled: boolean;\r\n    @Input() showFilesSubject!: Subject<boolean>;\r\n    @Input() dropdownHoverSubject!: Subject<TextPlagiarismFileElement>;\r\n\r\n    /**\r\n     * Name of the currently selected file.\r\n     */\r\n    public currentFile: string;\r\n\r\n    /**\r\n     * Content of the currently selected file.\r\n     */\r\n    public fileContent: string;\r\n\r\n    /**\r\n     * List of files the given submission consists of.\r\n     * `null` for text exercises.\r\n     */\r\n    public files: FileWithHasMatch[];\r\n\r\n    /**\r\n     * True, if the given exercise is of type 'programming'.\r\n     */\r\n    public isProgrammingExercise: boolean;\r\n\r\n    /**\r\n     * True, if the file content for the given submission is being loaded.\r\n     */\r\n    public loading: boolean;\r\n\r\n    /**\r\n     * Token that marks the beginning of a highlighted match.\r\n     */\r\n    private readonly tokenStart = '<span class=\"plagiarism-match\">';\r\n\r\n    /**\r\n     * Token that marks the end of a highlighted match.\r\n     */\r\n    private readonly tokenEnd = '</span>';\r\n\r\n    /**\r\n     * True if currently selected file is not a text file.\r\n     */\r\n    binaryFile?: boolean;\r\n\r\n    /**\r\n     * True if fetching submission files resulted in an error.\r\n     */\r\n    cannotLoadFiles = false;\r\n\r\n    faExclamationTriangle = faExclamationTriangle;\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes.plagiarismSubmission) {\r\n            const currentPlagiarismSubmission: PlagiarismSubmission<TextSubmissionElement> = changes.plagiarismSubmission.currentValue;\r\n            if (!this.hideContent) {\r\n                this.loading = true;\r\n\r\n                if (this.exercise.type === ExerciseType.PROGRAMMING) {\r\n                    this.loadProgrammingExercise(currentPlagiarismSubmission);\r\n                } else {\r\n                    this.loadTextExercise(currentPlagiarismSubmission);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initializes this component with a programming exercise submission.\r\n     *\r\n     * @param currentPlagiarismSubmission The submission to load the plagiarism information for.\r\n     */\r\n    private loadProgrammingExercise(currentPlagiarismSubmission: PlagiarismSubmission<TextSubmissionElement>) {\r\n        const domain: DomainChange = [DomainType.PARTICIPATION, { id: currentPlagiarismSubmission.submissionId }];\r\n        this.repositoryService.getRepositoryContentForPlagiarismView(domain).subscribe({\r\n            next: (files) => {\r\n                this.cannotLoadFiles = false;\r\n                this.isProgrammingExercise = true;\r\n                this.loading = false;\r\n                this.files = this.programmingExerciseFilesWithMatches(files);\r\n            },\r\n            error: () => {\r\n                this.cannotLoadFiles = true;\r\n                this.loading = false;\r\n            },\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Computes the list of all files that should be shown for the plagiarism view.\r\n     *\r\n     * @param files An unfiltered list of files.\r\n     * @return A sorted list of files that should be shown for the plagiarism view.\r\n     */\r\n    private programmingExerciseFilesWithMatches(files: FilesWithType): Array<FileWithHasMatch> {\r\n        return this.filterFiles(files)\r\n            .map((file) => ({ file, hasMatch: this.hasMatch(file) }))\r\n            .sort(TextSubmissionViewerComponent.compareFileWithHasMatch);\r\n    }\r\n\r\n    /**\r\n     * Compares two files.\r\n     *\r\n     * Files which have got a match have got precedence over ones which don’t.\r\n     * If two files either both or neither have a match, then they are sorted lexicographically.\r\n     *\r\n     * @param file1 Some file with information if it has a match.\r\n     * @param file2 Some other file with information if it has a match.\r\n     * @return `-1`, if `file1` is smaller according to the sorting order described above, `1` otherwise.\r\n     */\r\n    private static compareFileWithHasMatch(file1: FileWithHasMatch, file2: FileWithHasMatch): number {\r\n        if (file1.hasMatch === file2.hasMatch) {\r\n            return file1.file.localeCompare(file2.file);\r\n        } else if (file1.hasMatch) {\r\n            return -1;\r\n        } else {\r\n            return 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initializes this component with a text exercise submission.\r\n     *\r\n     * @param currentPlagiarismSubmission The submission to load the plagiarism information for.\r\n     */\r\n    private loadTextExercise(currentPlagiarismSubmission: PlagiarismSubmission<TextSubmissionElement>) {\r\n        this.isProgrammingExercise = false;\r\n\r\n        this.textSubmissionService.getTextSubmission(currentPlagiarismSubmission.submissionId).subscribe({\r\n            next: (submission: TextSubmission) => {\r\n                this.loading = false;\r\n                this.fileContent = this.insertMatchTokens(submission.text || '');\r\n            },\r\n            error: () => {\r\n                this.loading = false;\r\n            },\r\n        });\r\n    }\r\n\r\n    filterFiles(files: FilesWithType) {\r\n        return Object.keys(files).filter((fileName) => files[fileName] === FileType.FILE);\r\n    }\r\n\r\n    handleFileSelect(file: string) {\r\n        this.currentFile = file;\r\n        this.loading = true;\r\n\r\n        const fileExtension = file.split('.').last()!;\r\n        if (TEXT_FILE_EXTENSIONS.includes(fileExtension)) {\r\n            this.binaryFile = false;\r\n\r\n            const domain: DomainChange = [DomainType.PARTICIPATION, { id: this.plagiarismSubmission.submissionId }];\r\n            this.repositoryService.getFileForPlagiarismView(file, domain).subscribe({\r\n                next: ({ fileContent }) => {\r\n                    this.loading = false;\r\n                    this.fileContent = this.insertMatchTokens(fileContent);\r\n                },\r\n                error: () => {\r\n                    this.loading = false;\r\n                },\r\n            });\r\n        } else {\r\n            this.binaryFile = true;\r\n            this.loading = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Downloads the currently selected file with a friendly name consisting of the exercises short name, the student login and the filename.\r\n     */\r\n    downloadCurrentFile() {\r\n        this.repositoryService.downloadFile(this.currentFile, this.exercise.shortName + '_' + this.plagiarismSubmission.studentLogin + '_' + this.currentFile);\r\n    }\r\n\r\n    getMatchesForCurrentFile() {\r\n        return this.matches.get(this.currentFile || 'none') || [];\r\n    }\r\n\r\n    private hasMatch(file: string): boolean {\r\n        return this.matches.has(file);\r\n    }\r\n\r\n    insertMatchTokens(fileContent: string): string {\r\n        const matches = this.getMatchesForCurrentFile()\r\n            .filter((match) => match.from && match.to)\r\n            .sort((m1, m2) => {\r\n                const lines = m1.from.line - m2.from.line;\r\n                if (lines === 0) {\r\n                    return m1.from.column - m2.from.column;\r\n                }\r\n                return lines;\r\n            });\r\n\r\n        if (!matches.length) {\r\n            return escape(fileContent);\r\n        }\r\n\r\n        if (this.exercise?.type === ExerciseType.PROGRAMMING) {\r\n            return this.buildFileContentWithHighlightedMatchesAsWholeLines(fileContent, matches);\r\n        }\r\n        return this.buildFileContentWithHighlightedMatches(fileContent, matches);\r\n    }\r\n\r\n    /**\r\n     * Builds the required HTML to highlight the lines with matches in the file content.\r\n     * Use with programming exercises to improve user experience,\r\n     * as matches provided by JPlag for them may not be precise for code submissions.\r\n     *\r\n     * @param fileContent The text inside a file.\r\n     * @param matches The found matching plagiarism fragments.\r\n     * @return The file content as HTML with highlighted lines with plagiarism matches.\r\n     */\r\n    private buildFileContentWithHighlightedMatchesAsWholeLines(fileContent: string, matches: FromToElement[]): string {\r\n        const fileLines = fileContent.split('\\n');\r\n        let result = '';\r\n\r\n        const linesWithMatches = new Set<number>();\r\n        for (const match of matches) {\r\n            for (let i = match.from.line - 1; i < match.to.line; i++) {\r\n                linesWithMatches.add(i);\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < fileLines.length; i++) {\r\n            if (linesWithMatches.has(i)) {\r\n                result += this.tokenStart + escape(fileLines[i]) + this.tokenEnd;\r\n            } else {\r\n                result += escape(fileLines[i]);\r\n            }\r\n            if (i != fileLines.length - 1) {\r\n                result += '\\n';\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Builds the required HTML to highlight the matches in the file content.\r\n     *\r\n     * @param fileContent The text inside a file.\r\n     * @param matches The found matching plagiarism fragments.\r\n     * @return The file content as HTML with highlighted plagiarism matches.\r\n     */\r\n    private buildFileContentWithHighlightedMatches(fileContent: string, matches: FromToElement[]): string {\r\n        const fileLines = fileContent.split('\\n');\r\n        let result = '';\r\n\r\n        // if the first match does not start at the beginning of the content append not affected symbols to the result\r\n        if (!(matches[0].from.line == 1 && matches[0].from.column == 0)) {\r\n            for (let i = 0; i < matches[0].from.line - 1; i++) {\r\n                result += escape(fileLines[i]) + '\\n';\r\n            }\r\n            result += escape(fileLines[matches[0].from.line - 1].slice(0, matches[0].from.column - 1));\r\n        }\r\n\r\n        for (let i = 0; i < matches.length; i++) {\r\n            result += this.buildFileContentPartForMatch(matches, i, fileLines);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Adds the highlights to the file content for a single match.\r\n     *\r\n     * @param matches All matches for the file.\r\n     * @param match_index The index of the match for which the highlighting should be added.\r\n     * @param fileLines The file content split by lines.\r\n     * @return The part of the file content relevant to the match extended with the required HTML tags for the\r\n     *         highlighting.\r\n     */\r\n    private buildFileContentPartForMatch(matches: FromToElement[], match_index: number, fileLines: string[]): string {\r\n        const match = matches[match_index];\r\n        const idxLineFrom = match.from.line - 1;\r\n        const idxLineTo = match.to.line - 1;\r\n\r\n        const idxColumnFrom = match.from.column > 0 ? match.from.column - 1 : 0;\r\n        const idxColumnTo = match.to.column + match.to.length;\r\n\r\n        let result = this.tokenStart;\r\n\r\n        if (idxLineFrom === idxLineTo) {\r\n            result += escape(fileLines[idxLineFrom].slice(idxColumnFrom, idxColumnTo)) + this.tokenEnd;\r\n        } else {\r\n            let j = idxLineFrom;\r\n            // if match does not start at the first character add only contents after the match start\r\n            // and move the iterator to the next line\r\n            if (idxColumnFrom > 0) {\r\n                result += escape(fileLines[idxLineFrom].slice(idxColumnFrom));\r\n                j += 1;\r\n            }\r\n            for (; j < idxLineTo; j++) {\r\n                // if not at the beginning of the match add the new line character\r\n                if (result.trim() != this.tokenStart) {\r\n                    result += '\\n';\r\n                }\r\n                result += escape(fileLines[j]);\r\n            }\r\n            result += '\\n' + escape(fileLines[idxLineTo].slice(0, idxColumnTo)) + this.tokenEnd;\r\n        }\r\n\r\n        // escape everything up until the next match (or the end of the string if there is no more match)\r\n        if (match_index === matches.length - 1) {\r\n            result += escape(fileLines[idxLineTo].slice(idxColumnTo));\r\n            for (let j = idxLineTo + 1; j < fileLines.length; j++) {\r\n                result += '\\n' + escape(fileLines[j]);\r\n            }\r\n        } else if (matches[match_index + 1].from.line === match.to.line) {\r\n            result += escape(fileLines[idxLineTo].slice(idxColumnTo, matches[match_index + 1].from.column - 1));\r\n        } else {\r\n            result += escape(fileLines[idxLineTo].slice(idxColumnTo)) + '\\n';\r\n            for (let j = idxLineTo + 1; j < matches[match_index + 1].from.line - 1; j++) {\r\n                result += escape(fileLines[j]) + '\\n';\r\n            }\r\n            result += escape(fileLines[matches[match_index + 1].from.line - 1].slice(0, matches[match_index + 1].from.column - 1));\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n","<jhi-split-pane-header\r\n    [files]=\"files\"\r\n    [isLockFilesEnabled]=\"this.isLockFilesEnabled\"\r\n    [fileSelectedSubject]=\"fileSelectedSubject\"\r\n    (selectFile)=\"handleFileSelect($event)\"\r\n    [showFilesSubject]=\"showFilesSubject\"\r\n    [dropdownHoverSubject]=\"dropdownHoverSubject\"\r\n    studentLogin=\"{{ plagiarismSubmission?.studentLogin }}\"\r\n/>\r\n@if (cannotLoadFiles) {\r\n    <div class=\"text-submission-viewer text-warning\">\r\n        <div class=\"text-submission-viewer-warning\">\r\n            <fa-icon [icon]=\"faExclamationTriangle\" class=\"icon\" />\r\n            <span jhiTranslate=\"artemisApp.plagiarism.cannotLoadFiles\"></span>\r\n        </div>\r\n    </div>\r\n}\r\n@if (!loading && !binaryFile!! && !cannotLoadFiles) {\r\n    <div class=\"text-submission-viewer\" [innerHTML]=\"fileContent || ' '\" [ngClass]=\"{ 'no-file': !fileContent, 'is-code': isProgrammingExercise }\">\r\n        <span jhiTranslate=\"artemisApp.plagiarism.noFileSelected\"></span>\r\n    </div>\r\n}\r\n@if (loading && !cannotLoadFiles) {\r\n    <div class=\"plagiarism-submission-loader\">\r\n        <div class=\"spinner-border text-primary\" role=\"status\">\r\n            <span class=\"sr-only\">Loading...</span>\r\n        </div>\r\n    </div>\r\n}\r\n@if (binaryFile && !cannotLoadFiles) {\r\n    <div class=\"binaryFileDialogue\">\r\n        <span class=\"me-1\" jhiTranslate=\"artemisApp.plagiarism.binaryFileNotRendered\"></span>\r\n        <a class=\"text-primary\" (click)=\"downloadCurrentFile()\" jhiTranslate=\"entity.action.download\"></a>\r\n    </div>\r\n}\r\n","import { AfterViewInit, Component, Directive, ElementRef, Input, OnChanges, OnDestroy, OnInit, QueryList, SimpleChanges, ViewChildren, inject } from '@angular/core';\r\nimport * as Split from 'split.js';\r\nimport { Subject } from 'rxjs';\r\nimport { PlagiarismComparison } from 'app/exercises/shared/plagiarism/types/PlagiarismComparison';\r\nimport { FromToElement, TextSubmissionElement } from 'app/exercises/shared/plagiarism/types/text/TextSubmissionElement';\r\nimport { ModelingSubmissionElement } from 'app/exercises/shared/plagiarism/types/modeling/ModelingSubmissionElement';\r\nimport { Exercise, ExerciseType, getCourseId } from 'app/entities/exercise.model';\r\nimport { PlagiarismSubmission } from 'app/exercises/shared/plagiarism/types/PlagiarismSubmission';\r\nimport { PlagiarismCasesService } from 'app/course/plagiarism-cases/shared/plagiarism-cases.service';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { SimpleMatch } from 'app/exercises/shared/plagiarism/types/PlagiarismMatch';\r\nimport dayjs from 'dayjs/esm';\r\nimport { TextPlagiarismFileElement } from 'app/exercises/shared/plagiarism/types/text/TextPlagiarismFileElement';\r\nimport { IconDefinition, faLock, faUnlock } from '@fortawesome/free-solid-svg-icons';\r\nimport { ModelingSubmissionViewerComponent } from './modeling-submission-viewer/modeling-submission-viewer.component';\r\nimport { TextSubmissionViewerComponent } from './text-submission-viewer/text-submission-viewer.component';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\n\r\n@Directive({ selector: '[jhiPane]' })\r\nexport class SplitPaneDirective {\r\n    elementRef = inject(ElementRef);\r\n}\r\n\r\n@Component({\r\n    selector: 'jhi-plagiarism-split-view',\r\n    styleUrls: ['./plagiarism-split-view.component.scss'],\r\n    templateUrl: './plagiarism-split-view.component.html',\r\n    imports: [SplitPaneDirective, ModelingSubmissionViewerComponent, TextSubmissionViewerComponent, FaIconComponent],\r\n})\r\nexport class PlagiarismSplitViewComponent implements AfterViewInit, OnChanges, OnInit, OnDestroy {\r\n    private plagiarismCasesService = inject(PlagiarismCasesService);\r\n\r\n    @Input() comparison: PlagiarismComparison<TextSubmissionElement | ModelingSubmissionElement>;\r\n    @Input() exercise: Exercise;\r\n    @Input() splitControlSubject: Subject<string>;\r\n    @Input() sortByStudentLogin: string;\r\n    @Input() forStudent: boolean;\r\n\r\n    @ViewChildren(SplitPaneDirective) panes!: QueryList<SplitPaneDirective>;\r\n\r\n    plagiarismComparison: PlagiarismComparison<TextSubmissionElement | ModelingSubmissionElement>;\r\n    fileSelectedSubject = new Subject<TextPlagiarismFileElement>();\r\n    showFilesSubject = new Subject<boolean>();\r\n    dropdownHoverSubject = new Subject<TextPlagiarismFileElement>();\r\n\r\n    public split: Split.Instance;\r\n\r\n    public isModelingExercise: boolean;\r\n    public isProgrammingOrTextExercise: boolean;\r\n\r\n    public matchesA: Map<string, FromToElement[]>;\r\n    public matchesB: Map<string, FromToElement[]>;\r\n    isLockFilesEnabled = false;\r\n\r\n    readonly dayjs = dayjs;\r\n    protected readonly faLock: IconDefinition = faLock;\r\n    protected readonly faUnlock: IconDefinition = faUnlock;\r\n\r\n    /**\r\n     * Initialize third-party libraries inside this lifecycle hook.\r\n     */\r\n    ngAfterViewInit(): void {\r\n        const paneElements = this.panes.map((pane: SplitPaneDirective) => pane.elementRef.nativeElement);\r\n\r\n        this.split = Split.default(paneElements, {\r\n            minSize: 100,\r\n            sizes: [50, 50],\r\n            gutterSize: 8,\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.splitControlSubject.subscribe((pane: string) => this.handleSplitControl(pane));\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.exercise) {\r\n            const exercise = changes.exercise.currentValue;\r\n\r\n            this.isModelingExercise = exercise.type === ExerciseType.MODELING;\r\n            this.isProgrammingOrTextExercise = exercise.type === ExerciseType.PROGRAMMING || exercise.type === ExerciseType.TEXT;\r\n        }\r\n\r\n        if (changes.comparison) {\r\n            this.plagiarismCasesService\r\n                .getPlagiarismComparisonForSplitView(getCourseId(this.exercise)!, changes.comparison.currentValue.id)\r\n                .subscribe((resp: HttpResponse<PlagiarismComparison<TextSubmissionElement | ModelingSubmissionElement>>) => {\r\n                    this.plagiarismComparison = resp.body!;\r\n                    if (this.sortByStudentLogin && this.sortByStudentLogin === this.plagiarismComparison.submissionB.studentLogin) {\r\n                        this.swapSubmissions(this.plagiarismComparison);\r\n                    }\r\n                    if (this.isProgrammingOrTextExercise) {\r\n                        this.parseTextMatches(this.plagiarismComparison as PlagiarismComparison<TextSubmissionElement>);\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.fileSelectedSubject.complete();\r\n        this.showFilesSubject.complete();\r\n        this.dropdownHoverSubject.complete();\r\n    }\r\n\r\n    /**\r\n     * Swaps fields of A with fields of B in-place.\r\n     * More specifically, swaps submissionA with submissionB and startA with startB in matches.\r\n     * @param plagiarismComparison plagiarism comparison that will be modified in-place\r\n     */\r\n    private swapSubmissions(plagiarismComparison: PlagiarismComparison<TextSubmissionElement | ModelingSubmissionElement>) {\r\n        const temp = plagiarismComparison.submissionA;\r\n        plagiarismComparison.submissionA = plagiarismComparison.submissionB;\r\n        plagiarismComparison.submissionB = temp;\r\n\r\n        if (plagiarismComparison?.matches) {\r\n            plagiarismComparison.matches.forEach((match) => {\r\n                const tempStart = match.startA;\r\n                match.startA = match.startB;\r\n                match.startB = tempStart;\r\n            });\r\n        }\r\n    }\r\n\r\n    parseTextMatches(plagComparison: PlagiarismComparison<TextSubmissionElement>) {\r\n        if (plagComparison.matches) {\r\n            const matchesA = plagComparison.matches.map((match) => new SimpleMatch(match.startA, match.length)).sort((m1, m2) => m1.start - m2.start);\r\n            const matchesB = plagComparison.matches.map((match) => new SimpleMatch(match.startB, match.length)).sort((m1, m2) => m1.start - m2.start);\r\n\r\n            this.matchesA = this.mapMatchesToElements(matchesA, plagComparison.submissionA);\r\n            this.matchesB = this.mapMatchesToElements(matchesB, plagComparison.submissionB);\r\n        } else {\r\n            // empty map in case no matches are available\r\n            this.matchesA = new Map<string, FromToElement[]>();\r\n            this.matchesB = new Map<string, FromToElement[]>();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create a map of file names to matches elements.\r\n     * @param matches list of objects containing the index and length of matched elements\r\n     * @param submission the submission to map the elements of\r\n     */\r\n    mapMatchesToElements(matches: SimpleMatch[], submission: PlagiarismSubmission<TextSubmissionElement>) {\r\n        // sort submission elements so that from and to indexes from matches reference correct elements\r\n        const elements = submission.elements?.sort((a, b) => a.id - b.id);\r\n        const filesToMatchedElements = new Map<string, FromToElement[]>();\r\n\r\n        matches.forEach((match) => {\r\n            // skip empty jplag (whitespace) matches\r\n            if (match.length === 0) {\r\n                return;\r\n            }\r\n            const file = elements![match.start]?.file || 'none';\r\n\r\n            if (!filesToMatchedElements.has(file)) {\r\n                filesToMatchedElements.set(file, []);\r\n            }\r\n\r\n            const fileMatches = filesToMatchedElements.get(file)!;\r\n\r\n            fileMatches.push(new FromToElement(elements![match.start], elements![match.start + match.length - 1]));\r\n        });\r\n\r\n        return filesToMatchedElements;\r\n    }\r\n\r\n    getModelingSubmissionA() {\r\n        return this.plagiarismComparison.submissionA as PlagiarismSubmission<ModelingSubmissionElement>;\r\n    }\r\n\r\n    getModelingSubmissionB() {\r\n        return this.plagiarismComparison.submissionB as PlagiarismSubmission<ModelingSubmissionElement>;\r\n    }\r\n\r\n    getTextSubmissionA() {\r\n        return this.plagiarismComparison.submissionA as PlagiarismSubmission<TextSubmissionElement>;\r\n    }\r\n\r\n    getTextSubmissionB() {\r\n        return this.plagiarismComparison.submissionB as PlagiarismSubmission<TextSubmissionElement>;\r\n    }\r\n\r\n    handleSplitControl(pane: string) {\r\n        switch (pane) {\r\n            case 'left': {\r\n                this.split.collapse(1);\r\n                return;\r\n            }\r\n            case 'right': {\r\n                this.split.collapse(0);\r\n                return;\r\n            }\r\n            case 'even': {\r\n                this.split.setSizes([50, 50]);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Toggles the state of file locking and emits the new state to the parent component.\r\n     */\r\n    toggleLockFiles() {\r\n        this.isLockFilesEnabled = !this.isLockFilesEnabled;\r\n    }\r\n}\r\n","<div class=\"plagiarism-split-view\">\r\n    <div class=\"plagiarism-split-pane\" jhiPane>\r\n        @if (plagiarismComparison) {\r\n            @if (isModelingExercise) {\r\n                <jhi-modeling-submission-viewer [exercise]=\"exercise\" [plagiarismSubmission]=\"getModelingSubmissionA()\" [hideContent]=\"false\" />\r\n            }\r\n            @if (isProgrammingOrTextExercise) {\r\n                <jhi-text-submission-viewer\r\n                    [fileSelectedSubject]=\"this.fileSelectedSubject\"\r\n                    [exercise]=\"exercise\"\r\n                    [matches]=\"matchesA\"\r\n                    [plagiarismSubmission]=\"getTextSubmissionA()\"\r\n                    [isLockFilesEnabled]=\"isLockFilesEnabled\"\r\n                    [hideContent]=\"false\"\r\n                    [dropdownHoverSubject]=\"this.dropdownHoverSubject\"\r\n                    [showFilesSubject]=\"this.showFilesSubject\"\r\n                />\r\n            }\r\n        }\r\n    </div>\r\n    <div class=\"split-pane-header-color\">\r\n        <button class=\"btn btn-sm\" (click)=\"toggleLockFiles()\" [class.active]=\"isLockFilesEnabled\" data-qa=\"lock-files-toggle-button\">\r\n            <fa-icon [icon]=\"isLockFilesEnabled ? faLock : faUnlock\" aria-label=\"Synchronize files while navigating on both sides\" />\r\n        </button>\r\n    </div>\r\n    <div class=\"plagiarism-split-pane\" jhiPane>\r\n        @if (plagiarismComparison) {\r\n            @if (isModelingExercise) {\r\n                <jhi-modeling-submission-viewer\r\n                    [exercise]=\"exercise\"\r\n                    [plagiarismSubmission]=\"getModelingSubmissionB()\"\r\n                    [hideContent]=\"forStudent && dayjs(exercise.dueDate).isAfter(dayjs())\"\r\n                />\r\n            }\r\n            @if (isProgrammingOrTextExercise) {\r\n                <jhi-text-submission-viewer\r\n                    [fileSelectedSubject]=\"this.fileSelectedSubject\"\r\n                    [exercise]=\"exercise\"\r\n                    [matches]=\"matchesB\"\r\n                    [plagiarismSubmission]=\"getTextSubmissionB()\"\r\n                    [isLockFilesEnabled]=\"isLockFilesEnabled\"\r\n                    [hideContent]=\"forStudent && dayjs(exercise.dueDate).isAfter(dayjs())\"\r\n                    [dropdownHoverSubject]=\"this.dropdownHoverSubject\"\r\n                    [showFilesSubject]=\"this.showFilesSubject\"\r\n                />\r\n            }\r\n        }\r\n    </div>\r\n</div>\r\n"],"mappings":"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","names":["global","ssr","document","addEventListener","removeEventListener","getBoundingClientRect","gutterStartDragging","aGutterSize","bGutterSize","HORIZONTAL","NOOP","calc","prefix","el","isString","v","elementOrSelector","ele","getOption","options","propName","def","value","getGutterSize","gutterSize","isFirst","isLast","gutterAlign","defaultGutterFn","i","gutterDirection","gut","defaultElementStyleFn","dim","size","gutSize","style","defaultGutterStyleFn","obj","Split","idsOption","ids","dimension","clientAxis","position","positionEnd","clientSize","elements","firstElement","parent","parentStyle","parentFlexDirection","sizes","minSize","minSizes","maxSize","maxSizes","expandToMin","snapOffset","snapOffsets","dragInterval","direction","cursor","gutter","elementStyle","gutterStyle","setElementSize","prop","setGutterSize","gutterElement","getSizes","element","getMousePosition","e","adjust","offset","a","b","percentage","drag","calculateSizes","aBounds","bBounds","innerSize","computedStyle","trimToMin","sizesToTrim","parentSize","excessPixels","toSpare","pixelSizes","pixelSize","elementGutterSize","elementMinSize","newPixelSize","takenPixels","stopDragging","self","startDragging","pairs","id","pair","temp","adjustToMin","computedSize","setSizes","newSizes","trimmed","newSize","destroy","preserveStyles","preserveGutter","split_es_default","FromToElement","from","to","constructor","SimpleMatch","start","length","constructor","ɵɵtext","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r0","faChevronDown","ɵɵtextInterpolate","getActiveFile","ɵɵlistener","ctx_r3","ɵɵrestoreView","_r3","file_r5","$implicit","ɵ$index_31_r6","$index","ɵɵnextContext","ɵɵresetView","triggerMouseEnter","ctx_r6","handleFileSelect","ɵɵpureFunction1","_c1","hoveredFileIndex","ɵɵclassProp","hasMatch","file","_r2","toggleShowFiles","ɵɵrepeaterCreate","SplitPaneHeaderComponent_Conditional_10_For_4_Template","ɵɵrepeaterTrackByIdentity","ɵɵtemplate","SplitPaneHeaderComponent_Conditional_10_Conditional_5_Template","ɵɵrepeater","files","ɵɵconditional","hasFiles","SplitPaneHeaderComponent","studentLogin","fileSelectedSubject","input","isLockFilesEnabled","showFilesSubject","dropdownHoverSubject","selectFile","EventEmitter","showFiles","activeFileIndex","fileSelectSubscription","showFilesSubscription","dropdownHoverSubscription","ngOnInit","subscribeToFileSelection","subscribeToShowFiles","subscribeToDropdownHover","subscribe","textPlagiarismElement","handleLockedFileSelection","idx","index","getIndexOf","handleDropdownHover","ngOnChanges","changes","fileWithHasMatch","currentValue","emit","ngOnDestroy","unsubscribe","hasActiveFile","length","propagateChanges","next","undefined","subject","findIndex","f","selectors","inputs","outputs","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","rf","ctx","SplitPaneHeaderComponent_Conditional_4_Template","SplitPaneHeaderComponent_Conditional_10_Template","ɵɵpureFunction2","_c0","ɵɵpipeBind1","NgbDropdown","NgClass","FaIconComponent","NgbDropdownItem","TranslateDirective","ArtemisTranslatePipe","styles","ɵɵtext","ɵɵelement","ɵɵadvance","ɵɵproperty","ctx_r0","submissionModel","exercise","diagramType","ɵɵelementStart","ɵɵelementEnd","ModelingSubmissionViewerComponent","modelingSubmissionService","inject","ModelingSubmissionService","plagiarismSubmission","hideContent","loading","ngOnChanges","changes","currentPlagiarismSubmission","currentValue","getSubmissionWithoutLock","submissionId","subscribe","next","submission","JSON","parse","model","error","selectors","inputs","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","rf","ctx","ɵɵtemplate","ModelingSubmissionViewerComponent_Conditional_2_Template","ModelingSubmissionViewerComponent_Conditional_3_Template","ɵɵpropertyInterpolate","studentLogin","ɵɵconditional","SplitPaneHeaderComponent","ModelingEditorComponent","styles","ɵɵtext","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r0","faExclamationTriangle","fileContent","ɵɵsanitizeHtml","ɵɵpureFunction2","_c0","isProgrammingExercise","ɵɵlistener","ɵɵrestoreView","_r2","ɵɵnextContext","ɵɵresetView","downloadCurrentFile","TextSubmissionViewerComponent","repositoryService","inject","CodeEditorRepositoryFileService","textSubmissionService","TextSubmissionService","exercise","matches","plagiarismSubmission","hideContent","fileSelectedSubject","isLockFilesEnabled","showFilesSubject","dropdownHoverSubject","currentFile","files","loading","tokenStart","tokenEnd","binaryFile","cannotLoadFiles","ngOnChanges","changes","currentPlagiarismSubmission","currentValue","type","ExerciseType","PROGRAMMING","loadProgrammingExercise","loadTextExercise","domain","DomainType","PARTICIPATION","id","submissionId","getRepositoryContentForPlagiarismView","subscribe","next","programmingExerciseFilesWithMatches","error","filterFiles","map","file","hasMatch","sort","compareFileWithHasMatch","file1","file2","localeCompare","getTextSubmission","submission","insertMatchTokens","text","Object","keys","filter","fileName","FileType","FILE","handleFileSelect","fileExtension","split","last","TEXT_FILE_EXTENSIONS","includes","getFileForPlagiarismView","downloadFile","shortName","studentLogin","getMatchesForCurrentFile","get","has","match","from","to","m1","m2","lines","line","column","length","buildFileContentWithHighlightedMatchesAsWholeLines","buildFileContentWithHighlightedMatches","escape","fileLines","result","linesWithMatches","Set","i","add","slice","buildFileContentPartForMatch","match_index","idxLineFrom","idxLineTo","idxColumnFrom","idxColumnTo","j","trim","selectors","inputs","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","rf","ctx","$event","ɵɵtemplate","TextSubmissionViewerComponent_Conditional_2_Template","TextSubmissionViewerComponent_Conditional_3_Template","TextSubmissionViewerComponent_Conditional_4_Template","TextSubmissionViewerComponent_Conditional_5_Template","ɵɵpropertyInterpolate","ɵɵconditional","SplitPaneHeaderComponent","FaIconComponent","TranslateDirective","NgClass","styles","encapsulation","ɵɵtext","ɵɵelement","ɵɵadvance","ɵɵproperty","ctx_r0","exercise","getModelingSubmissionA","fileSelectedSubject","matchesA","getTextSubmissionA","isLockFilesEnabled","dropdownHoverSubject","showFilesSubject","ɵɵtemplate","PlagiarismSplitViewComponent_Conditional_4_Conditional_1_Template","PlagiarismSplitViewComponent_Conditional_4_Conditional_2_Template","ɵɵconditional","isModelingExercise","isProgrammingOrTextExercise","getModelingSubmissionB","forStudent","dayjs","dueDate","isAfter","matchesB","getTextSubmissionB","PlagiarismSplitViewComponent_Conditional_16_Conditional_1_Template","PlagiarismSplitViewComponent_Conditional_16_Conditional_2_Template","SplitPaneDirective","elementRef","inject","ElementRef","selectors","PlagiarismSplitViewComponent","plagiarismCasesService","PlagiarismCasesService","comparison","splitControlSubject","sortByStudentLogin","panes","plagiarismComparison","Subject","split","faLock","faUnlock","ngAfterViewInit","paneElements","map","pane","nativeElement","default","minSize","sizes","gutterSize","ngOnInit","subscribe","handleSplitControl","ngOnChanges","changes","currentValue","type","ExerciseType","MODELING","PROGRAMMING","TEXT","getPlagiarismComparisonForSplitView","getCourseId","id","resp","body","submissionB","studentLogin","swapSubmissions","parseTextMatches","ngOnDestroy","complete","temp","submissionA","matches","forEach","match","tempStart","startA","startB","plagComparison","SimpleMatch","length","sort","m1","m2","start","mapMatchesToElements","Map","submission","elements","a","b","filesToMatchedElements","file","has","set","get","push","FromToElement","collapse","setSizes","toggleLockFiles","viewQuery","rf","ctx","ɵɵelementStart","PlagiarismSplitViewComponent_Conditional_4_Template","ɵɵelementEnd","ɵɵlistener","PlagiarismSplitViewComponent_Conditional_16_Template","ɵɵclassProp","ModelingSubmissionViewerComponent","TextSubmissionViewerComponent","FaIconComponent","styles"],"x_google_ignoreList":[0]}