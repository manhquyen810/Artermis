{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/hcl/hcl.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.2(404545bded1df6ffa41ea0af4e8ddb219018c6c1)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/hcl/hcl.ts\nvar conf = {\n  comments: {\n    lineComment: \"#\",\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]],\n  autoClosingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"',\n    notIn: [\"string\"]\n  }],\n  surroundingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".hcl\",\n  keywords: [\"var\", \"local\", \"path\", \"for_each\", \"any\", \"string\", \"number\", \"bool\", \"true\", \"false\", \"null\", \"if \", \"else \", \"endif \", \"for \", \"in\", \"endfor\"],\n  operators: [\"=\", \">=\", \"<=\", \"==\", \"!=\", \"+\", \"-\", \"*\", \"/\", \"%\", \"&&\", \"||\", \"!\", \"<\", \">\", \"?\", \"...\", \":\"],\n  symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  terraformFunctions: /(abs|ceil|floor|log|max|min|pow|signum|chomp|format|formatlist|indent|join|lower|regex|regexall|replace|split|strrev|substr|title|trimspace|upper|chunklist|coalesce|coalescelist|compact|concat|contains|distinct|element|flatten|index|keys|length|list|lookup|map|matchkeys|merge|range|reverse|setintersection|setproduct|setunion|slice|sort|transpose|values|zipmap|base64decode|base64encode|base64gzip|csvdecode|jsondecode|jsonencode|urlencode|yamldecode|yamlencode|abspath|dirname|pathexpand|basename|file|fileexists|fileset|filebase64|templatefile|formatdate|timeadd|timestamp|base64sha256|base64sha512|bcrypt|filebase64sha256|filebase64sha512|filemd5|filemd1|filesha256|filesha512|md5|rsadecrypt|sha1|sha256|sha512|uuid|uuidv5|cidrhost|cidrnetmask|cidrsubnet|tobool|tolist|tomap|tonumber|toset|tostring)/,\n  terraformMainBlocks: /(module|data|terraform|resource|provider|variable|output|locals)/,\n  tokenizer: {\n    root: [\n    // highlight main blocks\n    [/^@terraformMainBlocks([ \\t]*)([\\w-]+|\"[\\w-]+\"|)([ \\t]*)([\\w-]+|\"[\\w-]+\"|)([ \\t]*)(\\{)/, [\"type\", \"\", \"string\", \"\", \"string\", \"\", \"@brackets\"]],\n    // highlight all the remaining blocks\n    [/(\\w+[ \\t]+)([ \\t]*)([\\w-]+|\"[\\w-]+\"|)([ \\t]*)([\\w-]+|\"[\\w-]+\"|)([ \\t]*)(\\{)/, [\"identifier\", \"\", \"string\", \"\", \"string\", \"\", \"@brackets\"]],\n    // highlight block\n    [/(\\w+[ \\t]+)([ \\t]*)([\\w-]+|\"[\\w-]+\"|)([ \\t]*)([\\w-]+|\"[\\w-]+\"|)(=)(\\{)/, [\"identifier\", \"\", \"string\", \"\", \"operator\", \"\", \"@brackets\"]],\n    // terraform general highlight - shared with expressions\n    {\n      include: \"@terraform\"\n    }],\n    terraform: [\n    // highlight terraform functions\n    [/@terraformFunctions(\\()/, [\"type\", \"@brackets\"]],\n    // all other words are variables or keywords\n    [/[a-zA-Z_]\\w*-*/,\n    // must work with variables such as foo-bar and also with negative numbers\n    {\n      cases: {\n        \"@keywords\": {\n          token: \"keyword.$0\"\n        },\n        \"@default\": \"variable\"\n      }\n    }], {\n      include: \"@whitespace\"\n    }, {\n      include: \"@heredoc\"\n    },\n    // delimiters and operators\n    [/[{}()\\[\\]]/, \"@brackets\"], [/[<>](?!@symbols)/, \"@brackets\"], [/@symbols/, {\n      cases: {\n        \"@operators\": \"operator\",\n        \"@default\": \"\"\n      }\n    }],\n    // numbers\n    [/\\d*\\d+[eE]([\\-+]?\\d+)?/, \"number.float\"], [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"], [/\\d[\\d']*/, \"number\"], [/\\d/, \"number\"], [/[;,.]/, \"delimiter\"],\n    // delimiter: after number because of .\\d floats\n    // strings\n    [/\"/, \"string\", \"@string\"],\n    // this will include expressions\n    [/'/, \"invalid\"]],\n    heredoc: [[/<<[-]*\\s*[\"]?([\\w\\-]+)[\"]?/, {\n      token: \"string.heredoc.delimiter\",\n      next: \"@heredocBody.$1\"\n    }]],\n    heredocBody: [[/([\\w\\-]+)$/, {\n      cases: {\n        \"$1==$S2\": [{\n          token: \"string.heredoc.delimiter\",\n          next: \"@popall\"\n        }],\n        \"@default\": \"string.heredoc\"\n      }\n    }], [/./, \"string.heredoc\"]],\n    whitespace: [[/[ \\t\\r\\n]+/, \"\"], [/\\/\\*/, \"comment\", \"@comment\"], [/\\/\\/.*$/, \"comment\"], [/#.*$/, \"comment\"]],\n    comment: [[/[^\\/*]+/, \"comment\"], [/\\*\\//, \"comment\", \"@pop\"], [/[\\/*]/, \"comment\"]],\n    string: [[/\\$\\{/, {\n      token: \"delimiter\",\n      next: \"@stringExpression\"\n    }], [/[^\\\\\"\\$]+/, \"string\"], [/@escapes/, \"string.escape\"], [/\\\\./, \"string.escape.invalid\"], [/\"/, \"string\", \"@popall\"]],\n    stringInsideExpression: [[/[^\\\\\"]+/, \"string\"], [/@escapes/, \"string.escape\"], [/\\\\./, \"string.escape.invalid\"], [/\"/, \"string\", \"@pop\"]],\n    stringExpression: [[/\\}/, {\n      token: \"delimiter\",\n      next: \"@pop\"\n    }], [/\"/, \"string\", \"@stringInsideExpression\"], {\n      include: \"@terraform\"\n    }]\n  }\n};\nexport { conf, language };"],"mappings":"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","names":["conf","language"],"x_google_ignoreList":[0]}