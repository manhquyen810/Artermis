{
  "version": 3,
  "sources": ["src/main/webapp/app/shared/user-settings/ssh-settings/fingerprints/ssh-user-settings-fingerprints.service.ts", "src/main/webapp/app/shared/user-settings/ssh-settings/fingerprints/ssh-user-settings-fingerprints.component.ts", "src/main/webapp/app/shared/user-settings/ssh-settings/fingerprints/ssh-user-settings-fingerprints.component.html"],
  "sourcesContent": ["import { Injectable, inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { firstValueFrom } from 'rxjs';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SshUserSettingsFingerprintsService {\r\n    error?: string;\r\n\r\n    private http = inject(HttpClient);\r\n\r\n    public async getSshFingerprints(): Promise<{ [key: string]: string }> {\r\n        return await firstValueFrom(this.http.get<{ [key: string]: string }>('api/programming/ssh-fingerprints'));\r\n    }\r\n}\r\n", "import { Component, OnInit, inject } from '@angular/core';\r\nimport { ButtonSize, ButtonType } from 'app/shared/components/button.component';\r\nimport { DocumentationType } from 'app/shared/components/documentation-button/documentation-button.component';\r\nimport { DocumentationLinkComponent } from 'app/shared/components/documentation-link/documentation-link.component';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { SshUserSettingsFingerprintsService } from 'app/shared/user-settings/ssh-settings/fingerprints/ssh-user-settings-fingerprints.service';\r\nimport { RouterLink } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'jhi-account-information',\r\n    templateUrl: './ssh-user-settings-fingerprints.component.html',\r\n    styleUrls: ['./ssh-user-settings-fingerprints.component.scss', '../ssh-user-settings.component.scss'],\r\n    imports: [TranslateDirective, DocumentationLinkComponent, RouterLink],\r\n})\r\nexport class SshUserSettingsFingerprintsComponent implements OnInit {\r\n    readonly sshUserSettingsService = inject(SshUserSettingsFingerprintsService);\r\n\r\n    protected sshFingerprints?: { [key: string]: string };\r\n\r\n    readonly documentationType: DocumentationType = 'SshSetup';\r\n    protected readonly ButtonType = ButtonType;\r\n\r\n    protected readonly ButtonSize = ButtonSize;\r\n\r\n    async ngOnInit() {\r\n        this.sshFingerprints = await this.sshUserSettingsService.getSshFingerprints();\r\n    }\r\n}\r\n", "<h1 jhiTranslate=\"artemisApp.userSettings.sshSettingsPage.sshFingerprints\"></h1>\r\n\r\n<div class=\"list-group d-block\">\r\n    <!-- Viewing existing key and creating a new key -->\r\n    <div class=\"list-group-item\">\r\n        <div class=\"d-flex flex-wrap\">\r\n            <p class=\"font-medium\">\r\n                <span class=\"mt-4\" jhiTranslate=\"artemisApp.userSettings.sshSettingsPage.fingerprintsExplanation\"> </span>\r\n                <jhi-documentation-link [documentationType]=\"documentationType\" [displayString]=\"'artemisApp.userSettings.sshSettingsPage.fingerprintsLearnMore'\" />\r\n            </p>\r\n        </div>\r\n\r\n        @if (sshFingerprints && sshFingerprints['RSA']) {\r\n            <div class=\"row small-text\">\r\n                <div class=\"column left\">\r\n                    {{ 'RSA' }}\r\n                </div>\r\n                <div class=\"column right\">\r\n                    {{ sshFingerprints['RSA'] }}\r\n                </div>\r\n            </div>\r\n        }\r\n\r\n        @if (sshFingerprints && sshFingerprints['EdDSA']) {\r\n            <div class=\"row small-text\">\r\n                <div class=\"column left\">\r\n                    {{ 'ED25519' }}\r\n                </div>\r\n                <div class=\"column right\">\r\n                    {{ sshFingerprints['EdDSA'] }}\r\n                </div>\r\n            </div>\r\n        }\r\n\r\n        @if (sshFingerprints && sshFingerprints['ECDSA']) {\r\n            <div class=\"row\">\r\n                <div class=\"column left\">\r\n                    {{ 'ECDSA' }}\r\n                </div>\r\n                <div class=\"column right\">\r\n                    {{ sshFingerprints['ECDSA'] }}\r\n                </div>\r\n            </div>\r\n        }\r\n\r\n        @if (sshFingerprints && sshFingerprints['EC']) {\r\n            <div class=\"row\">\r\n                <div class=\"column left\">\r\n                    {{ 'ECDSA' }}\r\n                </div>\r\n                <div class=\"column right\">\r\n                    {{ sshFingerprints['EC'] }}\r\n                </div>\r\n            </div>\r\n        }\r\n\r\n        <div class=\"d-flex justify-content-between align-items-center mt-4\">\r\n            <div></div>\r\n            <div>\r\n                <a class=\"btn rounded-btn btn-primary btn-sm\" [routerLink]=\"['..']\">\r\n                    <span class=\"jhi-btn__title\" style=\"font-size: small\" jhiTranslate=\"artemisApp.userSettings.sshSettingsPage.back\"></span>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n"],
  "mappings": "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",
  "names": ["SshUserSettingsFingerprintsService", "error", "http", "inject", "HttpClient", "getSshFingerprints", "__async", "firstValueFrom", "get", "factory", "\u0275fac", "providedIn", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275textInterpolate1", "ctx_r0", "sshFingerprints", "SshUserSettingsFingerprintsComponent", "sshUserSettingsService", "inject", "SshUserSettingsFingerprintsService", "documentationType", "ButtonType", "ButtonSize", "ngOnInit", "__async", "getSshFingerprints", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275element", "\u0275\u0275template", "SshUserSettingsFingerprintsComponent_Conditional_18_Template", "SshUserSettingsFingerprintsComponent_Conditional_19_Template", "SshUserSettingsFingerprintsComponent_Conditional_20_Template", "SshUserSettingsFingerprintsComponent_Conditional_21_Template", "\u0275\u0275property", "\u0275\u0275conditional", "\u0275\u0275pureFunction0", "_c0", "TranslateDirective", "DocumentationLinkComponent", "RouterLink", "styles"]
}
