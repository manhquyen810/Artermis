{
  "version": 3,
  "sources": ["src/main/webapp/app/entities/programming/programming-exercise-build.config.ts", "src/main/webapp/app/entities/participation/solution-programming-exercise-participation.model.ts", "src/main/webapp/app/entities/participation/template-programming-exercise-participation.model.ts", "src/main/webapp/app/entities/programming/programming-exercise.model.ts"],
  "sourcesContent": ["import { WindFile } from 'app/entities/programming/wind.file';\r\n\r\nexport class ProgrammingExerciseBuildConfig {\r\n    public sequentialTestRuns?: boolean;\r\n    public buildPlanConfiguration?: string;\r\n    public buildScript?: string;\r\n    public checkoutSolutionRepository?: boolean;\r\n    public assignmentCheckoutPath?: string;\r\n    public testCheckoutPath?: string;\r\n    public solutionCheckoutPath?: string;\r\n    public timeoutSeconds?: number;\r\n    public dockerFlags?: string;\r\n    public windfile?: WindFile;\r\n    public theiaImage?: string;\r\n\r\n    constructor() {\r\n        this.checkoutSolutionRepository = false; // default value\r\n    }\r\n}\r\n", "import { Participation, ParticipationType } from 'app/entities/participation/participation.model';\r\nimport { ProgrammingExercise } from 'app/entities/programming/programming-exercise.model';\r\n\r\nexport class SolutionProgrammingExerciseParticipation extends Participation {\r\n    public programmingExercise?: ProgrammingExercise;\r\n    public repositoryUri?: string;\r\n    public buildPlanId?: string;\r\n    public buildPlanUrl?: string;\r\n\r\n    constructor() {\r\n        super(ParticipationType.SOLUTION);\r\n    }\r\n}\r\n", "import { Participation, ParticipationType } from 'app/entities/participation/participation.model';\r\nimport { ProgrammingExercise } from 'app/entities/programming/programming-exercise.model';\r\n\r\nexport class TemplateProgrammingExerciseParticipation extends Participation {\r\n    public programmingExercise?: ProgrammingExercise;\r\n    public repositoryUri?: string;\r\n    public buildPlanId?: string;\r\n    public buildPlanUrl?: string;\r\n\r\n    constructor() {\r\n        super(ParticipationType.TEMPLATE);\r\n    }\r\n}\r\n", "import { AssessmentType } from 'app/entities/assessment-type.model';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { ExerciseGroup } from 'app/entities/exercise-group.model';\r\nimport { Exercise, ExerciseType, resetForImport } from 'app/entities/exercise.model';\r\nimport { ProgrammingExerciseGitDiffReport } from 'app/entities/programming-exercise-git-diff-report.model';\r\nimport { SolutionProgrammingExerciseParticipation } from 'app/entities/participation/solution-programming-exercise-participation.model';\r\nimport { TemplateProgrammingExerciseParticipation } from 'app/entities/participation/template-programming-exercise-participation.model';\r\nimport { BuildLogStatisticsDTO } from 'app/entities/programming/build-log-statistics-dto';\r\nimport { AuxiliaryRepository } from 'app/entities/programming/programming-exercise-auxiliary-repository-model';\r\nimport { ProgrammingExerciseBuildConfig } from 'app/entities/programming/programming-exercise-build.config';\r\nimport { SubmissionPolicy } from 'app/entities/submission-policy.model';\r\nimport dayjs from 'dayjs/esm';\r\n\r\nexport enum ProgrammingLanguage {\r\n    EMPTY = 'EMPTY',\r\n    ASSEMBLER = 'ASSEMBLER',\r\n    BASH = 'BASH',\r\n    C = 'C',\r\n    C_PLUS_PLUS = 'C_PLUS_PLUS',\r\n    C_SHARP = 'C_SHARP',\r\n    DART = 'DART',\r\n    GO = 'GO',\r\n    HASKELL = 'HASKELL',\r\n    JAVA = 'JAVA',\r\n    JAVASCRIPT = 'JAVASCRIPT',\r\n    KOTLIN = 'KOTLIN',\r\n    MATLAB = 'MATLAB',\r\n    OCAML = 'OCAML',\r\n    PYTHON = 'PYTHON',\r\n    R = 'R',\r\n    RUBY = 'RUBY',\r\n    RUST = 'RUST',\r\n    SWIFT = 'SWIFT',\r\n    TYPESCRIPT = 'TYPESCRIPT',\r\n    VHDL = 'VHDL',\r\n}\r\n\r\nexport enum ProjectType {\r\n    MAVEN_MAVEN = 'MAVEN_MAVEN',\r\n    PLAIN_MAVEN = 'PLAIN_MAVEN',\r\n    MAVEN_BLACKBOX = 'MAVEN_BLACKBOX',\r\n    PLAIN_GRADLE = 'PLAIN_GRADLE',\r\n    GRADLE_GRADLE = 'GRADLE_GRADLE',\r\n    PLAIN = 'PLAIN',\r\n    XCODE = 'XCODE',\r\n    FACT = 'FACT',\r\n    GCC = 'GCC',\r\n}\r\n\r\nexport class ProgrammingExercise extends Exercise {\r\n    public projectKey?: string;\r\n    public templateParticipation?: TemplateProgrammingExerciseParticipation;\r\n    public solutionParticipation?: SolutionProgrammingExerciseParticipation;\r\n    public testRepositoryUri?: string;\r\n    public customizeBuildPlanWithAeolus?: boolean;\r\n    public allowOnlineEditor?: boolean;\r\n    public staticCodeAnalysisEnabled?: boolean;\r\n    /**\r\n     * Max penalty from SCA in percentage\r\n     */\r\n    public maxStaticCodeAnalysisPenalty?: number;\r\n    public allowOfflineIde?: boolean;\r\n    public allowOnlineIde?: boolean;\r\n    public programmingLanguage?: ProgrammingLanguage;\r\n    public packageName?: string;\r\n    public showTestNamesToStudents?: boolean;\r\n    public auxiliaryRepositories?: AuxiliaryRepository[];\r\n    public submissionPolicy?: SubmissionPolicy;\r\n    public gitDiffReport?: ProgrammingExerciseGitDiffReport;\r\n    public buildLogStatistics?: BuildLogStatisticsDTO;\r\n    public buildConfig?: ProgrammingExerciseBuildConfig;\r\n    public releaseTestsWithExampleSolution?: boolean;\r\n\r\n    public buildAndTestStudentSubmissionsAfterDueDate?: dayjs.Dayjs;\r\n    public testCasesChanged?: boolean;\r\n\r\n    public projectType?: ProjectType;\r\n\r\n    /**\r\n     * This attribute is used to generate a programming exercise with no connection to the VCS and CI.\r\n     * This functionality is only for testing purposes.\r\n     */\r\n    public noVersionControlAndContinuousIntegrationAvailable?: boolean;\r\n\r\n    constructor(course: Course | undefined, exerciseGroup: ExerciseGroup | undefined) {\r\n        super(ExerciseType.PROGRAMMING);\r\n        this.course = course;\r\n        this.exerciseGroup = exerciseGroup;\r\n        this.templateParticipation = new TemplateProgrammingExerciseParticipation();\r\n        this.solutionParticipation = new SolutionProgrammingExerciseParticipation();\r\n        this.allowOnlineEditor = false; // default value\r\n        this.allowOnlineIde = false; // default value\r\n        this.staticCodeAnalysisEnabled = false; // default value\r\n        this.allowOfflineIde = true; // default value\r\n        this.programmingLanguage = ProgrammingLanguage.JAVA; // default value\r\n        this.noVersionControlAndContinuousIntegrationAvailable = false; // default value\r\n        this.projectType = ProjectType.PLAIN_GRADLE; // default value\r\n        this.showTestNamesToStudents = false; // default value\r\n        this.buildConfig = new ProgrammingExerciseBuildConfig();\r\n    }\r\n}\r\n\r\nexport function resetProgrammingForImport(exercise: ProgrammingExercise) {\r\n    resetForImport(exercise);\r\n\r\n    // without dates set, they have to be reset as well\r\n    exercise.releaseTestsWithExampleSolution = false;\r\n    exercise.buildAndTestStudentSubmissionsAfterDueDate = undefined;\r\n    exercise.assessmentType = AssessmentType.AUTOMATIC;\r\n}\r\n\r\n/**\r\n * Copy the build configuration from the given exerciseJson to this build configuration. This is to ensure compatibility with old exported programming exercises.\r\n */\r\nexport function copyBuildConfigFromExerciseJson(exerciseJson: ProgrammingExerciseBuildConfig): ProgrammingExerciseBuildConfig {\r\n    const buildConfig = new ProgrammingExerciseBuildConfig();\r\n    buildConfig.sequentialTestRuns = exerciseJson.sequentialTestRuns ?? false;\r\n    buildConfig.assignmentCheckoutPath = exerciseJson.assignmentCheckoutPath ?? '';\r\n    buildConfig.solutionCheckoutPath = exerciseJson.solutionCheckoutPath ?? '';\r\n    buildConfig.testCheckoutPath = exerciseJson.testCheckoutPath ?? '';\r\n    buildConfig.buildPlanConfiguration = exerciseJson.buildPlanConfiguration ?? '';\r\n    buildConfig.checkoutSolutionRepository = exerciseJson.checkoutSolutionRepository ?? false;\r\n    buildConfig.timeoutSeconds = exerciseJson.timeoutSeconds ?? 0;\r\n    buildConfig.windfile = exerciseJson.windfile ?? undefined;\r\n    buildConfig.buildScript = exerciseJson.buildScript ?? '';\r\n    buildConfig.dockerFlags = exerciseJson.dockerFlags ?? '';\r\n    return buildConfig;\r\n}\r\n"],
  "mappings": "6IAEM,IAAOA,EAAP,KAAqC,CAChCC,mBACAC,uBACAC,YACAC,2BACAC,uBACAC,iBACAC,qBACAC,eACAC,YACAC,SACAC,WAEPC,aAAA,CACI,KAAKR,2BAA6B,EACtC,GCdE,IAAOS,EAAP,cAAwDC,CAAa,CAChEC,oBACAC,cACAC,YACAC,aAEPC,aAAA,CACI,MAAMC,EAAkBC,QAAQ,CACpC,GCRE,IAAOC,EAAP,cAAwDC,CAAa,CAChEC,oBACAC,cACAC,YACAC,aAEPC,aAAA,CACI,MAAMC,EAAkBC,QAAQ,CACpC,GCEJ,IAAYC,EAAZ,SAAYA,EAAmB,CAC3BA,OAAAA,EAAA,MAAA,QACAA,EAAA,UAAA,YACAA,EAAA,KAAA,OACAA,EAAA,EAAA,IACAA,EAAA,YAAA,cACAA,EAAA,QAAA,UACAA,EAAA,KAAA,OACAA,EAAA,GAAA,KACAA,EAAA,QAAA,UACAA,EAAA,KAAA,OACAA,EAAA,WAAA,aACAA,EAAA,OAAA,SACAA,EAAA,OAAA,SACAA,EAAA,MAAA,QACAA,EAAA,OAAA,SACAA,EAAA,EAAA,IACAA,EAAA,KAAA,OACAA,EAAA,KAAA,OACAA,EAAA,MAAA,QACAA,EAAA,WAAA,aACAA,EAAA,KAAA,OArBQA,CAsBZ,EAtBYA,GAAmB,CAAA,CAAA,EAwBnBC,EAAZ,SAAYA,EAAW,CACnBA,OAAAA,EAAA,YAAA,cACAA,EAAA,YAAA,cACAA,EAAA,eAAA,iBACAA,EAAA,aAAA,eACAA,EAAA,cAAA,gBACAA,EAAA,MAAA,QACAA,EAAA,MAAA,QACAA,EAAA,KAAA,OACAA,EAAA,IAAA,MATQA,CAUZ,EAVYA,GAAW,CAAA,CAAA,EAYVC,EAAP,cAAmCC,CAAQ,CACtCC,WACAC,sBACAC,sBACAC,kBACAC,6BACAC,kBACAC,0BAIAC,6BACAC,gBACAC,eACAC,oBACAC,YACAC,wBACAC,sBACAC,iBACAC,cACAC,mBACAC,YACAC,gCAEAC,2CACAC,iBAEAC,YAMAC,kDAEPC,YAAYC,EAA4BC,EAAwC,CAC5E,MAAMC,EAAaC,WAAW,EAC9B,KAAKH,OAASA,EACd,KAAKC,cAAgBA,EACrB,KAAKxB,sBAAwB,IAAI2B,EACjC,KAAK1B,sBAAwB,IAAI2B,EACjC,KAAKxB,kBAAoB,GACzB,KAAKI,eAAiB,GACtB,KAAKH,0BAA4B,GACjC,KAAKE,gBAAkB,GACvB,KAAKE,oBAAsBd,EAAoBkC,KAC/C,KAAKR,kDAAoD,GACzD,KAAKD,YAAcxB,EAAYkC,aAC/B,KAAKnB,wBAA0B,GAC/B,KAAKK,YAAc,IAAIe,CAC3B,GAGE,SAAUC,EAA0BC,EAA6B,CACnEC,EAAeD,CAAQ,EAGvBA,EAAShB,gCAAkC,GAC3CgB,EAASf,2CAA6CiB,OACtDF,EAASG,eAAiBC,EAAeC,SAC7C,CAKM,SAAUC,EAAgCC,EAA4C,CACxF,IAAMxB,EAAc,IAAIe,EACxBf,OAAAA,EAAYyB,mBAAqBD,EAAaC,oBAAsB,GACpEzB,EAAY0B,uBAAyBF,EAAaE,wBAA0B,GAC5E1B,EAAY2B,qBAAuBH,EAAaG,sBAAwB,GACxE3B,EAAY4B,iBAAmBJ,EAAaI,kBAAoB,GAChE5B,EAAY6B,uBAAyBL,EAAaK,wBAA0B,GAC5E7B,EAAY8B,2BAA6BN,EAAaM,4BAA8B,GACpF9B,EAAY+B,eAAiBP,EAAaO,gBAAkB,EAC5D/B,EAAYgC,SAAWR,EAAaQ,UAAYb,OAChDnB,EAAYiC,YAAcT,EAAaS,aAAe,GACtDjC,EAAYkC,YAAcV,EAAaU,aAAe,GAC/ClC,CACX",
  "names": ["ProgrammingExerciseBuildConfig", "sequentialTestRuns", "buildPlanConfiguration", "buildScript", "checkoutSolutionRepository", "assignmentCheckoutPath", "testCheckoutPath", "solutionCheckoutPath", "timeoutSeconds", "dockerFlags", "windfile", "theiaImage", "constructor", "SolutionProgrammingExerciseParticipation", "Participation", "programmingExercise", "repositoryUri", "buildPlanId", "buildPlanUrl", "constructor", "ParticipationType", "SOLUTION", "TemplateProgrammingExerciseParticipation", "Participation", "programmingExercise", "repositoryUri", "buildPlanId", "buildPlanUrl", "constructor", "ParticipationType", "TEMPLATE", "ProgrammingLanguage", "ProjectType", "ProgrammingExercise", "Exercise", "projectKey", "templateParticipation", "solutionParticipation", "testRepositoryUri", "customizeBuildPlanWithAeolus", "allowOnlineEditor", "staticCodeAnalysisEnabled", "maxStaticCodeAnalysisPenalty", "allowOfflineIde", "allowOnlineIde", "programmingLanguage", "packageName", "showTestNamesToStudents", "auxiliaryRepositories", "submissionPolicy", "gitDiffReport", "buildLogStatistics", "buildConfig", "releaseTestsWithExampleSolution", "buildAndTestStudentSubmissionsAfterDueDate", "testCasesChanged", "projectType", "noVersionControlAndContinuousIntegrationAvailable", "constructor", "course", "exerciseGroup", "ExerciseType", "PROGRAMMING", "TemplateProgrammingExerciseParticipation", "SolutionProgrammingExerciseParticipation", "JAVA", "PLAIN_GRADLE", "ProgrammingExerciseBuildConfig", "resetProgrammingForImport", "exercise", "resetForImport", "undefined", "assessmentType", "AssessmentType", "AUTOMATIC", "copyBuildConfigFromExerciseJson", "exerciseJson", "sequentialTestRuns", "assignmentCheckoutPath", "solutionCheckoutPath", "testCheckoutPath", "buildPlanConfiguration", "checkoutSolutionRepository", "timeoutSeconds", "windfile", "buildScript", "dockerFlags"]
}
