{
  "version": 3,
  "sources": ["src/main/webapp/app/overview/course-archive/course-archive.component.ts", "src/main/webapp/app/overview/course-archive/course-archive.component.html"],
  "sourcesContent": ["import { Component, OnDestroy, OnInit, inject } from '@angular/core';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { CourseManagementService } from 'app/course/manage/course-management.service';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { onError } from 'app/shared/util/global.utils';\r\nimport { Subscription } from 'rxjs';\r\nimport { faAngleDown, faAngleUp, faArrowDown19, faArrowUp19, faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { SizeProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { CourseCardHeaderComponent } from '../course-card-header/course-card-header.component';\r\nimport { CourseForArchiveDTO } from 'app/course/manage/course-for-archive-dto';\r\nimport { SearchFilterComponent } from 'app/shared/search-filter/search-filter.component';\r\nimport { SearchFilterPipe } from 'app/shared/pipes/search-filter.pipe';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'jhi-course-archive',\r\n    templateUrl: './course-archive.component.html',\r\n    styleUrls: ['./course-archive.component.scss'],\r\n    imports: [CourseCardHeaderComponent, SearchFilterComponent, SearchFilterPipe, TranslateDirective, ArtemisTranslatePipe, CommonModule, FontAwesomeModule, NgbTooltipModule],\r\n})\r\nexport class CourseArchiveComponent implements OnInit, OnDestroy {\r\n    private archiveCourseSubscription: Subscription;\r\n    private courseService = inject(CourseManagementService);\r\n    private alertService = inject(AlertService);\r\n\r\n    courses: CourseForArchiveDTO[] = [];\r\n    semesters: string[];\r\n    fullFormOfSemesterStrings: { [key: string]: string } = {};\r\n    semesterCollapsed: { [key: string]: boolean } = {};\r\n    coursesBySemester: { [key: string]: Course[] } = {};\r\n    searchCourseText = '';\r\n    isSortAscending = true;\r\n    iconSize: SizeProp = 'lg';\r\n\r\n    //Icons\r\n    readonly faAngleDown = faAngleDown;\r\n    readonly faAngleUp = faAngleUp;\r\n    readonly faArrowDown19 = faArrowDown19;\r\n    readonly faArrowUp19 = faArrowUp19;\r\n    readonly faQuestionCircle = faQuestionCircle;\r\n\r\n    ngOnInit(): void {\r\n        this.loadArchivedCourses();\r\n        this.courseService.enableCourseOverviewBackground();\r\n    }\r\n\r\n    /**\r\n     * Loads all courses that the student has been enrolled in from previous semesters\r\n     */\r\n    loadArchivedCourses(): void {\r\n        this.archiveCourseSubscription = this.courseService.getCoursesForArchive().subscribe({\r\n            next: (res: HttpResponse<CourseForArchiveDTO[]>) => {\r\n                if (res.body) {\r\n                    this.courses = res.body || [];\r\n                    this.courses = this.sortCoursesByTitle(this.courses);\r\n                    this.semesters = this.getUniqueSemesterNamesSorted(this.courses);\r\n                    this.mapCoursesIntoSemesters();\r\n                }\r\n            },\r\n            error: (error: HttpErrorResponse) => onError(this.alertService, error),\r\n        });\r\n    }\r\n\r\n    /**\r\n     * maps existing courses to each semester\r\n     */\r\n    mapCoursesIntoSemesters(): void {\r\n        this.semesters.forEach((semester) => {\r\n            this.semesterCollapsed[semester] = false;\r\n            this.courseService.setSemesterCollapseState(semester, false);\r\n            this.coursesBySemester[semester] = this.courses.filter((course) => course.semester === semester);\r\n            this.fullFormOfSemesterStrings[semester] = semester.startsWith('WS') ? 'artemisApp.course.archive.winterSemester' : 'artemisApp.course.archive.summerSemester';\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.archiveCourseSubscription.unsubscribe();\r\n        this.courseService.disableCourseOverviewBackground();\r\n    }\r\n\r\n    setSearchValue(searchValue: string): void {\r\n        this.searchCourseText = searchValue;\r\n        if (searchValue !== '') {\r\n            this.expandOrCollapseBasedOnSearchValue();\r\n        } else {\r\n            this.getCollapseStateForSemesters();\r\n        }\r\n    }\r\n\r\n    onSort(): void {\r\n        if (this.semesters) {\r\n            this.semesters.reverse();\r\n            this.isSortAscending = !this.isSortAscending;\r\n        }\r\n    }\r\n    /**\r\n     * if the searched text is matched with a course title, expand the accordion, otherwise collapse\r\n     */\r\n    expandOrCollapseBasedOnSearchValue(): void {\r\n        for (const semester of this.semesters) {\r\n            const hasMatchingCourse = this.coursesBySemester[semester].some((course) => course.title?.toLowerCase().includes(this.searchCourseText.toLowerCase()));\r\n            this.semesterCollapsed[semester] = !hasMatchingCourse;\r\n        }\r\n    }\r\n\r\n    getCollapseStateForSemesters(): void {\r\n        for (const semester of this.semesters) {\r\n            this.semesterCollapsed[semester] = this.courseService.getSemesterCollapseStateFromStorage(semester);\r\n        }\r\n    }\r\n\r\n    toggleCollapseState(semester: string): void {\r\n        this.semesterCollapsed[semester] = !this.semesterCollapsed[semester];\r\n        this.courseService.setSemesterCollapseState(semester, this.semesterCollapsed[semester]);\r\n    }\r\n\r\n    isCourseFoundInSemester(semester: string): boolean {\r\n        return this.coursesBySemester[semester].some((course) => course.title?.toLowerCase().includes(this.searchCourseText.toLowerCase()));\r\n    }\r\n\r\n    sortCoursesByTitle(courses: CourseForArchiveDTO[]): CourseForArchiveDTO[] {\r\n        return courses.sort((courseA, courseB) => (courseA.title ?? '').localeCompare(courseB.title ?? ''));\r\n    }\r\n\r\n    getUniqueSemesterNamesSorted(courses: CourseForArchiveDTO[]): string[] {\r\n        return (\r\n            courses\r\n                .map((course) => course.semester ?? '')\r\n                // filter down to unique values\r\n                .filter((course, index, courses) => courses.indexOf(course) === index)\r\n                .sort((semesterA, semesterB) => {\r\n                    // Parse years in base 10 by extracting the two digits after the WS or SS prefix\r\n                    const yearsCompared = parseInt(semesterB.slice(2, 4), 10) - parseInt(semesterA.slice(2, 4), 10);\r\n                    if (yearsCompared !== 0) {\r\n                        return yearsCompared;\r\n                    }\r\n\r\n                    // If years are the same, sort WS over SS\r\n                    const prefixA = semesterA.slice(0, 2);\r\n                    const prefixB = semesterB.slice(0, 2);\r\n\r\n                    if (prefixA === prefixB) {\r\n                        return 0; // Both semesters are the same (either both WS or both SS)\r\n                    }\r\n\r\n                    return prefixA === 'WS' ? -1 : 1; // WS should be placed above SS\r\n                })\r\n        );\r\n    }\r\n}\r\n", "@if (courses) {\r\n    <div class=\"module-bg p-3 rounded-3 mb-3\">\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n            <div class=\"d-flex justify-content-start gap-1\">\r\n                <h3 class=\"fw-medium mb-0\" jhiTranslate=\"artemisApp.course.archive.title\"></h3>\r\n                <fa-icon\r\n                    [icon]=\"faQuestionCircle\"\r\n                    [size]=\"iconSize\"\r\n                    class=\"text-secondary align-self-center\"\r\n                    ngbTooltip=\"{{ 'artemisApp.course.archive.tip' | artemisTranslate }}\"\r\n                />\r\n            </div>\r\n            @if (courses.length) {\r\n                <div class=\"d-flex justify-content-between gap-3 align-items-center ms-1\">\r\n                    <div class=\"text-primary d-inline-flex\">\r\n                        <a id=\"sort-test\" (click)=\"onSort()\" class=\"d-inline-flex align-items-center\">\r\n                            <fa-icon id=\"icon-test-down\" [icon]=\"isSortAscending ? faArrowDown19 : faArrowUp19\" />\r\n                            <span class=\"ms-1\" jhiTranslate=\"artemisApp.course.archive.sort\"></span>\r\n                        </a>\r\n                    </div>\r\n                    <jhi-search-filter (newSearchEvent)=\"setSearchValue($event)\" class=\"my-0\" />\r\n                </div>\r\n            }\r\n        </div>\r\n    </div>\r\n    <div class=\"module-bg py-3 rounded-3\">\r\n        @if (courses.length) {\r\n            <div class=\"mb-0\">\r\n                @for (semester of semesters; track semester; let last = $last; let i = $index) {\r\n                    <div\r\n                        class=\"d-flex justify-content-between align-items-center px-3\"\r\n                        (click)=\"isCourseFoundInSemester(semester) && toggleCollapseState(semester)\"\r\n                        tabindex=\"0\"\r\n                        role=\"button\"\r\n                        id=\"semester-group-{{ i }}\"\r\n                        [ngClass]=\"{ 'text-secondary': !(coursesBySemester[semester] | searchFilter: ['title'] : searchCourseText).length }\"\r\n                    >\r\n                        <span class=\"fw-bold\" jhiTranslate=\"{{ fullFormOfSemesterStrings[semester] }}\" [translateValues]=\"{ param: semester.slice(2) }\"></span>\r\n                        <fa-icon [icon]=\"semesterCollapsed[semester] ? faAngleDown : faAngleUp\" />\r\n                    </div>\r\n                    @if (!semesterCollapsed[semester]) {\r\n                        <div class=\"container-fluid mt-2\">\r\n                            <div class=\"course-grid justify-content-center align-items-center\">\r\n                                @for (course of coursesBySemester[semester] | searchFilter: ['title'] : searchCourseText; track course) {\r\n                                    <div class=\"course-card-wrapper p-0\">\r\n                                        <jhi-course-card-header\r\n                                            class=\"col-2\"\r\n                                            [courseId]=\"course.id\"\r\n                                            [courseTitle]=\"course.title\"\r\n                                            [courseIcon]=\"course.icon\"\r\n                                            [courseColor]=\"course.color\"\r\n                                            [archiveMode]=\"true\"\r\n                                        />\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    @if (!last) {\r\n                        <hr class=\"mx-3\" />\r\n                    }\r\n                }\r\n            </div>\r\n        } @else {\r\n            <div class=\"d-flex justify-content-center\">\r\n                <h4 class=\"text-secondary text-center mb-0\" jhiTranslate=\"artemisApp.course.archive.noCoursesPreviousSemester\"></h4>\r\n            </div>\r\n        }\r\n    </div>\r\n}\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "onSort", "\u0275\u0275element", "\u0275\u0275elementEnd", "$event", "setSearchValue", "\u0275\u0275advance", "\u0275\u0275property", "isSortAscending", "faArrowDown19", "faArrowUp19", "course_r5", "id", "title", "icon", "color", "\u0275\u0275repeaterCreate", "CourseArchiveComponent_Conditional_0_Conditional_18_For_4_Conditional_9_For_6_Template", "\u0275\u0275repeaterTrackByIdentity", "\u0275\u0275repeater", "\u0275\u0275pipeBind3", "coursesBySemester", "semester_r4", "\u0275\u0275pureFunction0", "_c0", "searchCourseText", "_r3", "$implicit", "isCourseFoundInSemester", "toggleCollapseState", "\u0275\u0275template", "CourseArchiveComponent_Conditional_0_Conditional_18_For_4_Conditional_9_Template", "CourseArchiveComponent_Conditional_0_Conditional_18_For_4_Conditional_10_Template", "\u0275\u0275propertyInterpolate1", "\u0275$index_53_r6", "\u0275\u0275pureFunction1", "_c1", "length", "\u0275\u0275propertyInterpolate", "fullFormOfSemesterStrings", "_c2", "slice", "semesterCollapsed", "faAngleDown", "faAngleUp", "\u0275\u0275conditional", "\u0275$count_53_r7", "CourseArchiveComponent_Conditional_0_Conditional_18_For_4_Template", "semesters", "CourseArchiveComponent_Conditional_0_Conditional_13_Template", "CourseArchiveComponent_Conditional_0_Conditional_18_Template", "CourseArchiveComponent_Conditional_0_Conditional_19_Template", "\u0275\u0275pipeBind1", "faQuestionCircle", "iconSize", "courses", "CourseArchiveComponent", "archiveCourseSubscription", "courseService", "inject", "CourseManagementService", "alertService", "AlertService", "ngOnInit", "loadArchivedCourses", "enableCourseOverviewBackground", "getCoursesForArchive", "subscribe", "next", "res", "body", "sortCoursesByTitle", "getUniqueSemesterNamesSorted", "mapCoursesIntoSemesters", "error", "onError", "forEach", "semester", "setSemesterCollapseState", "filter", "course", "startsWith", "ngOnDestroy", "unsubscribe", "disableCourseOverviewBackground", "searchValue", "expandOrCollapseBasedOnSearchValue", "getCollapseStateForSemesters", "reverse", "hasMatchingCourse", "some", "toLowerCase", "includes", "getSemesterCollapseStateFromStorage", "sort", "courseA", "courseB", "localeCompare", "map", "index", "indexOf", "semesterA", "semesterB", "yearsCompared", "parseInt", "prefixA", "prefixB", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "CourseArchiveComponent_Conditional_0_Template", "CourseCardHeaderComponent", "SearchFilterComponent", "SearchFilterPipe", "TranslateDirective", "ArtemisTranslatePipe", "CommonModule", "NgClass", "FontAwesomeModule", "FaIconComponent", "NgbTooltipModule", "NgbTooltip", "styles"]
}
