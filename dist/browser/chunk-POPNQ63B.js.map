{
  "version": 3,
  "sources": ["src/main/webapp/app/exercises/shared/exercise-headers/included-in-score-badge.component.ts", "src/main/webapp/app/exercises/shared/exercise-headers/included-in-score-badge.component.html"],
  "sourcesContent": ["import { Component, Input, OnChanges, OnDestroy, OnInit, inject } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { IncludedInOverallScore } from 'app/entities/exercise.model';\r\nimport { Subscription } from 'rxjs';\r\nimport { NgClass } from '@angular/common';\r\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'jhi-included-in-score-badge',\r\n    templateUrl: './included-in-score-badge.component.html',\r\n    styleUrls: ['./included-in-score-badge.component.scss'],\r\n    imports: [NgClass, NgbTooltip],\r\n})\r\nexport class IncludedInScoreBadgeComponent implements OnInit, OnDestroy, OnChanges {\r\n    private translateService = inject(TranslateService);\r\n\r\n    @Input() includedInOverallScore: IncludedInOverallScore | undefined;\r\n    public translatedEnum = '';\r\n    public translatedTooltip = '';\r\n    public badgeClass: string;\r\n    private translateSubscription: Subscription;\r\n\r\n    /**\r\n     * Sets the badge attributes based on the included in score enum\r\n     */\r\n    ngOnInit(): void {\r\n        this.translateSubscription = this.translateService.onLangChange.subscribe(() => {\r\n            this.setBadgeAttributes();\r\n        });\r\n    }\r\n\r\n    ngOnChanges() {\r\n        this.setBadgeAttributes();\r\n    }\r\n\r\n    /**\r\n     * Cleans up the subscription to the translation service\r\n     */\r\n    ngOnDestroy(): void {\r\n        if (this.translateSubscription) {\r\n            this.translateSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    private setBadgeAttributes(): void {\r\n        if (!this.includedInOverallScore) {\r\n            return;\r\n        }\r\n\r\n        switch (this.includedInOverallScore) {\r\n            case IncludedInOverallScore.INCLUDED_AS_BONUS:\r\n                this.badgeClass = 'bg-warning';\r\n                this.translatedEnum = this.translateService.instant('artemisApp.exercise.includedAsBonus');\r\n                this.translatedTooltip = this.translateService.instant('artemisApp.exercise.includedAsBonusTooltip');\r\n                break;\r\n            case IncludedInOverallScore.INCLUDED_COMPLETELY:\r\n                this.badgeClass = 'bg-success';\r\n                this.translatedEnum = this.translateService.instant('artemisApp.exercise.includedCompletely');\r\n                this.translatedTooltip = this.translateService.instant('artemisApp.exercise.includedCompletelyTooltip');\r\n                break;\r\n            case IncludedInOverallScore.NOT_INCLUDED:\r\n                this.badgeClass = 'bg-secondary';\r\n                this.translatedEnum = this.translateService.instant('artemisApp.exercise.notIncluded');\r\n                this.translatedTooltip = this.translateService.instant('artemisApp.exercise.notIncludedTooltip');\r\n                break;\r\n        }\r\n    }\r\n}\r\n", "<span class=\"badge included-score-badge\" [ngClass]=\"badgeClass\" [ngbTooltip]=\"translatedTooltip\">{{ translatedEnum }}</span>\r\n"],
  "mappings": "yQAaA,IAAaA,GAA6B,IAAA,CAApC,MAAOA,CAA6B,CAC9BC,iBAAmBC,EAAOC,CAAgB,EAEzCC,uBACFC,eAAiB,GACjBC,kBAAoB,GACpBC,WACCC,sBAKRC,UAAQ,CACJ,KAAKD,sBAAwB,KAAKP,iBAAiBS,aAAaC,UAAU,IAAK,CAC3E,KAAKC,mBAAkB,CAC3B,CAAC,CACL,CAEAC,aAAW,CACP,KAAKD,mBAAkB,CAC3B,CAKAE,aAAW,CACH,KAAKN,uBACL,KAAKA,sBAAsBO,YAAW,CAE9C,CAEQH,oBAAkB,CACtB,GAAK,KAAKR,uBAIV,OAAQ,KAAKA,uBAAsB,CAC/B,KAAKY,EAAuBC,kBACxB,KAAKV,WAAa,aAClB,KAAKF,eAAiB,KAAKJ,iBAAiBiB,QAAQ,qCAAqC,EACzF,KAAKZ,kBAAoB,KAAKL,iBAAiBiB,QAAQ,4CAA4C,EACnG,MACJ,KAAKF,EAAuBG,oBACxB,KAAKZ,WAAa,aAClB,KAAKF,eAAiB,KAAKJ,iBAAiBiB,QAAQ,wCAAwC,EAC5F,KAAKZ,kBAAoB,KAAKL,iBAAiBiB,QAAQ,+CAA+C,EACtG,MACJ,KAAKF,EAAuBI,aACxB,KAAKb,WAAa,eAClB,KAAKF,eAAiB,KAAKJ,iBAAiBiB,QAAQ,iCAAiC,EACrF,KAAKZ,kBAAoB,KAAKL,iBAAiBiB,QAAQ,wCAAwC,EAC/F,KACR,CACJ,4CArDSlB,EAA6B,2BAA7BA,EAA6BqB,UAAA,CAAA,CAAA,6BAAA,CAAA,EAAAC,OAAA,CAAAlB,uBAAA,wBAAA,EAAAmB,SAAA,CAAAC,CAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,QAAA,uBAAA,EAAA,UAAA,YAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,ICb1CE,EAAA,EAAA,OAAA,CAAA,EAAiGC,EAAA,CAAA,EAAoBC,EAAA,EACrHD,EAAA,EAAA;CAAA,SADyCE,EAAA,UAAAJ,EAAAvB,UAAA,EAAsB,aAAAuB,EAAAxB,iBAAA,EAAkC6B,EAAA,EAAAC,EAAAN,EAAAzB,cAAA,kBDWnFgC,EAASC,CAAU,EAAAC,OAAA,CAAA,uEAAA,CAAA,CAAA,SAEpBvC,CAA6B,GAAA",
  "names": ["IncludedInScoreBadgeComponent", "translateService", "inject", "TranslateService", "includedInOverallScore", "translatedEnum", "translatedTooltip", "badgeClass", "translateSubscription", "ngOnInit", "onLangChange", "subscribe", "setBadgeAttributes", "ngOnChanges", "ngOnDestroy", "unsubscribe", "IncludedInOverallScore", "INCLUDED_AS_BONUS", "instant", "INCLUDED_COMPLETELY", "NOT_INCLUDED", "selectors", "inputs", "features", "\u0275\u0275NgOnChangesFeature", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275property", "\u0275\u0275advance", "\u0275\u0275textInterpolate", "NgClass", "NgbTooltip", "styles"]
}
