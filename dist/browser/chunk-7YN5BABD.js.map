{
  "version": 3,
  "sources": ["src/main/webapp/app/entities/tutorial-group/tutorial-group-session.model.ts", "src/main/webapp/app/course/tutorial-groups/shared/tutorial-group-sessions-table/tutorial-group-session-row/tutorial-group-session-row.component.ts", "src/main/webapp/app/course/tutorial-groups/shared/tutorial-group-sessions-table/tutorial-group-session-row/tutorial-group-session-row.component.html", "src/main/webapp/app/course/tutorial-groups/shared/tutorial-group-sessions-table/tutorial-group-sessions-table.component.ts", "src/main/webapp/app/course/tutorial-groups/shared/tutorial-group-sessions-table/tutorial-group-sessions-table.component.html"],
  "sourcesContent": ["import { BaseEntity } from 'app/shared/model/base-entity';\r\nimport dayjs from 'dayjs/esm';\r\nimport { TutorialGroup } from 'app/entities/tutorial-group/tutorial-group.model';\r\nimport { TutorialGroupSchedule } from 'app/entities/tutorial-group/tutorial-group-schedule.model';\r\nimport { TutorialGroupFreePeriod } from 'app/entities/tutorial-group/tutorial-group-free-day.model';\r\n\r\nexport enum TutorialGroupSessionStatus {\r\n    ACTIVE = 'ACTIVE',\r\n    CANCELLED = 'CANCELLED',\r\n}\r\n\r\nexport class TutorialGroupSession implements BaseEntity {\r\n    public id?: number;\r\n    public tutorialGroupSchedule?: TutorialGroupSchedule;\r\n    public tutorialGroup?: TutorialGroup;\r\n    public start?: dayjs.Dayjs;\r\n    public end?: dayjs.Dayjs;\r\n    public status?: TutorialGroupSessionStatus;\r\n    public statusExplanation?: string;\r\n    public location?: string;\r\n    public tutorialGroupFreePeriod?: TutorialGroupFreePeriod;\r\n    public attendanceCount?: number;\r\n}\r\n", "import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, HostBinding, Input, OnChanges, Output, TemplateRef, ViewEncapsulation, inject } from '@angular/core';\r\nimport { faUmbrellaBeach } from '@fortawesome/free-solid-svg-icons';\r\nimport { TutorialGroupSession, TutorialGroupSessionStatus } from 'app/entities/tutorial-group/tutorial-group-session.model';\r\nimport { TutorialGroup } from 'app/entities/tutorial-group/tutorial-group.model';\r\nimport { TutorialGroupSessionService } from 'app/course/tutorial-groups/services/tutorial-group-session.service';\r\nimport { onError } from 'app/shared/util/global.utils';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { map } from 'rxjs';\r\nimport { NgbPopover } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { NgTemplateOutlet } from '@angular/common';\r\nimport { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    // this is intended and an attribute selector because otherwise the rendered table breaks\r\n    selector: '[jhi-session-row]',\r\n    templateUrl: './tutorial-group-session-row.component.html',\r\n    styleUrls: ['./tutorial-group-session-row.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    imports: [NgbPopover, FaIconComponent, FormsModule, TranslateDirective, NgTemplateOutlet, ArtemisDatePipe, ArtemisTranslatePipe],\r\n})\r\nexport class TutorialGroupSessionRowComponent implements OnChanges {\r\n    private changeDetectorRef = inject(ChangeDetectorRef);\r\n    private tutorialGroupSessionService = inject(TutorialGroupSessionService);\r\n    private alertService = inject(AlertService);\r\n\r\n    @HostBinding('class') class = 'tutorial-group-session-row';\r\n\r\n    @Input()\r\n    showIdColumn = false;\r\n\r\n    @Input() extraColumn: TemplateRef<any>;\r\n\r\n    @Input() session: TutorialGroupSession;\r\n    @Input() tutorialGroup: TutorialGroup;\r\n\r\n    @Input() timeZone?: string = undefined;\r\n\r\n    @Input() isReadOnly = false;\r\n\r\n    @Output() attendanceChanged = new EventEmitter<TutorialGroupSession>();\r\n\r\n    persistedAttendanceCount?: number = undefined;\r\n    attendanceDiffersFromPersistedValue = false;\r\n\r\n    isUpdatingAttendance = false;\r\n\r\n    cancellationReason?: string;\r\n    isCancelled = false;\r\n\r\n    overlapsWithFreePeriod = false;\r\n\r\n    faUmbrellaBeach = faUmbrellaBeach;\r\n\r\n    hasSchedule = false;\r\n\r\n    ngOnChanges() {\r\n        if (this.session) {\r\n            this.isCancelled = this.session.status === TutorialGroupSessionStatus.CANCELLED;\r\n            this.hasSchedule = !!this.session.tutorialGroupSchedule;\r\n            this.overlapsWithFreePeriod = !!this.session.tutorialGroupFreePeriod;\r\n            if (this.isCancelled) {\r\n                if (this.overlapsWithFreePeriod) {\r\n                    this.cancellationReason = this.session.tutorialGroupFreePeriod?.reason ? this.session.tutorialGroupFreePeriod.reason : undefined;\r\n                } else {\r\n                    this.cancellationReason = this.session.statusExplanation ? this.session.statusExplanation : undefined;\r\n                }\r\n            }\r\n            this.persistedAttendanceCount = this.session.attendanceCount;\r\n            this.attendanceDiffersFromPersistedValue = false;\r\n            this.changeDetectorRef.detectChanges();\r\n        }\r\n    }\r\n\r\n    onAttendanceInput(newAttendanceCount: number | null) {\r\n        this.session.attendanceCount = newAttendanceCount === null ? undefined : newAttendanceCount;\r\n        this.attendanceDiffersFromPersistedValue = this.persistedAttendanceCount !== this.session.attendanceCount;\r\n    }\r\n\r\n    saveAttendanceCount() {\r\n        this.isUpdatingAttendance = true;\r\n        this.tutorialGroupSessionService\r\n            .updateAttendanceCount(this.tutorialGroup.course!.id!, this.tutorialGroup.id!, this.session.id!, this.session.attendanceCount!)\r\n            .pipe(\r\n                map((res: HttpResponse<TutorialGroupSession>) => {\r\n                    return res.body!;\r\n                }),\r\n            )\r\n            .subscribe({\r\n                next: (tutorialGroupSession: TutorialGroupSession) => {\r\n                    this.session = tutorialGroupSession;\r\n                    this.persistedAttendanceCount = this.session.attendanceCount;\r\n                    this.attendanceDiffersFromPersistedValue = false;\r\n                    this.attendanceChanged.emit(this.session);\r\n                },\r\n                error: (res: HttpErrorResponse) => {\r\n                    onError(this.alertService, res);\r\n                    this.session.attendanceCount = this.persistedAttendanceCount;\r\n                    this.attendanceDiffersFromPersistedValue = false;\r\n                },\r\n            })\r\n            .add(() => {\r\n                this.isUpdatingAttendance = false;\r\n                this.changeDetectorRef.detectChanges();\r\n            });\r\n    }\r\n}\r\n", "<ng-container>\r\n    @if (showIdColumn) {\r\n        <td>{{ session.id }}</td>\r\n    }\r\n    <td>\r\n        <span>\r\n            {{ session.start | artemisDate: 'short-date' : false : timeZone! : true }}\r\n            {{ session.start | artemisDate: 'time' : false : timeZone! }} -\r\n            {{ session.end | artemisDate: 'time' : false : timeZone! }}\r\n        </span>\r\n        @if (isCancelled) {\r\n            <button\r\n                type=\"button\"\r\n                class=\"btn btn-outline-danger ms-2\"\r\n                placement=\"top\"\r\n                [disabled]=\"!cancellationReason\"\r\n                [ngbPopover]=\"cancellationReason ? cancellationReason : ''\"\r\n                [animation]=\"false\"\r\n                [popoverTitle]=\"'artemisApp.entities.tutorialFreePeriod.reason' | artemisTranslate\"\r\n            >\r\n                @if (overlapsWithFreePeriod) {\r\n                    <fa-icon [icon]=\"faUmbrellaBeach\" />\r\n                }\r\n                {{ 'artemisApp.pages.tutorialGroupSessionManagement.cancelled' | artemisTranslate }}\r\n            </button>\r\n        }\r\n    </td>\r\n    <td>\r\n        <button type=\"button\" class=\"btn btn-outline-info\" placement=\"top\" [ngbPopover]=\"session.location\" [animation]=\"false\" [autoClose]=\"'outside'\">\r\n            <span class=\"d-inline-block text-truncate\" style=\"max-width: 150px\">\r\n                {{ session.location }}\r\n            </span>\r\n        </button>\r\n    </td>\r\n    <td class=\"attendance-column\">\r\n        @if (!isReadOnly) {\r\n            <div class=\"input-group\">\r\n                <input\r\n                    type=\"number\"\r\n                    class=\"form-control attendance-input\"\r\n                    [ngModel]=\"session.attendanceCount\"\r\n                    (ngModelChange)=\"onAttendanceInput($event)\"\r\n                    name=\"attendance\"\r\n                    #attendance=\"ngModel\"\r\n                    min=\"0\"\r\n                    max=\"3000\"\r\n                    [readOnly]=\"isUpdatingAttendance\"\r\n                    aria-labelledby=\"attendanceHeader\"\r\n                />\r\n                <button\r\n                    [style.visibility]=\"attendanceDiffersFromPersistedValue && attendance.valid ? 'visible' : 'hidden'\"\r\n                    class=\"btn btn-outline-secondary\"\r\n                    type=\"button\"\r\n                    (click)=\"saveAttendanceCount()\"\r\n                    [disabled]=\"isUpdatingAttendance\"\r\n                >\r\n                    @if (isUpdatingAttendance) {\r\n                        <span class=\"spinner-border spinner-border-sm\"> </span>\r\n                    }\r\n                    {{ (isUpdatingAttendance ? 'entity.action.saving' : 'entity.action.save') | artemisTranslate }}\r\n                </button>\r\n            </div>\r\n        } @else {\r\n            {{ session.attendanceCount ?? '' }}\r\n        }\r\n    </td>\r\n    @if (tutorialGroup.tutorialGroupSchedule) {\r\n        <td>\r\n            @if (!hasSchedule) {\r\n                <div class=\"alert alert-info\" role=\"alert\" jhiTranslate=\"artemisApp.pages.tutorialGroupSessionManagement.differsFromSchedule\"></div>\r\n            }\r\n        </td>\r\n    }\r\n    @if (extraColumn) {\r\n        <td>\r\n            <div class=\"extra-buttons\">\r\n                <ng-template [ngTemplateOutlet]=\"extraColumn\" [ngTemplateOutletContext]=\"{ $implicit: session }\" />\r\n            </div>\r\n        </td>\r\n    }\r\n</ng-container>\r\n", "import {\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    ContentChild,\r\n    EventEmitter,\r\n    Input,\r\n    OnChanges,\r\n    Output,\r\n    SimpleChanges,\r\n    TemplateRef,\r\n    ViewEncapsulation,\r\n    inject,\r\n} from '@angular/core';\r\nimport { TutorialGroupSession } from 'app/entities/tutorial-group/tutorial-group-session.model';\r\nimport { TutorialGroup } from 'app/entities/tutorial-group/tutorial-group.model';\r\nimport { SortService } from 'app/shared/service/sort.service';\r\nimport dayjs from 'dayjs/esm';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { TutorialGroupSessionRowComponent } from './tutorial-group-session-row/tutorial-group-session-row.component';\r\nimport { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-tutorial-group-sessions-table',\r\n    templateUrl: './tutorial-group-sessions-table.component.html',\r\n    styleUrls: ['./tutorial-group-sessions-table.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None,\r\n    imports: [TranslateDirective, TutorialGroupSessionRowComponent, ArtemisDatePipe, ArtemisTranslatePipe],\r\n})\r\nexport class TutorialGroupSessionsTableComponent implements OnChanges {\r\n    private sortService = inject(SortService);\r\n    private changeDetectorRef = inject(ChangeDetectorRef);\r\n\r\n    @ContentChild(TemplateRef, { static: true }) extraColumn: TemplateRef<any>;\r\n\r\n    @Input()\r\n    tutorialGroup: TutorialGroup;\r\n\r\n    @Input()\r\n    sessions: TutorialGroupSession[] = [];\r\n\r\n    @Input()\r\n    timeZone?: string = undefined;\r\n\r\n    timeZoneUsedForDisplay = dayjs.tz.guess();\r\n\r\n    @Input()\r\n    showIdColumn = false;\r\n\r\n    @Input()\r\n    isReadOnly = false;\r\n\r\n    @Output() attendanceUpdated = new EventEmitter<void>();\r\n\r\n    upcomingSessions: TutorialGroupSession[] = [];\r\n    pastSessions: TutorialGroupSession[] = [];\r\n\r\n    nextSession: TutorialGroupSession | undefined = undefined;\r\n\r\n    isCollapsed = true;\r\n    get numberOfColumns(): number {\r\n        let numberOfColumns = this.tutorialGroup.tutorialGroupSchedule ? 4 : 3;\r\n        if (this.extraColumn) {\r\n            numberOfColumns++;\r\n        }\r\n        if (this.showIdColumn) {\r\n            numberOfColumns++;\r\n        }\r\n        return numberOfColumns;\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        for (const propName in changes) {\r\n            if (changes.hasOwnProperty(propName)) {\r\n                const change = changes[propName];\r\n                switch (propName) {\r\n                    case 'sessions': {\r\n                        if (change.currentValue) {\r\n                            this.splitIntoUpcomingAndPastSessions(this.sortService.sortByProperty(change.currentValue, 'start', false));\r\n                        }\r\n                        break;\r\n                    }\r\n                    case 'timeZone': {\r\n                        if (change.currentValue) {\r\n                            this.timeZoneUsedForDisplay = change.currentValue;\r\n                            this.changeDetectorRef.detectChanges();\r\n                        }\r\n                        break;\r\n                    }\r\n                    case 'tutorialGroup': {\r\n                        if (change.currentValue) {\r\n                            this.nextSession = change.currentValue.nextSession;\r\n                            this.changeDetectorRef.detectChanges();\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public getCurrentDate(): dayjs.Dayjs {\r\n        return dayjs();\r\n    }\r\n\r\n    public trackSession(index: number, item: TutorialGroupSession): string {\r\n        return `${item.id}`;\r\n    }\r\n\r\n    private splitIntoUpcomingAndPastSessions(sessions: TutorialGroupSession[]) {\r\n        const upcoming: TutorialGroupSession[] = [];\r\n        const past: TutorialGroupSession[] = [];\r\n        const now = this.getCurrentDate();\r\n\r\n        for (const session of sessions) {\r\n            if (session.end!.isBefore(now)) {\r\n                past.push(session);\r\n            } else {\r\n                upcoming.push(session);\r\n            }\r\n        }\r\n        this.upcomingSessions = upcoming;\r\n        this.pastSessions = past;\r\n        this.changeDetectorRef.detectChanges();\r\n    }\r\n\r\n    onAttendanceChanged(session: TutorialGroupSession) {\r\n        // Note: We synchronize the attendance of upcoming or past sessions with the next session and vice versa\r\n        if (session.id === this.nextSession?.id) {\r\n            this.nextSession = session;\r\n            const upcomingIndex = this.upcomingSessions.findIndex((s) => s.id === session.id);\r\n            if (upcomingIndex !== -1) {\r\n                this.upcomingSessions[upcomingIndex] = session;\r\n            }\r\n            const pastIndex = this.pastSessions.findIndex((s) => s.id === session.id);\r\n            if (pastIndex !== -1) {\r\n                this.pastSessions[pastIndex] = session;\r\n            }\r\n            this.changeDetectorRef.detectChanges();\r\n        }\r\n        this.attendanceUpdated.emit();\r\n    }\r\n}\r\n", "<div class=\"table-responsive session-table\">\r\n    <div class=\"col-12 mb-2\">\r\n        <div\r\n            class=\"alert alert-info\"\r\n            jhiTranslate=\"artemisApp.pages.tutorialGroupSessionManagement.timeZoneExplanation\"\r\n            [translateValues]=\"{ timeZone: timeZoneUsedForDisplay }\"\r\n        ></div>\r\n    </div>\r\n    <table class=\"table table-sm\">\r\n        <thead>\r\n            <tr>\r\n                @if (showIdColumn) {\r\n                    <th jhiTranslate=\"global.field.id\"></th>\r\n                }\r\n                <th jhiTranslate=\"artemisApp.entities.tutorialGroupSession.date\"></th>\r\n                <th>\r\n                    <span\r\n                        jhiTranslate=\"{{\r\n                            tutorialGroup.isOnline ? 'artemisApp.forms.scheduleForm.locationInput.labelOnline' : 'artemisApp.forms.scheduleForm.locationInput.labelOffline'\r\n                        }}\"\r\n                    ></span>\r\n                </th>\r\n                <th class=\"attendance-column\" id=\"attendanceHeader\" jhiTranslate=\"artemisApp.entities.tutorialGroupSession.attendance\"></th>\r\n                @if (tutorialGroup.tutorialGroupSchedule) {\r\n                    <th jhiTranslate=\"artemisApp.pages.tutorialGroupSessionManagement.columns.notes\"></th>\r\n                }\r\n                @if (extraColumn) {\r\n                    <th></th>\r\n                }\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <!-- Next session -->\r\n            @if (nextSession) {\r\n                <tr\r\n                    jhi-session-row\r\n                    [extraColumn]=\"extraColumn\"\r\n                    [session]=\"nextSession\"\r\n                    [tutorialGroup]=\"tutorialGroup\"\r\n                    [timeZone]=\"timeZone\"\r\n                    [showIdColumn]=\"showIdColumn\"\r\n                    (attendanceChanged)=\"onAttendanceChanged($event)\"\r\n                    [isReadOnly]=\"isReadOnly\"\r\n                ></tr>\r\n            }\r\n            <!-- All sessions -->\r\n            <tr class=\"table-dark text-center\">\r\n                <td [colSpan]=\"numberOfColumns\">\r\n                    {{ 'artemisApp.pages.tutorialGroupSessionManagement.divider' | artemisTranslate }}\r\n                    <div class=\"text-center\">\r\n                        <button\r\n                            type=\"button\"\r\n                            class=\"btn btn-sm btn-outline-secondary\"\r\n                            (click)=\"isCollapsed = !isCollapsed\"\r\n                            jhiTranslate=\"artemisApp.pages.tutorialGroupSessionManagement.showAll\"\r\n                        ></button>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n            @for (session of upcomingSessions; track trackSession($index, session)) {\r\n                <tr\r\n                    [hidden]=\"isCollapsed\"\r\n                    jhi-session-row\r\n                    [extraColumn]=\"extraColumn\"\r\n                    [session]=\"session\"\r\n                    [timeZone]=\"timeZone\"\r\n                    [tutorialGroup]=\"tutorialGroup\"\r\n                    [showIdColumn]=\"showIdColumn\"\r\n                    (attendanceChanged)=\"onAttendanceChanged($event)\"\r\n                    [isReadOnly]=\"isReadOnly\"\r\n                ></tr>\r\n            }\r\n            <tr [hidden]=\"isCollapsed\">\r\n                <td [colSpan]=\"numberOfColumns\">\r\n                    <div class=\"text-center\">\r\n                        <h4>\r\n                            {{ 'artemisApp.pages.tutorialGroupSessionManagement.currentDate' | artemisTranslate }}\r\n                            {{ getCurrentDate() | artemisDate: 'long-date' : false : timeZoneUsedForDisplay : true }}\r\n                            {{ getCurrentDate() | artemisDate: 'time' : false : timeZoneUsedForDisplay : false }}\r\n                        </h4>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n            @if (pastSessions && pastSessions.length > 0) {\r\n                @for (session of pastSessions; track trackSession($index, session)) {\r\n                    <tr\r\n                        [hidden]=\"isCollapsed\"\r\n                        jhi-session-row\r\n                        [extraColumn]=\"extraColumn\"\r\n                        [session]=\"session\"\r\n                        [tutorialGroup]=\"tutorialGroup\"\r\n                        [timeZone]=\"timeZone\"\r\n                        [showIdColumn]=\"showIdColumn\"\r\n                        (attendanceChanged)=\"onAttendanceChanged($event)\"\r\n                        [isReadOnly]=\"isReadOnly\"\r\n                    ></tr>\r\n                }\r\n            }\r\n        </tbody>\r\n    </table>\r\n</div>\r\n"],
  "mappings": "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",
  "names": ["TutorialGroupSessionStatus", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275textInterpolate", "ctx_r0", "session", "id", "\u0275\u0275element", "\u0275\u0275property", "faUmbrellaBeach", "\u0275\u0275template", "TutorialGroupSessionRowComponent_Conditional_11_Conditional_4_Template", "cancellationReason", "\u0275\u0275pipeBind1", "\u0275\u0275conditional", "overlapsWithFreePeriod", "\u0275\u0275textInterpolate1", "\u0275\u0275listener", "$event", "\u0275\u0275restoreView", "_r2", "\u0275\u0275nextContext", "\u0275\u0275resetView", "onAttendanceInput", "saveAttendanceCount", "TutorialGroupSessionRowComponent_Conditional_24_Conditional_8_Template", "attendanceCount", "isUpdatingAttendance", "\u0275\u0275styleProp", "attendanceDiffersFromPersistedValue", "attendance_r3", "valid", "tmp_1_0", "undefined", "TutorialGroupSessionRowComponent_Conditional_27_Conditional_3_Template", "hasSchedule", "TutorialGroupSessionRowComponent_Conditional_28_ng_template_5_Template", "extraColumn", "\u0275\u0275pureFunction1", "_c2", "TutorialGroupSessionRowComponent", "changeDetectorRef", "inject", "ChangeDetectorRef", "tutorialGroupSessionService", "TutorialGroupSessionService", "alertService", "AlertService", "class", "showIdColumn", "tutorialGroup", "timeZone", "isReadOnly", "attendanceChanged", "EventEmitter", "persistedAttendanceCount", "isCancelled", "ngOnChanges", "status", "TutorialGroupSessionStatus", "CANCELLED", "tutorialGroupSchedule", "tutorialGroupFreePeriod", "reason", "statusExplanation", "detectChanges", "newAttendanceCount", "updateAttendanceCount", "course", "pipe", "map", "res", "body", "subscribe", "next", "tutorialGroupSession", "emit", "error", "onError", "add", "selectors", "hostVars", "hostBindings", "rf", "ctx", "\u0275\u0275classMap", "\u0275\u0275elementContainerStart", "TutorialGroupSessionRowComponent_Conditional_2_Template", "TutorialGroupSessionRowComponent_Conditional_11_Template", "TutorialGroupSessionRowComponent_Conditional_24_Template", "TutorialGroupSessionRowComponent_Conditional_25_Template", "TutorialGroupSessionRowComponent_Conditional_27_Template", "TutorialGroupSessionRowComponent_Conditional_28_Template", "\u0275\u0275textInterpolate3", "\u0275\u0275pipeBindV", "\u0275\u0275pureFunction2", "_c1", "start", "\u0275\u0275pipeBind4", "end", "location", "NgbPopover", "FaIconComponent", "FormsModule", "DefaultValueAccessor", "NumberValueAccessor", "NgControlStatus", "MinValidator", "MaxValidator", "NgModel", "TranslateDirective", "NgTemplateOutlet", "ArtemisDatePipe", "ArtemisTranslatePipe", "styles", "encapsulation", "changeDetection", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275elementStart", "\u0275\u0275listener", "$event", "\u0275\u0275restoreView", "_r1", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "onAttendanceChanged", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "extraColumn", "nextSession", "tutorialGroup", "timeZone", "showIdColumn", "isReadOnly", "_r3", "isCollapsed", "session_r4", "_r5", "session_r6", "\u0275\u0275repeaterCreate", "TutorialGroupSessionsTableComponent_Conditional_60_For_2_Template", "\u0275\u0275componentInstance", "trackSession", "\u0275\u0275repeater", "pastSessions", "TutorialGroupSessionsTableComponent", "sortService", "inject", "SortService", "changeDetectorRef", "ChangeDetectorRef", "sessions", "undefined", "timeZoneUsedForDisplay", "dayjs", "tz", "guess", "attendanceUpdated", "EventEmitter", "upcomingSessions", "numberOfColumns", "tutorialGroupSchedule", "ngOnChanges", "changes", "propName", "hasOwnProperty", "change", "currentValue", "splitIntoUpcomingAndPastSessions", "sortByProperty", "detectChanges", "getCurrentDate", "index", "item", "id", "upcoming", "past", "now", "session", "end", "isBefore", "push", "upcomingIndex", "findIndex", "s", "pastIndex", "emit", "selectors", "contentQueries", "rf", "ctx", "dirIndex", "TemplateRef", "\u0275\u0275template", "TutorialGroupSessionsTableComponent_Conditional_13_Template", "TutorialGroupSessionsTableComponent_Conditional_23_Template", "TutorialGroupSessionsTableComponent_Conditional_24_Template", "TutorialGroupSessionsTableComponent_Conditional_30_Template", "TutorialGroupSessionsTableComponent_For_44_Template", "TutorialGroupSessionsTableComponent_Conditional_60_Template", "\u0275\u0275pureFunction1", "_c0", "\u0275\u0275conditional", "\u0275\u0275propertyInterpolate", "isOnline", "\u0275\u0275textInterpolate1", "\u0275\u0275pipeBind1", "\u0275\u0275textInterpolate3", "\u0275\u0275pipeBindV", "\u0275\u0275pureFunction2", "_c1", "_c2", "length", "TranslateDirective", "TutorialGroupSessionRowComponent", "ArtemisDatePipe", "ArtemisTranslatePipe", "styles", "encapsulation", "changeDetection"]
}
