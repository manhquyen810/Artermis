{
  "version": 3,
  "sources": ["src/main/webapp/app/exercises/programming/shared/code-editor/model/code-editor.model.ts"],
  "sourcesContent": ["import { StudentParticipation } from 'app/entities/participation/student-participation.model';\r\nimport { TemplateProgrammingExerciseParticipation } from 'app/entities/participation/template-programming-exercise-participation.model';\r\nimport { SolutionProgrammingExerciseParticipation } from 'app/entities/participation/solution-programming-exercise-participation.model';\r\nimport { ProgrammingExercise } from 'app/entities/programming/programming-exercise.model';\r\nimport { AuxiliaryRepository } from 'app/entities/programming/programming-exercise-auxiliary-repository-model';\r\n\r\n/**\r\n * Enumeration defining type of the exported file.\r\n */\r\nexport enum FileType {\r\n    FILE = 'FILE',\r\n    FOLDER = 'FOLDER',\r\n}\r\n\r\nexport abstract class FileChange {}\r\n\r\nexport class CreateFileChange extends FileChange {\r\n    constructor(\r\n        public fileType: FileType,\r\n        public fileName: string,\r\n    ) {\r\n        super();\r\n    }\r\n}\r\n\r\nexport class DeleteFileChange extends FileChange {\r\n    constructor(\r\n        public fileType: FileType,\r\n        public fileName: string,\r\n    ) {\r\n        super();\r\n    }\r\n}\r\n\r\nexport class RenameFileChange extends FileChange {\r\n    constructor(\r\n        public fileType: FileType,\r\n        public oldFileName: string,\r\n        public newFileName: string,\r\n    ) {\r\n        super();\r\n    }\r\n}\r\n\r\nexport type FileSubmission = { [fileName: string]: string | undefined };\r\n\r\n/**\r\n * Enumeration defining domain type.\r\n */\r\nexport enum DomainType {\r\n    PARTICIPATION = 'PARTICIPATION',\r\n    TEST_REPOSITORY = 'TEST_REPOSITORY',\r\n    AUXILIARY_REPOSITORY = 'AUXILIARY_REPOSITORY',\r\n}\r\n\r\n/**\r\n * Enumeration specifying the repository type\r\n */\r\nexport enum RepositoryType {\r\n    ASSIGNMENT = 'ASSIGNMENT', // The ASSIGNMENT repository is the USER repository of an instructor for an exercise\r\n    TEMPLATE = 'TEMPLATE',\r\n    SOLUTION = 'SOLUTION',\r\n    TESTS = 'TESTS',\r\n    AUXILIARY = 'AUXILIARY',\r\n    USER = 'USER',\r\n}\r\n\r\n/**\r\n * Enumeration defining whether there is a conflict while checking out.\r\n */\r\nexport enum RepositoryError {\r\n    CHECKOUT_CONFLICT = 'checkoutConflict',\r\n}\r\n\r\nexport type FileSubmissionError = { error: RepositoryError; participationId: number; fileName: string };\r\n\r\n/**\r\n * Enumeration defining the state of the commit.\r\n */\r\nexport enum CommitState {\r\n    UNDEFINED = 'UNDEFINED',\r\n    COULD_NOT_BE_RETRIEVED = 'COULD_NOT_BE_RETRIEVED',\r\n    CLEAN = 'CLEAN',\r\n    UNCOMMITTED_CHANGES = 'UNCOMMITTED_CHANGES',\r\n    COMMITTING = 'COMMITTING',\r\n    CONFLICT = 'CONFLICT',\r\n}\r\n\r\n/**\r\n * Enumeration defining the state of the editor.\r\n */\r\nexport enum EditorState {\r\n    CLEAN = 'CLEAN',\r\n    UNSAVED_CHANGES = 'UNSAVED_CHANGES',\r\n    SAVING = 'SAVING',\r\n    REFRESHING = 'REFRESHING',\r\n}\r\n\r\n/**\r\n * Enumeration defining type of the resize operation.\r\n */\r\nexport enum ResizeType {\r\n    SIDEBAR_LEFT = 'SIDEBAR_LEFT',\r\n    SIDEBAR_RIGHT = 'SIDEBAR_RIGHT',\r\n    MAIN_BOTTOM = 'MAIN_BOTTOM',\r\n    BOTTOM = 'BOTTOM',\r\n}\r\n\r\nexport type DomainParticipationChange = [DomainType.PARTICIPATION, StudentParticipation | TemplateProgrammingExerciseParticipation | SolutionProgrammingExerciseParticipation];\r\nexport type DomainTestRepositoryChange = [DomainType.TEST_REPOSITORY, ProgrammingExercise];\r\nexport type DomainAuxiliaryRepositoryChange = [DomainType.AUXILIARY_REPOSITORY, AuxiliaryRepository];\r\nexport type DomainChange = DomainParticipationChange | DomainTestRepositoryChange | DomainAuxiliaryRepositoryChange;\r\n\r\n/**\r\n * Enumeration defining the state of git.\r\n */\r\nexport enum GitConflictState {\r\n    CHECKOUT_CONFLICT = 'CHECKOUT_CONFLICT',\r\n    OK = 'OK',\r\n}\r\n\r\n/**\r\n * Enumeration defining the icon in a file badge.\r\n */\r\nexport enum FileBadgeType {\r\n    FEEDBACK_SUGGESTION = 'FEEDBACK_SUGGESTION',\r\n}\r\n\r\n/**\r\n * A file badge is a badge in the file tree of the code editor with an icon and a count.\r\n */\r\nexport class FileBadge {\r\n    constructor(\r\n        public type: FileBadgeType,\r\n        public count: number,\r\n    ) {}\r\n}\r\n"],
  "mappings": "AASA,IAAYA,EAAZ,SAAYA,EAAQ,CAChBA,OAAAA,EAAA,KAAA,OACAA,EAAA,OAAA,SAFQA,CAGZ,EAHYA,GAAQ,CAAA,CAAA,EAKEC,EAAhB,KAA0B,CAAA,EAEnBC,EAAP,cAAgCD,CAAU,CAEjCE,SACAC,SAFXC,YACWF,EACAC,EAAgB,CAEvB,MAAK,EAHE,KAAAD,SAAAA,EACA,KAAAC,SAAAA,CAGX,GAGSE,EAAP,cAAgCL,CAAU,CAEjCE,SACAC,SAFXC,YACWF,EACAC,EAAgB,CAEvB,MAAK,EAHE,KAAAD,SAAAA,EACA,KAAAC,SAAAA,CAGX,GAGSG,EAAP,cAAgCN,CAAU,CAEjCE,SACAK,YACAC,YAHXJ,YACWF,EACAK,EACAC,EAAmB,CAE1B,MAAK,EAJE,KAAAN,SAAAA,EACA,KAAAK,YAAAA,EACA,KAAAC,YAAAA,CAGX,GAQQC,EAAZ,SAAYA,EAAU,CAClBA,OAAAA,EAAA,cAAA,gBACAA,EAAA,gBAAA,kBACAA,EAAA,qBAAA,uBAHQA,CAIZ,EAJYA,GAAU,CAAA,CAAA,EASVC,EAAZ,SAAYA,EAAc,CACtBA,OAAAA,EAAA,WAAA,aACAA,EAAA,SAAA,WACAA,EAAA,SAAA,WACAA,EAAA,MAAA,QACAA,EAAA,UAAA,YACAA,EAAA,KAAA,OANQA,CAOZ,EAPYA,GAAc,CAAA,CAAA,EAYdC,EAAZ,SAAYA,EAAe,CACvBA,OAAAA,EAAA,kBAAA,mBADQA,CAEZ,EAFYA,GAAe,CAAA,CAAA,EASfC,EAAZ,SAAYA,EAAW,CACnBA,OAAAA,EAAA,UAAA,YACAA,EAAA,uBAAA,yBACAA,EAAA,MAAA,QACAA,EAAA,oBAAA,sBACAA,EAAA,WAAA,aACAA,EAAA,SAAA,WANQA,CAOZ,EAPYA,GAAW,CAAA,CAAA,EAYXC,EAAZ,SAAYA,EAAW,CACnBA,OAAAA,EAAA,MAAA,QACAA,EAAA,gBAAA,kBACAA,EAAA,OAAA,SACAA,EAAA,WAAA,aAJQA,CAKZ,EALYA,GAAW,CAAA,CAAA,EAUXC,EAAZ,SAAYA,EAAU,CAClBA,OAAAA,EAAA,aAAA,eACAA,EAAA,cAAA,gBACAA,EAAA,YAAA,cACAA,EAAA,OAAA,SAJQA,CAKZ,EALYA,GAAU,CAAA,CAAA,EAeVC,EAAZ,SAAYA,EAAgB,CACxBA,OAAAA,EAAA,kBAAA,oBACAA,EAAA,GAAA,KAFQA,CAGZ,EAHYA,GAAgB,CAAA,CAAA,EAQhBC,EAAZ,SAAYA,EAAa,CACrBA,OAAAA,EAAA,oBAAA,sBADQA,CAEZ,EAFYA,GAAa,CAAA,CAAA,EAOZC,EAAP,KAAgB,CAEPC,KACAC,MAFXf,YACWc,EACAC,EAAa,CADb,KAAAD,KAAAA,EACA,KAAAC,MAAAA,CACR",
  "names": ["FileType", "FileChange", "CreateFileChange", "fileType", "fileName", "constructor", "DeleteFileChange", "RenameFileChange", "oldFileName", "newFileName", "DomainType", "RepositoryType", "RepositoryError", "CommitState", "EditorState", "ResizeType", "GitConflictState", "FileBadgeType", "FileBadge", "type", "count"]
}
