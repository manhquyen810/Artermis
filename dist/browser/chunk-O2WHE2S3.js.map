{
  "version": 3,
  "sources": ["src/main/webapp/app/exercises/programming/shared/instructions-render/extensions/programming-exercise-task.extension.ts"],
  "sourcesContent": ["import { Injectable, ViewContainerRef } from '@angular/core';\r\nimport { ArtemisTextReplacementPlugin } from 'app/shared/markdown-editor/extensions/ArtemisTextReplacementPlugin';\r\n\r\n/**\r\n * Regular expression for finding tasks.\r\n * A Task starts with the identifier `[task]` and the task name in square brackets.\r\n * This gets followed by a list of test cases in parentheses.\r\n * @example [task][Implement BubbleSort](testBubbleSort)\r\n *\r\n * The regular expression is used to find all tasks inside a problem statement and therefore uses the global flag.\r\n *\r\n * This is coupled to the value used in `ProgrammingExerciseTaskService` in the server.\r\n * If you change the regex, make sure to change it in all places!\r\n */\r\nexport const taskRegex = /\\[task]\\[([^[\\]]+)]\\(((?:[^(),]+(?:\\([^()]*\\)[^(),]*)?(?:,[^(),]+(?:\\([^()]*\\)[^(),]*)?)*)?)\\)/g;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ProgrammingExerciseTaskExtensionWrapper extends ArtemisTextReplacementPlugin {\r\n    // We don't have a provider for ViewContainerRef, so we pass it from ProgrammingExerciseInstructionComponent\r\n    viewContainerRef: ViewContainerRef;\r\n\r\n    /**\r\n     * The task regex is coupled to the value used in ProgrammingExerciseTaskService in the server\r\n     * and `TaskCommand` in the client\r\n     * If you change the regex, make sure to change it in all places!\r\n     */\r\n    replaceText(text: string): string {\r\n        return text.replace(taskRegex, (match) => {\r\n            return this.escapeTaskSpecialCharactersForMarkdown(match);\r\n        });\r\n    }\r\n\r\n    private escapeTaskSpecialCharactersForMarkdown = (text: string) => {\r\n        // We want to avoid special characters (such as underscores) in the task or test case names to be interpreted as markdown, as this may interfere with the preview.\r\n        return text.replace(/[`.*_+\\-!${}()|[\\]\\\\]/g, '\\\\$&');\r\n    };\r\n}\r\n"],
  "mappings": "yFAcO,IAAMA,EAAY,kGAGZC,GAAwC,IAAA,CAA/C,MAAOA,UAAgDC,CAA4B,CAErFC,iBAOAC,YAAYC,EAAY,CACpB,OAAOA,EAAKC,QAAQN,EAAYO,GACrB,KAAKC,uCAAuCD,CAAK,CAC3D,CACL,CAEQC,uCAA0CH,GAEvCA,EAAKC,QAAQ,yBAA0B,MAAM,iEAjB/CL,CAAuC,IAAAQ,GAAvCR,CAAuC,CAAA,CAAA,GAAA,6BAAvCA,EAAuCS,QAAvCT,EAAuCU,UAAAC,WAD1B,MAAM,CAAA,SACnBX,CAAwC,GAAA",
  "names": ["taskRegex", "ProgrammingExerciseTaskExtensionWrapper", "ArtemisTextReplacementPlugin", "viewContainerRef", "replaceText", "text", "replace", "match", "escapeTaskSpecialCharactersForMarkdown", "__ngFactoryType__", "factory", "\u0275fac", "providedIn"]
}
