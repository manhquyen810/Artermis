{
  "version": 3,
  "sources": ["src/main/webapp/app/exercises/shared/exercise-headers/header-participation-page.component.ts", "src/main/webapp/app/exercises/shared/exercise-headers/header-participation-page.component.html"],
  "sourcesContent": ["import { Component, Input, OnChanges, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport dayjs from 'dayjs/esm';\r\nimport { Exercise, IncludedInOverallScore, getCourseFromExercise, getIcon } from 'app/entities/exercise.model';\r\nimport { StudentParticipation } from 'app/entities/participation/student-participation.model';\r\nimport { ButtonType } from 'app/shared/components/button.component';\r\nimport { ExerciseCategory } from 'app/entities/exercise-category.model';\r\nimport { getExerciseDueDate, hasExerciseDueDatePassed } from 'app/exercises/shared/exercise/exercise.utils';\r\nimport { roundValueSpecifiedByCourseSettings } from 'app/shared/util/utils';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { NgClass, NgStyle } from '@angular/common';\r\nimport { DifficultyBadgeComponent } from './difficulty-badge.component';\r\nimport { IncludedInScoreBadgeComponent } from './included-in-score-badge.component';\r\nimport { SubmissionResultStatusComponent } from 'app/overview/submission-result-status.component';\r\nimport { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\nimport { ArtemisTimeAgoPipe } from 'app/shared/pipes/artemis-time-ago.pipe';\r\nimport { getLatestResultOfStudentParticipation } from 'app/exercises/shared/participation/participation.utils';\r\n\r\n@Component({\r\n    selector: 'jhi-header-participation-page',\r\n    templateUrl: './header-participation-page.component.html',\r\n    styleUrls: ['./header-participation-page.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    imports: [\r\n        TranslateDirective,\r\n        NgClass,\r\n        NgStyle,\r\n        DifficultyBadgeComponent,\r\n        IncludedInScoreBadgeComponent,\r\n        SubmissionResultStatusComponent,\r\n        ArtemisDatePipe,\r\n        ArtemisTranslatePipe,\r\n        ArtemisTimeAgoPipe,\r\n    ],\r\n})\r\nexport class HeaderParticipationPageComponent implements OnInit, OnChanges {\r\n    readonly ButtonType = ButtonType;\r\n    readonly IncludedInOverallScore = IncludedInOverallScore;\r\n    @Input() title: string;\r\n    @Input() exercise: Exercise;\r\n    @Input() participation: StudentParticipation;\r\n\r\n    public exerciseStatusBadge = 'bg-success';\r\n    public exerciseCategories: ExerciseCategory[];\r\n    public achievedPoints?: number;\r\n\r\n    dueDate?: dayjs.Dayjs;\r\n    getIcon = getIcon;\r\n\r\n    /**\r\n     * Sets the status badge and categories of the exercise on init\r\n     */\r\n    ngOnInit(): void {\r\n        this.ngOnChanges();\r\n    }\r\n\r\n    /**\r\n     * Returns false if it is an exam exercise and the publishResultsDate is in the future, true otherwise\r\n     */\r\n    get resultsPublished(): boolean {\r\n        if (this.exercise?.exerciseGroup?.exam) {\r\n            if (this.exercise.exerciseGroup.exam.publishResultsDate) {\r\n                return dayjs().isAfter(this.exercise.exerciseGroup.exam.publishResultsDate);\r\n            }\r\n            // default to false if it is an exam exercise but the publishResultsDate is not set\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Sets the status badge and categories of the exercise on changes\r\n     */\r\n    ngOnChanges() {\r\n        if (this.exercise) {\r\n            this.exerciseStatusBadge = hasExerciseDueDatePassed(this.exercise, this.participation) ? 'bg-danger' : 'bg-success';\r\n            this.exerciseCategories = this.exercise.categories || [];\r\n            this.dueDate = getExerciseDueDate(this.exercise, this.participation);\r\n            const result = getLatestResultOfStudentParticipation(this.participation, false, true);\r\n            if (result?.rated) {\r\n                this.achievedPoints = roundValueSpecifiedByCourseSettings((result.score! * this.exercise.maxPoints!) / 100, getCourseFromExercise(this.exercise));\r\n            }\r\n        }\r\n    }\r\n}\r\n", "@if (exercise) {\r\n    <div class=\"course-info-bar course-info-bar--participation\" id=\"participation-header\">\r\n        <div class=\"row\">\r\n            <div class=\"col-12 col-sm-12 col-lg-5 d-flex flex-column justify-content-center\">\r\n                <h4 class=\"fw-medium\"><ng-content select=\"[pagetitle]\" /></h4>\r\n                <div class=\"d-flex align-items-center\">\r\n                    <h6 class=\"me-2 mb-0 fw-medium\" jhiTranslate=\"artemisApp.courseOverview.exerciseDetails.dueDate\"></h6>\r\n                    <span>{{ (dueDate | artemisDate) || 'N/A' }}</span>\r\n                    @if (dueDate) {\r\n                        <span [ngClass]=\"exerciseStatusBadge\" class=\"badge ms-2\">{{ dueDate | artemisTimeAgo }}</span>\r\n                    }\r\n                </div>\r\n                @if (exercise.categories) {\r\n                    <div class=\"d-sm-flex\">\r\n                        <h6 class=\"me-1 fw-medium\" jhiTranslate=\"artemisApp.courseOverview.exerciseDetails.categories\"></h6>\r\n                        @for (category of exerciseCategories; track category) {\r\n                            <h6 class=\"fw-medium\">\r\n                                <span class=\"badge text-white me-1\" [ngStyle]=\"{ backgroundColor: category.color }\">{{ category.category }}</span>\r\n                            </h6>\r\n                        }\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div class=\"col-12 col-sm-auto flex-sm-shrink-0 col-lg-4 mt-4 mt-lg-0 d-flex flex-column justify-content-center align-items-start\">\r\n                <table class=\"exercise-details-table\">\r\n                    @if (exercise.maxPoints) {\r\n                        <tr>\r\n                            <td>\r\n                                <h6 class=\"fw-medium\" jhiTranslate=\"artemisApp.courseOverview.exerciseDetails.points\"></h6>\r\n                            </td>\r\n                            <td>\r\n                                <span>\r\n                                    @if (achievedPoints !== undefined) {\r\n                                        {{ achievedPoints + ('artemisApp.courseOverview.exerciseDetails.of' | artemisTranslate) }}\r\n                                    }\r\n                                    {{ exercise.maxPoints }}\r\n                                    @if (exercise.bonusPoints) {\r\n                                        <span>({{ 'artemisApp.courseOverview.exerciseDetails.bonus' | artemisTranslate }} {{ exercise.bonusPoints }})</span>\r\n                                    }\r\n                                </span>\r\n                                @if (exercise.difficulty) {\r\n                                    <jhi-difficulty-badge class=\"ms-1\" [exercise]=\"exercise\" />\r\n                                }\r\n                                @if (exercise.includedInOverallScore && exercise.includedInOverallScore !== IncludedInOverallScore.INCLUDED_COMPLETELY) {\r\n                                    <jhi-included-in-score-badge class=\"ms-1\" [includedInOverallScore]=\"exercise.includedInOverallScore\" />\r\n                                }\r\n                            </td>\r\n                        </tr>\r\n                    }\r\n                    @if (exercise.assessmentDueDate) {\r\n                        <tr>\r\n                            <td>\r\n                                <h6 class=\"fw-medium\">{{ 'artemisApp.exercise.assessmentDueDate' | artemisTranslate }}:</h6>\r\n                            </td>\r\n                            <td>\r\n                                <span>{{ (exercise.assessmentDueDate | artemisDate) || 'N/A' }}</span>\r\n                                <span [ngClass]=\"exerciseStatusBadge\" class=\"badge ms-1\">{{ exercise.assessmentDueDate | artemisTimeAgo }}</span>\r\n                            </td>\r\n                        </tr>\r\n                    }\r\n                </table>\r\n            </div>\r\n            <div class=\"col-12 col-sm-auto flex-sm-grow-1 col-lg-3 mt-4 mt-md-0 d-flex flex-column justify-content-center align-items-end\">\r\n                @if (participation && resultsPublished) {\r\n                    <div class=\"row\">\r\n                        <jhi-submission-result-status [exercise]=\"exercise\" [studentParticipation]=\"participation\" />\r\n                    </div>\r\n                }\r\n                <div class=\"mt-2 d-md-flex gap-1 justify-content-end align-items-center\">\r\n                    <ng-content select=\"[submitbutton]\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "ctx_r0", "exerciseStatusBadge", "\u0275\u0275textInterpolate", "\u0275\u0275pipeBind1", "dueDate", "\u0275\u0275pureFunction1", "_c2", "category_r2", "color", "category", "\u0275\u0275element", "\u0275\u0275repeaterCreate", "HeaderParticipationPageComponent_Conditional_0_Conditional_20_For_6_Template", "\u0275\u0275repeaterTrackByIdentity", "\u0275\u0275repeater", "exerciseCategories", "\u0275\u0275textInterpolate1", "achievedPoints", "\u0275\u0275textInterpolate2", "exercise", "bonusPoints", "includedInOverallScore", "\u0275\u0275template", "HeaderParticipationPageComponent_Conditional_0_Conditional_26_Conditional_12_Template", "HeaderParticipationPageComponent_Conditional_0_Conditional_26_Conditional_14_Template", "HeaderParticipationPageComponent_Conditional_0_Conditional_26_Conditional_16_Template", "HeaderParticipationPageComponent_Conditional_0_Conditional_26_Conditional_17_Template", "\u0275\u0275conditional", "undefined", "maxPoints", "difficulty", "IncludedInOverallScore", "INCLUDED_COMPLETELY", "assessmentDueDate", "participation", "\u0275\u0275projection", "HeaderParticipationPageComponent_Conditional_0_Conditional_18_Template", "HeaderParticipationPageComponent_Conditional_0_Conditional_20_Template", "HeaderParticipationPageComponent_Conditional_0_Conditional_26_Template", "HeaderParticipationPageComponent_Conditional_0_Conditional_27_Template", "HeaderParticipationPageComponent_Conditional_0_Conditional_32_Template", "categories", "resultsPublished", "HeaderParticipationPageComponent", "ButtonType", "title", "getIcon", "ngOnInit", "ngOnChanges", "exerciseGroup", "exam", "publishResultsDate", "dayjs", "isAfter", "hasExerciseDueDatePassed", "getExerciseDueDate", "result", "getLatestResultOfStudentParticipation", "rated", "roundValueSpecifiedByCourseSettings", "score", "getCourseFromExercise", "selectors", "inputs", "features", "\u0275\u0275NgOnChangesFeature", "ngContentSelectors", "_c1", "decls", "vars", "consts", "template", "rf", "ctx", "HeaderParticipationPageComponent_Conditional_0_Template", "TranslateDirective", "NgClass", "NgStyle", "DifficultyBadgeComponent", "IncludedInScoreBadgeComponent", "SubmissionResultStatusComponent", "ArtemisDatePipe", "ArtemisTranslatePipe", "ArtemisTimeAgoPipe", "styles", "encapsulation"]
}
