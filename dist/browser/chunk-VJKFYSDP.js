import{e as a,g as $,h as x,k as l}from"./chunk-FAFORKWV.js";import{b as F}from"./chunk-MBS3WUDO.js";import{a as O}from"./chunk-N4VVKRBU.js";import{a as m}from"./chunk-5ZXXURLP.js";import{L as p,O as T}from"./chunk-IOA4DPXY.js";import{Ea as o,L as w,P as D,_ as v,b as I,f as R,g as h,ra as f,s as j,t as b,ya as c,z as g}from"./chunk-5LC5EQRR.js";var L=(()=>{class i{domain;subject=new h(void 0);setDomain(e){this.domain=e,this.subject.next(e)}subscribeDomainChange(){return this.subject}static \u0275fac=function(t){return new(t||i)};static \u0275prov=c({token:i,factory:i.\u0275fac,providedIn:"root"})}return i})();var d=(()=>{class i{domainService=o(L);domain;domainChangeSubscription;initDomainSubscription(){this.domainChangeSubscription=this.domainService.subscribeDomainChange().pipe(w(e=>!!e),f(e=>{this.setDomain(e)})).subscribe()}setDomain(e){this.domain=e}ngOnDestroy(){this.domainChangeSubscription&&this.domainChangeSubscription.unsubscribe()}static \u0275fac=function(t){return new(t||i)};static \u0275prov=c({token:i,factory:i.\u0275fac,providedIn:"root"})}return i})();var y=(()=>{class i extends d{websocketService=o(m);conflictSubjects=new Map;websocketConnections=new Map;constructor(){super(),this.initDomainSubscription()}ngOnDestroy(){Object.values(this.websocketConnections).forEach(e=>this.websocketService.unsubscribe(e))}subscribeConflictState=()=>{let e=this.getDomainKey(),t=this.conflictSubjects.get(e);if(t)return t.pipe(v());{let r=new h(l.OK);return this.conflictSubjects.set(e,r),r.pipe(v())}};notifyConflictState=e=>{let t=this.getDomainKey(),r=this.conflictSubjects.get(t);r&&r.next(e)};getDomainKey=()=>{let[e,t]=this.domain;return e===a.AUXILIARY_REPOSITORY?`auxiliary-${t.id.toString()}`:`${e===a.PARTICIPATION?"participation":"test"}-${t.id.toString()}`};static \u0275fac=function(t){return new(t||i)};static \u0275prov=c({token:i,factory:i.\u0275fac,providedIn:"root"})}return i})();var u=class extends d{restResourceUrl;http=o(T);websocketService=o(m);constructor(){super(),this.initDomainSubscription()}setDomain(n){super.setDomain(n),this.restResourceUrl=this.calculateRestResourceURL(n)}calculateRestResourceURL(n){let[e,t]=n;switch(e){case a.PARTICIPATION:return`api/programming/repository/${t.id}`;case a.TEST_REPOSITORY:return`api/programming/test-repository/${t.id}`;case a.AUXILIARY_REPOSITORY:return`api/programming/auxiliary-repository/${t.id}`}}};var C=class i extends Error{constructor(){super("InternetDisconnected"),Object.setPrototypeOf(this,i.prototype)}static get message(){return"InternetDisconnected"}},k=i=>!!i.error,s=i=>I(D(n=>(n.status===409&&i.notifyConflictState(l.CHECKOUT_CONFLICT),n.status===0||n.status===504?b(()=>new C):b(()=>n)))),fe=(()=>{class i extends u{conflictService=o(y);constructor(){super()}getStatus=()=>this.http.get(this.restResourceUrl).pipe(s(this.conflictService),f(({repositoryStatus:e})=>{e!==x.CONFLICT&&this.conflictService.notifyConflictState(l.OK)}));commit=()=>this.http.post(`${this.restResourceUrl}/commit`,{}).pipe(s(this.conflictService));pull=()=>this.http.get(`${this.restResourceUrl}/pull`,{}).pipe(s(this.conflictService));resetRepository=()=>this.http.post(`${this.restResourceUrl}/reset`,{});static \u0275fac=function(t){return new(t||i)};static \u0275prov=c({token:i,factory:i.\u0275fac,providedIn:"root"})}return i})(),he=(()=>{class i extends u{buildLogService=o(O);constructor(){super()}getBuildLogs=()=>{let[e,t]=this.domain;return e===a.PARTICIPATION?this.buildLogService.getBuildLogs(t.id):j([])};static \u0275fac=function(t){return new(t||i)};static \u0275prov=c({token:i,factory:i.\u0275fac,providedIn:"root"})}return i})(),me=(()=>{class i extends u{conflictService=o(y);fileUpdateSubject=new R;constructor(){super()}ngOnDestroy(){super.ngOnDestroy()}downloadFile(e,t){this.http.get(`${this.restResourceUrl}/files-plagiarism-view`,{params:new p().set("file",e),responseType:"blob"}).pipe(s(this.conflictService)).subscribe(r=>{F(r,t)})}setDomain(e){super.setDomain(e),this.fileUpdateSubject&&this.fileUpdateSubject.complete()}getRepositoryContent=e=>{let t=e?this.calculateRestResourceURL(e):this.restResourceUrl;return this.http.get(`${t}/files`).pipe(s(this.conflictService))};getRepositoryContentForPlagiarismView=e=>{let t=e?this.calculateRestResourceURL(e):this.restResourceUrl;return this.http.get(`${t}/files-plagiarism-view`).pipe(s(this.conflictService))};getFilesWithInformationAboutChange=e=>{let t=e?this.calculateRestResourceURL(e):this.restResourceUrl;return this.http.get(`${t}/files-change`).pipe(s(this.conflictService))};getFile=(e,t)=>{let r=t?this.calculateRestResourceURL(t):this.restResourceUrl;return this.http.get(`${r}/file`,{params:new p().set("file",e),responseType:"text"}).pipe(g(S=>({fileContent:S})),s(this.conflictService))};getFileForPlagiarismView=(e,t)=>{let r=t?this.calculateRestResourceURL(t):this.restResourceUrl;return this.http.get(`${r}/file-plagiarism-view`,{params:new p().set("file",e),responseType:"text"}).pipe(g(S=>({fileContent:S})),s(this.conflictService))};getFilesWithContent=e=>{let t=e?this.calculateRestResourceURL(e):this.restResourceUrl;return this.http.get(`${t}/files-content`).pipe(s(this.conflictService))};createFile=e=>this.http.post(`${this.restResourceUrl}/file`,"",{params:new p().set("file",e)}).pipe(s(this.conflictService));createFolder=e=>this.http.post(`${this.restResourceUrl}/folder`,"",{params:new p().set("folder",e)}).pipe(s(this.conflictService));updateFileContent=(e,t)=>this.http.put(`${this.restResourceUrl}/file`,t,{params:new p().set("file",e)}).pipe(s(this.conflictService));updateFiles(e,t=!1){return this.fileUpdateSubject&&this.fileUpdateSubject.complete(),this.fileUpdateSubject=new R,this.http.put(`${this.restResourceUrl}/files`,e,{params:{commit:t?"yes":"no"}}).pipe(s(this.conflictService),f(r=>{if(k(r)){this.fileUpdateSubject.error(r),r.error===$.CHECKOUT_CONFLICT&&this.conflictService.notifyConflictState(l.CHECKOUT_CONFLICT);return}this.fileUpdateSubject.next(r)}))}renameFile=(e,t)=>this.http.post(`${this.restResourceUrl}/rename-file`,{currentFilePath:e,newFilename:t}).pipe(s(this.conflictService));deleteFile=e=>this.http.delete(`${this.restResourceUrl}/file`,{params:new p().set("file",e)}).pipe(s(this.conflictService));static \u0275fac=function(t){return new(t||i)};static \u0275prov=c({token:i,factory:i.\u0275fac,providedIn:"root"})}return i})();export{L as a,d as b,y as c,C as d,fe as e,he as f,me as g};
//# sourceMappingURL=chunk-VJKFYSDP.js.map
