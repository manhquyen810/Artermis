{"version":3,"sources":["node_modules/mobile-drag-drop/index.min.js","node_modules/mobile-drag-drop/scroll-behaviour.js","src/main/webapp/app/exercises/quiz/shared/questions/drag-and-drop-question/drag-and-drop-question.component.ts","src/main/webapp/app/exercises/quiz/shared/questions/drag-and-drop-question/drag-and-drop-question.component.html","src/main/webapp/app/entities/quiz/drag-and-drop-mapping.model.ts","src/main/webapp/app/exercises/quiz/shared/questions/quiz-scoring-infostudent-modal/quiz-scoring-info-student-modal.component.ts","src/main/webapp/app/exercises/quiz/shared/questions/quiz-scoring-infostudent-modal/quiz-scoring-info-student-modal.component.html","src/main/webapp/app/entities/quiz/multiple-choice-question.model.ts"],"sourcesContent":["/*! mobile-drag-drop 3.0.0-rc.0 | Copyright (c) 2022 Tim Ruffles | MIT License */\n!function (t, i) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? i(exports) : \"function\" == typeof define && define.amd ? define([\"exports\"], i) : i(t.MobileDragDrop = t.MobileDragDrop || {});\n}(this, function (t) {\n  \"use strict\";\n\n  var c = \"dnd-poly-\",\n    s = [\"none\", \"copy\", \"copyLink\", \"copyMove\", \"link\", \"linkMove\", \"move\", \"all\"],\n    f = [\"none\", \"copy\", \"move\", \"link\"];\n  function i() {\n    var t = !1;\n    try {\n      var i = Object.defineProperty({}, \"passive\", {\n        get: function () {\n          t = !0;\n        }\n      });\n      window.addEventListener(\"test\", null, i);\n    } catch (t) {}\n    return t;\n  }\n  var e = i();\n  function l(t) {\n    return t && t.tagName;\n  }\n  function h(t, i, s) {\n    void 0 === s && (s = !0), document.addEventListener(t, i, !!e && {\n      passive: s\n    });\n  }\n  function n(t, i) {\n    document.removeEventListener(t, i);\n  }\n  function u(t, i, s, n) {\n    void 0 === n && (n = !1);\n    var h = e ? {\n      passive: !0,\n      capture: n\n    } : n;\n    return t.addEventListener(i, s, h), {\n      off: function () {\n        t.removeEventListener(i, s, h);\n      }\n    };\n  }\n  function o(t) {\n    return 0 === t.length ? 0 : t.reduce(function (t, i) {\n      return i + t;\n    }, 0) / t.length;\n  }\n  function r(t, i) {\n    for (var s = 0; s < t.changedTouches.length; s++) if (t.changedTouches[s].identifier === i) return !0;\n    return !1;\n  }\n  function a(t, i, s) {\n    for (var n = [], h = [], e = 0; e < i.touches.length; e++) {\n      var r = i.touches[e];\n      n.push(r[t + \"X\"]), h.push(r[t + \"Y\"]);\n    }\n    s.x = o(n), s.y = o(h);\n  }\n  var d = [\"\", \"-webkit-\"];\n  function v(t, i, s, n, h) {\n    var e = i.x,\n      i = i.y;\n    n && (e += n.x, i += n.y), (h = void 0 === h || h) && (e -= parseInt(t.offsetWidth, 10) / 2, i -= parseInt(t.offsetHeight, 10) / 2);\n    for (var r = \"translate3d(\" + e + \"px,\" + i + \"px, 0)\", o = 0; o < d.length; o++) {\n      var u = d[o] + \"transform\";\n      t.style[u] = r + \" \" + s[o];\n    }\n  }\n  var p = (Object.defineProperty(g.prototype, \"dropEffect\", {\n    get: function () {\n      return this.t;\n    },\n    set: function (t) {\n      0 !== this.i.mode && -1 < s.indexOf(t) && (this.t = t);\n    },\n    enumerable: !1,\n    configurable: !0\n  }), Object.defineProperty(g.prototype, \"types\", {\n    get: function () {\n      if (0 !== this.i.mode) return Object.freeze(this.i.types);\n    },\n    enumerable: !1,\n    configurable: !0\n  }), Object.defineProperty(g.prototype, \"effectAllowed\", {\n    get: function () {\n      return this.i.effectAllowed;\n    },\n    set: function (t) {\n      2 === this.i.mode && -1 < s.indexOf(t) && (this.i.effectAllowed = t);\n    },\n    enumerable: !1,\n    configurable: !0\n  }), g.prototype.setData = function (t, i) {\n    if (2 === this.i.mode) {\n      if (-1 < t.indexOf(\" \")) throw new Error(\"illegal arg: type contains space\");\n      this.i.data[t] = i, -1 === this.i.types.indexOf(t) && this.i.types.push(t);\n    }\n  }, g.prototype.getData = function (t) {\n    if (1 === this.i.mode || 2 === this.i.mode) return this.i.data[t] || \"\";\n  }, g.prototype.clearData = function (t) {\n    2 === this.i.mode && (t && this.i.data[t] ? (delete this.i.data[t], -1 < (t = this.i.types.indexOf(t)) && this.i.types.splice(t, 1)) : (this.i.data = {}, this.i.types = []));\n  }, g.prototype.setDragImage = function (t, i, s) {\n    2 === this.i.mode && this.h(t, i, s);\n  }, g);\n  function g(t, i) {\n    this.i = t, this.h = i, this.t = f[0];\n  }\n  function m(t, i) {\n    return t ? t === s[0] ? f[0] : 0 === t.indexOf(s[1]) || t === s[7] ? f[1] : 0 === t.indexOf(s[4]) ? f[3] : t === s[6] ? f[2] : f[1] : 3 === i.nodeType && \"A\" === i.tagName ? f[3] : f[1];\n  }\n  function y(u, t, a, i, s, n, c) {\n    void 0 === c && (c = null);\n    s = function (t, i, s, n, h, e, r) {\n      void 0 === c && (r = null);\n      var o = a.changedTouches[0],\n        n = new Event(u, {\n          bubbles: !0,\n          cancelable: n\n        });\n      n.dataTransfer = e, n.relatedTarget = r, n.screenX = o.screenX, n.screenY = o.screenY, n.clientX = o.clientX, n.clientY = o.clientY, n.pageX = o.pageX, n.pageY = o.pageY;\n      t = t.getBoundingClientRect();\n      return n.offsetX = n.clientX - t.left, n.offsetY = n.clientY - t.top, n;\n    }(t, 0, 0, n = void 0 === n || n, document.defaultView, s, c), s = !t.dispatchEvent(s);\n    return i.mode = 0, s;\n  }\n  function b(t, i) {\n    if (!t || t === s[7]) return i;\n    if (i === f[1]) {\n      if (0 === t.indexOf(f[1])) return f[1];\n    } else if (i === f[3]) {\n      if (0 === t.indexOf(f[3]) || -1 < t.indexOf(\"Link\")) return f[3];\n    } else if (i === f[2] && (0 === t.indexOf(f[2]) || -1 < t.indexOf(\"Move\"))) return f[2];\n    return f[0];\n  }\n  var w = (x.prototype.o = function () {\n    var n = this;\n    this.u = 1, this.l = f[0], this.v = {\n      data: {},\n      effectAllowed: void 0,\n      mode: 3,\n      types: []\n    }, this.p = {\n      x: null,\n      y: null\n    }, this.g = {\n      x: null,\n      y: null\n    };\n    var h = this.m;\n    if (this.I = new p(this.v, function (t, i, s) {\n      h = t, \"number\" != typeof i && \"number\" != typeof s || (n.j = {\n        x: i || 0,\n        y: s || 0\n      });\n    }), this.v.mode = 2, this.I.dropEffect = f[0], y(\"dragstart\", this.m, this.k, this.v, this.I)) return this.u = 3, this.C(), !1;\n    a(\"page\", this.k, this.g);\n    var i,\n      t,\n      s = this.S.dragImageSetup(h);\n    return this.A = (i = s, d.map(function (t) {\n      t = i.style[t + \"transform\"];\n      return t && \"none\" !== t ? t.replace(/translate\\(\\D*\\d+[^,]*,\\D*\\d+[^,]*\\)\\s*/g, \"\") : \"\";\n    })), s.style.position = \"absolute\", s.style.left = \"0px\", s.style.top = \"0px\", s.style.zIndex = \"999999\", s.classList.add(\"dnd-poly-drag-image\"), s.classList.add(\"dnd-poly-icon\"), this.O = s, this.j || (this.S.dragImageOffset ? this.j = {\n      x: this.S.dragImageOffset.x,\n      y: this.S.dragImageOffset.y\n    } : this.S.dragImageCenterOnTouch ? (t = getComputedStyle(h), this.j = {\n      x: 0 - parseInt(t.marginLeft, 10),\n      y: 0 - parseInt(t.marginTop, 10)\n    }) : (s = h.getBoundingClientRect(), t = getComputedStyle(h), this.j = {\n      x: s.left - this.M.clientX - parseInt(t.marginLeft, 10) + s.width / 2,\n      y: s.top - this.M.clientY - parseInt(t.marginTop, 10) + s.height / 2\n    })), v(this.O, this.g, this.A, this.j, this.S.dragImageCenterOnTouch), document.body.appendChild(this.O), this.D = window.setInterval(function () {\n      n.F || (n.F = !0, n.N(), n.F = !1);\n    }, this.S.iterationInterval), !0;\n  }, x.prototype.C = function () {\n    this.D && (clearInterval(this.D), this.D = null), n(\"touchmove\", this.P), n(\"touchend\", this.T), n(\"touchcancel\", this.T), this.O && (this.O.parentNode.removeChild(this.O), this.O = null), this.L(this.S, this.k, this.u);\n  }, x.prototype._ = function (t) {\n    var s = this;\n    if (!1 !== r(t, this.M.identifier)) {\n      if (this.k = t, 0 === this.u) {\n        var i = void 0;\n        if (this.S.dragStartConditionOverride) try {\n          i = this.S.dragStartConditionOverride(t);\n        } catch (t) {\n          i = !1;\n        } else i = 1 === t.touches.length;\n        return i ? void (!0 === this.o() && (this.H.preventDefault(), t.preventDefault())) : void this.C();\n      }\n      if (t.preventDefault(), a(\"client\", t, this.p), a(\"page\", t, this.g), this.S.dragImageTranslateOverride) try {\n        var n = !1;\n        if (this.S.dragImageTranslateOverride(t, {\n          x: this.p.x,\n          y: this.p.y\n        }, this.V, function (t, i) {\n          s.O && (n = !0, s.p.x += t, s.p.y += i, s.g.x += t, s.g.y += i, v(s.O, s.g, s.A, s.j, s.S.dragImageCenterOnTouch));\n        }), n) return;\n      } catch (t) {}\n      v(this.O, this.g, this.A, this.j, this.S.dragImageCenterOnTouch);\n    }\n  }, x.prototype.X = function (t) {\n    if (!1 !== r(t, this.M.identifier)) {\n      if (this.S.dragImageTranslateOverride) try {\n        this.S.dragImageTranslateOverride(void 0, void 0, void 0, function () {});\n      } catch (t) {}\n      0 !== this.u ? (t.preventDefault(), this.u = \"touchcancel\" === t.type ? 3 : 2) : this.C();\n    }\n  }, x.prototype.N = function () {\n    var t = this,\n      i = this.l;\n    this.v.mode = 3, this.I.dropEffect = f[0];\n    var s,\n      n,\n      h,\n      e,\n      r,\n      o = y(\"drag\", this.m, this.k, this.v, this.I);\n    if (o && (this.l = f[0]), o || 2 === this.u || 3 === this.u) return this.Y(this.u) ? (e = this.m, s = this.O, n = this.A, a = function () {\n      t.q();\n    }, void (\"hidden\" !== (r = getComputedStyle(e)).visibility && \"none\" !== r.display ? (s.classList.add(\"dnd-poly-snapback\"), h = getComputedStyle(s), o = parseFloat(h.transitionDuration), isNaN(o) || 0 === o ? a() : ((e = {\n      x: (u = e.getBoundingClientRect()).left,\n      y: u.top\n    }).x += document.body.scrollLeft || document.documentElement.scrollLeft, e.y += document.body.scrollTop || document.documentElement.scrollTop, e.x -= parseInt(r.marginLeft, 10), e.y -= parseInt(r.marginTop, 10), u = parseFloat(h.transitionDelay), u = Math.round(1e3 * (o + u)), v(s, e, n, void 0, !1), setTimeout(a, u))) : a())) : void this.q();\n    var u = this.S.elementFromPoint(this.p.x, this.p.y),\n      a = this.B;\n    u !== this.V && u !== this.B && (this.V = u, null !== this.B && (this.v.mode = 3, this.I.dropEffect = f[0], y(\"dragexit\", this.B, this.k, this.v, this.I, !1)), null === this.V ? this.B = this.V : (this.v.mode = 3, this.I.dropEffect = m(this.v.effectAllowed, this.m), y(\"dragenter\", this.V, this.k, this.v, this.I) ? (this.B = this.V, this.l = b(this.I.effectAllowed, this.I.dropEffect)) : this.V !== document.body && (this.B = document.body))), a !== this.B && l(a) && (this.v.mode = 3, this.I.dropEffect = f[0], y(\"dragleave\", a, this.k, this.v, this.I, !1, this.B)), l(this.B) && (this.v.mode = 3, this.I.dropEffect = m(this.v.effectAllowed, this.m), !1 === y(\"dragover\", this.B, this.k, this.v, this.I) ? this.l = f[0] : this.l = b(this.I.effectAllowed, this.I.dropEffect)), i !== this.l && this.O.classList.remove(c + i);\n    i = c + this.l;\n    this.O.classList.add(i);\n  }, x.prototype.Y = function (t) {\n    t = this.l === f[0] || null === this.B || 3 === t;\n    return t ? l(this.B) && (this.v.mode = 3, this.I.dropEffect = f[0], y(\"dragleave\", this.B, this.k, this.v, this.I, !1)) : l(this.B) && (this.v.mode = 1, this.I.dropEffect = this.l, !0 === y(\"drop\", this.B, this.k, this.v, this.I) ? this.l = this.I.dropEffect : this.l = f[0]), t;\n  }, x.prototype.q = function () {\n    this.v.mode = 3, this.I.dropEffect = this.l, y(\"dragend\", this.m, this.k, this.v, this.I, !1), this.u = 2, this.C();\n  }, x);\n  function x(t, i, s, n) {\n    this.H = t, this.S = i, this.m = s, this.L = n, this.u = 0, this.V = null, this.B = null, this.k = t, this.M = t.changedTouches[0], this.P = this._.bind(this), this.T = this.X.bind(this), h(\"touchmove\", this.P, !1), h(\"touchend\", this.T, !1), h(\"touchcancel\", this.T, !1);\n  }\n  var I,\n    j = {\n      iterationInterval: 150,\n      tryFindDraggableTarget: function (t) {\n        for (var i = 0, s = t.composedPath(); i < s.length; i++) {\n          var n = s[i];\n          do {\n            if (!1 !== n.draggable) {\n              if (!0 === n.draggable) return n;\n              if (n.getAttribute && \"true\" === n.getAttribute(\"draggable\")) return n;\n            }\n          } while ((n = n.parentNode) && n !== document.body);\n        }\n      },\n      dragImageSetup: function (t) {\n        var i = t.cloneNode(!0);\n        return function t(i, s) {\n          if (1 === i.nodeType) {\n            for (var n, h, e = getComputedStyle(i), r = 0; r < e.length; r++) {\n              var o = e[r];\n              s.style.setProperty(o, e.getPropertyValue(o), e.getPropertyPriority(o));\n            }\n            s.style.pointerEvents = \"none\", s.removeAttribute(\"id\"), s.removeAttribute(\"class\"), s.removeAttribute(\"draggable\"), \"CANVAS\" === s.nodeName && (n = s, h = (h = i).getContext(\"2d\").getImageData(0, 0, h.width, h.height), n.getContext(\"2d\").putImageData(h, 0, 0));\n          }\n          if (i.hasChildNodes()) for (r = 0; r < i.childNodes.length; r++) t(i.childNodes[r], s.childNodes[r]);\n          !function t(i) {\n            if (i instanceof HTMLElement && (i.style.pointerEvents = \"none\"), i.children && i.children.length) for (var s = 0; s < i.children.length; s++) t(i.children[s]);\n            if (i.shadowRoot && i.shadowRoot.children.length) for (s = 0; s < i.shadowRoot.children.length; s++) t(i.shadowRoot.children[s]);\n          }(s);\n        }(t, i), i;\n      },\n      elementFromPoint: function (t, i) {\n        var s = document.elementFromPoint(t, i);\n        if (s) {\n          for (; s.shadowRoot;) {\n            var n = s.shadowRoot.elementFromPoint(t, i);\n            if (null === n || n === s) break;\n            s = n;\n          }\n          return s;\n        }\n      }\n    };\n  function k(i) {\n    if (!I) {\n      var t = j.tryFindDraggableTarget(i);\n      if (t) try {\n        I = new w(i, j, t, S);\n      } catch (t) {\n        throw S(j, i, 3), t;\n      }\n    }\n  }\n  function C(t) {\n    function i(t) {\n      h.off(), e.off(), r.off(), o.off(), s && s.dispatchEvent(new CustomEvent(\"dnd-poly-dragstart-cancel\", {\n        bubbles: !0,\n        cancelable: !0\n      })), clearTimeout(n);\n    }\n    var s = t.target;\n    s && s.dispatchEvent(new CustomEvent(\"dnd-poly-dragstart-pending\", {\n      bubbles: !0,\n      cancelable: !0\n    }));\n    var n = window.setTimeout(function () {\n        h.off(), e.off(), r.off(), o.off(), k(t);\n      }, j.holdToDrag),\n      h = u(s, \"touchend\", i),\n      e = u(s, \"touchcancel\", i),\n      r = u(s, \"touchmove\", i),\n      o = u(window, \"scroll\", i, !0);\n  }\n  function S(t, i, s) {\n    if (0 === s && t.defaultActionOverride) try {\n      t.defaultActionOverride(i), i.defaultPrevented;\n    } catch (t) {}\n    I = null;\n  }\n  t.polyfill = function (i) {\n    if (i && Object.keys(i).forEach(function (t) {\n      j[t] = i[t];\n    }), !j.forceApply) {\n      t = (t = !!window.chrome || /chrome/i.test(navigator.userAgent), {\n        dragEvents: \"ondragstart\" in document.documentElement,\n        draggable: \"draggable\" in document.documentElement,\n        userAgentSupportingNativeDnD: !(/iPad|iPhone|iPod|Android/.test(navigator.userAgent) || t && \"ontouchstart\" in document.documentElement)\n      });\n      if (t.userAgentSupportingNativeDnD && t.draggable && t.dragEvents) return !1;\n    }\n    var t;\n    return j.holdToDrag ? h(\"touchstart\", C, !1) : h(\"touchstart\", k, !1), !0;\n  }, t.supportsPassiveEventListener = i, Object.defineProperty(t, \"G\", {\n    value: !0\n  });\n});\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : factory(global.MobileDragDrop = global.MobileDragDrop || {});\n})(this, function (exports) {\n  'use strict';\n\n  function isTopLevelEl(el) {\n    return el === document.body || el === document.documentElement;\n  }\n  function getElementViewportOffset(el, axis) {\n    var offset;\n    if (isTopLevelEl(el)) {\n      offset = axis === 0 ? el.clientLeft : el.clientTop;\n    } else {\n      var bounds = el.getBoundingClientRect();\n      offset = axis === 0 ? bounds.left : bounds.top;\n    }\n    return offset;\n  }\n  function getElementViewportSize(el, axis) {\n    var size;\n    if (isTopLevelEl(el)) {\n      size = axis === 0 ? window.innerWidth : window.innerHeight;\n    } else {\n      size = axis === 0 ? el.clientWidth : el.clientHeight;\n    }\n    return size;\n  }\n  function getSetElementScroll(el, axis, scroll) {\n    var prop = axis === 0 ? \"scrollLeft\" : \"scrollTop\";\n    var isTopLevel = isTopLevelEl(el);\n    if (arguments.length === 2) {\n      if (isTopLevel) {\n        return document.body[prop] || document.documentElement[prop];\n      }\n      return el[prop];\n    }\n    if (isTopLevel) {\n      document.documentElement[prop] += scroll;\n      document.body[prop] += scroll;\n    } else {\n      el[prop] += scroll;\n    }\n  }\n  function isScrollable(el) {\n    var cs = getComputedStyle(el);\n    if (el.scrollHeight > el.clientHeight && (cs.overflowY === \"scroll\" || cs.overflowY === \"auto\")) {\n      return true;\n    }\n    if (el.scrollWidth > el.clientWidth && (cs.overflowX === \"scroll\" || cs.overflowX === \"auto\")) {\n      return true;\n    }\n    return false;\n  }\n  function findScrollableParent(el) {\n    do {\n      if (!el) {\n        return undefined;\n      }\n      if (isScrollable(el)) {\n        return el;\n      }\n      if (el === document.documentElement) {\n        return null;\n      }\n    } while (el = el.parentNode);\n    return null;\n  }\n  function determineScrollIntention(currentCoordinate, size, threshold) {\n    if (currentCoordinate < threshold) {\n      return -1;\n    } else if (size - currentCoordinate < threshold) {\n      return 1;\n    }\n    return 0;\n  }\n  function determineDynamicVelocity(scrollIntention, currentCoordinate, size, threshold) {\n    if (scrollIntention === -1) {\n      return Math.abs(currentCoordinate - threshold);\n    } else if (scrollIntention === 1) {\n      return Math.abs(size - currentCoordinate - threshold);\n    }\n    return 0;\n  }\n  function isScrollEndReached(axis, scrollIntention, scrollBounds) {\n    var currentScrollOffset = axis === 0 ? scrollBounds.scrollX : scrollBounds.scrollY;\n    if (scrollIntention === 1) {\n      var maxScrollOffset = axis === 0 ? scrollBounds.scrollWidth - scrollBounds.width : scrollBounds.scrollHeight - scrollBounds.height;\n      return currentScrollOffset >= maxScrollOffset;\n    } else if (scrollIntention === -1) {\n      return currentScrollOffset <= 0;\n    }\n    return true;\n  }\n  var _options = {\n    threshold: 75,\n    velocityFn: function (velocity, threshold) {\n      var multiplier = velocity / threshold;\n      var easeInCubic = multiplier * multiplier * multiplier;\n      return easeInCubic * threshold;\n    }\n  };\n  var _scrollIntentions = {\n    horizontal: 0,\n    vertical: 0\n  };\n  var _dynamicVelocity = {\n    x: 0,\n    y: 0\n  };\n  var _scrollAnimationFrameId;\n  var _currentCoordinates;\n  var _hoveredElement;\n  var _scrollableParent;\n  var _translateDragImageFn;\n  function handleDragImageTranslateOverride(event, currentCoordinates, hoveredElement, translateDragImageFn) {\n    _currentCoordinates = currentCoordinates;\n    _translateDragImageFn = translateDragImageFn;\n    if (_hoveredElement !== hoveredElement) {\n      _hoveredElement = hoveredElement;\n      _scrollableParent = findScrollableParent(_hoveredElement);\n    }\n    var performScrollAnimation = updateScrollIntentions(_currentCoordinates, _scrollableParent, _options.threshold, _scrollIntentions, _dynamicVelocity);\n    if (performScrollAnimation) {\n      scheduleScrollAnimation();\n    } else if (!!_scrollAnimationFrameId) {\n      window.cancelAnimationFrame(_scrollAnimationFrameId);\n      _scrollAnimationFrameId = null;\n    }\n  }\n  function scheduleScrollAnimation() {\n    if (!!_scrollAnimationFrameId) {\n      return;\n    }\n    _scrollAnimationFrameId = window.requestAnimationFrame(scrollAnimation);\n  }\n  function scrollAnimation() {\n    var scrollDiffX = 0,\n      scrollDiffY = 0,\n      isTopLevel = isTopLevelEl(_scrollableParent);\n    if (_scrollIntentions.horizontal !== 0) {\n      scrollDiffX = Math.round(_options.velocityFn(_dynamicVelocity.x, _options.threshold) * _scrollIntentions.horizontal);\n      getSetElementScroll(_scrollableParent, 0, scrollDiffX);\n    }\n    if (_scrollIntentions.vertical !== 0) {\n      scrollDiffY = Math.round(_options.velocityFn(_dynamicVelocity.y, _options.threshold) * _scrollIntentions.vertical);\n      getSetElementScroll(_scrollableParent, 1, scrollDiffY);\n    }\n    if (isTopLevel) {\n      _translateDragImageFn(scrollDiffX, scrollDiffY);\n    } else {\n      _translateDragImageFn(0, 0);\n    }\n    _scrollAnimationFrameId = null;\n    if (updateScrollIntentions(_currentCoordinates, _scrollableParent, _options.threshold, _scrollIntentions, _dynamicVelocity)) {\n      scheduleScrollAnimation();\n    }\n  }\n  function updateScrollIntentions(currentCoordinates, scrollableParent, threshold, scrollIntentions, dynamicVelocity) {\n    if (!currentCoordinates || !scrollableParent) {\n      return false;\n    }\n    var scrollableParentBounds = {\n      x: getElementViewportOffset(scrollableParent, 0),\n      y: getElementViewportOffset(scrollableParent, 1),\n      width: getElementViewportSize(scrollableParent, 0),\n      height: getElementViewportSize(scrollableParent, 1),\n      scrollX: getSetElementScroll(scrollableParent, 0),\n      scrollY: getSetElementScroll(scrollableParent, 1),\n      scrollWidth: scrollableParent.scrollWidth,\n      scrollHeight: scrollableParent.scrollHeight\n    };\n    var currentCoordinatesOffset = {\n      x: currentCoordinates.x - scrollableParentBounds.x,\n      y: currentCoordinates.y - scrollableParentBounds.y\n    };\n    scrollIntentions.horizontal = determineScrollIntention(currentCoordinatesOffset.x, scrollableParentBounds.width, threshold);\n    scrollIntentions.vertical = determineScrollIntention(currentCoordinatesOffset.y, scrollableParentBounds.height, threshold);\n    if (scrollIntentions.horizontal && isScrollEndReached(0, scrollIntentions.horizontal, scrollableParentBounds)) {\n      scrollIntentions.horizontal = 0;\n    } else if (scrollIntentions.horizontal) {\n      dynamicVelocity.x = determineDynamicVelocity(scrollIntentions.horizontal, currentCoordinatesOffset.x, scrollableParentBounds.width, threshold);\n    }\n    if (scrollIntentions.vertical && isScrollEndReached(1, scrollIntentions.vertical, scrollableParentBounds)) {\n      scrollIntentions.vertical = 0;\n    } else if (scrollIntentions.vertical) {\n      dynamicVelocity.y = determineDynamicVelocity(scrollIntentions.vertical, currentCoordinatesOffset.y, scrollableParentBounds.height, threshold);\n    }\n    return !!(scrollIntentions.horizontal || scrollIntentions.vertical);\n  }\n  var scrollBehaviourDragImageTranslateOverride = handleDragImageTranslateOverride;\n  exports.scrollBehaviourDragImageTranslateOverride = scrollBehaviourDragImageTranslateOverride;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, ViewChild, ViewEncapsulation, inject } from '@angular/core';\r\nimport { ArtemisMarkdownService } from 'app/shared/markdown.service';\r\nimport { DragAndDropQuestionUtil } from 'app/exercises/quiz/shared/drag-and-drop-question-util.service';\r\nimport { polyfill } from 'mobile-drag-drop';\r\nimport { scrollBehaviourDragImageTranslateOverride } from 'mobile-drag-drop/scroll-behaviour';\r\nimport { SecuredImageComponent } from 'app/shared/image/secured-image.component';\r\nimport { DragAndDropQuestion } from 'app/entities/quiz/drag-and-drop-question.model';\r\nimport { DragAndDropMapping } from 'app/entities/quiz/drag-and-drop-mapping.model';\r\nimport { RenderedQuizQuestionMarkDownElement } from 'app/entities/quiz/quiz-question.model';\r\nimport { DropLocation } from 'app/entities/quiz/drop-location.model';\r\nimport { faExclamationCircle, faExclamationTriangle, faQuestionCircle, faSpinner } from '@fortawesome/free-solid-svg-icons';\r\nimport { CdkDragDrop, CdkDropList, CdkDropListGroup } from '@angular/cdk/drag-drop';\r\nimport { DragItem } from 'app/entities/quiz/drag-item.model';\r\nimport { NgClass, NgStyle } from '@angular/common';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { NgbPopover, NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { QuizScoringInfoStudentModalComponent } from '../quiz-scoring-infostudent-modal/quiz-scoring-info-student-modal.component';\r\nimport { DragItemComponent } from './drag-item.component';\r\n\r\n// options are optional ;)\r\npolyfill({\r\n    // use this to make use of the scroll behaviour\r\n    dragImageTranslateOverride: scrollBehaviourDragImageTranslateOverride,\r\n});\r\n\r\n// Drag-enter listener for mobile devices: without this code, mobile drag and drop will not work correctly!\r\n// eslint-disable-next-line @typescript-eslint/no-unused-expressions\r\n(event: any) => {\r\n    event.preventDefault();\r\n};\r\nwindow.addEventListener('touchmove', () => {}, { passive: false });\r\n\r\nenum MappingResult {\r\n    MAPPED_CORRECT,\r\n    MAPPED_INCORRECT,\r\n    NOT_MAPPED,\r\n}\r\n@Component({\r\n    selector: 'jhi-drag-and-drop-question',\r\n    templateUrl: './drag-and-drop-question.component.html',\r\n    providers: [DragAndDropQuestionUtil],\r\n    styleUrls: ['./drag-and-drop-question.component.scss', '../../../participate/quiz-participation.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    imports: [\r\n        NgClass,\r\n        FaIconComponent,\r\n        TranslateDirective,\r\n        NgbPopover,\r\n        QuizScoringInfoStudentModalComponent,\r\n        CdkDropListGroup,\r\n        SecuredImageComponent,\r\n        CdkDropList,\r\n        NgStyle,\r\n        DragItemComponent,\r\n        NgbTooltip,\r\n    ],\r\n})\r\nexport class DragAndDropQuestionComponent implements OnChanges, OnInit {\r\n    private artemisMarkdown = inject(ArtemisMarkdownService);\r\n    private dragAndDropQuestionUtil = inject(DragAndDropQuestionUtil);\r\n\r\n    /** needed to trigger a manual reload of the drag and drop background picture */\r\n    @ViewChild(SecuredImageComponent, { static: false })\r\n    secureImageComponent: SecuredImageComponent;\r\n\r\n    _question: DragAndDropQuestion;\r\n    _forceSampleSolution: boolean;\r\n\r\n    @Input()\r\n    set question(question) {\r\n        this._question = question;\r\n        this.watchCollection();\r\n    }\r\n    get question() {\r\n        return this._question;\r\n    }\r\n    // TODO: Map vs. Array --> consistency\r\n    @Input()\r\n    mappings: DragAndDropMapping[];\r\n    @Input()\r\n    clickDisabled: boolean;\r\n    @Input()\r\n    showResult: boolean;\r\n    @Input()\r\n    questionIndex: number;\r\n    @Input()\r\n    score: number;\r\n    @Input()\r\n    set forceSampleSolution(forceSampleSolution) {\r\n        this._forceSampleSolution = forceSampleSolution;\r\n        if (this.forceSampleSolution) {\r\n            this.showSampleSolution();\r\n        }\r\n    }\r\n    get forceSampleSolution() {\r\n        return this._forceSampleSolution;\r\n    }\r\n    @Input()\r\n    onMappingUpdate: any;\r\n    @Input()\r\n    filePreviewPaths: Map<string, string> = new Map<string, string>();\r\n\r\n    @Output()\r\n    mappingsChange = new EventEmitter<DragAndDropMapping[]>();\r\n\r\n    showingSampleSolution = false;\r\n    renderedQuestion: RenderedQuizQuestionMarkDownElement;\r\n    sampleSolutionMappings = new Array<DragAndDropMapping>();\r\n    dropAllowed = false;\r\n    correctAnswer: number;\r\n    incorrectLocationMappings: number;\r\n    mappedLocations: number;\r\n\r\n    readonly MappingResult = MappingResult;\r\n\r\n    loadingState = 'loading';\r\n\r\n    // Icons\r\n    faSpinner = faSpinner;\r\n    faQuestionCircle = faQuestionCircle;\r\n    faExclamationTriangle = faExclamationTriangle;\r\n    faExclamationCircle = faExclamationCircle;\r\n\r\n    ngOnInit(): void {\r\n        this.evaluateDropLocations();\r\n    }\r\n\r\n    ngOnChanges() {\r\n        this.evaluateDropLocations();\r\n    }\r\n\r\n    watchCollection() {\r\n        // update html for text, hint and explanation for the question\r\n        this.renderedQuestion = new RenderedQuizQuestionMarkDownElement();\r\n        this.renderedQuestion.text = this.artemisMarkdown.safeHtmlForMarkdown(this.question.text);\r\n        this.renderedQuestion.hint = this.artemisMarkdown.safeHtmlForMarkdown(this.question.hint);\r\n        this.renderedQuestion.explanation = this.artemisMarkdown.safeHtmlForMarkdown(this.question.explanation);\r\n    }\r\n\r\n    /**\r\n     * Handles drag-available UI\r\n     */\r\n    drag() {\r\n        this.dropAllowed = true;\r\n    }\r\n\r\n    /**\r\n     * Handles drag-available UI\r\n     */\r\n    drop() {\r\n        this.dropAllowed = false;\r\n    }\r\n\r\n    /** Sets the view displayed to the user\r\n     * @param {Output} value -> loading: background picture for drag and drop question is currently loading\r\n     *                          success: background picture for drag and drop question was loaded\r\n     *                          error: an error occurred during background download */\r\n    changeLoading(value: string) {\r\n        this.loadingState = value;\r\n    }\r\n\r\n    /**\r\n     * Prevent scrolling when dragging elements on mobile devices\r\n     * @param event\r\n     */\r\n    preventDefault(event: any) {\r\n        event.mouseEvent.preventDefault();\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * react to the drop event of a drag item\r\n     *\r\n     * @param dropLocation {object | undefined} the dropLocation that the drag item was dropped on.\r\n     *                     May be undefined if drag item was dragged back to the unassigned items.\r\n     * @param dropEvent {object} an event containing the drag item that was dropped\r\n     */\r\n    onDragDrop(dropLocation: DropLocation | undefined, dropEvent: CdkDragDrop<DragItem, DragItem>) {\r\n        this.drop();\r\n        const dragItem = dropEvent.item.data as DragItem;\r\n\r\n        if (dropLocation) {\r\n            // check if this mapping is new\r\n            if (this.dragAndDropQuestionUtil.isMappedTogether(this.mappings, dragItem, dropLocation)) {\r\n                // Do nothing\r\n                return;\r\n            }\r\n\r\n            // remove existing mappings that contain the drop location or drag item and save their old partners\r\n            let oldDragItem;\r\n            let oldDropLocation;\r\n            this.mappings = this.mappings.filter(function (mapping) {\r\n                if (this.dragAndDropQuestionUtil.isSameEntityWithTempId(dropLocation, mapping.dropLocation)) {\r\n                    oldDragItem = mapping.dragItem;\r\n                    return false;\r\n                }\r\n                if (this.dragAndDropQuestionUtil.isSameEntityWithTempId(dragItem, mapping.dragItem)) {\r\n                    oldDropLocation = mapping.dropLocation;\r\n                    return false;\r\n                }\r\n                return true;\r\n            }, this);\r\n\r\n            // add new mapping\r\n            this.mappings.push(new DragAndDropMapping(dragItem, dropLocation));\r\n\r\n            // map oldDragItem and oldDropLocation, if they exist\r\n            // this flips positions of drag items when a drag item is dropped on a drop location with an existing drag item\r\n            if (oldDragItem && oldDropLocation) {\r\n                this.mappings.push(new DragAndDropMapping(oldDragItem, oldDropLocation));\r\n            }\r\n        } else {\r\n            const lengthBefore = this.mappings.length;\r\n            // remove existing mapping that contains the drag item\r\n            this.mappings = this.mappings.filter(function (mapping) {\r\n                return !this.dragAndDropQuestionUtil.isSameEntityWithTempId(mapping.dragItem, dragItem);\r\n            }, this);\r\n            if (this.mappings.length === lengthBefore) {\r\n                // nothing changed => return here to skip calling this.onMappingUpdate()\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.mappingsChange.emit(this.mappings);\r\n        /** Only execute the onMappingUpdate function if we received such input **/\r\n        if (this.onMappingUpdate) {\r\n            this.onMappingUpdate();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the drag item that was mapped to the given drop location\r\n     *\r\n     * @param dropLocation the drop location that the drag item should be mapped to\r\n     * @return the mapped drag item, or undefined, if no drag item has been mapped to this location\r\n     */\r\n    dragItemForDropLocation(dropLocation: DropLocation) {\r\n        if (this.mappings) {\r\n            const mapping = this.mappings.find((localMapping) => this.dragAndDropQuestionUtil.isSameEntityWithTempId(localMapping.dropLocation, dropLocation));\r\n            if (mapping) {\r\n                return mapping.dragItem;\r\n            } else {\r\n                return undefined;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    invalidDragItemForDropLocation(dropLocation: DropLocation) {\r\n        const item = this.dragItemForDropLocation(dropLocation);\r\n        return item ? item.invalid : false;\r\n    }\r\n\r\n    /**\r\n     * Get all drag items that have not been assigned to a drop location yet\r\n     *\r\n     * @returnan array of all unassigned drag items\r\n     */\r\n    getUnassignedDragItems() {\r\n        return this.question.dragItems?.filter((dragItem) => {\r\n            return !this.mappings?.some((mapping) => {\r\n                return this.dragAndDropQuestionUtil.isSameEntityWithTempId(mapping.dragItem, dragItem);\r\n            }, this);\r\n        }, this);\r\n    }\r\n\r\n    /**\r\n     * Check if the assigned drag item from the given location is correct\r\n     * (Only possible if this.question.correctMappings is available)\r\n     *\r\n     * @param dropLocation {object} the drop location to check for correctness\r\n     * @return {MappingResult} MAPPED_CORRECT, if the drop location is correct, MAPPED_INCORRECT if not and NOT_MAPPED if the location is correctly left blank\r\n     */\r\n    isLocationCorrect(dropLocation: DropLocation): MappingResult {\r\n        if (!this.question.correctMappings) {\r\n            return MappingResult.MAPPED_INCORRECT;\r\n        }\r\n        const validDragItems = this.question.correctMappings\r\n            .filter(function (mapping) {\r\n                return this.dragAndDropQuestionUtil.isSameEntityWithTempId(mapping.dropLocation, dropLocation);\r\n            }, this)\r\n            .map(function (mapping) {\r\n                return mapping.dragItem;\r\n            });\r\n        const selectedItem = this.dragItemForDropLocation(dropLocation);\r\n\r\n        if (!selectedItem) {\r\n            return validDragItems.length === 0 ? MappingResult.NOT_MAPPED : MappingResult.MAPPED_INCORRECT;\r\n        } else {\r\n            return validDragItems.some(function (dragItem) {\r\n                return this.dragAndDropQuestionUtil.isSameEntityWithTempId(dragItem, selectedItem);\r\n            }, this)\r\n                ? MappingResult.MAPPED_CORRECT\r\n                : MappingResult.MAPPED_INCORRECT;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if there is a drag item assigned to the given location in the solution of the question\r\n     * (Only possible if this.question.correctMappings is available)\r\n     *\r\n     * @param dropLocation {object} the drop location to check for mapping\r\n     * @return {boolean} true, if the drop location is part of a mapping, otherwise false.\r\n     */\r\n\r\n    isAssignedLocation(dropLocation: DropLocation): boolean {\r\n        if (!this.question.correctMappings) {\r\n            return false;\r\n        }\r\n        return this.question.correctMappings.some((mapping) => this.dragAndDropQuestionUtil.isSameEntityWithTempId(dropLocation, mapping.dropLocation));\r\n    }\r\n\r\n    /**\r\n     * Display a sample solution instead of the student's answer\r\n     */\r\n    showSampleSolution() {\r\n        this.sampleSolutionMappings = this.dragAndDropQuestionUtil.solve(this.question, this.mappings);\r\n        this.showingSampleSolution = true;\r\n    }\r\n\r\n    /**\r\n     * Display the student's answer again\r\n     */\r\n    hideSampleSolution() {\r\n        this.showingSampleSolution = false;\r\n    }\r\n\r\n    /**\r\n     * Get the drag item that was mapped to the given drop location in the sample solution\r\n     *\r\n     * @param dropLocation the drop location that the drag item should be mapped to\r\n     * @return the mapped drag item, or undefined, if no drag item has been mapped to this location\r\n     */\r\n    correctDragItemForDropLocation(dropLocation: DropLocation) {\r\n        const dragAndDropQuestionUtil = this.dragAndDropQuestionUtil;\r\n        const mapping = this.sampleSolutionMappings.find(function (solutionMapping) {\r\n            return dragAndDropQuestionUtil.isSameEntityWithTempId(solutionMapping.dropLocation, dropLocation);\r\n        });\r\n        return mapping?.dragItem;\r\n    }\r\n\r\n    /**\r\n     * Count and assign the amount of right mappings, incorrect mappings and the number of drop locations participating in at least one mapping for a question\r\n     * by using the isLocationCorrect Method and the isAssignedLocation Method\r\n     */\r\n    evaluateDropLocations(): void {\r\n        if (this.question.dropLocations) {\r\n            this.correctAnswer = this.question.dropLocations.filter((dropLocation) => this.isLocationCorrect(dropLocation) === MappingResult.MAPPED_CORRECT).length;\r\n            this.incorrectLocationMappings = this.question.dropLocations.filter((dropLocation) => this.isLocationCorrect(dropLocation) === MappingResult.MAPPED_INCORRECT).length;\r\n            this.mappedLocations = this.question.dropLocations.filter((dropLocation) => this.isAssignedLocation(dropLocation)).length;\r\n        }\r\n    }\r\n}\r\n","<div\r\n    class=\"dnd-question markdown-preview\"\r\n    [ngClass]=\"{ disabled: clickDisabled && !showResult, result: showResult && !forceSampleSolution, incorrect: (score || 0) < question.points! && !forceSampleSolution }\"\r\n>\r\n    <div [hidden]=\"loadingState === 'success'\">\r\n        @if (loadingState !== 'error') {\r\n            <h2>\r\n                <span style=\"color: grey\"><fa-icon [icon]=\"faSpinner\" animation=\"spin\" />&nbsp;<span jhiTranslate=\"artemisApp.quizQuestion.loading\"></span></span>\r\n            </h2>\r\n        }\r\n        @if (loadingState === 'error') {\r\n            <div>\r\n                <h2>\r\n                    <span style=\"color: grey\"><fa-icon [icon]=\"faExclamationCircle\" />&nbsp;<span jhiTranslate=\"artemisApp.quizQuestion.failed\"></span></span>\r\n                </h2>\r\n                <p>\r\n                    <button class=\"btn btn-default\" (click)=\"secureImageComponent.retryLoadImage()\" jhiTranslate=\"artemisApp.quizQuestion.retry\"></button>\r\n                </p>\r\n            </div>\r\n        }\r\n    </div>\r\n    <div [hidden]=\"loadingState !== 'success'\">\r\n        <h4 class=\"question-title-display\">\r\n            <span>{{ questionIndex }})</span> {{ question.title }}\r\n        </h4>\r\n        <p [innerHTML]=\"renderedQuestion.text\"></p>\r\n        @if (question.invalid) {\r\n            <span style=\"color: red\" jhiTranslate=\"artemisApp.quizQuestion.invalidText\"></span>\r\n        }\r\n        @if (question.hint || (question.explanation && showResult)) {\r\n            <div class=\"hint\">\r\n                @if (question.hint) {\r\n                    <span class=\"label label-info\" [ngbPopover]=\"renderedHint\" triggers=\"mouseenter:mouseleave\">\r\n                        <fa-icon [icon]=\"faQuestionCircle\" />\r\n                        <span jhiTranslate=\"artemisApp.quizQuestion.hint\"></span>\r\n                    </span>\r\n                }\r\n                <ng-template #renderedHint>\r\n                    <div [innerHTML]=\"renderedQuestion.hint\"></div>\r\n                </ng-template>\r\n                <br />\r\n                @if (question.explanation && showResult) {\r\n                    <span class=\"label label-primary\" [ngbPopover]=\"renderedExplanation\" triggers=\"mouseenter:mouseleave\">\r\n                        <fa-icon [icon]=\"faExclamationCircle\" />\r\n                        <span jhiTranslate=\"artemisApp.quizQuestion.explanation\"></span>\r\n                    </span>\r\n                }\r\n                <ng-template #renderedExplanation>\r\n                    <div [innerHTML]=\"renderedQuestion.explanation\"></div>\r\n                </ng-template>\r\n            </div>\r\n        }\r\n        @if (!showResult || forceSampleSolution) {\r\n            <div class=\"question-score\">\r\n                <span jhiTranslate=\"artemisApp.quizQuestion.score\" class=\"colon-suffix\"></span>\r\n                <span>{{ question.points }}</span>\r\n            </div>\r\n        }\r\n        @if (showResult && !forceSampleSolution) {\r\n            <div class=\"question-score result\" [ngClass]=\"{ incorrect: (score || 0) < question.points! }\">\r\n                <span jhiTranslate=\"artemisApp.quizQuestion.yourScore\" class=\"colon-suffix\"></span>\r\n                <span class=\"show-explanation\">{{ score || 0 }}/{{ question.points }}</span>\r\n                <span class=\"show-explanation\">\r\n                    <jhi-quiz-scoring-infostudent-modal\r\n                        [score]=\"score\"\r\n                        [question]=\"question\"\r\n                        [dragAndDropMapping]=\"mappings\"\r\n                        [correctlyMappedDragAndDropItems]=\"correctAnswer\"\r\n                        [incorrectlyMappedDragAndDropItems]=\"incorrectLocationMappings\"\r\n                        [mappedLocations]=\"mappedLocations\"\r\n                        [questionIndex]=\"questionIndex\"\r\n                    />\r\n                </span>\r\n            </div>\r\n        }\r\n        @if (showResult) {\r\n            <div class=\"dnd-instructions\">\r\n                @if (showingSampleSolution) {\r\n                    <span jhiTranslate=\"artemisApp.dragAndDropQuestion.showingSampleSolution\"></span>\r\n                }\r\n                @if (!showingSampleSolution) {\r\n                    <span jhiTranslate=\"artemisApp.dragAndDropQuestion.showingYourAnswer\"></span>\r\n                }\r\n                @if (showResult && !forceSampleSolution) {\r\n                    <div>\r\n                        @if (!showingSampleSolution) {\r\n                            <div class=\"btn btn-outline-primary\" (click)=\"showSampleSolution()\" jhiTranslate=\"artemisApp.quizQuestion.showSampleSolution\"></div>\r\n                        }\r\n                        @if (showingSampleSolution) {\r\n                            <div class=\"btn btn-outline-primary\" (click)=\"hideSampleSolution()\" jhiTranslate=\"artemisApp.quizQuestion.hideSampleSolution\"></div>\r\n                        }\r\n                    </div>\r\n                }\r\n            </div>\r\n        }\r\n        <div cdkDropListGroup class=\"drag-and-drop-area\">\r\n            <div class=\"background-area\">\r\n                @if (question.backgroundFilePath) {\r\n                    <jhi-secured-image [src]=\"filePreviewPaths.get(question.backgroundFilePath!) || question.backgroundFilePath!\" (endLoadingProcess)=\"changeLoading($event)\" />\r\n                }\r\n                <div class=\"click-layer\">\r\n                    @if (!showResult) {\r\n                        <div>\r\n                            @for (dropLocation of question.dropLocations; track dropLocation) {\r\n                                <div\r\n                                    id=\"drop-location\"\r\n                                    class=\"drop-location\"\r\n                                    [ngClass]=\"dropAllowed ? 'drop-allowed' : ''\"\r\n                                    [ngStyle]=\"{\r\n                                        top: dropLocation.posY! / 2 + '%',\r\n                                        left: dropLocation.posX! / 2 + '%',\r\n                                        width: dropLocation.width! / 2 + '%',\r\n                                        height: dropLocation.height! / 2 + '%',\r\n                                    }\"\r\n                                    (cdkDropListDropped)=\"onDragDrop(dropLocation, $event)\"\r\n                                    (onDragEnter)=\"preventDefault($event)\"\r\n                                    (onDragOver)=\"preventDefault($event)\"\r\n                                    (onDragLeave)=\"preventDefault($event)\"\r\n                                    cdkDropList\r\n                                    [cdkDropListAutoScrollStep]=\"60\"\r\n                                >\r\n                                    @if (dragItemForDropLocation(dropLocation)) {\r\n                                        <jhi-drag-item\r\n                                            (dragenter)=\"drag()\"\r\n                                            (dragend)=\"drop()\"\r\n                                            [dragItem]=\"dragItemForDropLocation(dropLocation)!\"\r\n                                            [clickDisabled]=\"clickDisabled\"\r\n                                            [minWidth]=\"100 + '%'\"\r\n                                            [filePreviewPaths]=\"filePreviewPaths\"\r\n                                        />\r\n                                    }\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    }\r\n                    @if (showResult && !showingSampleSolution && question.dropLocations) {\r\n                        <div>\r\n                            @for (dropLocation of question.dropLocations; track dropLocation) {\r\n                                <div>\r\n                                    <div\r\n                                        class=\"drop-location results\"\r\n                                        [ngClass]=\"{\r\n                                            incorrect:\r\n                                                isLocationCorrect(dropLocation) === MappingResult.MAPPED_INCORRECT &&\r\n                                                !dropLocation.invalid &&\r\n                                                !invalidDragItemForDropLocation(dropLocation) &&\r\n                                                !question.invalid,\r\n                                        }\"\r\n                                        [ngStyle]=\"{\r\n                                            top: dropLocation.posY! / 2 + '%',\r\n                                            left: dropLocation.posX! / 2 + '%',\r\n                                            width: dropLocation.width! / 2 + '%',\r\n                                            height: dropLocation.height! / 2 + '%',\r\n                                        }\"\r\n                                    >\r\n                                        @if (\r\n                                            isLocationCorrect(dropLocation) === MappingResult.MAPPED_INCORRECT &&\r\n                                            !dropLocation.invalid &&\r\n                                            !invalidDragItemForDropLocation(dropLocation) &&\r\n                                            !question.invalid\r\n                                        ) {\r\n                                            <div class=\"result-symbol\">\r\n                                                <fa-icon [icon]=\"faExclamationTriangle\" size=\"2x\" class=\"warning\" />\r\n                                            </div>\r\n                                        }\r\n                                        <div class=\"invalid\">\r\n                                            @if (dropLocation.invalid && !invalidDragItemForDropLocation(dropLocation) && !question.invalid) {\r\n                                                <span jhiTranslate=\"artemisApp.dragAndDropQuestion.invalid.dropLocation\"></span>\r\n                                            }\r\n                                            @if (!dropLocation.invalid && invalidDragItemForDropLocation(dropLocation) && !question.invalid) {\r\n                                                <span jhiTranslate=\"artemisApp.dragAndDropQuestion.invalid.dragItem\"></span>\r\n                                            }\r\n                                            @if ((dropLocation.invalid && invalidDragItemForDropLocation(dropLocation)) || question.invalid) {\r\n                                                <span jhiTranslate=\"artemisApp.quizQuestion.invalid\"></span>\r\n                                            }\r\n                                            @if (dropLocation.invalid || question.invalid || invalidDragItemForDropLocation(dropLocation)) {\r\n                                                <fa-icon\r\n                                                    ngbTooltip=\"Invalid Drop Locations and invalid Drag Items will be assessed as correct.\"\r\n                                                    style=\"color: black\"\r\n                                                    [icon]=\"faQuestionCircle\"\r\n                                                />\r\n                                            }\r\n                                        </div>\r\n                                        @if (dragItemForDropLocation(dropLocation)) {\r\n                                            <jhi-drag-item\r\n                                                [dragItem]=\"dragItemForDropLocation(dropLocation)!\"\r\n                                                [clickDisabled]=\"true\"\r\n                                                [minWidth]=\"100 + '%'\"\r\n                                                [filePreviewPaths]=\"filePreviewPaths\"\r\n                                            />\r\n                                        }\r\n                                        @if (!dragItemForDropLocation(dropLocation)) {\r\n                                            <div class=\"drag-item no-click\">\r\n                                                <div></div>\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    }\r\n                    @if (showResult && showingSampleSolution) {\r\n                        <div>\r\n                            @for (dropLocation of question.dropLocations; track dropLocation) {\r\n                                <div>\r\n                                    <div\r\n                                        class=\"drop-location sampleSolution\"\r\n                                        [ngClass]=\"{\r\n                                            incorrect:\r\n                                                isLocationCorrect(dropLocation) === MappingResult.MAPPED_INCORRECT &&\r\n                                                !dropLocation.invalid &&\r\n                                                !invalidDragItemForDropLocation(dropLocation) &&\r\n                                                !question.invalid,\r\n                                        }\"\r\n                                        [ngStyle]=\"{\r\n                                            top: dropLocation.posY! / 2 + '%',\r\n                                            left: dropLocation.posX! / 2 + '%',\r\n                                            width: dropLocation.width! / 2 + '%',\r\n                                            height: dropLocation.height! / 2 + '%',\r\n                                        }\"\r\n                                    >\r\n                                        @if (\r\n                                            isLocationCorrect(dropLocation) === MappingResult.MAPPED_INCORRECT &&\r\n                                            !dropLocation.invalid &&\r\n                                            !invalidDragItemForDropLocation(dropLocation) &&\r\n                                            !question.invalid &&\r\n                                            !forceSampleSolution\r\n                                        ) {\r\n                                            <div class=\"result-symbol\">\r\n                                                <fa-icon [icon]=\"faExclamationTriangle\" size=\"2x\" class=\"warning\" />\r\n                                            </div>\r\n                                        }\r\n                                        <div class=\"invalid\">\r\n                                            @if (dropLocation.invalid && !invalidDragItemForDropLocation(dropLocation) && !question.invalid) {\r\n                                                <span jhiTranslate=\"artemisApp.dragAndDropQuestion.invalid.dropLocation\"></span>\r\n                                            }\r\n                                            @if ((dropLocation.invalid && invalidDragItemForDropLocation(dropLocation)) || question.invalid) {\r\n                                                <span jhiTranslate=\"artemisApp.quizQuestion.invalid\"></span>\r\n                                            }\r\n                                            @if (dropLocation.invalid || question.invalid) {\r\n                                                <fa-icon\r\n                                                    ngbTooltip=\"Invalid Drop Locations and invalid Drag Items will be assessed as correct.\"\r\n                                                    style=\"color: black\"\r\n                                                    [icon]=\"faQuestionCircle\"\r\n                                                />\r\n                                            }\r\n                                        </div>\r\n                                        @if (dropLocation && correctDragItemForDropLocation(dropLocation) && !dropLocation.invalid && !question.invalid) {\r\n                                            <jhi-drag-item\r\n                                                [dragItem]=\"correctDragItemForDropLocation(dropLocation)!\"\r\n                                                [clickDisabled]=\"true\"\r\n                                                [minWidth]=\"100 + '%'\"\r\n                                                [filePreviewPaths]=\"filePreviewPaths\"\r\n                                            />\r\n                                        }\r\n                                        @if (!dropLocation || !correctDragItemForDropLocation(dropLocation)) {\r\n                                            <div class=\"drag-item no-click\">\r\n                                                <div></div>\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div class=\"drag-and-drop-items\">\r\n                @if (!showResult) {\r\n                    <div class=\"dnd-instructions\">\r\n                        <span jhiTranslate=\"artemisApp.dragAndDropQuestion.studentInstructions\"></span>\r\n                    </div>\r\n                }\r\n                @if (showResult) {\r\n                    <div></div>\r\n                }\r\n                @if (!showResult) {\r\n                    <div\r\n                        class=\"drag-items\"\r\n                        id=\"drag-items\"\r\n                        [ngClass]=\"dropAllowed ? 'drop-allowed' : ''\"\r\n                        (cdkDropListDropped)=\"onDragDrop(undefined, $event)\"\r\n                        (onDragEnter)=\"preventDefault($event)\"\r\n                        (onDragOver)=\"preventDefault($event)\"\r\n                        (onDragLeave)=\"preventDefault($event)\"\r\n                        cdkDropList\r\n                        [cdkDropListAutoScrollStep]=\"60\"\r\n                    >\r\n                        @for (dragItem of getUnassignedDragItems(); track dragItem; let i = $index) {\r\n                            <jhi-drag-item\r\n                                id=\"drag-item-{{ i }}\"\r\n                                (dragenter)=\"drag()\"\r\n                                (dragend)=\"drop()\"\r\n                                [dragItem]=\"dragItem\"\r\n                                [clickDisabled]=\"clickDisabled\"\r\n                                [minWidth]=\"'160'\"\r\n                                [filePreviewPaths]=\"filePreviewPaths\"\r\n                            />\r\n                        }\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { BaseEntity } from 'app/shared/model/base-entity';\r\nimport { DragAndDropSubmittedAnswer } from 'app/entities/quiz/drag-and-drop-submitted-answer.model';\r\nimport { DragAndDropQuestion } from 'app/entities/quiz/drag-and-drop-question.model';\r\nimport { DragItem } from 'app/entities/quiz/drag-item.model';\r\nimport { CanBecomeInvalid, DropLocation } from 'app/entities/quiz/drop-location.model';\r\n\r\nexport class DragAndDropMapping implements BaseEntity, CanBecomeInvalid {\r\n    public id?: number;\r\n    public dragItemIndex?: number;\r\n    public dropLocationIndex?: number;\r\n    public invalid = false;\r\n    public submittedAnswer?: DragAndDropSubmittedAnswer;\r\n    public question?: DragAndDropQuestion;\r\n    public dragItem?: DragItem;\r\n    public dropLocation?: DropLocation;\r\n\r\n    constructor(dragItem: DragItem | undefined, dropLocation: DropLocation | undefined) {\r\n        this.dragItem = dragItem;\r\n        this.dropLocation = dropLocation;\r\n    }\r\n}\r\n","import { AfterViewInit, Component, Input, inject } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Result } from 'app/entities/result.model';\r\nimport { QuizSubmission } from 'app/entities/quiz/quiz-submission.model';\r\nimport { ShortAnswerQuestion } from 'app/entities/quiz/short-answer-question.model';\r\nimport { QuizQuestion, QuizQuestionType, ScoringType } from 'app/entities/quiz/quiz-question.model';\r\nimport { MultipleChoiceSubmittedAnswer } from 'app/entities/quiz/multiple-choice-submitted-answer.model';\r\nimport { DragAndDropMapping } from 'app/entities/quiz/drag-and-drop-mapping.model';\r\nimport { AnswerOption } from 'app/entities/quiz/answer-option.model';\r\nimport { ShortAnswerSubmittedText } from 'app/entities/quiz/short-answer-submitted-text.model';\r\nimport { MultipleChoiceQuestion } from 'app/entities/quiz/multiple-choice-question.model';\r\nimport { faQuestionCircle } from '@fortawesome/free-regular-svg-icons';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { NgClass } from '@angular/common';\r\n\r\n@Component({\r\n    selector: 'jhi-quiz-scoring-infostudent-modal',\r\n    templateUrl: './quiz-scoring-info-student-modal.component.html',\r\n    styleUrls: ['./quiz-scoring-info-student-modal.component.scss'],\r\n    imports: [TranslateDirective, FaIconComponent, NgClass],\r\n})\r\nexport class QuizScoringInfoStudentModalComponent implements AfterViewInit {\r\n    private modalService = inject(NgbModal);\r\n    private translateService = inject(TranslateService);\r\n\r\n    QuizQuestionType = QuizQuestionType;\r\n    ScoringType = ScoringType;\r\n\r\n    @Input() score: number; // Score of the student that has been achieved\r\n    @Input() questionIndex: number; // Question Index of the question\r\n    @Input() question: QuizQuestion;\r\n    @Input() dragAndDropMapping = new Array<DragAndDropMapping>();\r\n    @Input() incorrectlyMappedDragAndDropItems: number;\r\n    @Input() mappedLocations: number;\r\n    @Input() multipleChoiceMapping = new Array<AnswerOption>();\r\n    @Input() shortAnswerText = new Array<ShortAnswerSubmittedText>();\r\n    @Input() correctlyMappedDragAndDropItems: number; // Amount of correctly mapped drag and drop items\r\n    @Input() multipleChoiceSubmittedResult: Result;\r\n    @Input() quizQuestions: QuizQuestion[] | undefined;\r\n\r\n    /* Multiple Choice Counting Variables*/\r\n    multipleChoiceCorrectAnswerCorrectlyChosen: number; // Amount of right options chosen by the student\r\n    multipleChoiceWrongAnswerChosen: number; // Amount of wrong options chosen by the student\r\n    correctMultipleChoiceAnswers: number; // Amount of correct options for the question\r\n    forgottenMultipleChoiceRightAnswers: number; // Amount of wrong options for the question\r\n    multipleChoiceAnswerOptions: number; // Amount of all possible options for the question\r\n    inTotalSelectedRightOptions: number; // Amount of correct and wrong options assigned correctly\r\n    inTotalSelectedWrongOptions: number; // Amount of correct and wrong options assigned wrongly\r\n    differenceMultipleChoice: number; // Difference between inTotalSelectedRightOptions and differenceMultipleChoice\r\n    checkForCorrectAnswers = new Array<AnswerOption>();\r\n    checkForWrongAnswers = new Array<AnswerOption>();\r\n    isSingleChoice: boolean;\r\n\r\n    /* Drag and Drop Counting Variables*/\r\n    differenceDragAndDrop: number; // Difference between the incorrectlyMappedDragAndDropItems and correctlyMappedDragAndDropItems\r\n\r\n    /* Short Answer Counting Variables*/\r\n    shortAnswerSpots: number; // Amount of short answer spots\r\n    shortAnswerCorrectAnswers: number; // A mount of correctly filled out spots\r\n    shortAnswerWrongAnswers: number; // A mount of wrongly filled out spots\r\n    differenceShortAnswer: number; // Difference between shortAnswerCorrectAnswers and shortAnswerWrongAnswers\r\n\r\n    /* Plural Variables*/\r\n    questionPoint: string;\r\n    scorePoint: string;\r\n    wrongOption: string;\r\n    rightOption: string;\r\n    rightMap: string;\r\n    wrongMap: string;\r\n    rightGap: string;\r\n    wrongGap: string;\r\n\r\n    // Icons\r\n    farQuestionCircle = faQuestionCircle;\r\n\r\n    /**\r\n     * Count the variables depending on the quiz question type\r\n     */\r\n    ngAfterViewInit() {\r\n        this.checkForSingleOrPluralPoints();\r\n        switch (this.question.type) {\r\n            case QuizQuestionType.MULTIPLE_CHOICE:\r\n                this.countMultipleChoice();\r\n                break;\r\n            case QuizQuestionType.DRAG_AND_DROP:\r\n                this.countDragAndDrop();\r\n                break;\r\n            case QuizQuestionType.SHORT_ANSWER:\r\n                this.countShortAnswer();\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * opens the pop-up for the explanation of the points\r\n     */\r\n    open(content: any) {\r\n        this.modalService.open(content, { size: 'lg' });\r\n    }\r\n\r\n    /**\r\n     * checks for the correct answerOptions based on the submittedAnswer\r\n     */\r\n    private submittedAnswerCorrectValues() {\r\n        let answerOptionsOfQuestion = new Array<AnswerOption>();\r\n        for (const question of this.quizQuestions || []) {\r\n            const mcQuizQuestion = question as MultipleChoiceQuestion;\r\n            if (mcQuizQuestion.id === this.question.id) {\r\n                answerOptionsOfQuestion = mcQuizQuestion.answerOptions!;\r\n                this.correctMultipleChoiceAnswers = mcQuizQuestion.answerOptions!.filter((option) => option.isCorrect).length;\r\n            }\r\n        }\r\n\r\n        if (!this.multipleChoiceSubmittedResult || !this.multipleChoiceSubmittedResult.submission) {\r\n            return;\r\n        }\r\n        const submittedQuizSubmission = this.multipleChoiceSubmittedResult.submission as QuizSubmission;\r\n        const submittedAnswerLength = submittedQuizSubmission.submittedAnswers?.length ?? 0;\r\n        for (let i = 0; i < submittedAnswerLength; i++) {\r\n            if (submittedQuizSubmission.submittedAnswers![i].quizQuestion!.id === this.question.id) {\r\n                const multipleChoiceSubmittedAnswers = submittedQuizSubmission.submittedAnswers![i] as MultipleChoiceSubmittedAnswer;\r\n                if (multipleChoiceSubmittedAnswers.selectedOptions === undefined) {\r\n                    this.checkForCorrectAnswers = [];\r\n                    this.checkForWrongAnswers = [];\r\n                } else {\r\n                    for (const selectedOption of multipleChoiceSubmittedAnswers.selectedOptions) {\r\n                        for (const answerOptionElement of answerOptionsOfQuestion) {\r\n                            if (selectedOption.id === answerOptionElement.id && answerOptionElement.isCorrect) {\r\n                                this.checkForCorrectAnswers.push(selectedOption);\r\n                            } else if (selectedOption.id === answerOptionElement.id && !answerOptionElement.isCorrect) {\r\n                                this.checkForWrongAnswers.push(selectedOption);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * counts the variables for Multiple Choice Questions\r\n     */\r\n    private countMultipleChoice() {\r\n        this.submittedAnswerCorrectValues();\r\n        const translationBasePath = 'artemisApp.quizExercise.explanationText.';\r\n        const mcmQuestion = this.question as MultipleChoiceQuestion;\r\n        this.isSingleChoice = mcmQuestion.singleChoice ?? false;\r\n        this.multipleChoiceAnswerOptions = mcmQuestion.answerOptions!.length;\r\n        this.multipleChoiceCorrectAnswerCorrectlyChosen = this.checkForCorrectAnswers.length;\r\n        this.multipleChoiceWrongAnswerChosen = this.checkForWrongAnswers.length;\r\n        this.forgottenMultipleChoiceRightAnswers = this.correctMultipleChoiceAnswers - this.multipleChoiceCorrectAnswerCorrectlyChosen;\r\n        this.inTotalSelectedRightOptions =\r\n            this.multipleChoiceCorrectAnswerCorrectlyChosen + (this.multipleChoiceAnswerOptions - this.correctMultipleChoiceAnswers - this.multipleChoiceWrongAnswerChosen);\r\n        this.inTotalSelectedWrongOptions = this.multipleChoiceWrongAnswerChosen + this.forgottenMultipleChoiceRightAnswers;\r\n        this.differenceMultipleChoice = this.inTotalSelectedRightOptions - this.inTotalSelectedWrongOptions;\r\n\r\n        if (this.inTotalSelectedRightOptions === 1) {\r\n            this.rightOption = this.translateService.instant(translationBasePath + 'option');\r\n        } else {\r\n            this.rightOption = this.translateService.instant(translationBasePath + 'options');\r\n        }\r\n\r\n        if (this.inTotalSelectedWrongOptions === 1) {\r\n            this.wrongOption = this.translateService.instant(translationBasePath + 'option');\r\n        } else {\r\n            this.wrongOption = this.translateService.instant(translationBasePath + 'options');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * counts the variables for Drag and Drop Questions\r\n     */\r\n    private countDragAndDrop() {\r\n        const translationBasePath = 'artemisApp.quizExercise.explanationText.';\r\n        this.differenceDragAndDrop = this.correctlyMappedDragAndDropItems - this.incorrectlyMappedDragAndDropItems;\r\n\r\n        if (this.correctlyMappedDragAndDropItems === 1) {\r\n            this.rightMap = this.translateService.instant(translationBasePath + 'item');\r\n        } else {\r\n            this.rightMap = this.translateService.instant(translationBasePath + 'items');\r\n        }\r\n\r\n        if (this.incorrectlyMappedDragAndDropItems === 1) {\r\n            this.wrongMap = this.translateService.instant(translationBasePath + 'item');\r\n        } else {\r\n            this.wrongMap = this.translateService.instant(translationBasePath + 'items');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * counts the variables for Short Answer Questions\r\n     */\r\n    private countShortAnswer() {\r\n        const translationBasePath = 'artemisApp.quizExercise.explanationText.';\r\n        const shortAnswer = this.question as ShortAnswerQuestion;\r\n        this.shortAnswerSpots = shortAnswer.spots!.length;\r\n        this.shortAnswerCorrectAnswers = this.shortAnswerText.filter((option) => option.isCorrect).length;\r\n        this.shortAnswerWrongAnswers = this.shortAnswerSpots - this.shortAnswerCorrectAnswers;\r\n        this.differenceShortAnswer = this.shortAnswerCorrectAnswers - this.shortAnswerWrongAnswers;\r\n\r\n        if (this.shortAnswerCorrectAnswers === 1) {\r\n            this.rightGap = this.translateService.instant(translationBasePath + 'textgap');\r\n        } else {\r\n            this.rightGap = this.translateService.instant(translationBasePath + 'textgaps');\r\n        }\r\n\r\n        if (this.shortAnswerWrongAnswers === 1) {\r\n            this.wrongGap = this.translateService.instant(translationBasePath + 'textgap');\r\n        } else {\r\n            this.wrongGap = this.translateService.instant(translationBasePath + 'textgaps');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks the score of the question and the score the student has achieved, depending on that write either point or points\r\n     */\r\n    private checkForSingleOrPluralPoints() {\r\n        const translationBasePath = 'artemisApp.quizExercise.explanationText.';\r\n        if (this.question.points === 1) {\r\n            this.questionPoint = this.translateService.instant(translationBasePath + 'point');\r\n        } else {\r\n            this.questionPoint = this.translateService.instant(translationBasePath + 'points');\r\n        }\r\n\r\n        if (this.score === undefined) {\r\n            this.score = 0;\r\n        }\r\n\r\n        if (this.score === 1) {\r\n            this.scorePoint = this.translateService.instant(translationBasePath + 'point');\r\n        } else {\r\n            this.scorePoint = this.translateService.instant(translationBasePath + 'points');\r\n        }\r\n    }\r\n}\r\n","<ng-template #scoringExplanation let-c=\"close\" let-d=\"dismiss\">\r\n    <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">\r\n            <span\r\n                jhiTranslate=\"artemisApp.quizExercise.explanationText.scoringTitle\"\r\n                [translateValues]=\"{ paramTitle: this.question.title, paramIndex: this.questionIndex }\"\r\n            ></span>\r\n        </h5>\r\n        <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"d()\"></button>\r\n    </div>\r\n    @if (this.question.scoringType === ScoringType.ALL_OR_NOTHING && isSingleChoice) {\r\n        <div class=\"modal-body\">\r\n            <span class=\"font-weight-bold\" jhiTranslate=\"artemisApp.quizExercise.explanationText.scoringTypeSingleChoice\"></span>\r\n            <span jhiTranslate=\"artemisApp.quizExercise.explanationText.scoringTypeSingleChoiceExplanation\"></span>\r\n            <br />\r\n            <div>\r\n                @if (this.correctMultipleChoiceAnswers === this.multipleChoiceCorrectAnswerCorrectlyChosen && this.multipleChoiceWrongAnswerChosen === 0) {\r\n                    <span>\r\n                        <span\r\n                            jhiTranslate=\"artemisApp.quizExercise.explanationText.multipleChoiceSingleChoiceCorrect\"\r\n                            [translateValues]=\"{\r\n                                paramScore: this.score,\r\n                                paramQuestionScore: this.question.points,\r\n                                paramPoint: this.scorePoint,\r\n                                paramScorePoint: this.questionPoint,\r\n                            }\"\r\n                        ></span\r\n                    ></span>\r\n                }\r\n                @if (!(this.correctMultipleChoiceAnswers === this.multipleChoiceCorrectAnswerCorrectlyChosen && this.multipleChoiceWrongAnswerChosen === 0)) {\r\n                    <span>\r\n                        <span\r\n                            jhiTranslate=\"artemisApp.quizExercise.explanationText.multipleChoiceSingleChoiceNotCorrect\"\r\n                            [translateValues]=\"{\r\n                                paramScore: this.score,\r\n                                paramQuestionScore: this.question.points,\r\n                                paramPoint: this.scorePoint,\r\n                                paramScorePoint: this.questionPoint,\r\n                            }\"\r\n                        ></span\r\n                    ></span>\r\n                }\r\n            </div>\r\n        </div>\r\n    }\r\n    @if (this.question.scoringType === ScoringType.ALL_OR_NOTHING && !isSingleChoice) {\r\n        <div class=\"modal-body\">\r\n            <span class=\"font-weight-bold\" jhiTranslate=\"artemisApp.quizExercise.explanationText.scoringTypeAllOrNothing\"></span>\r\n            <span jhiTranslate=\"artemisApp.quizExercise.explanationText.scoringTypeAllOrNothingExplanation\"></span>\r\n            <br />\r\n            @if (this.question.type === QuizQuestionType.MULTIPLE_CHOICE) {\r\n                <div>\r\n                    @if (this.correctMultipleChoiceAnswers === this.multipleChoiceCorrectAnswerCorrectlyChosen && this.multipleChoiceWrongAnswerChosen === 0) {\r\n                        <span>\r\n                            <span\r\n                                jhiTranslate=\"artemisApp.quizExercise.explanationText.multipleChoiceAllOrNothingCorrect\"\r\n                                [translateValues]=\"{\r\n                                    paramScore: this.score,\r\n                                    paramQuestionScore: this.question.points,\r\n                                    paramPoint: this.scorePoint,\r\n                                    paramScorePoint: this.questionPoint,\r\n                                }\"\r\n                            ></span\r\n                        ></span>\r\n                    }\r\n                    @if (!(this.correctMultipleChoiceAnswers === this.multipleChoiceCorrectAnswerCorrectlyChosen && this.multipleChoiceWrongAnswerChosen === 0)) {\r\n                        <span>\r\n                            <span\r\n                                jhiTranslate=\"artemisApp.quizExercise.explanationText.multipleChoiceAllOrNothingNotCorrect\"\r\n                                [translateValues]=\"{\r\n                                    paramScore: this.score,\r\n                                    paramQuestionScore: this.question.points,\r\n                                    paramInTotalWrongOptions: this.inTotalSelectedWrongOptions,\r\n                                    paramInTotalRightOptions: this.inTotalSelectedRightOptions,\r\n                                    paramPoint: this.scorePoint,\r\n                                    paramScorePoint: this.questionPoint,\r\n                                    wrongOption: this.wrongOption,\r\n                                    rightOption: this.rightOption,\r\n                                }\"\r\n                            ></span\r\n                        ></span>\r\n                    }\r\n                </div>\r\n            }\r\n            @if (this.question.type === QuizQuestionType.DRAG_AND_DROP) {\r\n                <div>\r\n                    @if (this.incorrectlyMappedDragAndDropItems === 0) {\r\n                        <span>\r\n                            <span\r\n                                jhiTranslate=\"artemisApp.quizExercise.explanationText.dragAndDropAllOrNothingCorrect\"\r\n                                [translateValues]=\"{\r\n                                    paramScore: this.score,\r\n                                    paramQuestionScore: this.question.points,\r\n                                    paramPoint: this.scorePoint,\r\n                                    paramScorePoint: this.questionPoint,\r\n                                }\"\r\n                            ></span\r\n                        ></span>\r\n                    }\r\n                    @if (this.incorrectlyMappedDragAndDropItems !== 0) {\r\n                        <span>\r\n                            <span\r\n                                jhiTranslate=\"artemisApp.quizExercise.explanationText.dragAndDropAllOrNothingNotCorrect\"\r\n                                [translateValues]=\"{\r\n                                    paramScore: this.score,\r\n                                    paramQuestionScore: this.question.points,\r\n                                    paramWrongMappedItems: this.incorrectlyMappedDragAndDropItems,\r\n                                    paramRightMapping: this.correctlyMappedDragAndDropItems,\r\n                                    paramPoint: this.scorePoint,\r\n                                    paramScorePoint: this.questionPoint,\r\n                                    rightMap: this.rightMap,\r\n                                    wrongMap: this.wrongMap,\r\n                                }\"\r\n                            ></span\r\n                        ></span>\r\n                    }\r\n                </div>\r\n            }\r\n            @if (this.question.type === QuizQuestionType.SHORT_ANSWER) {\r\n                <div>\r\n                    @if (!(this.shortAnswerWrongAnswers > 0)) {\r\n                        <span>\r\n                            <span\r\n                                jhiTranslate=\"artemisApp.quizExercise.explanationText.shortAnswerAllOrNothingCorrect\"\r\n                                [translateValues]=\"{\r\n                                    paramScore: this.score,\r\n                                    paramQuestionScore: this.question.points,\r\n                                    paramPoint: this.scorePoint,\r\n                                    paramScorePoint: this.questionPoint,\r\n                                }\"\r\n                            ></span\r\n                        ></span>\r\n                    }\r\n                    @if (this.shortAnswerWrongAnswers > 0) {\r\n                        <span>\r\n                            <span\r\n                                jhiTranslate=\"artemisApp.quizExercise.explanationText.shortAnswerAllOrNothingNotCorrect\"\r\n                                [translateValues]=\"{\r\n                                    paramScore: this.score,\r\n                                    paramQuestionScore: this.question.points,\r\n                                    paramShortAnswerWrongOption: this.shortAnswerWrongAnswers,\r\n                                    paramShortAnswerCorrectAnswers: this.shortAnswerCorrectAnswers,\r\n                                    paramPoint: this.scorePoint,\r\n                                    paramScorePoint: this.questionPoint,\r\n                                    rightGap: this.rightGap,\r\n                                    wrongGap: this.wrongGap,\r\n                                }\"\r\n                            ></span\r\n                        ></span>\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    }\r\n    @if (this.question.scoringType === ScoringType.PROPORTIONAL_WITH_PENALTY) {\r\n        <div class=\"modal-body\">\r\n            <span class=\"font-weight-bold\" jhiTranslate=\"artemisApp.quizExercise.explanationText.scoringTypeProportional\"></span>\r\n            <span jhiTranslate=\"artemisApp.quizExercise.explanationText.scoringTypeProportionalExplanation\"></span>\r\n            <br />\r\n            @if (this.question.type === QuizQuestionType.MULTIPLE_CHOICE) {\r\n                <div>\r\n                    @if (this.correctMultipleChoiceAnswers === this.multipleChoiceCorrectAnswerCorrectlyChosen && this.multipleChoiceWrongAnswerChosen === 0) {\r\n                        <span>\r\n                            <span\r\n                                jhiTranslate=\"artemisApp.quizExercise.explanationText.multipleChoiceAllOrNothingCorrect\"\r\n                                [translateValues]=\"{\r\n                                    paramScore: this.score,\r\n                                    paramQuestionScore: this.question.points,\r\n                                    paramPoint: this.scorePoint,\r\n                                    paramScorePoint: this.questionPoint,\r\n                                }\"\r\n                            ></span\r\n                        ></span>\r\n                    }\r\n                    @if (\r\n                        !(this.correctMultipleChoiceAnswers === this.multipleChoiceCorrectAnswerCorrectlyChosen && this.multipleChoiceWrongAnswerChosen === 0) &&\r\n                        this.differenceMultipleChoice >= 0\r\n                    ) {\r\n                        <span>\r\n                            <p\r\n                                jhiTranslate=\"artemisApp.quizExercise.explanationText.multipleChoiceProp\"\r\n                                [translateValues]=\"{\r\n                                    paramScore: this.score,\r\n                                    paramQuestionScore: this.question.points,\r\n                                    paramAmountOfAnswerOptions: this.multipleChoiceAnswerOptions,\r\n                                    paramInTotalWrongOptions: this.inTotalSelectedWrongOptions,\r\n                                    paramInTotalRightOptions: this.inTotalSelectedRightOptions,\r\n                                    paramPoint: this.scorePoint,\r\n                                    paramScorePoint: this.questionPoint,\r\n                                    wrongOption: this.wrongOption,\r\n                                    rightOption: this.rightOption,\r\n                                }\"\r\n                            ></p>\r\n                            <b\r\n                                >+ {{ this.inTotalSelectedRightOptions }}*{{ this.question.points }} /{{ this.multipleChoiceAnswerOptions }} -\r\n                                {{ this.inTotalSelectedWrongOptions }}*{{ this.question.points }}/{{ this.multipleChoiceAnswerOptions }} = {{ this.score }}</b\r\n                            >\r\n                            <p jhiTranslate=\"artemisApp.quizExercise.explanationText.KeepTrying\"></p>\r\n                        </span>\r\n                    }\r\n                    @if (\r\n                        !(this.correctMultipleChoiceAnswers === this.multipleChoiceCorrectAnswerCorrectlyChosen && this.multipleChoiceWrongAnswerChosen === 0) &&\r\n                        this.differenceMultipleChoice < 0\r\n                    ) {\r\n                        <span>\r\n                            <p\r\n                                jhiTranslate=\"artemisApp.quizExercise.explanationText.multipleChoiceProp\"\r\n                                [translateValues]=\"{\r\n                                    paramScore: this.score,\r\n                                    paramQuestionScore: this.question.points,\r\n                                    paramAmountOfAnswerOptions: this.multipleChoiceAnswerOptions,\r\n                                    paramInTotalWrongOptions: this.inTotalSelectedWrongOptions,\r\n                                    paramInTotalRightOptions: this.inTotalSelectedRightOptions,\r\n                                    paramPoint: this.scorePoint,\r\n                                    paramScorePoint: this.questionPoint,\r\n                                    wrongOption: this.wrongOption,\r\n                                    rightOption: this.rightOption,\r\n                                }\"\r\n                            ></p>\r\n                            <b\r\n                                >+ {{ this.inTotalSelectedRightOptions }}*{{ this.question.points }} /{{ this.multipleChoiceAnswerOptions }} -\r\n                                {{ this.inTotalSelectedWrongOptions }}*{{ this.question.points }}/{{ this.multipleChoiceAnswerOptions }}\r\n                                = 0\r\n                            </b>\r\n                            <p jhiTranslate=\"artemisApp.quizExercise.explanationText.zeroPointer\"></p>\r\n                            <p jhiTranslate=\"artemisApp.quizExercise.explanationText.KeepTrying\"></p>\r\n                        </span>\r\n                    }\r\n                </div>\r\n            }\r\n            @if (this.question.type === QuizQuestionType.DRAG_AND_DROP) {\r\n                <div>\r\n                    @if (this.incorrectlyMappedDragAndDropItems === 0) {\r\n                        <span>\r\n                            <span\r\n                                jhiTranslate=\"artemisApp.quizExercise.explanationText.dragAndDropAllOrNothingCorrect\"\r\n                                [translateValues]=\"{\r\n                                    paramScore: this.score,\r\n                                    paramQuestionScore: this.question.points,\r\n                                    paramPoint: this.scorePoint,\r\n                                    paramScorePoint: this.questionPoint,\r\n                                }\"\r\n                            ></span\r\n                        ></span>\r\n                    }\r\n                    @if (this.incorrectlyMappedDragAndDropItems !== 0 && this.differenceDragAndDrop >= 0) {\r\n                        <span>\r\n                            <p\r\n                                jhiTranslate=\"artemisApp.quizExercise.explanationText.dragAndDropProp\"\r\n                                [translateValues]=\"{\r\n                                    paramScore: this.score,\r\n                                    paramQuestionScore: this.question.points,\r\n                                    paramWrongMappedItems: this.incorrectlyMappedDragAndDropItems,\r\n                                    paramRightMapping: this.correctlyMappedDragAndDropItems,\r\n                                    paramDragAndDropElementsCount: this.mappedLocations,\r\n                                    paramPoint: this.scorePoint,\r\n                                    paramScorePoint: this.questionPoint,\r\n                                    rightMap: this.rightMap,\r\n                                    wrongMap: this.wrongMap,\r\n                                }\"\r\n                            ></p>\r\n                            <b\r\n                                >+ {{ this.correctlyMappedDragAndDropItems }}*{{ this.question.points }}/{{ this.mappedLocations }} -\r\n                                {{ this.incorrectlyMappedDragAndDropItems }}*{{ this.question.points }}/{{ this.mappedLocations }} = {{ this.score }}</b\r\n                            >\r\n                            <p jhiTranslate=\"artemisApp.quizExercise.explanationText.KeepTrying\"></p>\r\n                        </span>\r\n                    }\r\n                    @if (this.incorrectlyMappedDragAndDropItems !== 0 && this.differenceDragAndDrop < 0) {\r\n                        <span>\r\n                            <p\r\n                                jhiTranslate=\"artemisApp.quizExercise.explanationText.dragAndDropProp\"\r\n                                [translateValues]=\"{\r\n                                    paramScore: this.score,\r\n                                    paramQuestionScore: this.question.points,\r\n                                    paramWrongMappedItems: this.incorrectlyMappedDragAndDropItems,\r\n                                    paramRightMapping: this.correctlyMappedDragAndDropItems,\r\n                                    paramDragAndDropElementsCount: this.mappedLocations,\r\n                                    paramPoint: this.scorePoint,\r\n                                    paramScorePoint: this.questionPoint,\r\n                                    rightMap: this.rightMap,\r\n                                    wrongMap: this.wrongMap,\r\n                                }\"\r\n                            ></p>\r\n                            <b\r\n                                >+ {{ this.correctlyMappedDragAndDropItems }}*{{ this.question.points }}/{{ this.mappedLocations }} -\r\n                                {{ this.incorrectlyMappedDragAndDropItems }}*{{ this.question.points }}/{{ this.mappedLocations }}\r\n                                = 0\r\n                            </b>\r\n                            <p jhiTranslate=\"artemisApp.quizExercise.explanationText.zeroPointer\"></p>\r\n                            <p jhiTranslate=\"artemisApp.quizExercise.explanationText.KeepTrying\"></p>\r\n                        </span>\r\n                    }\r\n                </div>\r\n            }\r\n            @if (this.question.type === QuizQuestionType.SHORT_ANSWER) {\r\n                <div>\r\n                    @if (this.shortAnswerWrongAnswers <= 0) {\r\n                        <span>\r\n                            <span\r\n                                jhiTranslate=\"artemisApp.quizExercise.explanationText.shortAnswerAllOrNothingCorrect\"\r\n                                [translateValues]=\"{\r\n                                    paramScore: this.score,\r\n                                    paramQuestionScore: this.question.points,\r\n                                    paramPoint: this.scorePoint,\r\n                                    paramScorePoint: this.questionPoint,\r\n                                }\"\r\n                            ></span\r\n                        ></span>\r\n                    }\r\n                    @if (this.shortAnswerWrongAnswers > 0 && this.differenceShortAnswer >= 0) {\r\n                        <span>\r\n                            <p\r\n                                jhiTranslate=\"artemisApp.quizExercise.explanationText.shortAnswerProp\"\r\n                                [translateValues]=\"{\r\n                                    paramScore: this.score,\r\n                                    paramQuestionScore: this.question.points,\r\n                                    paramShortAnswerWrongOption: this.shortAnswerWrongAnswers,\r\n                                    paramShortAnswerCorrectAnswers: this.shortAnswerCorrectAnswers,\r\n                                    paramCount: this.shortAnswerSpots,\r\n                                    paramPoint: this.scorePoint,\r\n                                    paramScorePoint: this.questionPoint,\r\n                                    rightGap: this.rightGap,\r\n                                    wrongGap: this.wrongGap,\r\n                                }\"\r\n                            ></p>\r\n                            <b\r\n                                >+ {{ this.shortAnswerCorrectAnswers }}*{{ this.question.points }}/{{ this.shortAnswerSpots }} - {{ this.shortAnswerWrongAnswers }}*{{\r\n                                    this.question.points\r\n                                }}/{{ this.shortAnswerSpots }} = {{ this.score }}</b\r\n                            >\r\n                            <p jhiTranslate=\"artemisApp.quizExercise.explanationText.KeepTrying\"></p>\r\n                        </span>\r\n                    }\r\n                    @if (this.shortAnswerWrongAnswers > 0 && this.differenceShortAnswer < 0) {\r\n                        <span>\r\n                            <p\r\n                                jhiTranslate=\"artemisApp.quizExercise.explanationText.shortAnswerProp\"\r\n                                [translateValues]=\"{\r\n                                    paramScore: this.score,\r\n                                    paramQuestionScore: this.question.points,\r\n                                    paramShortAnswerWrongOption: this.shortAnswerWrongAnswers,\r\n                                    paramShortAnswerCorrectAnswers: this.shortAnswerCorrectAnswers,\r\n                                    paramCount: this.shortAnswerSpots,\r\n                                    paramPoint: this.scorePoint,\r\n                                    paramScorePoint: this.questionPoint,\r\n                                    rightGap: this.rightGap,\r\n                                    wrongGap: this.wrongGap,\r\n                                }\"\r\n                            ></p>\r\n                            <b\r\n                                >+ {{ this.shortAnswerCorrectAnswers }}*{{ this.question.points }}/{{ this.shortAnswerSpots }} - {{ this.shortAnswerWrongAnswers }}*{{\r\n                                    this.question.points\r\n                                }}/{{ this.shortAnswerSpots }}\r\n                                = 0\r\n                            </b>\r\n                            <p jhiTranslate=\"artemisApp.quizExercise.explanationText.zeroPointer\"></p>\r\n                            <p jhiTranslate=\"artemisApp.quizExercise.explanationText.KeepTrying\"></p>\r\n                        </span>\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    }\r\n    @if (this.question.scoringType === ScoringType.PROPORTIONAL_WITHOUT_PENALTY) {\r\n        <div class=\"modal-body\">\r\n            <span class=\"font-weight-bold\" jhiTranslate=\"artemisApp.quizExercise.explanationText.scoringTypeProportionalWithout\"></span>\r\n            <span jhiTranslate=\"artemisApp.quizExercise.explanationText.scoringTypeProportionalWithoutExplanation\"></span>\r\n            <br />\r\n            @if (this.question.type === QuizQuestionType.MULTIPLE_CHOICE) {\r\n                <div>\r\n                    @if (this.correctMultipleChoiceAnswers === this.multipleChoiceCorrectAnswerCorrectlyChosen && this.multipleChoiceWrongAnswerChosen === 0) {\r\n                        <span>\r\n                            <span\r\n                                jhiTranslate=\"artemisApp.quizExercise.explanationText.multipleChoiceAllOrNothingCorrect\"\r\n                                [translateValues]=\"{\r\n                                    paramScore: this.score,\r\n                                    paramQuestionScore: this.question.points,\r\n                                    paramPoint: this.scorePoint,\r\n                                    paramScorePoint: this.questionPoint,\r\n                                }\"\r\n                            ></span\r\n                        ></span>\r\n                    }\r\n                    @if (\r\n                        !(this.correctMultipleChoiceAnswers === this.multipleChoiceCorrectAnswerCorrectlyChosen && this.multipleChoiceWrongAnswerChosen === 0) &&\r\n                        this.differenceMultipleChoice >= 0\r\n                    ) {\r\n                        <span>\r\n                            <p\r\n                                jhiTranslate=\"artemisApp.quizExercise.explanationText.multipleChoiceProp\"\r\n                                [translateValues]=\"{\r\n                                    paramScore: this.score,\r\n                                    paramQuestionScore: this.question.points,\r\n                                    paramAmountOfAnswerOptions: this.multipleChoiceAnswerOptions,\r\n                                    paramInTotalWrongOptions: this.inTotalSelectedWrongOptions,\r\n                                    paramInTotalRightOptions: this.inTotalSelectedRightOptions,\r\n                                    paramPoint: this.scorePoint,\r\n                                    paramScorePoint: this.questionPoint,\r\n                                    wrongOption: this.wrongOption,\r\n                                    rightOption: this.rightOption,\r\n                                }\"\r\n                            ></p>\r\n                            <b>+ {{ this.inTotalSelectedRightOptions }}*{{ this.question.points }} /{{ this.multipleChoiceAnswerOptions }} = {{ this.score }}</b>\r\n                            <p jhiTranslate=\"artemisApp.quizExercise.explanationText.KeepTrying\"></p>\r\n                        </span>\r\n                    }\r\n                    @if (\r\n                        !(this.correctMultipleChoiceAnswers === this.multipleChoiceCorrectAnswerCorrectlyChosen && this.multipleChoiceWrongAnswerChosen === 0) &&\r\n                        this.differenceMultipleChoice < 0\r\n                    ) {\r\n                        <span>\r\n                            <p\r\n                                jhiTranslate=\"artemisApp.quizExercise.explanationText.multipleChoiceProp\"\r\n                                [translateValues]=\"{\r\n                                    paramScore: this.score,\r\n                                    paramQuestionScore: this.question.points,\r\n                                    paramAmountOfAnswerOptions: this.multipleChoiceAnswerOptions,\r\n                                    paramInTotalWrongOptions: this.inTotalSelectedWrongOptions,\r\n                                    paramInTotalRightOptions: this.inTotalSelectedRightOptions,\r\n                                    paramPoint: this.scorePoint,\r\n                                    paramScorePoint: this.questionPoint,\r\n                                    wrongOption: this.wrongOption,\r\n                                    rightOption: this.rightOption,\r\n                                }\"\r\n                            ></p>\r\n                            <b>+ {{ this.inTotalSelectedRightOptions }}*{{ this.question.points }} /{{ this.multipleChoiceAnswerOptions }} = 0 </b>\r\n                            <p jhiTranslate=\"artemisApp.quizExercise.explanationText.KeepTrying\"></p>\r\n                        </span>\r\n                    }\r\n                </div>\r\n            }\r\n            @if (this.question.type === QuizQuestionType.DRAG_AND_DROP) {\r\n                <div>\r\n                    @if (this.incorrectlyMappedDragAndDropItems === 0) {\r\n                        <span>\r\n                            <span\r\n                                jhiTranslate=\"artemisApp.quizExercise.explanationText.dragAndDropAllOrNothingCorrect\"\r\n                                [translateValues]=\"{\r\n                                    paramScore: this.score,\r\n                                    paramQuestionScore: this.question.points,\r\n                                    paramPoint: this.scorePoint,\r\n                                    paramScorePoint: this.questionPoint,\r\n                                }\"\r\n                            ></span\r\n                        ></span>\r\n                    }\r\n                    @if (this.incorrectlyMappedDragAndDropItems !== 0 && this.differenceDragAndDrop >= 0) {\r\n                        <span>\r\n                            <p\r\n                                jhiTranslate=\"artemisApp.quizExercise.explanationText.dragAndDropProp\"\r\n                                [translateValues]=\"{\r\n                                    paramScore: this.score,\r\n                                    paramQuestionScore: this.question.points,\r\n                                    paramWrongMappedItems: this.incorrectlyMappedDragAndDropItems,\r\n                                    paramRightMapping: this.correctlyMappedDragAndDropItems,\r\n                                    paramDragAndDropElementsCount: this.mappedLocations,\r\n                                    paramPoint: this.scorePoint,\r\n                                    paramScorePoint: this.questionPoint,\r\n                                    rightMap: this.rightMap,\r\n                                    wrongMap: this.wrongMap,\r\n                                }\"\r\n                            ></p>\r\n                            <b>+ {{ this.correctlyMappedDragAndDropItems }}*{{ this.question.points }}/{{ this.mappedLocations }} = {{ this.score }}</b>\r\n                            <p jhiTranslate=\"artemisApp.quizExercise.explanationText.KeepTrying\"></p>\r\n                        </span>\r\n                    }\r\n                    @if (this.incorrectlyMappedDragAndDropItems !== 0 && this.differenceDragAndDrop < 0) {\r\n                        <span>\r\n                            <p\r\n                                jhiTranslate=\"artemisApp.quizExercise.explanationText.dragAndDropProp\"\r\n                                [translateValues]=\"{\r\n                                    paramScore: this.score,\r\n                                    paramQuestionScore: this.question.points,\r\n                                    paramWrongMappedItems: this.incorrectlyMappedDragAndDropItems,\r\n                                    paramRightMapping: this.correctlyMappedDragAndDropItems,\r\n                                    paramDragAndDropElementsCount: this.mappedLocations,\r\n                                    paramPoint: this.scorePoint,\r\n                                    paramScorePoint: this.questionPoint,\r\n                                    rightMap: this.rightMap,\r\n                                    wrongMap: this.wrongMap,\r\n                                }\"\r\n                            ></p>\r\n                            <b>+ {{ this.correctlyMappedDragAndDropItems }}*{{ this.question.points }}/{{ this.mappedLocations }} = 0 </b>\r\n                            <p jhiTranslate=\"artemisApp.quizExercise.explanationText.zeroPointer\"></p>\r\n                            <p jhiTranslate=\"artemisApp.quizExercise.explanationText.KeepTrying\"></p>\r\n                        </span>\r\n                    }\r\n                </div>\r\n            }\r\n            @if (this.question.type === QuizQuestionType.SHORT_ANSWER) {\r\n                <div>\r\n                    @if (this.shortAnswerWrongAnswers <= 0) {\r\n                        <span>\r\n                            <span\r\n                                jhiTranslate=\"artemisApp.quizExercise.explanationText.shortAnswerAllOrNothingCorrect\"\r\n                                [translateValues]=\"{\r\n                                    paramScore: this.score,\r\n                                    paramQuestionScore: this.question.points,\r\n                                    paramPoint: this.scorePoint,\r\n                                    paramScorePoint: this.questionPoint,\r\n                                }\"\r\n                            ></span\r\n                        ></span>\r\n                    }\r\n                    @if (this.shortAnswerWrongAnswers > 0 && this.differenceShortAnswer >= 0) {\r\n                        <span>\r\n                            <p\r\n                                jhiTranslate=\"artemisApp.quizExercise.explanationText.shortAnswerProp\"\r\n                                [translateValues]=\"{\r\n                                    paramScore: this.score,\r\n                                    paramQuestionScore: this.question.points,\r\n                                    paramShortAnswerWrongOption: this.shortAnswerWrongAnswers,\r\n                                    paramShortAnswerCorrectAnswers: this.shortAnswerCorrectAnswers,\r\n                                    paramCount: this.shortAnswerSpots,\r\n                                    paramPoint: this.scorePoint,\r\n                                    paramScorePoint: this.questionPoint,\r\n                                    rightGap: this.rightGap,\r\n                                    wrongGap: this.wrongGap,\r\n                                }\"\r\n                            ></p>\r\n                            <b>+ {{ this.shortAnswerCorrectAnswers }}*{{ this.question.points }}/{{ this.shortAnswerSpots }} = {{ this.score }}</b>\r\n                            <p jhiTranslate=\"artemisApp.quizExercise.explanationText.KeepTrying\"></p>\r\n                        </span>\r\n                    }\r\n                    @if (this.shortAnswerWrongAnswers > 0 && this.differenceShortAnswer < 0) {\r\n                        <span>\r\n                            <p\r\n                                jhiTranslate=\"artemisApp.quizExercise.explanationText.shortAnswerProp\"\r\n                                [translateValues]=\"{\r\n                                    paramScore: this.score,\r\n                                    paramQuestionScore: this.question.points,\r\n                                    paramShortAnswerWrongOption: this.shortAnswerWrongAnswers,\r\n                                    paramShortAnswerCorrectAnswers: this.shortAnswerCorrectAnswers,\r\n                                    paramCount: this.shortAnswerSpots,\r\n                                    paramPoint: this.scorePoint,\r\n                                    paramScorePoint: this.questionPoint,\r\n                                    rightGap: this.rightGap,\r\n                                    wrongGap: this.wrongGap,\r\n                                }\"\r\n                            ></p>\r\n                            <b>+ {{ this.shortAnswerCorrectAnswers }}*{{ this.question.points }}/{{ this.shortAnswerSpots }} = 0 </b>\r\n                            <p jhiTranslate=\"artemisApp.quizExercise.explanationText.KeepTrying\"></p>\r\n                        </span>\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    }\r\n    <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-outline\" (click)=\"c()\">Close</button>\r\n    </div>\r\n</ng-template>\r\n<div>\r\n    <button class=\"btn\" (click)=\"open(scoringExplanation)\">\r\n        <fa-icon [ngClass]=\"{ questionCorrect: this.score === this.question.points, questionWrong: this.score !== this.question.points }\" [icon]=\"farQuestionCircle\" />\r\n    </button>\r\n</div>\r\n","import { QuizQuestion, QuizQuestionType } from 'app/entities/quiz/quiz-question.model';\r\nimport { AnswerOption } from 'app/entities/quiz/answer-option.model';\r\n\r\nexport class MultipleChoiceQuestion extends QuizQuestion {\r\n    public answerOptions?: AnswerOption[];\r\n    public hasCorrectOption?: boolean;\r\n    public singleChoice?: boolean;\r\n\r\n    constructor() {\r\n        super(QuizQuestionType.MULTIPLE_CHOICE);\r\n    }\r\n}\r\n"],"mappings":"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","names":["require_index_min","__commonJSMin","exports","module","t","i","c","s","f","e","l","h","n","u","o","r","a","d","v","p","g","m","y","b","w","x","I","j","k","C","require_scroll_behaviour","__commonJSMin","exports","module","global","factory","isTopLevelEl","el","getElementViewportOffset","axis","offset","bounds","getElementViewportSize","size","getSetElementScroll","scroll","prop","isTopLevel","isScrollable","cs","findScrollableParent","determineScrollIntention","currentCoordinate","threshold","determineDynamicVelocity","scrollIntention","isScrollEndReached","scrollBounds","currentScrollOffset","maxScrollOffset","_options","velocity","multiplier","easeInCubic","_scrollIntentions","_dynamicVelocity","_scrollAnimationFrameId","_currentCoordinates","_hoveredElement","_scrollableParent","_translateDragImageFn","handleDragImageTranslateOverride","event","currentCoordinates","hoveredElement","translateDragImageFn","performScrollAnimation","updateScrollIntentions","scheduleScrollAnimation","scrollAnimation","scrollDiffX","scrollDiffY","scrollableParent","scrollIntentions","dynamicVelocity","scrollableParentBounds","currentCoordinatesOffset","scrollBehaviourDragImageTranslateOverride","import_mobile_drag_drop","import_scroll_behaviour","DragAndDropMapping","id","dragItemIndex","dropLocationIndex","invalid","submittedAnswer","question","dragItem","dropLocation","constructor","ɵɵtext","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ɵɵpureFunction4","_c2","ctx_r3","score","question","points","scorePoint","questionPoint","ɵɵtemplate","QuizScoringInfoStudentModalComponent_ng_template_0_Conditional_11_Conditional_11_Template","QuizScoringInfoStudentModalComponent_ng_template_0_Conditional_11_Conditional_12_Template","ɵɵconditional","correctMultipleChoiceAnswers","multipleChoiceCorrectAnswerCorrectlyChosen","multipleChoiceWrongAnswerChosen","ɵɵpureFunction8","_c3","inTotalSelectedWrongOptions","inTotalSelectedRightOptions","wrongOption","rightOption","QuizScoringInfoStudentModalComponent_ng_template_0_Conditional_12_Conditional_9_Conditional_3_Template","QuizScoringInfoStudentModalComponent_ng_template_0_Conditional_12_Conditional_9_Conditional_4_Template","_c4","incorrectlyMappedDragAndDropItems","correctlyMappedDragAndDropItems","rightMap","wrongMap","QuizScoringInfoStudentModalComponent_ng_template_0_Conditional_12_Conditional_10_Conditional_3_Template","QuizScoringInfoStudentModalComponent_ng_template_0_Conditional_12_Conditional_10_Conditional_4_Template","_c5","shortAnswerWrongAnswers","shortAnswerCorrectAnswers","rightGap","wrongGap","QuizScoringInfoStudentModalComponent_ng_template_0_Conditional_12_Conditional_11_Conditional_3_Template","QuizScoringInfoStudentModalComponent_ng_template_0_Conditional_12_Conditional_11_Conditional_4_Template","QuizScoringInfoStudentModalComponent_ng_template_0_Conditional_12_Conditional_9_Template","QuizScoringInfoStudentModalComponent_ng_template_0_Conditional_12_Conditional_10_Template","QuizScoringInfoStudentModalComponent_ng_template_0_Conditional_12_Conditional_11_Template","type","QuizQuestionType","MULTIPLE_CHOICE","DRAG_AND_DROP","SHORT_ANSWER","ɵɵpureFunctionV","_c6","multipleChoiceAnswerOptions","ɵɵtextInterpolate7","ɵɵtextInterpolate6","QuizScoringInfoStudentModalComponent_ng_template_0_Conditional_13_Conditional_9_Conditional_3_Template","QuizScoringInfoStudentModalComponent_ng_template_0_Conditional_13_Conditional_9_Conditional_4_Template","QuizScoringInfoStudentModalComponent_ng_template_0_Conditional_13_Conditional_9_Conditional_5_Template","differenceMultipleChoice","_c7","mappedLocations","QuizScoringInfoStudentModalComponent_ng_template_0_Conditional_13_Conditional_10_Conditional_3_Template","QuizScoringInfoStudentModalComponent_ng_template_0_Conditional_13_Conditional_10_Conditional_4_Template","QuizScoringInfoStudentModalComponent_ng_template_0_Conditional_13_Conditional_10_Conditional_5_Template","differenceDragAndDrop","_c8","shortAnswerSpots","QuizScoringInfoStudentModalComponent_ng_template_0_Conditional_13_Conditional_11_Conditional_3_Template","QuizScoringInfoStudentModalComponent_ng_template_0_Conditional_13_Conditional_11_Conditional_4_Template","QuizScoringInfoStudentModalComponent_ng_template_0_Conditional_13_Conditional_11_Conditional_5_Template","differenceShortAnswer","QuizScoringInfoStudentModalComponent_ng_template_0_Conditional_13_Conditional_9_Template","QuizScoringInfoStudentModalComponent_ng_template_0_Conditional_13_Conditional_10_Template","QuizScoringInfoStudentModalComponent_ng_template_0_Conditional_13_Conditional_11_Template","ɵɵtextInterpolate4","ɵɵtextInterpolate3","QuizScoringInfoStudentModalComponent_ng_template_0_Conditional_14_Conditional_9_Conditional_3_Template","QuizScoringInfoStudentModalComponent_ng_template_0_Conditional_14_Conditional_9_Conditional_4_Template","QuizScoringInfoStudentModalComponent_ng_template_0_Conditional_14_Conditional_9_Conditional_5_Template","QuizScoringInfoStudentModalComponent_ng_template_0_Conditional_14_Conditional_10_Conditional_3_Template","QuizScoringInfoStudentModalComponent_ng_template_0_Conditional_14_Conditional_10_Conditional_4_Template","QuizScoringInfoStudentModalComponent_ng_template_0_Conditional_14_Conditional_10_Conditional_5_Template","QuizScoringInfoStudentModalComponent_ng_template_0_Conditional_14_Conditional_11_Conditional_3_Template","QuizScoringInfoStudentModalComponent_ng_template_0_Conditional_14_Conditional_11_Conditional_4_Template","QuizScoringInfoStudentModalComponent_ng_template_0_Conditional_14_Conditional_11_Conditional_5_Template","QuizScoringInfoStudentModalComponent_ng_template_0_Conditional_14_Conditional_9_Template","QuizScoringInfoStudentModalComponent_ng_template_0_Conditional_14_Conditional_10_Template","QuizScoringInfoStudentModalComponent_ng_template_0_Conditional_14_Conditional_11_Template","ɵɵlistener","d_r3","ɵɵrestoreView","_r2","dismiss","ɵɵresetView","QuizScoringInfoStudentModalComponent_ng_template_0_Conditional_11_Template","QuizScoringInfoStudentModalComponent_ng_template_0_Conditional_12_Template","QuizScoringInfoStudentModalComponent_ng_template_0_Conditional_13_Template","QuizScoringInfoStudentModalComponent_ng_template_0_Conditional_14_Template","c_r5","close","ɵɵpureFunction2","_c1","title","questionIndex","scoringType","ScoringType","ALL_OR_NOTHING","isSingleChoice","PROPORTIONAL_WITH_PENALTY","PROPORTIONAL_WITHOUT_PENALTY","QuizScoringInfoStudentModalComponent","modalService","inject","NgbModal","translateService","TranslateService","dragAndDropMapping","Array","multipleChoiceMapping","shortAnswerText","multipleChoiceSubmittedResult","quizQuestions","forgottenMultipleChoiceRightAnswers","checkForCorrectAnswers","checkForWrongAnswers","farQuestionCircle","faQuestionCircle","ngAfterViewInit","checkForSingleOrPluralPoints","countMultipleChoice","countDragAndDrop","countShortAnswer","open","content","size","submittedAnswerCorrectValues","answerOptionsOfQuestion","mcQuizQuestion","id","answerOptions","filter","option","isCorrect","length","submission","submittedQuizSubmission","submittedAnswerLength","submittedAnswers","i","quizQuestion","multipleChoiceSubmittedAnswers","selectedOptions","undefined","selectedOption","answerOptionElement","push","translationBasePath","mcmQuestion","singleChoice","instant","shortAnswer","spots","selectors","inputs","decls","vars","consts","template","rf","ctx","QuizScoringInfoStudentModalComponent_ng_template_0_Template","ɵɵtemplateRefExtractor","_r1","scoringExplanation_r6","ɵɵreference","_c0","TranslateDirective","FaIconComponent","NgClass","styles","ɵɵtext","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r0","faSpinner","ɵɵlistener","ɵɵrestoreView","_r2","ɵɵnextContext","ɵɵresetView","secureImageComponent","retryLoadImage","faExclamationCircle","renderedHint_r3","faQuestionCircle","renderedQuestion","hint","ɵɵsanitizeHtml","renderedExplanation_r4","explanation","ɵɵtemplate","DragAndDropQuestionComponent_Conditional_18_Conditional_3_Template","DragAndDropQuestionComponent_Conditional_18_ng_template_4_Template","ɵɵtemplateRefExtractor","DragAndDropQuestionComponent_Conditional_18_Conditional_9_Template","DragAndDropQuestionComponent_Conditional_18_ng_template_10_Template","ɵɵconditional","question","showResult","ɵɵtextInterpolate","points","ɵɵpureFunction1","_c1","score","ɵɵtextInterpolate2","mappings","correctAnswer","incorrectLocationMappings","mappedLocations","questionIndex","_r5","showSampleSolution","_r6","hideSampleSolution","DragAndDropQuestionComponent_Conditional_21_Conditional_5_Conditional_3_Template","DragAndDropQuestionComponent_Conditional_21_Conditional_5_Conditional_4_Template","showingSampleSolution","DragAndDropQuestionComponent_Conditional_21_Conditional_3_Template","DragAndDropQuestionComponent_Conditional_21_Conditional_4_Template","DragAndDropQuestionComponent_Conditional_21_Conditional_5_Template","forceSampleSolution","$event","_r7","changeLoading","filePreviewPaths","get","backgroundFilePath","_r10","drag","drop","dragItemForDropLocation","dropLocation_r9","clickDisabled","_r8","$implicit","onDragDrop","preventDefault","DragAndDropQuestionComponent_Conditional_29_For_4_Conditional_3_Template","dropAllowed","ɵɵpureFunction4","_c2","posY","posX","width","height","ɵɵrepeaterCreate","DragAndDropQuestionComponent_Conditional_29_For_4_Template","ɵɵrepeaterTrackByIdentity","ɵɵrepeater","dropLocations","faExclamationTriangle","dropLocation_r11","DragAndDropQuestionComponent_Conditional_30_For_4_Conditional_5_Template","DragAndDropQuestionComponent_Conditional_30_For_4_Conditional_8_Template","DragAndDropQuestionComponent_Conditional_30_For_4_Conditional_9_Template","DragAndDropQuestionComponent_Conditional_30_For_4_Conditional_10_Template","DragAndDropQuestionComponent_Conditional_30_For_4_Conditional_11_Template","DragAndDropQuestionComponent_Conditional_30_For_4_Conditional_13_Template","DragAndDropQuestionComponent_Conditional_30_For_4_Conditional_14_Template","isLocationCorrect","MappingResult","MAPPED_INCORRECT","invalid","invalidDragItemForDropLocation","DragAndDropQuestionComponent_Conditional_30_For_4_Template","correctDragItemForDropLocation","dropLocation_r12","DragAndDropQuestionComponent_Conditional_31_For_4_Conditional_5_Template","DragAndDropQuestionComponent_Conditional_31_For_4_Conditional_8_Template","DragAndDropQuestionComponent_Conditional_31_For_4_Conditional_9_Template","DragAndDropQuestionComponent_Conditional_31_For_4_Conditional_10_Template","DragAndDropQuestionComponent_Conditional_31_For_4_Conditional_12_Template","DragAndDropQuestionComponent_Conditional_31_For_4_Conditional_13_Template","DragAndDropQuestionComponent_Conditional_31_For_4_Template","_r14","ɵɵpropertyInterpolate1","ɵ$index_354_r16","dragItem_r15","_r13","undefined","DragAndDropQuestionComponent_Conditional_38_For_4_Template","getUnassignedDragItems","polyfill","dragImageTranslateOverride","scrollBehaviourDragImageTranslateOverride","window","addEventListener","passive","DragAndDropQuestionComponent","artemisMarkdown","inject","ArtemisMarkdownService","dragAndDropQuestionUtil","DragAndDropQuestionUtil","_question","_forceSampleSolution","watchCollection","onMappingUpdate","Map","mappingsChange","EventEmitter","sampleSolutionMappings","Array","loadingState","ngOnInit","evaluateDropLocations","ngOnChanges","RenderedQuizQuestionMarkDownElement","text","safeHtmlForMarkdown","value","event","mouseEvent","dropLocation","dropEvent","dragItem","item","data","isMappedTogether","oldDragItem","oldDropLocation","filter","mapping","isSameEntityWithTempId","push","DragAndDropMapping","lengthBefore","length","emit","find","localMapping","dragItems","some","correctMappings","validDragItems","map","selectedItem","MAPPED_CORRECT","NOT_MAPPED","isAssignedLocation","solve","solutionMapping","selectors","viewQuery","rf","ctx","SecuredImageComponent","ɵɵNgOnChangesFeature","decls","vars","consts","template","DragAndDropQuestionComponent_Conditional_4_Template","DragAndDropQuestionComponent_Conditional_5_Template","DragAndDropQuestionComponent_Conditional_17_Template","DragAndDropQuestionComponent_Conditional_18_Template","DragAndDropQuestionComponent_Conditional_19_Template","DragAndDropQuestionComponent_Conditional_20_Template","DragAndDropQuestionComponent_Conditional_21_Template","DragAndDropQuestionComponent_Conditional_26_Template","DragAndDropQuestionComponent_Conditional_29_Template","DragAndDropQuestionComponent_Conditional_30_Template","DragAndDropQuestionComponent_Conditional_31_Template","DragAndDropQuestionComponent_Conditional_36_Template","DragAndDropQuestionComponent_Conditional_37_Template","DragAndDropQuestionComponent_Conditional_38_Template","ɵɵpureFunction3","_c0","ɵɵtextInterpolate1","title","NgClass","FaIconComponent","TranslateDirective","NgbPopover","QuizScoringInfoStudentModalComponent","CdkDropListGroup","CdkDropList","NgStyle","DragItemComponent","NgbTooltip","styles","encapsulation","MultipleChoiceQuestion","QuizQuestion","answerOptions","hasCorrectOption","singleChoice","constructor","QuizQuestionType","MULTIPLE_CHOICE"],"x_google_ignoreList":[0,1]}