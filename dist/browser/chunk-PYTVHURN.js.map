{
  "version": 3,
  "sources": ["src/main/webapp/app/exercises/text/assess/text-submission-assessment-resolve.service.ts", "src/main/webapp/app/exercises/text/assess/text-submission-assessment.route.ts"],
  "sourcesContent": ["import { Injectable, inject } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { TextSubmission } from 'app/entities/text/text-submission.model';\r\nimport { of } from 'rxjs';\r\n\r\nimport { StudentParticipation } from 'app/entities/participation/student-participation.model';\r\nimport { TextAssessmentService } from 'app/exercises/text/assess/text-assessment.service';\r\nimport { TextSubmissionService } from 'app/exercises/text/participate/text-submission.service';\r\nimport { catchError, map } from 'rxjs/operators';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class NewStudentParticipationResolver implements Resolve<StudentParticipation | undefined> {\r\n    private textSubmissionService = inject(TextSubmissionService);\r\n\r\n    /**\r\n     * Resolves the needed StudentParticipations for the TextSubmissionAssessmentComponent using the TextAssessmentService.\r\n     * @param route\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot) {\r\n        const exerciseId = Number(route.paramMap.get('exerciseId'));\r\n        const correctionRound = Number(route.queryParamMap.get('correction-round'));\r\n        if (exerciseId) {\r\n            return this.textSubmissionService\r\n                .getSubmissionWithoutAssessment(exerciseId, 'lock', correctionRound)\r\n                .pipe(map((submission?: TextSubmission) => <StudentParticipation | undefined>submission?.participation))\r\n                .pipe(catchError(() => of(undefined)));\r\n        }\r\n        return of(undefined);\r\n    }\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class StudentParticipationResolver implements Resolve<StudentParticipation | undefined> {\r\n    private textAssessmentService = inject(TextAssessmentService);\r\n\r\n    /**\r\n     * Resolves the needed StudentParticipations for the TextSubmissionAssessmentComponent using the TextAssessmentService.\r\n     * @param route\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot) {\r\n        const submissionId = Number(route.paramMap.get('submissionId'));\r\n        const correctionRound = Number(route.queryParamMap.get('correction-round'));\r\n        const resultId = Number(route.paramMap.get('resultId'));\r\n        if (resultId) {\r\n            return this.textAssessmentService.getFeedbackDataForExerciseSubmission(submissionId, undefined, resultId).pipe(catchError(() => of(undefined)));\r\n        }\r\n        if (submissionId) {\r\n            return this.textAssessmentService.getFeedbackDataForExerciseSubmission(submissionId, correctionRound).pipe(catchError(() => of(undefined)));\r\n        }\r\n        return of(undefined);\r\n    }\r\n}\r\n", "import { Routes } from '@angular/router';\r\nimport { UserRouteAccessService } from 'app/core/auth/user-route-access-service';\r\nimport { Authority } from 'app/shared/constants/authority.constants';\r\nimport { NewStudentParticipationResolver, StudentParticipationResolver } from 'app/exercises/text/assess/text-submission-assessment-resolve.service';\r\n\r\nexport const NEW_ASSESSMENT_PATH = 'submissions/new/assessment';\r\nexport const textSubmissionAssessmentRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        loadComponent: () => import('app/exercises/text/manage/text-exercise/text-exercise-detail.component').then((m) => m.TextExerciseDetailComponent),\r\n        data: {\r\n            authorities: [Authority.TA, Authority.EDITOR, Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.textExercise.home.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: NEW_ASSESSMENT_PATH,\r\n        loadComponent: () => import('./text-submission-assessment.component').then((m) => m.TextSubmissionAssessmentComponent),\r\n        data: {\r\n            authorities: [Authority.ADMIN, Authority.INSTRUCTOR, Authority.EDITOR, Authority.TA],\r\n            pageTitle: 'artemisApp.textAssessment.title',\r\n        },\r\n        resolve: {\r\n            studentParticipation: NewStudentParticipationResolver,\r\n        },\r\n        runGuardsAndResolvers: 'always',\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: 'submissions/:submissionId/assessment',\r\n        loadComponent: () => import('./text-submission-assessment.component').then((m) => m.TextSubmissionAssessmentComponent),\r\n        data: {\r\n            authorities: [Authority.ADMIN, Authority.INSTRUCTOR, Authority.EDITOR, Authority.TA],\r\n            pageTitle: 'artemisApp.textAssessment.title',\r\n        },\r\n        resolve: {\r\n            studentParticipation: StudentParticipationResolver,\r\n        },\r\n        runGuardsAndResolvers: 'paramsChange',\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: 'submissions/:submissionId/assessments/:resultId',\r\n        loadComponent: () => import('./text-submission-assessment.component').then((m) => m.TextSubmissionAssessmentComponent),\r\n        data: {\r\n            authorities: [Authority.ADMIN, Authority.INSTRUCTOR],\r\n            pageTitle: 'artemisApp.textAssessment.title',\r\n        },\r\n        resolve: {\r\n            studentParticipation: StudentParticipationResolver,\r\n        },\r\n        runGuardsAndResolvers: 'paramsChange',\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n];\r\n"],
  "mappings": "sOAWA,IAAaA,GAA+B,IAAA,CAAtC,MAAOA,CAA+B,CAChCC,sBAAwBC,EAAOC,CAAqB,EAM5DC,QAAQC,EAA6B,CACjC,IAAMC,EAAaC,OAAOF,EAAMG,SAASC,IAAI,YAAY,CAAC,EACpDC,EAAkBH,OAAOF,EAAMM,cAAcF,IAAI,kBAAkB,CAAC,EAC1E,OAAIH,EACO,KAAKL,sBACPW,+BAA+BN,EAAY,OAAQI,CAAe,EAClEG,KAAKC,EAAKC,GAAkEA,GAAYC,aAAa,CAAC,EACtGH,KAAKI,EAAW,IAAMC,EAAGC,MAAS,CAAC,CAAC,EAEtCD,EAAGC,MAAS,CACvB,4CAjBSnB,EAA+B,6BAA/BA,EAA+BoB,QAA/BpB,EAA+BqB,UAAAC,WADlB,MAAM,CAAA,SACnBtB,CAA+B,GAAA,EAqB/BuB,GAA4B,IAAA,CAAnC,MAAOA,CAA4B,CAC7BC,sBAAwBtB,EAAOuB,CAAqB,EAM5DrB,QAAQC,EAA6B,CACjC,IAAMqB,EAAenB,OAAOF,EAAMG,SAASC,IAAI,cAAc,CAAC,EACxDC,EAAkBH,OAAOF,EAAMM,cAAcF,IAAI,kBAAkB,CAAC,EACpEkB,EAAWpB,OAAOF,EAAMG,SAASC,IAAI,UAAU,CAAC,EACtD,OAAIkB,EACO,KAAKH,sBAAsBI,qCAAqCF,EAAcP,OAAWQ,CAAQ,EAAEd,KAAKI,EAAW,IAAMC,EAAGC,MAAS,CAAC,CAAC,EAE9IO,EACO,KAAKF,sBAAsBI,qCAAqCF,EAAchB,CAAe,EAAEG,KAAKI,EAAW,IAAMC,EAAGC,MAAS,CAAC,CAAC,EAEvID,EAAGC,MAAS,CACvB,4CAlBSI,EAA4B,6BAA5BA,EAA4BH,QAA5BG,EAA4BF,UAAAC,WADf,MAAM,CAAA,SACnBC,CAA4B,GAAA,EC3BlC,IAAMM,EAAsB,6BACtBC,EAAyC,CAClD,CACIC,KAAM,GACNC,cAAeA,IAAM,OAAO,8CAAwE,EAAEC,KAAMC,GAAMA,EAAEC,2BAA2B,EAC/IC,KAAM,CACFC,YAAa,CAACC,EAAUC,GAAID,EAAUE,OAAQF,EAAUG,WAAYH,EAAUI,KAAK,EACnFC,UAAW,sCAEfC,YAAa,CAACC,CAAsB,GAExC,CACId,KAAMF,EACNG,cAAeA,IAAM,OAAO,oDAAwC,EAAEC,KAAMC,GAAMA,EAAEY,iCAAiC,EACrHV,KAAM,CACFC,YAAa,CAACC,EAAUI,MAAOJ,EAAUG,WAAYH,EAAUE,OAAQF,EAAUC,EAAE,EACnFI,UAAW,mCAEfI,QAAS,CACLC,qBAAsBC,GAE1BC,sBAAuB,SACvBN,YAAa,CAACC,CAAsB,GAExC,CACId,KAAM,uCACNC,cAAeA,IAAM,OAAO,oDAAwC,EAAEC,KAAMC,GAAMA,EAAEY,iCAAiC,EACrHV,KAAM,CACFC,YAAa,CAACC,EAAUI,MAAOJ,EAAUG,WAAYH,EAAUE,OAAQF,EAAUC,EAAE,EACnFI,UAAW,mCAEfI,QAAS,CACLC,qBAAsBG,GAE1BD,sBAAuB,eACvBN,YAAa,CAACC,CAAsB,GAExC,CACId,KAAM,kDACNC,cAAeA,IAAM,OAAO,oDAAwC,EAAEC,KAAMC,GAAMA,EAAEY,iCAAiC,EACrHV,KAAM,CACFC,YAAa,CAACC,EAAUI,MAAOJ,EAAUG,UAAU,EACnDE,UAAW,mCAEfI,QAAS,CACLC,qBAAsBG,GAE1BD,sBAAuB,eACvBN,YAAa,CAACC,CAAsB,EACvC",
  "names": ["NewStudentParticipationResolver", "textSubmissionService", "inject", "TextSubmissionService", "resolve", "route", "exerciseId", "Number", "paramMap", "get", "correctionRound", "queryParamMap", "getSubmissionWithoutAssessment", "pipe", "map", "submission", "participation", "catchError", "of", "undefined", "factory", "\u0275fac", "providedIn", "StudentParticipationResolver", "textAssessmentService", "TextAssessmentService", "submissionId", "resultId", "getFeedbackDataForExerciseSubmission", "NEW_ASSESSMENT_PATH", "textSubmissionAssessmentRoutes", "path", "loadComponent", "then", "m", "TextExerciseDetailComponent", "data", "authorities", "Authority", "TA", "EDITOR", "INSTRUCTOR", "ADMIN", "pageTitle", "canActivate", "UserRouteAccessService", "TextSubmissionAssessmentComponent", "resolve", "studentParticipation", "NewStudentParticipationResolver", "runGuardsAndResolvers", "StudentParticipationResolver"]
}
