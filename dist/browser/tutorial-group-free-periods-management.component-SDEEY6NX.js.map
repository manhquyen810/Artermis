{
  "version": 3,
  "sources": ["src/main/webapp/app/course/tutorial-groups/tutorial-groups-management/tutorial-free-periods/crud/tutorial-free-period-form/tutorial-group-free-period-form.component.ts", "src/main/webapp/app/course/tutorial-groups/tutorial-groups-management/tutorial-free-periods/crud/tutorial-free-period-form/tutorial-group-free-period-form.component.html", "src/main/webapp/app/course/tutorial-groups/tutorial-groups-management/tutorial-free-periods/crud/create-tutorial-group-free-period/create-tutorial-group-free-period.component.ts", "src/main/webapp/app/course/tutorial-groups/tutorial-groups-management/tutorial-free-periods/crud/create-tutorial-group-free-period/create-tutorial-group-free-period.component.html", "src/main/webapp/app/course/tutorial-groups/tutorial-groups-management/tutorial-free-periods/crud/edit-tutorial-group-free-period/edit-tutorial-group-free-period.component.ts", "src/main/webapp/app/course/tutorial-groups/tutorial-groups-management/tutorial-free-periods/crud/edit-tutorial-group-free-period/edit-tutorial-group-free-period.component.html", "src/main/webapp/app/course/tutorial-groups/tutorial-groups-management/tutorial-free-periods/tutorial-free-periods-management/tutorial-group-free-period-row-buttons/tutorial-group-free-period-row-buttons.component.ts", "src/main/webapp/app/course/tutorial-groups/tutorial-groups-management/tutorial-free-periods/tutorial-free-periods-management/tutorial-group-free-period-row-buttons/tutorial-group-free-period-row-buttons.component.html", "src/main/webapp/app/course/tutorial-groups/tutorial-groups-management/tutorial-free-periods/tutorial-free-periods-management/tutorial-group-free-periods-table/tutorial-group-free-periods-table.component.ts", "src/main/webapp/app/course/tutorial-groups/tutorial-groups-management/tutorial-free-periods/tutorial-free-periods-management/tutorial-group-free-periods-table/tutorial-group-free-periods-table.component.html", "src/main/webapp/app/course/tutorial-groups/tutorial-groups-management/tutorial-free-periods/tutorial-free-periods-management/tutorial-group-free-periods-management.component.ts", "src/main/webapp/app/course/tutorial-groups/tutorial-groups-management/tutorial-free-periods/tutorial-free-periods-management/tutorial-group-free-periods-management.component.html"],
  "sourcesContent": ["import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, OnInit, Output, inject } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { faCalendarAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { OWL_DATE_TIME_FORMATS, OwlDateTimeModule } from '@danielmoncada/angular-datetime-picker';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { NgClass } from '@angular/common';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\nexport const MY_NATIVE_FORMATS = {\r\n    datePickerInput: { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' },\r\n    timePickerInput: { hour: 'numeric', minute: 'numeric' },\r\n};\r\n\r\nexport interface TutorialGroupFreePeriodFormData {\r\n    startDate?: Date;\r\n    endDate?: Date;\r\n    startTime?: Date;\r\n    endTime?: Date;\r\n    reason?: string;\r\n}\r\n\r\n/**\r\n * Enum for representing different time frames.\r\n * @enum {number}\r\n * @property {number} Day - Represents a whole day.\r\n * @property {number} Period - Represents a period spanning multiple days.\r\n * @property {number} PeriodWithinDay - Represents a period within a single day.\r\n */\r\nexport enum TimeFrame {\r\n    Day,\r\n    Period,\r\n    PeriodWithinDay,\r\n}\r\n\r\n@Component({\r\n    selector: 'jhi-tutorial-free-period-form',\r\n    templateUrl: './tutorial-group-free-period-form.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [{ provide: OWL_DATE_TIME_FORMATS, useValue: MY_NATIVE_FORMATS }],\r\n    imports: [TranslateDirective, FormsModule, ReactiveFormsModule, OwlDateTimeModule, NgClass, FaIconComponent, ArtemisDatePipe, ArtemisTranslatePipe],\r\n})\r\nexport class TutorialGroupFreePeriodFormComponent implements OnInit, OnChanges {\r\n    private fb = inject(FormBuilder);\r\n\r\n    @Input()\r\n    formData: TutorialGroupFreePeriodFormData = {\r\n        startDate: undefined,\r\n        endDate: undefined,\r\n        startTime: undefined,\r\n        endTime: undefined,\r\n        reason: undefined,\r\n    };\r\n\r\n    @Input() isEditMode = false;\r\n\r\n    @Input() timeZone: string;\r\n\r\n    @Output() formSubmitted: EventEmitter<TutorialGroupFreePeriodFormData> = new EventEmitter<TutorialGroupFreePeriodFormData>();\r\n\r\n    faCalendarAlt = faCalendarAlt;\r\n\r\n    form: FormGroup;\r\n\r\n    // TimeFrame to store the current time frame of the form.\r\n    protected timeFrame = TimeFrame.Day;\r\n\r\n    // Enum Object to be used for Comparing different TimeFrames in the template.\r\n    protected readonly TimeFrame = TimeFrame;\r\n\r\n    /**\r\n     * Sets the time frame for the form and resets the necessary date controls.\r\n     * @param {TimeFrame} timeFrame - The time frame to set. This should be one of the values from the TimeFrame enum.\r\n     */\r\n    setTimeFrame(timeFrame: TimeFrame) {\r\n        const resetControls = ['endDate', 'endTime', 'startTime'];\r\n        resetControls.forEach((control) => {\r\n            if (timeFrame === TimeFrame.Day || (timeFrame === TimeFrame.Period && control !== 'endDate') || (timeFrame === TimeFrame.PeriodWithinDay && control === 'endDate')) {\r\n                this.resetDateControl(control);\r\n            }\r\n        });\r\n        this.timeFrame = timeFrame;\r\n    }\r\n\r\n    /**\r\n     * Resets the specified date-value in the form.\r\n     * @param {string} controlName - The name of the form control to reset.\r\n     */\r\n    private resetDateControl(controlName: string) {\r\n        const control = this.form.get(controlName);\r\n        if (control) {\r\n            control.reset();\r\n            control.markAsUntouched();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if the start date/time is before the end date/time based on the current time frame.\r\n     * @returns {boolean} - Returns true if the start time/date is before the end time/date, otherwise returns true.\r\n     */\r\n    get isStartBeforeEnd(): boolean {\r\n        if (this.timeFrame === TimeFrame.PeriodWithinDay && this.endTimeControl?.value && this.startTimeControl?.value) {\r\n            const endTime = new Date(this.endTimeControl.value.getTime());\r\n            const startTime = new Date(this.startTimeControl.value.getTime());\r\n\r\n            endTime.setSeconds(0, 0);\r\n            startTime.setSeconds(0, 0);\r\n\r\n            return endTime > startTime;\r\n        } else if (this.timeFrame === TimeFrame.Period && this.endDateControl?.value && this.startDateControl?.value) {\r\n            const endDate = new Date(this.endDateControl.value.getTime());\r\n            const startDate = new Date(this.startDateControl.value.getTime());\r\n\r\n            endDate.setHours(0, 0, 0, 0);\r\n            startDate.setHours(0, 0, 0, 0);\r\n\r\n            return endDate > startDate;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    get timeFrameControl(): TimeFrame {\r\n        return this.timeFrame;\r\n    }\r\n\r\n    get startDateControl() {\r\n        return this.form.get('startDate');\r\n    }\r\n\r\n    get endDateControl() {\r\n        return this.form.get('endDate');\r\n    }\r\n\r\n    get startTimeControl() {\r\n        return this.form.get('startTime');\r\n    }\r\n\r\n    get endTimeControl() {\r\n        return this.form.get('endTime');\r\n    }\r\n\r\n    get reasonControl() {\r\n        return this.form.get('reason');\r\n    }\r\n\r\n    /**\r\n     * This getter method checks if the form submission is possible based on the validity of the form controls and the selected time frame.\r\n     * @returns {boolean} - Returns true if the form can be submitted, false otherwise\r\n     */\r\n    get isSubmitPossible(): boolean {\r\n        if (!this.startDateControl?.value || !this.startDateControl?.valid) {\r\n            return false;\r\n        }\r\n        if (this.timeFrame === TimeFrame.Day) {\r\n            return true;\r\n        } else if (this.timeFrame === TimeFrame.Period) {\r\n            return !!this.endDateControl?.value && !!this.endDateControl?.valid && this.isStartBeforeEnd;\r\n        } else if (this.timeFrame === TimeFrame.PeriodWithinDay) {\r\n            return (\r\n                !!this.startTimeControl?.value &&\r\n                !!this.startTimeControl?.valid &&\r\n                !!this.endTimeControl?.value &&\r\n                !!this.endTimeControl?.valid &&\r\n                this.isStartBeforeEnd &&\r\n                !this.isStartTimeInvalid &&\r\n                !this.isEndTimeInvalid\r\n            );\r\n        }\r\n        return false;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.initializeForm();\r\n    }\r\n\r\n    ngOnChanges() {\r\n        this.initializeForm();\r\n        if (this.isEditMode && this.formData) {\r\n            this.setFormValues(this.formData);\r\n            this.setFirstTimeFrameInEditMode(this.formData);\r\n        }\r\n    }\r\n\r\n    submitForm() {\r\n        const tutorialGroupFreePeriodFormData: TutorialGroupFreePeriodFormData = { ...this.form.value };\r\n        this.formSubmitted.emit(tutorialGroupFreePeriodFormData);\r\n    }\r\n\r\n    /**\r\n     * Sets the form values based on the provided form data.\r\n     * @param {TutorialGroupFreePeriodFormData} formData - The form data to set.\r\n     */\r\n    private setFormValues(formData: TutorialGroupFreePeriodFormData) {\r\n        this.form.patchValue({\r\n            startDate: formData.startDate,\r\n            endDate: formData.endDate,\r\n            startTime: formData.startTime,\r\n            endTime: formData.endTime,\r\n            reason: formData.reason,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Determines and sets the initial time frame when the form is in edit mode based on the provided form data.\r\n     * @param formData The form data used to determine the initial time frame.\r\n     */\r\n    private setFirstTimeFrameInEditMode(formData: TutorialGroupFreePeriodFormData) {\r\n        if (!formData.endDate && !formData.startTime && !formData.endTime) {\r\n            this.setTimeFrame(TimeFrame.Day);\r\n        } else if (!formData.endDate && formData.startTime && formData.endTime) {\r\n            this.setTimeFrame(TimeFrame.PeriodWithinDay);\r\n        } else {\r\n            this.setTimeFrame(TimeFrame.Period);\r\n        }\r\n    }\r\n\r\n    private initializeForm() {\r\n        if (this.form) {\r\n            return;\r\n        }\r\n        this.form = this.fb.group({\r\n            startDate: [undefined, [Validators.required]],\r\n            endDate: [undefined],\r\n            startTime: [undefined],\r\n            endTime: [undefined],\r\n            reason: [undefined],\r\n        });\r\n    }\r\n\r\n    get isStartTimeInvalid() {\r\n        if (this.startTimeControl) {\r\n            return this.startTimeControl.invalid && (this.startTimeControl.touched || this.startTimeControl.dirty);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    get isEndTimeInvalid() {\r\n        if (this.endTimeControl) {\r\n            return this.endTimeControl.invalid && (this.endTimeControl.touched || this.endTimeControl.dirty);\r\n        }\r\n        return false;\r\n    }\r\n}\r\n", "<div class=\"row\">\r\n    <div class=\"col-12 mb-2\">\r\n        <div class=\"alert alert-info\" jhiTranslate=\"artemisApp.generic.timeZone\" [translateValues]=\"{ timeZone }\"></div>\r\n    </div>\r\n    <div class=\"col-12\">\r\n        @if (form) {\r\n            <form class=\"row\" [formGroup]=\"form\" (ngSubmit)=\"submitForm()\">\r\n                <div class=\"btn-group\" role=\"group\">\r\n                    <input\r\n                        type=\"radio\"\r\n                        class=\"btn-check\"\r\n                        name=\"timeFrame\"\r\n                        id=\"FreePeriod\"\r\n                        autocomplete=\"off\"\r\n                        [checked]=\"timeFrame === TimeFrame.Period\"\r\n                        (click)=\"setTimeFrame(TimeFrame.Period)\"\r\n                    />\r\n                    <label class=\"btn btn-outline-primary\" for=\"FreePeriod\" jhiTranslate=\"artemisApp.forms.tutorialFreePeriodForm.timeFrame.period\"></label>\r\n\r\n                    <input\r\n                        type=\"radio\"\r\n                        class=\"btn-check\"\r\n                        name=\"timeFrame\"\r\n                        id=\"FreeDay\"\r\n                        autocomplete=\"off\"\r\n                        [checked]=\"timeFrame === TimeFrame.Day\"\r\n                        (click)=\"setTimeFrame(TimeFrame.Day)\"\r\n                    />\r\n                    <label class=\"btn btn-outline-primary\" for=\"FreeDay\" jhiTranslate=\"artemisApp.forms.tutorialFreePeriodForm.timeFrame.day\"></label>\r\n\r\n                    <input\r\n                        type=\"radio\"\r\n                        class=\"btn-check\"\r\n                        name=\"timeFrame\"\r\n                        id=\"FreePeriodWithinDay\"\r\n                        autocomplete=\"off\"\r\n                        [checked]=\"timeFrame === TimeFrame.PeriodWithinDay\"\r\n                        (click)=\"setTimeFrame(TimeFrame.PeriodWithinDay)\"\r\n                    />\r\n                    <label class=\"btn btn-outline-primary\" for=\"FreePeriodWithinDay\" jhiTranslate=\"artemisApp.forms.tutorialFreePeriodForm.timeFrame.periodWithinDay\"></label>\r\n                </div>\r\n\r\n                <!-- Date -->\r\n                <div>\r\n                    <label\r\n                        class=\"form-label\"\r\n                        for=\"startDate\"\r\n                        [jhiTranslate]=\"\r\n                            timeFrame !== TimeFrame.Period\r\n                                ? 'artemisApp.forms.tutorialFreePeriodForm.dateInput.label'\r\n                                : 'artemisApp.forms.tutorialFreePeriodForm.dateInput.labelStart'\r\n                        \"\r\n                    ></label>\r\n                    <div class=\"input-group\">\r\n                        <input\r\n                            name=\"startDate\"\r\n                            id=\"startDate\"\r\n                            required\r\n                            [ngClass]=\"{ isInvalid: form.controls.startDate?.invalid && (form.controls.startDate?.dirty || form.controls.startDate?.touched) }\"\r\n                            [owlDateTimeTrigger]=\"startDatePicker\"\r\n                            formControlName=\"startDate\"\r\n                            [owlDateTime]=\"startDatePicker\"\r\n                            readonly\r\n                            class=\"form-control\"\r\n                            jhiOwlDateTimeFormat\r\n                        />\r\n                        <button type=\"button\" class=\"btn btn-secondary\" [owlDateTimeTrigger]=\"startDatePicker\"><fa-icon [icon]=\"faCalendarAlt\" /></button>\r\n                        <owl-date-time [firstDayOfWeek]=\"1\" datePickerInput [pickerType]=\"'calendar'\" #startDatePicker [pickerMode]=\"'dialog'\" />\r\n                    </div>\r\n                    @if (form.controls.startDate?.invalid && (form.controls.startDate?.dirty || form.controls.startDate?.touched) && form.controls.startDate?.errors?.required) {\r\n                        <div class=\"alert alert-danger\" jhiTranslate=\"artemisApp.forms.tutorialFreePeriodForm.dateInput.requiredDateError\"></div>\r\n                    }\r\n                </div>\r\n\r\n                @if (timeFrame === TimeFrame.Period) {\r\n                    <label class=\"form-label\" for=\"endDate\" jhiTranslate=\"artemisApp.forms.tutorialFreePeriodForm.dateInput.labelEnd\"></label>\r\n                    <div class=\"input-group\">\r\n                        <input\r\n                            name=\"endDate\"\r\n                            id=\"endDate\"\r\n                            required\r\n                            [ngClass]=\"{ isInvalid: form.controls.endDate?.invalid && (form.controls.endDate?.dirty || form.controls.endDate?.touched) }\"\r\n                            [owlDateTimeTrigger]=\"endDatePicker\"\r\n                            formControlName=\"endDate\"\r\n                            [owlDateTime]=\"endDatePicker\"\r\n                            readonly\r\n                            class=\"form-control\"\r\n                            jhiOwlDateTimeFormat\r\n                        />\r\n                        <button type=\"button\" class=\"btn btn-secondary\" [owlDateTimeTrigger]=\"endDatePicker\"><fa-icon [icon]=\"faCalendarAlt\" /></button>\r\n                        <owl-date-time [firstDayOfWeek]=\"1\" datePickerInput [pickerType]=\"'calendar'\" #endDatePicker [pickerMode]=\"'dialog'\" />\r\n                    </div>\r\n                    @if (form.controls.endDate?.invalid && (form.controls.endDate?.dirty || form.controls.endDate?.touched) && form.controls.endDate?.errors?.required) {\r\n                        <div class=\"alert alert-danger\" jhiTranslate=\"artemisApp.forms.tutorialFreePeriodForm.dateInput.requiredEndDateError\"></div>\r\n                    } @else if (\r\n                        form.controls.endDate?.touched &&\r\n                        form.controls.startDate?.touched &&\r\n                        (form.controls.endDate?.value | artemisDate: 'short-date' : false : timeZone) <=\r\n                            (form.controls.startDate?.value | artemisDate: 'short-date' : false : timeZone)\r\n                    ) {\r\n                        <div class=\"alert alert-danger\" jhiTranslate=\"artemisApp.forms.tutorialFreePeriodForm.dateInput.invalidEndDateError\"></div>\r\n                    }\r\n                } @else if (timeFrame === TimeFrame.PeriodWithinDay) {\r\n                    <label class=\"form-label\" for=\"startTime\" jhiTranslate=\"artemisApp.forms.tutorialFreePeriodForm.dateInput.labelStartTime\"></label>\r\n                    <div class=\"input-group\">\r\n                        <input\r\n                            name=\"startTime\"\r\n                            id=\"startTime\"\r\n                            required\r\n                            [ngClass]=\"{ isInvalid: form.controls.startTime?.invalid && (form.controls.startTime?.dirty || form.controls.startTime?.touched) }\"\r\n                            [owlDateTimeTrigger]=\"startTimePicker\"\r\n                            formControlName=\"startTime\"\r\n                            [owlDateTime]=\"startTimePicker\"\r\n                            readonly\r\n                            class=\"form-control\"\r\n                            jhiOwlDateTimeFormat\r\n                        />\r\n                        <owl-date-time timePickerInput [pickerType]=\"'timer'\" #startTimePicker [pickerMode]=\"'dialog'\" />\r\n                    </div>\r\n\r\n                    <label class=\"form-label\" for=\"endTime\" jhiTranslate=\"artemisApp.forms.tutorialFreePeriodForm.dateInput.labelEndTime\"></label>\r\n                    <div class=\"input-group\">\r\n                        <input\r\n                            name=\"endTime\"\r\n                            id=\"endTime\"\r\n                            required\r\n                            [ngClass]=\"{ isInvalid: form.controls.endTime?.invalid && (form.controls.endTime?.dirty || form.controls.endTime?.touched) }\"\r\n                            [owlDateTimeTrigger]=\"endTimePicker\"\r\n                            formControlName=\"endTime\"\r\n                            [owlDateTime]=\"endTimePicker\"\r\n                            readonly\r\n                            class=\"form-control\"\r\n                            jhiOwlDateTimeFormat\r\n                        />\r\n                        <owl-date-time [pickerType]=\"'timer'\" #endTimePicker [pickerMode]=\"'dialog'\" />\r\n                    </div>\r\n                    @if (\r\n                        form.controls.endTime?.touched &&\r\n                        form.controls.startTime?.touched &&\r\n                        form.controls.startTime &&\r\n                        (form.controls.endTime?.value | artemisDate: 'time' : false : timeZone) <= (form.controls.startTime?.value | artemisDate: 'time' : false : timeZone)\r\n                    ) {\r\n                        <div class=\"alert alert-danger\" jhiTranslate=\"artemisApp.forms.tutorialFreePeriodForm.dateInput.invalidEndDateError\"></div>\r\n                    }\r\n                }\r\n                <!-- Reason -->\r\n                <div class=\"form-group\">\r\n                    <label for=\"reason\" jhiTranslate=\"artemisApp.forms.tutorialFreePeriodForm.reasonInput.label\"></label>\r\n                    <textarea\r\n                        class=\"form-control\"\r\n                        id=\"reason\"\r\n                        rows=\"6\"\r\n                        formControlName=\"reason\"\r\n                        [placeholder]=\"'artemisApp.forms.tutorialFreePeriodForm.reasonInput.placeholder' | artemisTranslate\"\r\n                    ></textarea>\r\n                    @if (form.controls.reason?.invalid && (form.controls.reason?.dirty || (form.controls.reason?.touched && form.controls.reason?.errors?.maxlength))) {\r\n                        <div\r\n                            class=\"alert alert-danger\"\r\n                            jhiTranslate=\"artemisApp.forms.tutorialFreePeriodForm.reasonInput.maxLengthValidationError\"\r\n                            [translateValues]=\"{ max: '256' }\"\r\n                        ></div>\r\n                    }\r\n                </div>\r\n                <div class=\"row mt-2\">\r\n                    <div class=\"col-12\">\r\n                        <button id=\"submitButton\" class=\"btn btn-primary\" type=\"submit\" [disabled]=\"!isSubmitPossible\">\r\n                            <span jhiTranslate=\"{{ isEditMode ? 'global.generic.edit' : 'global.generic.create' }}\"></span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        }\r\n    </div>\r\n</div>\r\n", "import { ChangeDetectionStrategy, Component, Input, OnDestroy, inject } from '@angular/core';\r\nimport { TutorialGroupFreePeriodDTO, TutorialGroupFreePeriodService } from 'app/course/tutorial-groups/services/tutorial-group-free-period.service';\r\nimport { TutorialGroupFreePeriodFormData } from 'app/course/tutorial-groups/tutorial-groups-management/tutorial-free-periods/crud/tutorial-free-period-form/tutorial-group-free-period-form.component';\r\nimport { finalize, takeUntil } from 'rxjs/operators';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { onError } from 'app/shared/util/global.utils';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Subject } from 'rxjs';\r\nimport { captureException } from '@sentry/angular';\r\nimport { LoadingIndicatorContainerComponent } from 'app/shared/loading-indicator-container/loading-indicator-container.component';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { TutorialGroupFreePeriodFormComponent } from '../tutorial-free-period-form/tutorial-group-free-period-form.component';\r\n\r\n@Component({\r\n    selector: 'jhi-create-tutorial-group-free-day',\r\n    templateUrl: './create-tutorial-group-free-period.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    imports: [LoadingIndicatorContainerComponent, TranslateDirective, TutorialGroupFreePeriodFormComponent],\r\n})\r\nexport class CreateTutorialGroupFreePeriodComponent implements OnDestroy {\r\n    private activeModal = inject(NgbActiveModal);\r\n    private tutorialGroupFreePeriodService = inject(TutorialGroupFreePeriodService);\r\n    private alertService = inject(AlertService);\r\n\r\n    ngUnsubscribe = new Subject<void>();\r\n\r\n    tutorialGroupFreePeriodToCreate: TutorialGroupFreePeriodDTO = new TutorialGroupFreePeriodDTO();\r\n    isLoading: boolean;\r\n\r\n    @Input()\r\n    tutorialGroupConfigurationId: number;\r\n\r\n    @Input()\r\n    course: Course;\r\n\r\n    isInitialized = false;\r\n\r\n    initialize() {\r\n        if (!this.tutorialGroupConfigurationId || !this.course) {\r\n            captureException('Error: Component not fully configured');\r\n        } else {\r\n            this.isInitialized = true;\r\n        }\r\n    }\r\n    createTutorialGroupFreePeriod(formData: TutorialGroupFreePeriodFormData) {\r\n        const { startDate, endDate, startTime, endTime, reason } = formData;\r\n\r\n        this.tutorialGroupFreePeriodToCreate.startDate = CreateTutorialGroupFreePeriodComponent.combineDateAndTimeWithAlternativeDate(startDate, startTime, undefined);\r\n        this.tutorialGroupFreePeriodToCreate.endDate = CreateTutorialGroupFreePeriodComponent.combineDateAndTimeWithAlternativeDate(endDate, endTime, startDate);\r\n        this.tutorialGroupFreePeriodToCreate.reason = reason;\r\n\r\n        this.isLoading = true;\r\n        this.tutorialGroupFreePeriodService\r\n            .create(this.course.id!, this.tutorialGroupConfigurationId, this.tutorialGroupFreePeriodToCreate)\r\n            .pipe(\r\n                finalize(() => {\r\n                    this.isLoading = false;\r\n                }),\r\n                takeUntil(this.ngUnsubscribe),\r\n            )\r\n            .subscribe({\r\n                next: () => {\r\n                    this.activeModal.close();\r\n                },\r\n                error: (res: HttpErrorResponse) => {\r\n                    onError(this.alertService, res);\r\n                    this.clear();\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * This static method combines a date and time into a single Date object. If the date is not provided, it uses an alternative date.\r\n     * It is used to handle the start and end date of a freePeriod, a freeDay or a freePeriodWithinDay.\r\n     *\r\n     * @param {Date} date - The date to be combined with the time. If not provided, the method uses the alternative date. If the provided Date is the startDate, the alternativeDate should be left undefined\r\n     * @param {Date} time - The time to be combined with the date. If not provided, the method sets the time to 23:59 for the alternative date or 0:00 for the date.\r\n     * @param {Date} alternativeDate - The alternative date to be used if the date is not provided.\r\n     * @returns {Date} - The combined date and time as a Date object.\r\n     * @throws {Error} - Throws an error if both date and time are undefined.\r\n     */\r\n    public static combineDateAndTimeWithAlternativeDate(date?: Date, time?: Date, alternativeDate?: Date): Date {\r\n        if (!date) {\r\n            // This is the case it is the endDate of a freeDay or a freePeriodWithinDay\r\n            if (!alternativeDate) {\r\n                const error = new Error('date and time are undefined');\r\n                captureException(error);\r\n                throw error;\r\n            }\r\n            const resDate = new Date(alternativeDate);\r\n            resDate.setHours(time?.getHours() ?? 23, time?.getMinutes() ?? 59);\r\n            return resDate;\r\n        }\r\n        date.setHours(time?.getHours() ?? (alternativeDate ? 23 : 0), time?.getMinutes() ?? (alternativeDate ? 59 : 0));\r\n        return date;\r\n    }\r\n\r\n    clear() {\r\n        this.activeModal.dismiss();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.ngUnsubscribe.next();\r\n        this.ngUnsubscribe.complete();\r\n    }\r\n}\r\n", "<jhi-loading-indicator-container [isLoading]=\"isLoading\">\r\n    @if (isInitialized) {\r\n        <div>\r\n            <div class=\"modal-header\">\r\n                <h4 class=\"modal-title\" jhiTranslate=\"artemisApp.pages.createTutorialFreePeriod.title\"></h4>\r\n                <button type=\"button\" class=\"btn-close\" (click)=\"clear()\"></button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <jhi-tutorial-free-period-form [timeZone]=\"course.timeZone!\" [isEditMode]=\"false\" (formSubmitted)=\"createTutorialGroupFreePeriod($event)\" />\r\n            </div>\r\n        </div>\r\n    }\r\n</jhi-loading-indicator-container>\r\n", "import { ChangeDetectionStrategy, Component, Input, OnDestroy, inject } from '@angular/core';\r\nimport { TutorialGroupsConfiguration } from 'app/entities/tutorial-group/tutorial-groups-configuration.model';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { onError } from 'app/shared/util/global.utils';\r\nimport { TutorialGroupFreePeriod } from 'app/entities/tutorial-group/tutorial-group-free-day.model';\r\nimport { TutorialGroupFreePeriodFormData } from 'app/course/tutorial-groups/tutorial-groups-management/tutorial-free-periods/crud/tutorial-free-period-form/tutorial-group-free-period-form.component';\r\nimport { Subject, finalize } from 'rxjs';\r\nimport { TutorialGroupFreePeriodDTO, TutorialGroupFreePeriodService } from 'app/course/tutorial-groups/services/tutorial-group-free-period.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { CreateTutorialGroupFreePeriodComponent } from 'app/course/tutorial-groups/tutorial-groups-management/tutorial-free-periods/crud/create-tutorial-group-free-period/create-tutorial-group-free-period.component';\r\nimport { TutorialGroupFreePeriodsManagementComponent } from 'app/course/tutorial-groups/tutorial-groups-management/tutorial-free-periods/tutorial-free-periods-management/tutorial-group-free-periods-management.component';\r\nimport { LoadingIndicatorContainerComponent } from 'app/shared/loading-indicator-container/loading-indicator-container.component';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { TutorialGroupFreePeriodFormComponent } from '../tutorial-free-period-form/tutorial-group-free-period-form.component';\r\nimport { captureException } from '@sentry/angular';\r\n\r\n@Component({\r\n    selector: 'jhi-edit-tutorial-group-free-period',\r\n    templateUrl: './edit-tutorial-group-free-period.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    imports: [LoadingIndicatorContainerComponent, TranslateDirective, TutorialGroupFreePeriodFormComponent],\r\n})\r\nexport class EditTutorialGroupFreePeriodComponent implements OnDestroy {\r\n    private activeModal = inject(NgbActiveModal);\r\n    private tutorialGroupFreePeriodService = inject(TutorialGroupFreePeriodService);\r\n    private alertService = inject(AlertService);\r\n\r\n    isLoading = false;\r\n\r\n    @Input()\r\n    tutorialGroupFreePeriod: TutorialGroupFreePeriod;\r\n\r\n    @Input()\r\n    tutorialGroupsConfiguration: TutorialGroupsConfiguration;\r\n\r\n    @Input()\r\n    course: Course;\r\n\r\n    isInitialized = false;\r\n\r\n    ngUnsubscribe = new Subject<void>();\r\n    formData: TutorialGroupFreePeriodFormData;\r\n\r\n    /**\r\n     * Initializes the component by setting up the form data based on the tutorial group free period, course, and tutorial groups configuration.\r\n     * If any of these are not provided, it logs an error and returns early.\r\n     * It determines whether the tutorial group free period is a freePeriod, a freeDay, or a freePeriodWithinDay.\r\n     * Based on these determinations, it sets up the form data accordingly.\r\n     */\r\n    initialize() {\r\n        if (!this.tutorialGroupFreePeriod || !this.course || !this.tutorialGroupsConfiguration) {\r\n            captureException('Error: Component not fully configured');\r\n            return;\r\n        }\r\n\r\n        const isFreePeriod = TutorialGroupFreePeriodsManagementComponent.isFreePeriod(this.tutorialGroupFreePeriod);\r\n        const isFreePeriodWithinDay = TutorialGroupFreePeriodsManagementComponent.isFreePeriodWithinDay(this.tutorialGroupFreePeriod);\r\n\r\n        this.formData = {\r\n            startDate: this.tutorialGroupFreePeriod.start?.tz(this.course.timeZone).toDate(),\r\n            endDate: isFreePeriod ? this.tutorialGroupFreePeriod.end?.tz(this.course.timeZone).toDate() : undefined,\r\n            startTime: isFreePeriodWithinDay ? this.tutorialGroupFreePeriod.start?.tz(this.course.timeZone).toDate() : undefined,\r\n            endTime: isFreePeriodWithinDay ? this.tutorialGroupFreePeriod.end?.tz(this.course.timeZone).toDate() : undefined,\r\n            reason: this.tutorialGroupFreePeriod.reason,\r\n        };\r\n\r\n        if (isFreePeriodWithinDay) {\r\n            if (this.formData.startTime && this.tutorialGroupFreePeriod.start) {\r\n                this.formData.startTime.setHours(this.tutorialGroupFreePeriod.start.tz(this.course.timeZone).hour());\r\n            }\r\n            if (this.formData.endTime && this.tutorialGroupFreePeriod.end) {\r\n                this.formData.endTime.setHours(this.tutorialGroupFreePeriod.end.tz(this.course.timeZone).hour());\r\n            }\r\n        }\r\n\r\n        this.isInitialized = true;\r\n    }\r\n\r\n    updateTutorialGroupFreePeriod(formData: TutorialGroupFreePeriodFormData) {\r\n        const { startDate, endDate, startTime, endTime, reason } = formData;\r\n\r\n        const tutorialGroupFreePeriodDto = new TutorialGroupFreePeriodDTO();\r\n        tutorialGroupFreePeriodDto.startDate = CreateTutorialGroupFreePeriodComponent.combineDateAndTimeWithAlternativeDate(startDate, startTime, undefined);\r\n        tutorialGroupFreePeriodDto.endDate = CreateTutorialGroupFreePeriodComponent.combineDateAndTimeWithAlternativeDate(endDate, endTime, startDate);\r\n        tutorialGroupFreePeriodDto.reason = reason;\r\n\r\n        this.isLoading = true;\r\n\r\n        this.tutorialGroupFreePeriodService\r\n            .update(this.course.id!, this.tutorialGroupsConfiguration.id!, this.tutorialGroupFreePeriod.id!, tutorialGroupFreePeriodDto)\r\n            .pipe(\r\n                finalize(() => {\r\n                    this.isLoading = false;\r\n                }),\r\n                takeUntil(this.ngUnsubscribe),\r\n            )\r\n            .subscribe({\r\n                next: () => {\r\n                    this.activeModal.close();\r\n                },\r\n                error: (res: HttpErrorResponse) => {\r\n                    this.clear();\r\n                    onError(this.alertService, res);\r\n                },\r\n            });\r\n    }\r\n\r\n    clear() {\r\n        this.activeModal.dismiss();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.ngUnsubscribe.next();\r\n        this.ngUnsubscribe.complete();\r\n    }\r\n}\r\n", "<jhi-loading-indicator-container [isLoading]=\"isLoading\">\r\n    @if (isInitialized) {\r\n        <div>\r\n            <div class=\"modal-header\">\r\n                <h4 class=\"modal-title\" jhiTranslate=\"artemisApp.pages.editTutorialFreePeriod.title\"></h4>\r\n                <button type=\"button\" class=\"btn-close\" (click)=\"clear()\"></button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <jhi-tutorial-free-period-form [timeZone]=\"course.timeZone!\" [formData]=\"formData\" [isEditMode]=\"true\" (formSubmitted)=\"updateTutorialGroupFreePeriod($event)\" />\r\n            </div>\r\n        </div>\r\n    }\r\n</jhi-loading-indicator-container>\r\n", "import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnDestroy, Output, inject } from '@angular/core';\r\nimport { TutorialGroupFreePeriod } from 'app/entities/tutorial-group/tutorial-group-free-day.model';\r\nimport { TutorialGroupFreePeriodService } from 'app/course/tutorial-groups/services/tutorial-group-free-period.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { EMPTY, Subject, from } from 'rxjs';\r\nimport { faTrash, faUsers, faWrench } from '@fortawesome/free-solid-svg-icons';\r\nimport { TutorialGroupsConfiguration } from 'app/entities/tutorial-group/tutorial-groups-configuration.model';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { EditTutorialGroupFreePeriodComponent } from 'app/course/tutorial-groups/tutorial-groups-management/tutorial-free-periods/crud/edit-tutorial-group-free-period/edit-tutorial-group-free-period.component';\r\nimport { catchError, takeUntil } from 'rxjs/operators';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { DeleteButtonDirective } from 'app/shared/delete-dialog/delete-button.directive';\r\nimport { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-tutorial-group-free-period-row-buttons',\r\n    templateUrl: './tutorial-group-free-period-row-buttons.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    imports: [FaIconComponent, TranslateDirective, DeleteButtonDirective, ArtemisDatePipe],\r\n})\r\nexport class TutorialGroupFreePeriodRowButtonsComponent implements OnDestroy {\r\n    private tutorialGroupFreePeriodService = inject(TutorialGroupFreePeriodService);\r\n    private modalService = inject(NgbModal);\r\n\r\n    @Input() course: Course;\r\n    @Input() tutorialGroupConfiguration: TutorialGroupsConfiguration;\r\n    @Input() tutorialFreePeriod: TutorialGroupFreePeriod;\r\n\r\n    @Output() tutorialFreePeriodDeleted = new EventEmitter<void>();\r\n    @Output() tutorialFreePeriodEdited = new EventEmitter<void>();\r\n    private dialogErrorSource = new Subject<string>();\r\n    dialogError$ = this.dialogErrorSource.asObservable();\r\n\r\n    ngUnsubscribe = new Subject<void>();\r\n\r\n    faWrench = faWrench;\r\n    faUsers = faUsers;\r\n    faTrash = faTrash;\r\n\r\n    deleteTutorialFreePeriod = () => {\r\n        this.tutorialGroupFreePeriodService\r\n            .delete(this.course.id!, this.tutorialGroupConfiguration.id!, this.tutorialFreePeriod.id!)\r\n            .pipe(takeUntil(this.ngUnsubscribe))\r\n            .subscribe({\r\n                next: () => {\r\n                    this.dialogErrorSource.next('');\r\n                    this.tutorialFreePeriodDeleted.emit();\r\n                },\r\n                error: (error: HttpErrorResponse) => this.dialogErrorSource.next(error.message),\r\n            });\r\n    };\r\n\r\n    openEditFreePeriodDialog(event: MouseEvent) {\r\n        event.stopPropagation();\r\n        const modalRef: NgbModalRef = this.modalService.open(EditTutorialGroupFreePeriodComponent, { size: 'lg', scrollable: false, backdrop: 'static', animation: false });\r\n        modalRef.componentInstance.course = this.course;\r\n        modalRef.componentInstance.tutorialGroupFreePeriod = this.tutorialFreePeriod;\r\n        modalRef.componentInstance.tutorialGroupsConfiguration = this.tutorialGroupConfiguration;\r\n        modalRef.componentInstance.initialize();\r\n        from(modalRef.result)\r\n            .pipe(\r\n                catchError(() => EMPTY),\r\n                takeUntil(this.ngUnsubscribe),\r\n            )\r\n            .subscribe(() => {\r\n                this.tutorialFreePeriodEdited.emit();\r\n            });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.ngUnsubscribe.next();\r\n        this.ngUnsubscribe.complete();\r\n        this.dialogErrorSource.unsubscribe();\r\n    }\r\n}\r\n", "<div class=\"btn-group flex-btn-group-container\">\r\n    <!-- Edit -->\r\n\r\n    <button type=\"button\" [id]=\"'edit-' + tutorialFreePeriod.id\" (click)=\"openEditFreePeriodDialog($event)\" class=\"btn btn-warning btn-sm me-1\">\r\n        <fa-icon [icon]=\"faWrench\" />\r\n        <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.edit\"></span>\r\n    </button>\r\n    <!-- Delete -->\r\n    <button\r\n        [id]=\"'delete-' + tutorialFreePeriod.id\"\r\n        jhiDeleteButton\r\n        entityTitle=\"{{ tutorialFreePeriod.start | artemisDate: 'long-date' : false : course.timeZone }}\"\r\n        deleteQuestion=\"artemisApp.pages.tutorialFreePeriodsManagement.deleteDialog.question\"\r\n        (delete)=\"deleteTutorialFreePeriod()\"\r\n        [dialogError]=\"dialogError$\"\r\n    >\r\n        <fa-icon [icon]=\"faTrash\" />\r\n    </button>\r\n</div>\r\n", "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { TutorialGroupFreePeriod } from 'app/entities/tutorial-group/tutorial-group-free-day.model';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { TutorialGroupsConfiguration } from 'app/entities/tutorial-group/tutorial-groups-configuration.model';\r\nimport dayjs from 'dayjs/esm';\r\nimport { TutorialGroupFreePeriodsManagementComponent } from 'app/course/tutorial-groups/tutorial-groups-management/tutorial-free-periods/tutorial-free-periods-management/tutorial-group-free-periods-management.component';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { NgClass } from '@angular/common';\r\nimport { TutorialGroupFreePeriodRowButtonsComponent } from '../tutorial-group-free-period-row-buttons/tutorial-group-free-period-row-buttons.component';\r\nimport { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-tutorial-group-free-periods-table',\r\n    templateUrl: './tutorial-group-free-periods-table.component.html',\r\n    styleUrls: ['../tutorial-group-free-periods-management.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    imports: [TranslateDirective, NgClass, TutorialGroupFreePeriodRowButtonsComponent, ArtemisDatePipe, ArtemisTranslatePipe],\r\n})\r\nexport class TutorialGroupFreePeriodsTableComponent {\r\n    @Input() course: Course;\r\n    @Input() tutorialGroupsConfiguration: TutorialGroupsConfiguration;\r\n    @Input() tutorialGroupFreePeriods: TutorialGroupFreePeriod[];\r\n    @Input() labelText: string;\r\n    @Input() loadAll: () => void;\r\n\r\n    protected readonly TutorialGroupFreePeriodsManagementComponent = TutorialGroupFreePeriodsManagementComponent;\r\n\r\n    public isInThePast(tutorialGroupFreeDay: TutorialGroupFreePeriod): boolean {\r\n        return tutorialGroupFreeDay.end!.isBefore(dayjs());\r\n    }\r\n}\r\n", "<label class=\"form-label\">{{ labelText | artemisTranslate }}</label>\r\n<div class=\"table-responsive\">\r\n    <table class=\"table table-sm table-hover\">\r\n        <thead>\r\n            <tr>\r\n                <th class=\"col-1\" jhiTranslate=\"global.field.id\"></th>\r\n                <th class=\"col-2\" jhiTranslate=\"artemisApp.entities.tutorialFreePeriod.startDate\"></th>\r\n                <th class=\"col-2\" jhiTranslate=\"artemisApp.entities.tutorialFreePeriod.endDate\"></th>\r\n                <th class=\"col-2\" jhiTranslate=\"artemisApp.forms.tutorialFreePeriodForm.dateInput.labelStartTime\"></th>\r\n                <th class=\"col-2\" jhiTranslate=\"artemisApp.forms.tutorialFreePeriodForm.dateInput.labelEndTime\"></th>\r\n                <th class=\"col-2\" jhiTranslate=\"artemisApp.entities.tutorialFreePeriod.reason\"></th>\r\n                <th class=\"col-1\"></th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            @for (freePeriod of tutorialGroupFreePeriods; track freePeriod) {\r\n                <tr [ngClass]=\"{ 'text-past': isInThePast(freePeriod) }\" class=\"free-period-row\">\r\n                    <td class=\"col-1\">\r\n                        {{ freePeriod.id }}\r\n                    </td>\r\n                    <td class=\"col-2\">\r\n                        {{ freePeriod.start | artemisDate: 'long-date' : false : course.timeZone : true }}\r\n                    </td>\r\n                    <td class=\"col-2\">\r\n                        {{ freePeriod.end | artemisDate: 'long-date' : false : course.timeZone : true }}\r\n                    </td>\r\n                    <td class=\"col-2\">\r\n                        {{\r\n                            TutorialGroupFreePeriodsManagementComponent.isFreeDay(freePeriod) || TutorialGroupFreePeriodsManagementComponent.isFreePeriod(freePeriod)\r\n                                ? '-'\r\n                                : (freePeriod.start | artemisDate: 'time' : false : course.timeZone : false)\r\n                        }}\r\n                    </td>\r\n                    <td class=\"col-2\">\r\n                        {{\r\n                            TutorialGroupFreePeriodsManagementComponent.isFreeDay(freePeriod) || TutorialGroupFreePeriodsManagementComponent.isFreePeriod(freePeriod)\r\n                                ? '-'\r\n                                : (freePeriod.end | artemisDate: 'time' : false : course.timeZone : false)\r\n                        }}\r\n                    </td>\r\n                    <td class=\"col-2\">\r\n                        <span class=\"free-period-reason-overflow\"> {{ freePeriod.reason ? freePeriod.reason : '-' }} </span>\r\n                    </td>\r\n                    <td class=\"col-1\">\r\n                        <div class=\"extra-buttons\">\r\n                            <jhi-tutorial-group-free-period-row-buttons\r\n                                [course]=\"course\"\r\n                                [tutorialGroupConfiguration]=\"tutorialGroupsConfiguration\"\r\n                                [tutorialFreePeriod]=\"freePeriod\"\r\n                                (tutorialFreePeriodDeleted)=\"loadAll()\"\r\n                                (tutorialFreePeriodEdited)=\"loadAll()\"\r\n                            />\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            }\r\n        </tbody>\r\n    </table>\r\n</div>\r\n", "import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit, inject } from '@angular/core';\r\nimport { onError } from 'app/shared/util/global.utils';\r\nimport { TutorialGroupsConfiguration } from 'app/entities/tutorial-group/tutorial-groups-configuration.model';\r\nimport { EMPTY, Subject, combineLatest, finalize, from, switchMap, take } from 'rxjs';\r\nimport { TutorialGroupsConfigurationService } from 'app/course/tutorial-groups/services/tutorial-groups-configuration.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { TutorialGroupFreePeriod } from 'app/entities/tutorial-group/tutorial-group-free-day.model';\r\nimport { SortService } from 'app/shared/service/sort.service';\r\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { Course } from 'app/entities/course.model';\r\nimport dayjs from 'dayjs/esm';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CreateTutorialGroupFreePeriodComponent } from 'app/course/tutorial-groups/tutorial-groups-management/tutorial-free-periods/crud/create-tutorial-group-free-period/create-tutorial-group-free-period.component';\r\nimport { catchError, takeUntil } from 'rxjs/operators';\r\nimport { LoadingIndicatorContainerComponent } from 'app/shared/loading-indicator-container/loading-indicator-container.component';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { TutorialGroupFreePeriodsTableComponent } from './tutorial-group-free-periods-table/tutorial-group-free-periods-table.component';\r\n\r\n@Component({\r\n    selector: 'jhi-tutorial-free-periods',\r\n    templateUrl: './tutorial-group-free-periods-management.component.html',\r\n    styleUrls: ['./tutorial-group-free-periods-management.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    imports: [LoadingIndicatorContainerComponent, TranslateDirective, FaIconComponent, TutorialGroupFreePeriodsTableComponent],\r\n})\r\nexport class TutorialGroupFreePeriodsManagementComponent implements OnInit, OnDestroy {\r\n    private activatedRoute = inject(ActivatedRoute);\r\n    private tutorialGroupsConfigurationService = inject(TutorialGroupsConfigurationService);\r\n    private alertService = inject(AlertService);\r\n    private sortService = inject(SortService);\r\n    private modalService = inject(NgbModal);\r\n    private cdr = inject(ChangeDetectorRef);\r\n\r\n    isLoading = false;\r\n    tutorialGroupsConfiguration: TutorialGroupsConfiguration;\r\n    tutorialGroupFreePeriods: TutorialGroupFreePeriod[] = [];\r\n    course: Course;\r\n    faTimes = faTimes;\r\n    faPlus = faPlus;\r\n\r\n    private dialogErrorSource = new Subject<string>();\r\n    dialogError$ = this.dialogErrorSource.asObservable();\r\n\r\n    ngUnsubscribe = new Subject<void>();\r\n\r\n    ngOnInit(): void {\r\n        this.loadAll();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.ngUnsubscribe.next();\r\n        this.ngUnsubscribe.complete();\r\n        this.dialogErrorSource.unsubscribe();\r\n    }\r\n\r\n    get freeDays(): TutorialGroupFreePeriod[] {\r\n        return this.tutorialGroupFreePeriods.filter((tutorialGroupFreePeriod) => TutorialGroupFreePeriodsManagementComponent.isFreeDay(tutorialGroupFreePeriod));\r\n    }\r\n    public static isFreeDay(tutorialGroupFreePeriod: TutorialGroupFreePeriod): boolean {\r\n        const startIsMidnight: boolean = tutorialGroupFreePeriod.start!.hour() === 0 && tutorialGroupFreePeriod.start!.minute() === 0;\r\n        const endIsMidnight: boolean = tutorialGroupFreePeriod.end!.hour() === 23 && tutorialGroupFreePeriod.end!.minute() === 59;\r\n\r\n        return tutorialGroupFreePeriod.start!.isSame(tutorialGroupFreePeriod.end!, 'day') && startIsMidnight && endIsMidnight;\r\n    }\r\n\r\n    get freePeriods(): TutorialGroupFreePeriod[] {\r\n        return this.tutorialGroupFreePeriods.filter((tutorialGroupFreePeriod) => TutorialGroupFreePeriodsManagementComponent.isFreePeriod(tutorialGroupFreePeriod));\r\n    }\r\n\r\n    public static isFreePeriod(tutorialGroupFreePeriod: TutorialGroupFreePeriod): boolean {\r\n        return !tutorialGroupFreePeriod.start!.isSame(tutorialGroupFreePeriod.end!, 'day');\r\n    }\r\n\r\n    get freePeriodsWithinDay(): TutorialGroupFreePeriod[] {\r\n        return this.tutorialGroupFreePeriods.filter((tutorialGroupFreePeriod) => TutorialGroupFreePeriodsManagementComponent.isFreePeriodWithinDay(tutorialGroupFreePeriod));\r\n    }\r\n\r\n    public static isFreePeriodWithinDay(tutorialGroupFreePeriod: TutorialGroupFreePeriod) {\r\n        return tutorialGroupFreePeriod.start!.date() === tutorialGroupFreePeriod.end!.date() && !TutorialGroupFreePeriodsManagementComponent.isFreeDay(tutorialGroupFreePeriod);\r\n    }\r\n\r\n    public getCurrentDate(): dayjs.Dayjs {\r\n        return dayjs();\r\n    }\r\n\r\n    loadAll() {\r\n        this.isLoading = true;\r\n        combineLatest([this.activatedRoute.data])\r\n            .pipe(\r\n                take(1),\r\n                switchMap(([{ course }]) => {\r\n                    this.course = course;\r\n                    return this.tutorialGroupsConfigurationService.getOneOfCourse(this.course.id!);\r\n                }),\r\n                finalize(() => (this.isLoading = false)),\r\n                takeUntil(this.ngUnsubscribe),\r\n            )\r\n            .subscribe({\r\n                next: (tutorialGroupsConfigurationResult) => {\r\n                    if (tutorialGroupsConfigurationResult.body) {\r\n                        this.tutorialGroupsConfiguration = tutorialGroupsConfigurationResult.body;\r\n                        if (this.tutorialGroupsConfiguration.tutorialGroupFreePeriods) {\r\n                            this.tutorialGroupFreePeriods = this.sortService.sortByProperty(this.tutorialGroupsConfiguration.tutorialGroupFreePeriods, 'start', false);\r\n                        } else {\r\n                            this.tutorialGroupFreePeriods = [];\r\n                        }\r\n                    }\r\n                },\r\n                error: (res: HttpErrorResponse) => onError(this.alertService, res),\r\n            })\r\n            .add(() => this.cdr.detectChanges());\r\n    }\r\n\r\n    openCreateFreePeriodDialog(event: MouseEvent) {\r\n        event.stopPropagation();\r\n        const modalRef: NgbModalRef = this.modalService.open(CreateTutorialGroupFreePeriodComponent, { size: 'lg', scrollable: false, backdrop: 'static', animation: false });\r\n        modalRef.componentInstance.course = this.course;\r\n        modalRef.componentInstance.tutorialGroupConfigurationId = this.tutorialGroupsConfiguration.id!;\r\n        modalRef.componentInstance.initialize();\r\n        from(modalRef.result)\r\n            .pipe(\r\n                catchError(() => EMPTY),\r\n                takeUntil(this.ngUnsubscribe),\r\n            )\r\n            .subscribe(() => {\r\n                this.loadAll();\r\n            });\r\n    }\r\n}\r\n", "<jhi-loading-indicator-container [isLoading]=\"isLoading\">\r\n    @if (tutorialGroupsConfiguration && tutorialGroupFreePeriods) {\r\n        <div class=\"row\">\r\n            <div class=\"col-12\">\r\n                <div class=\"d-flex justify-content-between\">\r\n                    <h4 jhiTranslate=\"artemisApp.pages.tutorialFreePeriodsManagement.title\"></h4>\r\n                    <div>\r\n                        <button type=\"button\" class=\"btn btn-primary\" id=\"create-tutorial-free-day\" (click)=\"openCreateFreePeriodDialog($event)\">\r\n                            <fa-icon [icon]=\"faPlus\" />\r\n                            <span jhiTranslate=\"artemisApp.pages.tutorialFreePeriodsManagement.createFreePeriodButton\"></span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12 mb-2\">\r\n                <div\r\n                    class=\"alert alert-info\"\r\n                    jhiTranslate=\"artemisApp.pages.tutorialFreePeriodsManagement.timeZoneExplanation\"\r\n                    [translateValues]=\"{ timeZone: course.timeZone }\"\r\n                ></div>\r\n            </div>\r\n\r\n            <!-- List of free Periods -->\r\n            @if (freePeriods?.length) {\r\n                <jhi-tutorial-group-free-periods-table\r\n                    [course]=\"course\"\r\n                    [tutorialGroupsConfiguration]=\"tutorialGroupsConfiguration\"\r\n                    [tutorialGroupFreePeriods]=\"freePeriods\"\r\n                    [labelText]=\"'artemisApp.forms.tutorialFreePeriodForm.timeFrame.period'\"\r\n                    [loadAll]=\"loadAll.bind(this)\"\r\n                />\r\n            }\r\n\r\n            <!-- List of TutorialGroupFreeDays -->\r\n            @if (freeDays?.length) {\r\n                <jhi-tutorial-group-free-periods-table\r\n                    [course]=\"course\"\r\n                    [tutorialGroupsConfiguration]=\"tutorialGroupsConfiguration\"\r\n                    [tutorialGroupFreePeriods]=\"freeDays\"\r\n                    [labelText]=\"'artemisApp.forms.tutorialFreePeriodForm.timeFrame.day'\"\r\n                    [loadAll]=\"loadAll.bind(this)\"\r\n                />\r\n            }\r\n\r\n            <!-- FreePeriodWithinDay -->\r\n            @if (freePeriodsWithinDay?.length) {\r\n                <jhi-tutorial-group-free-periods-table\r\n                    [course]=\"course\"\r\n                    [tutorialGroupsConfiguration]=\"tutorialGroupsConfiguration\"\r\n                    [tutorialGroupFreePeriods]=\"freePeriodsWithinDay\"\r\n                    [labelText]=\"'artemisApp.forms.tutorialFreePeriodForm.timeFrame.periodWithinDay'\"\r\n                    [loadAll]=\"loadAll.bind(this)\"\r\n                />\r\n            }\r\n        </div>\r\n    }\r\n</jhi-loading-indicator-container>\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275template", "TutorialGroupFreePeriodFormComponent_Conditional_9_Conditional_36_Conditional_14_Template", "TutorialGroupFreePeriodFormComponent_Conditional_9_Conditional_36_Conditional_17_Template", "\u0275\u0275advance", "\u0275\u0275property", "\u0275\u0275pureFunction1", "_c1", "ctx_r1", "form", "controls", "endDate", "invalid", "dirty", "touched", "endDatePicker_r3", "faCalendarAlt", "\u0275\u0275conditional", "errors", "required", "startDate", "\u0275\u0275pipeBind4", "value", "timeZone", "TutorialGroupFreePeriodFormComponent_Conditional_9_Conditional_37_Conditional_21_Template", "startTime", "startTimePicker_r4", "endTime", "endTimePicker_r5", "\u0275\u0275pureFunction0", "_c2", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "submitForm", "setTimeFrame", "TimeFrame", "Period", "Day", "PeriodWithinDay", "TutorialGroupFreePeriodFormComponent_Conditional_9_Conditional_34_Template", "TutorialGroupFreePeriodFormComponent_Conditional_9_Conditional_36_Template", "TutorialGroupFreePeriodFormComponent_Conditional_9_Conditional_37_Template", "TutorialGroupFreePeriodFormComponent_Conditional_9_Conditional_45_Template", "timeFrame", "startDatePicker_r6", "\u0275\u0275pipeBind1", "reason", "maxlength", "isSubmitPossible", "\u0275\u0275propertyInterpolate", "isEditMode", "MY_NATIVE_FORMATS", "datePickerInput", "weekday", "year", "month", "day", "timePickerInput", "hour", "minute", "TutorialGroupFreePeriodFormComponent", "fb", "inject", "FormBuilder", "formData", "undefined", "formSubmitted", "EventEmitter", "forEach", "control", "resetDateControl", "controlName", "get", "reset", "markAsUntouched", "isStartBeforeEnd", "endTimeControl", "startTimeControl", "Date", "getTime", "setSeconds", "endDateControl", "startDateControl", "setHours", "timeFrameControl", "reasonControl", "valid", "isStartTimeInvalid", "isEndTimeInvalid", "ngOnInit", "initializeForm", "ngOnChanges", "setFormValues", "setFirstTimeFrameInEditMode", "tutorialGroupFreePeriodFormData", "__spreadValues", "emit", "patchValue", "group", "Validators", "selectors", "inputs", "outputs", "features", "\u0275\u0275ProvidersFeature", "provide", "OWL_DATE_TIME_FORMATS", "useValue", "\u0275\u0275NgOnChangesFeature", "decls", "vars", "consts", "template", "rf", "ctx", "TutorialGroupFreePeriodFormComponent_Conditional_9_Template", "_c0", "TranslateDirective", "FormsModule", "\u0275NgNoValidate", "DefaultValueAccessor", "NgControlStatus", "NgControlStatusGroup", "RequiredValidator", "ReactiveFormsModule", "FormGroupDirective", "FormControlName", "OwlDateTimeModule", "OwlDateTimeTriggerDirective", "OwlDateTimeInputDirective", "OwlDateTimeComponent", "NgClass", "FaIconComponent", "ArtemisDatePipe", "ArtemisTranslatePipe", "encapsulation", "changeDetection", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "clear", "\u0275\u0275elementEnd", "$event", "createTutorialGroupFreePeriod", "\u0275\u0275advance", "\u0275\u0275property", "course", "timeZone", "CreateTutorialGroupFreePeriodComponent", "activeModal", "inject", "NgbActiveModal", "tutorialGroupFreePeriodService", "TutorialGroupFreePeriodService", "alertService", "AlertService", "ngUnsubscribe", "Subject", "tutorialGroupFreePeriodToCreate", "TutorialGroupFreePeriodDTO", "isLoading", "tutorialGroupConfigurationId", "isInitialized", "initialize", "captureException", "formData", "startDate", "endDate", "startTime", "endTime", "reason", "combineDateAndTimeWithAlternativeDate", "undefined", "create", "id", "pipe", "finalize", "takeUntil", "subscribe", "next", "close", "error", "res", "onError", "date", "time", "alternativeDate", "Error", "resDate", "Date", "setHours", "getHours", "getMinutes", "dismiss", "ngOnDestroy", "complete", "selectors", "inputs", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275template", "CreateTutorialGroupFreePeriodComponent_Conditional_2_Template", "\u0275\u0275conditional", "LoadingIndicatorContainerComponent", "TranslateDirective", "TutorialGroupFreePeriodFormComponent", "encapsulation", "changeDetection", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "clear", "\u0275\u0275elementEnd", "$event", "updateTutorialGroupFreePeriod", "\u0275\u0275advance", "\u0275\u0275property", "course", "timeZone", "formData", "EditTutorialGroupFreePeriodComponent", "activeModal", "inject", "NgbActiveModal", "tutorialGroupFreePeriodService", "TutorialGroupFreePeriodService", "alertService", "AlertService", "isLoading", "tutorialGroupFreePeriod", "tutorialGroupsConfiguration", "isInitialized", "ngUnsubscribe", "Subject", "initialize", "captureException", "isFreePeriod", "TutorialGroupFreePeriodsManagementComponent", "isFreePeriodWithinDay", "startDate", "start", "tz", "toDate", "endDate", "end", "undefined", "startTime", "endTime", "reason", "setHours", "hour", "tutorialGroupFreePeriodDto", "TutorialGroupFreePeriodDTO", "CreateTutorialGroupFreePeriodComponent", "combineDateAndTimeWithAlternativeDate", "update", "id", "pipe", "finalize", "takeUntil", "subscribe", "next", "close", "error", "res", "onError", "dismiss", "ngOnDestroy", "complete", "selectors", "inputs", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275template", "EditTutorialGroupFreePeriodComponent_Conditional_2_Template", "\u0275\u0275conditional", "LoadingIndicatorContainerComponent", "TranslateDirective", "TutorialGroupFreePeriodFormComponent", "encapsulation", "changeDetection", "TutorialGroupFreePeriodRowButtonsComponent", "tutorialGroupFreePeriodService", "inject", "TutorialGroupFreePeriodService", "modalService", "NgbModal", "course", "tutorialGroupConfiguration", "tutorialFreePeriod", "tutorialFreePeriodDeleted", "EventEmitter", "tutorialFreePeriodEdited", "dialogErrorSource", "Subject", "dialogError$", "asObservable", "ngUnsubscribe", "faWrench", "faUsers", "faTrash", "deleteTutorialFreePeriod", "delete", "id", "pipe", "takeUntil", "subscribe", "next", "emit", "error", "message", "openEditFreePeriodDialog", "event", "stopPropagation", "modalRef", "open", "EditTutorialGroupFreePeriodComponent", "size", "scrollable", "backdrop", "animation", "componentInstance", "tutorialGroupFreePeriod", "tutorialGroupsConfiguration", "initialize", "from", "result", "catchError", "EMPTY", "ngOnDestroy", "complete", "unsubscribe", "selectors", "inputs", "outputs", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275listener", "$event", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "\u0275\u0275propertyInterpolate", "\u0275\u0275pipeBind4", "start", "timeZone", "FaIconComponent", "TranslateDirective", "DeleteButtonDirective", "ArtemisDatePipe", "encapsulation", "changeDetection", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "loadAll", "\u0275\u0275advance", "\u0275\u0275property", "\u0275\u0275pureFunction1", "_c0", "isInThePast", "freePeriod_r3", "\u0275\u0275textInterpolate1", "id", "\u0275\u0275pipeBindV", "\u0275\u0275pureFunction2", "_c1", "start", "course", "timeZone", "end", "TutorialGroupFreePeriodsManagementComponent", "isFreeDay", "isFreePeriod", "_c2", "reason", "tutorialGroupsConfiguration", "TutorialGroupFreePeriodsTableComponent", "tutorialGroupFreePeriods", "labelText", "tutorialGroupFreeDay", "isBefore", "dayjs", "selectors", "inputs", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275element", "\u0275\u0275repeaterCreate", "TutorialGroupFreePeriodsTableComponent_For_31_Template", "\u0275\u0275repeaterTrackByIdentity", "\u0275\u0275textInterpolate", "\u0275\u0275pipeBind1", "\u0275\u0275repeater", "TranslateDirective", "NgClass", "TutorialGroupFreePeriodRowButtonsComponent", "ArtemisDatePipe", "ArtemisTranslatePipe", "styles", "changeDetection", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275property", "ctx_r1", "course", "tutorialGroupsConfiguration", "freePeriods", "loadAll", "bind", "freeDays", "freePeriodsWithinDay", "\u0275\u0275elementStart", "\u0275\u0275listener", "$event", "\u0275\u0275restoreView", "_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "openCreateFreePeriodDialog", "\u0275\u0275elementEnd", "\u0275\u0275template", "TutorialGroupFreePeriodsManagementComponent_Conditional_2_Conditional_27_Template", "TutorialGroupFreePeriodsManagementComponent_Conditional_2_Conditional_28_Template", "TutorialGroupFreePeriodsManagementComponent_Conditional_2_Conditional_29_Template", "faPlus", "\u0275\u0275pureFunction1", "_c0", "timeZone", "\u0275\u0275conditional", "length", "TutorialGroupFreePeriodsManagementComponent", "activatedRoute", "inject", "ActivatedRoute", "tutorialGroupsConfigurationService", "TutorialGroupsConfigurationService", "alertService", "AlertService", "sortService", "SortService", "modalService", "NgbModal", "cdr", "ChangeDetectorRef", "isLoading", "tutorialGroupFreePeriods", "faTimes", "dialogErrorSource", "Subject", "dialogError$", "asObservable", "ngUnsubscribe", "ngOnInit", "ngOnDestroy", "next", "complete", "unsubscribe", "filter", "tutorialGroupFreePeriod", "isFreeDay", "startIsMidnight", "start", "hour", "minute", "endIsMidnight", "end", "isSame", "isFreePeriod", "isFreePeriodWithinDay", "date", "getCurrentDate", "dayjs", "combineLatest", "data", "pipe", "take", "switchMap", "getOneOfCourse", "id", "finalize", "takeUntil", "subscribe", "tutorialGroupsConfigurationResult", "body", "sortByProperty", "error", "res", "onError", "add", "detectChanges", "event", "stopPropagation", "modalRef", "open", "CreateTutorialGroupFreePeriodComponent", "size", "scrollable", "backdrop", "animation", "componentInstance", "tutorialGroupConfigurationId", "initialize", "from", "result", "catchError", "EMPTY", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "TutorialGroupFreePeriodsManagementComponent_Conditional_2_Template", "LoadingIndicatorContainerComponent", "TranslateDirective", "FaIconComponent", "TutorialGroupFreePeriodsTableComponent", "styles", "changeDetection"]
}
