{
  "version": 3,
  "sources": ["src/main/webapp/app/exercises/text/participate/string-count.service.ts"],
  "sourcesContent": ["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class StringCountService {\r\n    /**\r\n     * includes Latin-1 Supplement 00C0 to 00FF to support german \"umlaute\"\r\n     */\r\n    private readonly WORD_MATCH_REGEX = /[\\w\\u00C0-\\u00ff]+/g;\r\n\r\n    /**\r\n     * Counts the number of words in a text\r\n     * @param text\r\n     */\r\n    public countWords(text: string | null | undefined): number {\r\n        let wordCount = 0;\r\n        if (text) {\r\n            const match = text.match(this.WORD_MATCH_REGEX);\r\n            if (match) {\r\n                wordCount = match.length;\r\n            }\r\n        }\r\n        return wordCount;\r\n    }\r\n\r\n    /**\r\n     * Counts the number of characters in a text\r\n     * @param text\r\n     */\r\n    public countCharacters(text: string | null | undefined): number {\r\n        if (text) {\r\n            return text.length;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n}\r\n"],
  "mappings": "yCAKA,IAAaA,GAAkB,IAAA,CAAzB,MAAOA,CAAkB,CAIVC,iBAAmB,sBAM7BC,WAAWC,EAA+B,CAC7C,IAAIC,EAAY,EAChB,GAAID,EAAM,CACN,IAAME,EAAQF,EAAKE,MAAM,KAAKJ,gBAAgB,EAC1CI,IACAD,EAAYC,EAAMC,OAE1B,CACA,OAAOF,CACX,CAMOG,gBAAgBJ,EAA+B,CAClD,OAAIA,EACOA,EAAKG,OAEL,CAEf,4CA/BSN,EAAkB,6BAAlBA,EAAkBQ,QAAlBR,EAAkBS,UAAAC,WAFf,MAAM,CAAA,SAETV,CAAkB,GAAA",
  "names": ["StringCountService", "WORD_MATCH_REGEX", "countWords", "text", "wordCount", "match", "length", "countCharacters", "factory", "\u0275fac", "providedIn"]
}
