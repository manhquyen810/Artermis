{
  "version": 3,
  "sources": ["src/main/webapp/app/course/manage/detail/course-detail-doughnut-chart.component.ts", "src/main/webapp/app/course/manage/detail/course-detail-doughnut-chart.component.html", "src/main/webapp/app/course/manage/detail/course-detail-line-chart.component.ts", "src/main/webapp/app/course/manage/detail/course-detail-line-chart.component.html", "src/main/webapp/app/course/manage/detail/course-detail.component.ts", "src/main/webapp/app/course/manage/detail/course-detail.component.html"],
  "sourcesContent": ["import { Component, Input, OnChanges, OnInit, inject } from '@angular/core';\r\nimport { roundValueSpecifiedByCourseSettings } from 'app/shared/util/utils';\r\nimport { DoughnutChartType } from './course-detail.component';\r\nimport { Router, RouterLink } from '@angular/router';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { Color, PieChartModule, ScaleType } from '@swimlane/ngx-charts';\r\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\r\nimport { NgxChartsSingleSeriesDataEntry } from 'app/shared/chart/ngx-charts-datatypes';\r\nimport { GraphColors } from 'app/entities/statistics.model';\r\nimport { NgClass } from '@angular/common';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\nconst PIE_CHART_NA_FALLBACK_VALUE = [0, 0, 1];\r\n\r\n@Component({\r\n    selector: 'jhi-course-detail-doughnut-chart',\r\n    templateUrl: './course-detail-doughnut-chart.component.html',\r\n    styleUrls: ['./course-detail-doughnut-chart.component.scss'],\r\n    imports: [RouterLink, NgClass, FaIconComponent, PieChartModule, ArtemisTranslatePipe],\r\n})\r\nexport class CourseDetailDoughnutChartComponent implements OnChanges, OnInit {\r\n    private router = inject(Router);\r\n\r\n    @Input() contentType: DoughnutChartType;\r\n    @Input() currentPercentage?: number;\r\n    @Input() currentAbsolute?: number;\r\n    @Input() currentMax?: number;\r\n    @Input() course: Course;\r\n    @Input() showText?: string;\r\n\r\n    receivedStats = false;\r\n    doughnutChartTitle: string;\r\n    stats: number[];\r\n    titleLink?: string;\r\n\r\n    // Icons\r\n    faSpinner = faSpinner;\r\n\r\n    // ngx-charts\r\n    ngxData: NgxChartsSingleSeriesDataEntry[] = [\r\n        { name: 'Done', value: 0 },\r\n        { name: 'Not done', value: 0 },\r\n        { name: 'N/A', value: 0 }, // fallback to display grey circle if there is no maxValue\r\n    ];\r\n    ngxColor = {\r\n        name: 'vivid',\r\n        selectable: true,\r\n        group: ScaleType.Ordinal,\r\n        domain: [GraphColors.GREEN, GraphColors.RED, GraphColors.LIGHT_GREY],\r\n    } as Color;\r\n    bindFormatting = this.valueFormatting.bind(this);\r\n\r\n    ngOnChanges() {\r\n        // [0, 0, 0] will lead to the chart not being displayed,\r\n        // assigning [0, 0, 1] (PIE_CHART_NA_FALLBACK_VALUE) works around this issue and displays 0 %, 0 / 0 with a grey circle\r\n        if (this.currentAbsolute == undefined && !this.receivedStats && !this.showText) {\r\n            this.updatePieChartData(PIE_CHART_NA_FALLBACK_VALUE);\r\n        } else {\r\n            this.receivedStats = true;\r\n            const remaining = roundValueSpecifiedByCourseSettings(this.currentMax! - this.currentAbsolute!, this.course);\r\n            this.stats = [this.currentAbsolute!, remaining, 0]; // done, not done, na\r\n            return this.currentMax === 0 ? this.updatePieChartData(PIE_CHART_NA_FALLBACK_VALUE) : this.updatePieChartData(this.stats);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Depending on the information we want to display in the doughnut chart, we need different titles and links\r\n     */\r\n    ngOnInit(): void {\r\n        switch (this.contentType) {\r\n            case DoughnutChartType.ASSESSMENT:\r\n                this.doughnutChartTitle = 'assessments';\r\n                this.titleLink = 'assessment-dashboard';\r\n                break;\r\n            case DoughnutChartType.COMPLAINTS:\r\n                this.doughnutChartTitle = 'complaints';\r\n                this.titleLink = 'complaints';\r\n                break;\r\n            case DoughnutChartType.FEEDBACK:\r\n                this.doughnutChartTitle = 'moreFeedback';\r\n                this.titleLink = 'more-feedback-requests';\r\n                break;\r\n            case DoughnutChartType.AVERAGE_COURSE_SCORE:\r\n                this.doughnutChartTitle = 'averageStudentScore';\r\n                this.titleLink = undefined;\r\n                if (this.course.isAtLeastInstructor) {\r\n                    this.titleLink = 'scores';\r\n                }\r\n                this.ngxData[0].name = 'Average score';\r\n                break;\r\n            case DoughnutChartType.CURRENT_LLM_COST:\r\n                this.doughnutChartTitle = 'currentTotalLLMCost';\r\n                this.titleLink = undefined;\r\n                break;\r\n            default:\r\n                this.doughnutChartTitle = '';\r\n                this.titleLink = undefined;\r\n        }\r\n        this.ngxData = [...this.ngxData];\r\n    }\r\n\r\n    /**\r\n     * handles clicks onto the graph, which then redirects the user to the corresponding page, e.g. complaints page for the complaints chart\r\n     */\r\n    openCorrespondingPage() {\r\n        if (this.course.id && this.titleLink) {\r\n            this.router.navigate(['/course-management', this.course.id, this.titleLink]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Assigns a given array of numbers to ngxData\r\n     * @param values the values that should be displayed by the chart\r\n     */\r\n    private updatePieChartData(values: number[]): void {\r\n        this.ngxData.forEach((entry: NgxChartsSingleSeriesDataEntry, index: number) => (entry.value = values[index]));\r\n        this.ngxData = [...this.ngxData];\r\n    }\r\n\r\n    /**\r\n     * Modifies the tooltip content of the chart.\r\n     * Returns absolute value represented by doughnut piece or 0 if the currentMax is 0.\r\n     * This is necessary in order to compensate the workaround for\r\n     * displaying a chart even if no values are there to display (i.e. currentMax is 0)\r\n     * @param data the default tooltip content that has to be replaced\r\n     * returns string representing custom tooltip content\r\n     */\r\n    valueFormatting(data: any): string {\r\n        return this.currentMax === 0 ? '0' : data.value;\r\n    }\r\n}\r\n", "<div class=\"doughnut mx-3\">\r\n    @if (titleLink) {\r\n        <a [routerLink]=\"['/course-management', course.id, titleLink]\">\r\n            <div class=\"text-center h5 m-0\">{{ 'artemisApp.course.detail.' + doughnutChartTitle + 'Title' | artemisTranslate }}</div>\r\n        </a>\r\n    }\r\n    @if (!titleLink) {\r\n        <h5 class=\"text-center\">{{ 'artemisApp.course.detail.' + doughnutChartTitle + 'Title' | artemisTranslate }}</h5>\r\n    }\r\n    <div class=\"doughnut-chart-container\" [ngClass]=\"titleLink ? 'clickable' : ''\" (click)=\"openCorrespondingPage()\">\r\n        <div class=\"doughnut-chart-text\">\r\n            @if (receivedStats) {\r\n                @if (currentPercentage !== undefined) {\r\n                    <div class=\"h4\">{{ currentPercentage }}%</div>\r\n                } @else if (showText) {\r\n                    <div class=\"h4\">{{ showText }}</div>\r\n                }\r\n                @if (!showText) {\r\n                    <div class=\"h6\">{{ currentAbsolute }} / {{ currentMax }}</div>\r\n                } @else if (currentPercentage !== undefined) {\r\n                    <div class=\"h6\">{{ showText }}</div>\r\n                }\r\n            } @else {\r\n                <div class=\"h3\">\r\n                    <fa-icon [icon]=\"faSpinner\" animation=\"spin\" />\r\n                </div>\r\n            }\r\n        </div>\r\n        <ngx-charts-pie-chart [view]=\"[160, 160]\" [results]=\"ngxData\" [scheme]=\"ngxColor\" [doughnut]=\"true\" [tooltipText]=\"bindFormatting\" />\r\n    </div>\r\n</div>\r\n", "import { Component, Input, OnChanges, inject } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport dayjs from 'dayjs/esm';\r\nimport { CourseManagementService } from '../course-management.service';\r\nimport { Color, LineChartModule, ScaleType } from '@swimlane/ngx-charts';\r\nimport { roundScorePercentSpecifiedByCourseSettings } from 'app/shared/util/utils';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { faArrowLeft, faArrowRight, faSpinner } from '@fortawesome/free-solid-svg-icons';\r\nimport * as shape from 'd3-shape';\r\nimport { GraphColors } from 'app/entities/statistics.model';\r\nimport { ActiveStudentsChart } from 'app/shared/chart/active-students-chart';\r\nimport { mean } from 'simple-statistics';\r\nimport { RouterLink } from '@angular/router';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { HelpIconComponent } from 'app/shared/components/help-icon.component';\r\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\nexport enum SwitchTimeSpanDirection {\r\n    LEFT,\r\n    RIGHT,\r\n}\r\n\r\n@Component({\r\n    selector: 'jhi-course-detail-line-chart',\r\n    templateUrl: './course-detail-line-chart.component.html',\r\n    styleUrls: ['./course-detail-line-chart.component.scss'],\r\n    imports: [RouterLink, TranslateDirective, HelpIconComponent, NgbTooltip, FaIconComponent, LineChartModule, ArtemisDatePipe, ArtemisTranslatePipe],\r\n})\r\nexport class CourseDetailLineChartComponent extends ActiveStudentsChart implements OnChanges {\r\n    private service = inject(CourseManagementService);\r\n    private translateService = inject(TranslateService);\r\n\r\n    @Input()\r\n    course: Course;\r\n    @Input()\r\n    numberOfStudentsInCourse: number;\r\n    @Input()\r\n    initialStats: number[] | undefined;\r\n    loading = true;\r\n\r\n    displayedNumberOfWeeks: number = 8;\r\n    showsCurrentWeek = true;\r\n\r\n    // Chart related\r\n    chartTime: any;\r\n    amountOfStudents: string;\r\n    showLifetimeOverview = false;\r\n    overviewStats: number[];\r\n\r\n    // Left arrow -> decrease, right arrow -> increase\r\n    private currentPeriod = 0;\r\n\r\n    // NGX variables\r\n    chartColor: Color = {\r\n        name: 'vivid',\r\n        selectable: true,\r\n        group: ScaleType.Ordinal,\r\n        domain: [GraphColors.DARK_BLUE],\r\n    };\r\n    xAxisLabel: string;\r\n\r\n    data: any[];\r\n    // Data changes will be stored in the copy first, to trigger change detection when ready\r\n    dataCopy: { name: string; series: { name?: string; value?: number }[] }[] = [\r\n        {\r\n            name: '',\r\n            series: [{}],\r\n        },\r\n    ];\r\n    // Used for storing absolute values to display in tooltip\r\n    absoluteSeries: { absoluteValue?: number; name?: string }[] = [{}];\r\n    curve: any = shape.curveMonotoneX;\r\n    average = { name: 'Mean', value: 0 };\r\n    startDateDisplayed = false;\r\n\r\n    // Icons\r\n    faSpinner = faSpinner;\r\n    faArrowLeft = faArrowLeft;\r\n    faArrowRight = faArrowRight;\r\n\r\n    constructor() {\r\n        super();\r\n        this.translateService.onLangChange.subscribe(() => {\r\n            this.loadTranslations();\r\n        });\r\n    }\r\n\r\n    ngOnChanges() {\r\n        this.amountOfStudents = this.translateService.instant('artemisApp.courseStatistics.amountOfStudents');\r\n        this.loadTranslations();\r\n        this.determineDisplayedPeriod(this.course, this.displayedNumberOfWeeks);\r\n        /*\r\n        if the course has a start date and already ended\r\n        (i.e. the time difference between today and the course end date is at least one week), we show the lifetime overview by default.\r\n         */\r\n        if (this.course.startDate && !!this.currentOffsetToEndDate) {\r\n            this.showLifetimeOverview = true;\r\n            this.displayLifetimeOverview();\r\n        } else {\r\n            this.displayPeriodOverview(this.displayedNumberOfWeeks);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reload the chart with the new data after an arrow is clicked\r\n     */\r\n    private reloadChart() {\r\n        this.loading = true;\r\n        this.createLabels();\r\n        this.service.getStatisticsData(this.course.id!, this.currentPeriod, this.displayedNumberOfWeeks).subscribe((res: number[]) => {\r\n            this.processDataAndCreateChart(res);\r\n            this.data = [...this.dataCopy];\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Takes the data, converts it into percentage and sets it accordingly\r\n     */\r\n    private processDataAndCreateChart(array: number[]) {\r\n        let currentMean = 0;\r\n        if (this.numberOfStudentsInCourse > 0) {\r\n            const allValues = [];\r\n            for (let i = 0; i < array.length; i++) {\r\n                allValues.push(roundScorePercentSpecifiedByCourseSettings(array[i] / this.numberOfStudentsInCourse, this.course));\r\n                this.dataCopy[0].series[i]['value'] = roundScorePercentSpecifiedByCourseSettings(array[i] / this.numberOfStudentsInCourse, this.course); // allValues[i];\r\n                this.absoluteSeries[i]['absoluteValue'] = array[i];\r\n            }\r\n            currentMean = allValues.length > 0 ? mean(allValues) : 0;\r\n        } else {\r\n            for (let i = 0; i < this.currentSpanSize; i++) {\r\n                this.dataCopy[0].series[i]['value'] = 0;\r\n                this.absoluteSeries[i]['absoluteValue'] = 0;\r\n            }\r\n        }\r\n\r\n        this.average.name = this.translateService.instant('artemisApp.courseStatistics.average') + currentMean.toFixed(2) + '%';\r\n        this.average.value = currentMean;\r\n        this.loading = false;\r\n    }\r\n\r\n    private createLabels() {\r\n        this.dataCopy[0].series = [{}];\r\n        this.absoluteSeries = [{}];\r\n        let startDate: dayjs.Dayjs;\r\n        let endDate: dayjs.Dayjs;\r\n        if (this.showLifetimeOverview) {\r\n            startDate = this.course.startDate!;\r\n            endDate = dayjs().subtract(this.currentOffsetToEndDate, 'weeks');\r\n            this.currentSpanSize = this.determineDifferenceBetweenIsoWeeks(this.course.startDate!, endDate) + 1;\r\n        } else {\r\n            /*\r\n        This variable contains the number of weeks between the last displayed week in the chart and the current date.\r\n        If the end date is already passed, currentOffsetToEndDate represents the number of weeks between the course end date and the current date.\r\n        displayedNumberOfWeeks determines the normal scope of the chart (usually 17 weeks).\r\n        currentPeriod indicates how many times the observer shifted the scope in the past (by pressing the arrow)\r\n         */\r\n            const diffToLastChartWeek = this.currentOffsetToEndDate - this.displayedNumberOfWeeks * this.currentPeriod;\r\n            endDate = dayjs().subtract(diffToLastChartWeek, 'weeks');\r\n            const remainingWeeksTillStartDate = this.course.startDate ? this.determineDifferenceBetweenIsoWeeks(this.course.startDate, endDate) + 1 : this.displayedNumberOfWeeks;\r\n            this.currentSpanSize = Math.min(remainingWeeksTillStartDate, this.displayedNumberOfWeeks);\r\n            // for the start date, we subtract the currently possible span size - 1 from the end date in addition\r\n            startDate = dayjs().subtract(diffToLastChartWeek + this.currentSpanSize - 1, 'weeks');\r\n            this.startDateDisplayed = !!this.course.startDate && remainingWeeksTillStartDate <= this.displayedNumberOfWeeks;\r\n        }\r\n        this.assignLabelsToDataObjects();\r\n        this.chartTime = startDate.isoWeekday(1).format('DD.MM.YYYY') + ' - ' + endDate.isoWeekday(7).format('DD.MM.YYYY');\r\n        this.dataCopy[0].name = this.amountOfStudents;\r\n    }\r\n\r\n    switchTimeSpan(direction: SwitchTimeSpanDirection): void {\r\n        if (direction === SwitchTimeSpanDirection.RIGHT) {\r\n            this.currentPeriod += 1;\r\n        } else if (direction === SwitchTimeSpanDirection.LEFT) {\r\n            this.currentPeriod -= 1;\r\n        }\r\n        this.showsCurrentWeek = this.currentPeriod === 0;\r\n        this.reloadChart();\r\n    }\r\n\r\n    formatYAxis(value: any) {\r\n        return value.toLocaleString() + ' %';\r\n    }\r\n\r\n    /**\r\n     * Using the model, we look for the entry with the same title (CW XX) and return the absolute value for this entry\r\n     */\r\n    findAbsoluteValue(model: any) {\r\n        const result: any = this.absoluteSeries.find((entry: any) => entry.name === model.name);\r\n        return result ? result.absoluteValue : '/';\r\n    }\r\n\r\n    /**\r\n     * Creates the chart for the default scope\r\n     */\r\n    displayPeriodOverview(periodSize: number): void {\r\n        this.currentPeriod = 0;\r\n        this.displayedNumberOfWeeks = periodSize;\r\n        this.showLifetimeOverview = false;\r\n        this.loading = true;\r\n        this.createLabels();\r\n\r\n        if (!this.initialStats) {\r\n            this.reloadChart();\r\n        } else {\r\n            this.processDataAndCreateChart(this.initialStats.slice(Math.max(this.initialStats.length - this.displayedNumberOfWeeks, 0)));\r\n            this.data = [...this.dataCopy];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates the chart for the lifetime overview\r\n     */\r\n    displayLifetimeOverview(): void {\r\n        // if the course does not have a start date, we can't create an meaningful lifetime overview\r\n        if (!this.course.startDate) {\r\n            return;\r\n        }\r\n        this.showLifetimeOverview = true;\r\n        this.loading = true;\r\n        this.currentPeriod = 0;\r\n        this.startDateDisplayed = true;\r\n        this.showsCurrentWeek = true;\r\n        this.createLabels();\r\n        // we cache the overview stats to prevent many server requests\r\n        if (!this.overviewStats) {\r\n            this.fetchLifetimeOverviewData();\r\n        } else {\r\n            this.processDataAndCreateChart(this.overviewStats);\r\n            this.data = [...this.dataCopy];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Auxiliary method reducing the complexity of {@link CourseDetailLineChartComponent#createLabels}\r\n     * Assigns the correct calendar week numbers to the corresponding data objects as string\r\n     * Note: the conversion to strings is important as ngx-charts increases the tick steps of on the x axis otherwise\r\n     */\r\n    private assignLabelsToDataObjects(): void {\r\n        let currentWeek;\r\n        for (let i = 0; i < this.currentSpanSize; i++) {\r\n            currentWeek = dayjs()\r\n                .subtract(this.currentOffsetToEndDate + this.currentSpanSize - 1 - this.displayedNumberOfWeeks * this.currentPeriod - i, 'weeks')\r\n                .isoWeekday(1)\r\n                .isoWeek();\r\n            this.dataCopy[0].series[i] = {};\r\n            this.dataCopy[0].series[i]['name'] = currentWeek.toString();\r\n            this.absoluteSeries[i] = {};\r\n            this.absoluteSeries[i]['name'] = currentWeek.toString();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Fetches and caches the data for the lifetime overview from the server and creates the chart\r\n     */\r\n    private fetchLifetimeOverviewData(): void {\r\n        this.service.getStatisticsForLifetimeOverview(this.course.id!).subscribe((res: number[]) => {\r\n            this.overviewStats = res;\r\n            this.processDataAndCreateChart(this.overviewStats);\r\n            this.data = [...this.dataCopy];\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Auxiliary method handles the translation sensitivity of the x axis label\r\n     */\r\n    private loadTranslations() {\r\n        this.xAxisLabel = this.translateService.instant('artemisApp.courseStatistics.calendarWeek');\r\n        this.average.name = this.translateService.instant('artemisApp.courseStatistics.average') + this.average.value.toFixed(2) + '%';\r\n    }\r\n\r\n    protected readonly SwitchTimeSpanDirection = SwitchTimeSpanDirection;\r\n}\r\n", "<div class=\"course-detail-parent-container col\">\r\n    <div class=\"d-flex flex-nowrap justify-content-center gap-2 mt-3\">\r\n        <a [routerLink]=\"['/course-management', course.id, 'course-statistics']\" class=\"text-center\">\r\n            <h5 jhiTranslate=\"artemisApp.courseStatistics.activeStudents\"></h5>\r\n        </a>\r\n        <jhi-help-icon class=\"chart-explanation-tooltip\" placement=\"right auto\" text=\"artemisApp.courseStatistics.activeStudentsExplanation\" />\r\n    </div>\r\n    @if (startDateAlreadyPassed) {\r\n        <ng-container>\r\n            <div>\r\n                <div class=\"d-flex gap-3 justify-content-end me-3\">\r\n                    @if (course.startDate) {\r\n                        <div class=\"d-flex\">\r\n                            <button\r\n                                class=\"btn\"\r\n                                [disabled]=\"!showLifetimeOverview && displayedNumberOfWeeks === 4\"\r\n                                (click)=\"displayPeriodOverview(4)\"\r\n                                ngbTooltip=\"{{ 'artemisApp.courseStatistics.scopeButton.periodTooltip' | artemisTranslate: { amount: 4 } }}\"\r\n                                jhiTranslate=\"artemisApp.courseStatistics.scopeButton.period\"\r\n                                [translateValues]=\"{ amount: 4 }\"\r\n                            ></button>\r\n                            <button\r\n                                class=\"btn\"\r\n                                [disabled]=\"!showLifetimeOverview && displayedNumberOfWeeks === 8\"\r\n                                (click)=\"displayPeriodOverview(8)\"\r\n                                ngbTooltip=\"{{ 'artemisApp.courseStatistics.scopeButton.periodTooltip' | artemisTranslate: { amount: 8 } }}\"\r\n                                jhiTranslate=\"artemisApp.courseStatistics.scopeButton.period\"\r\n                                [translateValues]=\"{ amount: 8 }\"\r\n                            ></button>\r\n                            <button\r\n                                class=\"btn\"\r\n                                [disabled]=\"showLifetimeOverview\"\r\n                                (click)=\"displayLifetimeOverview()\"\r\n                                ngbTooltip=\"{{ 'artemisApp.courseStatistics.scopeButton.overviewTooltip' | artemisTranslate }}\"\r\n                                jhiTranslate=\"artemisApp.courseStatistics.scopeButton.overview\"\r\n                            ></button>\r\n                        </div>\r\n                        <span class=\"pt-1\">|</span>\r\n                    }\r\n                    <div class=\"d-flex gap-1\">\r\n                        <button class=\"btn\" [disabled]=\"startDateDisplayed\" (click)=\"switchTimeSpan(SwitchTimeSpanDirection.LEFT)\">\r\n                            <fa-icon [icon]=\"faArrowLeft\" />\r\n                        </button>\r\n                        <button class=\"btn\" [disabled]=\"showsCurrentWeek\" (click)=\"switchTimeSpan(SwitchTimeSpanDirection.RIGHT)\">\r\n                            <fa-icon [icon]=\"faArrowRight\" />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div #containerRef class=\"d-flex mt-1 justify-content-center align-items-center h-99\">\r\n                    @if (!loading) {\r\n                        <ngx-charts-line-chart\r\n                            [view]=\"[containerRef.offsetWidth, 320]\"\r\n                            [scheme]=\"chartColor\"\r\n                            [showXAxisLabel]=\"true\"\r\n                            [xAxis]=\"true\"\r\n                            [yAxis]=\"true\"\r\n                            [xAxisLabel]=\"xAxisLabel\"\r\n                            [results]=\"data\"\r\n                            [yScaleMin]=\"0\"\r\n                            [yScaleMax]=\"100\"\r\n                            [yAxisTickFormatting]=\"formatYAxis\"\r\n                            [curve]=\"curve\"\r\n                            [referenceLines]=\"[average]\"\r\n                            [showRefLines]=\"true\"\r\n                            [showRefLabels]=\"true\"\r\n                        >\r\n                            <ng-template #tooltipTemplate let-model=\"model\">\r\n                                <span>{{ model.series }} in {{ model.name }}: </span><br />\r\n                                <b class=\"tooltip-header\">{{ findAbsoluteValue(model) }} ({{ model.value }}%)</b>\r\n                            </ng-template>\r\n                            <ng-template #seriesTooltipTemplate let-model=\"model\">\r\n                                @if (model.length) {\r\n                                    <span> {{ model[0].name }}: {{ findAbsoluteValue(model[0]) }} </span>\r\n                                }\r\n                            </ng-template>\r\n                        </ngx-charts-line-chart>\r\n                    } @else {\r\n                        <h1 class=\"spinner\">\r\n                            <fa-icon [icon]=\"faSpinner\" animation=\"spin\" />\r\n                        </h1>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n    } @else {\r\n        <ng-container>\r\n            <h4 class=\"text-center mt-3\" jhiTranslate=\"artemisApp.course.notStartedYet\"></h4>\r\n            <h3 class=\"text-center\">{{ course.startDate | artemisDate }}</h3>\r\n        </ng-container>\r\n    }\r\n</div>\r\n", "import { Component, OnDestroy, OnInit, inject } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { PROFILE_ATHENA, PROFILE_IRIS, PROFILE_LTI } from 'app/app.constants';\r\nimport { ProfileService } from 'app/shared/layouts/profiles/profile.service';\r\nimport { Subscription, firstValueFrom } from 'rxjs';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { CourseManagementService } from '../course-management.service';\r\nimport { CourseManagementDetailViewDto } from 'app/course/manage/course-management-detail-view-dto.model';\r\nimport { onError } from 'app/shared/util/global.utils';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { EventManager } from 'app/core/util/event-manager.service';\r\nimport { faChartBar, faClipboard, faEye, faFlag, faListAlt, faTable, faTimes, faWrench } from '@fortawesome/free-solid-svg-icons';\r\nimport { FeatureToggle, FeatureToggleService } from 'app/shared/feature-toggle/feature-toggle.service';\r\nimport { OrganizationManagementService } from 'app/admin/organization-management/organization-management.service';\r\nimport { IrisSettingsService } from 'app/iris/settings/shared/iris-settings.service';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\nimport { DetailOverviewSection, DetailType } from 'app/detail-overview-list/detail-overview-list.component';\r\nimport { ArtemisMarkdownService } from 'app/shared/markdown.service';\r\nimport { IrisSubSettingsType } from 'app/entities/iris/settings/iris-sub-settings.model';\r\nimport { Detail } from 'app/detail-overview-list/detail.model';\r\nimport { CourseDetailDoughnutChartComponent } from './course-detail-doughnut-chart.component';\r\nimport { CourseDetailLineChartComponent } from './course-detail-line-chart.component';\r\nimport { DetailOverviewListComponent } from 'app/detail-overview-list/detail-overview-list.component';\r\n\r\nexport enum DoughnutChartType {\r\n    ASSESSMENT = 'ASSESSMENT',\r\n    COMPLAINTS = 'COMPLAINTS',\r\n    FEEDBACK = 'FEEDBACK',\r\n    AVERAGE_COURSE_SCORE = 'AVERAGE_COURSE_SCORE',\r\n    AVERAGE_EXERCISE_SCORE = 'AVERAGE_EXERCISE_SCORE',\r\n    PARTICIPATIONS = 'PARTICIPATIONS',\r\n    QUESTIONS = 'QUESTIONS',\r\n    CURRENT_LLM_COST = 'LLM_COST',\r\n}\r\n\r\n@Component({\r\n    selector: 'jhi-course-detail',\r\n    templateUrl: './course-detail.component.html',\r\n    styleUrls: ['./course-detail.component.scss'],\r\n    imports: [CourseDetailDoughnutChartComponent, CourseDetailLineChartComponent, DetailOverviewListComponent],\r\n})\r\nexport class CourseDetailComponent implements OnInit, OnDestroy {\r\n    private eventManager = inject(EventManager);\r\n    private courseManagementService = inject(CourseManagementService);\r\n    private organizationService = inject(OrganizationManagementService);\r\n    private route = inject(ActivatedRoute);\r\n    private alertService = inject(AlertService);\r\n    private profileService = inject(ProfileService);\r\n    private accountService = inject(AccountService);\r\n    private irisSettingsService = inject(IrisSettingsService);\r\n    private markdownService = inject(ArtemisMarkdownService);\r\n    private featureToggleService = inject(FeatureToggleService);\r\n\r\n    readonly DoughnutChartType = DoughnutChartType;\r\n    readonly FeatureToggle = FeatureToggle;\r\n\r\n    courseDTO: CourseManagementDetailViewDto;\r\n    activeStudents?: number[];\r\n    course: Course;\r\n\r\n    courseDetailSections: DetailOverviewSection[];\r\n\r\n    messagingEnabled: boolean;\r\n    communicationEnabled: boolean;\r\n    irisEnabled = false;\r\n    irisChatEnabled = false;\r\n    ltiEnabled = false;\r\n    isAthenaEnabled = false;\r\n    tutorialEnabled = false;\r\n\r\n    isAdmin = false;\r\n\r\n    private eventSubscriber: Subscription;\r\n    paramSub: Subscription;\r\n\r\n    // Icons\r\n    faTimes = faTimes;\r\n    faEye = faEye;\r\n    faWrench = faWrench;\r\n    faTable = faTable;\r\n    faFlag = faFlag;\r\n    faListAlt = faListAlt;\r\n    faChartBar = faChartBar;\r\n    faClipboard = faClipboard;\r\n\r\n    /**\r\n     * On init load the course information and subscribe to listen for changes in courses.\r\n     */\r\n    async ngOnInit() {\r\n        this.tutorialEnabled = await firstValueFrom(this.featureToggleService.getFeatureToggleActive(FeatureToggle.TutorialGroups));\r\n        const profileInfo = await firstValueFrom(this.profileService.getProfileInfo());\r\n        this.ltiEnabled = profileInfo?.activeProfiles.includes(PROFILE_LTI);\r\n        this.isAthenaEnabled = profileInfo?.activeProfiles.includes(PROFILE_ATHENA);\r\n        this.irisEnabled = profileInfo?.activeProfiles.includes(PROFILE_IRIS);\r\n        if (this.irisEnabled) {\r\n            const irisSettings = await firstValueFrom(this.irisSettingsService.getGlobalSettings());\r\n            // TODO: Outdated, as we now have a bunch more sub settings\r\n            this.irisChatEnabled = irisSettings?.irisChatSettings?.enabled ?? false;\r\n        }\r\n        this.route.data.subscribe(({ course }) => {\r\n            if (course) {\r\n                this.course = course;\r\n                this.messagingEnabled = !!this.course.courseInformationSharingConfiguration?.includes('MESSAGING');\r\n                this.communicationEnabled = !!this.course.courseInformationSharingConfiguration?.includes('COMMUNICATION');\r\n                this.fetchOrganizations(course.id);\r\n            }\r\n            this.isAdmin = this.accountService.isAdmin();\r\n            this.getCourseDetailSections();\r\n        });\r\n        this.paramSub = this.route.params.subscribe((params) => {\r\n            const courseId = params['courseId'];\r\n            this.fetchCourseStatistics(courseId);\r\n            this.registerChangeInCourses(courseId);\r\n        });\r\n    }\r\n\r\n    getGeneralDetailSection(): DetailOverviewSection {\r\n        const generalDetails: Detail[] = [\r\n            { type: DetailType.Text, title: 'artemisApp.course.title', data: { text: this.course.title } },\r\n            { type: DetailType.Text, title: 'artemisApp.course.shortName', data: { text: this.course.shortName } },\r\n            {\r\n                type: DetailType.Link,\r\n                title: 'artemisApp.course.studentGroupName',\r\n                data: {\r\n                    text: `${this.course.studentGroupName} (${this.course.numberOfStudents ?? 0})`,\r\n                    routerLink: this.course.isAtLeastInstructor ? ['/course-management', this.course.id, 'groups', 'students'] : undefined,\r\n                },\r\n            },\r\n            {\r\n                type: DetailType.Link,\r\n                title: 'artemisApp.course.teachingAssistantGroupName',\r\n                data: {\r\n                    text: `${this.course.teachingAssistantGroupName} (${this.course.numberOfTeachingAssistants ?? 0})`,\r\n                    routerLink: this.course.isAtLeastInstructor ? ['/course-management', this.course.id, 'groups', 'tutors'] : undefined,\r\n                },\r\n            },\r\n            {\r\n                type: DetailType.Link,\r\n                title: 'artemisApp.course.editorGroupName',\r\n                data: {\r\n                    text: `${this.course.editorGroupName} (${this.course.numberOfEditors ?? 0})`,\r\n                    routerLink: this.course.isAtLeastInstructor ? ['/course-management', this.course.id, 'groups', 'editors'] : undefined,\r\n                },\r\n            },\r\n            {\r\n                type: DetailType.Link,\r\n                title: 'artemisApp.course.instructorGroupName',\r\n                data: {\r\n                    text: `${this.course.instructorGroupName} (${this.course.numberOfInstructors ?? 0})`,\r\n                    routerLink: this.course.isAtLeastInstructor ? ['/course-management', this.course.id, 'groups', 'instructors'] : undefined,\r\n                },\r\n            },\r\n            { type: DetailType.Date, title: 'artemisApp.course.startDate', data: { date: this.course.startDate } },\r\n            { type: DetailType.Date, title: 'artemisApp.course.endDate', data: { date: this.course.endDate } },\r\n            { type: DetailType.Text, title: 'artemisApp.course.semester', data: { text: this.course.semester } },\r\n        ];\r\n\r\n        if (this.course.organizations?.length) {\r\n            // insert detail after shortName\r\n            generalDetails.splice(2, 0, {\r\n                type: DetailType.Text,\r\n                title: 'artemisApp.course.organizations',\r\n                data: { text: this.course.organizations.map((orga) => orga.name).join(', ') },\r\n            });\r\n        }\r\n        return {\r\n            headline: 'artemisApp.course.detail.sections.general',\r\n            details: generalDetails,\r\n        };\r\n    }\r\n\r\n    getComplaintsDetails(): Detail[] {\r\n        if (this.course.complaintsEnabled) {\r\n            return [\r\n                {\r\n                    type: DetailType.Text,\r\n                    title: 'artemisApp.course.maxComplaints.title',\r\n                    data: { text: this.course.maxComplaints },\r\n                },\r\n                {\r\n                    type: DetailType.Text,\r\n                    title: 'artemisApp.course.maxTeamComplaints.title',\r\n                    data: { text: this.course.maxTeamComplaints },\r\n                },\r\n                {\r\n                    type: DetailType.Text,\r\n                    title: 'artemisApp.course.maxComplaintTimeDays.title',\r\n                    data: { text: this.course.maxComplaintTimeDays },\r\n                },\r\n                {\r\n                    type: DetailType.Text,\r\n                    title: 'artemisApp.course.maxComplaintTextLimit.title',\r\n                    data: { text: this.course.maxComplaintTextLimit },\r\n                },\r\n                {\r\n                    type: DetailType.Text,\r\n                    title: 'artemisApp.course.maxComplaintResponseTextLimit.title',\r\n                    data: { text: this.course.maxComplaintResponseTextLimit },\r\n                },\r\n            ];\r\n        }\r\n        return [];\r\n    }\r\n\r\n    getAthenaDetails(): Detail[] {\r\n        const athenaDetails: Detail[] = [];\r\n        if (this.isAthenaEnabled) {\r\n            athenaDetails.push({\r\n                type: DetailType.Boolean,\r\n                title: 'artemisApp.course.restrictedAthenaModulesAccess.label',\r\n                data: { boolean: this.course.restrictedAthenaModulesAccess },\r\n            });\r\n        }\r\n        return athenaDetails;\r\n    }\r\n\r\n    getIrisDetails(): Detail[] {\r\n        const irisDetails: Detail[] = [];\r\n        if (this.irisEnabled && this.irisChatEnabled) {\r\n            irisDetails.push({\r\n                type: DetailType.ProgrammingIrisEnabled,\r\n                title: 'artemisApp.iris.settings.subSettings.enabled.chat',\r\n                data: { course: this.course, disabled: !this.isAdmin, subSettingsType: IrisSubSettingsType.CHAT },\r\n            });\r\n        }\r\n        return irisDetails;\r\n    }\r\n\r\n    getModeDetailSection(): DetailOverviewSection {\r\n        const complaintsDetails = this.getComplaintsDetails();\r\n        const athenaDetails = this.getAthenaDetails();\r\n        const irisDetails = this.getIrisDetails();\r\n\r\n        const details: Detail[] = [\r\n            { type: DetailType.Text, title: 'artemisApp.course.maxPoints.title', data: { text: this.course.maxPoints } },\r\n            {\r\n                type: DetailType.Text,\r\n                title: 'artemisApp.course.accuracyOfScores',\r\n                data: { text: this.course.accuracyOfScores },\r\n            },\r\n            {\r\n                type: DetailType.Text,\r\n                title: 'artemisApp.course.defaultProgrammingLanguage',\r\n                data: { text: this.course.defaultProgrammingLanguage },\r\n            },\r\n            {\r\n                type: DetailType.Boolean,\r\n                title: 'artemisApp.course.testCourse.title',\r\n                data: { boolean: this.course.testCourse },\r\n            },\r\n            ...complaintsDetails,\r\n            ...athenaDetails,\r\n            ...irisDetails,\r\n        ];\r\n\r\n        // inserting optional details in reversed order, so that no index calculation is needed\r\n        if (this.course.requestMoreFeedbackEnabled) {\r\n            // insert detail after the complaintDetails\r\n            details.splice(4 + complaintsDetails.length, 0, {\r\n                type: DetailType.Text,\r\n                title: 'artemisApp.course.maxRequestMoreFeedbackTimeDays.title',\r\n                data: { text: this.course.maxRequestMoreFeedbackTimeDays },\r\n            });\r\n        }\r\n\r\n        if (this.tutorialEnabled) {\r\n            // insert tutorial detail after lti detail\r\n            details.splice(4, 0, {\r\n                type: DetailType.Text,\r\n                title: 'artemisApp.forms.configurationForm.timeZoneInput.label',\r\n                titleHelpText: 'artemisApp.forms.configurationForm.timeZoneInput.beta',\r\n                data: { text: this.course.timeZone },\r\n            });\r\n        }\r\n\r\n        if (this.ltiEnabled) {\r\n            // insert lti detail after testCourse detail\r\n            details.splice(4, 0, {\r\n                type: DetailType.Boolean,\r\n                title: 'artemisApp.course.onlineCourse.title',\r\n                data: { boolean: this.course.onlineCourse },\r\n            });\r\n        }\r\n\r\n        return {\r\n            headline: 'artemisApp.course.detail.sections.mode',\r\n            details: details,\r\n        };\r\n    }\r\n\r\n    getEnrollmentDetailSection(): DetailOverviewSection {\r\n        const enrollmentDetails: Detail[] = [\r\n            { type: DetailType.Boolean, title: 'artemisApp.course.enrollmentEnabled.title', data: { boolean: this.course.enrollmentEnabled } },\r\n            { type: DetailType.Boolean, title: 'artemisApp.course.unenrollmentEnabled.title', data: { boolean: this.course.unenrollmentEnabled } },\r\n        ];\r\n\r\n        if (this.course.enrollmentEnabled) {\r\n            // insert enrollment details after enrollmentEnabled detail\r\n            enrollmentDetails.splice(\r\n                1,\r\n                0,\r\n                { type: DetailType.Date, title: 'artemisApp.course.enrollmentStartDate', data: { date: this.course.enrollmentStartDate } },\r\n                { type: DetailType.Date, title: 'artemisApp.course.enrollmentEndDate', data: { date: this.course.enrollmentEndDate } },\r\n                {\r\n                    type: DetailType.Markdown,\r\n                    title: 'artemisApp.course.enrollmentConfirmationMessage',\r\n                    data: { innerHtml: this.markdownService.safeHtmlForMarkdown(this.course.enrollmentConfirmationMessage) },\r\n                },\r\n            );\r\n        }\r\n\r\n        if (this.course.unenrollmentEnabled) {\r\n            // insert unenrollment detail after unenrollmentEnabled detail\r\n            enrollmentDetails.push({ type: DetailType.Date, title: 'artemisApp.course.unenrollmentEndDate', data: { date: this.course.unenrollmentEndDate } });\r\n        }\r\n        return {\r\n            headline: 'artemisApp.course.detail.sections.enrollment',\r\n            details: enrollmentDetails,\r\n        };\r\n    }\r\n\r\n    getMessagingDetailSection(): DetailOverviewSection {\r\n        return {\r\n            headline: 'artemisApp.course.detail.sections.messaging',\r\n            details: [\r\n                { type: DetailType.Boolean, title: 'artemisApp.course.courseCommunicationSetting.communicationEnabled.label', data: { boolean: this.communicationEnabled } },\r\n                { type: DetailType.Boolean, title: 'artemisApp.course.courseCommunicationSetting.messagingEnabled.label', data: { boolean: this.messagingEnabled } },\r\n                {\r\n                    type: DetailType.Markdown,\r\n                    title: 'artemisApp.course.courseCommunicationSetting.messagingEnabled.codeOfConduct',\r\n                    data: { innerHtml: this.markdownService.safeHtmlForMarkdown(this.course.courseInformationSharingMessagingCodeOfConduct) },\r\n                },\r\n            ],\r\n        };\r\n    }\r\n\r\n    getCourseDetailSections() {\r\n        const generalSection = this.getGeneralDetailSection();\r\n        const modeSection = this.getModeDetailSection();\r\n        const enrollmentSection = this.getEnrollmentDetailSection();\r\n        const messagingSection = this.getMessagingDetailSection();\r\n        this.courseDetailSections = [generalSection, modeSection, enrollmentSection, messagingSection];\r\n    }\r\n\r\n    /**\r\n     * Subscribe to changes in courses and reload the course after a change.\r\n     */\r\n    registerChangeInCourses(courseId: number) {\r\n        this.eventSubscriber = this.eventManager.subscribe('courseListModification', () => {\r\n            this.courseManagementService.find(courseId).subscribe((courseResponse) => {\r\n                this.course = courseResponse.body!;\r\n                this.getCourseDetailSections();\r\n            });\r\n            this.fetchCourseStatistics(courseId);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * On destroy unsubscribe all subscriptions.\r\n     */\r\n    ngOnDestroy() {\r\n        if (this.paramSub) {\r\n            this.paramSub.unsubscribe();\r\n        }\r\n        this.eventManager?.destroy(this.eventSubscriber);\r\n    }\r\n\r\n    /**\r\n     * fetch the course specific statistics separately because it takes quite long for larger courses\r\n     */\r\n    private fetchCourseStatistics(courseId: number) {\r\n        this.courseManagementService.getCourseStatisticsForDetailView(courseId).subscribe({\r\n            next: (courseResponse: HttpResponse<CourseManagementDetailViewDto>) => {\r\n                this.courseDTO = courseResponse.body!;\r\n                this.activeStudents = courseResponse.body!.activeStudents;\r\n            },\r\n            error: (error: HttpErrorResponse) => onError(this.alertService, error),\r\n        });\r\n    }\r\n\r\n    private fetchOrganizations(courseId: number) {\r\n        this.organizationService.getOrganizationsByCourse(courseId).subscribe((organizations) => {\r\n            this.course.organizations = organizations;\r\n            this.getCourseDetailSections();\r\n        });\r\n    }\r\n}\r\n", "<div class=\"row justify-content-center\">\r\n    @if (course) {\r\n        <div class=\"col-12\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xxl-4\">\r\n                    <div class=\"row\">\r\n                        <jhi-course-detail-doughnut-chart\r\n                            class=\"doughnut-container col-sm-6 my-3\"\r\n                            [course]=\"course\"\r\n                            [contentType]=\"DoughnutChartType.ASSESSMENT\"\r\n                            [currentPercentage]=\"courseDTO?.currentPercentageAssessments\"\r\n                            [currentAbsolute]=\"courseDTO?.currentAbsoluteAssessments\"\r\n                            [currentMax]=\"courseDTO?.currentMaxAssessments\"\r\n                        />\r\n                        @if (course.complaintsEnabled) {\r\n                            <jhi-course-detail-doughnut-chart\r\n                                class=\"doughnut-container col-sm-6 my-3\"\r\n                                [course]=\"course\"\r\n                                [contentType]=\"DoughnutChartType.COMPLAINTS\"\r\n                                [currentPercentage]=\"courseDTO?.currentPercentageComplaints\"\r\n                                [currentAbsolute]=\"courseDTO?.currentAbsoluteComplaints\"\r\n                                [currentMax]=\"courseDTO?.currentMaxComplaints\"\r\n                            />\r\n                        }\r\n                        @if (course.requestMoreFeedbackEnabled) {\r\n                            <jhi-course-detail-doughnut-chart\r\n                                class=\"doughnut-container col-sm-6 my-3\"\r\n                                [course]=\"course\"\r\n                                [contentType]=\"DoughnutChartType.FEEDBACK\"\r\n                                [currentPercentage]=\"courseDTO?.currentPercentageMoreFeedbacks\"\r\n                                [currentAbsolute]=\"courseDTO?.currentAbsoluteMoreFeedbacks\"\r\n                                [currentMax]=\"courseDTO?.currentMaxMoreFeedbacks\"\r\n                            />\r\n                        }\r\n                        <jhi-course-detail-doughnut-chart\r\n                            class=\"doughnut-container col-sm-6 my-3\"\r\n                            [course]=\"course\"\r\n                            [contentType]=\"DoughnutChartType.AVERAGE_COURSE_SCORE\"\r\n                            [currentPercentage]=\"courseDTO?.currentPercentageAverageScore\"\r\n                            [currentAbsolute]=\"courseDTO?.currentAbsoluteAverageScore\"\r\n                            [currentMax]=\"courseDTO?.currentMaxAverageScore\"\r\n                        />\r\n                        @if (this.irisChatEnabled || this.isAthenaEnabled) {\r\n                            <jhi-course-detail-doughnut-chart\r\n                                class=\"doughnut-container col-sm-6 my-3\"\r\n                                [course]=\"course\"\r\n                                [contentType]=\"DoughnutChartType.CURRENT_LLM_COST\"\r\n                                [showText]=\"courseDTO?.currentTotalLlmCostInEur + ' €'\"\r\n                                [currentMax]=\"0\"\r\n                            />\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <jhi-course-detail-line-chart class=\"col-xxl-8\" [course]=\"course\" [numberOfStudentsInCourse]=\"course.numberOfStudents!\" [initialStats]=\"activeStudents\" />\r\n            </div>\r\n        </div>\r\n    }\r\n    @if (courseDetailSections) {\r\n        <jhi-detail-overview-list [sections]=\"courseDetailSections\" class=\"col-12\" />\r\n    }\r\n</div>\r\n"],
  "mappings": "6uDCEQA,EAAA,EAAA;SAAA,EAAAC,EAAA,EAAA,IAAA,CAAA,EACID,EAAA,EAAA;aAAA,EAAAC,EAAA,EAAA,MAAA,CAAA,EAAgCD,EAAA,CAAA,0BAAmFE,EAAA,EACvHF,EAAA,EAAA;SAAA,EAAAE,EAAA,EACJF,EAAA,EAAA;KAAA,kBAHOG,EAAA,EAAAC,EAAA,aAAAC,EAAA,EAAAC,GAAAC,EAAAC,OAAAC,GAAAF,EAAAG,SAAA,CAAA,EACiCP,EAAA,CAAA,EAAAQ,EAAAC,EAAA,EAAA,EAAA,4BAAAL,EAAAM,mBAAA,OAAA,CAAA,6BAIpCb,EAAA,EAAA;SAAA,EAAAC,EAAA,EAAA,KAAA,CAAA,EAAwBD,EAAA,CAAA,0BAAmFE,EAAA,EAC/GF,EAAA,EAAA;KAAA,kBAD4BG,EAAA,CAAA,EAAAQ,EAAAC,EAAA,EAAA,EAAA,4BAAAL,EAAAM,mBAAA,OAAA,CAAA,6BAMZb,EAAA,EAAA;qBAAA,EAAAC,EAAA,EAAA,MAAA,CAAA,EAAgBD,EAAA,CAAA,EAAwBE,EAAA,EAC5CF,EAAA,EAAA;iBAAA,mBADoBG,EAAA,CAAA,EAAAW,EAAA,GAAAP,EAAAQ,kBAAA,GAAA,6BAEhBf,EAAA,EAAA;qBAAA,EAAAC,EAAA,EAAA,MAAA,CAAA,EAAgBD,EAAA,CAAA,EAAcE,EAAA,EAClCF,EAAA,EAAA;iBAAA,mBADoBG,EAAA,CAAA,EAAAQ,EAAAJ,EAAAS,QAAA,6BAGhBhB,EAAA,EAAA;qBAAA,EAAAC,EAAA,EAAA,MAAA,CAAA,EAAgBD,EAAA,CAAA,EAAwCE,EAAA,EAC5DF,EAAA,EAAA;iBAAA,mBADoBG,EAAA,CAAA,EAAAc,EAAA,GAAAV,EAAAW,gBAAA,MAAAX,EAAAY,WAAA,EAAA,6BAEhBnB,EAAA,EAAA;qBAAA,EAAAC,EAAA,EAAA,MAAA,CAAA,EAAgBD,EAAA,CAAA,EAAcE,EAAA,EAClCF,EAAA,EAAA;iBAAA,mBADoBG,EAAA,CAAA,EAAAQ,EAAAJ,EAAAS,QAAA,6BARpBhB,EAAA,EAAA;iBAAA,EAAAoB,EAAA,EAAAC,GAAA,EAAA,CAAA,EAAuC,EAAAC,GAAA,EAAA,CAAA,EAEhB,EAAAC,GAAA,EAAA,CAAA,EAGN,EAAAC,GAAA,EAAA,CAAA,kBALjBrB,EAAA,EAAAsB,EAAAlB,EAAAQ,oBAAAW,OAAA,EAAAnB,EAAAS,SAAA,EAAA,EAAA,EAKAb,EAAA,CAAA,EAAAsB,EAAAlB,EAAAS,SAAAT,EAAAQ,oBAAAW,OAAA,EAAA,GAAA,CAAA,6BAMA1B,EAAA,EAAA;iBAAA,EAAAC,EAAA,EAAA,MAAA,CAAA,EACID,EAAA,EAAA;qBAAA,EAAA2B,EAAA,EAAA,UAAA,EAAA,EACJ3B,EAAA,EAAA;iBAAA,EAAAE,EAAA,EACJF,EAAA,EAAA;aAAA,kBAFiBG,EAAA,CAAA,EAAAC,EAAA,OAAAG,EAAAqB,SAAA,GDX7B,IAAMC,GAA8B,CAAC,EAAG,EAAG,CAAC,EAQ/BC,IAAkC,IAAA,CAAzC,MAAOA,CAAkC,CACnCC,OAASC,EAAOC,EAAM,EAErBC,YACAnB,kBACAG,gBACAC,WACAX,OACAQ,SAETmB,cAAgB,GAChBtB,mBACAuB,MACA1B,UAGAkB,UAAYA,EAGZS,QAA4C,CACxC,CAAEC,KAAM,OAAQC,MAAO,CAAC,EACxB,CAAED,KAAM,WAAYC,MAAO,CAAC,EAC5B,CAAED,KAAM,MAAOC,MAAO,CAAC,CAAI,EAE/BC,SAAW,CACPF,KAAM,QACNG,WAAY,GACZC,MAAOC,EAAUC,QACjBC,OAAQ,CAACC,EAAYC,MAAOD,EAAYE,IAAKF,EAAYG,UAAU,GAEvEC,eAAiB,KAAKC,gBAAgBC,KAAK,IAAI,EAE/CC,aAAW,CAGP,GAAI,KAAKnC,iBAAmBQ,MAAa,CAAC,KAAKS,eAAiB,CAAC,KAAKnB,SAClE,KAAKsC,mBAAmBzB,EAA2B,MAChD,CACH,KAAKM,cAAgB,GACrB,IAAMoB,EAAYC,GAAoC,KAAKrC,WAAc,KAAKD,gBAAkB,KAAKV,MAAM,EAC3G,YAAK4B,MAAQ,CAAC,KAAKlB,gBAAkBqC,EAAW,CAAC,EAC1C,KAAKpC,aAAe,EAAI,KAAKmC,mBAAmBzB,EAA2B,EAAI,KAAKyB,mBAAmB,KAAKlB,KAAK,CAC5H,CACJ,CAKAqB,UAAQ,CACJ,OAAQ,KAAKvB,YAAW,CACpB,KAAKwB,EAAkBC,WACnB,KAAK9C,mBAAqB,cAC1B,KAAKH,UAAY,uBACjB,MACJ,KAAKgD,EAAkBE,WACnB,KAAK/C,mBAAqB,aAC1B,KAAKH,UAAY,aACjB,MACJ,KAAKgD,EAAkBG,SACnB,KAAKhD,mBAAqB,eAC1B,KAAKH,UAAY,yBACjB,MACJ,KAAKgD,EAAkBI,qBACnB,KAAKjD,mBAAqB,sBAC1B,KAAKH,UAAYgB,OACb,KAAKlB,OAAOuD,sBACZ,KAAKrD,UAAY,UAErB,KAAK2B,QAAQ,CAAC,EAAEC,KAAO,gBACvB,MACJ,KAAKoB,EAAkBM,iBACnB,KAAKnD,mBAAqB,sBAC1B,KAAKH,UAAYgB,OACjB,MACJ,QACI,KAAKb,mBAAqB,GAC1B,KAAKH,UAAYgB,MACzB,CACA,KAAKW,QAAU,CAAC,GAAG,KAAKA,OAAO,CACnC,CAKA4B,uBAAqB,CACb,KAAKzD,OAAOC,IAAM,KAAKC,WACvB,KAAKqB,OAAOmC,SAAS,CAAC,qBAAsB,KAAK1D,OAAOC,GAAI,KAAKC,SAAS,CAAC,CAEnF,CAMQ4C,mBAAmBa,EAAgB,CACvC,KAAK9B,QAAQ+B,QAAQ,CAACC,EAAuCC,IAAmBD,EAAM9B,MAAQ4B,EAAOG,CAAK,CAAE,EAC5G,KAAKjC,QAAU,CAAC,GAAG,KAAKA,OAAO,CACnC,CAUAc,gBAAgBoB,EAAS,CACrB,OAAO,KAAKpD,aAAe,EAAI,IAAMoD,EAAKhC,KAC9C,4CA7GST,EAAkC,2BAAlCA,EAAkC0C,UAAA,CAAA,CAAA,kCAAA,CAAA,EAAAC,OAAA,CAAAvC,YAAA,cAAAnB,kBAAA,oBAAAG,gBAAA,kBAAAC,WAAA,aAAAX,OAAA,SAAAQ,SAAA,UAAA,EAAA0D,SAAA,CAAAC,CAAA,EAAAC,MAAA,GAAAC,KAAA,GAAAC,OAAA,CAAA,CAAA,EAAA,WAAA,MAAA,EAAA,CAAA,EAAA,2BAAA,EAAA,QAAA,SAAA,EAAA,CAAA,EAAA,qBAAA,EAAA,CAAA,EAAA,OAAA,UAAA,SAAA,WAAA,aAAA,EAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,cAAA,KAAA,KAAA,EAAA,CAAA,EAAA,aAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,YAAA,OAAA,EAAA,MAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,ICrB/C/E,EAAA,EAAA,MAAA,CAAA,EACID,EAAA,EAAA;KAAA,EAAAoB,EAAA,EAAA8D,GAAA,EAAA,CAAA,EAAiB,EAAAC,GAAA,EAAA,CAAA,EAQjBlF,EAAA,EAAA,MAAA,CAAA,EAA+EmF,EAAA,QAAA,UAAA,CAAA,OAASH,EAAAhB,sBAAA,CAAuB,CAAA,EAC3GjE,EAAA,EAAA;SAAA,EAAAC,EAAA,EAAA,MAAA,CAAA,EACID,EAAA,EAAA;aAAA,EAAAoB,EAAA,EAAAiE,GAAA,EAAA,CAAA,EAAqB,EAAAC,GAAA,EAAA,CAAA,EAgBzBpF,EAAA,EACAF,EAAA,GAAA;SAAA,EAAA2B,EAAA,GAAA,uBAAA,CAAA,EACJ3B,EAAA,GAAA;KAAA,EAAAE,EAAA,EACJF,EAAA,GAAA;CAAA,EAAAE,EAAA,EACAF,EAAA,GAAA;CAAA,SA9BIG,EAAA,CAAA,EAAAsB,EAAAwD,EAAAvE,UAAA,EAAA,EAAA,EAKAP,EAAA,EAAAsB,EAAAwD,EAAAvE,UAAA,GAAA,CAAA,EAGsCP,EAAA,EAAAC,EAAA,UAAA6E,EAAAvE,UAAA,YAAA,EAAA,EAE9BP,EAAA,CAAA,EAAAsB,EAAAwD,EAAA9C,cAAA,EAAA,CAAA,EAiBkBhC,EAAA,CAAA,EAAAC,EAAA,OAAAmF,EAAA,EAAAC,EAAA,CAAA,EAAmB,UAAAP,EAAA5C,OAAA,EAAoB,SAAA4C,EAAAzC,QAAA,EAAoB,WAAA,EAAA,EAAkB,cAAAyC,EAAA/B,cAAA,kBDT7FuC,EAAYC,EAASC,EAAiBC,GAAcC,GAAEC,CAAoB,EAAAC,OAAA,CAAA,6iBAAA,CAAA,CAAA,SAE3EjE,CAAkC,GAAA,4JGTvBkE,EAAA,EAAA;yBAAA,EAAAC,EAAA,EAAA,MAAA,EAAA,EACID,EAAA,EAAA;6BAAA,EAAAC,EAAA,EAAA,SAAA,EAAA,0BAGIC,EAAA,QAAA,UAAA,CAAAC,EAAAC,CAAA,EAAA,IAAAC,EAAAC,EAAA,CAAA,EAAA,OAAAC,EAASF,EAAAG,sBAAsB,CAAC,CAAC,CAAA,CAAA,EAIpCC,EAAA,EACDT,EAAA,EAAA;6BAAA,EAAAC,EAAA,EAAA,SAAA,EAAA,0BAGIC,EAAA,QAAA,UAAA,CAAAC,EAAAC,CAAA,EAAA,IAAAC,EAAAC,EAAA,CAAA,EAAA,OAAAC,EAASF,EAAAG,sBAAsB,CAAC,CAAC,CAAA,CAAA,EAIpCC,EAAA,EACDT,EAAA,EAAA;6BAAA,EAAAC,EAAA,EAAA,SAAA,EAAA,2BAGIC,EAAA,QAAA,UAAA,CAAAC,EAAAC,CAAA,EAAA,IAAAC,EAAAC,EAAA,CAAA,EAAA,OAAAC,EAASF,EAAAK,wBAAA,CAAyB,CAAA,CAAA,EAGrCD,EAAA,EACLT,EAAA,GAAA;yBAAA,EAAAS,EAAA,EACAT,EAAA,GAAA;yBAAA,EAAAC,EAAA,GAAA,OAAA,EAAA,EAAmBD,EAAA,GAAA,GAAA,EAACS,EAAA,EACxBT,EAAA,GAAA;qBAAA,qBArBYW,EAAA,CAAA,EAAAC,EAAA,aAAAC,EAAA,EAAA,EAAA,wDAAAC,EAAA,GAAAC,EAAA,CAAA,CAAA,EAFAC,EAAA,WAAA,CAAAX,EAAAY,sBAAAZ,EAAAa,yBAAA,CAAA,EAAkE,kBAAAJ,EAAA,GAAAC,EAAA,CAAA,EAUlEJ,EAAA,CAAA,EAAAC,EAAA,aAAAC,EAAA,EAAA,GAAA,wDAAAC,EAAA,GAAAK,EAAA,CAAA,CAAA,EAFAH,EAAA,WAAA,CAAAX,EAAAY,sBAAAZ,EAAAa,yBAAA,CAAA,EAAkE,kBAAAJ,EAAA,GAAAK,EAAA,CAAA,EAUlER,EAAA,CAAA,EAAAC,EAAA,aAAAQ,EAAA,GAAA,GAAA,yDAAA,CAAA,EAFAJ,EAAA,WAAAX,EAAAY,oBAAA,6BAoCAjB,EAAA,EAAA;iCAAA,EAAAC,EAAA,EAAA,MAAA,EAAMD,EAAA,CAAA,EAAwCS,EAAA,EAAOY,EAAA,EAAA,IAAA,EACrDrB,EAAA,EAAA;iCAAA,EAAAC,EAAA,EAAA,IAAA,EAAA,EAA0BD,EAAA,CAAA,EAAmDS,EAAA,EACjFT,EAAA,EAAA;6BAAA,6BAFUW,EAAA,CAAA,EAAAW,EAAA,GAAAC,EAAAC,OAAA,OAAAD,EAAAE,KAAA,IAAA,EACoBd,EAAA,CAAA,EAAAW,EAAA,GAAAjB,EAAAqB,kBAAAH,CAAA,EAAA,KAAAA,EAAAI,MAAA,IAAA,6BAItB3B,EAAA,EAAA;qCAAA,EAAAC,EAAA,EAAA,MAAA,EAAOD,EAAA,CAAA,EAAuDS,EAAA,EAClET,EAAA,EAAA;iCAAA,+BADWW,EAAA,CAAA,EAAAW,EAAA,IAAAM,EAAA,CAAA,EAAAH,KAAA,KAAApB,EAAAqB,kBAAAE,EAAA,CAAA,CAAA,EAAA,GAAA,6BADX5B,EAAA,EAAA;iCAAA,EAAA6B,EAAA,EAAAC,GAAA,EAAA,CAAA,sBAAAnB,EAAA,EAAAoB,EAAAH,EAAAI,OAAA,EAAA,EAAA,6BArBRhC,EAAA,EAAA;yBAAA,EAAAC,EAAA,EAAA,wBAAA,EAAA,EAgBID,EAAA,EAAA;6BAAA,EAAA6B,EAAA,EAAAI,GAAA,EAAA,EAAA,cAAA,KAAA,EAAAC,CAAA,EAIAlC,EAAA,EAAA;6BAAA,EAAA6B,EAAA,EAAAM,GAAA,EAAA,EAAA,cAAA,KAAA,EAAAD,CAAA,EAKJlC,EAAA,EAAA;yBAAA,EAAAS,EAAA,EACJT,EAAA,EAAA;qBAAA,8BAzBQW,EAAA,EAAAK,EAAA,OAAAoB,EAAA,GAAAC,GAAAC,EAAAC,WAAA,CAAA,EAAwC,SAAAlC,EAAAmC,UAAA,EACnB,iBAAA,EAAA,EACE,QAAA,EAAA,EACT,QAAA,EAAA,EACA,aAAAnC,EAAAoC,UAAA,EACW,UAAApC,EAAAqC,IAAA,EACT,YAAA,CAAA,EACD,YAAA,GAAA,EACE,sBAAArC,EAAAsC,WAAA,EACkB,QAAAtC,EAAAuC,KAAA,EACpB,iBAAAR,EAAA,GAAAS,GAAAxC,EAAAyC,OAAA,CAAA,EACa,eAAA,EAAA,EACP,gBAAA,EAAA,6BAczB9C,EAAA,EAAA;yBAAA,EAAAC,EAAA,EAAA,KAAA,EAAA,EACID,EAAA,EAAA;6BAAA,EAAAqB,EAAA,EAAA,UAAA,EAAA,EACJrB,EAAA,EAAA;yBAAA,EAAAS,EAAA,EACJT,EAAA,EAAA;qBAAA,mBAFiBW,EAAA,CAAA,EAAAK,EAAA,OAAAX,EAAA0C,SAAA,sCAtE7B/C,EAAA,EAAA;SAAA,EAAAgD,EAAA,CAAA,EACIhD,EAAA,EAAA;aAAA,EAAAC,EAAA,EAAA,KAAA,EACID,EAAA,EAAA;iBAAA,EAAAC,EAAA,EAAA,MAAA,CAAA,EACID,EAAA,EAAA;qBAAA,EAAA6B,EAAA,EAAAoB,GAAA,GAAA,EAAA,EA4BAhD,EAAA,EAAA,MAAA,CAAA,EACID,EAAA,EAAA;yBAAA,EAAAC,EAAA,GAAA,SAAA,EAAA,EAAoDC,EAAA,QAAA,UAAA,CAAAC,EAAA+C,CAAA,EAAA,IAAA7C,EAAAC,EAAA,EAAA,OAAAC,EAASF,EAAA8C,eAAA9C,EAAA+C,wBAAAC,IAAA,CAA4C,CAAA,CAAA,EACrGrD,EAAA,GAAA;6BAAA,EAAAqB,EAAA,GAAA,UAAA,EAAA,EACJrB,EAAA,GAAA;yBAAA,EAAAS,EAAA,EACAT,EAAA,GAAA;yBAAA,EAAAC,EAAA,GAAA,SAAA,EAAA,EAAkDC,EAAA,QAAA,UAAA,CAAAC,EAAA+C,CAAA,EAAA,IAAA7C,EAAAC,EAAA,EAAA,OAAAC,EAASF,EAAA8C,eAAA9C,EAAA+C,wBAAAE,KAAA,CAA6C,CAAA,CAAA,EACpGtD,EAAA,GAAA;6BAAA,EAAAqB,EAAA,GAAA,UAAA,EAAA,EACJrB,EAAA,GAAA;yBAAA,EAAAS,EAAA,EACJT,EAAA,GAAA;qBAAA,EAAAS,EAAA,EACJT,EAAA,GAAA;iBAAA,EAAAS,EAAA,EACAT,EAAA,GAAA;iBAAA,EAAAC,EAAA,GAAA,MAAA,GAAA,CAAA,EACID,EAAA,GAAA;qBAAA,EAAA6B,EAAA,GAAA0B,GAAA,GAAA,EAAA,EAAgB,GAAAC,GAAA,EAAA,CAAA,EAgCpB/C,EAAA,EACJT,EAAA,GAAA;aAAA,EAAAS,EAAA,EACJT,EAAA,GAAA;SAAA,MACJA,EAAA,GAAA;KAAA,oBAzEgBW,EAAA,CAAA,EAAAoB,EAAA1B,EAAAoD,OAAAC,UAAA,EAAA,EAAA,EA6BwB/C,EAAA,CAAA,EAAAK,EAAA,WAAAX,EAAAsD,kBAAA,EACPhD,EAAA,CAAA,EAAAK,EAAA,OAAAX,EAAAuD,WAAA,EAEOjD,EAAA,CAAA,EAAAK,EAAA,WAAAX,EAAAwD,gBAAA,EACPlD,EAAA,CAAA,EAAAK,EAAA,OAAAX,EAAAyD,YAAA,EAKjBnD,EAAA,CAAA,EAAAoB,EAAA1B,EAAA0D,QAAA,GAAA,EAAA,6BAoCZ/D,EAAA,EAAA;SAAA,EAAAgD,EAAA,CAAA,EACIhD,EAAA,EAAA;aAAA,EAAAqB,EAAA,EAAA,KAAA,EAAA,EACArB,EAAA,EAAA;aAAA,EAAAC,EAAA,EAAA,KAAA,EAAA,EAAwBD,EAAA,CAAA,qBAAoCS,EAAA,EAChET,EAAA,EAAA;SAAA,MACJA,EAAA,EAAA;KAAA,kBAFgCW,EAAA,CAAA,EAAAqD,EAAA5C,EAAA,EAAA,EAAAf,EAAAoD,OAAAC,SAAA,CAAA,GDnEpC,IAAYN,EAAZ,SAAYA,EAAuB,CAC/BA,OAAAA,EAAAA,EAAA,KAAA,CAAA,EAAA,OACAA,EAAAA,EAAA,MAAA,CAAA,EAAA,QAFQA,CAGZ,EAHYA,GAAuB,CAAA,CAAA,EAWtBa,IAA+B,IAAA,CAAtC,MAAOA,UAAuCC,EAAmB,CAC3DC,QAAUC,EAAOC,CAAuB,EACxCC,iBAAmBF,EAAOG,EAAgB,EAGlDd,OAEAe,yBAEAC,aACAV,QAAU,GAEV7C,uBAAiC,EACjC2C,iBAAmB,GAGnBa,UACAC,iBACA1D,qBAAuB,GACvB2D,cAGQC,cAAgB,EAGxBrC,WAAoB,CAChBf,KAAM,QACNqD,WAAY,GACZC,MAAOC,EAAUC,QACjBC,OAAQ,CAACC,EAAYC,SAAS,GAElC3C,WAEAC,KAEA2C,SAA4E,CACxE,CACI5D,KAAM,GACND,OAAQ,CAAC,CAAA,CAAE,EACd,EAGL8D,eAA8D,CAAC,CAAA,CAAE,EACjE1C,MAAmB2C,GACnBzC,QAAU,CAAErB,KAAM,OAAQE,MAAO,CAAC,EAClCgC,mBAAqB,GAGrBZ,UAAYA,EACZa,YAAcA,GACdE,aAAeA,GAEf0B,aAAA,CACI,MAAK,EACL,KAAKlB,iBAAiBmB,aAAaC,UAAU,IAAK,CAC9C,KAAKC,iBAAgB,CACzB,CAAC,CACL,CAEAC,aAAW,CACP,KAAKjB,iBAAmB,KAAKL,iBAAiBuB,QAAQ,8CAA8C,EACpG,KAAKF,iBAAgB,EACrB,KAAKG,yBAAyB,KAAKrC,OAAQ,KAAKvC,sBAAsB,EAKlE,KAAKuC,OAAOC,WAAe,KAAKqC,wBAChC,KAAK9E,qBAAuB,GAC5B,KAAKP,wBAAuB,GAE5B,KAAKF,sBAAsB,KAAKU,sBAAsB,CAE9D,CAKQ8E,aAAW,CACf,KAAKjC,QAAU,GACf,KAAKkC,aAAY,EACjB,KAAK9B,QAAQ+B,kBAAkB,KAAKzC,OAAO0C,GAAK,KAAKtB,cAAe,KAAK3D,sBAAsB,EAAEwE,UAAWU,GAAiB,CACzH,KAAKC,0BAA0BD,CAAG,EAClC,KAAK1D,KAAO,CAAC,GAAG,KAAK2C,QAAQ,CACjC,CAAC,CACL,CAKQgB,0BAA0BC,EAAe,CAC7C,IAAIC,EAAc,EAClB,GAAI,KAAK/B,yBAA2B,EAAG,CACnC,IAAMgC,EAAY,CAAA,EAClB,QAASC,EAAI,EAAGA,EAAIH,EAAMtE,OAAQyE,IAC9BD,EAAUE,KAAKC,EAA2CL,EAAMG,CAAC,EAAI,KAAKjC,yBAA0B,KAAKf,MAAM,CAAC,EAChH,KAAK4B,SAAS,CAAC,EAAE7D,OAAOiF,CAAC,EAAE,MAAWE,EAA2CL,EAAMG,CAAC,EAAI,KAAKjC,yBAA0B,KAAKf,MAAM,EACtI,KAAK6B,eAAemB,CAAC,EAAE,cAAmBH,EAAMG,CAAC,EAErDF,EAAcC,EAAUxE,OAAS,EAAI4E,GAAKJ,CAAS,EAAI,CAC3D,KACI,SAASC,EAAI,EAAGA,EAAI,KAAKI,gBAAiBJ,IACtC,KAAKpB,SAAS,CAAC,EAAE7D,OAAOiF,CAAC,EAAE,MAAW,EACtC,KAAKnB,eAAemB,CAAC,EAAE,cAAmB,EAIlD,KAAK3D,QAAQrB,KAAO,KAAK6C,iBAAiBuB,QAAQ,qCAAqC,EAAIU,EAAYO,QAAQ,CAAC,EAAI,IACpH,KAAKhE,QAAQnB,MAAQ4E,EACrB,KAAKxC,QAAU,EACnB,CAEQkC,cAAY,CAChB,KAAKZ,SAAS,CAAC,EAAE7D,OAAS,CAAC,CAAA,CAAE,EAC7B,KAAK8D,eAAiB,CAAC,CAAA,CAAE,EACzB,IAAI5B,EACAqD,EACJ,GAAI,KAAK9F,qBACLyC,EAAY,KAAKD,OAAOC,UACxBqD,EAAUC,EAAK,EAAGC,SAAS,KAAKlB,uBAAwB,OAAO,EAC/D,KAAKc,gBAAkB,KAAKK,mCAAmC,KAAKzD,OAAOC,UAAYqD,CAAO,EAAI,MAC/F,CAOH,IAAMI,EAAsB,KAAKpB,uBAAyB,KAAK7E,uBAAyB,KAAK2D,cAC7FkC,EAAUC,EAAK,EAAGC,SAASE,EAAqB,OAAO,EACvD,IAAMC,EAA8B,KAAK3D,OAAOC,UAAY,KAAKwD,mCAAmC,KAAKzD,OAAOC,UAAWqD,CAAO,EAAI,EAAI,KAAK7F,uBAC/I,KAAK2F,gBAAkBQ,KAAKC,IAAIF,EAA6B,KAAKlG,sBAAsB,EAExFwC,EAAYsD,EAAK,EAAGC,SAASE,EAAsB,KAAKN,gBAAkB,EAAG,OAAO,EACpF,KAAKlD,mBAAqB,CAAC,CAAC,KAAKF,OAAOC,WAAa0D,GAA+B,KAAKlG,sBAC7F,CACA,KAAKqG,0BAAyB,EAC9B,KAAK7C,UAAYhB,EAAU8D,WAAW,CAAC,EAAEC,OAAO,YAAY,EAAI,MAAQV,EAAQS,WAAW,CAAC,EAAEC,OAAO,YAAY,EACjH,KAAKpC,SAAS,CAAC,EAAE5D,KAAO,KAAKkD,gBACjC,CAEAxB,eAAeuE,EAAkC,CACzCA,IAActE,EAAwBE,MACtC,KAAKuB,eAAiB,EACf6C,IAActE,EAAwBC,OAC7C,KAAKwB,eAAiB,GAE1B,KAAKhB,iBAAmB,KAAKgB,gBAAkB,EAC/C,KAAKmB,YAAW,CACpB,CAEArD,YAAYhB,EAAU,CAClB,OAAOA,EAAMgG,eAAc,EAAK,IACpC,CAKAjG,kBAAkBkG,EAAU,CACxB,IAAMC,EAAc,KAAKvC,eAAewC,KAAMC,GAAeA,EAAMtG,OAASmG,EAAMnG,IAAI,EACtF,OAAOoG,EAASA,EAAOG,cAAgB,GAC3C,CAKAxH,sBAAsByH,EAAkB,CACpC,KAAKpD,cAAgB,EACrB,KAAK3D,uBAAyB+G,EAC9B,KAAKhH,qBAAuB,GAC5B,KAAK8C,QAAU,GACf,KAAKkC,aAAY,EAEZ,KAAKxB,cAGN,KAAK4B,0BAA0B,KAAK5B,aAAayD,MAAMb,KAAKc,IAAI,KAAK1D,aAAazC,OAAS,KAAKd,uBAAwB,CAAC,CAAC,CAAC,EAC3H,KAAKwB,KAAO,CAAC,GAAG,KAAK2C,QAAQ,GAH7B,KAAKW,YAAW,CAKxB,CAKAtF,yBAAuB,CAEd,KAAK+C,OAAOC,YAGjB,KAAKzC,qBAAuB,GAC5B,KAAK8C,QAAU,GACf,KAAKc,cAAgB,EACrB,KAAKlB,mBAAqB,GAC1B,KAAKE,iBAAmB,GACxB,KAAKoC,aAAY,EAEZ,KAAKrB,eAGN,KAAKyB,0BAA0B,KAAKzB,aAAa,EACjD,KAAKlC,KAAO,CAAC,GAAG,KAAK2C,QAAQ,GAH7B,KAAK+C,0BAAyB,EAKtC,CAOQb,2BAAyB,CAC7B,IAAIc,EACJ,QAAS5B,EAAI,EAAGA,EAAI,KAAKI,gBAAiBJ,IACtC4B,EAAcrB,EAAK,EACdC,SAAS,KAAKlB,uBAAyB,KAAKc,gBAAkB,EAAI,KAAK3F,uBAAyB,KAAK2D,cAAgB4B,EAAG,OAAO,EAC/He,WAAW,CAAC,EACZc,QAAO,EACZ,KAAKjD,SAAS,CAAC,EAAE7D,OAAOiF,CAAC,EAAI,CAAA,EAC7B,KAAKpB,SAAS,CAAC,EAAE7D,OAAOiF,CAAC,EAAE,KAAU4B,EAAYE,SAAQ,EACzD,KAAKjD,eAAemB,CAAC,EAAI,CAAA,EACzB,KAAKnB,eAAemB,CAAC,EAAE,KAAU4B,EAAYE,SAAQ,CAE7D,CAKQH,2BAAyB,CAC7B,KAAKjE,QAAQqE,iCAAiC,KAAK/E,OAAO0C,EAAG,EAAET,UAAWU,GAAiB,CACvF,KAAKxB,cAAgBwB,EACrB,KAAKC,0BAA0B,KAAKzB,aAAa,EACjD,KAAKlC,KAAO,CAAC,GAAG,KAAK2C,QAAQ,CACjC,CAAC,CACL,CAKQM,kBAAgB,CACpB,KAAKlD,WAAa,KAAK6B,iBAAiBuB,QAAQ,0CAA0C,EAC1F,KAAK/C,QAAQrB,KAAO,KAAK6C,iBAAiBuB,QAAQ,qCAAqC,EAAI,KAAK/C,QAAQnB,MAAMmF,QAAQ,CAAC,EAAI,GAC/H,CAEmB1D,wBAA0BA,6CAlPpCa,EAA8B,2BAA9BA,EAA8BwE,UAAA,CAAA,CAAA,8BAAA,CAAA,EAAAC,OAAA,CAAAjF,OAAA,SAAAe,yBAAA,2BAAAC,aAAA,cAAA,EAAAkE,SAAA,CAAAC,EAAAC,CAAA,EAAAC,MAAA,GAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,eAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,EAAA,CAAA,wBAAA,EAAA,EAAA,CAAA,EAAA,iCAAA,KAAA,EAAA,CAAA,EAAA,SAAA,cAAA,yBAAA,QAAA,MAAA,EAAA,CAAA,EAAA,cAAA,EAAA,YAAA,EAAA,CAAA,eAAA,4CAAA,EAAA,CAAA,YAAA,aAAA,OAAA,wDAAA,EAAA,2BAAA,EAAA,CAAA,EAAA,SAAA,QAAA,sBAAA,MAAA,EAAA,CAAA,EAAA,SAAA,OAAA,EAAA,CAAA,EAAA,MAAA,EAAA,QAAA,UAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,EAAA,SAAA,OAAA,yBAAA,qBAAA,MAAA,EAAA,CAAA,EAAA,QAAA,EAAA,CAAA,eAAA,iDAAA,EAAA,MAAA,EAAA,QAAA,WAAA,aAAA,iBAAA,EAAA,CAAA,eAAA,mDAAA,EAAA,MAAA,EAAA,QAAA,WAAA,YAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,EAAA,OAAA,SAAA,iBAAA,QAAA,QAAA,aAAA,UAAA,YAAA,YAAA,sBAAA,QAAA,iBAAA,eAAA,eAAA,EAAA,CAAA,EAAA,gBAAA,EAAA,CAAA,EAAA,SAAA,EAAA,CAAA,YAAA,OAAA,EAAA,MAAA,EAAA,CAAA,eAAA,kCAAA,EAAA,cAAA,MAAA,EAAA,CAAA,EAAA,aAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,IC/B3CjJ,EAAA,EAAA,MAAA,CAAA,EACID,EAAA,EAAA;KAAA,EAAAC,EAAA,EAAA,MAAA,CAAA,EACID,EAAA,EAAA;SAAA,EAAAC,EAAA,EAAA,IAAA,CAAA,EACID,EAAA,EAAA;aAAA,EAAAqB,EAAA,EAAA,KAAA,CAAA,EACJrB,EAAA,EAAA;SAAA,EAAAS,EAAA,EACAT,EAAA,EAAA;SAAA,EAAAqB,EAAA,EAAA,gBAAA,CAAA,EACJrB,EAAA,GAAA;KAAA,EAAAS,EAAA,EACAT,EAAA,GAAA;KAAA,EAAA6B,EAAA,GAAAuH,GAAA,GAAA,CAAA,EAA8B,GAAAC,GAAA,GAAA,CAAA,EAmFlC5I,EAAA,EACAT,EAAA,GAAA;CAAA,SAzFWW,EAAA,CAAA,EAAAK,EAAA,aAAAoB,EAAA,EAAAkH,GAAAH,EAAA1F,OAAA0C,EAAA,CAAA,EAKPxF,EAAA,CAAA,EAAAoB,EAAAoH,EAAAI,uBAAA,GAAA,EAAA,kBDsBUC,EAAYC,GAAoBC,GAAmBC,GAAYC,EAAiBC,GAAeC,GAAEC,GAAiBC,CAAoB,EAAAC,OAAA,CAAA,wCAAA,CAAA,CAAA,SAEvIhG,CAA+B,GAAA,4BGhBhBiG,EAAA,EAAA;6BAAA,EAAAC,EAAA,EAAA,mCAAA,CAAA,EAQJD,EAAA,EAAA;yBAAA,mBANQE,EAAA,EAAAC,EAAA,SAAAC,EAAAC,MAAA,EAAiB,cAAAD,EAAAE,kBAAAC,UAAA,EAC2B,oBAAAH,EAAAI,WAAA,KAAA,KAAAJ,EAAAI,UAAAC,2BAAA,EACgB,kBAAAL,EAAAI,WAAA,KAAA,KAAAJ,EAAAI,UAAAE,yBAAA,EACJ,aAAAN,EAAAI,WAAA,KAAA,KAAAJ,EAAAI,UAAAG,oBAAA,6BAK5DX,EAAA,EAAA;6BAAA,EAAAC,EAAA,EAAA,mCAAA,CAAA,EAQJD,EAAA,EAAA;yBAAA,mBANQE,EAAA,EAAAC,EAAA,SAAAC,EAAAC,MAAA,EAAiB,cAAAD,EAAAE,kBAAAM,QAAA,EACyB,oBAAAR,EAAAI,WAAA,KAAA,KAAAJ,EAAAI,UAAAK,8BAAA,EACqB,kBAAAT,EAAAI,WAAA,KAAA,KAAAJ,EAAAI,UAAAM,4BAAA,EACJ,aAAAV,EAAAI,WAAA,KAAA,KAAAJ,EAAAI,UAAAO,uBAAA,6BAa/Df,EAAA,EAAA;6BAAA,EAAAC,EAAA,EAAA,mCAAA,CAAA,EAOJD,EAAA,EAAA;yBAAA,mBALQE,EAAA,EAAAC,EAAA,SAAAC,EAAAC,MAAA,EAAiB,cAAAD,EAAAE,kBAAAU,gBAAA,EACiC,YAAAZ,EAAAI,WAAA,KAAA,KAAAJ,EAAAI,UAAAS,0BAAA,SAAA,EACK,aAAA,CAAA,6BA7C/EjB,EAAA,EAAA;SAAA,EAAAkB,EAAA,EAAA,MAAA,CAAA,EACIlB,EAAA,EAAA;aAAA,EAAAkB,EAAA,EAAA,MAAA,CAAA,EACIlB,EAAA,EAAA;iBAAA,EAAAkB,EAAA,EAAA,MAAA,CAAA,EACIlB,EAAA,EAAA;qBAAA,EAAAkB,EAAA,EAAA,MAAA,CAAA,EACIlB,EAAA,EAAA;yBAAA,EAAAC,EAAA,EAAA,mCAAA,CAAA,EAQAD,EAAA,GAAA;yBAAA,EAAAmB,EAAA,GAAAC,GAAA,EAAA,CAAA,EAAgC,GAAAC,GAAA,EAAA,CAAA,EAoBhCpB,EAAA,GAAA,mCAAA,CAAA,EAQAD,EAAA,GAAA;yBAAA,EAAAmB,EAAA,GAAAG,GAAA,EAAA,CAAA,EASJC,EAAA,EACJvB,EAAA,GAAA;iBAAA,EAAAuB,EAAA,EACAvB,EAAA,GAAA;iBAAA,EAAAC,EAAA,GAAA,+BAAA,CAAA,EACJD,EAAA,GAAA;aAAA,EAAAuB,EAAA,EACJvB,EAAA,GAAA;SAAA,EAAAuB,EAAA,EACJvB,EAAA,GAAA;KAAA,kBAhDwBE,EAAA,CAAA,EAAAC,EAAA,SAAAC,EAAAC,MAAA,EAAiB,cAAAD,EAAAE,kBAAAkB,UAAA,EAC2B,oBAAApB,EAAAI,WAAA,KAAA,KAAAJ,EAAAI,UAAAiB,4BAAA,EACiB,kBAAArB,EAAAI,WAAA,KAAA,KAAAJ,EAAAI,UAAAkB,0BAAA,EACJ,aAAAtB,EAAAI,WAAA,KAAA,KAAAJ,EAAAI,UAAAmB,qBAAA,EAG7DzB,EAAA,CAAA,EAAA0B,EAAAxB,EAAAC,OAAAwB,kBAAA,GAAA,EAAA,EAUA3B,EAAA,EAAA0B,EAAAxB,EAAAC,OAAAyB,2BAAA,GAAA,EAAA,EAYI5B,EAAA,EAAAC,EAAA,SAAAC,EAAAC,MAAA,EAAiB,cAAAD,EAAAE,kBAAAyB,oBAAA,EACqC,oBAAA3B,EAAAI,WAAA,KAAA,KAAAJ,EAAAI,UAAAwB,6BAAA,EACQ,kBAAA5B,EAAAI,WAAA,KAAA,KAAAJ,EAAAI,UAAAyB,2BAAA,EACJ,aAAA7B,EAAAI,WAAA,KAAA,KAAAJ,EAAAI,UAAA0B,sBAAA,EAG9DhC,EAAA,CAAA,EAAA0B,EAAAxB,EAAA+B,iBAAA/B,EAAAgC,gBAAA,GAAA,EAAA,EAWwClC,EAAA,CAAA,EAAAC,EAAA,SAAAC,EAAAC,MAAA,EAAiB,2BAAAD,EAAAC,OAAAgC,gBAAA,EAAsD,eAAAjC,EAAAkC,cAAA,6BAK/HtC,EAAA,EAAA;SAAA,EAAAC,EAAA,EAAA,2BAAA,CAAA,EACJD,EAAA,EAAA;KAAA,kBAD8BE,EAAA,EAAAC,EAAA,WAAAC,EAAAmC,oBAAA,GDjClC,IAAYjC,EAAZ,SAAYA,EAAiB,CACzBA,OAAAA,EAAA,WAAA,aACAA,EAAA,WAAA,aACAA,EAAA,SAAA,WACAA,EAAA,qBAAA,uBACAA,EAAA,uBAAA,yBACAA,EAAA,eAAA,iBACAA,EAAA,UAAA,YACAA,EAAA,iBAAA,WARQA,CASZ,EATYA,GAAiB,CAAA,CAAA,EAiBhBkC,IAAqB,IAAA,CAA5B,MAAOA,CAAqB,CACtBC,aAAeC,EAAOC,EAAY,EAClCC,wBAA0BF,EAAOG,CAAuB,EACxDC,oBAAsBJ,EAAOK,EAA6B,EAC1DC,MAAQN,EAAOO,CAAc,EAC7BC,aAAeR,EAAOS,EAAY,EAClCC,eAAiBV,EAAOW,EAAc,EACtCC,eAAiBZ,EAAOa,EAAc,EACtCC,oBAAsBd,EAAOe,EAAmB,EAChDC,gBAAkBhB,EAAOiB,EAAsB,EAC/CC,qBAAuBlB,EAAOmB,EAAoB,EAEjDvD,kBAAoBA,EACpBwD,cAAgBA,EAEzBtD,UACA8B,eACAjC,OAEAkC,qBAEAwB,iBACAC,qBACAC,YAAc,GACd9B,gBAAkB,GAClB+B,WAAa,GACb9B,gBAAkB,GAClB+B,gBAAkB,GAElBC,QAAU,GAEFC,gBACRC,SAGAC,QAAUA,GACVC,MAAQA,GACRC,SAAWA,GACXC,QAAUA,GACVC,OAASA,GACTC,UAAYA,GACZC,WAAaA,GACbC,YAAcA,GAKRC,UAAQ,QAAAC,EAAA,sBACV,KAAKb,gBAAkB,MAAMc,EAAe,KAAKrB,qBAAqBsB,uBAAuBpB,EAAcqB,cAAc,CAAC,EAC1H,IAAMC,EAAc,MAAMH,EAAe,KAAK7B,eAAeiC,eAAc,CAAE,EAI7E,GAHA,KAAKnB,WAAakB,GAAaE,eAAeC,SAASC,EAAW,EAClE,KAAKpD,gBAAkBgD,GAAaE,eAAeC,SAASE,EAAc,EAC1E,KAAKxB,YAAcmB,GAAaE,eAAeC,SAASG,EAAY,EAChE,KAAKzB,YAAa,CAClB,IAAM0B,EAAe,MAAMV,EAAe,KAAKzB,oBAAoBoC,kBAAiB,CAAE,EAEtF,KAAKzD,gBAAkBwD,GAAcE,kBAAkBC,SAAW,EACtE,CACA,KAAK9C,MAAM+C,KAAKC,UAAU,CAAC,CAAE3F,OAAAA,CAAM,IAAM,CACjCA,IACA,KAAKA,OAASA,EACd,KAAK0D,iBAAmB,CAAC,CAAC,KAAK1D,OAAO4F,uCAAuCV,SAAS,WAAW,EACjG,KAAKvB,qBAAuB,CAAC,CAAC,KAAK3D,OAAO4F,uCAAuCV,SAAS,eAAe,EACzG,KAAKW,mBAAmB7F,EAAO8F,EAAE,GAErC,KAAK/B,QAAU,KAAKd,eAAec,QAAO,EAC1C,KAAKgC,wBAAuB,CAChC,CAAC,EACD,KAAK9B,SAAW,KAAKtB,MAAMqD,OAAOL,UAAWK,GAAU,CACnD,IAAMC,EAAWD,EAAO,SACxB,KAAKE,sBAAsBD,CAAQ,EACnC,KAAKE,wBAAwBF,CAAQ,CACzC,CAAC,CACL,GAEAG,yBAAuB,CACnB,IAAMC,EAA2B,CAC7B,CAAEC,KAAMC,EAAWC,KAAMC,MAAO,0BAA2Bf,KAAM,CAAEgB,KAAM,KAAK1G,OAAOyG,KAAK,CAAE,EAC5F,CAAEH,KAAMC,EAAWC,KAAMC,MAAO,8BAA+Bf,KAAM,CAAEgB,KAAM,KAAK1G,OAAO2G,SAAS,CAAE,EACpG,CACIL,KAAMC,EAAWK,KACjBH,MAAO,qCACPf,KAAM,CACFgB,KAAM,GAAG,KAAK1G,OAAO6G,gBAAgB,KAAK,KAAK7G,OAAOgC,kBAAoB,CAAC,IAC3E8E,WAAY,KAAK9G,OAAO+G,oBAAsB,CAAC,qBAAsB,KAAK/G,OAAO8F,GAAI,SAAU,UAAU,EAAIkB,SAGrH,CACIV,KAAMC,EAAWK,KACjBH,MAAO,+CACPf,KAAM,CACFgB,KAAM,GAAG,KAAK1G,OAAOiH,0BAA0B,KAAK,KAAKjH,OAAOkH,4BAA8B,CAAC,IAC/FJ,WAAY,KAAK9G,OAAO+G,oBAAsB,CAAC,qBAAsB,KAAK/G,OAAO8F,GAAI,SAAU,QAAQ,EAAIkB,SAGnH,CACIV,KAAMC,EAAWK,KACjBH,MAAO,oCACPf,KAAM,CACFgB,KAAM,GAAG,KAAK1G,OAAOmH,eAAe,KAAK,KAAKnH,OAAOoH,iBAAmB,CAAC,IACzEN,WAAY,KAAK9G,OAAO+G,oBAAsB,CAAC,qBAAsB,KAAK/G,OAAO8F,GAAI,SAAU,SAAS,EAAIkB,SAGpH,CACIV,KAAMC,EAAWK,KACjBH,MAAO,wCACPf,KAAM,CACFgB,KAAM,GAAG,KAAK1G,OAAOqH,mBAAmB,KAAK,KAAKrH,OAAOsH,qBAAuB,CAAC,IACjFR,WAAY,KAAK9G,OAAO+G,oBAAsB,CAAC,qBAAsB,KAAK/G,OAAO8F,GAAI,SAAU,aAAa,EAAIkB,SAGxH,CAAEV,KAAMC,EAAWgB,KAAMd,MAAO,8BAA+Bf,KAAM,CAAE8B,KAAM,KAAKxH,OAAOyH,SAAS,CAAE,EACpG,CAAEnB,KAAMC,EAAWgB,KAAMd,MAAO,4BAA6Bf,KAAM,CAAE8B,KAAM,KAAKxH,OAAO0H,OAAO,CAAE,EAChG,CAAEpB,KAAMC,EAAWC,KAAMC,MAAO,6BAA8Bf,KAAM,CAAEgB,KAAM,KAAK1G,OAAO2H,QAAQ,CAAE,CAAE,EAGxG,OAAI,KAAK3H,OAAO4H,eAAeC,QAE3BxB,EAAeyB,OAAO,EAAG,EAAG,CACxBxB,KAAMC,EAAWC,KACjBC,MAAO,kCACPf,KAAM,CAAEgB,KAAM,KAAK1G,OAAO4H,cAAcG,IAAKC,GAASA,EAAKC,IAAI,EAAEC,KAAK,IAAI,CAAC,EAC9E,EAEE,CACHC,SAAU,4CACVC,QAAS/B,EAEjB,CAEAgC,sBAAoB,CAChB,OAAI,KAAKrI,OAAOwB,kBACL,CACH,CACI8E,KAAMC,EAAWC,KACjBC,MAAO,wCACPf,KAAM,CAAEgB,KAAM,KAAK1G,OAAOsI,aAAa,GAE3C,CACIhC,KAAMC,EAAWC,KACjBC,MAAO,4CACPf,KAAM,CAAEgB,KAAM,KAAK1G,OAAOuI,iBAAiB,GAE/C,CACIjC,KAAMC,EAAWC,KACjBC,MAAO,+CACPf,KAAM,CAAEgB,KAAM,KAAK1G,OAAOwI,oBAAoB,GAElD,CACIlC,KAAMC,EAAWC,KACjBC,MAAO,gDACPf,KAAM,CAAEgB,KAAM,KAAK1G,OAAOyI,qBAAqB,GAEnD,CACInC,KAAMC,EAAWC,KACjBC,MAAO,wDACPf,KAAM,CAAEgB,KAAM,KAAK1G,OAAO0I,6BAA6B,EAC1D,EAGF,CAAA,CACX,CAEAC,kBAAgB,CACZ,IAAMC,EAA0B,CAAA,EAChC,OAAI,KAAK7G,iBACL6G,EAAcC,KAAK,CACfvC,KAAMC,EAAWuC,QACjBrC,MAAO,wDACPf,KAAM,CAAEqD,QAAS,KAAK/I,OAAOgJ,6BAA6B,EAC7D,EAEEJ,CACX,CAEAK,gBAAc,CACV,IAAMC,EAAwB,CAAA,EAC9B,OAAI,KAAKtF,aAAe,KAAK9B,iBACzBoH,EAAYL,KAAK,CACbvC,KAAMC,EAAW4C,uBACjB1C,MAAO,oDACPf,KAAM,CAAE1F,OAAQ,KAAKA,OAAQoJ,SAAU,CAAC,KAAKrF,QAASsF,gBAAiBC,GAAoBC,IAAI,EAClG,EAEEL,CACX,CAEAM,sBAAoB,CAChB,IAAMC,EAAoB,KAAKpB,qBAAoB,EAC7CO,EAAgB,KAAKD,iBAAgB,EACrCO,EAAc,KAAKD,eAAc,EAEjCb,EAAoB,CACtB,CAAE9B,KAAMC,EAAWC,KAAMC,MAAO,oCAAqCf,KAAM,CAAEgB,KAAM,KAAK1G,OAAO0J,SAAS,CAAE,EAC1G,CACIpD,KAAMC,EAAWC,KACjBC,MAAO,qCACPf,KAAM,CAAEgB,KAAM,KAAK1G,OAAO2J,gBAAgB,GAE9C,CACIrD,KAAMC,EAAWC,KACjBC,MAAO,+CACPf,KAAM,CAAEgB,KAAM,KAAK1G,OAAO4J,0BAA0B,GAExD,CACItD,KAAMC,EAAWuC,QACjBrC,MAAO,qCACPf,KAAM,CAAEqD,QAAS,KAAK/I,OAAO6J,UAAU,GAE3C,GAAGJ,EACH,GAAGb,EACH,GAAGM,CAAW,EAIlB,OAAI,KAAKlJ,OAAOyB,4BAEZ2G,EAAQN,OAAO,EAAI2B,EAAkB5B,OAAQ,EAAG,CAC5CvB,KAAMC,EAAWC,KACjBC,MAAO,yDACPf,KAAM,CAAEgB,KAAM,KAAK1G,OAAO8J,8BAA8B,EAC3D,EAGD,KAAKhG,iBAELsE,EAAQN,OAAO,EAAG,EAAG,CACjBxB,KAAMC,EAAWC,KACjBC,MAAO,yDACPsD,cAAe,wDACfrE,KAAM,CAAEgB,KAAM,KAAK1G,OAAOgK,QAAQ,EACrC,EAGD,KAAKnG,YAELuE,EAAQN,OAAO,EAAG,EAAG,CACjBxB,KAAMC,EAAWuC,QACjBrC,MAAO,uCACPf,KAAM,CAAEqD,QAAS,KAAK/I,OAAOiK,YAAY,EAC5C,EAGE,CACH9B,SAAU,yCACVC,QAASA,EAEjB,CAEA8B,4BAA0B,CACtB,IAAMC,EAA8B,CAChC,CAAE7D,KAAMC,EAAWuC,QAASrC,MAAO,4CAA6Cf,KAAM,CAAEqD,QAAS,KAAK/I,OAAOoK,iBAAiB,CAAE,EAChI,CAAE9D,KAAMC,EAAWuC,QAASrC,MAAO,8CAA+Cf,KAAM,CAAEqD,QAAS,KAAK/I,OAAOqK,mBAAmB,CAAE,CAAE,EAG1I,OAAI,KAAKrK,OAAOoK,mBAEZD,EAAkBrC,OACd,EACA,EACA,CAAExB,KAAMC,EAAWgB,KAAMd,MAAO,wCAAyCf,KAAM,CAAE8B,KAAM,KAAKxH,OAAOsK,mBAAmB,CAAE,EACxH,CAAEhE,KAAMC,EAAWgB,KAAMd,MAAO,sCAAuCf,KAAM,CAAE8B,KAAM,KAAKxH,OAAOuK,iBAAiB,CAAE,EACpH,CACIjE,KAAMC,EAAWiE,SACjB/D,MAAO,kDACPf,KAAM,CAAE+E,UAAW,KAAKpH,gBAAgBqH,oBAAoB,KAAK1K,OAAO2K,6BAA6B,CAAC,EACzG,EAIL,KAAK3K,OAAOqK,qBAEZF,EAAkBtB,KAAK,CAAEvC,KAAMC,EAAWgB,KAAMd,MAAO,wCAAyCf,KAAM,CAAE8B,KAAM,KAAKxH,OAAO4K,mBAAmB,CAAE,CAAE,EAE9I,CACHzC,SAAU,+CACVC,QAAS+B,EAEjB,CAEAU,2BAAyB,CACrB,MAAO,CACH1C,SAAU,8CACVC,QAAS,CACL,CAAE9B,KAAMC,EAAWuC,QAASrC,MAAO,0EAA2Ef,KAAM,CAAEqD,QAAS,KAAKpF,oBAAoB,CAAE,EAC1J,CAAE2C,KAAMC,EAAWuC,QAASrC,MAAO,sEAAuEf,KAAM,CAAEqD,QAAS,KAAKrF,gBAAgB,CAAE,EAClJ,CACI4C,KAAMC,EAAWiE,SACjB/D,MAAO,8EACPf,KAAM,CAAE+E,UAAW,KAAKpH,gBAAgBqH,oBAAoB,KAAK1K,OAAO8K,8CAA8C,CAAC,EAC1H,EAGb,CAEA/E,yBAAuB,CACnB,IAAMgF,EAAiB,KAAK3E,wBAAuB,EAC7C4E,EAAc,KAAKxB,qBAAoB,EACvCyB,EAAoB,KAAKf,2BAA0B,EACnDgB,EAAmB,KAAKL,0BAAyB,EACvD,KAAK3I,qBAAuB,CAAC6I,EAAgBC,EAAaC,EAAmBC,CAAgB,CACjG,CAKA/E,wBAAwBF,EAAgB,CACpC,KAAKjC,gBAAkB,KAAK5B,aAAauD,UAAU,yBAA0B,IAAK,CAC9E,KAAKpD,wBAAwB4I,KAAKlF,CAAQ,EAAEN,UAAWyF,GAAkB,CACrE,KAAKpL,OAASoL,EAAeC,KAC7B,KAAKtF,wBAAuB,CAChC,CAAC,EACD,KAAKG,sBAAsBD,CAAQ,CACvC,CAAC,CACL,CAKAqF,aAAW,CACH,KAAKrH,UACL,KAAKA,SAASsH,YAAW,EAE7B,KAAKnJ,cAAcoJ,QAAQ,KAAKxH,eAAe,CACnD,CAKQkC,sBAAsBD,EAAgB,CAC1C,KAAK1D,wBAAwBkJ,iCAAiCxF,CAAQ,EAAEN,UAAU,CAC9E+F,KAAON,GAA+D,CAClE,KAAKjL,UAAYiL,EAAeC,KAChC,KAAKpJ,eAAiBmJ,EAAeC,KAAMpJ,cAC/C,EACA0J,MAAQA,GAA6BC,GAAQ,KAAK/I,aAAc8I,CAAK,EACxE,CACL,CAEQ9F,mBAAmBI,EAAgB,CACvC,KAAKxD,oBAAoBoJ,yBAAyB5F,CAAQ,EAAEN,UAAWiC,GAAiB,CACpF,KAAK5H,OAAO4H,cAAgBA,EAC5B,KAAK7B,wBAAuB,CAChC,CAAC,CACL,4CAxVS5D,EAAqB,2BAArBA,EAAqB2J,UAAA,CAAA,CAAA,mBAAA,CAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,MAAA,wBAAA,EAAA,CAAA,EAAA,QAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,WAAA,EAAA,CAAA,EAAA,qBAAA,WAAA,OAAA,EAAA,SAAA,cAAA,oBAAA,kBAAA,YAAA,EAAA,CAAA,EAAA,YAAA,EAAA,SAAA,2BAAA,cAAA,EAAA,CAAA,EAAA,qBAAA,WAAA,OAAA,EAAA,SAAA,cAAA,WAAA,YAAA,EAAA,CAAA,EAAA,SAAA,EAAA,UAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,IC1ClCtL,EAAA,EAAA,MAAA,CAAA,EACIlB,EAAA,EAAA;KAAA,EAAAmB,EAAA,EAAAuL,GAAA,GAAA,EAAA,EAAc,EAAAC,GAAA,EAAA,CAAA,EA2DlBpL,EAAA,EACAvB,EAAA,EAAA;CAAA,SA5DIE,EAAA,CAAA,EAAA0B,EAAA6K,EAAApM,OAAA,EAAA,EAAA,EAwDAH,EAAA,EAAA0B,EAAA6K,EAAAlK,qBAAA,EAAA,EAAA,kBDjBUqK,GAAoCC,GAAgCC,EAA2B,EAAAC,OAAA,CAAA,mcAAA,CAAA,CAAA,SAEhGvK,CAAqB,GAAA",
  "names": ["\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "\u0275\u0275pureFunction2", "_c1", "ctx_r0", "course", "id", "titleLink", "\u0275\u0275textInterpolate", "\u0275\u0275pipeBind1", "doughnutChartTitle", "\u0275\u0275textInterpolate1", "currentPercentage", "showText", "\u0275\u0275textInterpolate2", "currentAbsolute", "currentMax", "\u0275\u0275template", "CourseDetailDoughnutChartComponent_Conditional_8_Conditional_1_Template", "CourseDetailDoughnutChartComponent_Conditional_8_Conditional_2_Template", "CourseDetailDoughnutChartComponent_Conditional_8_Conditional_3_Template", "CourseDetailDoughnutChartComponent_Conditional_8_Conditional_4_Template", "\u0275\u0275conditional", "undefined", "\u0275\u0275element", "faSpinner", "PIE_CHART_NA_FALLBACK_VALUE", "CourseDetailDoughnutChartComponent", "router", "inject", "Router", "contentType", "receivedStats", "stats", "ngxData", "name", "value", "ngxColor", "selectable", "group", "ScaleType", "Ordinal", "domain", "GraphColors", "GREEN", "RED", "LIGHT_GREY", "bindFormatting", "valueFormatting", "bind", "ngOnChanges", "updatePieChartData", "remaining", "roundValueSpecifiedByCourseSettings", "ngOnInit", "DoughnutChartType", "ASSESSMENT", "COMPLAINTS", "FEEDBACK", "AVERAGE_COURSE_SCORE", "isAtLeastInstructor", "CURRENT_LLM_COST", "openCorrespondingPage", "navigate", "values", "forEach", "entry", "index", "data", "selectors", "inputs", "features", "\u0275\u0275NgOnChangesFeature", "decls", "vars", "consts", "template", "rf", "ctx", "CourseDetailDoughnutChartComponent_Conditional_2_Template", "CourseDetailDoughnutChartComponent_Conditional_3_Template", "\u0275\u0275listener", "CourseDetailDoughnutChartComponent_Conditional_8_Template", "CourseDetailDoughnutChartComponent_Conditional_9_Template", "\u0275\u0275pureFunction0", "_c0", "RouterLink", "NgClass", "FaIconComponent", "PieChartModule", "PieChartComponent", "ArtemisTranslatePipe", "styles", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r2", "ctx_r2", "\u0275\u0275nextContext", "\u0275\u0275resetView", "displayPeriodOverview", "\u0275\u0275elementEnd", "displayLifetimeOverview", "\u0275\u0275advance", "\u0275\u0275propertyInterpolate", "\u0275\u0275pipeBind2", "\u0275\u0275pureFunction0", "_c1", "\u0275\u0275property", "showLifetimeOverview", "displayedNumberOfWeeks", "_c2", "\u0275\u0275pipeBind1", "\u0275\u0275element", "\u0275\u0275textInterpolate2", "model_r4", "series", "name", "findAbsoluteValue", "value", "model_r5", "\u0275\u0275template", "CourseDetailLineChartComponent_Conditional_12_Conditional_25_ng_template_6_Conditional_1_Template", "\u0275\u0275conditional", "length", "CourseDetailLineChartComponent_Conditional_12_Conditional_25_ng_template_3_Template", "\u0275\u0275templateRefExtractor", "CourseDetailLineChartComponent_Conditional_12_Conditional_25_ng_template_6_Template", "\u0275\u0275pureFunction1", "_c3", "containerRef_r6", "offsetWidth", "chartColor", "xAxisLabel", "data", "formatYAxis", "curve", "_c4", "average", "faSpinner", "\u0275\u0275elementContainerStart", "CourseDetailLineChartComponent_Conditional_12_Conditional_7_Template", "_r1", "switchTimeSpan", "SwitchTimeSpanDirection", "LEFT", "RIGHT", "CourseDetailLineChartComponent_Conditional_12_Conditional_25_Template", "CourseDetailLineChartComponent_Conditional_12_Conditional_26_Template", "course", "startDate", "startDateDisplayed", "faArrowLeft", "showsCurrentWeek", "faArrowRight", "loading", "\u0275\u0275textInterpolate", "CourseDetailLineChartComponent", "ActiveStudentsChart", "service", "inject", "CourseManagementService", "translateService", "TranslateService", "numberOfStudentsInCourse", "initialStats", "chartTime", "amountOfStudents", "overviewStats", "currentPeriod", "selectable", "group", "ScaleType", "Ordinal", "domain", "GraphColors", "DARK_BLUE", "dataCopy", "absoluteSeries", "curveMonotoneX", "constructor", "onLangChange", "subscribe", "loadTranslations", "ngOnChanges", "instant", "determineDisplayedPeriod", "currentOffsetToEndDate", "reloadChart", "createLabels", "getStatisticsData", "id", "res", "processDataAndCreateChart", "array", "currentMean", "allValues", "i", "push", "roundScorePercentSpecifiedByCourseSettings", "mean", "currentSpanSize", "toFixed", "endDate", "dayjs", "subtract", "determineDifferenceBetweenIsoWeeks", "diffToLastChartWeek", "remainingWeeksTillStartDate", "Math", "min", "assignLabelsToDataObjects", "isoWeekday", "format", "direction", "toLocaleString", "model", "result", "find", "entry", "absoluteValue", "periodSize", "slice", "max", "fetchLifetimeOverviewData", "currentWeek", "isoWeek", "toString", "getStatisticsForLifetimeOverview", "selectors", "inputs", "features", "\u0275\u0275InheritDefinitionFeature", "\u0275\u0275NgOnChangesFeature", "decls", "vars", "consts", "template", "rf", "ctx", "CourseDetailLineChartComponent_Conditional_12_Template", "CourseDetailLineChartComponent_Conditional_13_Template", "_c0", "startDateAlreadyPassed", "RouterLink", "TranslateDirective", "HelpIconComponent", "NgbTooltip", "FaIconComponent", "LineChartModule", "LineChartComponent", "ArtemisDatePipe", "ArtemisTranslatePipe", "styles", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275property", "ctx_r0", "course", "DoughnutChartType", "COMPLAINTS", "courseDTO", "currentPercentageComplaints", "currentAbsoluteComplaints", "currentMaxComplaints", "FEEDBACK", "currentPercentageMoreFeedbacks", "currentAbsoluteMoreFeedbacks", "currentMaxMoreFeedbacks", "CURRENT_LLM_COST", "currentTotalLlmCostInEur", "\u0275\u0275elementStart", "\u0275\u0275template", "CourseDetailComponent_Conditional_2_Conditional_11_Template", "CourseDetailComponent_Conditional_2_Conditional_12_Template", "CourseDetailComponent_Conditional_2_Conditional_15_Template", "\u0275\u0275elementEnd", "ASSESSMENT", "currentPercentageAssessments", "currentAbsoluteAssessments", "currentMaxAssessments", "\u0275\u0275conditional", "complaintsEnabled", "requestMoreFeedbackEnabled", "AVERAGE_COURSE_SCORE", "currentPercentageAverageScore", "currentAbsoluteAverageScore", "currentMaxAverageScore", "irisChatEnabled", "isAthenaEnabled", "numberOfStudents", "activeStudents", "courseDetailSections", "CourseDetailComponent", "eventManager", "inject", "EventManager", "courseManagementService", "CourseManagementService", "organizationService", "OrganizationManagementService", "route", "ActivatedRoute", "alertService", "AlertService", "profileService", "ProfileService", "accountService", "AccountService", "irisSettingsService", "IrisSettingsService", "markdownService", "ArtemisMarkdownService", "featureToggleService", "FeatureToggleService", "FeatureToggle", "messagingEnabled", "communicationEnabled", "irisEnabled", "ltiEnabled", "tutorialEnabled", "isAdmin", "eventSubscriber", "paramSub", "faTimes", "faEye", "faWrench", "faTable", "faFlag", "faListAlt", "faChartBar", "faClipboard", "ngOnInit", "__async", "firstValueFrom", "getFeatureToggleActive", "TutorialGroups", "profileInfo", "getProfileInfo", "activeProfiles", "includes", "PROFILE_LTI", "PROFILE_ATHENA", "PROFILE_IRIS", "irisSettings", "getGlobalSettings", "irisChatSettings", "enabled", "data", "subscribe", "courseInformationSharingConfiguration", "fetchOrganizations", "id", "getCourseDetailSections", "params", "courseId", "fetchCourseStatistics", "registerChangeInCourses", "getGeneralDetailSection", "generalDetails", "type", "DetailType", "Text", "title", "text", "shortName", "Link", "studentGroupName", "routerLink", "isAtLeastInstructor", "undefined", "teachingAssistantGroupName", "numberOfTeachingAssistants", "editorGroupName", "numberOfEditors", "instructorGroupName", "numberOfInstructors", "Date", "date", "startDate", "endDate", "semester", "organizations", "length", "splice", "map", "orga", "name", "join", "headline", "details", "getComplaintsDetails", "maxComplaints", "maxTeamComplaints", "maxComplaintTimeDays", "maxComplaintTextLimit", "maxComplaintResponseTextLimit", "getAthenaDetails", "athenaDetails", "push", "Boolean", "boolean", "restrictedAthenaModulesAccess", "getIrisDetails", "irisDetails", "ProgrammingIrisEnabled", "disabled", "subSettingsType", "IrisSubSettingsType", "CHAT", "getModeDetailSection", "complaintsDetails", "maxPoints", "accuracyOfScores", "defaultProgrammingLanguage", "testCourse", "maxRequestMoreFeedbackTimeDays", "titleHelpText", "timeZone", "onlineCourse", "getEnrollmentDetailSection", "enrollmentDetails", "enrollmentEnabled", "unenrollmentEnabled", "enrollmentStartDate", "enrollmentEndDate", "Markdown", "innerHtml", "safeHtmlForMarkdown", "enrollmentConfirmationMessage", "unenrollmentEndDate", "getMessagingDetailSection", "courseInformationSharingMessagingCodeOfConduct", "generalSection", "modeSection", "enrollmentSection", "messagingSection", "find", "courseResponse", "body", "ngOnDestroy", "unsubscribe", "destroy", "getCourseStatisticsForDetailView", "next", "error", "onError", "getOrganizationsByCourse", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "CourseDetailComponent_Conditional_2_Template", "CourseDetailComponent_Conditional_3_Template", "CourseDetailDoughnutChartComponent", "CourseDetailLineChartComponent", "DetailOverviewListComponent", "styles"]
}
