{
  "version": 3,
  "sources": ["src/main/webapp/app/entities/group-notification.model.ts", "src/main/webapp/app/shared/user-settings/notification-settings/notification-settings.service.ts"],
  "sourcesContent": ["import { Notification, NotificationType } from 'app/entities/notification.model';\r\nimport { Course } from 'app/entities/course.model';\r\n\r\nexport const enum GroupNotificationType {\r\n    INSTRUCTOR = 'INSTRUCTOR',\r\n    EDITOR = 'EDITOR',\r\n    TA = 'TA',\r\n    STUDENT = 'STUDENT',\r\n}\r\n\r\nexport class GroupNotification extends Notification {\r\n    type?: GroupNotificationType;\r\n    course?: Course;\r\n\r\n    constructor() {\r\n        super(NotificationType.GROUP);\r\n    }\r\n}\r\n", "import { Injectable, inject } from '@angular/core';\r\nimport {\r\n    ATTACHMENT_CHANGE_TITLE,\r\n    CONVERSATION_ADD_USER_CHANNEL_TITLE,\r\n    CONVERSATION_ADD_USER_GROUP_CHAT_TITLE,\r\n    CONVERSATION_CREATE_GROUP_CHAT_TITLE,\r\n    CONVERSATION_CREATE_ONE_TO_ONE_CHAT_TITLE,\r\n    CONVERSATION_DELETE_CHANNEL_TITLE,\r\n    CONVERSATION_REMOVE_USER_CHANNEL_TITLE,\r\n    CONVERSATION_REMOVE_USER_GROUP_CHAT_TITLE,\r\n    COURSE_ARCHIVE_STARTED_TITLE,\r\n    EXAM_ARCHIVE_STARTED_TITLE,\r\n    EXERCISE_PRACTICE_TITLE,\r\n    EXERCISE_RELEASED_TITLE,\r\n    EXERCISE_SUBMISSION_ASSESSED_TITLE,\r\n    MENTIONED_IN_MESSAGE_TITLE,\r\n    NEW_COURSE_POST_TITLE,\r\n    NEW_EXAM_POST_TITLE,\r\n    NEW_EXERCISE_POST_TITLE,\r\n    NEW_LECTURE_POST_TITLE,\r\n    NEW_MESSAGE_TITLE,\r\n    NEW_REPLY_FOR_COURSE_POST_TITLE,\r\n    NEW_REPLY_FOR_EXAM_POST_TITLE,\r\n    NEW_REPLY_FOR_EXERCISE_POST_TITLE,\r\n    NEW_REPLY_FOR_LECTURE_POST_TITLE,\r\n    NEW_REPLY_MESSAGE_TITLE,\r\n    Notification,\r\n    NotificationType,\r\n    TUTORIAL_GROUP_ASSIGNED_TITLE,\r\n    TUTORIAL_GROUP_DELETED_TITLE,\r\n    TUTORIAL_GROUP_DEREGISTRATION_STUDENT_TITLE,\r\n    TUTORIAL_GROUP_DEREGISTRATION_TUTOR_TITLE,\r\n    TUTORIAL_GROUP_REGISTRATION_MULTIPLE_TUTOR_TITLE,\r\n    TUTORIAL_GROUP_REGISTRATION_STUDENT_TITLE,\r\n    TUTORIAL_GROUP_REGISTRATION_TUTOR_TITLE,\r\n    TUTORIAL_GROUP_UNASSIGNED_TITLE,\r\n    TUTORIAL_GROUP_UPDATED_TITLE,\r\n} from 'app/entities/notification.model';\r\nimport { GroupNotification } from 'app/entities/group-notification.model';\r\nimport { NotificationSetting } from 'app/shared/user-settings/notification-settings/notification-settings-structure';\r\nimport { SettingId, UserSettingsCategory } from 'app/shared/constants/user-settings.constants';\r\nimport { Setting } from 'app/shared/user-settings/user-settings.model';\r\nimport { UserSettingsService } from 'app/shared/user-settings/user-settings.service';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { Observable, ReplaySubject } from 'rxjs';\r\n\r\nexport const reloadNotificationSideBarMessage = 'reloadNotificationsInNotificationSideBar';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class NotificationSettingsService {\r\n    private userSettingsService = inject(UserSettingsService);\r\n\r\n    /**\r\n     * This is the place where the mapping between SettingIds and notification titles happens on the client side\r\n     * Each SettingIds can be based on multiple different notification titles (based on NotificationTypes)\r\n     */\r\n    private static NOTIFICATION_SETTING_ID_TO_NOTIFICATION_TITLE_MAP: Map<SettingId, string[]> = new Map([\r\n        [SettingId.NOTIFICATION__EXERCISE_NOTIFICATION__EXERCISE_SUBMISSION_ASSESSED, [EXERCISE_SUBMISSION_ASSESSED_TITLE]],\r\n        [SettingId.NOTIFICATION__EXERCISE_NOTIFICATION__EXERCISE_RELEASED, [EXERCISE_RELEASED_TITLE]],\r\n        [SettingId.NOTIFICATION__EXERCISE_NOTIFICATION__EXERCISE_OPEN_FOR_PRACTICE, [EXERCISE_PRACTICE_TITLE]],\r\n        [SettingId.NOTIFICATION__EXERCISE_NOTIFICATION__NEW_EXERCISE_POST, [NEW_EXERCISE_POST_TITLE]],\r\n        [SettingId.NOTIFICATION__EXERCISE_NOTIFICATION__NEW_REPLY_FOR_EXERCISE_POST, [NEW_REPLY_FOR_EXERCISE_POST_TITLE]],\r\n        [SettingId.NOTIFICATION__LECTURE_NOTIFICATION__ATTACHMENT_CHANGES, [ATTACHMENT_CHANGE_TITLE]],\r\n        [SettingId.NOTIFICATION__LECTURE_NOTIFICATION__NEW_LECTURE_POST, [NEW_LECTURE_POST_TITLE]],\r\n        [SettingId.NOTIFICATION__LECTURE_NOTIFICATION__NEW_REPLY_FOR_LECTURE_POST, [NEW_REPLY_FOR_LECTURE_POST_TITLE]],\r\n        [SettingId.NOTIFICATION__EXAM_NOTIFICATION__NEW_EXAM_POST, [NEW_EXAM_POST_TITLE]],\r\n        [SettingId.NOTIFICATION__EXAM_NOTIFICATION__NEW_REPLY_FOR_EXAM_POST, [NEW_REPLY_FOR_EXAM_POST_TITLE]],\r\n        [SettingId.NOTIFICATION__COURSE_WIDE_DISCUSSION__NEW_COURSE_POST, [NEW_COURSE_POST_TITLE]],\r\n        [SettingId.NOTIFICATION__COURSE_WIDE_DISCUSSION__NEW_REPLY_FOR_COURSE_POST, [NEW_REPLY_FOR_COURSE_POST_TITLE]],\r\n        [SettingId.NOTIFICATION__INSTRUCTOR_NOTIFICATION__COURSE_AND_EXAM_ARCHIVING_STARTED, [EXAM_ARCHIVE_STARTED_TITLE, COURSE_ARCHIVE_STARTED_TITLE]],\r\n\r\n        [\r\n            SettingId.NOTIFICATION__TUTOR_NOTIFICATION__TUTORIAL_GROUP_REGISTRATION,\r\n            [TUTORIAL_GROUP_REGISTRATION_TUTOR_TITLE, TUTORIAL_GROUP_DEREGISTRATION_TUTOR_TITLE, TUTORIAL_GROUP_REGISTRATION_MULTIPLE_TUTOR_TITLE],\r\n        ],\r\n        [\r\n            SettingId.NOTIFICATION__TUTORIAL_GROUP_NOTIFICATION__TUTORIAL_GROUP_REGISTRATION,\r\n            [TUTORIAL_GROUP_DEREGISTRATION_STUDENT_TITLE, TUTORIAL_GROUP_REGISTRATION_STUDENT_TITLE],\r\n        ],\r\n        [\r\n            SettingId.NOTIFICATION__USER_NOTIFICATION__CONVERSATION_MESSAGE,\r\n            [\r\n                NEW_MESSAGE_TITLE,\r\n                CONVERSATION_CREATE_ONE_TO_ONE_CHAT_TITLE,\r\n                CONVERSATION_CREATE_GROUP_CHAT_TITLE,\r\n                CONVERSATION_ADD_USER_GROUP_CHAT_TITLE,\r\n                CONVERSATION_ADD_USER_CHANNEL_TITLE,\r\n                CONVERSATION_DELETE_CHANNEL_TITLE,\r\n                CONVERSATION_REMOVE_USER_CHANNEL_TITLE,\r\n                CONVERSATION_REMOVE_USER_GROUP_CHAT_TITLE,\r\n            ],\r\n        ],\r\n        [SettingId.NOTIFICATION__USER_NOTIFICATION__NEW_REPLY_IN_CONVERSATION_MESSAGE, [NEW_REPLY_MESSAGE_TITLE]],\r\n        [SettingId.NOTIFICATION__TUTOR_NOTIFICATION__TUTORIAL_GROUP_ASSIGN_UNASSIGN, [TUTORIAL_GROUP_ASSIGNED_TITLE, TUTORIAL_GROUP_UNASSIGNED_TITLE]],\r\n        [SettingId.NOTIFICATION__TUTORIAL_GROUP_NOTIFICATION__TUTORIAL_GROUP_DELETE_UPDATE, [TUTORIAL_GROUP_DELETED_TITLE, TUTORIAL_GROUP_UPDATED_TITLE]],\r\n        [SettingId.NOTIFICATION__USER_NOTIFICATION__USER_MENTION, [MENTIONED_IN_MESSAGE_TITLE]],\r\n    ]);\r\n\r\n    private currentNotificationSettings: NotificationSetting[] = [];\r\n    private currentNotificationSettingsSubject = new ReplaySubject<NotificationSetting[]>(1);\r\n\r\n    private notificationTitleActivationMap: Map<string, boolean> = new Map<string, boolean>();\r\n\r\n    constructor() {\r\n        this.listenForNotificationSettingsChanges();\r\n    }\r\n\r\n    public refreshNotificationSettings(): void {\r\n        this.userSettingsService.loadSettings(UserSettingsCategory.NOTIFICATION_SETTINGS).subscribe({\r\n            next: (res: HttpResponse<Setting[]>) => {\r\n                this.currentNotificationSettings = this.userSettingsService.loadSettingsSuccessAsIndividualSettings(\r\n                    res.body!,\r\n                    UserSettingsCategory.NOTIFICATION_SETTINGS,\r\n                ) as NotificationSetting[];\r\n\r\n                this.notificationTitleActivationMap = this.createUpdatedNotificationTitleActivationMap();\r\n                this.currentNotificationSettingsSubject.next(this.currentNotificationSettings);\r\n            },\r\n        });\r\n    }\r\n\r\n    getNotificationSettings(): NotificationSetting[] {\r\n        return this.currentNotificationSettings;\r\n    }\r\n\r\n    getNotificationSettingsUpdates(): Observable<NotificationSetting[]> {\r\n        return this.currentNotificationSettingsSubject.asObservable();\r\n    }\r\n\r\n    /**\r\n     * Creates an updates map that indicates which notifications (titles) are (de)activated in the current notification settings\r\n     * @param notificationSettings will be mapped to their respective title and create a new updated map\r\n     * @return the updated map\r\n     */\r\n    private createUpdatedNotificationTitleActivationMap(): Map<string, boolean> {\r\n        const updatedMap: Map<string, boolean> = new Map<string, boolean>();\r\n        let tmpNotificationTitles: string[];\r\n\r\n        for (let i = 0; i < this.currentNotificationSettings.length; i++) {\r\n            tmpNotificationTitles = NotificationSettingsService.NOTIFICATION_SETTING_ID_TO_NOTIFICATION_TITLE_MAP.get(this.currentNotificationSettings[i].settingId) ?? [];\r\n            if (tmpNotificationTitles.length > 0) {\r\n                tmpNotificationTitles.forEach((tmpNotificationTitle) => {\r\n                    updatedMap.set(tmpNotificationTitle, this.currentNotificationSettings[i].webapp!);\r\n                });\r\n            }\r\n        }\r\n        return updatedMap;\r\n    }\r\n\r\n    /**\r\n     * Checks if the notification (i.e. its title (only for Group/Single-User Notifications)) is activated in the notification settings\r\n     * @param notification which should be checked if it is activated in the notification settings of the current user\r\n     * @return true if this notification (title) is activated in the settings, else return false\r\n     */\r\n    public isNotificationAllowedBySettings(notification: Notification): boolean {\r\n        if (\r\n            notification instanceof GroupNotification ||\r\n            notification.notificationType === NotificationType.GROUP ||\r\n            notification.notificationType === NotificationType.SINGLE ||\r\n            notification.notificationType === NotificationType.CONVERSATION\r\n        ) {\r\n            if (notification.title) {\r\n                return this.notificationTitleActivationMap.get(notification.title) ?? true;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Subscribes and listens for changes related to notifications\r\n     */\r\n    private listenForNotificationSettingsChanges(): void {\r\n        this.userSettingsService.userSettingsChangeEvent.subscribe((changeMessage) => {\r\n            if (changeMessage === reloadNotificationSideBarMessage) {\r\n                this.refreshNotificationSettings();\r\n            }\r\n        });\r\n    }\r\n}\r\n"],
  "mappings": "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",
  "names": ["GroupNotification", "Notification", "type", "course", "constructor", "NotificationType", "GROUP", "reloadNotificationSideBarMessage", "NotificationSettingsService", "userSettingsService", "inject", "UserSettingsService", "NOTIFICATION_SETTING_ID_TO_NOTIFICATION_TITLE_MAP", "Map", "SettingId", "NOTIFICATION__EXERCISE_NOTIFICATION__EXERCISE_SUBMISSION_ASSESSED", "EXERCISE_SUBMISSION_ASSESSED_TITLE", "NOTIFICATION__EXERCISE_NOTIFICATION__EXERCISE_RELEASED", "EXERCISE_RELEASED_TITLE", "NOTIFICATION__EXERCISE_NOTIFICATION__EXERCISE_OPEN_FOR_PRACTICE", "EXERCISE_PRACTICE_TITLE", "NOTIFICATION__EXERCISE_NOTIFICATION__NEW_EXERCISE_POST", "NEW_EXERCISE_POST_TITLE", "NOTIFICATION__EXERCISE_NOTIFICATION__NEW_REPLY_FOR_EXERCISE_POST", "NEW_REPLY_FOR_EXERCISE_POST_TITLE", "NOTIFICATION__LECTURE_NOTIFICATION__ATTACHMENT_CHANGES", "ATTACHMENT_CHANGE_TITLE", "NOTIFICATION__LECTURE_NOTIFICATION__NEW_LECTURE_POST", "NEW_LECTURE_POST_TITLE", "NOTIFICATION__LECTURE_NOTIFICATION__NEW_REPLY_FOR_LECTURE_POST", "NEW_REPLY_FOR_LECTURE_POST_TITLE", "NOTIFICATION__EXAM_NOTIFICATION__NEW_EXAM_POST", "NEW_EXAM_POST_TITLE", "NOTIFICATION__EXAM_NOTIFICATION__NEW_REPLY_FOR_EXAM_POST", "NEW_REPLY_FOR_EXAM_POST_TITLE", "NOTIFICATION__COURSE_WIDE_DISCUSSION__NEW_COURSE_POST", "NEW_COURSE_POST_TITLE", "NOTIFICATION__COURSE_WIDE_DISCUSSION__NEW_REPLY_FOR_COURSE_POST", "NEW_REPLY_FOR_COURSE_POST_TITLE", "NOTIFICATION__INSTRUCTOR_NOTIFICATION__COURSE_AND_EXAM_ARCHIVING_STARTED", "EXAM_ARCHIVE_STARTED_TITLE", "COURSE_ARCHIVE_STARTED_TITLE", "NOTIFICATION__TUTOR_NOTIFICATION__TUTORIAL_GROUP_REGISTRATION", "TUTORIAL_GROUP_REGISTRATION_TUTOR_TITLE", "TUTORIAL_GROUP_DEREGISTRATION_TUTOR_TITLE", "TUTORIAL_GROUP_REGISTRATION_MULTIPLE_TUTOR_TITLE", "NOTIFICATION__TUTORIAL_GROUP_NOTIFICATION__TUTORIAL_GROUP_REGISTRATION", "TUTORIAL_GROUP_DEREGISTRATION_STUDENT_TITLE", "TUTORIAL_GROUP_REGISTRATION_STUDENT_TITLE", "NOTIFICATION__USER_NOTIFICATION__CONVERSATION_MESSAGE", "NEW_MESSAGE_TITLE", "CONVERSATION_CREATE_ONE_TO_ONE_CHAT_TITLE", "CONVERSATION_CREATE_GROUP_CHAT_TITLE", "CONVERSATION_ADD_USER_GROUP_CHAT_TITLE", "CONVERSATION_ADD_USER_CHANNEL_TITLE", "CONVERSATION_DELETE_CHANNEL_TITLE", "CONVERSATION_REMOVE_USER_CHANNEL_TITLE", "CONVERSATION_REMOVE_USER_GROUP_CHAT_TITLE", "NOTIFICATION__USER_NOTIFICATION__NEW_REPLY_IN_CONVERSATION_MESSAGE", "NEW_REPLY_MESSAGE_TITLE", "NOTIFICATION__TUTOR_NOTIFICATION__TUTORIAL_GROUP_ASSIGN_UNASSIGN", "TUTORIAL_GROUP_ASSIGNED_TITLE", "TUTORIAL_GROUP_UNASSIGNED_TITLE", "NOTIFICATION__TUTORIAL_GROUP_NOTIFICATION__TUTORIAL_GROUP_DELETE_UPDATE", "TUTORIAL_GROUP_DELETED_TITLE", "TUTORIAL_GROUP_UPDATED_TITLE", "NOTIFICATION__USER_NOTIFICATION__USER_MENTION", "MENTIONED_IN_MESSAGE_TITLE", "currentNotificationSettings", "currentNotificationSettingsSubject", "ReplaySubject", "notificationTitleActivationMap", "constructor", "listenForNotificationSettingsChanges", "refreshNotificationSettings", "loadSettings", "UserSettingsCategory", "NOTIFICATION_SETTINGS", "subscribe", "next", "res", "loadSettingsSuccessAsIndividualSettings", "body", "createUpdatedNotificationTitleActivationMap", "getNotificationSettings", "getNotificationSettingsUpdates", "asObservable", "updatedMap", "tmpNotificationTitles", "i", "length", "get", "settingId", "forEach", "tmpNotificationTitle", "set", "webapp", "isNotificationAllowedBySettings", "notification", "GroupNotification", "notificationType", "NotificationType", "GROUP", "SINGLE", "CONVERSATION", "title", "userSettingsChangeEvent", "changeMessage", "factory", "\u0275fac", "providedIn"]
}
