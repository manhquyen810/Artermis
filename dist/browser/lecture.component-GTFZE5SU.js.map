{
  "version": 3,
  "sources": ["src/main/webapp/app/lecture/lecture-paging.service.ts", "src/main/webapp/app/lecture/lecture-import.component.ts", "src/main/webapp/app/shared/import/import.component.html", "src/main/webapp/app/lecture/lecture.component.ts", "src/main/webapp/app/lecture/lecture.component.html"],
  "sourcesContent": ["import { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Injectable, inject } from '@angular/core';\r\nimport { Lecture } from 'app/entities/lecture.model';\r\nimport { PagingService } from 'app/exercises/shared/manage/paging.service';\r\nimport { SearchResult, SearchTermPageableSearch } from 'app/shared/table/pageable-table';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\ntype EntityResponseType = SearchResult<Lecture>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LecturePagingService extends PagingService<Lecture> {\r\n    private http = inject(HttpClient);\r\n\r\n    private static readonly RESOURCE_URL = 'api/lecture/lectures';\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    override search(pageable: SearchTermPageableSearch): Observable<EntityResponseType> {\r\n        const params = this.createHttpParams(pageable);\r\n        return this.http.get(`${LecturePagingService.RESOURCE_URL}`, { params, observe: 'response' }).pipe(map((resp: HttpResponse<EntityResponseType>) => resp && resp.body!));\r\n    }\r\n}\r\n", "import { Component, inject } from '@angular/core';\r\nimport { Lecture } from 'app/entities/lecture.model';\r\nimport { Column, ImportComponent } from 'app/shared/import/import.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TranslateDirective } from '../shared/language/translate.directive';\r\nimport { SortDirective } from '../shared/sort/sort.directive';\r\nimport { SortByDirective } from '../shared/sort/sort-by.directive';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { NgbHighlight, NgbPagination } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ButtonComponent } from '../shared/components/button.component';\r\nimport { LecturePagingService } from 'app/lecture/lecture-paging.service';\r\n\r\nconst tableColumns: Column<Lecture>[] = [\r\n    {\r\n        name: 'TITLE',\r\n        getProperty(entity: Lecture) {\r\n            return entity.title;\r\n        },\r\n    },\r\n    {\r\n        name: 'COURSE_TITLE',\r\n        getProperty(entity: Lecture) {\r\n            return entity.course?.title;\r\n        },\r\n    },\r\n    {\r\n        name: 'SEMESTER',\r\n        getProperty(entity: Lecture) {\r\n            return entity.course?.semester;\r\n        },\r\n    },\r\n];\r\n\r\n@Component({\r\n    selector: 'jhi-lecture-import',\r\n    templateUrl: '../shared/import/import.component.html',\r\n    imports: [FormsModule, TranslateDirective, SortDirective, SortByDirective, FaIconComponent, NgbHighlight, ButtonComponent, NgbPagination],\r\n})\r\nexport class LectureImportComponent extends ImportComponent<Lecture> {\r\n    constructor() {\r\n        const pagingService = inject(LecturePagingService);\r\n        super(pagingService);\r\n        this.columns = tableColumns;\r\n        this.entityName = 'lecture';\r\n    }\r\n}\r\n", "<form>\r\n    <div class=\"modal-header\">\r\n        <h4 class=\"modal-title\" jhiTranslate=\"{{ 'artemisApp.' + entityName + '.import.label' }}\"></h4>\r\n        <button (click)=\"clear()\" aria-hidden=\"true\" class=\"btn-close\" data-dismiss=\"modal\" type=\"button\"></button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <div class=\"form-group form-inline\">\r\n            <span jhiTranslate=\"{{ 'artemisApp.' + entityName + '.import.search' }}\"></span>\r\n            <input [(ngModel)]=\"searchTerm\" class=\"form-control ms-2\" name=\"search\" type=\"text\" />\r\n            @if (loading) {\r\n                <span class=\"ms-3\" jhiTranslate=\"{{ 'artemisApp.' + entityName + '.import.loading' }}\"></span>\r\n            }\r\n        </div>\r\n        <table class=\"table table-striped align-middle flex\">\r\n            <thead class=\"thead-dark\">\r\n                <tr (sortChange)=\"sortRows()\" [(ascending)]=\"listSorting\" [(predicate)]=\"sortedColumn\" class=\"flex-row\" jhiSort>\r\n                    <!-- ID column, always present -->\r\n                    <th class=\"col-1\" jhiSortBy=\"ID\">\r\n                        <span>#</span>\r\n                        <fa-icon [icon]=\"faSort\" />\r\n                    </th>\r\n                    @for (column of columns; track column) {\r\n                        <th class=\"col-4\" [jhiSortBy]=\"column.name\">\r\n                            <span [jhiTranslate]=\"'artemisApp.' + entityName + '.import.table.' + column.name\"></span>\r\n                            <fa-icon [icon]=\"faSort\" />\r\n                        </th>\r\n                    }\r\n                    <th class=\"col-1\"></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                @for (entity of content.resultsOnPage; track trackId($index, entity)) {\r\n                    <tr class=\"flex-row\">\r\n                        <td class=\"col-1\">\r\n                            <span>{{ entity.id }}</span>\r\n                        </td>\r\n                        @for (column of columns; track column) {\r\n                            <td class=\"text-break col-4\">\r\n                                <ngb-highlight [result]=\"column.getProperty(entity)\" [term]=\"searchTerm\" />\r\n                            </td>\r\n                        }\r\n                        <td class=\"col-1\">\r\n                            <jhi-button\r\n                                (onClick)=\"selectImport(entity)\"\r\n                                [disabled]=\"disabledIds.includes(entity.id!)\"\r\n                                [title]=\"'artemisApp.' + entityName + '.import.table.doImport'\"\r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                }\r\n            </tbody>\r\n        </table>\r\n        <div class=\"d-flex justify-content-between p-2\">\r\n            <ngb-pagination (pageChange)=\"onPageChange($event)\" [(page)]=\"state.page\" [collectionSize]=\"total\" [maxSize]=\"10\" [pageSize]=\"state.pageSize\" [rotate]=\"true\" />\r\n        </div>\r\n    </div>\r\n</form>\r\n", "import { PROFILE_IRIS } from 'app/app.constants';\r\nimport { ProfileService } from 'app/shared/layouts/profiles/profile.service';\r\nimport dayjs from 'dayjs/esm';\r\nimport { Component, OnDestroy, OnInit, inject } from '@angular/core';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { LectureService } from './lecture.service';\r\nimport { Lecture } from 'app/entities/lecture.model';\r\nimport { ActivatedRoute, Router, RouterLink } from '@angular/router';\r\nimport { NgbDropdown, NgbDropdownMenu, NgbDropdownToggle, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { onError } from 'app/shared/util/global.utils';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { faFile, faFileExport, faFileImport, faFilter, faPencilAlt, faPlus, faPuzzlePiece, faSort, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { LectureImportComponent } from 'app/lecture/lecture-import.component';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { DocumentationType } from 'app/shared/components/documentation-button/documentation-button.component';\r\nimport { SortService } from 'app/shared/service/sort.service';\r\nimport { IrisSettingsService } from 'app/iris/settings/shared/iris-settings.service';\r\nimport { IngestionState } from 'app/entities/lecture-unit/attachmentUnit.model';\r\nimport { TranslateDirective } from '../shared/language/translate.directive';\r\nimport { DocumentationButtonComponent } from '../shared/components/documentation-button/documentation-button.component';\r\nimport { NgClass } from '@angular/common';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { SortDirective } from '../shared/sort/sort.directive';\r\nimport { SortByDirective } from '../shared/sort/sort-by.directive';\r\nimport { DeleteButtonDirective } from '../shared/delete-dialog/delete-button.directive';\r\nimport { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\r\nimport { HtmlForMarkdownPipe } from '../shared/pipes/html-for-markdown.pipe';\r\n\r\nexport enum LectureDateFilter {\r\n    PAST = 'filterPast',\r\n    CURRENT = 'filterCurrent',\r\n    FUTURE = 'filterFuture',\r\n    UNSPECIFIED = 'filterUnspecifiedDates',\r\n}\r\n\r\n@Component({\r\n    selector: 'jhi-lecture',\r\n    templateUrl: './lecture.component.html',\r\n    imports: [\r\n        TranslateDirective,\r\n        DocumentationButtonComponent,\r\n        NgbDropdown,\r\n        NgbDropdownToggle,\r\n        NgClass,\r\n        FaIconComponent,\r\n        NgbDropdownMenu,\r\n        RouterLink,\r\n        SortDirective,\r\n        SortByDirective,\r\n        DeleteButtonDirective,\r\n        ArtemisDatePipe,\r\n        HtmlForMarkdownPipe,\r\n    ],\r\n})\r\nexport class LectureComponent implements OnInit, OnDestroy {\r\n    protected lectureService = inject(LectureService);\r\n    private route = inject(ActivatedRoute);\r\n    private router = inject(Router);\r\n    private alertService = inject(AlertService);\r\n    private modalService = inject(NgbModal);\r\n    private sortService = inject(SortService);\r\n    private profileService = inject(ProfileService);\r\n    private irisSettingsService = inject(IrisSettingsService);\r\n\r\n    lectures: Lecture[];\r\n    filteredLectures: Lecture[];\r\n    courseId: number;\r\n\r\n    private dialogErrorSource = new Subject<string>();\r\n    dialogError$ = this.dialogErrorSource.asObservable();\r\n\r\n    activeFilters = new Set<LectureDateFilter>();\r\n    predicate: string;\r\n    ascending: boolean;\r\n\r\n    irisEnabled = false;\r\n\r\n    readonly filterType = LectureDateFilter;\r\n    readonly documentationType: DocumentationType = 'Lecture';\r\n    readonly ingestionState: IngestionState;\r\n\r\n    // Icons\r\n    faPlus = faPlus;\r\n    faFileImport = faFileImport;\r\n    faFileExport = faFileExport;\r\n    faTrash = faTrash;\r\n    faPencilAlt = faPencilAlt;\r\n    faFile = faFile;\r\n    faPuzzlePiece = faPuzzlePiece;\r\n    faFilter = faFilter;\r\n    faSort = faSort;\r\n    lectureIngestionEnabled = false;\r\n\r\n    protected readonly IngestionState = IngestionState;\r\n\r\n    private profileInfoSubscription: Subscription;\r\n\r\n    constructor() {\r\n        this.predicate = 'id';\r\n        this.ascending = true;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.courseId = Number(this.route.snapshot.paramMap.get('courseId'));\r\n        this.profileInfoSubscription = this.profileService.getProfileInfo().subscribe(async (profileInfo) => {\r\n            this.irisEnabled = profileInfo.activeProfiles.includes(PROFILE_IRIS);\r\n            if (this.irisEnabled) {\r\n                this.irisSettingsService.getCombinedCourseSettings(this.courseId).subscribe((settings) => {\r\n                    this.lectureIngestionEnabled = settings?.irisLectureIngestionSettings?.enabled || false;\r\n                });\r\n            }\r\n        });\r\n        this.loadAll();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.dialogErrorSource.unsubscribe();\r\n        this.profileInfoSubscription?.unsubscribe();\r\n    }\r\n\r\n    trackId(_index: number, item: Lecture) {\r\n        return item.id;\r\n    }\r\n\r\n    /**\r\n     * Opens the import modal and imports the selected lecture\r\n     */\r\n    openImportModal() {\r\n        const modalRef = this.modalService.open(LectureImportComponent, { size: 'lg', backdrop: 'static' });\r\n        modalRef.result.then(\r\n            (result: Lecture) => {\r\n                this.lectureService\r\n                    .import(this.courseId, result.id!)\r\n                    .pipe(\r\n                        filter((res: HttpResponse<Lecture>) => res.ok),\r\n                        map((res: HttpResponse<Lecture>) => res.body),\r\n                    )\r\n                    .subscribe({\r\n                        next: (res: Lecture) => {\r\n                            this.lectures.push(res);\r\n                            this.router.navigate(['course-management', res.course!.id, 'lectures', res.id]);\r\n                        },\r\n                        error: (res: HttpErrorResponse) => onError(this.alertService, res),\r\n                    });\r\n            },\r\n            () => {},\r\n        );\r\n    }\r\n\r\n    private deleteLectureFromDisplayedLectures(lectureId: number) {\r\n        this.dialogErrorSource.next('');\r\n        this.lectures = this.lectures.filter((lecture) => lecture.id !== lectureId);\r\n        this.applyFilters();\r\n    }\r\n\r\n    /**\r\n     * Deletes Lecture\r\n     * @param lectureId the id of the lecture\r\n     */\r\n    deleteLecture(lectureId: number) {\r\n        this.lectureService.delete(lectureId).subscribe({\r\n            next: () => {\r\n                this.deleteLectureFromDisplayedLectures(lectureId);\r\n            },\r\n            error: (error: HttpErrorResponse) => this.dialogErrorSource.next(error.message),\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Toggles some filters for the lectures\r\n     * @param filters The filters which should be toggled (activated if not already activated, and vice versa)\r\n     */\r\n    toggleFilters(filters: LectureDateFilter[]) {\r\n        filters.forEach((f) => (this.activeFilters.has(f) ? this.activeFilters.delete(f) : this.activeFilters.add(f)));\r\n        this.applyFilters();\r\n    }\r\n\r\n    sortRows() {\r\n        this.sortService.sortByProperty(this.filteredLectures, this.predicate, this.ascending);\r\n    }\r\n\r\n    private loadAll() {\r\n        this.lectureService\r\n            .findAllByCourseIdWithSlides(this.courseId)\r\n            .pipe(\r\n                filter((res: HttpResponse<Lecture[]>) => res.ok),\r\n                map((res: HttpResponse<Lecture[]>) => res.body),\r\n            )\r\n            .subscribe({\r\n                next: (res: Lecture[]) => {\r\n                    this.lectures = res.map((lectureData) => {\r\n                        const lecture = new Lecture();\r\n                        Object.assign(lecture, lectureData);\r\n                        return lecture;\r\n                    });\r\n                    if (this.lectureIngestionEnabled) {\r\n                        this.updateIngestionStates();\r\n                    }\r\n                    this.applyFilters();\r\n                },\r\n                error: (res: HttpErrorResponse) => onError(this.alertService, res),\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Updates the lectures to show by applying the filters and sorting them\r\n     */\r\n    private applyFilters(): void {\r\n        if (this.activeFilters.size === 0) {\r\n            // If no filters selected, show all lectures\r\n            this.filteredLectures = this.lectures;\r\n        } else {\r\n            // Get the current system time\r\n            const now = dayjs();\r\n            // Initialize empty arrays for filtered Lectures\r\n            let filteredLectures: Array<Lecture> = [];\r\n\r\n            // update filteredLectures based on the selected filter option checkboxes\r\n            const pastLectures = this.lectures.filter((lecture) => lecture.endDate?.isBefore(now));\r\n            const currentLectures = this.lectures.filter((lecture) => {\r\n                if (lecture.startDate && lecture.endDate) {\r\n                    return lecture.startDate.isSameOrBefore(now) && lecture.endDate.isSameOrAfter(now);\r\n                } else if (lecture.startDate) {\r\n                    return lecture.startDate.isSameOrBefore(now);\r\n                } else if (lecture.endDate) {\r\n                    return lecture.endDate.isSameOrAfter(now);\r\n                }\r\n                return false;\r\n            });\r\n            const futureLectures = this.lectures.filter((lecture) => lecture.startDate?.isAfter(now));\r\n            const unspecifiedDatesLectures = this.lectures.filter((lecture) => lecture.startDate === undefined && lecture.endDate === undefined);\r\n\r\n            filteredLectures = this.activeFilters.has(LectureDateFilter.PAST) ? filteredLectures.concat(pastLectures) : filteredLectures;\r\n            filteredLectures = this.activeFilters.has(LectureDateFilter.CURRENT) ? filteredLectures.concat(currentLectures) : filteredLectures;\r\n            filteredLectures = this.activeFilters.has(LectureDateFilter.FUTURE) ? filteredLectures.concat(futureLectures) : filteredLectures;\r\n            filteredLectures = this.activeFilters.has(LectureDateFilter.UNSPECIFIED) ? filteredLectures.concat(unspecifiedDatesLectures) : filteredLectures;\r\n            this.filteredLectures = filteredLectures;\r\n        }\r\n\r\n        this.sortRows();\r\n    }\r\n\r\n    /**\r\n     * Trigger the Ingestion of all Lectures in the course.\r\n     */\r\n    ingestLecturesInPyris() {\r\n        if (this.lectures.first()) {\r\n            this.lectureService.ingestLecturesInPyris(this.lectures.first()!.course!.id!).subscribe({\r\n                next: () => this.alertService.success('artemisApp.iris.ingestionAlert.allLecturesSuccess'),\r\n                error: () => {\r\n                    this.alertService.error('artemisApp.iris.ingestionAlert.allLecturesError');\r\n                },\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Fetches the ingestion state for all lecture asynchronously and updates all the lectures ingestion state.\r\n     */\r\n    updateIngestionStates() {\r\n        this.lectureService.getIngestionState(this.courseId).subscribe({\r\n            next: (res: HttpResponse<Record<number, IngestionState>>) => {\r\n                if (res.body) {\r\n                    const ingestionStatesMap = res.body;\r\n                    this.lectures.forEach((lecture) => {\r\n                        if (lecture.id) {\r\n                            const ingestionState = ingestionStatesMap[lecture.id];\r\n                            if (ingestionState !== undefined) {\r\n                                lecture.ingested = ingestionState;\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            },\r\n            error: () => {\r\n                this.alertService.error('artemisApp.iris.ingestionAlert.pyrisError');\r\n            },\r\n        });\r\n    }\r\n}\r\n", "<div>\r\n    <div class=\"row\">\r\n        <div class=\"col-4 d-flex align-items-center\">\r\n            <h2 id=\"page-heading\">\r\n                <span jhiTranslate=\"artemisApp.lecture.home.title\"></span>\r\n            </h2>\r\n            <jhi-documentation-button [type]=\"documentationType\" />\r\n        </div>\r\n        <div class=\"d-flex flex-row-reverse bd-highlight mb-3\">\r\n            <div aria-label=\"Button group with nested dropdown\" class=\"btn-group\" role=\"group\">\r\n                <div class=\"me-2\" aria-label=\"Filter Dropdown\" ngbDropdown>\r\n                    <button\r\n                        class=\"btn\"\r\n                        [ngClass]=\"{ 'btn-secondary': activeFilters.size === 0, 'btn-success': activeFilters.size > 0 }\"\r\n                        ngbDropdownToggle\r\n                        id=\"filter-dropdown-button\"\r\n                    >\r\n                        <fa-icon [icon]=\"faFilter\" />\r\n                        <span class=\"d-s-none d-md-inline\" jhiTranslate=\"artemisApp.courseOverview.exerciseList.filter\" [translateValues]=\"{ num: activeFilters.size }\"></span>\r\n                    </button>\r\n                    <ul ngbDropdownMenu class=\"checkbox-menu text-nowrap pe-2\" aria-labelledby=\"filter-dropdown-button\">\r\n                        <li>\r\n                            <label>\r\n                                <input\r\n                                    id=\"filterPast\"\r\n                                    class=\"ms-2 form-check-input\"\r\n                                    (change)=\"toggleFilters([filterType.PAST])\"\r\n                                    [checked]=\"activeFilters.has(filterType.PAST)\"\r\n                                    type=\"checkbox\"\r\n                                />\r\n                                <span class=\"ms-2\" jhiTranslate=\"artemisApp.lecture.home.filterOptions.filterPast\"></span>\r\n                            </label>\r\n                        </li>\r\n                        <li>\r\n                            <label>\r\n                                <input\r\n                                    id=\"filterCurrent\"\r\n                                    class=\"ms-2 form-check-input\"\r\n                                    (change)=\"toggleFilters([filterType.CURRENT])\"\r\n                                    [checked]=\"activeFilters.has(filterType.CURRENT)\"\r\n                                    type=\"checkbox\"\r\n                                />\r\n                                <span class=\"ms-2\" jhiTranslate=\"artemisApp.lecture.home.filterOptions.filterCurrent\"></span>\r\n                            </label>\r\n                        </li>\r\n                        <li>\r\n                            <label>\r\n                                <input\r\n                                    id=\"filterFuture\"\r\n                                    class=\"ms-2 form-check-input\"\r\n                                    (change)=\"toggleFilters([filterType.FUTURE])\"\r\n                                    [checked]=\"activeFilters.has(filterType.FUTURE)\"\r\n                                    type=\"checkbox\"\r\n                                />\r\n                                <span class=\"ms-2\" jhiTranslate=\"artemisApp.lecture.home.filterOptions.filterFuture\"></span>\r\n                            </label>\r\n                        </li>\r\n                        <li>\r\n                            <label>\r\n                                <input\r\n                                    id=\"filterUnspecified\"\r\n                                    class=\"ms-2 form-check-input\"\r\n                                    (change)=\"toggleFilters([filterType.UNSPECIFIED])\"\r\n                                    [checked]=\"activeFilters.has(filterType.UNSPECIFIED)\"\r\n                                    type=\"checkbox\"\r\n                                />\r\n                                <span class=\"ms-2\" jhiTranslate=\"artemisApp.lecture.home.filterOptions.filterUnspecifiedDates\"></span>\r\n                            </label>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div class=\"d-flex-end text-end\">\r\n                    <button (click)=\"openImportModal()\" class=\"btn btn-primary jh-create-entity import-lecture text-truncate mb-1\" id=\"lecture-import-button\">\r\n                        <fa-icon [icon]=\"faFileImport\" />\r\n                        <span jhiTranslate=\"artemisApp.lecture.import.label\"></span>\r\n                    </button>\r\n                    <a id=\"jh-create-entity\" class=\"btn btn-primary jh-create-entity create-lecture mb-1\" [routerLink]=\"['new']\">\r\n                        <fa-icon [icon]=\"faPlus\" />\r\n                        <span jhiTranslate=\"artemisApp.lecture.home.createLabel\"></span>\r\n                    </a>\r\n                    @if (lectureIngestionEnabled) {\r\n                        <button (click)=\"ingestLecturesInPyris()\" class=\"btn btn-primary jh-create-entity mb-1\" id=\"backend-trigger-button\">\r\n                            <fa-icon [icon]=\"faFileExport\" />\r\n                            <span jhiTranslate=\"artemisApp.lecture.home.ingestLecturesInPyrisLabel\"></span>\r\n                        </button>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <br />\r\n    @if (filteredLectures) {\r\n        <div class=\"table-responsive\">\r\n            <table class=\"table table-striped\">\r\n                <thead>\r\n                    <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"ascending\" (sortChange)=\"sortRows()\">\r\n                        <th class=\"d-md-table-cell\" jhiSortBy=\"id\">\r\n                            <span jhiTranslate=\"global.field.id\"></span>\r\n                            <fa-icon [icon]=\"faSort\" />\r\n                        </th>\r\n                        <th jhiSortBy=\"title\">\r\n                            <span jhiTranslate=\"artemisApp.lecture.title\"></span>\r\n                            <fa-icon [icon]=\"faSort\" />\r\n                        </th>\r\n                        <th jhiSortBy=\"description\">\r\n                            <span jhiTranslate=\"artemisApp.lecture.description\"></span>\r\n                            <fa-icon [icon]=\"faSort\" />\r\n                        </th>\r\n                        <th jhiSortBy=\"visibleDate\">\r\n                            <span jhiTranslate=\"artemisApp.lecture.visibleDate\"></span>\r\n                            <fa-icon [icon]=\"faSort\" />\r\n                        </th>\r\n                        <th jhiSortBy=\"startDate\">\r\n                            <span jhiTranslate=\"artemisApp.lecture.startDate\"></span>\r\n                            <fa-icon [icon]=\"faSort\" />\r\n                        </th>\r\n                        <th jhiSortBy=\"endDate\">\r\n                            <span jhiTranslate=\"artemisApp.lecture.endDate\"></span>\r\n                            <fa-icon [icon]=\"faSort\" />\r\n                        </th>\r\n                        @if (lectureIngestionEnabled) {\r\n                            <th jhiSortBy=\"ingested\">\r\n                                <span jhiTranslate=\"artemisApp.lecture.ingestionState\"></span>\r\n                                <fa-icon [icon]=\"faSort\" />\r\n                            </th>\r\n                        }\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody class=\"markdown-preview\" id=\"lecture-preview\">\r\n                    @for (lecture of filteredLectures; track trackId(i, lecture); let i = $index) {\r\n                        <tr id=\"lecture-{{ lecture.id }}\">\r\n                            <td>\r\n                                <a [routerLink]=\"[lecture.id]\">{{ lecture.id }}</a>\r\n                            </td>\r\n                            <td>\r\n                                <a [routerLink]=\"[lecture.id]\">{{ lecture.title }}</a>\r\n                            </td>\r\n                            <td [innerHTML]=\"lecture.description | htmlForMarkdown\"></td>\r\n                            <td>{{ lecture.visibleDate | artemisDate }}</td>\r\n                            <td>{{ lecture.startDate | artemisDate }}</td>\r\n                            <td>{{ lecture.endDate | artemisDate }}</td>\r\n                            @if (lectureIngestionEnabled) {\r\n                                <td>\r\n                                    @switch (lecture.ingested) {\r\n                                        @case (IngestionState.NOT_STARTED) {\r\n                                            <span jhiTranslate=\"artemisApp.iris.ingestionStates.notStarted\"></span>\r\n                                        }\r\n                                        @case (IngestionState.IN_PROGRESS) {\r\n                                            <span jhiTranslate=\"artemisApp.iris.ingestionStates.inProgress\"></span>\r\n                                        }\r\n                                        @case (IngestionState.PARTIALLY_INGESTED) {\r\n                                            <span jhiTranslate=\"artemisApp.iris.ingestionStates.partiallyIngested\"></span>\r\n                                        }\r\n                                        @case (IngestionState.DONE) {\r\n                                            <span jhiTranslate=\"artemisApp.iris.ingestionStates.done\"></span>\r\n                                        }\r\n                                        @case (IngestionState.ERROR) {\r\n                                            <span jhiTranslate=\"artemisApp.iris.ingestionStates.error\"></span>\r\n                                        }\r\n                                        @default {\r\n                                            <span jhiTranslate=\"artemisApp.iris.ingestionStates.loading\"></span>\r\n                                        }\r\n                                    }\r\n                                </td>\r\n                            }\r\n                            <td class=\"text-end\">\r\n                                <div class=\"btn-group flex-btn-group-container\">\r\n                                    <div class=\"btn-group-vertical me-1 mb-1\">\r\n                                        @if (lecture.isAtLeastEditor) {\r\n                                            <a [routerLink]=\"[lecture.id, 'attachments']\" class=\"btn btn-primary mb-1 btn-sm\">\r\n                                                <fa-icon [icon]=\"faFile\" />\r\n                                                <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.attachments\"></span>\r\n                                            </a>\r\n                                        }\r\n                                        @if (lecture.isAtLeastEditor) {\r\n                                            <a [routerLink]=\"[lecture.id, 'unit-management']\" class=\"btn btn-primary btn-sm\" id=\"units\">\r\n                                                <fa-icon [icon]=\"faPuzzlePiece\" />\r\n                                                <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.units\"></span>\r\n                                            </a>\r\n                                        }\r\n                                    </div>\r\n                                    <div class=\"btn-group-vertical me-1 mb-1\">\r\n                                        @if (lecture.isAtLeastEditor) {\r\n                                            <a [routerLink]=\"[lecture.id, 'edit']\" class=\"btn btn-primary btn-sm\">\r\n                                                <fa-icon [icon]=\"faPencilAlt\" />\r\n                                                <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.edit\"></span>\r\n                                            </a>\r\n                                        }\r\n                                        @if (lecture.isAtLeastInstructor) {\r\n                                            <button\r\n                                                class=\"mt-1\"\r\n                                                jhiDeleteButton\r\n                                                id=\"delete-lecture\"\r\n                                                [entityTitle]=\"lecture.title || ''\"\r\n                                                deleteQuestion=\"artemisApp.lecture.delete.question\"\r\n                                                deleteConfirmationText=\"artemisApp.lecture.delete.typeNameToConfirm\"\r\n                                                (delete)=\"deleteLecture(lecture.id!)\"\r\n                                                [dialogError]=\"dialogError$\"\r\n                                            >\r\n                                                <fa-icon [icon]=\"faTrash\" />\r\n                                            </button>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    }\r\n</div>\r\n"],
  "mappings": "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",
  "names": ["LecturePagingService", "PagingService", "http", "inject", "HttpClient", "RESOURCE_URL", "constructor", "search", "pageable", "params", "createHttpParams", "get", "observe", "pipe", "map", "resp", "body", "factory", "\u0275fac", "providedIn", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275propertyInterpolate", "ctx_r0", "entityName", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275property", "column_r2", "name", "faSort", "column_r4", "getProperty", "entity_r5", "searchTerm", "\u0275\u0275repeaterCreate", "LectureImportComponent_For_43_For_10_Template", "\u0275\u0275repeaterTrackByIdentity", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r3", "$implicit", "\u0275\u0275nextContext", "\u0275\u0275resetView", "selectImport", "\u0275\u0275textInterpolate", "id", "\u0275\u0275repeater", "columns", "disabledIds", "includes", "tableColumns", "entity", "title", "course", "semester", "LectureImportComponent", "ImportComponent", "constructor", "pagingService", "inject", "LecturePagingService", "selectors", "features", "\u0275\u0275InheritDefinitionFeature", "decls", "vars", "consts", "template", "rf", "ctx", "clear", "\u0275\u0275twoWayListener", "$event", "i0", "\u0275\u0275twoWayBindingSet", "\u0275\u0275template", "LectureImportComponent_Conditional_17_Template", "sortRows", "listSorting", "sortedColumn", "LectureImportComponent_For_35_Template", "LectureImportComponent_For_43_Template", "trackId", "onPageChange", "state", "page", "\u0275\u0275twoWayProperty", "\u0275\u0275conditional", "loading", "content", "resultsOnPage", "total", "pageSize", "FormsModule", "\u0275NgNoValidate", "DefaultValueAccessor", "NgControlStatus", "NgControlStatusGroup", "NgModel", "NgForm", "TranslateDirective", "SortDirective", "SortByDirective", "FaIconComponent", "NgbHighlight", "ButtonComponent", "NgbPagination", "encapsulation", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "ingestLecturesInPyris", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "faFileExport", "faSort", "\u0275\u0275template", "LectureComponent_Conditional_94_For_59_Conditional_30_Case_3_Template", "LectureComponent_Conditional_94_For_59_Conditional_30_Case_4_Template", "LectureComponent_Conditional_94_For_59_Conditional_30_Case_5_Template", "LectureComponent_Conditional_94_For_59_Conditional_30_Case_6_Template", "LectureComponent_Conditional_94_For_59_Conditional_30_Case_7_Template", "LectureComponent_Conditional_94_For_59_Conditional_30_Case_8_Template", "\u0275\u0275conditional", "tmp_13_0", "lecture_r4", "ingested", "IngestionState", "NOT_STARTED", "IN_PROGRESS", "PARTIALLY_INGESTED", "DONE", "ERROR", "\u0275\u0275pureFunction1", "_c4", "id", "faFile", "_c5", "faPuzzlePiece", "_c6", "faPencilAlt", "_r5", "$implicit", "deleteLecture", "title", "dialogError$", "faTrash", "LectureComponent_Conditional_94_For_59_Conditional_30_Template", "LectureComponent_Conditional_94_For_59_Conditional_37_Template", "LectureComponent_Conditional_94_For_59_Conditional_38_Template", "LectureComponent_Conditional_94_For_59_Conditional_42_Template", "LectureComponent_Conditional_94_For_59_Conditional_43_Template", "\u0275\u0275propertyInterpolate1", "_c3", "\u0275\u0275textInterpolate", "\u0275\u0275pipeBind1", "description", "\u0275\u0275sanitizeHtml", "visibleDate", "startDate", "endDate", "lectureIngestionEnabled", "isAtLeastEditor", "isAtLeastInstructor", "\u0275\u0275twoWayListener", "$event", "_r3", "i0", "\u0275\u0275twoWayBindingSet", "predicate", "ascending", "sortRows", "LectureComponent_Conditional_94_Conditional_51_Template", "\u0275\u0275repeaterCreate", "LectureComponent_Conditional_94_For_59_Template", "\u0275\u0275componentInstance", "trackId", "\u0275\u0275twoWayProperty", "\u0275\u0275repeater", "filteredLectures", "LectureDateFilter", "LectureComponent", "lectureService", "inject", "LectureService", "route", "ActivatedRoute", "router", "Router", "alertService", "AlertService", "modalService", "NgbModal", "sortService", "SortService", "profileService", "ProfileService", "irisSettingsService", "IrisSettingsService", "lectures", "courseId", "dialogErrorSource", "Subject", "asObservable", "activeFilters", "Set", "irisEnabled", "filterType", "documentationType", "ingestionState", "faPlus", "faFileImport", "faFilter", "profileInfoSubscription", "constructor", "ngOnInit", "Number", "snapshot", "paramMap", "get", "getProfileInfo", "subscribe", "profileInfo", "__async", "activeProfiles", "includes", "PROFILE_IRIS", "getCombinedCourseSettings", "settings", "irisLectureIngestionSettings", "enabled", "loadAll", "ngOnDestroy", "unsubscribe", "_index", "item", "openImportModal", "open", "LectureImportComponent", "size", "backdrop", "result", "then", "import", "pipe", "filter", "res", "ok", "map", "body", "next", "push", "navigate", "course", "error", "onError", "deleteLectureFromDisplayedLectures", "lectureId", "lecture", "applyFilters", "delete", "message", "toggleFilters", "filters", "forEach", "f", "has", "add", "sortByProperty", "findAllByCourseIdWithSlides", "lectureData", "Lecture", "Object", "assign", "updateIngestionStates", "now", "dayjs", "pastLectures", "isBefore", "currentLectures", "isSameOrBefore", "isSameOrAfter", "futureLectures", "isAfter", "unspecifiedDatesLectures", "undefined", "PAST", "concat", "CURRENT", "FUTURE", "UNSPECIFIED", "first", "success", "getIngestionState", "ingestionStatesMap", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "LectureComponent_Conditional_87_Template", "LectureComponent_Conditional_94_Template", "\u0275\u0275pureFunction2", "_c0", "_c1", "\u0275\u0275pureFunction0", "_c2", "TranslateDirective", "DocumentationButtonComponent", "NgbDropdown", "NgbDropdownToggle", "NgClass", "FaIconComponent", "NgbDropdownMenu", "RouterLink", "SortDirective", "SortByDirective", "DeleteButtonDirective", "ArtemisDatePipe", "HtmlForMarkdownPipe", "encapsulation"]
}
