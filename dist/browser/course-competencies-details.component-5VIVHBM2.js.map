{
  "version": 3,
  "sources": ["src/main/webapp/app/shared/fireworks/fireworks.component.ts", "src/main/webapp/app/overview/course-competencies/course-competencies-details.component.ts", "src/main/webapp/app/overview/course-competencies/course-competencies-details.component.html"],
  "sourcesContent": ["import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'jhi-fireworks',\r\n    template: ` @if (active) {\r\n        <div class=\"pyro\">\r\n            <div class=\"before\"></div>\r\n            <div class=\"after\"></div>\r\n        </div>\r\n    }`,\r\n    styleUrls: ['./fireworks.component.scss'],\r\n})\r\nexport class FireworksComponent {\r\n    @Input() active = false;\r\n}\r\n", "import dayjs from 'dayjs/esm';\r\nimport { Component, OnDestroy, OnInit, inject } from '@angular/core';\r\nimport { ActivatedRoute, RouterLink } from '@angular/router';\r\nimport {\r\n    Competency,\r\n    CompetencyJol,\r\n    CompetencyLectureUnitLink,\r\n    CompetencyProgress,\r\n    ConfidenceReason,\r\n    MEDIUM_COMPETENCY_LINK_WEIGHT,\r\n    getConfidence,\r\n    getIcon,\r\n    getMastery,\r\n    getProgress,\r\n} from 'app/entities/competency.model';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { onError } from 'app/shared/util/global.utils';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { LectureUnit, LectureUnitType } from 'app/entities/lecture-unit/lectureUnit.model';\r\nimport { LectureUnitCompletionEvent } from 'app/overview/course-lectures/course-lecture-details.component';\r\nimport { LectureUnitService } from 'app/lecture/lecture-unit/lecture-unit-management/lectureUnit.service';\r\nimport { ExerciseUnit } from 'app/entities/lecture-unit/exerciseUnit.model';\r\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Observable, Subscription, combineLatest, forkJoin } from 'rxjs';\r\nimport { FeatureToggle, FeatureToggleService } from 'app/shared/feature-toggle/feature-toggle.service';\r\nimport { CourseStorageService } from 'app/course/manage/course-storage.service';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { CourseCompetencyService } from 'app/course/competencies/course-competency.service';\r\nimport { FireworksComponent } from 'app/shared/fireworks/fireworks.component';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgClass } from '@angular/common';\r\nimport { ExerciseUnitComponent } from '../course-lectures/exercise-unit/exercise-unit.component';\r\nimport { AttachmentUnitComponent } from '../course-lectures/attachment-unit/attachment-unit.component';\r\nimport { VideoUnitComponent } from '../course-lectures/video-unit/video-unit.component';\r\nimport { TextUnitComponent } from '../course-lectures/text-unit/text-unit.component';\r\nimport { OnlineUnitComponent } from '../course-lectures/online-unit/online-unit.component';\r\nimport { CompetencyRingsComponent } from '../../course/competencies/competency-rings/competency-rings.component';\r\nimport { SidePanelComponent } from 'app/shared/side-panel/side-panel.component';\r\nimport { HelpIconComponent } from 'app/shared/components/help-icon.component';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\nimport { ArtemisTimeAgoPipe } from 'app/shared/pipes/artemis-time-ago.pipe';\r\nimport { HtmlForMarkdownPipe } from 'app/shared/pipes/html-for-markdown.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-course-competencies-details',\r\n    templateUrl: './course-competencies-details.component.html',\r\n    styleUrls: ['../course-overview.scss'],\r\n    imports: [\r\n        FireworksComponent,\r\n        TranslateDirective,\r\n        FaIconComponent,\r\n        NgbTooltip,\r\n        NgClass,\r\n        RouterLink,\r\n        ExerciseUnitComponent,\r\n        AttachmentUnitComponent,\r\n        VideoUnitComponent,\r\n        TextUnitComponent,\r\n        OnlineUnitComponent,\r\n        CompetencyRingsComponent,\r\n        SidePanelComponent,\r\n        HelpIconComponent,\r\n        ArtemisTranslatePipe,\r\n        ArtemisTimeAgoPipe,\r\n        HtmlForMarkdownPipe,\r\n    ],\r\n})\r\nexport class CourseCompetenciesDetailsComponent implements OnInit, OnDestroy {\r\n    private featureToggleService = inject(FeatureToggleService);\r\n    private courseStorageService = inject(CourseStorageService);\r\n    private alertService = inject(AlertService);\r\n    private activatedRoute = inject(ActivatedRoute);\r\n    private courseCompetencyService = inject(CourseCompetencyService);\r\n    private lectureUnitService = inject(LectureUnitService);\r\n\r\n    competencyId?: number;\r\n    course?: Course;\r\n    courseId?: number;\r\n    isLoading = false;\r\n    competency: Competency;\r\n    competencyProgress: CompetencyProgress;\r\n    judgementOfLearning: CompetencyJol | undefined;\r\n    promptForJolRating = false;\r\n    showFireworks = false;\r\n    dashboardFeatureActive = false;\r\n    paramsSubscription: Subscription;\r\n\r\n    readonly LectureUnitType = LectureUnitType;\r\n    protected readonly ConfidenceReason = ConfidenceReason;\r\n\r\n    faPencilAlt = faPencilAlt;\r\n    getIcon = getIcon;\r\n\r\n    ngOnInit(): void {\r\n        // example route looks like: /courses/1/competencies/10\r\n        const courseIdParams$ = this.activatedRoute.parent?.parent?.params;\r\n        const competencyIdParams$ = this.activatedRoute.params;\r\n        const dashboardFeatureToggleActive$ = this.featureToggleService.getFeatureToggleActive(FeatureToggle.StudentCourseAnalyticsDashboard);\r\n\r\n        if (courseIdParams$) {\r\n            this.paramsSubscription = combineLatest([courseIdParams$, competencyIdParams$, dashboardFeatureToggleActive$]).subscribe(\r\n                ([courseIdParams, competencyIdParams, dashboardFeatureActive]) => {\r\n                    this.competencyId = Number(competencyIdParams.competencyId);\r\n                    this.courseId = Number(courseIdParams.courseId);\r\n                    this.dashboardFeatureActive = dashboardFeatureActive;\r\n                    this.course = this.courseStorageService.getCourse(this.courseId);\r\n                    if (this.competencyId && this.courseId) {\r\n                        this.loadData();\r\n                    }\r\n                },\r\n            );\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.paramsSubscription?.unsubscribe();\r\n    }\r\n\r\n    private loadData() {\r\n        this.isLoading = true;\r\n\r\n        const observables = [this.courseCompetencyService.findById(this.competencyId!, this.courseId!)] as Observable<\r\n            HttpResponse<Competency | Competency[] | { current: CompetencyJol; prior?: CompetencyJol }>\r\n        >[];\r\n\r\n        if (this.judgementOfLearningEnabled) {\r\n            observables.push(this.courseCompetencyService.getAllForCourse(this.courseId!));\r\n            observables.push(this.courseCompetencyService.getJoL(this.courseId!, this.competencyId!));\r\n        }\r\n\r\n        forkJoin(observables).subscribe({\r\n            next: ([competencyResp, courseCompetenciesResp, judgementOfLearningResp]) => {\r\n                this.competency = competencyResp.body! as Competency;\r\n                this.competencyProgress = this.getUserProgress();\r\n\r\n                if (this.judgementOfLearningEnabled) {\r\n                    const competencies = courseCompetenciesResp.body! as Competency[];\r\n                    const progress = this.competency.userProgress?.first();\r\n                    this.promptForJolRating = CompetencyJol.shouldPromptForJol(this.competency, progress, competencies);\r\n                    const judgementOfLearning = (judgementOfLearningResp?.body ?? undefined) as { current: CompetencyJol; prior?: CompetencyJol } | undefined;\r\n                    if (\r\n                        !judgementOfLearning?.current ||\r\n                        judgementOfLearning.current.competencyProgress !== (progress?.progress ?? 0) ||\r\n                        judgementOfLearning.current.competencyConfidence !== (progress?.confidence ?? 1)\r\n                    ) {\r\n                        this.judgementOfLearning = undefined;\r\n                    } else {\r\n                        this.judgementOfLearning = judgementOfLearning?.current;\r\n                    }\r\n                }\r\n\r\n                this.handleExerciseLinks();\r\n\r\n                this.isLoading = false;\r\n            },\r\n            error: (errorResponse: HttpErrorResponse) => onError(this.alertService, errorResponse),\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Add exercises as lecture units for display\r\n     * @private\r\n     */\r\n    private handleExerciseLinks() {\r\n        if (this.competency.exerciseLinks) {\r\n            this.competency.lectureUnitLinks = this.competency.lectureUnitLinks ?? [];\r\n            this.competency.lectureUnitLinks.push(\r\n                ...this.competency.exerciseLinks.map((exerciseLink) => {\r\n                    const exerciseUnit = new ExerciseUnit();\r\n                    exerciseUnit.id = exerciseLink.exercise?.id;\r\n                    exerciseUnit.exercise = exerciseLink.exercise;\r\n                    return new CompetencyLectureUnitLink(this.competency, exerciseUnit as LectureUnit, MEDIUM_COMPETENCY_LINK_WEIGHT);\r\n                }),\r\n            );\r\n        }\r\n    }\r\n\r\n    showFireworksIfMastered() {\r\n        if (this.mastery >= 100 && !this.showFireworks) {\r\n            setTimeout(() => (this.showFireworks = true), 1000);\r\n            setTimeout(() => (this.showFireworks = false), 6000);\r\n        }\r\n    }\r\n\r\n    getUserProgress(): CompetencyProgress {\r\n        if (this.competency.userProgress?.length) {\r\n            return this.competency.userProgress.first()!;\r\n        }\r\n        return { progress: 0, confidence: 1 } as CompetencyProgress;\r\n    }\r\n\r\n    get progress(): number {\r\n        return getProgress(this.competencyProgress);\r\n    }\r\n\r\n    get confidence(): number {\r\n        return getConfidence(this.competencyProgress);\r\n    }\r\n\r\n    get mastery(): number {\r\n        return getMastery(this.competencyProgress);\r\n    }\r\n\r\n    get isMastered(): boolean {\r\n        return this.mastery >= 100;\r\n    }\r\n\r\n    completeLectureUnit(event: LectureUnitCompletionEvent): void {\r\n        if (!event.lectureUnit.lecture || !event.lectureUnit.visibleToStudents || event.lectureUnit.completed === event.completed) {\r\n            return;\r\n        }\r\n\r\n        this.lectureUnitService.setCompletion(event.lectureUnit.id!, event.lectureUnit.lecture!.id!, event.completed).subscribe({\r\n            next: () => {\r\n                event.lectureUnit.completed = event.completed;\r\n\r\n                this.courseCompetencyService.getProgress(this.competencyId!, this.courseId!, true).subscribe({\r\n                    next: (resp) => {\r\n                        this.competency.userProgress = [resp.body!];\r\n                        this.showFireworksIfMastered();\r\n                    },\r\n                });\r\n            },\r\n            error: (res: HttpErrorResponse) => onError(this.alertService, res),\r\n        });\r\n    }\r\n\r\n    get softDueDatePassed(): boolean {\r\n        return dayjs().isAfter(this.competency.softDueDate);\r\n    }\r\n\r\n    get judgementOfLearningEnabled() {\r\n        return (this.course?.studentCourseAnalyticsDashboardEnabled ?? false) && this.dashboardFeatureActive;\r\n    }\r\n}\r\n", "<jhi-fireworks [active]=\"showFireworks\" />\r\n@if (isLoading) {\r\n    <div class=\"d-flex justify-content-center\">\r\n        <div class=\"spinner-border\" role=\"status\">\r\n            <span class=\"sr-only\" jhiTranslate=\"loading\"></span>\r\n        </div>\r\n    </div>\r\n}\r\n@if (competency) {\r\n    <div class=\"mt-n3\">\r\n        <!-- HEADER INFORMATION START -->\r\n        <div class=\"course-info-bar\">\r\n            <div class=\"row align-items-center\">\r\n                <div class=\"general-info col\">\r\n                    <h3 class=\"mb-0\">\r\n                        <fa-icon\r\n                            [icon]=\"getIcon(competency.taxonomy)\"\r\n                            [fixedWidth]=\"true\"\r\n                            [ngbTooltip]=\"'artemisApp.courseCompetency.taxonomies.' + (competency.taxonomy ?? 'none') | artemisTranslate\"\r\n                            container=\"body\"\r\n                        />\r\n                        <span>{{ competency!.title }}</span>\r\n                        @if (isMastered) {\r\n                            <span class=\"badge text-white text-bg-success\" jhiTranslate=\"artemisApp.competency.mastered\"></span>\r\n                        }\r\n                        @if (competency.optional) {\r\n                            <span class=\"badge text-white bg-warning\" jhiTranslate=\"artemisApp.competency.optional\"></span>\r\n                        }\r\n                    </h3>\r\n                    @if (competency.description) {\r\n                        <div class=\"markdown-preview\" [innerHTML]=\"competency.description | htmlForMarkdown\"></div>\r\n                    }\r\n                </div>\r\n                @if (competency.softDueDate) {\r\n                    <div class=\"col-auto text-right\">\r\n                        <span style=\"vertical-align: middle\" jhiTranslate=\"artemisApp.competency.competencyCard.softDueDate\"></span>\r\n                        <span class=\"badge\" [ngClass]=\"softDueDatePassed ? 'bg-danger' : 'bg-success'\" id=\"date-badge\"> {{ competency.softDueDate | artemisTimeAgo }} </span>\r\n                    </div>\r\n                }\r\n                <div class=\"col-auto\">\r\n                    @if (competency.course?.isAtLeastInstructor) {\r\n                        <a class=\"btn btn-sm btn-warning float-end\" [routerLink]=\"['/course-management', courseId, 'competency-management', competency.id, 'edit']\">\r\n                            <fa-icon [icon]=\"faPencilAlt\" />\r\n                            <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.edit\"></span>\r\n                        </a>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- HEADER INFORMATION END -->\r\n        <div class=\"row mt-2\">\r\n            <div class=\"col-lg-9 col-md-8\">\r\n                <div class=\"row\">\r\n                    @for (lectureUnitLink of competency.lectureUnitLinks; track lectureUnitLink) {\r\n                        @if (lectureUnitLink.lectureUnit; as lectureUnit) {\r\n                            <div class=\"col-12 col-lg-11 mt-3\">\r\n                                @switch (lectureUnit.type) {\r\n                                    @case (LectureUnitType.EXERCISE) {\r\n                                        <jhi-exercise-unit [exerciseUnit]=\"lectureUnit\" [course]=\"competency!.course!\" />\r\n                                    }\r\n                                    @case (LectureUnitType.ATTACHMENT) {\r\n                                        <jhi-attachment-unit [lectureUnit]=\"lectureUnit\" (onCompletion)=\"completeLectureUnit($event)\" />\r\n                                    }\r\n                                    @case (LectureUnitType.VIDEO) {\r\n                                        <jhi-video-unit [lectureUnit]=\"lectureUnit\" (onCompletion)=\"completeLectureUnit($event)\" />\r\n                                    }\r\n                                    @case (LectureUnitType.TEXT) {\r\n                                        <jhi-text-unit [lectureUnit]=\"lectureUnit\" (onCompletion)=\"completeLectureUnit($event)\" />\r\n                                    }\r\n                                    @case (LectureUnitType.ONLINE) {\r\n                                        <jhi-online-unit [lectureUnit]=\"lectureUnit\" (onCompletion)=\"completeLectureUnit($event)\" />\r\n                                    }\r\n                                }\r\n                            </div>\r\n                        }\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div class=\"col-lg-3 col-md-4\">\r\n                <div class=\"w-50 mx-auto my-2\">\r\n                    <jhi-competency-rings\r\n                        [progress]=\"progress\"\r\n                        [mastery]=\"mastery\"\r\n                        [hideProgress]=\"judgementOfLearningEnabled && promptForJolRating && judgementOfLearning === undefined\"\r\n                    />\r\n                </div>\r\n                @if (!promptForJolRating || !judgementOfLearningEnabled || judgementOfLearning !== undefined) {\r\n                    <jhi-side-panel class=\"d-block mt-3\" [panelHeader]=\"'artemisApp.competency.table.panelHeader' | artemisTranslate\">\r\n                        <div class=\"row mb-1 g-0\">\r\n                            <div class=\"col-7\"><span jhiTranslate=\"artemisApp.competency.mastery\"></span><jhi-help-icon text=\"artemisApp.competency.masteryDescription\" /></div>\r\n                            <div class=\"col-5\">\r\n                                <span> {{ mastery }} %</span>\r\n                                @if (competencyProgress?.confidenceReason && competencyProgress.confidenceReason !== ConfidenceReason.NO_REASON) {\r\n                                    <jhi-help-icon text=\"{{ 'artemisApp.competency.confidenceReasons.' + competencyProgress.confidenceReason }}\" />\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row mb-1 g-0\">\r\n                            <div class=\"col-7\"><span jhiTranslate=\"artemisApp.competency.progress\"></span><jhi-help-icon text=\"artemisApp.competency.progressDescription\" /></div>\r\n                            <div class=\"col-5\">{{ progress }} %</div>\r\n                        </div>\r\n                    </jhi-side-panel>\r\n                }\r\n                @if (judgementOfLearningEnabled && promptForJolRating && competency.id !== undefined && judgementOfLearning === undefined) {\r\n                    <div class=\"mt-3 d-flex justify-content-center\">\r\n                        <a\r\n                            [routerLink]=\"['/courses', courseId, 'dashboard']\"\r\n                            class=\"btn btn-info\"\r\n                            jhiTranslate=\"artemisApp.courseStudentDashboard.judgementOfLearning.redirectButton\"\r\n                        ></a>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "FireworksComponent", "active", "selectors", "inputs", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275template", "FireworksComponent_Conditional_1_Template", "\u0275\u0275advance", "\u0275\u0275conditional", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "\u0275\u0275pipeBind1", "ctx_r0", "competency", "description", "\u0275\u0275sanitizeHtml", "softDueDatePassed", "\u0275\u0275textInterpolate1", "softDueDate", "\u0275\u0275pureFunction2", "_c0", "courseId", "id", "faPencilAlt", "lectureUnit_r2", "course", "\u0275\u0275listener", "$event", "\u0275\u0275restoreView", "_r3", "\u0275\u0275nextContext", "\u0275\u0275resetView", "completeLectureUnit", "_r4", "_r5", "_r6", "\u0275\u0275template", "CourseCompetenciesDetailsComponent_Conditional_3_For_38_Conditional_1_Case_3_Template", "CourseCompetenciesDetailsComponent_Conditional_3_For_38_Conditional_1_Case_4_Template", "CourseCompetenciesDetailsComponent_Conditional_3_For_38_Conditional_1_Case_5_Template", "CourseCompetenciesDetailsComponent_Conditional_3_For_38_Conditional_1_Case_6_Template", "CourseCompetenciesDetailsComponent_Conditional_3_For_38_Conditional_1_Case_7_Template", "\u0275\u0275conditional", "tmp_13_0", "ctx", "type", "LectureUnitType", "EXERCISE", "ATTACHMENT", "VIDEO", "TEXT", "ONLINE", "CourseCompetenciesDetailsComponent_Conditional_3_For_38_Conditional_1_Template", "tmp_11_0", "lectureUnitLink_r7", "lectureUnit", "\u0275\u0275propertyInterpolate", "competencyProgress", "confidenceReason", "CourseCompetenciesDetailsComponent_Conditional_3_Conditional_48_Conditional_15_Template", "mastery", "ConfidenceReason", "NO_REASON", "progress", "\u0275\u0275pureFunction1", "_c1", "CourseCompetenciesDetailsComponent_Conditional_3_Conditional_18_Template", "CourseCompetenciesDetailsComponent_Conditional_3_Conditional_19_Template", "CourseCompetenciesDetailsComponent_Conditional_3_Conditional_21_Template", "CourseCompetenciesDetailsComponent_Conditional_3_Conditional_23_Template", "CourseCompetenciesDetailsComponent_Conditional_3_Conditional_26_Template", "\u0275\u0275repeaterCreate", "CourseCompetenciesDetailsComponent_Conditional_3_For_38_Template", "\u0275\u0275repeaterTrackByIdentity", "CourseCompetenciesDetailsComponent_Conditional_3_Conditional_48_Template", "CourseCompetenciesDetailsComponent_Conditional_3_Conditional_49_Template", "getIcon", "taxonomy", "tmp_3_0", "undefined", "\u0275\u0275textInterpolate", "title", "isMastered", "optional", "isAtLeastInstructor", "\u0275\u0275repeater", "lectureUnitLinks", "judgementOfLearningEnabled", "promptForJolRating", "judgementOfLearning", "CourseCompetenciesDetailsComponent", "featureToggleService", "inject", "FeatureToggleService", "courseStorageService", "CourseStorageService", "alertService", "AlertService", "activatedRoute", "ActivatedRoute", "courseCompetencyService", "CourseCompetencyService", "lectureUnitService", "LectureUnitService", "competencyId", "isLoading", "showFireworks", "dashboardFeatureActive", "paramsSubscription", "ngOnInit", "courseIdParams$", "parent", "params", "competencyIdParams$", "dashboardFeatureToggleActive$", "getFeatureToggleActive", "FeatureToggle", "StudentCourseAnalyticsDashboard", "combineLatest", "subscribe", "courseIdParams", "competencyIdParams", "Number", "getCourse", "loadData", "ngOnDestroy", "unsubscribe", "observables", "findById", "push", "getAllForCourse", "getJoL", "forkJoin", "next", "competencyResp", "courseCompetenciesResp", "judgementOfLearningResp", "body", "getUserProgress", "competencies", "userProgress", "first", "CompetencyJol", "shouldPromptForJol", "current", "competencyConfidence", "confidence", "handleExerciseLinks", "error", "errorResponse", "onError", "exerciseLinks", "map", "exerciseLink", "exerciseUnit", "ExerciseUnit", "exercise", "CompetencyLectureUnitLink", "MEDIUM_COMPETENCY_LINK_WEIGHT", "showFireworksIfMastered", "setTimeout", "length", "getProgress", "getConfidence", "getMastery", "event", "lecture", "visibleToStudents", "completed", "setCompletion", "resp", "res", "dayjs", "isAfter", "studentCourseAnalyticsDashboardEnabled", "selectors", "decls", "vars", "consts", "template", "rf", "CourseCompetenciesDetailsComponent_Conditional_2_Template", "CourseCompetenciesDetailsComponent_Conditional_3_Template", "FireworksComponent", "TranslateDirective", "FaIconComponent", "NgbTooltip", "NgClass", "RouterLink", "ExerciseUnitComponent", "AttachmentUnitComponent", "VideoUnitComponent", "TextUnitComponent", "OnlineUnitComponent", "CompetencyRingsComponent", "SidePanelComponent", "HelpIconComponent", "ArtemisTranslatePipe", "ArtemisTimeAgoPipe", "HtmlForMarkdownPipe", "styles"]
}
