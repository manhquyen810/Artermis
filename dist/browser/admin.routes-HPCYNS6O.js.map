{
  "version": 3,
  "sources": ["src/main/webapp/app/admin/user-management/user-management-resolve.service.ts", "src/main/webapp/app/admin/user-management/user-management.route.ts", "src/main/webapp/app/admin/system-notification-management/system-notification-management-resolve.service.ts", "src/main/webapp/app/admin/system-notification-management/system-notification-management.route.ts", "src/main/webapp/app/admin/organization-management/organization-management-resolve.service.ts", "src/main/webapp/app/admin/organization-management/organization-management.route.ts", "src/main/webapp/app/admin/lti-configuration/lti-configuration.route.ts", "src/main/webapp/app/admin/upcoming-exams-and-exercises/upcoming-exams-and-exercises.component.ts", "src/main/webapp/app/admin/upcoming-exams-and-exercises/upcoming-exams-and-exercises.component.html", "src/main/webapp/app/admin/admin.routes.ts"],
  "sourcesContent": ["import { Injectable, inject } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { User } from 'app/core/user/user.model';\r\nimport { Observable, of } from 'rxjs';\r\nimport { AdminUserService } from 'app/core/user/admin-user.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserManagementResolve implements Resolve<User> {\r\n    private adminUserService = inject(AdminUserService);\r\n\r\n    /**\r\n     * Resolve route to find the user before the route is activated\r\n     * @param route  contains the information about a route associated with a component loaded in an outlet at a particular dayjs in time\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n        if (route.params['login']) {\r\n            return this.adminUserService.findUser(route.params['login']);\r\n        }\r\n        return of(new User());\r\n    }\r\n}\r\n", "import { Route } from '@angular/router';\r\n\r\nimport { UserManagementResolve } from 'app/admin/user-management/user-management-resolve.service';\r\n\r\nexport const userManagementRoute: Route[] = [\r\n    {\r\n        path: 'user-management',\r\n        loadComponent: () => import('app/admin/user-management/user-management.component').then((m) => m.UserManagementComponent),\r\n        data: {\r\n            pageTitle: 'artemisApp.userManagement.home.title',\r\n            defaultSort: 'id,asc',\r\n        },\r\n    },\r\n    {\r\n        // Create a new path without a component defined to prevent resolver caching and the UserManagementComponent from being always rendered\r\n        path: 'user-management',\r\n        data: {\r\n            pageTitle: 'artemisApp.userManagement.home.title',\r\n        },\r\n        children: [\r\n            {\r\n                path: 'new',\r\n                loadComponent: () => import('app/admin/user-management/user-management-update.component').then((m) => m.UserManagementUpdateComponent),\r\n                resolve: {\r\n                    user: UserManagementResolve,\r\n                },\r\n                data: {\r\n                    pageTitle: 'artemisApp.userManagement.home.createLabel',\r\n                },\r\n            },\r\n            {\r\n                path: ':login',\r\n                loadComponent: () => import('app/admin/user-management/user-management-detail.component').then((m) => m.UserManagementDetailComponent),\r\n                resolve: {\r\n                    user: UserManagementResolve,\r\n                },\r\n                data: {\r\n                    pageTitle: 'artemisApp.userManagement.home.title',\r\n                },\r\n            },\r\n            {\r\n                // Create a new path without a component defined to prevent resolver caching and the UserManagementDetailComponent from being always rendered\r\n                path: ':login',\r\n                resolve: {\r\n                    user: UserManagementResolve,\r\n                },\r\n                children: [\r\n                    {\r\n                        path: 'edit',\r\n                        loadComponent: () => import('app/admin/user-management/user-management-update.component').then((m) => m.UserManagementUpdateComponent),\r\n                        data: {\r\n                            pageTitle: 'artemisApp.userManagement.home.editLabel',\r\n                        },\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n];\r\n", "import { HttpResponse } from '@angular/common/http';\r\nimport { Injectable, inject } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { SystemNotification } from 'app/entities/system-notification.model';\r\nimport { SystemNotificationService } from 'app/shared/notification/system-notification/system-notification.service';\r\nimport { filter, map } from 'rxjs/operators';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SystemNotificationManagementResolve implements Resolve<SystemNotification> {\r\n    private service = inject(SystemNotificationService);\r\n\r\n    /**\r\n     * Resolves the route and initializes system notification from id route param\r\n     * @param route\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot) {\r\n        if (route.params['id']) {\r\n            return this.service.find(parseInt(route.params['id'], 10)).pipe(\r\n                filter((response: HttpResponse<SystemNotification>) => response.ok),\r\n                map((response: HttpResponse<SystemNotification>) => response.body!),\r\n            );\r\n        }\r\n        return new SystemNotification();\r\n    }\r\n}\r\n", "import { Route } from '@angular/router';\r\n\r\nimport { SystemNotificationManagementResolve } from 'app/admin/system-notification-management/system-notification-management-resolve.service';\r\n\r\nexport const systemNotificationManagementRoute: Route[] = [\r\n    {\r\n        path: 'system-notification-management',\r\n        loadComponent: () => import('app/admin/system-notification-management/system-notification-management.component').then((m) => m.SystemNotificationManagementComponent),\r\n        data: {\r\n            pageTitle: 'artemisApp.systemNotification.systemNotifications',\r\n            defaultSort: 'id,asc',\r\n        },\r\n    },\r\n    {\r\n        // Create a new path without a component defined to prevent resolver caching and the SystemNotificationManagementComponent from being always rendered\r\n        path: 'system-notification-management',\r\n        data: {\r\n            pageTitle: 'artemisApp.systemNotification.systemNotifications',\r\n        },\r\n        children: [\r\n            {\r\n                path: 'new',\r\n                loadComponent: () =>\r\n                    import('app/admin/system-notification-management/system-notification-management-update.component').then((m) => m.SystemNotificationManagementUpdateComponent),\r\n                data: {\r\n                    pageTitle: 'global.generic.create',\r\n                },\r\n            },\r\n            {\r\n                path: ':id',\r\n                loadComponent: () =>\r\n                    import('app/admin/system-notification-management/system-notification-management-detail.component').then((m) => m.SystemNotificationManagementDetailComponent),\r\n                resolve: {\r\n                    notification: SystemNotificationManagementResolve,\r\n                },\r\n                data: {\r\n                    pageTitle: 'artemisApp.systemNotification.systemNotifications',\r\n                    breadcrumbLabelVariable: 'notification.body.id',\r\n                },\r\n            },\r\n            {\r\n                // Create a new path without a component defined to prevent resolver caching and the SystemNotificationManagementDetailComponent from being always rendered\r\n                path: ':id',\r\n                resolve: {\r\n                    notification: SystemNotificationManagementResolve,\r\n                },\r\n                data: {\r\n                    breadcrumbLabelVariable: 'notification.body.id',\r\n                },\r\n                children: [\r\n                    {\r\n                        path: 'edit',\r\n                        loadComponent: () =>\r\n                            import('app/admin/system-notification-management/system-notification-management-update.component').then(\r\n                                (m) => m.SystemNotificationManagementUpdateComponent,\r\n                            ),\r\n                        data: {\r\n                            pageTitle: 'global.generic.edit',\r\n                            breadcrumbLabelVariable: '',\r\n                        },\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n];\r\n", "import { Organization } from 'app/entities/organization.model';\r\nimport { OrganizationManagementService } from 'app/admin/organization-management/organization-management.service';\r\nimport { Injectable, inject } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class OrganizationManagementResolve implements Resolve<Organization> {\r\n    private organizationManagementService = inject(OrganizationManagementService);\r\n\r\n    resolve(route: ActivatedRouteSnapshot) {\r\n        if (route.params['id']) {\r\n            return this.organizationManagementService.getOrganizationById(route.params['id']);\r\n        }\r\n        return new Organization();\r\n    }\r\n}\r\n", "import { Route } from '@angular/router';\r\n\r\nimport { OrganizationManagementResolve } from 'app/admin/organization-management/organization-management-resolve.service';\r\n\r\nexport const organizationMgmtRoute: Route[] = [\r\n    {\r\n        path: 'organization-management',\r\n        loadComponent: () => import('app/admin/organization-management/organization-management.component').then((m) => m.OrganizationManagementComponent),\r\n        data: {\r\n            pageTitle: 'artemisApp.organizationManagement.title',\r\n        },\r\n    },\r\n    {\r\n        path: 'organization-management',\r\n        data: {\r\n            pageTitle: 'artemisApp.organizationManagement.title',\r\n        },\r\n        children: [\r\n            {\r\n                path: 'new',\r\n                loadComponent: () => import('app/admin/organization-management/organization-management-update.component').then((m) => m.OrganizationManagementUpdateComponent),\r\n                resolve: {\r\n                    organization: OrganizationManagementResolve,\r\n                },\r\n                data: {\r\n                    pageTitle: 'artemisApp.organizationManagement.addLabel',\r\n                },\r\n            },\r\n            {\r\n                path: ':id',\r\n                loadComponent: () => import('app/admin/organization-management/organization-management-detail.component').then((m) => m.OrganizationManagementDetailComponent),\r\n                resolve: {\r\n                    organization: OrganizationManagementResolve,\r\n                },\r\n                data: {\r\n                    pageTitle: 'artemisApp.organizationManagement.title',\r\n                    breadcrumbLabelVariable: 'organization.id',\r\n                },\r\n            },\r\n            {\r\n                path: ':id',\r\n                resolve: {\r\n                    organization: OrganizationManagementResolve,\r\n                },\r\n                data: {\r\n                    breadcrumbLabelVariable: 'organization.id',\r\n                },\r\n                children: [\r\n                    {\r\n                        path: 'edit',\r\n                        loadComponent: () =>\r\n                            import('app/admin/organization-management/organization-management-update.component').then((m) => m.OrganizationManagementUpdateComponent),\r\n                        data: {\r\n                            pageTitle: 'artemisApp.organizationManagement.addOrEditLabel',\r\n                            breadcrumbLabelVariable: 'organization.id',\r\n                        },\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n];\r\n", "import { Routes } from '@angular/router';\r\n\r\nimport { Authority } from 'app/shared/constants/authority.constants';\r\nimport { UserRouteAccessService } from 'app/core/auth/user-route-access-service';\r\n\r\nexport const ltiConfigurationRoute: Routes = [\r\n    {\r\n        path: 'lti-configuration',\r\n        loadComponent: () => import('app/admin/lti-configuration/lti-configuration.component').then((m) => m.LtiConfigurationComponent),\r\n        data: {\r\n            pageTitle: 'global.menu.admin.lti',\r\n            defaultSort: 'id,desc',\r\n        },\r\n    },\r\n    {\r\n        path: 'lti-configuration',\r\n        data: {\r\n            pageTitle: 'global.menu.admin.lti',\r\n        },\r\n        children: [\r\n            {\r\n                path: 'new',\r\n                loadComponent: () => import('app/admin/lti-configuration/edit-lti-configuration.component').then((m) => m.EditLtiConfigurationComponent),\r\n                data: {\r\n                    authorities: [Authority.ADMIN],\r\n                    pageTitle: 'artemisApp.lti.addOrEditLtiPlatform',\r\n                },\r\n                canActivate: [UserRouteAccessService],\r\n            },\r\n            {\r\n                path: ':platformId',\r\n                data: {\r\n                    breadcrumbLabelVariable: 'platform.id',\r\n                },\r\n                children: [\r\n                    {\r\n                        path: 'edit',\r\n                        loadComponent: () => import('app/admin/lti-configuration/edit-lti-configuration.component').then((m) => m.EditLtiConfigurationComponent),\r\n                        data: {\r\n                            authorities: [Authority.ADMIN],\r\n                            pageTitle: 'artemisApp.lti.addOrEditLtiPlatform',\r\n                        },\r\n                        canActivate: [UserRouteAccessService],\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n];\r\n", "import { Component, OnInit, inject } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { EntityArrayResponseType as ExerciseEntityArrayResponseType, ExerciseService } from 'app/exercises/shared/exercise/exercise.service';\r\nimport { Exercise } from 'app/entities/exercise.model';\r\nimport { Exam } from 'app/entities/exam/exam.model';\r\nimport { ExamManagementService } from 'app/exam/manage/exam-management.service';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { RouterLink } from '@angular/router';\r\nimport { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-upcoming-exams-and-exercises',\r\n    templateUrl: './upcoming-exams-and-exercises.component.html',\r\n    styles: ['.table {table-layout: fixed}'],\r\n    imports: [TranslateDirective, RouterLink, ArtemisDatePipe],\r\n})\r\nexport class UpcomingExamsAndExercisesComponent implements OnInit {\r\n    private exerciseService = inject(ExerciseService);\r\n    private examManagementService = inject(ExamManagementService);\r\n\r\n    upcomingExercises: Exercise[] = [];\r\n    upcomingExams: Exam[] = [];\r\n\r\n    predicate: string;\r\n    reverse: boolean;\r\n\r\n    ngOnInit(): void {\r\n        this.exerciseService.getUpcomingExercises().subscribe((res: ExerciseEntityArrayResponseType) => {\r\n            this.upcomingExercises = res.body ?? [];\r\n        });\r\n\r\n        this.examManagementService.findAllCurrentAndUpcomingExams().subscribe((res: HttpResponse<Exam[]>) => {\r\n            this.upcomingExams = res.body ?? [];\r\n        });\r\n    }\r\n\r\n    trackByExercise(_index: number, item: Exercise) {\r\n        return `${item.course?.id}_${item.id}`;\r\n    }\r\n\r\n    trackByExam(_index: number, item: Exam) {\r\n        return `${item.course?.id}_${item.id}`;\r\n    }\r\n}\r\n", "<div>\r\n    <div class=\"row\">\r\n        <div class=\"col-12 col-sm\">\r\n            <h4 jhiTranslate=\"artemisApp.upcomingExamsAndExercises.upcomingExercises\"></h4>\r\n        </div>\r\n    </div>\r\n    @if (upcomingExercises) {\r\n        <div class=\"table-responsive\">\r\n            <table class=\"table table-striped\">\r\n                <thead>\r\n                    <tr>\r\n                        <th class=\"d-md-table-cell\" style=\"width: 300px\">\r\n                            <span jhiTranslate=\"artemisApp.upcomingExamsAndExercises.exercise\"></span>\r\n                        </th>\r\n                        <th class=\"d-md-table-cell\" style=\"width: 300px\">\r\n                            <span jhiTranslate=\"artemisApp.upcomingExamsAndExercises.course\"></span>\r\n                        </th>\r\n                        <th class=\"d-md-table-cell\" style=\"width: 180px\">\r\n                            <span jhiTranslate=\"artemisApp.upcomingExamsAndExercises.releaseDate\"></span>\r\n                        </th>\r\n                        <th class=\"d-md-table-cell\" style=\"width: 180px\">\r\n                            <span jhiTranslate=\"artemisApp.upcomingExamsAndExercises.dueDate\"></span>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    @for (exercise of upcomingExercises; track trackByExercise($index, exercise)) {\r\n                        <tr>\r\n                            <td>\r\n                                <span class=\"bold\">\r\n                                    <a [routerLink]=\"['/course-management', exercise.course?.id, exercise.type + '-exercises', exercise.id]\">{{ exercise.title }}</a>\r\n                                </span>\r\n                            </td>\r\n                            @if (exercise.course; as course) {\r\n                                <td>\r\n                                    <span class=\"bold\">\r\n                                        <a [routerLink]=\"['/course-management', course.id]\">{{ course.title }}</a>\r\n                                    </span>\r\n                                </td>\r\n                            } @else {\r\n                                <td>-</td>\r\n                            }\r\n                            <td>{{ exercise.releaseDate | artemisDate }}</td>\r\n                            <td>{{ exercise.dueDate | artemisDate }}</td>\r\n                        </tr>\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    }\r\n    <br />\r\n    <div>\r\n        <div class=\"row\">\r\n            <div class=\"col-12 col-sm\">\r\n                <h4 jhiTranslate=\"artemisApp.upcomingExamsAndExercises.upcomingExams\"></h4>\r\n            </div>\r\n        </div>\r\n        @if (upcomingExams) {\r\n            <div class=\"table-responsive\">\r\n                <table class=\"table table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th class=\"d-md-table-cell\" style=\"width: 300px\">\r\n                                <span jhiTranslate=\"artemisApp.upcomingExamsAndExercises.exam\"></span>\r\n                            </th>\r\n                            <th class=\"d-md-table-cell\" style=\"width: 300px\">\r\n                                <span jhiTranslate=\"artemisApp.upcomingExamsAndExercises.course\"></span>\r\n                            </th>\r\n                            <th class=\"d-md-table-cell\" style=\"width: 180px\">\r\n                                <span jhiTranslate=\"artemisApp.examManagement.visibleDate\"></span>\r\n                            </th>\r\n                            <th class=\"d-md-table-cell\" style=\"width: 180px\">\r\n                                <span jhiTranslate=\"artemisApp.examManagement.startDate\"></span>\r\n                            </th>\r\n                            <th class=\"d-md-table-cell\" style=\"width: 180px\">\r\n                                <span jhiTranslate=\"artemisApp.examManagement.endDate\"></span>\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        @for (exam of upcomingExams; track trackByExam($index, exam)) {\r\n                            <tr>\r\n                                <td>\r\n                                    <span class=\"bold\">\r\n                                        <a [routerLink]=\"['/course-management', exam.course?.id, 'exams', exam.id]\">{{ exam.title }}</a>\r\n                                    </span>\r\n                                </td>\r\n                                @if (exam.course; as course) {\r\n                                    <td>\r\n                                        <span class=\"bold\">\r\n                                            <a [routerLink]=\"['/course-management', course.id]\">{{ course.title }}</a>\r\n                                        </span>\r\n                                    </td>\r\n                                } @else {\r\n                                    <td>-</td>\r\n                                }\r\n                                <td>{{ exam.visibleDate | artemisDate }}</td>\r\n                                <td>{{ exam.startDate | artemisDate }}</td>\r\n                                <td>{{ exam.endDate | artemisDate }}</td>\r\n                            </tr>\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        }\r\n    </div>\r\n</div>\r\n", "import { Routes } from '@angular/router';\r\nimport { UserRouteAccessService } from 'app/core/auth/user-route-access-service';\r\nimport { userManagementRoute } from 'app/admin/user-management/user-management.route';\r\nimport { systemNotificationManagementRoute } from 'app/admin/system-notification-management/system-notification-management.route';\r\nimport { IrisGuard } from 'app/iris/iris-guard.service';\r\nimport { Authority } from 'app/shared/constants/authority.constants';\r\n\r\nimport { organizationMgmtRoute } from 'app/admin/organization-management/organization-management.route';\r\n\r\nimport { LocalCIGuard } from 'app/localci/localci-guard.service';\r\nimport { ltiConfigurationRoute } from 'app/admin/lti-configuration/lti-configuration.route';\r\n\r\nimport { PendingChangesGuard } from 'app/shared/guard/pending-changes.guard';\r\nimport { UpcomingExamsAndExercisesComponent } from 'app/admin/upcoming-exams-and-exercises/upcoming-exams-and-exercises.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'audits',\r\n        loadComponent: () => import('app/admin/audits/audits.component').then((m) => m.AuditsComponent),\r\n        data: {\r\n            pageTitle: 'audits.title',\r\n            defaultSort: 'auditEventDate,desc',\r\n        },\r\n    },\r\n    {\r\n        path: 'configuration',\r\n        loadComponent: () => import('app/admin/configuration/configuration.component').then((m) => m.ConfigurationComponent),\r\n        data: {\r\n            pageTitle: 'configuration.title',\r\n        },\r\n    },\r\n    {\r\n        path: 'feature-toggles',\r\n        loadComponent: () => import('app/admin/features/admin-feature-toggle.component').then((m) => m.AdminFeatureToggleComponent),\r\n        data: {\r\n            pageTitle: 'featureToggles.title',\r\n        },\r\n    },\r\n    {\r\n        path: 'health',\r\n        loadComponent: () => import('app/admin/health/health.component').then((m) => m.HealthComponent),\r\n        data: {\r\n            pageTitle: 'health.title',\r\n        },\r\n    },\r\n    {\r\n        path: 'logs',\r\n        loadComponent: () => import('app/admin/logs/logs.component').then((m) => m.LogsComponent),\r\n        data: {\r\n            pageTitle: 'logs.title',\r\n        },\r\n    },\r\n    {\r\n        path: 'docs',\r\n        loadComponent: () => import('app/admin/docs/docs.component').then((m) => m.DocsComponent),\r\n        data: {\r\n            pageTitle: 'global.menu.admin.apidocs',\r\n        },\r\n    },\r\n    {\r\n        path: 'metrics',\r\n        loadComponent: () => import('app/admin/metrics/metrics.component').then((m) => m.MetricsComponent),\r\n        data: {\r\n            pageTitle: 'metrics.title',\r\n        },\r\n    },\r\n    {\r\n        path: 'user-statistics',\r\n        loadComponent: () => import('app/admin/statistics/statistics.component').then((m) => m.StatisticsComponent),\r\n        data: {\r\n            pageTitle: 'statistics.title',\r\n        },\r\n    },\r\n    {\r\n        path: 'build-queue',\r\n        loadComponent: () => import('app/localci/build-queue/build-queue.component').then((m) => m.BuildQueueComponent),\r\n        data: {\r\n            pageTitle: 'artemisApp.buildQueue.title',\r\n        },\r\n        canActivate: [LocalCIGuard],\r\n    },\r\n    {\r\n        path: 'build-agents',\r\n        loadComponent: () => import('app/localci/build-agents/build-agent-summary/build-agent-summary.component').then((m) => m.BuildAgentSummaryComponent),\r\n        data: {\r\n            pageTitle: 'artemisApp.buildAgents.title',\r\n        },\r\n        canActivate: [LocalCIGuard],\r\n    },\r\n    {\r\n        path: 'build-agents/details',\r\n        loadComponent: () => import('app/localci/build-agents/build-agent-details/build-agent-details/build-agent-details.component').then((m) => m.BuildAgentDetailsComponent),\r\n        data: {\r\n            pageTitle: 'artemisApp.buildAgents.title',\r\n        },\r\n        canActivate: [LocalCIGuard],\r\n    },\r\n    {\r\n        path: 'standardized-competencies',\r\n        loadComponent: () => import('app/admin/standardized-competencies/standardized-competency-management.component').then((m) => m.StandardizedCompetencyManagementComponent),\r\n        data: {\r\n            pageTitle: 'artemisApp.standardizedCompetency.title',\r\n        },\r\n        canDeactivate: [PendingChangesGuard],\r\n    },\r\n    {\r\n        // Create a new path without a component defined to prevent the StandardizedCompetencyManagementComponent from being always rendered\r\n        path: 'standardized-competencies',\r\n        data: {\r\n            pageTitle: 'artemisApp.standardizedCompetency.title',\r\n        },\r\n        children: [\r\n            {\r\n                path: 'import',\r\n                loadComponent: () =>\r\n                    import('app/admin/standardized-competencies/import/admin-import-standardized-competencies.component').then(\r\n                        (m) => m.AdminImportStandardizedCompetenciesComponent,\r\n                    ),\r\n                data: {\r\n                    pageTitle: 'artemisApp.standardizedCompetency.import.title',\r\n                },\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        path: 'privacy-statement',\r\n        loadComponent: () => import('app/admin/legal/legal-document-update.component').then((m) => m.LegalDocumentUpdateComponent),\r\n        data: {\r\n            authorities: [Authority.ADMIN],\r\n        },\r\n    },\r\n    {\r\n        path: 'imprint',\r\n        loadComponent: () => import('app/admin/legal/legal-document-update.component').then((m) => m.LegalDocumentUpdateComponent),\r\n        data: {\r\n            authorities: [Authority.ADMIN],\r\n        },\r\n    },\r\n    {\r\n        path: 'iris',\r\n        loadComponent: () => import('app/iris/settings/iris-global-settings-update/iris-global-settings-update.component').then((m) => m.IrisGlobalSettingsUpdateComponent),\r\n        data: {\r\n            authorities: [Authority.ADMIN],\r\n            pageTitle: 'artemisApp.iris.settings.title.global',\r\n        },\r\n        canActivate: [UserRouteAccessService, IrisGuard],\r\n        canDeactivate: [PendingChangesGuard],\r\n    },\r\n    {\r\n        path: 'cleanup-service',\r\n        loadComponent: () => import('app/admin/cleanup-service/cleanup-service.component').then((m) => m.CleanupServiceComponent),\r\n        data: {\r\n            pageTitle: 'cleanupService.title',\r\n        },\r\n    },\r\n    {\r\n        path: 'upcoming-exams-and-exercises',\r\n        component: UpcomingExamsAndExercisesComponent,\r\n        data: {\r\n            pageTitle: 'artemisApp.upcomingExamsAndExercises.upcomingExamsAndExercises',\r\n        },\r\n    },\r\n    ...organizationMgmtRoute,\r\n    ...userManagementRoute,\r\n    ...systemNotificationManagementRoute,\r\n    ...ltiConfigurationRoute,\r\n];\r\n\r\nexport default routes;\r\n"],
  "mappings": "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",
  "names": ["UserManagementResolve", "adminUserService", "inject", "AdminUserService", "resolve", "route", "params", "findUser", "of", "User", "factory", "\u0275fac", "providedIn", "userManagementRoute", "path", "loadComponent", "then", "m", "UserManagementComponent", "data", "pageTitle", "defaultSort", "children", "UserManagementUpdateComponent", "resolve", "user", "UserManagementResolve", "UserManagementDetailComponent", "SystemNotificationManagementResolve", "service", "inject", "SystemNotificationService", "resolve", "route", "params", "find", "parseInt", "pipe", "filter", "response", "ok", "map", "body", "SystemNotification", "factory", "\u0275fac", "providedIn", "systemNotificationManagementRoute", "path", "loadComponent", "then", "m", "SystemNotificationManagementComponent", "data", "pageTitle", "defaultSort", "children", "SystemNotificationManagementUpdateComponent", "SystemNotificationManagementDetailComponent", "resolve", "notification", "SystemNotificationManagementResolve", "breadcrumbLabelVariable", "OrganizationManagementResolve", "organizationManagementService", "inject", "OrganizationManagementService", "resolve", "route", "params", "getOrganizationById", "Organization", "factory", "\u0275fac", "providedIn", "organizationMgmtRoute", "path", "loadComponent", "then", "m", "OrganizationManagementComponent", "data", "pageTitle", "children", "OrganizationManagementUpdateComponent", "resolve", "organization", "OrganizationManagementResolve", "OrganizationManagementDetailComponent", "breadcrumbLabelVariable", "ltiConfigurationRoute", "path", "loadComponent", "then", "m", "LtiConfigurationComponent", "data", "pageTitle", "defaultSort", "children", "EditLtiConfigurationComponent", "authorities", "Authority", "ADMIN", "canActivate", "UserRouteAccessService", "breadcrumbLabelVariable", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "\u0275\u0275pureFunction1", "_c1", "course_r1", "id", "\u0275\u0275textInterpolate", "title", "\u0275\u0275template", "UpcomingExamsAndExercisesComponent_Conditional_10_For_34_Conditional_12_Template", "UpcomingExamsAndExercisesComponent_Conditional_10_For_34_Conditional_13_Template", "\u0275\u0275pureFunction3", "_c0", "exercise_r2", "course", "type", "\u0275\u0275conditional", "tmp_13_0", "\u0275\u0275pipeBind1", "releaseDate", "dueDate", "\u0275\u0275element", "\u0275\u0275repeaterCreate", "UpcomingExamsAndExercisesComponent_Conditional_10_For_34_Template", "\u0275\u0275componentInstance", "trackByExercise", "\u0275\u0275repeater", "ctx_r2", "upcomingExercises", "course_r4", "UpcomingExamsAndExercisesComponent_Conditional_23_For_39_Conditional_12_Template", "UpcomingExamsAndExercisesComponent_Conditional_23_For_39_Conditional_13_Template", "\u0275\u0275pureFunction2", "_c2", "exam_r5", "visibleDate", "startDate", "endDate", "UpcomingExamsAndExercisesComponent_Conditional_23_For_39_Template", "trackByExam", "upcomingExams", "UpcomingExamsAndExercisesComponent", "exerciseService", "inject", "ExerciseService", "examManagementService", "ExamManagementService", "predicate", "reverse", "ngOnInit", "getUpcomingExercises", "subscribe", "res", "body", "findAllCurrentAndUpcomingExams", "_index", "item", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "UpcomingExamsAndExercisesComponent_Conditional_10_Template", "UpcomingExamsAndExercisesComponent_Conditional_23_Template", "TranslateDirective", "RouterLink", "ArtemisDatePipe", "styles", "routes", "path", "loadComponent", "then", "m", "AuditsComponent", "data", "pageTitle", "defaultSort", "ConfigurationComponent", "AdminFeatureToggleComponent", "HealthComponent", "LogsComponent", "DocsComponent", "MetricsComponent", "StatisticsComponent", "BuildQueueComponent", "canActivate", "LocalCIGuard", "BuildAgentSummaryComponent", "BuildAgentDetailsComponent", "StandardizedCompetencyManagementComponent", "canDeactivate", "PendingChangesGuard", "children", "AdminImportStandardizedCompetenciesComponent", "LegalDocumentUpdateComponent", "authorities", "Authority", "ADMIN", "IrisGlobalSettingsUpdateComponent", "UserRouteAccessService", "IrisGuard", "CleanupServiceComponent", "component", "UpcomingExamsAndExercisesComponent", "organizationMgmtRoute", "userManagementRoute", "systemNotificationManagementRoute", "ltiConfigurationRoute", "admin_routes_default"]
}
