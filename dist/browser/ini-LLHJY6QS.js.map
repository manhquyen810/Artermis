{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/ini/ini.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.2(404545bded1df6ffa41ea0af4e8ddb219018c6c1)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/ini/ini.ts\nvar conf = {\n  comments: {\n    lineComment: \"#\"\n  },\n  brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]],\n  autoClosingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }],\n  surroundingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"',\n    close: '\"'\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".ini\",\n  // we include these common regular expressions\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [\n    // sections\n    [/^\\[[^\\]]*\\]/, \"metatag\"],\n    // keys\n    [/(^\\w+)(\\s*)(\\=)/, [\"key\", \"\", \"delimiter\"]],\n    // whitespace\n    {\n      include: \"@whitespace\"\n    },\n    // numbers\n    [/\\d+/, \"number\"],\n    // strings: recover on non-terminated strings\n    [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"],\n    // non-teminated string\n    [/'([^'\\\\]|\\\\.)*$/, \"string.invalid\"],\n    // non-teminated string\n    [/\"/, \"string\", '@string.\"'], [/'/, \"string\", \"@string.'\"]],\n    whitespace: [[/[ \\t\\r\\n]+/, \"\"], [/^\\s*[#;].*$/, \"comment\"]],\n    string: [[/[^\\\\\"']+/, \"string\"], [/@escapes/, \"string.escape\"], [/\\\\./, \"string.escape.invalid\"], [/[\"']/, {\n      cases: {\n        \"$#==$S2\": {\n          token: \"string\",\n          next: \"@pop\"\n        },\n        \"@default\": \"string\"\n      }\n    }]]\n  }\n};\nexport { conf, language };"],"mappings":"4BAQA,IAAIA,EAAO,CACT,SAAU,CACR,YAAa,GACf,EACA,SAAU,CAAC,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,CAAC,EAC7C,iBAAkB,CAAC,CACjB,KAAM,IACN,MAAO,GACT,EAAG,CACD,KAAM,IACN,MAAO,GACT,EAAG,CACD,KAAM,IACN,MAAO,GACT,EAAG,CACD,KAAM,IACN,MAAO,GACT,EAAG,CACD,KAAM,IACN,MAAO,GACT,CAAC,EACD,iBAAkB,CAAC,CACjB,KAAM,IACN,MAAO,GACT,EAAG,CACD,KAAM,IACN,MAAO,GACT,EAAG,CACD,KAAM,IACN,MAAO,GACT,EAAG,CACD,KAAM,IACN,MAAO,GACT,EAAG,CACD,KAAM,IACN,MAAO,GACT,CAAC,CACH,EACIC,EAAW,CACb,aAAc,GACd,aAAc,OAEd,QAAS,wEAET,UAAW,CACT,KAAM,CAEN,CAAC,cAAe,SAAS,EAEzB,CAAC,kBAAmB,CAAC,MAAO,GAAI,WAAW,CAAC,EAE5C,CACE,QAAS,aACX,EAEA,CAAC,MAAO,QAAQ,EAEhB,CAAC,kBAAmB,gBAAgB,EAEpC,CAAC,kBAAmB,gBAAgB,EAEpC,CAAC,IAAK,SAAU,WAAW,EAAG,CAAC,IAAK,SAAU,WAAW,CAAC,EAC1D,WAAY,CAAC,CAAC,aAAc,EAAE,EAAG,CAAC,cAAe,SAAS,CAAC,EAC3D,OAAQ,CAAC,CAAC,WAAY,QAAQ,EAAG,CAAC,WAAY,eAAe,EAAG,CAAC,MAAO,uBAAuB,EAAG,CAAC,OAAQ,CACzG,MAAO,CACL,UAAW,CACT,MAAO,SACP,KAAM,MACR,EACA,WAAY,QACd,CACF,CAAC,CAAC,CACJ,CACF","names":["conf","language"],"x_google_ignoreList":[0]}