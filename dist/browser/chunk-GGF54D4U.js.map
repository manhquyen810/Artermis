{
  "version": 3,
  "sources": ["src/main/webapp/app/exercises/programming/shared/code-editor/service/code-editor-file.service.ts", "src/main/webapp/app/exercises/programming/shared/code-editor/layout/code-editor-grid.component.ts", "src/main/webapp/app/exercises/programming/shared/code-editor/layout/code-editor-grid.component.html", "src/main/webapp/app/exercises/programming/shared/code-editor/file-browser/code-editor-file-browser.component.ts", "src/main/webapp/app/exercises/programming/shared/code-editor/file-browser/code-editor-file-browser.component.html", "src/main/webapp/app/exercises/programming/shared/code-editor/status/code-editor-status.component.ts", "src/main/webapp/app/exercises/programming/shared/code-editor/status/code-editor-status.component.html", "src/main/webapp/app/exercises/programming/shared/code-editor/file-browser/code-editor-file-browser-delete.ts", "src/main/webapp/app/exercises/programming/shared/code-editor/file-browser/code-editor-file-browser-delete.component.html", "src/main/webapp/app/exercises/programming/shared/code-editor/treeview/models/tree-view-item.ts", "src/main/webapp/app/exercises/programming/shared/code-editor/treeview/components/treeview-item/tree-view-item.component.ts", "src/main/webapp/app/exercises/programming/shared/code-editor/treeview/components/treeview-item/tree-view-item.component.html", "src/main/webapp/app/exercises/programming/shared/code-editor/treeview/components/treeview/tree-view.component.ts", "src/main/webapp/app/exercises/programming/shared/code-editor/treeview/components/treeview/tree-view.component.html", "src/main/webapp/app/exercises/programming/shared/code-editor/treeview/helpers/tree-view-helper.ts", "src/main/webapp/app/exercises/programming/shared/code-editor/file-browser/code-editor-file-browser-create-node.component.ts", "src/main/webapp/app/exercises/programming/shared/code-editor/file-browser/code-editor-file-browser-create-node.component.html", "src/main/webapp/app/exercises/programming/shared/code-editor/file-browser/code-editor-file-browser-node.component.ts", "src/main/webapp/app/exercises/programming/shared/code-editor/file-browser/code-editor-file-browser-badge.component.ts", "src/main/webapp/app/exercises/programming/shared/code-editor/file-browser/code-editor-file-browser-badge.component.html", "src/main/webapp/app/exercises/programming/shared/code-editor/file-browser/code-editor-file-browser-folder.component.ts", "src/main/webapp/app/exercises/programming/shared/code-editor/file-browser/code-editor-file-browser-folder.component.html", "src/main/webapp/app/exercises/programming/shared/code-editor/file-browser/code-editor-file-browser-file.component.ts", "src/main/webapp/app/exercises/programming/shared/code-editor/file-browser/code-editor-file-browser-file.component.html", "src/main/webapp/app/exercises/programming/shared/code-editor/service/code-editor-submission.service.ts", "src/main/webapp/app/exercises/programming/shared/code-editor/actions/code-editor-resolve-conflict-modal.component.ts", "src/main/webapp/app/exercises/programming/shared/code-editor/actions/code-editor-resolve-conflict-modal.component.html", "src/main/webapp/app/exercises/programming/shared/code-editor/actions/code-editor-confirm-refresh-modal.component.ts", "src/main/webapp/app/exercises/programming/shared/code-editor/actions/code-editor-confirm-refresh-modal.component.html", "src/main/webapp/app/exercises/programming/shared/code-editor/actions/code-editor-actions.component.ts", "src/main/webapp/app/exercises/programming/shared/code-editor/actions/code-editor-actions.component.html", "src/main/webapp/app/exercises/programming/shared/code-editor/build-output/code-editor-build-output.component.ts", "src/main/webapp/app/exercises/programming/shared/code-editor/build-output/code-editor-build-output.component.html", "src/main/webapp/app/exercises/programming/shared/code-editor/instructions/code-editor-instructions.component.ts", "src/main/webapp/app/exercises/programming/shared/code-editor/instructions/code-editor-instructions.component.html", "src/main/webapp/app/exercises/programming/assess/code-editor-tutor-assessment-inline-feedback.component.ts", "src/main/webapp/app/exercises/programming/assess/code-editor-tutor-assessment-inline-feedback.component.html", "src/main/webapp/app/exercises/programming/assess/code-editor-tutor-assessment-inline-feedback-suggestion.component.ts", "src/main/webapp/app/exercises/programming/assess/code-editor-tutor-assessment-inline-feedback-suggestion.component.html", "src/main/webapp/app/exercises/programming/shared/service/file-type.service.ts", "src/main/webapp/app/exercises/programming/shared/code-editor/monaco/code-editor-monaco.component.ts", "src/main/webapp/app/exercises/programming/shared/code-editor/monaco/code-editor-monaco.component.html", "src/main/webapp/app/shared/pipes/keys.pipe.ts", "src/main/webapp/app/exercises/programming/shared/code-editor/container/code-editor-container.component.ts", "src/main/webapp/app/exercises/programming/shared/code-editor/container/code-editor-container.component.html"],
  "sourcesContent": ["import { DeleteFileChange, FileChange, RenameFileChange } from 'app/exercises/programming/shared/code-editor/model/code-editor.model';\r\nimport { isEmpty as _isEmpty, fromPairs, toPairs } from 'lodash-es';\r\nimport { Injectable } from '@angular/core';\r\n\r\n/**\r\n * Updates references to files based on FileChanges.\r\n * This includes renaming and deleting files.\r\n * E.g.:\r\n * - file refs: {file: any, file2: any}\r\n * - fileChange: RenameFileChange(file, file3)\r\n * => file refs: {file3: any, file2: any}\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class CodeEditorFileService {\r\n    /**\r\n     * Update multiple references at once.\r\n     * @param refs\r\n     * @param fileChange\r\n     */\r\n    updateFileReferences = (refs: { [fileName: string]: any }, fileChange: FileChange) => {\r\n        if (fileChange instanceof RenameFileChange) {\r\n            const testRegex = new RegExp(`^${fileChange.oldFileName}($|/.*)`);\r\n            const replaceRegex = new RegExp(`^${fileChange.oldFileName}`);\r\n            return fromPairs(\r\n                toPairs(refs)\r\n                    .filter((entry) => !_isEmpty(entry))\r\n                    .map(([fileName, refContent]) => [testRegex.test(fileName) ? fileName.replace(replaceRegex, fileChange.newFileName) : fileName, refContent]),\r\n            );\r\n        } else if (fileChange instanceof DeleteFileChange) {\r\n            const testRegex = new RegExp(`^${fileChange.fileName}($|/.*)`);\r\n            return fromPairs(\r\n                toPairs(refs)\r\n                    .filter((entry) => !_isEmpty(entry))\r\n                    .filter(([fileName]) => !testRegex.test(fileName)),\r\n            );\r\n        } else {\r\n            return refs;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Update a single reference.\r\n     * @param fileName\r\n     * @param fileChange\r\n     */\r\n    updateFileReference = (fileName: string, fileChange: FileChange) => {\r\n        if (fileChange instanceof RenameFileChange) {\r\n            const testRegex = new RegExp(`^${fileChange.oldFileName}($|/.*)`);\r\n            const replaceRegex = new RegExp(`^${fileChange.oldFileName}`);\r\n            return testRegex.test(fileName) ? fileName.replace(replaceRegex, fileChange.newFileName) : fileName;\r\n        } else if (fileChange instanceof DeleteFileChange) {\r\n            const testRegex = new RegExp(`^${fileChange.fileName}($|/.*)`);\r\n            return testRegex.test(fileName) ? undefined : fileName;\r\n        } else {\r\n            return fileName;\r\n        }\r\n    };\r\n}\r\n", "import { AfterViewInit, Component, ContentChild, ElementRef, EventEmitter, Input, Output, Renderer2, ViewChild, ViewEncapsulation, inject } from '@angular/core';\r\nimport { Interactable } from '@interactjs/core/Interactable';\r\nimport interact from 'interactjs';\r\nimport { ResizeType } from 'app/exercises/programming/shared/code-editor/model/code-editor.model';\r\nimport { InteractableEvent } from 'app/exercises/programming/shared/code-editor/file-browser/code-editor-file-browser.component';\r\nimport { faGripLines, faGripLinesVertical } from '@fortawesome/free-solid-svg-icons';\r\nimport { CollapsableCodeEditorElement } from 'app/exercises/programming/shared/code-editor/container/code-editor-container.component';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\n\r\n@Component({\r\n    selector: 'jhi-code-editor-grid',\r\n    templateUrl: './code-editor-grid.component.html',\r\n    styleUrls: ['./code-editor-grid.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    imports: [FaIconComponent],\r\n})\r\nexport class CodeEditorGridComponent implements AfterViewInit {\r\n    private renderer = inject(Renderer2);\r\n\r\n    @ContentChild('editorSidebarRight', { static: false }) editorSidebarRight: ElementRef;\r\n    @ContentChild('editorSidebarLeft', { static: false }) editorSidebarLeft: ElementRef;\r\n    @ContentChild('editorBottomArea', { static: false }) editorBottomArea: ElementRef;\r\n\r\n    @ViewChild('buildOutput') buildOutputElement: ElementRef;\r\n    @ViewChild('fileBrowser') fileBrowserElement: ElementRef;\r\n    @ViewChild('instructions') instructionsElement: ElementRef;\r\n\r\n    @Input() isTutorAssessment = false;\r\n    @Output() onResize = new EventEmitter<ResizeType>();\r\n\r\n    fileBrowserIsCollapsed = false;\r\n    rightPanelIsCollapsed = false;\r\n    buildOutputIsCollapsed = false;\r\n\r\n    interactResizableMain: Interactable;\r\n    resizableMinHeightMain = 480;\r\n    resizableMaxHeightMain = 1200;\r\n\r\n    interactResizableLeft: Interactable;\r\n    resizableMinWidthLeft: number;\r\n    resizableMaxWidthLeft = 2000;\r\n\r\n    interactResizableRight: Interactable;\r\n    resizableMinWidthRight: number;\r\n    resizableMaxWidthRight = 2000;\r\n\r\n    interactResizableBottom: Interactable;\r\n    resizableMinHeightBottom = 300;\r\n    resizableMaxHeightBottom = 600;\r\n\r\n    // Icons\r\n    faGripLines = faGripLines;\r\n    faGripLinesVertical = faGripLinesVertical;\r\n\r\n    /**\r\n     * After the view was initialized, we create an interact.js resizable object,\r\n     * designate the edges which can be used to resize the target element and set min and max values.\r\n     * The 'resizemove' callback function processes the event values and sets new width and height values for the element.\r\n     */\r\n    ngAfterViewInit(): void {\r\n        this.resizableMinHeightMain = window.screen.height / 3;\r\n        this.interactResizableMain = interact('.editor-main')\r\n            .resizable({\r\n                // Enable resize from bottom edge; triggered by class rg-bottom\r\n                edges: { left: false, right: false, bottom: '.rg-main-bottom', top: false },\r\n                // Set min and max height\r\n                modifiers: [\r\n                    interact.modifiers!.restrictSize({\r\n                        min: { width: 0, height: this.resizableMinHeightMain },\r\n                        max: { width: 2000, height: this.resizableMaxHeightMain },\r\n                    }),\r\n                ],\r\n                inertia: true,\r\n            })\r\n            .on('resizestart', function (event: any) {\r\n                event.target.classList.add('card-resizable');\r\n            })\r\n            .on('resizeend', (event: any) => {\r\n                event.target.classList.remove('card-resizable');\r\n                this.onResize.emit(ResizeType.MAIN_BOTTOM);\r\n            })\r\n            .on('resizemove', function (event: any) {\r\n                const target = event.target;\r\n                // Update element height\r\n                target.style.height = event.rect.height + 'px';\r\n            });\r\n\r\n        this.resizableMinWidthLeft = window.screen.width / 7;\r\n        this.resizableMaxWidthLeft = window.screen.width / 2;\r\n        this.interactResizableLeft = interact('.editor-sidebar-left')\r\n            .resizable({\r\n                // Enable resize from bottom edge; triggered by class rg-bottom\r\n                edges: { left: false, right: '.rg-sidebar-left', bottom: false, top: false },\r\n                // Set min and max height\r\n                modifiers: [\r\n                    interact.modifiers!.restrictSize({\r\n                        min: { width: this.resizableMinWidthLeft, height: 0 },\r\n                        max: { width: this.resizableMaxWidthLeft, height: 2000 },\r\n                    }),\r\n                ],\r\n                inertia: true,\r\n            })\r\n            .on('resizestart', function (event: any) {\r\n                event.target.classList.add('card-resizable');\r\n            })\r\n            .on('resizeend', (event: any) => {\r\n                event.target.classList.remove('card-resizable');\r\n                this.onResize.emit(ResizeType.SIDEBAR_LEFT);\r\n            })\r\n            .on('resizemove', function (event: any) {\r\n                const target = event.target;\r\n                // Update element height\r\n                target.style.width = event.rect.width + 'px';\r\n            });\r\n\r\n        this.resizableMinWidthRight = window.screen.width / 6;\r\n        this.resizableMaxWidthRight = window.screen.width / 1.3;\r\n        this.interactResizableRight = interact('.editor-sidebar-right')\r\n            .resizable({\r\n                // Enable resize from bottom edge; triggered by class rg-bottom\r\n                edges: { left: '.rg-sidebar-right', right: false, bottom: false, top: false },\r\n                // Set min and max height\r\n                modifiers: [\r\n                    interact.modifiers!.restrictSize({\r\n                        min: { width: this.resizableMinWidthRight, height: 0 },\r\n                        max: { width: this.resizableMaxWidthRight, height: 2000 },\r\n                    }),\r\n                ],\r\n                inertia: true,\r\n            })\r\n            .on('resizestart', function (event: any) {\r\n                event.target.classList.add('card-resizable');\r\n            })\r\n            .on('resizeend', (event: any) => {\r\n                event.target.classList.remove('card-resizable');\r\n                this.onResize.emit(ResizeType.SIDEBAR_RIGHT);\r\n            })\r\n            .on('resizemove', function (event: any) {\r\n                const target = event.target;\r\n                // Update element height\r\n                target.style.width = event.rect.width + 'px';\r\n            });\r\n\r\n        this.resizableMinHeightBottom = window.screen.height / 6;\r\n        this.interactResizableBottom = interact('.editor-bottom')\r\n            .resizable({\r\n                // Enable resize from bottom edge; triggered by class rg-bottom\r\n                edges: { left: false, right: false, bottom: '.rg-bottom-bottom', top: false },\r\n                // Set min and max height\r\n                modifiers: [\r\n                    interact.modifiers!.restrictSize({\r\n                        min: { width: 0, height: this.resizableMinHeightBottom },\r\n                        max: { width: window.screen.width, height: this.resizableMaxHeightBottom },\r\n                    }),\r\n                ],\r\n                inertia: true,\r\n            })\r\n            .on('resizestart', function (event: any) {\r\n                event.target.classList.add('card-resizable');\r\n            })\r\n            .on('resizeend', (event: any) => {\r\n                event.target.classList.remove('card-resizable');\r\n                this.onResize.emit(ResizeType.BOTTOM);\r\n            })\r\n            .on('resizemove', function (event: any) {\r\n                const target = event.target;\r\n                // Update element height\r\n                target.style.height = event.rect.height + 'px';\r\n            });\r\n    }\r\n\r\n    private elementRefForCollapsableElement(collapsableElement: CollapsableCodeEditorElement): ElementRef {\r\n        switch (collapsableElement) {\r\n            case CollapsableCodeEditorElement.BuildOutput:\r\n                return this.buildOutputElement;\r\n            case CollapsableCodeEditorElement.FileBrowser:\r\n                return this.fileBrowserElement;\r\n            case CollapsableCodeEditorElement.Instructions:\r\n                return this.instructionsElement;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Collapse parts of the editor (file browser, build output, or instructions)\r\n     * @param interactableEvent {object} The custom event object with additional information\r\n     * @param collapsableElement an enum to decide which card is collapsed\r\n     */\r\n    toggleCollapse(interactableEvent: InteractableEvent, collapsableElement: CollapsableCodeEditorElement) {\r\n        const event = interactableEvent.event;\r\n        const horizontal = interactableEvent.horizontal;\r\n        const interactResizable = interactableEvent.interactable;\r\n        const target = event.event?.toElement || event.relatedTarget || event.target;\r\n        target.blur();\r\n        const cardElement = this.elementRefForCollapsableElement(collapsableElement);\r\n\r\n        const collapsed = `collapsed--${horizontal ? 'horizontal' : 'vertical'}`;\r\n\r\n        if (cardElement.nativeElement.classList.contains(collapsed)) {\r\n            this.renderer.removeClass(cardElement.nativeElement, collapsed);\r\n            interactResizable.resizable({ enabled: true });\r\n        } else {\r\n            this.renderer.addClass(cardElement.nativeElement, collapsed);\r\n            interactResizable.resizable({ enabled: false });\r\n        }\r\n\r\n        // used to disable draggable icons\r\n        switch (interactResizable.target) {\r\n            case '.resizable-instructions': {\r\n                this.rightPanelIsCollapsed = !this.rightPanelIsCollapsed;\r\n                break;\r\n            }\r\n            case '.resizable-filebrowser': {\r\n                this.fileBrowserIsCollapsed = !this.fileBrowserIsCollapsed;\r\n                break;\r\n            }\r\n            case '.resizable-buildoutput': {\r\n                this.buildOutputIsCollapsed = !this.buildOutputIsCollapsed;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n", "<div class=\"editor-wrapper\">\r\n    <!-- Top bar -->\r\n    <nav class=\"editor-statusbar\">\r\n        <ng-content select=\"[editorNavbar]\" />\r\n    </nav>\r\n    <div class=\"editor-main\">\r\n        <div class=\"editor-main__content\">\r\n            <!-- File browser -->\r\n            <div #fileBrowser class=\"editor-sidebar-left collapsable\">\r\n                <ng-content select=\"[editorSidebarLeft]\" />\r\n                <!-- Required for resizing; don't remove empty span -->\r\n                @if (!fileBrowserIsCollapsed) {\r\n                    <fa-icon [icon]=\"faGripLinesVertical\" id=\"draggableIconForFileBrowser\" class=\"rg-sidebar-left\">\r\n                        <span></span>\r\n                    </fa-icon>\r\n                }\r\n                @if (fileBrowserIsCollapsed) {\r\n                    <span class=\"separator\"></span>\r\n                }\r\n            </div>\r\n            <!-- Editor -->\r\n            <div class=\"guided-tour-editor editor-center\">\r\n                <ng-content select=\"[editorCenter]\" />\r\n            </div>\r\n            <!-- Instructions -->\r\n            <div #instructions class=\"editor-sidebar-right collapsable\">\r\n                @if (!rightPanelIsCollapsed) {\r\n                    <fa-icon [icon]=\"faGripLinesVertical\" id=\"draggableIconForInstructions\" class=\"rg-sidebar-right\">\r\n                        <span></span>\r\n                    </fa-icon>\r\n                }\r\n                @if (rightPanelIsCollapsed) {\r\n                    <span class=\"separator\"></span>\r\n                }\r\n                <ng-content select=\"[editorSidebarRight]\" />\r\n            </div>\r\n        </div>\r\n        <!-- Required for resizing; don't remove empty span -->\r\n        <fa-icon [icon]=\"faGripLines\" class=\"rg-main-bottom\"><span></span></fa-icon>\r\n    </div>\r\n    <!-- Build Output -->\r\n    <div #buildOutput class=\"editor-bottom collapsable\">\r\n        <ng-content select=\"[editorBottomArea]\" class=\"editor-bottom-resizable\" />\r\n        <!-- Required for resizing; don't remove empty span -->\r\n        @if (!buildOutputIsCollapsed) {\r\n            <fa-icon [icon]=\"faGripLines\" id=\"draggableIconForBuildOutput\" class=\"rg-bottom-bottom\"><span></span></fa-icon>\r\n        }\r\n    </div>\r\n    @if (isTutorAssessment) {\r\n        <div>\r\n            <ng-content select=\"[editorBottom]\" />\r\n        </div>\r\n    }\r\n</div>\r\n", "import { AfterViewInit, Component, ElementRef, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild, inject } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Observable, Subscription, of, throwError } from 'rxjs';\r\nimport { catchError, map as rxMap, switchMap, tap } from 'rxjs/operators';\r\nimport { fromPairs, toPairs } from 'lodash-es';\r\nimport { Interactable } from '@interactjs/core/Interactable';\r\nimport interact from 'interactjs';\r\nimport {\r\n    CommitState,\r\n    CreateFileChange,\r\n    EditorState,\r\n    FileBadge,\r\n    FileBadgeType,\r\n    FileChange,\r\n    FileType,\r\n    GitConflictState,\r\n    RenameFileChange,\r\n} from 'app/exercises/programming/shared/code-editor/model/code-editor.model';\r\nimport { CodeEditorFileService } from 'app/exercises/programming/shared/code-editor/service/code-editor-file.service';\r\nimport { CodeEditorConflictStateService } from 'app/exercises/programming/shared/code-editor/service/code-editor-conflict-state.service';\r\nimport { CodeEditorRepositoryFileService, CodeEditorRepositoryService } from 'app/exercises/programming/shared/code-editor/service/code-editor-repository.service';\r\nimport { CodeEditorStatusComponent } from 'app/exercises/programming/shared/code-editor/status/code-editor-status.component';\r\nimport { CodeEditorFileBrowserDeleteComponent } from 'app/exercises/programming/shared/code-editor/file-browser/code-editor-file-browser-delete';\r\nimport { IFileDeleteDelegate } from 'app/exercises/programming/shared/code-editor/file-browser/code-editor-file-browser-on-file-delete-delegate';\r\nimport { faAngleDoubleDown, faAngleDoubleUp, faChevronLeft, faChevronRight, faCircleNotch, faFile, faFolder, faFolderOpen, faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { TreeItem, TreeViewItem } from 'app/exercises/programming/shared/code-editor/treeview/models/tree-view-item';\r\nimport { TreeViewComponent } from 'app/exercises/programming/shared/code-editor/treeview/components/treeview/tree-view.component';\r\nimport { findItemInList } from 'app/exercises/programming/shared/code-editor/treeview/helpers/tree-view-helper';\r\nimport { TEXT_FILE_EXTENSIONS } from 'app/shared/constants/file-extensions.constants';\r\nimport { NgStyle } from '@angular/common';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { CodeEditorFileBrowserCreateNodeComponent } from './code-editor-file-browser-create-node.component';\r\nimport { CodeEditorFileBrowserFolderComponent } from './code-editor-file-browser-folder.component';\r\nimport { CodeEditorFileBrowserFileComponent } from './code-editor-file-browser-file.component';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\nexport type InteractableEvent = {\r\n    // Click event object; contains target information\r\n    event: any;\r\n    // Used to decide which height to use for the collapsed element\r\n    horizontal: boolean;\r\n    // The interactjs element, used to en-/disable resizing\r\n    interactable: Interactable;\r\n};\r\n\r\nexport interface FileTreeItem extends TreeItem<string> {\r\n    folder: File | string | undefined;\r\n    file: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'jhi-code-editor-file-browser',\r\n    templateUrl: './code-editor-file-browser.component.html',\r\n    styleUrls: ['./code-editor-file-browser.scss'],\r\n    providers: [NgbModal],\r\n    imports: [\r\n        NgStyle,\r\n        FaIconComponent,\r\n        TranslateDirective,\r\n        CodeEditorFileBrowserCreateNodeComponent,\r\n        TreeViewComponent,\r\n        CodeEditorStatusComponent,\r\n        CodeEditorFileBrowserFolderComponent,\r\n        CodeEditorFileBrowserFileComponent,\r\n        ArtemisTranslatePipe,\r\n    ],\r\n})\r\nexport class CodeEditorFileBrowserComponent implements OnInit, OnChanges, AfterViewInit, IFileDeleteDelegate {\r\n    modalService = inject(NgbModal);\r\n    private repositoryFileService = inject(CodeEditorRepositoryFileService);\r\n    private repositoryService = inject(CodeEditorRepositoryService);\r\n    private fileService = inject(CodeEditorFileService);\r\n    private conflictService = inject(CodeEditorConflictStateService);\r\n\r\n    CommitState = CommitState;\r\n    FileType = FileType;\r\n\r\n    @ViewChild('status', { static: false }) status: CodeEditorStatusComponent;\r\n    @ViewChild('treeview', { static: false }) treeview: TreeViewComponent<string>;\r\n\r\n    @Input()\r\n    get selectedFile(): string | undefined {\r\n        return this.selectedFileValue;\r\n    }\r\n    @Input()\r\n    disableActions = false;\r\n    @Input()\r\n    displayOnly = false;\r\n    @Input()\r\n    unsavedFiles: string[];\r\n    @Input()\r\n    errorFiles: string[];\r\n    @Input()\r\n    editorState: EditorState;\r\n    @Input()\r\n    get commitState() {\r\n        return this.commitStateValue;\r\n    }\r\n    @Input()\r\n    isTutorAssessment = false;\r\n    @Input()\r\n    highlightFileChanges = false;\r\n    @Input()\r\n    fileBadges: { [path: string]: FileBadge[] } = {};\r\n    @Input()\r\n    allowHiddenFiles = false;\r\n\r\n    @Output()\r\n    onToggleCollapse = new EventEmitter<InteractableEvent>();\r\n    @Output()\r\n    onFileChange = new EventEmitter<[string[], FileChange]>();\r\n    @Output()\r\n    selectedFileChange = new EventEmitter<string | undefined>();\r\n    @Output()\r\n    commitStateChange = new EventEmitter<CommitState>();\r\n    @Output()\r\n    onError = new EventEmitter<string>();\r\n\r\n    isLoadingFiles: boolean;\r\n    selectedFileValue?: string;\r\n    commitStateValue: CommitState;\r\n    repositoryFiles: { [fileName: string]: FileType };\r\n    repositoryFilesWithInformationAboutChange: { [fileName: string]: boolean } | undefined;\r\n    filesTreeViewItem: TreeViewItem<string>[];\r\n    compressFolders = true;\r\n\r\n    collapsed = false;\r\n\r\n    @ViewChild('renamingInput', { static: false }) renamingInput: ElementRef;\r\n    @ViewChild('creatingInput', { static: false }) creatingInput: ElementRef;\r\n\r\n    // Triple: [filePath, fileName, fileType]\r\n    renamingFile?: [string, string, FileType];\r\n    // Tuple: [filePath, fileType]\r\n    creatingFile?: [string, FileType];\r\n\r\n    // Default limit is 500, as our styling makes tree item relatively large, we need to increase it a lot\r\n    treeViewMaxHeight: 5000;\r\n\r\n    /** Resizable constants **/\r\n    resizableMinWidth = 100;\r\n    interactResizable: Interactable;\r\n\r\n    gitConflictState: GitConflictState;\r\n    conflictSubscription: Subscription;\r\n\r\n    // Icons\r\n    faPlus = faPlus;\r\n    faFolderOpen = faFolderOpen;\r\n    faFolder = faFolder;\r\n    faChevronRight = faChevronRight;\r\n    faChevronLeft = faChevronLeft;\r\n    faCircleNotch = faCircleNotch;\r\n    faFile = faFile;\r\n    faAngleDoubleUp = faAngleDoubleUp;\r\n    faAngleDoubleDown = faAngleDoubleDown;\r\n\r\n    set selectedFile(file: string | undefined) {\r\n        this.selectedFileValue = file;\r\n        this.selectedFileChange.emit(this.selectedFile);\r\n    }\r\n\r\n    set commitState(commitState: CommitState) {\r\n        this.commitStateValue = commitState;\r\n        this.commitStateChange.emit(commitState);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.conflictSubscription = this.conflictService.subscribeConflictState().subscribe((gitConflictState: GitConflictState) => {\r\n            // When the git conflict was resolved, unset the selectedFile, as it can't be assured that it still exists.\r\n            if (this.gitConflictState === GitConflictState.CHECKOUT_CONFLICT && gitConflictState === GitConflictState.OK) {\r\n                this.selectedFile = undefined;\r\n            }\r\n            this.gitConflictState = gitConflictState;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * After the view was initialized, we create an interact.js resizable object,\r\n     * designate the edges which can be used to resize the target element and set min and max values.\r\n     * The 'resizemove' callback function processes the event values and sets new width and height values for the element.\r\n     */\r\n    ngAfterViewInit(): void {\r\n        this.resizableMinWidth = window.screen.width / 6;\r\n        this.interactResizable = interact('.resizable-filebrowser');\r\n    }\r\n\r\n    /**\r\n     * When the commitState is undefined, fetch the repository status and load the files if possible.\r\n     * When this is done, render the file tree.\r\n     * @param changes\r\n     */\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (\r\n            (changes.commitState && changes.commitState.previousValue !== CommitState.UNDEFINED && this.commitState === CommitState.UNDEFINED) ||\r\n            (changes.editorState && changes.editorState.previousValue === EditorState.REFRESHING && this.editorState === EditorState.CLEAN)\r\n        ) {\r\n            this.initializeComponent();\r\n        } else if (changes.selectedFile && changes.selectedFile.currentValue) {\r\n            this.renamingFile = undefined;\r\n            this.setupTreeview();\r\n        }\r\n    }\r\n\r\n    initializeComponent = () => {\r\n        this.isLoadingFiles = true;\r\n        // We need to make sure to not trigger multiple requests on the git repo at the same time.\r\n        // This is why we first wait until the repository state was checked and then load the files.\r\n        this.checkIfRepositoryIsClean()\r\n            .pipe(\r\n                tap((commitState) => {\r\n                    this.commitState = commitState;\r\n                }),\r\n                switchMap(() => {\r\n                    if (this.commitState === CommitState.COULD_NOT_BE_RETRIEVED) {\r\n                        return throwError(() => new Error('couldNotBeRetrieved'));\r\n                    } else if (this.commitState === CommitState.CONFLICT) {\r\n                        this.conflictService.notifyConflictState(GitConflictState.CHECKOUT_CONFLICT);\r\n                        return throwError(() => new Error('repositoryInConflict'));\r\n                    }\r\n                    return this.loadFiles();\r\n                }),\r\n                tap((files) => {\r\n                    this.repositoryFiles = files;\r\n                    this.unsavedFiles = [];\r\n                }),\r\n                switchMap(() => {\r\n                    if (this.isTutorAssessment && this.highlightFileChanges) {\r\n                        return this.loadFilesWithInformationAboutChange();\r\n                    } else {\r\n                        return of(undefined);\r\n                    }\r\n                }),\r\n                tap((filesWithInfoAboutChange) => {\r\n                    this.repositoryFilesWithInformationAboutChange = filesWithInfoAboutChange;\r\n                    this.isLoadingFiles = false;\r\n                    this.setupTreeview();\r\n                }),\r\n            )\r\n            .subscribe({\r\n                error: (error: Error) => {\r\n                    this.isLoadingFiles = false;\r\n                    this.onError.emit(error.message);\r\n                },\r\n            });\r\n    };\r\n\r\n    /**\r\n     * Calls the repository service to see if the repository has uncommitted changes\r\n     */\r\n    checkIfRepositoryIsClean = (): Observable<CommitState> => {\r\n        return this.repositoryService.getStatus().pipe(\r\n            rxMap((res) => {\r\n                // The server sends us the CommitState, however we need to type it here by finding it in the client commitStates.\r\n                const mappedCommitState = Object.values(CommitState).find((commitState) => commitState === res.repositoryStatus);\r\n                // This should not happen, but needs to be done so that the compiler is satisfied.\r\n                return mappedCommitState || CommitState.COULD_NOT_BE_RETRIEVED;\r\n            }),\r\n            catchError(() => of(CommitState.COULD_NOT_BE_RETRIEVED)),\r\n        );\r\n    };\r\n\r\n    handleFileChange(fileChange: FileChange) {\r\n        if (fileChange instanceof CreateFileChange) {\r\n            this.repositoryFiles = { ...this.repositoryFiles, [fileChange.fileName]: fileChange.fileType };\r\n        } else {\r\n            this.repositoryFiles = this.fileService.updateFileReferences(this.repositoryFiles, fileChange);\r\n        }\r\n        this.setupTreeview();\r\n        this.onFileChange.emit([Object.keys(this.repositoryFiles), fileChange]);\r\n    }\r\n\r\n    /**\r\n     * Emmiter function for when a file was deleted; notifies the parent component\r\n     * @param fileChange\r\n     */\r\n    onFileDeleted(fileChange: FileChange) {\r\n        this.handleFileChange(fileChange);\r\n    }\r\n\r\n    /**\r\n     * Callback function for when a node in the file tree view has been selected\r\n     * @param item Corresponding event object, holds the selected TreeViewItem\r\n     */\r\n    handleNodeSelected(item: TreeViewItem<string>) {\r\n        if (item && item.value !== this.selectedFile) {\r\n            item.checked = true;\r\n            // If we had selected a file prior to this, we 'uncheck' it\r\n            if (this.selectedFile) {\r\n                const priorFileSelection = findItemInList(this.filesTreeViewItem, this.selectedFile);\r\n                // Avoid issues after file deletion\r\n                if (priorFileSelection) {\r\n                    priorFileSelection.checked = false;\r\n                }\r\n            }\r\n            // Inform parent editor component about the file selection change\r\n            this.selectedFile = item.value;\r\n        }\r\n    }\r\n\r\n    toggleTreeCompress() {\r\n        this.compressFolders = !this.compressFolders;\r\n        this.setupTreeview();\r\n    }\r\n\r\n    /**\r\n     * Process the file array, compress it and then transforms it to a TreeViewItem\r\n     */\r\n    setupTreeview() {\r\n        let tree = this.buildTree(Object.keys(this.repositoryFiles).sort());\r\n        if (this.compressFolders) {\r\n            tree = tree.map(this.compressTree.bind(this));\r\n        }\r\n        this.filesTreeViewItem = this.transformTreeToTreeViewItem(tree);\r\n    }\r\n\r\n    /**\r\n     * Converts a parsed file tree to a TreeViewItem[] which will then be used by the Treeviewer\r\n     * @param tree File tree obtained by parsing the repository file list\r\n     */\r\n    transformTreeToTreeViewItem(tree: FileTreeItem[]): TreeViewItem<string>[] {\r\n        const treeViewItem = new Array<TreeViewItem<string>>();\r\n        for (const node of tree) {\r\n            treeViewItem.push(new TreeViewItem<string>(node));\r\n        }\r\n        return treeViewItem;\r\n    }\r\n\r\n    /**\r\n     * Parses the provided list of repository files\r\n     * @param files {array of strings} Filepath strings to process\r\n     * @param tree {array of objects} Current tree structure\r\n     * @param folder {string} Folder name\r\n     */\r\n    buildTree(files: string[], tree?: FileTreeItem[], folder?: File | string) {\r\n        /**\r\n         * Initialize tree if empty\r\n         */\r\n        tree = tree || [];\r\n\r\n        /**\r\n         * Loop through our file array\r\n         */\r\n        for (let file of files) {\r\n            // Remove leading and trailing spaces\r\n            file = file.replace(/^\\/|\\/$/g, '');\r\n            // Split file path by slashes\r\n            const fileSplit = file.split('/');\r\n            // Check if the first path part is already in our current tree\r\n            let node = tree.find((element) => element.text === fileSplit[0]);\r\n            // Path part doesn't exist => add it to tree\r\n            if (!node) {\r\n                node = {\r\n                    children: [],\r\n                    file: '',\r\n                    folder: '',\r\n                    value: '',\r\n                    text: fileSplit[0],\r\n                };\r\n                tree.push(node);\r\n            }\r\n\r\n            // Remove first path part from our file path\r\n            fileSplit.shift();\r\n\r\n            if (fileSplit.length > 0) {\r\n                // Directory node\r\n                node.checked = false;\r\n                // Recursive function call to process children\r\n                node.children = this.buildTree([fileSplit.join('/')], node.children as FileTreeItem[], folder ? folder + '/' + node.text : node.text);\r\n                node.folder = node.text;\r\n                node.value = folder ? `${folder}/${node.folder}` : node.folder;\r\n            } else {\r\n                // File node\r\n                node.folder = folder;\r\n                node.file = (folder ? folder + '/' : '') + node.text;\r\n                node.value = node.file;\r\n                node.checked = false;\r\n\r\n                // Currently, processed node selected?\r\n                if (node.file === this.selectedFile) {\r\n                    folder = node.folder;\r\n                    node.checked = true;\r\n                }\r\n            }\r\n        }\r\n        return tree;\r\n    }\r\n\r\n    /**\r\n     * Compresses the tree obtained by buildTree() to not contain nodes with only one directory child node\r\n     * @param node Tree node\r\n     */\r\n    compressTree(node: FileTreeItem): FileTreeItem {\r\n        // If the node has only one child and that child is a folder, we can compress the tree.\r\n        if (node.children && node.children.length === 1 && this.repositoryFiles[node.children[0].value] === FileType.FOLDER) {\r\n            return this.compressTree({ ...node.children[0], text: node.text + '/' + node.children[0].text, folder: node.folder, file: node.file });\r\n        }\r\n        // If the node has children, we cannot compress it. However, we can try to compress its children.\r\n        else if (node.children) {\r\n            return { ...node, children: node.children.map(this.compressTree.bind(this)) };\r\n        }\r\n        // If the node has no children, there is nothing to compress.\r\n        else {\r\n            return node;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Calls the parent (editorComponent) toggleCollapse method\r\n     * @param event\r\n     */\r\n    toggleEditorCollapse(event: any) {\r\n        this.collapsed = !this.collapsed;\r\n        this.onToggleCollapse.emit({ event, horizontal: true, interactable: this.interactResizable });\r\n    }\r\n\r\n    /**\r\n     * Rename the file (if new fileName is different from old fileName and new fileName is not empty)\r\n     * and emit the changes to the parent.\r\n     * After rename the state is exited.\r\n     **/\r\n    onRenameFile(event: any) {\r\n        const newFileNamePath = event as string;\r\n        // Take the actual file name if the packages are collapsed, otherwise take the name directly\r\n        const newFileName = newFileNamePath.split('/').pop() || newFileNamePath;\r\n        // It is possible, that multiple events fire at once and come back when the creation mode is already turned off.\r\n        if (!this.renamingFile) {\r\n            return;\r\n        }\r\n        const [filePath, , fileType] = this.renamingFile;\r\n        let newFilePath: any = filePath.split('/');\r\n        newFilePath[newFilePath.length - 1] = newFileName;\r\n        newFilePath = newFilePath.join('/');\r\n\r\n        if (Object.keys(this.repositoryFiles).includes(newFilePath)) {\r\n            this.onError.emit('fileExists');\r\n            return;\r\n        } else if (!this.allowHiddenFiles && !CodeEditorFileBrowserComponent.shouldDisplayFile(newFileName, fileType)) {\r\n            this.onError.emit('unsupportedFile');\r\n            return;\r\n        }\r\n\r\n        this.renameFile(filePath, newFileName).subscribe({\r\n            next: () => {\r\n                this.handleFileChange(new RenameFileChange(fileType, filePath, newFilePath));\r\n                this.renamingFile = undefined;\r\n            },\r\n            error: () => this.onError.emit('fileOperationFailed'),\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Enter rename file mode and focus the created input.\r\n     **/\r\n    setRenamingFile(item: TreeViewItem<string>) {\r\n        this.renamingFile = [item.value, item.text, this.repositoryFiles[item.value]];\r\n    }\r\n\r\n    /**\r\n     * Set renamingFile to undefined so that the input disappears.\r\n     **/\r\n    clearRenamingFile() {\r\n        this.renamingFile = undefined;\r\n    }\r\n\r\n    /**\r\n     * Create a file with the value of the creation input.\r\n     **/\r\n    onCreateFile(fileName: string) {\r\n        // It is possible, that multiple events fire at once and come back when the creation mode is already turned off.\r\n        if (!this.creatingFile) {\r\n            return;\r\n        }\r\n        const [folderPath, fileType] = this.creatingFile;\r\n\r\n        if (!this.allowHiddenFiles && !CodeEditorFileBrowserComponent.shouldDisplayFile(fileName, fileType)) {\r\n            this.onError.emit('unsupportedFile');\r\n            return;\r\n        } else if (Object.keys(this.repositoryFiles).includes(folderPath ? [folderPath, fileName].join('/') : fileName)) {\r\n            this.onError.emit('fileExists');\r\n            return;\r\n        }\r\n\r\n        const file = folderPath ? `${folderPath}/${fileName}` : fileName;\r\n        if (fileType === FileType.FILE) {\r\n            this.createFile(file).subscribe({\r\n                next: () => {\r\n                    this.handleFileChange(new CreateFileChange(FileType.FILE, file));\r\n                    this.creatingFile = undefined;\r\n                },\r\n                error: () => this.onError.emit('fileOperationFailed'),\r\n            });\r\n        } else {\r\n            this.createFolder(file).subscribe({\r\n                next: () => {\r\n                    this.handleFileChange(new CreateFileChange(FileType.FOLDER, file));\r\n                    this.creatingFile = undefined;\r\n                },\r\n                error: () => this.onError.emit('fileOperationFailed'),\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Enter rename file mode and focus the created input.\r\n     **/\r\n    setCreatingFile({ item: { value: folder }, fileType }: { item: TreeViewItem<string>; fileType: FileType }) {\r\n        this.creatingFile = [folder, fileType];\r\n    }\r\n\r\n    setCreatingFileInRoot(fileType: FileType) {\r\n        this.creatingFile = ['', fileType];\r\n    }\r\n\r\n    /**\r\n     * Set creatingFile to undefined so that the input disappears.\r\n     **/\r\n    clearCreatingFile() {\r\n        this.creatingFile = undefined;\r\n    }\r\n\r\n    /**\r\n     * Load files from the participants' repository.\r\n     * Files that are not relevant for the conduction of the exercise are removed from result.\r\n     */\r\n    loadFiles = (): Observable<{ [fileName: string]: FileType }> => {\r\n        return this.repositoryFileService.getRepositoryContent().pipe(\r\n            rxMap((files) =>\r\n                fromPairs(\r\n                    toPairs(files)\r\n                        .filter(([fileName, fileType]) => this.allowHiddenFiles || CodeEditorFileBrowserComponent.shouldDisplayFile(fileName, fileType))\r\n                        // Filter root folder\r\n                        .filter(([value]) => value),\r\n                ),\r\n            ),\r\n            catchError(() => throwError(() => new Error('couldNotBeRetrieved'))),\r\n        );\r\n    };\r\n\r\n    loadFilesWithInformationAboutChange(): Observable<{ [fileName: string]: boolean }> {\r\n        return this.repositoryFileService.getFilesWithInformationAboutChange().pipe(\r\n            rxMap((files) => fromPairs(toPairs(files).filter(([filename]) => this.allowHiddenFiles || CodeEditorFileBrowserComponent.shouldDisplayFile(filename, FileType.FILE)))),\r\n            catchError(() => throwError(() => new Error('couldNotBeRetrieved'))),\r\n        );\r\n    }\r\n\r\n    renameFile = (filePath: string, fileName: string): Observable<void> => {\r\n        return this.repositoryFileService.renameFile(filePath, fileName);\r\n    };\r\n\r\n    createFile = (fileName: string): Observable<void> => {\r\n        return this.repositoryFileService.createFile(fileName);\r\n    };\r\n\r\n    createFolder = (folderName: string): Observable<void> => {\r\n        return this.repositoryFileService.createFolder(folderName);\r\n    };\r\n\r\n    /**\r\n     * Opens a popup to delete the selected repository file\r\n     */\r\n    openDeleteFileModal(item: TreeViewItem<string>) {\r\n        const { value: filePath } = item;\r\n        const fileType = this.repositoryFiles[filePath];\r\n        if (filePath) {\r\n            const modalRef = this.modalService.open(CodeEditorFileBrowserDeleteComponent, { keyboard: true, size: 'lg' });\r\n            modalRef.componentInstance.parent = this;\r\n            modalRef.componentInstance.fileNameToDelete = filePath;\r\n            modalRef.componentInstance.fileType = fileType;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Determines if the given file or folder should be displayed.\r\n     *\r\n     * Folders are only hidden if their name starts with a `.`, files are additionally hidden\r\n     * based on their file extension (see {@link shouldDisplayFileBasedOnExtension}).\r\n     * @param fileName The name of the file or folder.\r\n     * @param fileType The type of the file or folder.\r\n     */\r\n    private static shouldDisplayFile(fileName: string, fileType: FileType): boolean {\r\n        if (fileName.startsWith('.')) {\r\n            return false;\r\n        } else if (fileType === FileType.FOLDER) {\r\n            return true;\r\n        } else {\r\n            return CodeEditorFileBrowserComponent.shouldDisplayFileBasedOnExtension(fileName);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Determines if the file should be shown based on its file extension.\r\n     *\r\n     * E.g., text files like `SomeClass.java` are shown, binary files like `document.pdf` are not.\r\n     * @param fileName\r\n     */\r\n    private static shouldDisplayFileBasedOnExtension(fileName: string): boolean {\r\n        const fileSplit = fileName.split('.');\r\n        return fileSplit.length === 1 || TEXT_FILE_EXTENSIONS.includes(fileSplit.pop()!);\r\n    }\r\n\r\n    /**\r\n     * Aggregate the file badges for the given folder. The numbers of the badges are summed up.\r\n     * The folder badges will only be shown on collapsed folders (otherwise you can see the file badges already and we don't want to clutter the UI)\r\n     */\r\n    getFolderBadges(folder: TreeViewItem<string>): FileBadge[] {\r\n        if (!folder.collapsed) {\r\n            return []; // Only show folder badges on collapsed folders\r\n        }\r\n        const folderBadgesMap: Map<FileBadgeType, number> = new Map(); // Use a Map to preserve order\r\n        for (const [fileName, fileBadges] of Object.entries(this.fileBadges)) {\r\n            if (fileName.startsWith(folder.value)) {\r\n                // file is in folder\r\n                for (const fileBadge of fileBadges) {\r\n                    const folderBadgeCount = folderBadgesMap.get(fileBadge.type) ?? 0;\r\n                    folderBadgesMap.set(fileBadge.type, folderBadgeCount + fileBadge.count);\r\n                }\r\n            }\r\n        }\r\n        return Array.from(folderBadgesMap.entries()).map(([type, count]) => new FileBadge(type, count));\r\n    }\r\n}\r\n", "<div id=\"cardFiles\" class=\"card file-browser resizable-filebrowser guided-tour-file-browser\" [ngStyle]=\"collapsed ? { height: '250px' } : { height: '100%' }\">\r\n    <div class=\"card-header d-flex justify-content-center bg-primary text-white\" (click)=\"toggleEditorCollapse($event)\">\r\n        <h3 class=\"card-title justify-content-center\">\r\n            @if (!collapsed) {\r\n                <span>\r\n                    <fa-icon [icon]=\"faFolderOpen\" />\r\n                    <span class=\"ms-2\" jhiTranslate=\"artemisApp.editor.fileBrowser.fileBrowser\"></span>\r\n                </span>\r\n            }\r\n            @if (collapsed) {\r\n                <span class=\"collapsed-file-browser\">\r\n                    <fa-icon class=\"top-icon\" [icon]=\"faChevronRight\" />\r\n                    <span class=\"header\" jhiTranslate=\"artemisApp.editor.fileBrowser.fileBrowser\"></span>\r\n                    <fa-icon [icon]=\"faFolderOpen\" class=\"fa-rotate-270\" id=\"panel-symbol\" />\r\n                    <fa-icon class=\"bottom-icon\" [icon]=\"faChevronRight\" />\r\n                </span>\r\n            }\r\n        </h3>\r\n        <fa-icon class=\"ms-auto clickable\" [icon]=\"faChevronLeft\" />\r\n    </div>\r\n    <!-- Root actions -->\r\n    @if (!displayOnly) {\r\n        <div class=\"card-second-header\">\r\n            <button\r\n                id=\"create_file_root\"\r\n                [disabled]=\"disableActions || isLoadingFiles || commitState === CommitState.CONFLICT\"\r\n                class=\"btn\"\r\n                (click)=\"setCreatingFileInRoot(FileType.FILE)\"\r\n                title=\"{{ 'artemisApp.editor.fileBrowser.createFileRoot' | artemisTranslate }}\"\r\n            >\r\n                <fa-icon [icon]=\"faPlus\" />\r\n                <fa-icon [icon]=\"faFile\" class=\"ms-1\" />\r\n            </button>\r\n            <button\r\n                id=\"create_folder_root\"\r\n                [disabled]=\"disableActions || isLoadingFiles || commitState === CommitState.CONFLICT\"\r\n                class=\"btn ms-2\"\r\n                (click)=\"setCreatingFileInRoot(FileType.FOLDER)\"\r\n                title=\"{{ 'artemisApp.editor.fileBrowser.createFolderRoot' | artemisTranslate }}\"\r\n            >\r\n                <fa-icon [icon]=\"faPlus\" />\r\n                <fa-icon [icon]=\"faFolder\" class=\"ms-1\" />\r\n            </button>\r\n            <button\r\n                id=\"compress_tree\"\r\n                [disabled]=\"isLoadingFiles\"\r\n                class=\"btn ms-auto\"\r\n                (click)=\"toggleTreeCompress()\"\r\n                title=\"{{ 'artemisApp.editor.fileBrowser.compressTree' | artemisTranslate }}\"\r\n            >\r\n                <fa-icon [icon]=\"compressFolders ? faAngleDoubleUp : faAngleDoubleDown\" />\r\n            </button>\r\n        </div>\r\n    }\r\n    <!-- File Tree -->\r\n    <div class=\"card-body\">\r\n        <!-- Root level create file/folder tree element -->\r\n        @if (creatingFile && creatingFile[0] === '') {\r\n            <jhi-code-editor-file-browser-create-node\r\n                [createFileType]=\"creatingFile![1]\"\r\n                [folder]=\"''\"\r\n                (onClearCreatingFile)=\"clearCreatingFile()\"\r\n                (onCreateFile)=\"onCreateFile($event)\"\r\n            />\r\n        }\r\n        @if (!isLoadingFiles) {\r\n            <treeview #treeview [maxHeight]=\"treeViewMaxHeight\" [items]=\"filesTreeViewItem\" [itemTemplate]=\"itemTemplate\" />\r\n        }\r\n        <!-- Loading files indicator -->\r\n        @if (isLoadingFiles) {\r\n            <div class=\"text-center lead text-body-secondary pt-2\">\r\n                <fa-icon [icon]=\"faCircleNotch\" animation=\"spin\" />\r\n                <span jhiTranslate=\"artemisApp.editor.loadingFiles\"></span>\r\n            </div>\r\n        }\r\n    </div>\r\n    @if (!collapsed && !displayOnly) {\r\n        <jhi-code-editor-status #status [editorState]=\"editorState\" [commitState]=\"commitState\" />\r\n    }\r\n</div>\r\n<!--Treeview Item Template-->\r\n<ng-template #itemTemplate let-item=\"item\" let-onCollapseExpand=\"onCollapseExpand\">\r\n    <!--folder-->\r\n    @if (repositoryFiles[item.value] === FileType.FOLDER) {\r\n        <jhi-code-editor-file-browser-folder\r\n            [item]=\"item\"\r\n            [isBeingRenamed]=\"!!renamingFile && renamingFile![0] === item.value\"\r\n            [hasUnsavedChanges]=\"unsavedFiles && unsavedFiles.includes(item.value)\"\r\n            [hasError]=\"errorFiles && errorFiles.includes(item.value)\"\r\n            [onCollapseExpand]=\"onCollapseExpand\"\r\n            [isCompressed]=\"compressFolders\"\r\n            [disableActions]=\"disableActions || commitState === CommitState.CONFLICT\"\r\n            [badges]=\"getFolderBadges(item)\"\r\n            (onSetRenamingNode)=\"setRenamingFile(item)\"\r\n            (onRenameNode)=\"onRenameFile($event)\"\r\n            (onNodeSelect)=\"handleNodeSelected(item)\"\r\n            (onDeleteNode)=\"openDeleteFileModal(item)\"\r\n            (onClearRenamingNode)=\"clearRenamingFile()\"\r\n            (onSetCreatingNodeInFolder)=\"setCreatingFile($event)\"\r\n        />\r\n    }\r\n    <!--file-->\r\n    @if (repositoryFiles[item.value] === FileType.FILE) {\r\n        <jhi-code-editor-file-browser-file\r\n            [item]=\"item\"\r\n            [hasChanges]=\"repositoryFilesWithInformationAboutChange ? repositoryFilesWithInformationAboutChange[item.value] : false\"\r\n            [badges]=\"fileBadges[item.value] || []\"\r\n            [isBeingRenamed]=\"!!renamingFile && renamingFile![0] === item.value\"\r\n            [hasUnsavedChanges]=\"unsavedFiles && unsavedFiles.includes(item.value)\"\r\n            [hasError]=\"errorFiles && errorFiles.includes(item.value)\"\r\n            [disableActions]=\"disableActions || commitState === CommitState.CONFLICT\"\r\n            (onSetRenamingNode)=\"setRenamingFile(item)\"\r\n            (onRenameNode)=\"onRenameFile($event)\"\r\n            (onNodeSelect)=\"handleNodeSelected(item)\"\r\n            (onDeleteNode)=\"openDeleteFileModal(item)\"\r\n            (onClearRenamingNode)=\"clearRenamingFile()\"\r\n        />\r\n    }\r\n    <!--new item-->\r\n    @if (creatingFile && creatingFile[0] === item.value) {\r\n        <jhi-code-editor-file-browser-create-node\r\n            [createFileType]=\"creatingFile![1]\"\r\n            [folder]=\"''\"\r\n            (onClearCreatingFile)=\"clearCreatingFile()\"\r\n            (onCreateFile)=\"onCreateFile($event)\"\r\n        />\r\n    }\r\n</ng-template>\r\n", "import { Component, Input } from '@angular/core';\r\nimport { faCheckCircle, faCircleNotch, faExclamationTriangle, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { CommitState, EditorState } from 'app/exercises/programming/shared/code-editor/model/code-editor.model';\r\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-code-editor-status',\r\n    templateUrl: './code-editor-status.component.html',\r\n    providers: [],\r\n    imports: [NgbTooltip, FaIconComponent, TranslateDirective, ArtemisTranslatePipe],\r\n})\r\nexport class CodeEditorStatusComponent {\r\n    CommitState = CommitState;\r\n    EditorState = EditorState;\r\n\r\n    @Input()\r\n    editorState: EditorState;\r\n    @Input()\r\n    commitState: CommitState;\r\n\r\n    // Icons\r\n    faCircleNotch = faCircleNotch;\r\n    faExclamationTriangle = faExclamationTriangle;\r\n    faCheckCircle = faCheckCircle;\r\n    faTimesCircle = faTimesCircle;\r\n}\r\n", "<div class=\"card-footer code-editor-status text-nowrap\">\r\n    <div id=\"commit_state\">\r\n        @switch (commitState) {\r\n            @case (CommitState.UNDEFINED) {\r\n                <div>\r\n                    <span ngbTooltip=\"{{ 'artemisApp.editor.changesUndefinedTooltip' | artemisTranslate }}\">\r\n                        <fa-icon [icon]=\"faCircleNotch\" animation=\"spin\" class=\"text-info me-1\" />\r\n                        <span class=\"text-info\" jhiTranslate=\"artemisApp.editor.changesUndefined\"></span>\r\n                    </span>\r\n                </div>\r\n            }\r\n            @case (CommitState.COULD_NOT_BE_RETRIEVED) {\r\n                <div>\r\n                    <span ngbTooltip=\"{{ 'artemisApp.editor.changesErrorTooltip' | artemisTranslate }}\">\r\n                        <fa-icon [icon]=\"faTimesCircle\" class=\"text-danger me-1\" />\r\n                        <span class=\"text-danger\" jhiTranslate=\"artemisApp.editor.changesError\"></span>\r\n                    </span>\r\n                </div>\r\n            }\r\n            @case (CommitState.CONFLICT) {\r\n                <div>\r\n                    <span ngbTooltip=\"{{ 'artemisApp.editor.changesConflictTooltip' | artemisTranslate }}\">\r\n                        <fa-icon [icon]=\"faTimesCircle\" class=\"text-danger me-1\" />\r\n                        <span class=\"text-danger\" jhiTranslate=\"artemisApp.editor.changesConflict\"></span>\r\n                    </span>\r\n                </div>\r\n            }\r\n            @case (CommitState.CLEAN) {\r\n                <div>\r\n                    <span ngbTooltip=\"{{ 'artemisApp.editor.changesSubmittedTooltip' | artemisTranslate }}\">\r\n                        <fa-icon [icon]=\"faCheckCircle\" class=\"text-success me-1\" />\r\n                        <span class=\"text-info\" jhiTranslate=\"artemisApp.editor.changesSubmitted\"></span>\r\n                    </span>\r\n                </div>\r\n            }\r\n            @case (CommitState.UNCOMMITTED_CHANGES) {\r\n                <div>\r\n                    <span ngbTooltip=\"{{ 'artemisApp.editor.unsubmittedChangesTooltip' | artemisTranslate }}\">\r\n                        <fa-icon [icon]=\"faExclamationTriangle\" class=\"text-warning me-1\" />\r\n                        <span class=\"text-info\" jhiTranslate=\"artemisApp.editor.unsubmittedChanges\"></span>\r\n                    </span>\r\n                </div>\r\n            }\r\n            @case (CommitState.COMMITTING) {\r\n                <div>\r\n                    <span ngbTooltip=\"{{ 'artemisApp.editor.submittingChangesTooltip' | artemisTranslate }}\">\r\n                        <fa-icon [icon]=\"faCircleNotch\" class=\"text-info me-1\" animation=\"spin\" />\r\n                        <span class=\"text-info\" jhiTranslate=\"artemisApp.editor.submittingChanges\"></span>\r\n                    </span>\r\n                </div>\r\n            }\r\n        }\r\n    </div>\r\n</div>\r\n", "import { Component, Input, OnInit, inject } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { DeleteFileChange, FileType } from 'app/exercises/programming/shared/code-editor/model/code-editor.model';\r\nimport { CodeEditorRepositoryFileService } from 'app/exercises/programming/shared/code-editor/service/code-editor-repository.service';\r\nimport { IFileDeleteDelegate } from 'app/exercises/programming/shared/code-editor/file-browser/code-editor-file-browser-on-file-delete-delegate';\r\nimport { captureException } from '@sentry/angular';\r\nimport { faBan, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n// Modal -> Delete repository file\r\n@Component({\r\n    selector: 'jhi-code-editor-file-browser-delete',\r\n    templateUrl: './code-editor-file-browser-delete.component.html',\r\n    providers: [CodeEditorRepositoryFileService],\r\n    imports: [FormsModule, TranslateDirective, FaIconComponent, ArtemisTranslatePipe],\r\n})\r\nexport class CodeEditorFileBrowserDeleteComponent implements OnInit {\r\n    activeModal = inject(NgbActiveModal);\r\n    private repositoryFileService = inject(CodeEditorRepositoryFileService);\r\n\r\n    @Input() fileNameToDelete: string;\r\n    @Input() parent: IFileDeleteDelegate;\r\n    @Input() fileType: FileType;\r\n\r\n    isLoading: boolean;\r\n\r\n    // Icons\r\n    faBan = faBan;\r\n    faTrashAlt = faTrashAlt;\r\n\r\n    /**\r\n     * @function ngOnInit\r\n     * @desc Initializes variables\r\n     */\r\n    ngOnInit(): void {\r\n        this.isLoading = false;\r\n    }\r\n\r\n    /**\r\n     * @function deleteFile\r\n     * @desc Reads the provided fileName and deletes the matching file in the repository\r\n     */\r\n    deleteFile() {\r\n        this.isLoading = true;\r\n        // Make sure we have a filename\r\n        if (this.fileNameToDelete) {\r\n            this.repositoryFileService.deleteFile(this.fileNameToDelete).subscribe({\r\n                next: () => {\r\n                    this.closeModal();\r\n                    this.parent.onFileDeleted(new DeleteFileChange(this.fileType, this.fileNameToDelete));\r\n                },\r\n                error: (err) => {\r\n                    captureException(err);\r\n                    // TODO: show the error to the user\r\n                },\r\n            });\r\n        }\r\n        this.isLoading = false;\r\n    }\r\n\r\n    /**\r\n     * @function closeModal\r\n     * @desc Dismisses the currently active modal (popup)\r\n     */\r\n    closeModal() {\r\n        this.activeModal.dismiss('cancel');\r\n    }\r\n}\r\n", "<form #deleteForm=\"ngForm\" name=\"deleteForm\" (ngSubmit)=\"deleteFile()\">\r\n    <div class=\"modal-header\">\r\n        @if (fileType === 'FILE') {\r\n            <h4 class=\"modal-title\" jhiTranslate=\"artemisApp.editor.fileBrowser.deleteFileTitle\"></h4>\r\n        }\r\n        @if (fileType === 'FOLDER') {\r\n            <h4 class=\"modal-title\" jhiTranslate=\"artemisApp.editor.fileBrowser.deleteFolderTitle\"></h4>\r\n        }\r\n        <button type=\"button\" class=\"btn-close\" data-dismiss=\"modal\" (click)=\"closeModal()\"></button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        @if (fileType === 'FILE') {\r\n            <p class=\"text-danger\" [innerHtml]=\"'artemisApp.editor.fileBrowser.deleteFileConfirm' | artemisTranslate: { filename: fileNameToDelete }\"></p>\r\n        }\r\n        @if (fileType === 'FOLDER') {\r\n            <p class=\"text-danger\" [innerHtml]=\"'artemisApp.editor.fileBrowser.deleteFolderConfirm' | artemisTranslate: { filename: fileNameToDelete }\"></p>\r\n        }\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"closeModal()\">\r\n            <fa-icon [icon]=\"faBan\" />&nbsp;<span jhiTranslate=\"entity.action.cancel\"></span>\r\n        </button>\r\n        <button type=\"submit\" class=\"btn btn-danger\" [disabled]=\"!deleteForm.valid\">\r\n            <fa-icon id=\"delete-file\" [icon]=\"faTrashAlt\" />&nbsp;<span jhiTranslate=\"artemisApp.editor.fileBrowser.delete\"></span>\r\n        </button>\r\n    </div>\r\n</form>\r\n", "import { isBoolean, isString } from 'lodash-es';\r\n\r\nexport interface TreeItem<T> {\r\n    text: string;\r\n    value: T;\r\n    disabled?: boolean;\r\n    checked?: boolean;\r\n    collapsed?: boolean;\r\n    children: TreeItem<T>[];\r\n}\r\n\r\nexport class TreeViewItem<T> {\r\n    private internalDisabled = false;\r\n    private internalCollapsed = false;\r\n    private internalChildren: TreeViewItem<T>[] = [];\r\n    checked = false;\r\n    text: string;\r\n    value: T;\r\n\r\n    constructor(item: TreeItem<T>) {\r\n        if (!item) {\r\n            throw new Error('Item must be defined');\r\n        }\r\n        if (isString(item.text)) {\r\n            this.text = item.text;\r\n        } else {\r\n            throw new Error('A text of item must be string object');\r\n        }\r\n        this.value = item.value;\r\n        if (isBoolean(item.checked)) {\r\n            this.checked = item.checked;\r\n        }\r\n        if (isBoolean(item.collapsed)) {\r\n            this.collapsed = item.collapsed;\r\n        }\r\n        if (isBoolean(item.disabled)) {\r\n            this.disabled = item.disabled;\r\n        }\r\n        if (item.children && item.children.length > 0) {\r\n            this.children = item.children.map((child) => {\r\n                if (this.disabled) {\r\n                    child.disabled = true;\r\n                }\r\n\r\n                return new TreeViewItem(child);\r\n            });\r\n        }\r\n    }\r\n\r\n    get disabled(): boolean {\r\n        return this.internalDisabled;\r\n    }\r\n\r\n    set disabled(value: boolean) {\r\n        if (this.internalDisabled !== value) {\r\n            this.internalDisabled = value;\r\n            if (this.internalChildren) {\r\n                this.internalChildren.forEach((child) => (child.disabled = value));\r\n            }\r\n        }\r\n    }\r\n\r\n    get collapsed(): boolean {\r\n        return this.internalCollapsed;\r\n    }\r\n\r\n    set collapsed(value: boolean) {\r\n        if (this.internalCollapsed !== value) {\r\n            this.internalCollapsed = value;\r\n        }\r\n    }\r\n\r\n    setCollapsedRecursive(value: boolean): void {\r\n        this.internalCollapsed = value;\r\n        if (this.internalChildren) {\r\n            this.internalChildren.forEach((child) => child.setCollapsedRecursive(value));\r\n        }\r\n    }\r\n\r\n    get children(): TreeViewItem<T>[] {\r\n        return this.internalChildren;\r\n    }\r\n\r\n    set children(value: TreeViewItem<T>[]) {\r\n        if (this.internalChildren !== value) {\r\n            this.internalChildren = value;\r\n        }\r\n    }\r\n}\r\n", "import { Component, EventEmitter, Input, Output, TemplateRef } from '@angular/core';\r\nimport { TreeViewItem } from '../../models/tree-view-item';\r\nimport { TreeViewItemTemplateContext } from '../../models/tree-view-item-template-context';\r\nimport { NgTemplateOutlet } from '@angular/common';\r\n\r\n@Component({\r\n    selector: 'treeview-item',\r\n    templateUrl: './tree-view-item.component.html',\r\n    styleUrls: ['./tree-view-item.component.scss'],\r\n    imports: [NgTemplateOutlet],\r\n})\r\nexport class TreeViewItemComponent<T> {\r\n    @Input() template: TemplateRef<TreeViewItemTemplateContext<T>>;\r\n    @Input() item: TreeViewItem<T>;\r\n    @Output() checkedChange = new EventEmitter<boolean>();\r\n\r\n    onCollapseExpand = () => {\r\n        this.item.collapsed = !this.item.collapsed;\r\n    };\r\n\r\n    onCheckedChange = () => {\r\n        const checked = this.item.checked;\r\n        this.checkedChange.emit(checked);\r\n    };\r\n\r\n    onChildCheckedChange(child: TreeViewItem<T>, checked: boolean): void {\r\n        let itemChecked: boolean | undefined = undefined;\r\n        for (const childItem of this.item.children) {\r\n            if (itemChecked == undefined) {\r\n                itemChecked = childItem.checked;\r\n            } else if (itemChecked !== childItem.checked) {\r\n                itemChecked = undefined;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (itemChecked == undefined) {\r\n            itemChecked = false;\r\n        }\r\n\r\n        if (this.item.checked !== itemChecked) {\r\n            this.item.checked = itemChecked;\r\n        }\r\n\r\n        this.checkedChange.emit(checked);\r\n    }\r\n}\r\n", "@if (item) {\r\n    <div class=\"treeview-item\">\r\n        <ng-template [ngTemplateOutlet]=\"template\" [ngTemplateOutletContext]=\"{ item: item, onCollapseExpand: onCollapseExpand, onCheckedChange: onCheckedChange }\" />\r\n        @if (!item.collapsed) {\r\n            <div>\r\n                @for (child of item.children; track child) {\r\n                    <treeview-item [item]=\"child\" [template]=\"template\" (checkedChange)=\"onChildCheckedChange(child, $event)\" />\r\n                }\r\n            </div>\r\n        }\r\n    </div>\r\n}\r\n", "import { Component, EventEmitter, Input, Output, TemplateRef } from '@angular/core';\r\nimport { TreeViewItem } from '../../models/tree-view-item';\r\nimport { TreeViewItemTemplateContext } from '../../models/tree-view-item-template-context';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TreeViewItemComponent } from '../treeview-item/tree-view-item.component';\r\n\r\n@Component({\r\n    selector: 'treeview',\r\n    templateUrl: './tree-view.component.html',\r\n    styleUrls: ['./tree-view.component.scss'],\r\n    imports: [FormsModule, TreeViewItemComponent],\r\n})\r\nexport class TreeViewComponent<T> {\r\n    @Input() itemTemplate: TemplateRef<TreeViewItemTemplateContext<T>>;\r\n    @Input() items: TreeViewItem<T>[];\r\n    @Input() maxHeight = 500;\r\n    @Output() filterChange = new EventEmitter<string>();\r\n}\r\n", "<ng-template #defaultItemTemplate let-item=\"item\" let-onCollapseExpand=\"onCollapseExpand\">\r\n    <div class=\"form-inline row-item\">\r\n        @if (item.children) {\r\n            <i (click)=\"onCollapseExpand()\" aria-hidden=\"true\">\r\n                @if (item.collapsed) {\r\n                    <svg width=\"0.8rem\" height=\"0.8rem\" viewBox=\"0 0 16 16\" class=\"bi bi-caret-right-fill\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M12.14 8.753l-5.482 4.796c-.646.566-1.658.106-1.658-.753V3.204a1 1 0 0 1 1.659-.753l5.48 4.796a1 1 0 0 1 0 1.506z\" />\r\n                    </svg>\r\n                } @else {\r\n                    <svg width=\"0.8rem\" height=\"0.8rem\" viewBox=\"0 0 16 16\" class=\"bi bi-caret-down-fill\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M7.247 11.14L2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z\" />\r\n                    </svg>\r\n                }\r\n            </i>\r\n        }\r\n        <div class=\"form-check\">\r\n            <input id=\"input\" type=\"checkbox\" class=\"form-check-input\" [(ngModel)]=\"item.checked\" [disabled]=\"item.disabled\" [indeterminate]=\"item.indeterminate\" />\r\n            <label for=\"input\" class=\"form-check-label\">\r\n                {{ item.text }}\r\n            </label>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n<div class=\"treeview-container\" [style.max-height.px]=\"maxHeight\">\r\n    @for (item of items; track items.indexOf(item)) {\r\n        <treeview-item [item]=\"item\" [template]=\"itemTemplate || defaultItemTemplate\" />\r\n    }\r\n</div>\r\n", "import { TreeViewItem } from '../models/tree-view-item';\r\n\r\nexport function findItem<T>(root: TreeViewItem<T> | undefined, value: any): TreeViewItem<T> | undefined {\r\n    if (!root) {\r\n        return undefined;\r\n    }\r\n\r\n    if (root.value === value) {\r\n        return root;\r\n    }\r\n\r\n    if (root.children) {\r\n        for (const child of root.children) {\r\n            const foundItem = findItem(child, value);\r\n            if (foundItem) {\r\n                return foundItem;\r\n            }\r\n        }\r\n    }\r\n\r\n    return undefined;\r\n}\r\n\r\nexport function findItemInList<T>(list: TreeViewItem<T>[] | undefined, value: any): TreeViewItem<T> | undefined {\r\n    if (!list) {\r\n        return undefined;\r\n    }\r\n\r\n    for (const item of list) {\r\n        const foundItem = findItem(item, value);\r\n        if (foundItem) {\r\n            return foundItem;\r\n        }\r\n    }\r\n\r\n    return undefined;\r\n}\r\n", "import { AfterViewInit, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\nimport { faFile, faFolder } from '@fortawesome/free-solid-svg-icons';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FileType } from 'app/exercises/programming/shared/code-editor/model/code-editor.model';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\n\r\n@Component({\r\n    selector: 'jhi-code-editor-file-browser-create-node',\r\n    templateUrl: './code-editor-file-browser-create-node.component.html',\r\n    styleUrls: ['./code-editor-file-browser-create-node.component.scss'],\r\n    providers: [NgbModal],\r\n    imports: [FaIconComponent],\r\n})\r\nexport class CodeEditorFileBrowserCreateNodeComponent implements AfterViewInit {\r\n    FileType = FileType;\r\n    // Icons\r\n    faFile = faFile;\r\n    faFolder = faFolder;\r\n\r\n    @ViewChild('creatingInput', { static: false }) creatingInput: ElementRef;\r\n\r\n    @Input() createFileType: FileType;\r\n    @Input() folder: string;\r\n    @Output() onCreateFile = new EventEmitter<string>();\r\n    @Output() onClearCreatingFile = new EventEmitter<Event>();\r\n\r\n    createFile(event: any) {\r\n        if (!event.target.value) {\r\n            this.onClearCreatingFile.emit();\r\n            return;\r\n        }\r\n        this.onCreateFile.emit(event.target.value);\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.creatingInput.nativeElement.focus();\r\n    }\r\n}\r\n", "<li class=\"list-group-item border-0\" id=\"file-browser-create-node\">\r\n    <fa-icon aria-hidden=\"true\" [icon]=\"createFileType === FileType.FILE ? faFile : faFolder\" [fixedWidth]=\"true\" />\r\n    <span class=\"ms-1\"\r\n        ><input\r\n            #creatingInput\r\n            value=\"\"\r\n            (keyup.enter)=\"createFile($event)\"\r\n            (focusout)=\"createFile($event)\"\r\n            (keyup.esc)=\"onClearCreatingFile.emit($event)\"\r\n            class=\"list-group-item__input\"\r\n    /></span>\r\n</li>\r\n", "import { Component, ElementRef, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { FileType } from 'app/exercises/programming/shared/code-editor/model/code-editor.model';\r\nimport { TreeViewItem } from 'app/exercises/programming/shared/code-editor/treeview/models/tree-view-item';\r\n\r\n@Component({\r\n    template: '',\r\n})\r\nexport abstract class CodeEditorFileBrowserNodeComponent implements OnChanges {\r\n    FileType = FileType;\r\n\r\n    @ViewChild('renamingInput', { static: false }) renamingInput: ElementRef;\r\n\r\n    @Input() item: TreeViewItem<string>;\r\n    @Input() hasError = false;\r\n    @Input() hasUnsavedChanges = false;\r\n    @Input() isBeingRenamed = false;\r\n\r\n    @Output() onNodeSelect = new EventEmitter<TreeViewItem<string>>();\r\n    @Output() onSetRenamingNode = new EventEmitter<TreeViewItem<string>>();\r\n    @Output() onClearRenamingNode = new EventEmitter<void>();\r\n    @Output() onRenameNode = new EventEmitter<{ item: TreeViewItem<string>; newFileName: string }>();\r\n    @Output() onDeleteNode = new EventEmitter<TreeViewItem<string>>();\r\n\r\n    /**\r\n     * Check if the node is being renamed now, if so, focus the input when the view is rendered.\r\n     * @param changes\r\n     */\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes.isBeingRenamed && this.isBeingRenamed) {\r\n            // Timeout is needed to wait for view to render.\r\n            setTimeout(() => {\r\n                if (this.renamingInput) {\r\n                    this.renamingInput.nativeElement.focus();\r\n                }\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Emit that this node should be renamed.\r\n     * @param event\r\n     */\r\n    setRenamingNode(event: any) {\r\n        event.stopPropagation();\r\n        this.onSetRenamingNode.emit(this.item);\r\n    }\r\n\r\n    /**\r\n     * Stop renaming this node.\r\n     * @param event\r\n     */\r\n    clearRenamingNode(event: any) {\r\n        event.stopPropagation();\r\n        this.onClearRenamingNode.emit();\r\n    }\r\n\r\n    /**\r\n     * Send an event to the parent with the new name of the node.\r\n     * @param event\r\n     */\r\n    renameNode(event: any) {\r\n        if (!event.target.value || !this.isBeingRenamed) {\r\n            return;\r\n        } else if (event.target.value === this.item.text) {\r\n            this.onClearRenamingNode.emit();\r\n            return;\r\n        }\r\n        this.onRenameNode.emit(event.target.value);\r\n    }\r\n\r\n    /**\r\n     * Delete the node.\r\n     * @param event\r\n     */\r\n    deleteNode(event: any) {\r\n        event.stopPropagation();\r\n        this.onDeleteNode.emit(this.item);\r\n    }\r\n}\r\n", "import { Component, Input, inject } from '@angular/core';\r\nimport { IconDefinition, faLightbulb } from '@fortawesome/free-solid-svg-icons';\r\nimport { NgbModal, NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { FileBadge, FileBadgeType } from 'app/exercises/programming/shared/code-editor/model/code-editor.model';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\n\r\n@Component({\r\n    selector: 'jhi-file-browser-badge',\r\n    templateUrl: './code-editor-file-browser-badge.component.html',\r\n    styleUrls: ['./code-editor-file-browser-badge.component.scss'],\r\n    providers: [NgbModal],\r\n    imports: [NgbTooltip, FaIconComponent],\r\n})\r\nexport class CodeEditorFileBrowserBadgeComponent {\r\n    private translateService = inject(TranslateService);\r\n\r\n    @Input() badge: FileBadge;\r\n    @Input() onColoredBackground = false;\r\n    // Only slightly darken the background and use white text\r\n\r\n    get tooltip(): string | undefined {\r\n        switch (this.badge.type) {\r\n            case FileBadgeType.FEEDBACK_SUGGESTION:\r\n                return this.translateService.instant('artemisApp.editor.fileBrowser.fileBadgeTooltips.feedbackSuggestions');\r\n            default:\r\n                return undefined;\r\n        }\r\n    }\r\n\r\n    get icon(): IconDefinition | undefined {\r\n        switch (this.badge.type) {\r\n            case FileBadgeType.FEEDBACK_SUGGESTION:\r\n                return faLightbulb;\r\n            default:\r\n                return undefined;\r\n        }\r\n    }\r\n}\r\n", "<span class=\"badge\" [class.on-colored-background]=\"onColoredBackground\" [ngbTooltip]=\"tooltip\">\r\n    @if (icon) {\r\n        <fa-icon [icon]=\"icon!\" />\r\n    }\r\n    <span>{{ badge.count }}</span>\r\n</span>\r\n", "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FileBadge, FileType } from 'app/exercises/programming/shared/code-editor/model/code-editor.model';\r\nimport { CodeEditorFileBrowserNodeComponent } from 'app/exercises/programming/shared/code-editor/file-browser/code-editor-file-browser-node.component';\r\nimport { faChevronDown, faChevronRight, faEdit, faFile, faFolder, faFolderOpen, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { TreeViewItem } from 'app/exercises/programming/shared/code-editor/treeview/models/tree-view-item';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { CodeEditorFileBrowserBadgeComponent } from './code-editor-file-browser-badge.component';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-code-editor-file-browser-folder',\r\n    templateUrl: './code-editor-file-browser-folder.component.html',\r\n    providers: [NgbModal],\r\n    imports: [FaIconComponent, CodeEditorFileBrowserBadgeComponent, ArtemisTranslatePipe],\r\n})\r\nexport class CodeEditorFileBrowserFolderComponent extends CodeEditorFileBrowserNodeComponent {\r\n    @Input() onCollapseExpand: () => void;\r\n    @Input() isCompressed = false;\r\n    @Input() disableActions: boolean;\r\n    @Input() badges: FileBadge[] = [];\r\n    @Output() onSetCreatingNodeInFolder = new EventEmitter<{ item: TreeViewItem<string>; fileType: FileType }>();\r\n\r\n    // Icons\r\n    faTrash = faTrash;\r\n    faEdit = faEdit;\r\n    faFolder = faFolder;\r\n    faFile = faFile;\r\n    faChevronRight = faChevronRight;\r\n    faChevronDown = faChevronDown;\r\n    faFolderOpen = faFolderOpen;\r\n\r\n    setCreatingNodeInFolder(event: any, fileType: FileType) {\r\n        event.stopPropagation();\r\n        this.onSetCreatingNodeInFolder.emit({ item: this.item, fileType });\r\n    }\r\n}\r\n", "<!--Folder-->\r\n<li (click)=\"onCollapseExpand()\" class=\"list-group-item list-group-item--folder\" id=\"file-browser-folder\">\r\n    <fa-icon aria-hidden=\"true\" [icon]=\"item.collapsed ? faChevronRight : faChevronDown\" [fixedWidth]=\"true\" class=\"me-1\" size=\"xs\" />\r\n    <fa-icon aria-hidden=\"true\" [icon]=\"item.collapsed ? faFolder : faFolderOpen\" [fixedWidth]=\"true\" />\r\n    @if (!isBeingRenamed) {\r\n        <span class=\"ms-1 list-group-item__fileName\">{{ item.text }}</span>\r\n    }\r\n    <!-- Renaming folder tree item -->\r\n    @if (isBeingRenamed) {\r\n        <span class=\"ms-1\"\r\n            ><input\r\n                #renamingInput\r\n                value=\"{{ item.text }}\"\r\n                (keyup.enter)=\"renameNode($event)\"\r\n                (focusout)=\"renameNode($event)\"\r\n                (keyup.esc)=\"clearRenamingNode($event)\"\r\n                class=\"list-group-item__input\"\r\n        /></span>\r\n    }\r\n    <!-- File badges -->\r\n    @for (badge of badges; track badges.indexOf(badge)) {\r\n        <jhi-file-browser-badge [badge]=\"badge\" />\r\n    }\r\n    <!-- Folder level actions -->\r\n    @if (!disableActions) {\r\n        <span class=\"file-icons\">\r\n            <button (click)=\"setCreatingNodeInFolder($event, FileType.FILE)\" class=\"btn btn-small\">\r\n                <fa-icon id=\"file-browser-folder-create-file\" [icon]=\"faFile\" title=\"{{ 'artemisApp.editor.fileBrowser.createFile' | artemisTranslate }}\" />\r\n            </button>\r\n            <button (click)=\"setCreatingNodeInFolder($event, FileType.FOLDER)\" class=\"btn btn-small\">\r\n                <fa-icon [icon]=\"faFolder\" title=\"{{ 'artemisApp.editor.fileBrowser.createFolder' | artemisTranslate }}\" />\r\n            </button>\r\n            <button [disabled]=\"isCompressed && item.value.includes('/')\" (click)=\"setRenamingNode($event)\" class=\"btn btn-small\">\r\n                <fa-icon\r\n                    [icon]=\"faEdit\"\r\n                    title=\"{{\r\n                        (isCompressed && item.value.includes('/') ? 'artemisApp.editor.fileBrowser.renameFolderDisabledTooltip' : 'artemisApp.editor.fileBrowser.renameFolder')\r\n                            | artemisTranslate\r\n                    }}\"\r\n                />\r\n            </button>\r\n            <button (click)=\"deleteNode($event)\" class=\"btn btn-small\">\r\n                <fa-icon [icon]=\"faTrash\" title=\"{{ 'artemisApp.editor.fileBrowser.deleteFolder' | artemisTranslate }}\" />\r\n            </button>\r\n        </span>\r\n    }\r\n</li>\r\n", "import { Component, Input } from '@angular/core';\r\nimport { faEdit, faFile, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CodeEditorFileBrowserNodeComponent } from 'app/exercises/programming/shared/code-editor/file-browser/code-editor-file-browser-node.component';\r\nimport { FileBadge } from 'app/exercises/programming/shared/code-editor/model/code-editor.model';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { NgClass } from '@angular/common';\r\nimport { CodeEditorFileBrowserBadgeComponent } from './code-editor-file-browser-badge.component';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-code-editor-file-browser-file',\r\n    templateUrl: './code-editor-file-browser-file.component.html',\r\n    providers: [NgbModal],\r\n    imports: [FaIconComponent, NgClass, CodeEditorFileBrowserBadgeComponent, ArtemisTranslatePipe],\r\n})\r\nexport class CodeEditorFileBrowserFileComponent extends CodeEditorFileBrowserNodeComponent {\r\n    @Input() disableActions: boolean;\r\n    @Input() hasChanges = false;\r\n    @Input() badges: FileBadge[] = [];\r\n\r\n    // Icons\r\n    faTrash = faTrash;\r\n    faEdit = faEdit;\r\n    faFile = faFile;\r\n}\r\n", "<!--File-->\r\n<li\r\n    (click)=\"onNodeSelect.emit(item)\"\r\n    class=\"list-group-item file-item\"\r\n    [class.node-selected]=\"item.checked\"\r\n    [class.text-danger]=\"!item.checked && hasError\"\r\n    [class.bg-warning]=\"hasChanges\"\r\n    id=\"file-browser-file\"\r\n>\r\n    <fa-icon aria-hidden=\"true\" [icon]=\"faFile\" [fixedWidth]=\"true\" />\r\n    @if (!isBeingRenamed) {\r\n        <span class=\"ms-1 list-group-item__fileName\" [ngClass]=\"item.checked ? 'text-white' : 'primary'\">{{ item.text }}</span>\r\n    }\r\n    <!-- Renaming file tree item -->\r\n    @if (isBeingRenamed) {\r\n        <span class=\"ms-1\"\r\n            ><input\r\n                #renamingInput\r\n                value=\"{{ item.text }}\"\r\n                (keyup.enter)=\"renameNode($event)\"\r\n                (focusout)=\"renameNode($event)\"\r\n                (keyup.esc)=\"clearRenamingNode($event)\"\r\n                class=\"list-group-item__input\"\r\n        /></span>\r\n    }\r\n    <!-- File badges -->\r\n    @for (badge of badges; track badges.indexOf(badge)) {\r\n        <jhi-file-browser-badge [badge]=\"badge\" [onColoredBackground]=\"item.checked || hasError || hasChanges\" />\r\n    }\r\n    <!-- File level actions -->\r\n    @if (!disableActions) {\r\n        <span class=\"file-icons\" [ngClass]=\"item.checked ? 'text-white' : 'primary'\">\r\n            <button (click)=\"setRenamingNode($event)\" class=\"btn btn-small\">\r\n                <fa-icon id=\"file-browser-file-edit\" [icon]=\"faEdit\" title=\"{{ 'artemisApp.editor.fileBrowser.renameFile' | artemisTranslate }}\" />\r\n            </button>\r\n            <button (click)=\"deleteNode($event)\" class=\"btn btn-small\">\r\n                <fa-icon id=\"file-browser-file-delete\" [icon]=\"faTrash\" title=\"{{ 'artemisApp.editor.fileBrowser.deleteFile' | artemisTranslate }}\" />\r\n            </button>\r\n        </span>\r\n    }\r\n</li>\r\n", "import { Injectable, OnDestroy, inject } from '@angular/core';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { ProgrammingSubmissionService, ProgrammingSubmissionState } from 'app/exercises/programming/participate/programming-submission.service';\r\nimport { StudentParticipation } from 'app/entities/participation/student-participation.model';\r\nimport { SolutionProgrammingExerciseParticipation } from 'app/entities/participation/solution-programming-exercise-participation.model';\r\nimport { DomainChange, DomainType } from 'app/exercises/programming/shared/code-editor/model/code-editor.model';\r\nimport { DomainDependentService } from 'app/exercises/programming/shared/code-editor/service/code-editor-domain-dependent.service';\r\n\r\n/**\r\n * Wrapper service for using the currently selected participation id in the code-editor for retrieving the submission state.\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class CodeEditorSubmissionService extends DomainDependentService implements OnDestroy {\r\n    private submissionService = inject(ProgrammingSubmissionService);\r\n    private alertService = inject(AlertService);\r\n\r\n    private participationId?: number;\r\n    private exerciseId?: number;\r\n    private isBuildingSubject = new Subject<boolean>();\r\n    private submissionSubscription: Subscription;\r\n\r\n    constructor() {\r\n        super();\r\n        this.initDomainSubscription();\r\n    }\r\n\r\n    /**\r\n     * Completes building subject. If there are subscriptions unsubscribe form them.\r\n     */\r\n    ngOnDestroy() {\r\n        if (this.submissionSubscription) {\r\n            this.submissionSubscription.unsubscribe();\r\n        }\r\n        this.isBuildingSubject.complete();\r\n    }\r\n\r\n    /**\r\n     * Calls setDomain of super and updates according to parameter.\r\n     * @param domain - defines new domain of super and variables of current service.\r\n     */\r\n    setDomain(domain: DomainChange) {\r\n        super.setDomain(domain);\r\n        const [domainType, domainValue] = domain;\r\n        // Subscribe to the submission state of the currently selected participation, map the submission to the isBuilding state.\r\n        if (domainType === DomainType.PARTICIPATION) {\r\n            this.participationId = domainValue.id;\r\n            // There is no differentiation between the participation types atm.\r\n            // This could be implemented in the domain service, but this would make the implementation more complicated, too.\r\n            this.exerciseId = (domainValue as StudentParticipation).exercise\r\n                ? (domainValue as StudentParticipation).exercise?.id\r\n                : (domainValue as SolutionProgrammingExerciseParticipation).programmingExercise?.id;\r\n            const personalParticipation = !!(domainValue as StudentParticipation).exercise;\r\n            if (this.participationId && this.exerciseId) {\r\n                this.submissionSubscription = this.submissionService\r\n                    .getLatestPendingSubmissionByParticipationId(this.participationId, this.exerciseId, personalParticipation)\r\n                    .pipe(\r\n                        tap(({ submissionState }) => submissionState === ProgrammingSubmissionState.HAS_FAILED_SUBMISSION && this.onError()),\r\n                        map(({ submission }) => !!submission),\r\n                        tap((isBuilding: boolean) => this.isBuildingSubject.next(isBuilding)),\r\n                    )\r\n                    .subscribe();\r\n            }\r\n        } else if (domainType === DomainType.TEST_REPOSITORY) {\r\n            // There are no submissions for the test repository, so it is never building.\r\n            this.isBuildingSubject.next(false);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Call an error if there is one.\r\n     */\r\n    onError() {\r\n        this.alertService.error('artemisApp.submission.resultTimeout');\r\n    }\r\n\r\n    /**\r\n     * Returns building state of this service.\r\n     */\r\n    getBuildingState() {\r\n        return this.isBuildingSubject.asObservable();\r\n    }\r\n}\r\n", "import { Component, EventEmitter, inject } from '@angular/core';\r\nimport { faBan, faExclamationTriangle, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\n\r\n@Component({\r\n    selector: 'jhi-code-editor-resolve-conflict-modal',\r\n    templateUrl: './code-editor-resolve-conflict-modal.component.html',\r\n    styleUrls: ['./code-editor-resolve-conflict-modal.scss'],\r\n    imports: [FormsModule, TranslateDirective, FaIconComponent],\r\n})\r\nexport class CodeEditorResolveConflictModalComponent {\r\n    activeModal = inject(NgbActiveModal);\r\n\r\n    // Icons\r\n    faBan = faBan;\r\n    faTimes = faTimes;\r\n    faExclamationTriangle = faExclamationTriangle;\r\n\r\n    shouldReset: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    /**\r\n     * Reset the git repository to its last commit.\r\n     *\r\n     * @function resetRepository\r\n     */\r\n    resetRepository() {\r\n        this.activeModal.close();\r\n        this.shouldReset.emit();\r\n    }\r\n\r\n    closeModal() {\r\n        this.activeModal.dismiss('cancel');\r\n    }\r\n}\r\n", "<form class=\"conflict-modal\" #deleteForm=\"ngForm\" name=\"deleteForm\" (ngSubmit)=\"resetRepository()\">\r\n    <div class=\"conflict-modal__header\">\r\n        <h4 class=\"fw-medium\" jhiTranslate=\"artemisApp.editor.conflict.conflictExplanationShort\"></h4>\r\n    </div>\r\n    <div class=\"conflict-modal__body\">\r\n        <div jhiTranslate=\"artemisApp.editor.conflict.conflictExplanationLong\"></div>\r\n        <span class=\"conflict-modal__body__warning\">\r\n            <fa-icon [icon]=\"faExclamationTriangle\" />\r\n            <span jhiTranslate=\"artemisApp.editor.conflict.conflictWarning\"></span>\r\n        </span>\r\n    </div>\r\n    <div class=\"conflict-modal__footer\">\r\n        <button class=\"conflict-modal__footer__cancel\" type=\"button\" data-dismiss=\"modal\" (click)=\"closeModal()\">\r\n            <fa-icon [icon]=\"faBan\" />&nbsp;<span jhiTranslate=\"entity.action.cancel\"></span>\r\n        </button>\r\n        <button type=\"submit\" class=\"conflict-modal__footer__submit\" [disabled]=\"!deleteForm.valid\">\r\n            <fa-icon [icon]=\"faTimes\" /><span jhiTranslate=\"artemisApp.editor.conflict.resolveConflict\"></span>\r\n        </button>\r\n    </div>\r\n</form>\r\n", "import { Component, EventEmitter, inject } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CodeEditorRepositoryFileService } from 'app/exercises/programming/shared/code-editor/service/code-editor-repository.service';\r\nimport { faBan, faExclamationTriangle, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\n\r\n@Component({\r\n    selector: 'jhi-code-editor-confirm-refresh-modal',\r\n    templateUrl: './code-editor-confirm-refresh-modal.component.html',\r\n    styleUrls: ['./code-editor-resolve-conflict-modal.scss'],\r\n    providers: [CodeEditorRepositoryFileService],\r\n    imports: [FormsModule, TranslateDirective, FaIconComponent],\r\n})\r\nexport class CodeEditorConfirmRefreshModalComponent {\r\n    private activeModal = inject(NgbActiveModal);\r\n\r\n    // Icons\r\n    faExclamationTriangle = faExclamationTriangle;\r\n    faBan = faBan;\r\n    faTimes = faTimes;\r\n\r\n    shouldRefresh: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    /**\r\n     * Reset the git repository.\r\n     *\r\n     * @function resetRepository\r\n     */\r\n    refreshFiles() {\r\n        this.activeModal.close();\r\n        this.shouldRefresh.emit();\r\n    }\r\n\r\n    closeModal() {\r\n        this.activeModal.dismiss('cancel');\r\n    }\r\n}\r\n", "<form class=\"conflict-modal\" #confirmForm=\"ngForm\" name=\"confirmForm\" (ngSubmit)=\"refreshFiles()\">\r\n    <div class=\"conflict-modal__header\">\r\n        <h4 jhiTranslate=\"artemisApp.editor.refresh.refreshExplanationShort\"></h4>\r\n    </div>\r\n    <div class=\"conflict-modal__body\">\r\n        <span class=\"conflict-modal__body__warning\">\r\n            <fa-icon [icon]=\"faExclamationTriangle\" />\r\n            <div jhiTranslate=\"artemisApp.editor.refresh.refreshExplanationLong\"></div>\r\n        </span>\r\n    </div>\r\n    <div class=\"conflict-modal__footer\">\r\n        <button class=\"conflict-modal__footer__cancel\" type=\"button\" data-dismiss=\"modal\" (click)=\"closeModal()\">\r\n            <fa-icon [icon]=\"faBan\" />&nbsp;<span jhiTranslate=\"entity.action.cancel\"></span>\r\n        </button>\r\n        <button type=\"submit\" class=\"conflict-modal__footer__submit\" [disabled]=\"!confirmForm.valid\">\r\n            <fa-icon [icon]=\"faTimes\" /><span jhiTranslate=\"artemisApp.editor.refresh.performRefresh\"></span>\r\n        </button>\r\n    </div>\r\n</form>\r\n", "import { Component, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges, inject, input } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { NgbModal, NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { catchError, switchMap, tap } from 'rxjs/operators';\r\nimport { Observable, Subscription, of, throwError } from 'rxjs';\r\nimport { isEmpty as _isEmpty } from 'lodash-es';\r\nimport { ActivatedRoute, Router, RouterLink } from '@angular/router';\r\nimport { CodeEditorSubmissionService } from 'app/exercises/programming/shared/code-editor/service/code-editor-submission.service';\r\nimport { CodeEditorConflictStateService } from 'app/exercises/programming/shared/code-editor/service/code-editor-conflict-state.service';\r\nimport { CodeEditorResolveConflictModalComponent } from 'app/exercises/programming/shared/code-editor/actions/code-editor-resolve-conflict-modal.component';\r\nimport { FeatureToggle } from 'app/shared/feature-toggle/feature-toggle.service';\r\nimport { CodeEditorRepositoryFileService, CodeEditorRepositoryService, ConnectionError } from 'app/exercises/programming/shared/code-editor/service/code-editor-repository.service';\r\nimport { CommitState, EditorState, FileSubmission, GitConflictState } from 'app/exercises/programming/shared/code-editor/model/code-editor.model';\r\nimport { CodeEditorConfirmRefreshModalComponent } from './code-editor-confirm-refresh-modal.component';\r\nimport { AUTOSAVE_CHECK_INTERVAL, AUTOSAVE_EXERCISE_INTERVAL } from 'app/shared/constants/exercise-exam-constants';\r\nimport { faCircleNotch, faExternalLink, faSync, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPlayCircle } from '@fortawesome/free-regular-svg-icons';\r\nimport { Participation } from 'app/entities/participation/participation.model';\r\nimport { RequestFeedbackButtonComponent } from 'app/overview/exercise-details/request-feedback-button/request-feedback-button.component';\r\nimport { FeatureToggleDirective } from 'app/shared/feature-toggle/feature-toggle.directive';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\nimport { getLocalRepositoryLink } from 'app/utils/navigation.utils';\r\n\r\n@Component({\r\n    selector: 'jhi-code-editor-actions',\r\n    templateUrl: './code-editor-actions.component.html',\r\n    imports: [RequestFeedbackButtonComponent, FeatureToggleDirective, NgbTooltip, FaIconComponent, TranslateDirective, ArtemisTranslatePipe, RouterLink],\r\n})\r\nexport class CodeEditorActionsComponent implements OnInit, OnDestroy, OnChanges {\r\n    private repositoryService = inject(CodeEditorRepositoryService);\r\n    private repositoryFileService = inject(CodeEditorRepositoryFileService);\r\n    private conflictService = inject(CodeEditorConflictStateService);\r\n    private modalService = inject(NgbModal);\r\n    private submissionService = inject(CodeEditorSubmissionService);\r\n    private route = inject(ActivatedRoute);\r\n    private router = inject(Router);\r\n\r\n    CommitState = CommitState;\r\n    EditorState = EditorState;\r\n    FeatureToggle = FeatureToggle;\r\n\r\n    @Input() buildable = true;\r\n    @Input() unsavedFiles: { [fileName: string]: string };\r\n    @Input() disableActions = false;\r\n    @Input() disableAutoSave = false;\r\n    @Input() get editorState() {\r\n        return this.editorStateValue;\r\n    }\r\n    @Input() get commitState() {\r\n        return this.commitStateValue;\r\n    }\r\n    participation = input<Participation>();\r\n\r\n    @Output() commitStateChange = new EventEmitter<CommitState>();\r\n    @Output() editorStateChange = new EventEmitter<EditorState>();\r\n    @Output() isBuildingChange = new EventEmitter<boolean>();\r\n    @Output() onSavedFiles = new EventEmitter<{ [fileName: string]: string | undefined }>();\r\n    @Output() onRefreshFiles = new EventEmitter();\r\n    @Output() onError = new EventEmitter<string>();\r\n\r\n    isBuilding: boolean;\r\n    editorStateValue: EditorState;\r\n    commitStateValue: CommitState;\r\n    isResolvingConflict = false;\r\n    routerLink: string;\r\n    repositoryLink: string[];\r\n    isInCourseManagement = false;\r\n\r\n    conflictStateSubscription: Subscription;\r\n    submissionSubscription: Subscription;\r\n\r\n    // autoTimerInterval in seconds\r\n    autoSaveTimer = 0;\r\n    autoSaveInterval: number;\r\n\r\n    // Icons\r\n    faTimes = faTimes;\r\n    faCircleNotch = faCircleNotch;\r\n    faSync = faSync;\r\n    farPlayCircle = faPlayCircle;\r\n    faExternalLink = faExternalLink;\r\n\r\n    set commitState(commitState: CommitState) {\r\n        this.commitStateValue = commitState;\r\n        this.commitStateChange.emit(commitState);\r\n    }\r\n\r\n    set editorState(editorState: EditorState) {\r\n        this.editorStateValue = editorState;\r\n        this.editorStateChange.emit(editorState);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.route.params.subscribe((params) => {\r\n            const repositoryType = params['repositoryType'] ?? 'USER';\r\n            const courseId = Number(params['courseId']);\r\n            const repositoryId = Number(params['repositoryId']);\r\n            const exerciseId = Number(params['exerciseId']);\r\n            const examId = Number(params['examId']);\r\n            const exerciseGroupId = Number(params['exerciseGroupId']);\r\n            this.repositoryLink = getLocalRepositoryLink(courseId, exerciseId, repositoryType, repositoryId, examId, exerciseGroupId);\r\n        });\r\n        this.isInCourseManagement = this.router.url.includes('course-management');\r\n\r\n        this.conflictStateSubscription = this.conflictService.subscribeConflictState().subscribe((gitConflictState: GitConflictState) => {\r\n            // When the conflict is encountered when opening the code-editor, setting the commitState here could cause an uncheckedException.\r\n            // This is why a timeout of 0 is set to make sure the template is rendered before setting the commitState.\r\n            if (this.commitState === CommitState.CONFLICT && gitConflictState === GitConflictState.OK) {\r\n                // Case a: Conflict was resolved.\r\n                setTimeout(() => (this.commitState = CommitState.UNDEFINED), 0);\r\n            } else if (this.commitState !== CommitState.CONFLICT && gitConflictState === GitConflictState.CHECKOUT_CONFLICT) {\r\n                // Case b: Conflict has occurred.\r\n                setTimeout(() => (this.commitState = CommitState.CONFLICT), 0);\r\n            }\r\n        });\r\n        this.submissionSubscription = this.submissionService\r\n            .getBuildingState()\r\n            .pipe(tap((isBuilding: boolean) => (this.isBuilding = isBuilding)))\r\n            .subscribe();\r\n\r\n        if (!this.disableAutoSave) {\r\n            this.autoSaveInterval = window.setInterval(() => {\r\n                this.autoSaveTimer++;\r\n                if (this.autoSaveTimer >= AUTOSAVE_EXERCISE_INTERVAL) {\r\n                    this.autoSaveTimer = 0;\r\n                    this.onSave();\r\n                }\r\n            }, AUTOSAVE_CHECK_INTERVAL);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * After save and commit, we need to wait for the 'save' to settle, see the setter {@link CodeEditorContainerComponent#unsavedFilesValue}.\r\n     * This is because the user might have changed files while the commit was executing.\r\n     * In that case, we do not reset the commit state to CommitState.CLEAN.\r\n     * @param changes\r\n     */\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        setTimeout(() => {\r\n            if (changes.editorState && changes.editorState.previousValue === EditorState.SAVING && this.commitState === CommitState.COMMITTING) {\r\n                if (changes.editorState.currentValue === EditorState.CLEAN) {\r\n                    this.commitState = CommitState.CLEAN;\r\n                } else {\r\n                    this.commitState = CommitState.UNCOMMITTED_CHANGES;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        clearInterval(this.autoSaveInterval);\r\n        this.onSave();\r\n\r\n        if (this.conflictStateSubscription) {\r\n            this.conflictStateSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    onRefresh() {\r\n        if (this.editorState !== EditorState.CLEAN) {\r\n            const modal = this.modalService.open(CodeEditorConfirmRefreshModalComponent, { keyboard: true, size: 'lg' });\r\n            modal.componentInstance.shouldRefresh.subscribe(() => {\r\n                this.executeRefresh();\r\n            });\r\n        } else {\r\n            this.executeRefresh();\r\n        }\r\n    }\r\n\r\n    executeRefresh() {\r\n        this.editorState = EditorState.REFRESHING;\r\n        this.repositoryService.pull().subscribe({\r\n            next: () => {\r\n                this.onRefreshFiles.emit();\r\n                this.editorState = EditorState.CLEAN;\r\n            },\r\n            error: (error: Error) => {\r\n                this.editorState = EditorState.UNSAVED_CHANGES;\r\n                if (error.message === ConnectionError.message) {\r\n                    this.onError.emit('refreshFailed' + error.message);\r\n                } else {\r\n                    this.onError.emit('refreshFailed');\r\n                }\r\n            },\r\n        });\r\n    }\r\n\r\n    onSave() {\r\n        this.saveChangedFiles()\r\n            .pipe(catchError(() => of()))\r\n            .subscribe();\r\n    }\r\n\r\n    /**\r\n     * @param andCommit whether the saved changed in the files should be committed or not\r\n     * @desc Saves all files that have unsaved changes in the editor.\r\n     */\r\n    saveChangedFiles(andCommit = false): Observable<any> {\r\n        if (!_isEmpty(this.unsavedFiles)) {\r\n            this.editorState = EditorState.SAVING;\r\n            const unsavedFiles = Object.entries(this.unsavedFiles).map(([fileName, fileContent]) => ({ fileName, fileContent }));\r\n            return this.repositoryFileService.updateFiles(unsavedFiles, andCommit).pipe(\r\n                tap((fileSubmission: FileSubmission) => {\r\n                    this.onSavedFiles.emit(fileSubmission);\r\n                }),\r\n                catchError((error: Error) => {\r\n                    this.editorState = EditorState.UNSAVED_CHANGES;\r\n                    if (error.message === ConnectionError.message) {\r\n                        this.onError.emit('saveFailed' + error.message);\r\n                    } else {\r\n                        this.onError.emit('saveFailed');\r\n                    }\r\n                    return throwError(() => error);\r\n                }),\r\n            );\r\n        }\r\n        return of(undefined);\r\n    }\r\n\r\n    /**\r\n     * @function commit\r\n     * @desc Commits the current repository files.\r\n     * If there are unsaved changes, save them first before trying to commit again.\r\n     */\r\n    commit() {\r\n        // Avoid multiple commits at the same time.\r\n        if (this.commitState === CommitState.COMMITTING) {\r\n            return;\r\n        }\r\n        // If there are unsaved changes, save them before trying to commit again.\r\n        of(undefined)\r\n            .pipe(\r\n                tap(() => (this.commitState = CommitState.COMMITTING)),\r\n                switchMap(() => {\r\n                    if (!_isEmpty(this.unsavedFiles)) {\r\n                        return this.saveChangedFiles(true);\r\n                    } else {\r\n                        return this.repositoryService.commit();\r\n                    }\r\n                }),\r\n                tap(() => {\r\n                    if (this.editorState === EditorState.CLEAN) {\r\n                        this.commitState = CommitState.CLEAN;\r\n                    }\r\n                    // We just assume that after the commit a build happens if the repo is buildable.\r\n                    if (this.buildable) {\r\n                        // Note: this is not 100% clean, but not setting it here would complicate the state model.\r\n                        this.isBuilding = true;\r\n                    }\r\n                }),\r\n            )\r\n            .subscribe({\r\n                error: (error: HttpErrorResponse) => {\r\n                    this.commitState = CommitState.UNCOMMITTED_CHANGES;\r\n                    if (error.message === ConnectionError.message) {\r\n                        this.onError.emit('submitFailed' + error.message);\r\n                    } else {\r\n                        this.onError.emit('submitFailed');\r\n                    }\r\n\r\n                    if (error.error.detail) {\r\n                        const detailMessage = error.error.detail;\r\n                        if (detailMessage.includes('submitBeforeStartDate')) {\r\n                            this.onError.emit('submitBeforeStartDate');\r\n                        } else if (detailMessage.includes('submitAfterDueDate')) {\r\n                            this.onError.emit('submitAfterDueDate');\r\n                        } else if (detailMessage.includes('submitAfterReachingSubmissionLimit')) {\r\n                            this.onError.emit('submitAfterReachingSubmissionLimit');\r\n                        }\r\n                    }\r\n                },\r\n            });\r\n    }\r\n\r\n    resetRepository() {\r\n        const modal = this.modalService.open(CodeEditorResolveConflictModalComponent, { keyboard: true, size: 'lg' });\r\n        modal.componentInstance.shouldReset.subscribe(() => {\r\n            this.repositoryService.resetRepository().subscribe({\r\n                next: () => {\r\n                    this.conflictService.notifyConflictState(GitConflictState.OK);\r\n                    this.executeRefresh();\r\n                },\r\n                error: () => {\r\n                    this.onError.emit('resetFailed');\r\n                },\r\n            });\r\n        });\r\n    }\r\n}\r\n", "@if (!!participation()?.exercise) {\r\n    <jhi-request-feedback-button class=\"me-3\" [exercise]=\"participation()!.exercise!\" />\r\n}\r\n@if (isInCourseManagement) {\r\n    <a class=\"btn btn-secondary navbar-btn me-3 open-repository-button\" [routerLink]=\"repositoryLink\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n        <fa-icon [icon]=\"faExternalLink\" />\r\n        <span jhiTranslate=\"artemisApp.exerciseAssessmentDashboard.programmingExercise.goToRepo\"></span>\r\n    </a>\r\n}\r\n@if (commitState === CommitState.CONFLICT) {\r\n    <div>\r\n        <button\r\n            id=\"resolve_conflict_button\"\r\n            type=\"button\"\r\n            class=\"btn btn-danger navbar-btn me-3\"\r\n            [jhiFeatureToggle]=\"FeatureToggle.ProgrammingExercises\"\r\n            [overwriteDisabled]=\"disableActions\"\r\n            (click)=\"resetRepository()\"\r\n            [ngbTooltip]=\"'artemisApp.editor.conflict.resetRepository' | artemisTranslate\"\r\n        >\r\n            @if (isResolvingConflict) {\r\n                <span>\r\n                    <fa-icon [icon]=\"faCircleNotch\" animation=\"spin\" />\r\n                    <span jhiTranslate=\"artemisApp.editor.conflict.resolveConflict\"></span>\r\n                </span>\r\n            } @else {\r\n                <fa-icon [icon]=\"faTimes\" />\r\n                <span jhiTranslate=\"artemisApp.editor.conflict.resolveConflict\"></span>\r\n            }\r\n        </button>\r\n    </div>\r\n} @else {\r\n    <button\r\n        id=\"refresh_button\"\r\n        type=\"button\"\r\n        class=\"btn btn-primary navbar-btn me-3\"\r\n        [jhiFeatureToggle]=\"FeatureToggle.ProgrammingExercises\"\r\n        [overwriteDisabled]=\"disableActions || editorState === EditorState.REFRESHING || editorState === EditorState.SAVING || commitState === CommitState.COMMITTING\"\r\n        (click)=\"onRefresh()\"\r\n        [ngbTooltip]=\"'artemisApp.editor.refresh.refreshFilesDescription' | artemisTranslate\"\r\n    >\r\n        @if (editorState === EditorState.REFRESHING) {\r\n            <span>\r\n                <fa-icon [icon]=\"faCircleNotch\" animation=\"spin\" />\r\n                <span jhiTranslate=\"artemisApp.editor.refreshing\"></span>\r\n            </span>\r\n        } @else {\r\n            <fa-icon [icon]=\"faSync\" />\r\n            <span jhiTranslate=\"artemisApp.editor.refresh.performRefresh\"></span>\r\n        }\r\n    </button>\r\n    <button\r\n        id=\"submit_button\"\r\n        type=\"button\"\r\n        class=\"guided-tour-submit-button btn btn-success navbar-btn\"\r\n        [jhiFeatureToggle]=\"FeatureToggle.ProgrammingExercises\"\r\n        [overwriteDisabled]=\"\r\n            disableActions ||\r\n            editorState === EditorState.REFRESHING ||\r\n            editorState === EditorState.SAVING ||\r\n            (commitState !== CommitState.UNCOMMITTED_CHANGES && commitState !== CommitState.CLEAN)\r\n        \"\r\n        (click)=\"commit()\"\r\n        [ngbTooltip]=\"'artemisApp.editor.submitDescription' | artemisTranslate\"\r\n    >\r\n        <span>\r\n            <fa-icon [icon]=\"farPlayCircle\" />\r\n            <span jhiTranslate=\"artemisApp.editor.submit\"></span>\r\n        </span>\r\n    </button>\r\n}\r\n", "import { ParticipationWebsocketService } from 'app/overview/participation-websocket.service';\r\nimport { AfterViewInit, Component, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges, inject } from '@angular/core';\r\nimport { Observable, Subscription, of } from 'rxjs';\r\nimport { catchError, filter, map, switchMap, tap } from 'rxjs/operators';\r\nimport { BuildLogEntry, BuildLogEntryArray } from 'app/entities/programming/build-log.model';\r\nimport { Participation, getExercise } from 'app/entities/participation/participation.model';\r\nimport { CodeEditorSubmissionService } from 'app/exercises/programming/shared/code-editor/service/code-editor-submission.service';\r\nimport { CodeEditorBuildLogService } from 'app/exercises/programming/shared/code-editor/service/code-editor-repository.service';\r\nimport { Feedback } from 'app/entities/feedback.model';\r\nimport { ResultService } from 'app/exercises/shared/result/result.service';\r\nimport { Result } from 'app/entities/result.model';\r\nimport { Interactable } from '@interactjs/core/Interactable';\r\nimport interact from 'interactjs';\r\nimport { ProgrammingSubmission } from 'app/entities/programming/programming-submission.model';\r\nimport { findLatestResult } from 'app/shared/util/utils';\r\nimport { StaticCodeAnalysisIssue } from 'app/entities/programming/static-code-analysis-issue.model';\r\nimport { ProgrammingExercise } from 'app/entities/programming/programming-exercise.model';\r\nimport { faChevronDown, faCircleNotch, faTerminal } from '@fortawesome/free-solid-svg-icons';\r\nimport { hasParticipationChanged } from 'app/exercises/shared/participation/participation.utils';\r\nimport { AssessmentType } from 'app/entities/assessment-type.model';\r\nimport { Annotation } from '../monaco/code-editor-monaco.component';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-code-editor-build-output',\r\n    templateUrl: './code-editor-build-output.component.html',\r\n    styleUrls: ['./code-editor-build-output.scss'],\r\n    imports: [FaIconComponent, TranslateDirective, ArtemisDatePipe],\r\n})\r\nexport class CodeEditorBuildOutputComponent implements AfterViewInit, OnInit, OnChanges, OnDestroy {\r\n    private buildLogService = inject(CodeEditorBuildLogService);\r\n    private resultService = inject(ResultService);\r\n    private participationWebsocketService = inject(ParticipationWebsocketService);\r\n    private submissionService = inject(CodeEditorSubmissionService);\r\n\r\n    @Input()\r\n    participation: Participation;\r\n\r\n    @Output()\r\n    onAnnotations = new EventEmitter<Array<Annotation>>();\r\n    @Output()\r\n    onToggleCollapse = new EventEmitter<{ event: any; horizontal: boolean; interactable: Interactable; resizableMinWidth?: number; resizableMinHeight: number }>();\r\n    @Output()\r\n    onError = new EventEmitter<string>();\r\n\r\n    isBuilding: boolean;\r\n    rawBuildLogs = new BuildLogEntryArray();\r\n    result?: Result;\r\n\r\n    /** Resizable constants **/\r\n    resizableMinHeight = 150;\r\n    interactResizable: Interactable;\r\n\r\n    private resultSubscription: Subscription;\r\n    private submissionSubscription: Subscription;\r\n\r\n    // Icons\r\n    faChevronDown = faChevronDown;\r\n    faCircleNotch = faCircleNotch;\r\n    faTerminal = faTerminal;\r\n\r\n    ngOnInit(): void {\r\n        this.setupSubmissionWebsocket();\r\n    }\r\n\r\n    /**\r\n     * @function ngAfterViewInit\r\n     * @desc After the view was initialized, we create an interact.js resizable object,\r\n     *       designate the edges which can be used to resize the target element and set min and max values.\r\n     *       The 'resizemove' callback function processes the event values and sets new width and height values for the element.\r\n     */\r\n    ngAfterViewInit(): void {\r\n        this.resizableMinHeight = window.screen.height / 6;\r\n        this.interactResizable = interact('.resizable-buildoutput');\r\n    }\r\n\r\n    /**\r\n     * @function ngOnChanges\r\n     * @desc We need to update the participation results under certain conditions:\r\n     *       - Participation changed => reset websocket connection and load initial result\r\n     * @param {SimpleChanges} changes\r\n     *\r\n     */\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        const participationChange = hasParticipationChanged(changes);\r\n        if (participationChange) {\r\n            this.setupResultWebsocket();\r\n        }\r\n        // If the participation changes and it has results, fetch the result details to decide if the build log should be shown\r\n        if (participationChange && this.participation?.results?.length) {\r\n            const latestResult = findLatestResult(this.participation.results);\r\n            of(latestResult)\r\n                .pipe(\r\n                    switchMap((result) => (result && !result.feedbacks ? this.loadAndAttachResultDetails(this.participation, result) : of(result))),\r\n                    tap((result) => (this.result = result)),\r\n                    switchMap((result) => this.fetchBuildResults(result)),\r\n                    map((buildLogsFromServer) => BuildLogEntryArray.fromBuildLogs(buildLogsFromServer!)),\r\n                    tap((buildLogsFromServer: BuildLogEntryArray) => {\r\n                        this.rawBuildLogs = buildLogsFromServer;\r\n                    }),\r\n                    catchError(() => {\r\n                        this.rawBuildLogs = new BuildLogEntryArray();\r\n                        return of();\r\n                    }),\r\n                )\r\n                .subscribe(() => this.extractAnnotations());\r\n        } else {\r\n            if (!this.resultSubscription && this.participation) {\r\n                this.setupResultWebsocket();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Extracts annotations from\r\n     * - the build logs as compilation errors\r\n     * - the result feedbacks as static code analysis issues\r\n     * and emits them to the parent component\r\n     */\r\n    private extractAnnotations() {\r\n        const exercise: ProgrammingExercise | undefined = getExercise(this.participation!);\r\n        const buildLogErrors = this.rawBuildLogs.extractErrors(exercise?.programmingLanguage, exercise?.projectType);\r\n        const codeAnalysisIssues = (this.result!.feedbacks || [])\r\n            .filter(Feedback.isStaticCodeAnalysisFeedback)\r\n            .map<StaticCodeAnalysisIssue>((feedback) => JSON.parse(feedback.detailText!));\r\n        const codeAnalysisAnnotations = codeAnalysisIssues.map<Annotation>((issue) => ({\r\n            text: issue.message || '',\r\n            fileName: issue.filePath || '',\r\n            // TODO: Support endLine and endColumn\r\n            row: (issue.startLine || 1) - 1,\r\n            column: (issue.startColumn || 1) - 1,\r\n            type: 'warning', // TODO encode type in feedback\r\n            timestamp: this.result?.completionDate ? new Date(this.result.completionDate.toString()).valueOf() : 0,\r\n        }));\r\n        this.onAnnotations.emit([...buildLogErrors, ...codeAnalysisAnnotations]);\r\n    }\r\n\r\n    /**\r\n     * Subscribe to incoming submissions, translating to the state isBuilding = true (a pending submission without result exists) vs = false (no pending submission).\r\n     */\r\n    private setupSubmissionWebsocket() {\r\n        this.submissionSubscription = this.submissionService\r\n            .getBuildingState()\r\n            .pipe(tap((isBuilding: boolean) => (this.isBuilding = isBuilding)))\r\n            .subscribe();\r\n    }\r\n\r\n    /**\r\n     * Set up the websocket for retrieving build results.\r\n     * Online updates the build logs if the result is new, otherwise doesn't react.\r\n     */\r\n    private setupResultWebsocket() {\r\n        if (this.resultSubscription) {\r\n            this.resultSubscription.unsubscribe();\r\n        }\r\n        this.resultSubscription = this.participationWebsocketService\r\n            .subscribeForLatestResultOfParticipation(this.participation.id!, true)\r\n            .pipe(\r\n                // Ignore initial null/undefined result from service\r\n                filter((result) => !!result),\r\n                tap((result) => (this.result = result!)),\r\n                switchMap((result) => this.fetchBuildResults(result)),\r\n                tap((buildLogsFromServer: BuildLogEntry[]) => {\r\n                    this.rawBuildLogs = BuildLogEntryArray.fromBuildLogs(buildLogsFromServer);\r\n                }),\r\n                catchError(() => {\r\n                    this.onError.emit('failedToLoadBuildLogs');\r\n                    this.rawBuildLogs = new BuildLogEntryArray();\r\n                    return of(undefined);\r\n                }),\r\n            )\r\n            .subscribe(() => this.extractAnnotations());\r\n    }\r\n\r\n    /**\r\n     * @function loadAndAttachResultDetails\r\n     * @desc Fetches details for the result (if we received one) and attach them to the result.\r\n     * Mutates the input parameter result.\r\n     */\r\n    loadAndAttachResultDetails(participation: Participation, result: Result): Observable<Result> {\r\n        return this.resultService.getFeedbackDetailsForResult(participation.id!, result).pipe(\r\n            map((res) => res?.body),\r\n            map((feedbacks: Feedback[]) => {\r\n                result.feedbacks = feedbacks;\r\n                return result;\r\n            }),\r\n            catchError(() => of(result)),\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @function getBuildLogs\r\n     * @desc Gets the buildlogs for the current participation\r\n     */\r\n    getBuildLogs() {\r\n        return this.buildLogService.getBuildLogs();\r\n    }\r\n\r\n    /**\r\n     * Decides if the build log should be shown.\r\n     * Fetch the build logs if a result is available and no submission is available or the submission could not be build\r\n     * @param result\r\n     */\r\n    fetchBuildResults(result?: Result): Observable<BuildLogEntry[] | undefined> {\r\n        if (result && result.assessmentType !== AssessmentType.AUTOMATIC_ATHENA && (!result.submission || (result.submission as ProgrammingSubmission).buildFailed)) {\r\n            return this.getBuildLogs();\r\n        } else {\r\n            return of([]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @function toggleEditorCollapse\r\n     * @desc Calls the parent (editorComponent) toggleCollapse method\r\n     * @param event\r\n     */\r\n    toggleEditorCollapse(event: any) {\r\n        this.onToggleCollapse.emit({\r\n            event,\r\n            horizontal: false,\r\n            interactable: this.interactResizable,\r\n            resizableMinWidth: undefined,\r\n            resizableMinHeight: this.resizableMinHeight,\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.resultSubscription) {\r\n            this.resultSubscription.unsubscribe();\r\n        }\r\n        if (this.submissionSubscription) {\r\n            this.submissionSubscription.unsubscribe();\r\n        }\r\n    }\r\n}\r\n", "<div id=\"cardBuildOutput\" class=\"card border build-output\">\r\n    <div class=\"card-header d-flex bg-primary text-white\" (click)=\"toggleEditorCollapse($event)\">\r\n        <h3 class=\"card-title\">\r\n            <fa-icon [icon]=\"faTerminal\" />\r\n            <span jhiTranslate=\"artemisApp.editor.buildOutput\"></span>\r\n        </h3>\r\n        <fa-icon class=\"ms-auto clickable\" [icon]=\"faChevronDown\" />\r\n    </div>\r\n    @if (!isBuilding && !rawBuildLogs.length) {\r\n        <div class=\"card-body\">\r\n            <p class=\"text-center no-buildoutput\" jhiTranslate=\"artemisApp.editor.noBuildOutput\"></p>\r\n        </div>\r\n    }\r\n    @if (isBuilding) {\r\n        <div class=\"card-body\">\r\n            <p class=\"text-center is-building\"><fa-icon [icon]=\"faCircleNotch\" animation=\"spin\" /> <span jhiTranslate=\"artemisApp.editor.building\"></span></p>\r\n        </div>\r\n    }\r\n    @if (!isBuilding && rawBuildLogs.length) {\r\n        <div class=\"card-body build-output__content\">\r\n            <div class=\"buildoutput d-flex flex-column\">\r\n                @for (logEntry of rawBuildLogs; track logEntry) {\r\n                    <span class=\"build-output__entry\">\r\n                        <span class=\"build-output__entry-date\">{{ logEntry.time | artemisDate: 'short' : true }}</span>\r\n                        <span class=\"build-output__entry-text\">{{ logEntry.log }}</span>\r\n                    </span>\r\n                }\r\n            </div>\r\n        </div>\r\n    }\r\n</div>\r\n", "import { AfterViewInit, Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { faListAlt } from '@fortawesome/free-regular-svg-icons';\r\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\r\nimport { Interactable } from '@interactjs/core/Interactable';\r\nimport interact from 'interactjs';\r\nimport { NgStyle } from '@angular/common';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\n\r\n@Component({\r\n    selector: 'jhi-code-editor-instructions',\r\n    styleUrls: ['./code-editor-instructions.scss'],\r\n    templateUrl: './code-editor-instructions.component.html',\r\n    imports: [NgStyle, FaIconComponent, TranslateDirective],\r\n})\r\nexport class CodeEditorInstructionsComponent implements AfterViewInit {\r\n    @Output()\r\n    onToggleCollapse = new EventEmitter<{ event: any; horizontal: boolean; interactable: Interactable; resizableMinWidth?: number; resizableMinHeight?: number }>();\r\n\r\n    @Input()\r\n    isAssessmentMode = true;\r\n\r\n    /** Resizable constants **/\r\n    initialInstructionsWidth: number;\r\n    minInstructionsWidth: number;\r\n    interactResizable: Interactable;\r\n    collapsed = false;\r\n\r\n    // Icons\r\n    faChevronRight = faChevronRight;\r\n    faChevronLeft = faChevronLeft;\r\n    farListAlt = faListAlt;\r\n\r\n    /**\r\n     * After the view was initialized, we create an interact.js resizable object,\r\n     * designate the edges which can be used to resize the target element and set min and max values.\r\n     * The 'resizemove' callback function processes the event values and sets new width and height values for the element.\r\n     */\r\n    ngAfterViewInit(): void {\r\n        this.initialInstructionsWidth = window.screen.width - 300 / 2;\r\n        this.minInstructionsWidth = window.screen.width / 4 - 50;\r\n        this.interactResizable = interact('.resizable-instructions');\r\n    }\r\n\r\n    /**\r\n     * Calls the parent (editorComponent) toggleCollapse method\r\n     * @param event - any event\r\n     */\r\n    toggleEditorCollapse(event: any) {\r\n        this.collapsed = !this.collapsed;\r\n        this.onToggleCollapse.emit({ event, horizontal: true, interactable: this.interactResizable, resizableMinWidth: this.minInstructionsWidth });\r\n    }\r\n}\r\n", "<div\r\n    id=\"cardInstructions\"\r\n    class=\"instructions-wrapper card collapsable-card\"\r\n    [ngStyle]=\"collapsed ? (isAssessmentMode ? { height: '200px' } : { height: '250px' }) : { height: '100%' }\"\r\n>\r\n    <div class=\"card-header d-flex justify-content-left text-white bg-primary\" (click)=\"toggleEditorCollapse($event)\">\r\n        <h3 class=\"card-title\">\r\n            @if (!collapsed) {\r\n                <span>\r\n                    <fa-icon [icon]=\"farListAlt\" />\r\n                    @if (!isAssessmentMode) {\r\n                        <span class=\"ms-2\" jhiTranslate=\"artemisApp.exercise.problemStatement\"></span>\r\n                    }\r\n                    @if (isAssessmentMode) {\r\n                        <span class=\"ms-2\" jhiTranslate=\"artemisApp.exercise.instructions\"></span>\r\n                    }\r\n                </span>\r\n            }\r\n            @if (collapsed) {\r\n                <span class=\"collapsed-instructions-card\">\r\n                    <fa-icon class=\"top-icon\" [icon]=\"faChevronLeft\" />\r\n                    <fa-icon [icon]=\"farListAlt\" class=\"fa-rotate-90\" id=\"panel-symbol\" />\r\n                    @if (!isAssessmentMode) {\r\n                        <span class=\"header\" jhiTranslate=\"artemisApp.exercise.problemStatement\"></span>\r\n                    }\r\n                    @if (isAssessmentMode) {\r\n                        <span class=\"header\" jhiTranslate=\"artemisApp.exercise.instructions\"></span>\r\n                    }\r\n                    <fa-icon class=\"bottom-icon\" [icon]=\"faChevronLeft\" />\r\n                </span>\r\n            }\r\n        </h3>\r\n        @if (!collapsed) {\r\n            <fa-icon class=\"ms-auto clickable\" [icon]=\"faChevronRight\" />\r\n        }\r\n    </div>\r\n    <div style=\"display: contents\" [hidden]=\"collapsed\">\r\n        <ng-content />\r\n    </div>\r\n    <!-- Required for resizing; don't remove empty span -->\r\n    <div class=\"rg-left\"><span></span></div>\r\n</div>\r\n", "import { Component, ElementRef, EventEmitter, Input, Output, ViewChild, inject } from '@angular/core';\r\nimport { Feedback, FeedbackType, buildFeedbackTextForReview } from 'app/entities/feedback.model';\r\nimport { FeedbackSuggestionBadgeComponent } from 'app/exercises/shared/feedback/feedback-suggestion-badge/feedback-suggestion-badge.component';\r\nimport { ButtonSize } from 'app/shared/components/button.component';\r\nimport { cloneDeep } from 'lodash-es';\r\nimport { StructuredGradingCriterionService } from 'app/exercises/shared/structured-grading-criterion/structured-grading-criterion.service';\r\nimport { roundValueSpecifiedByCourseSettings } from 'app/shared/util/utils';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { faBan, faExclamationTriangle, faPencilAlt, faQuestionCircle, faSave, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Subject } from 'rxjs';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { GradingInstructionLinkIconComponent } from 'app/shared/grading-instruction-link-icon/grading-instruction-link-icon.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { DeleteButtonDirective } from 'app/shared/delete-dialog/delete-button.directive';\r\nimport { AssessmentCorrectionRoundBadgeComponent } from 'app/assessment/unreferenced-feedback-detail/assessment-correction-round-badge/assessment-correction-round-badge.component';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\nimport { FeedbackContentPipe } from 'app/shared/pipes/feedback-content.pipe';\r\nimport { QuotePipe } from 'app/shared/pipes/quote.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-code-editor-tutor-assessment-inline-feedback',\r\n    templateUrl: './code-editor-tutor-assessment-inline-feedback.component.html',\r\n    imports: [\r\n        FeedbackSuggestionBadgeComponent,\r\n        TranslateDirective,\r\n        FaIconComponent,\r\n        NgbTooltip,\r\n        GradingInstructionLinkIconComponent,\r\n        FormsModule,\r\n        DeleteButtonDirective,\r\n        AssessmentCorrectionRoundBadgeComponent,\r\n        ArtemisTranslatePipe,\r\n        FeedbackContentPipe,\r\n        QuotePipe,\r\n    ],\r\n})\r\nexport class CodeEditorTutorAssessmentInlineFeedbackComponent {\r\n    private structuredGradingCriterionService = inject(StructuredGradingCriterionService);\r\n    // Needed for the outer editor to access the DOM node of this component\r\n    public elementRef = inject(ElementRef);\r\n\r\n    @Input() get feedback(): Feedback {\r\n        return this._feedback;\r\n    }\r\n    set feedback(feedback: Feedback | undefined) {\r\n        this._feedback = feedback || new Feedback();\r\n        this.oldFeedback = cloneDeep(this.feedback);\r\n        this.viewOnly = !!feedback;\r\n    }\r\n    private _feedback: Feedback;\r\n\r\n    @Input() selectedFile: string;\r\n    @Input() codeLine: number;\r\n    @Input() readOnly: boolean;\r\n    @Input() highlightDifferences: boolean;\r\n    @Input() course?: Course;\r\n    @ViewChild('detailText') textareaRef: ElementRef;\r\n\r\n    @Output() onUpdateFeedback = new EventEmitter<Feedback>();\r\n    @Output() onCancelFeedback = new EventEmitter<number>();\r\n    @Output() onDeleteFeedback = new EventEmitter<Feedback>();\r\n    @Output() onEditFeedback = new EventEmitter<number>();\r\n\r\n    // Expose the function to the template\r\n    readonly roundScoreSpecifiedByCourseSettings = roundValueSpecifiedByCourseSettings;\r\n    protected readonly Feedback = Feedback;\r\n    readonly ButtonSize = ButtonSize;\r\n    readonly MANUAL = FeedbackType.MANUAL;\r\n\r\n    viewOnly: boolean;\r\n    oldFeedback: Feedback;\r\n    private dialogErrorSource = new Subject<string>();\r\n    dialogError$ = this.dialogErrorSource.asObservable();\r\n\r\n    // Icons\r\n    faSave = faSave;\r\n    faBan = faBan;\r\n    faQuestionCircle = faQuestionCircle;\r\n    faPencilAlt = faPencilAlt;\r\n    faTrashAlt = faTrashAlt;\r\n    faExclamationTriangle = faExclamationTriangle;\r\n\r\n    /**\r\n     * Updates the current feedback and sets props and emits the feedback to parent component\r\n     */\r\n    updateFeedback() {\r\n        this.feedback.type = this.MANUAL;\r\n        this.feedback.reference = `file:${this.selectedFile}_line:${this.codeLine}`;\r\n        if (Feedback.isFeedbackSuggestion(this.feedback)) {\r\n            Feedback.updateFeedbackTypeOnChange(this.feedback);\r\n        } else {\r\n            this.feedback.text = `File ${this.selectedFile} at line ${this.codeLine + 1}`;\r\n        }\r\n        this.viewOnly = true;\r\n        if (this.feedback.credits && this.feedback.credits > 0) {\r\n            this.feedback.positive = true;\r\n        }\r\n        this.onUpdateFeedback.emit(this.feedback);\r\n    }\r\n\r\n    /**\r\n     * When an inline feedback already exists, we set it back and display it the viewOnly mode.\r\n     * Otherwise the component is not displayed anymore in the parent component\r\n     */\r\n    cancelFeedback() {\r\n        this.feedback = this.oldFeedback;\r\n        this.viewOnly = this.feedback.type === this.MANUAL;\r\n        this.onCancelFeedback.emit(this.codeLine);\r\n    }\r\n\r\n    /**\r\n     * Deletes feedback after confirmation and emits to parent component\r\n     */\r\n    deleteFeedback() {\r\n        this.onDeleteFeedback.emit(this.feedback);\r\n        this.dialogErrorSource.next('');\r\n    }\r\n\r\n    /**\r\n     * Checks if component is in view mode and focuses feedback text area\r\n     * @param line Line of code which is emitted to the parent\r\n     */\r\n    editFeedback(line: number) {\r\n        this.viewOnly = false;\r\n        // Save the old feedback in case the user cancels later\r\n        this.oldFeedback = cloneDeep(this.feedback);\r\n        this.onEditFeedback.emit(line);\r\n        setTimeout(() => (this.textareaRef.nativeElement as HTMLTextAreaElement).focus());\r\n    }\r\n\r\n    /**\r\n     * Updates the feedback with data of Structured Grading Instructions (SGI)\r\n     * @param event Drop event with SGI data\r\n     */\r\n    updateFeedbackOnDrop(event: Event) {\r\n        this.structuredGradingCriterionService.updateFeedbackWithStructuredGradingInstructionEvent(this.feedback, event);\r\n        this.feedback.reference = `file:${this.selectedFile}_line:${this.codeLine}`;\r\n        this.feedback.text = `File ${this.selectedFile} at line ${this.codeLine}`;\r\n    }\r\n\r\n    /**\r\n     * Builds the feedback text. When the feedback has a link with grading instruction it merges the feedback of\r\n     * the grading instruction with the feedback text provided by the assessor.\r\n     *\r\n     * @param feedback The feedback for which the text visible to the user should be created.\r\n     * @returns The formatted string representing the feedback text ready to display.\r\n     */\r\n    public buildFeedbackTextForCodeEditor(feedback: Feedback): string {\r\n        return buildFeedbackTextForReview(feedback, false);\r\n    }\r\n}\r\n", "<div\r\n    id=\"code-editor-inline-feedback-{{ codeLine }}\"\r\n    class=\"alert p-0 mb-0 border rounded\"\r\n    [style.max-width.%]=\"95\"\r\n    [class.alert-success]=\"feedback.credits! > 0 && feedback.isSubsequent === undefined\"\r\n    [class.alert-danger]=\"feedback.credits! < 0 && feedback.isSubsequent === undefined\"\r\n    [class.alert-warning]=\"!feedback.credits && feedback.isSubsequent === undefined\"\r\n    [class.alert-secondary]=\"readOnly && feedback.isSubsequent\"\r\n>\r\n    @if (Feedback.isFeedbackSuggestion(feedback) && !readOnly) {\r\n        <jhi-feedback-suggestion-badge [feedback]=\"feedback\" />\r\n    }\r\n    @if (!viewOnly) {\r\n        <div class=\"m-2\" (drop)=\"updateFeedbackOnDrop($event)\" (dragover)=\"$event.preventDefault()\">\r\n            <div class=\"row align-items-start\">\r\n                <div class=\"form-group col-8 m-0\">\r\n                    <label class=\"d-inline\" jhiTranslate=\"artemisApp.assessment.detail.feedback\"></label>\r\n                    @if (feedback.gradingInstruction!) {\r\n                        <div class=\"d-inline\">\r\n                            <fa-icon [icon]=\"faQuestionCircle\" class=\"text-secondary\" [ngbTooltip]=\"'artemisApp.assessment.feedbackHint' | artemisTranslate\" />\r\n                            <span>{{ feedback.gradingInstruction!.feedback }}</span>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <div class=\"form-group col-3 m-0\">\r\n                    <label jhiTranslate=\"artemisApp.exercise.score\"></label>\r\n                </div>\r\n                @if (feedback.gradingInstruction!) {\r\n                    <div class=\"form-group col-1 m-0\">\r\n                        <jhi-grading-instruction-link-icon [feedback]=\"feedback\" />\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div class=\"row align-items-start\">\r\n                <div class=\"form-group col-8 p-2 m-0\">\r\n                    <textarea\r\n                        id=\"feedback-textarea\"\r\n                        class=\"form-control\"\r\n                        rows=\"5\"\r\n                        [(ngModel)]=\"feedback.detailText\"\r\n                        #detailText\r\n                        [readOnly]=\"viewOnly\"\r\n                        [placeholder]=\"\r\n                            feedback.gradingInstruction!\r\n                                ? ('artemisApp.assessment.additionalFeedbackCommentPlaceholder' | artemisTranslate)\r\n                                : ('artemisApp.assessment.feedbackCommentPlaceholder' | artemisTranslate)\r\n                        \"\r\n                    ></textarea>\r\n                </div>\r\n                <div class=\"form-group col-3 p-2 m-0\">\r\n                    <input\r\n                        id=\"feedback-points\"\r\n                        class=\"form-control px-1\"\r\n                        type=\"number\"\r\n                        step=\"0.5\"\r\n                        [(ngModel)]=\"feedback.credits\"\r\n                        [readOnly]=\"viewOnly || feedback.gradingInstruction\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <button type=\"button\" class=\"btn btn-secondary btn-sm\" (click)=\"cancelFeedback()\">\r\n                    <fa-icon [icon]=\"faBan\" />&nbsp;<span jhiTranslate=\"entity.action.cancel\"></span>\r\n                </button>\r\n                @if (feedback.type === MANUAL) {\r\n                    <button\r\n                        jhiDeleteButton\r\n                        [buttonSize]=\"ButtonSize.MEDIUM\"\r\n                        [translateValues]=\"{ text: this.feedback | feedbackContent | quoted: ' ' }\"\r\n                        deleteQuestion=\"artemisApp.feedback.delete.question\"\r\n                        type=\"submit\"\r\n                        (delete)=\"deleteFeedback()\"\r\n                        [dialogError]=\"dialogError$\"\r\n                        class=\"btn btn-danger btn-sm me-1\"\r\n                    >\r\n                        <fa-icon [icon]=\"faTrashAlt\" />\r\n                    </button>\r\n                }\r\n                <button id=\"feedback-save\" type=\"submit\" [disabled]=\"feedback.credits === undefined\" class=\"btn btn-primary btn-sm\" (click)=\"updateFeedback()\">\r\n                    <fa-icon [icon]=\"faSave\" />&nbsp;<span jhiTranslate=\"entity.action.save\"></span>\r\n                </button>\r\n            </div>\r\n            @if (highlightDifferences) {\r\n                <div>\r\n                    <br />\r\n                    <jhi-assessment-correction-round-badge [highlightDifferences]=\"highlightDifferences\" [feedback]=\"feedback\" />\r\n                </div>\r\n            }\r\n        </div>\r\n    } @else {\r\n        <div class=\"p-1\">\r\n            <div class=\"row flex-nowrap align-items-top m-1\">\r\n                <div class=\"col flex-grow-0 ps-0\">\r\n                    <h5 class=\"d-inline\">\r\n                        @if (!Feedback.isNonGradedFeedbackSuggestion(feedback)) {\r\n                            <span\r\n                                class=\"badge\"\r\n                                [class.bg-success]=\"feedback.credits! > 0 && feedback.isSubsequent === undefined\"\r\n                                [class.bg-danger]=\"feedback.credits! < 0 && feedback.isSubsequent === undefined\"\r\n                                [class.bg-warning]=\"feedback.credits === 0 && feedback.isSubsequent === undefined\"\r\n                                [class.bg-secondary]=\"readOnly && feedback.isSubsequent\"\r\n                                >{{ roundScoreSpecifiedByCourseSettings(feedback.credits, course) + 'P' }}</span\r\n                            >\r\n                        }\r\n                    </h5>\r\n                </div>\r\n                <div class=\"col-10 ps-0 flex-grow-1 flex-shrink-1\">\r\n                    @if (Feedback.isNonGradedFeedbackSuggestion(feedback)) {\r\n                        <h6 class=\"d-inline mb-1\" jhiTranslate=\"artemisApp.assessment.detail.feedback\"></h6>\r\n                        <p [innerHTML]=\"buildFeedbackTextForCodeEditor(feedback)\" class=\"mt-1 mb-0\"></p>\r\n                    } @else {\r\n                        <h6 class=\"d-inline mb-1\" jhiTranslate=\"artemisApp.assessment.detail.tutorComment\"></h6>\r\n                        <p [innerHTML]=\"buildFeedbackTextForCodeEditor(feedback)\" class=\"mt-1 mb-0\"></p>\r\n                    }\r\n                </div>\r\n                @if (!readOnly) {\r\n                    <div class=\"col d-flex flex-grow-0 justify-content-end align-items-start pe-0\">\r\n                        <button type=\"submit\" (click)=\"editFeedback(codeLine)\" class=\"btn btn-primary btn-sm\">\r\n                            <fa-icon [icon]=\"faPencilAlt\" />\r\n                            <span jhiTranslate=\"entity.action.edit\"></span>\r\n                        </button>\r\n                    </div>\r\n                }\r\n                @if (readOnly && feedback.isSubsequent) {\r\n                    <div class=\"col d-flex justify-content-end pe-0 pt-1 text-secondary\">\r\n                        <fa-icon class=\"float-end\" [icon]=\"faExclamationTriangle\" [ngbTooltip]=\"'artemisApp.assessment.subsequentFeedback' | artemisTranslate\" />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    }\r\n</div>\r\n", "import { Component, ElementRef, EventEmitter, Input, Output, inject } from '@angular/core';\r\nimport { Feedback, buildFeedbackTextForReview } from 'app/entities/feedback.model';\r\nimport { FeedbackSuggestionBadgeComponent } from 'app/exercises/shared/feedback/feedback-suggestion-badge/feedback-suggestion-badge.component';\r\nimport { roundValueSpecifiedByCourseSettings } from 'app/shared/util/utils';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { faCheck, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\n\r\n@Component({\r\n    selector: 'jhi-code-editor-tutor-assessment-inline-feedback-suggestion',\r\n    templateUrl: './code-editor-tutor-assessment-inline-feedback-suggestion.component.html',\r\n    styleUrls: ['./code-editor-tutor-assessment-inline-feedback-suggestion.component.scss'],\r\n    imports: [FeedbackSuggestionBadgeComponent, TranslateDirective, FaIconComponent],\r\n})\r\nexport class CodeEditorTutorAssessmentInlineFeedbackSuggestionComponent {\r\n    @Input() codeLine: number; // Needed for the outer editor to handle the DOM node of the component\r\n    @Input() feedback: Feedback;\r\n    @Input() course?: Course; // Needed for credit rounding settings\r\n\r\n    @Output() onAcceptSuggestion = new EventEmitter<Feedback>();\r\n    @Output() onDiscardSuggestion = new EventEmitter<Feedback>();\r\n\r\n    // Expose functions to the template\r\n    readonly roundScoreSpecifiedByCourseSettings = roundValueSpecifiedByCourseSettings;\r\n    readonly buildFeedbackTextForReview = buildFeedbackTextForReview;\r\n\r\n    // Icons\r\n    faCheck = faCheck;\r\n    faTrash = faTrash;\r\n\r\n    // Needed for the outer editor to access the DOM node of this component\r\n    public elementRef = inject(ElementRef);\r\n}\r\n", "<div class=\"inline-feedback-suggestion alert p-1 mb-0 border rounded\">\r\n    <jhi-feedback-suggestion-badge [feedback]=\"feedback\" />\r\n    <div class=\"container flex-container px-4\">\r\n        <div class=\"row left-section\">\r\n            <div class=\"col-auto ps-0\">\r\n                <h5 class=\"d-inline\">\r\n                    <span class=\"badge\" [class.bg-success]=\"feedback.credits! > 0\" [class.bg-danger]=\"feedback.credits! < 0\" [class.bg-warning]=\"feedback.credits === 0\">{{\r\n                        roundScoreSpecifiedByCourseSettings(feedback.credits, course) + 'P'\r\n                    }}</span>\r\n                </h5>\r\n            </div>\r\n            <div class=\"col ps-0 pt-1 suggested-content\">\r\n                <h6 class=\"d-inline\" jhiTranslate=\"artemisApp.assessment.detail.feedbackSuggestion\"></h6>\r\n                <p [innerHTML]=\"buildFeedbackTextForReview(feedback, false)\" class=\"mt-2\"></p>\r\n            </div>\r\n        </div>\r\n        <div class=\"row right-section ml-2\">\r\n            <button class=\"btn btn-success m-1 btn-sm\" (click)=\"onAcceptSuggestion.emit(feedback)\">\r\n                <fa-icon [icon]=\"faCheck\" />\r\n                <span jhiTranslate=\"artemisApp.assessment.detail.accept\"></span>\r\n            </button>\r\n            <button class=\"btn btn-danger m-1 btn-sm\" (click)=\"onDiscardSuggestion.emit(feedback)\">\r\n                <fa-icon [icon]=\"faTrash\" />\r\n                <span jhiTranslate=\"artemisApp.assessment.detail.discard\"></span>\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>\r\n", "import { Injectable } from '@angular/core';\r\n\r\nconst CHAR_CODE_TAB = 9;\r\nconst CHAR_CODE_LINE_FEED = 10;\r\nconst CHAR_CODE_CARRIAGE_RETURN = 13;\r\nconst CHAR_CODE_SPACE = 32;\r\nconst IGNORED_CHAR_CODES = [CHAR_CODE_TAB, CHAR_CODE_LINE_FEED, CHAR_CODE_CARRIAGE_RETURN];\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class FileTypeService {\r\n    /**\r\n     * Determines for a string whether it represents the content of a binary file.\r\n     * This is done by checking for characters that would not typically be found in plain text files, e.g. the 0-byte.\r\n     * @param content The content to check.\r\n     */\r\n    isBinaryContent(content: string): boolean {\r\n        for (let i = 0; i < content.length; i++) {\r\n            const charCode = content.charCodeAt(i);\r\n            // Check for control characters which are typically not found in text files.\r\n            if (charCode < CHAR_CODE_SPACE && !IGNORED_CHAR_CODES.includes(charCode)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n", "import {\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    OnChanges,\r\n    SimpleChanges,\r\n    ViewEncapsulation,\r\n    computed,\r\n    effect,\r\n    inject,\r\n    input,\r\n    output,\r\n    signal,\r\n    untracked,\r\n    viewChild,\r\n    viewChildren,\r\n} from '@angular/core';\r\nimport { RepositoryFileService } from 'app/exercises/shared/result/repository.service';\r\nimport { CodeEditorRepositoryFileService, ConnectionError } from 'app/exercises/programming/shared/code-editor/service/code-editor-repository.service';\r\nimport { CodeEditorFileService } from 'app/exercises/programming/shared/code-editor/service/code-editor-file.service';\r\nimport { LocalStorageService } from 'ngx-webstorage';\r\nimport { MonacoEditorComponent } from 'app/shared/monaco-editor/monaco-editor.component';\r\nimport { firstValueFrom, timeout } from 'rxjs';\r\nimport { FEEDBACK_SUGGESTION_ACCEPTED_IDENTIFIER, FEEDBACK_SUGGESTION_IDENTIFIER, Feedback } from 'app/entities/feedback.model';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { CodeEditorTutorAssessmentInlineFeedbackComponent } from 'app/exercises/programming/assess/code-editor-tutor-assessment-inline-feedback.component';\r\nimport {\r\n    CommitState,\r\n    CreateFileChange,\r\n    DeleteFileChange,\r\n    EditorState,\r\n    FileChange,\r\n    FileType,\r\n    RenameFileChange,\r\n} from 'app/exercises/programming/shared/code-editor/model/code-editor.model';\r\nimport { fromPairs, pickBy } from 'lodash-es';\r\nimport { CodeEditorTutorAssessmentInlineFeedbackSuggestionComponent } from 'app/exercises/programming/assess/code-editor-tutor-assessment-inline-feedback-suggestion.component';\r\nimport { MonacoEditorLineHighlight } from 'app/shared/monaco-editor/model/monaco-editor-line-highlight.model';\r\nimport { FileTypeService } from 'app/exercises/programming/shared/service/file-type.service';\r\nimport { EditorPosition } from 'app/shared/monaco-editor/model/actions/monaco-editor.util';\r\nimport { CodeEditorHeaderComponent } from 'app/exercises/programming/shared/code-editor/header/code-editor-header.component';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\n\r\ntype FileSession = { [fileName: string]: { code: string; cursor: EditorPosition; scrollTop: number; loadingError: boolean } };\r\ntype FeedbackWithLineAndReference = Feedback & { line: number; reference: string };\r\nexport type Annotation = { fileName: string; row: number; column: number; text: string; type: string; timestamp: number; hash?: string };\r\n@Component({\r\n    selector: 'jhi-code-editor-monaco',\r\n    templateUrl: './code-editor-monaco.component.html',\r\n    styleUrls: ['./code-editor-monaco.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    imports: [\r\n        MonacoEditorComponent,\r\n        CodeEditorHeaderComponent,\r\n        CodeEditorTutorAssessmentInlineFeedbackSuggestionComponent,\r\n        CodeEditorTutorAssessmentInlineFeedbackComponent,\r\n        TranslateDirective,\r\n    ],\r\n    providers: [RepositoryFileService],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CodeEditorMonacoComponent implements OnChanges {\r\n    static readonly CLASS_DIFF_LINE_HIGHLIGHT = 'monaco-diff-line-highlight';\r\n    static readonly CLASS_FEEDBACK_HOVER_BUTTON = 'monaco-add-feedback-button';\r\n    static readonly FILE_TIMEOUT = 10000;\r\n\r\n    protected readonly Feedback = Feedback;\r\n    protected readonly CommitState = CommitState;\r\n\r\n    private readonly repositoryFileService = inject(CodeEditorRepositoryFileService);\r\n    private readonly fileService = inject(CodeEditorFileService);\r\n    private readonly localStorageService = inject(LocalStorageService);\r\n    private readonly changeDetectorRef = inject(ChangeDetectorRef);\r\n    private readonly fileTypeService = inject(FileTypeService);\r\n\r\n    readonly editor = viewChild.required<MonacoEditorComponent>('editor');\r\n    readonly inlineFeedbackComponents = viewChildren(CodeEditorTutorAssessmentInlineFeedbackComponent);\r\n    readonly inlineFeedbackSuggestionComponents = viewChildren(CodeEditorTutorAssessmentInlineFeedbackSuggestionComponent);\r\n    readonly commitState = input.required<CommitState>();\r\n    readonly editorState = input.required<EditorState>();\r\n    readonly course = input<Course>();\r\n    readonly feedbacks = input<Feedback[]>([]);\r\n    readonly feedbackSuggestions = input<Feedback[]>([]);\r\n    readonly readOnlyManualFeedback = input<boolean>(false);\r\n    readonly highlightDifferences = input<boolean>(false);\r\n    readonly isTutorAssessment = input<boolean>(false);\r\n    readonly disableActions = input<boolean>(false);\r\n    readonly selectedFile = input<string>();\r\n    readonly sessionId = input.required<number | string>();\r\n    readonly buildAnnotations = input<Annotation[]>([]);\r\n\r\n    readonly onError = output<string>();\r\n    readonly onFileContentChange = output<{ file: string; fileContent: string }>();\r\n    readonly onUpdateFeedback = output<Feedback[]>();\r\n    readonly onFileLoad = output<string>();\r\n    readonly onAcceptSuggestion = output<Feedback>();\r\n    readonly onDiscardSuggestion = output<Feedback>();\r\n    readonly onHighlightLines = output<MonacoEditorLineHighlight[]>();\r\n\r\n    readonly loadingCount = signal<number>(0);\r\n    readonly newFeedbackLines = signal<number[]>([]);\r\n    readonly binaryFileSelected = signal<boolean>(false);\r\n    readonly fileSession = signal<FileSession>({});\r\n    readonly editorLocked = computed<boolean>(\r\n        () =>\r\n            this.disableActions() ||\r\n            this.isTutorAssessment() ||\r\n            this.commitState() === CommitState.CONFLICT ||\r\n            !this.selectedFile() ||\r\n            !!this.fileSession()[this.selectedFile()!]?.loadingError,\r\n    );\r\n\r\n    readonly feedbackInternal = signal<Feedback[]>([]);\r\n    readonly feedbackSuggestionsInternal = signal<Feedback[]>([]);\r\n\r\n    readonly feedbackForSelectedFile = computed<FeedbackWithLineAndReference[]>(() =>\r\n        this.filterFeedbackForSelectedFile(this.feedbackInternal()).map((f) => this.attachLineAndReferenceToFeedback(f)),\r\n    );\r\n    readonly feedbackSuggestionsForSelectedFile = computed<FeedbackWithLineAndReference[]>(() =>\r\n        this.filterFeedbackForSelectedFile(this.feedbackSuggestionsInternal()).map((f) => this.attachLineAndReferenceToFeedback(f)),\r\n    );\r\n\r\n    /**\r\n     * Attaches the line number & reference to a feedback item, or -1 if no line is available. This is used to disambiguate feedback items in the template, avoiding warnings.\r\n     * @param feedback The feedback item to attach the line to.\r\n     * @private\r\n     */\r\n    private attachLineAndReferenceToFeedback(feedback: Feedback): FeedbackWithLineAndReference {\r\n        return { ...feedback, line: Feedback.getReferenceLine(feedback) ?? -1, reference: feedback.reference ?? 'unreferenced' };\r\n    }\r\n\r\n    annotationsArray: Array<Annotation> = [];\r\n\r\n    constructor() {\r\n        effect(() => {\r\n            this.feedbackInternal.set(this.feedbacks());\r\n        });\r\n\r\n        effect(() => {\r\n            this.feedbackSuggestionsInternal.set(this.feedbackSuggestions());\r\n        });\r\n\r\n        effect(() => {\r\n            const annotations = this.buildAnnotations();\r\n            untracked(() => this.setBuildAnnotations(annotations));\r\n        });\r\n    }\r\n\r\n    async ngOnChanges(changes: SimpleChanges): Promise<void> {\r\n        const editorWasRefreshed = changes.editorState && changes.editorState.previousValue === EditorState.REFRESHING && this.editorState() === EditorState.CLEAN;\r\n        const editorWasReset = changes.commitState && changes.commitState.previousValue !== CommitState.UNDEFINED && this.commitState() === CommitState.UNDEFINED;\r\n        // Refreshing the editor resets any local files.\r\n        if (editorWasRefreshed || editorWasReset) {\r\n            this.fileSession.set({});\r\n            this.editor().reset();\r\n        }\r\n        if ((changes.selectedFile && this.selectedFile()) || editorWasRefreshed) {\r\n            const previousFileName: string | undefined = changes.selectedFile?.previousValue;\r\n            // we save the old scrollTop before switching to another file\r\n            if (previousFileName && this.fileSession()[previousFileName]) {\r\n                this.fileSession()[previousFileName].scrollTop = this.editor().getScrollTop();\r\n            }\r\n            await this.selectFileInEditor(this.selectedFile());\r\n            this.setBuildAnnotations(this.annotationsArray);\r\n            this.newFeedbackLines.set([]);\r\n            this.renderFeedbackWidgets();\r\n            if (this.isTutorAssessment() && !this.readOnlyManualFeedback()) {\r\n                this.setupAddFeedbackButton();\r\n            }\r\n            this.onFileLoad.emit(this.selectedFile()!);\r\n        }\r\n\r\n        if (changes.feedbacks) {\r\n            this.newFeedbackLines.set([]);\r\n            this.renderFeedbackWidgets();\r\n        }\r\n\r\n        this.editor().layout();\r\n    }\r\n\r\n    async selectFileInEditor(fileName: string | undefined): Promise<void> {\r\n        if (!fileName) {\r\n            // There is nothing to be done, as the editor will be hidden when there is no file.\r\n            return;\r\n        }\r\n        this.loadingCount.set(this.loadingCount() + 1);\r\n        if (!this.fileSession()[fileName] || this.fileSession()[fileName].loadingError) {\r\n            let fileContent = '';\r\n            let loadingError = false;\r\n            try {\r\n                fileContent = await firstValueFrom(this.repositoryFileService.getFile(fileName).pipe(timeout(CodeEditorMonacoComponent.FILE_TIMEOUT))).then(\r\n                    (fileObj) => fileObj.fileContent,\r\n                );\r\n            } catch (error) {\r\n                loadingError = true;\r\n                if (error.message === ConnectionError.message) {\r\n                    this.onError.emit('loadingFailed' + error.message);\r\n                } else {\r\n                    this.onError.emit('loadingFailed');\r\n                }\r\n            }\r\n            this.fileSession.set({\r\n                ...this.fileSession(),\r\n                [fileName]: { code: fileContent, loadingError: loadingError, scrollTop: 0, cursor: { column: 0, lineNumber: 0 } },\r\n            });\r\n        }\r\n\r\n        const code = this.fileSession()[fileName].code;\r\n        this.binaryFileSelected.set(this.fileTypeService.isBinaryContent(code));\r\n\r\n        // Since fetching the file may take some time, we need to check if the file is still selected.\r\n        if (!this.binaryFileSelected() && this.selectedFile() === fileName) {\r\n            this.switchToSelectedFile(fileName, code);\r\n        }\r\n        this.loadingCount.set(this.loadingCount() - 1);\r\n    }\r\n\r\n    switchToSelectedFile(selectedFileName: string, code: string): void {\r\n        this.editor().changeModel(selectedFileName, code);\r\n        this.editor().setPosition(this.fileSession()[selectedFileName].cursor);\r\n        this.editor().setScrollTop(this.fileSession()[this.selectedFile()!].scrollTop ?? 0);\r\n    }\r\n\r\n    onFileTextChanged(text: string): void {\r\n        if (this.selectedFile() && this.fileSession()[this.selectedFile()!]) {\r\n            const previousText = this.fileSession()[this.selectedFile()!].code;\r\n            const previousScrollTop = this.fileSession()[this.selectedFile()!].scrollTop;\r\n            if (previousText !== text) {\r\n                this.fileSession.set({\r\n                    ...this.fileSession(),\r\n                    [this.selectedFile()!]: { code: text, loadingError: false, scrollTop: previousScrollTop, cursor: this.editor().getPosition() },\r\n                });\r\n                this.onFileContentChange.emit({ file: this.selectedFile()!, fileContent: text });\r\n            }\r\n        }\r\n    }\r\n\r\n    getText(): string {\r\n        return this.editor().getText();\r\n    }\r\n\r\n    getNumberOfLines(): number {\r\n        return this.editor().getNumberOfLines();\r\n    }\r\n\r\n    highlightLines(startLine: number, endLine: number) {\r\n        this.editor().highlightLines(startLine, endLine, CodeEditorMonacoComponent.CLASS_DIFF_LINE_HIGHLIGHT);\r\n        this.onHighlightLines.emit(this.getLineHighlights());\r\n    }\r\n\r\n    setupAddFeedbackButton(): void {\r\n        this.editor().setLineDecorationsHoverButton(CodeEditorMonacoComponent.CLASS_FEEDBACK_HOVER_BUTTON, (lineNumber) => this.addNewFeedback(lineNumber));\r\n    }\r\n\r\n    /**\r\n     * Adds a new feedback widget to the specified line and renders it. The text field will be focused automatically.\r\n     * @param lineNumber The line (as shown in the editor) to render the widget in.\r\n     */\r\n    addNewFeedback(lineNumber: number): void {\r\n        // TODO for a follow-up: in the future, there might be multiple feedback items on the same line.\r\n        const lineNumberZeroBased = lineNumber - 1;\r\n        if (!this.getInlineFeedbackNode(lineNumberZeroBased)) {\r\n            this.newFeedbackLines.set([...this.newFeedbackLines(), lineNumberZeroBased]);\r\n            this.renderFeedbackWidgets(lineNumberZeroBased);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Updates an existing feedback item and renders it. If necessary, an unsaved feedback item will be converted into an actual feedback item.\r\n     * @param feedback The feedback item to save.\r\n     */\r\n    updateFeedback(feedback: Feedback) {\r\n        const line = Feedback.getReferenceLine(feedback);\r\n        const existingFeedbackIndex = this.feedbackInternal().findIndex((f) => f.reference === feedback.reference);\r\n        if (existingFeedbackIndex !== -1) {\r\n            // Existing feedback -> update only\r\n            const feedbackArray = [...this.feedbackInternal()];\r\n            feedbackArray[existingFeedbackIndex] = feedback;\r\n            this.feedbackInternal.set(feedbackArray);\r\n        } else {\r\n            // New feedback -> save as actual feedback.\r\n            this.feedbackInternal.set([...this.feedbackInternal(), feedback]);\r\n            this.newFeedbackLines.set(this.newFeedbackLines().filter((l) => l !== line));\r\n        }\r\n        this.renderFeedbackWidgets();\r\n        this.onUpdateFeedback.emit(this.feedbackInternal());\r\n    }\r\n\r\n    /**\r\n     * Cancels the edit of a feedback item, removing the widget if necessary.\r\n     * @param line The line the feedback item refers to.\r\n     */\r\n    cancelFeedback(line: number) {\r\n        // We only have to remove new feedback.\r\n        if (this.newFeedbackLines().includes(line)) {\r\n            this.newFeedbackLines.set(this.newFeedbackLines().filter((l) => l !== line));\r\n            this.renderFeedbackWidgets();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes an existing feedback item and renders the updated state.\r\n     * @param feedback The feedback to remove.\r\n     */\r\n    deleteFeedback(feedback: Feedback) {\r\n        this.feedbackInternal.set(this.feedbackInternal().filter((f) => !Feedback.areIdentical(f, feedback)));\r\n        this.onUpdateFeedback.emit(this.feedbackInternal());\r\n        this.renderFeedbackWidgets();\r\n    }\r\n\r\n    /**\r\n     * Accepts a feedback suggestion by storing a feedback suggestion as actual feedback.\r\n     * @param feedback The feedback item of the feedback suggestion.\r\n     */\r\n    acceptSuggestion(feedback: Feedback): void {\r\n        this.feedbackSuggestionsInternal.set(this.feedbackSuggestionsInternal().filter((f) => f !== feedback));\r\n        feedback.text = (feedback.text ?? FEEDBACK_SUGGESTION_IDENTIFIER).replace(FEEDBACK_SUGGESTION_IDENTIFIER, FEEDBACK_SUGGESTION_ACCEPTED_IDENTIFIER);\r\n        this.updateFeedback(feedback);\r\n        this.onAcceptSuggestion.emit(feedback);\r\n    }\r\n\r\n    /**\r\n     * Discards a feedback suggestion and removes its widget.\r\n     * @param feedback The feedback item of the feedback suggestion.\r\n     */\r\n    discardSuggestion(feedback: Feedback): void {\r\n        this.feedbackSuggestionsInternal.set(this.feedbackSuggestionsInternal().filter((f) => f !== feedback));\r\n        this.renderFeedbackWidgets();\r\n        this.onDiscardSuggestion.emit(feedback);\r\n    }\r\n\r\n    /**\r\n     * Renders the current state of feedback in the editor.\r\n     * @param lineOfWidgetToFocus The line number of the widget whose text area should be focused.\r\n     * @protected\r\n     */\r\n    protected renderFeedbackWidgets(lineOfWidgetToFocus?: number) {\r\n        // Since the feedback widgets rely on the DOM nodes of each feedback item, Angular needs to re-render each node, hence the timeout.\r\n        this.changeDetectorRef.detectChanges();\r\n        setTimeout(() => {\r\n            this.editor().disposeWidgets();\r\n            for (const feedback of this.filterFeedbackForSelectedFile([...this.feedbackInternal(), ...this.feedbackSuggestionsInternal()])) {\r\n                this.addLineWidgetWithFeedback(feedback);\r\n            }\r\n\r\n            // New, unsaved feedback has no associated object yet.\r\n            for (const line of this.newFeedbackLines()) {\r\n                const feedbackNode = this.getInlineFeedbackNodeOrElseThrow(line);\r\n                this.editor().addLineWidget(line + 1, 'feedback-new-' + line, feedbackNode);\r\n            }\r\n\r\n            // Focus the text area of the widget on the specified line if available.\r\n            if (lineOfWidgetToFocus !== undefined) {\r\n                this.getInlineFeedbackNode(lineOfWidgetToFocus)?.querySelector<HTMLTextAreaElement>('#feedback-textarea')?.focus();\r\n            }\r\n        }, 0);\r\n    }\r\n\r\n    /**\r\n     * Retrieves the feedback node currently rendered at the specified line and throws an error if it is not available.\r\n     * @param line The line (0-based) for which to retrieve the feedback node.\r\n     */\r\n    getInlineFeedbackNodeOrElseThrow(line: number): HTMLElement {\r\n        const element = this.getInlineFeedbackNode(line);\r\n        if (!element) {\r\n            throw new Error('No feedback node found at line ' + line);\r\n        }\r\n        return element;\r\n    }\r\n\r\n    /**\r\n     * Retrieves the feedback node currently rendered at the specified line, or undefined if it is not available.\r\n     * @param line The line (0-based) for which to retrieve the feedback node.\r\n     */\r\n    getInlineFeedbackNode(line: number): HTMLElement | undefined {\r\n        return [...this.inlineFeedbackComponents(), ...this.inlineFeedbackSuggestionComponents()].find((comp) => comp.codeLine === line)?.elementRef?.nativeElement;\r\n    }\r\n\r\n    private addLineWidgetWithFeedback(feedback: Feedback): void {\r\n        const line = Feedback.getReferenceLine(feedback);\r\n        if (line === undefined) {\r\n            throw new Error('No line found for feedback ' + feedback.id);\r\n        }\r\n        // TODO: In the future, there may be more than one feedback node per line. The ID should be unique.\r\n        const feedbackNode = this.getInlineFeedbackNodeOrElseThrow(line);\r\n        // Feedback is stored with 0-based lines, but the lines of the Monaco editor used in Artemis are 1-based. We add 1 to correct this\r\n        const oneBasedLine = line + 1;\r\n        this.editor().addLineWidget(oneBasedLine, 'feedback-' + feedback.id + '-line-' + oneBasedLine, feedbackNode);\r\n    }\r\n\r\n    /**\r\n     * Returns the feedbacks that refer to the currently selected file, or an empty array if no file is selected.\r\n     * @param feedbacks The feedbacks to filter.\r\n     */\r\n    filterFeedbackForSelectedFile(feedbacks: Feedback[]): Feedback[] {\r\n        if (!this.selectedFile()) {\r\n            return [];\r\n        }\r\n        return feedbacks.filter((feedback) => feedback.reference && Feedback.getReferenceFilePath(feedback) === this.selectedFile());\r\n    }\r\n\r\n    /**\r\n     * Updates the state of the fileSession based on a change made to the files themselves (not the content).\r\n     * - If a file was renamed, references to it are updated to use its new name.\r\n     * - If a file was deleted, references to it are removed.\r\n     * - If a file was created, a new reference is created.\r\n     * Afterwards, the build annotations are updated to reflect this new change.\r\n     * @param fileChange The change made: renaming, deleting, or creating a file.\r\n     */\r\n    async onFileChange(fileChange: FileChange) {\r\n        if (fileChange instanceof RenameFileChange) {\r\n            this.fileSession.set(this.fileService.updateFileReferences(this.fileSession(), fileChange));\r\n            for (const annotation of this.annotationsArray) {\r\n                if (annotation.fileName === fileChange.oldFileName) {\r\n                    annotation.fileName = fileChange.newFileName;\r\n                }\r\n            }\r\n            this.storeAnnotations([fileChange.newFileName]);\r\n        } else if (fileChange instanceof DeleteFileChange) {\r\n            this.fileSession.set(this.fileService.updateFileReferences(this.fileSession(), fileChange));\r\n            this.storeAnnotations([fileChange.fileName]);\r\n        } else if (fileChange instanceof CreateFileChange && fileChange.fileType === FileType.FILE) {\r\n            this.fileSession.set({ ...this.fileSession(), [fileChange.fileName]: { code: '', cursor: { lineNumber: 0, column: 0 }, scrollTop: 0, loadingError: false } });\r\n        }\r\n        this.setBuildAnnotations(this.annotationsArray);\r\n    }\r\n\r\n    /**\r\n     * Saves the updated annotations to local storage\r\n     * @param savedFiles\r\n     */\r\n    storeAnnotations(savedFiles: string[]) {\r\n        const toUpdate = fromPairs(this.annotationsArray.filter((a) => savedFiles.includes(a.fileName)).map((a) => [a.hash, a]));\r\n        const toKeep = pickBy(this.loadAnnotations(), (a) => !savedFiles.includes(a.fileName));\r\n\r\n        this.localStorageService.store(\r\n            'annotations-' + this.sessionId,\r\n            JSON.stringify({\r\n                ...toKeep,\r\n                ...toUpdate,\r\n            }),\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Loads annotations from local storage\r\n     */\r\n    loadAnnotations() {\r\n        return JSON.parse(this.localStorageService.retrieve('annotations-' + this.sessionId) || '{}');\r\n    }\r\n\r\n    setBuildAnnotations(buildAnnotations: Annotation[]): void {\r\n        if (buildAnnotations.length > 0 && this.selectedFile()) {\r\n            const sessionAnnotations = this.loadAnnotations();\r\n            this.annotationsArray = buildAnnotations.map((a) => {\r\n                const hash = a.fileName + a.row + a.column + a.text;\r\n                if (sessionAnnotations[hash] == undefined || sessionAnnotations[hash].timestamp < a.timestamp) {\r\n                    return { ...a, hash };\r\n                } else {\r\n                    return sessionAnnotations[hash];\r\n                }\r\n            });\r\n        } else {\r\n            this.annotationsArray = buildAnnotations;\r\n        }\r\n        this.editor().setAnnotations(\r\n            buildAnnotations.filter((buildAnnotation) => buildAnnotation.fileName === this.selectedFile()),\r\n            this.commitState() === CommitState.UNCOMMITTED_CHANGES,\r\n        );\r\n    }\r\n\r\n    getLineHighlights(): MonacoEditorLineHighlight[] {\r\n        return this.editor().getLineHighlights();\r\n    }\r\n}\r\n", "<div class=\"card\">\r\n    <jhi-code-editor-header [showTabSizeSelector]=\"false\" [fileName]=\"selectedFile()\" [isLoading]=\"loadingCount() > 0\" />\r\n    <div class=\"card-body card-body-monaco\">\r\n        @if (selectedFile()) {\r\n            @for (feedback of feedbackForSelectedFile(); track feedback.id + feedback.reference) {\r\n                <!-- actual, stored feedback -->\r\n                <jhi-code-editor-tutor-assessment-inline-feedback\r\n                    class=\"monaco-hidden-element\"\r\n                    [selectedFile]=\"selectedFile()!\"\r\n                    [codeLine]=\"feedback.line\"\r\n                    [feedback]=\"feedback\"\r\n                    [readOnly]=\"readOnlyManualFeedback()\"\r\n                    [highlightDifferences]=\"highlightDifferences()\"\r\n                    [course]=\"course()\"\r\n                    (onUpdateFeedback)=\"updateFeedback($event)\"\r\n                    (onDeleteFeedback)=\"deleteFeedback($event)\"\r\n                    (onCancelFeedback)=\"cancelFeedback($event)\"\r\n                />\r\n            }\r\n            <!-- new, unsaved feedback -->\r\n            @for (line of newFeedbackLines(); track line) {\r\n                <jhi-code-editor-tutor-assessment-inline-feedback\r\n                    class=\"monaco-hidden-element\"\r\n                    [selectedFile]=\"selectedFile()!\"\r\n                    [codeLine]=\"line\"\r\n                    [feedback]=\"undefined\"\r\n                    [highlightDifferences]=\"highlightDifferences()\"\r\n                    [readOnly]=\"readOnlyManualFeedback()\"\r\n                    [course]=\"course()\"\r\n                    (onUpdateFeedback)=\"updateFeedback($event)\"\r\n                    (onDeleteFeedback)=\"deleteFeedback($event)\"\r\n                    (onCancelFeedback)=\"cancelFeedback($event)\"\r\n                />\r\n            }\r\n            <!-- feedback suggestions -->\r\n            @for (suggestion of feedbackSuggestionsForSelectedFile(); track suggestion.id + suggestion.reference) {\r\n                <jhi-code-editor-tutor-assessment-inline-feedback-suggestion\r\n                    [codeLine]=\"suggestion.line\"\r\n                    [feedback]=\"suggestion\"\r\n                    [course]=\"course()\"\r\n                    (onAcceptSuggestion)=\"acceptSuggestion($event)\"\r\n                    (onDiscardSuggestion)=\"discardSuggestion($event)\"\r\n                />\r\n            }\r\n        }\r\n        <jhi-monaco-editor\r\n            (textChanged)=\"onFileTextChanged($event)\"\r\n            [hidden]=\"!selectedFile() || loadingCount() > 0 || binaryFileSelected()\"\r\n            [readOnly]=\"editorLocked()\"\r\n            [textChangedEmitDelay]=\"200\"\r\n            #editor\r\n            [id]=\"'monaco-editor-' + sessionId()\"\r\n        />\r\n\r\n        @if (!selectedFile() && !loadingCount()) {\r\n            <p id=\"no-file-selected\" class=\"text-center lead text-body-secondary pt-5\" jhiTranslate=\"artemisApp.editor.selectFile\"></p>\r\n        } @else if (binaryFileSelected()) {\r\n            <p id=\"binary-file-selected\" class=\"text-center lead pt-5\" jhiTranslate=\"artemisApp.editor.binaryFileSelected\"></p>\r\n        }\r\n    </div>\r\n</div>\r\n", "import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'keys' })\r\nexport class KeysPipe implements PipeTransform {\r\n    /**\r\n     * Returns an array containing the property names of the given object.\r\n     * @param obj The object to retrieve the keys from.\r\n     */\r\n    transform(obj: { [key: string]: any }): string[] {\r\n        return Object.keys(obj);\r\n    }\r\n}\r\n", "import { Component, EventEmitter, HostListener, Input, OnChanges, Output, SimpleChanges, ViewChild, inject } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { isEmpty as _isEmpty, fromPairs, toPairs, uniq } from 'lodash-es';\r\nimport { CodeEditorFileService } from 'app/exercises/programming/shared/code-editor/service/code-editor-file.service';\r\nimport { CodeEditorGridComponent } from 'app/exercises/programming/shared/code-editor/layout/code-editor-grid.component';\r\nimport {\r\n    CommitState,\r\n    CreateFileChange,\r\n    DeleteFileChange,\r\n    EditorState,\r\n    FileBadge,\r\n    FileBadgeType,\r\n    FileChange,\r\n    FileType,\r\n    RenameFileChange,\r\n} from 'app/exercises/programming/shared/code-editor/model/code-editor.model';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { CodeEditorFileBrowserComponent, InteractableEvent } from 'app/exercises/programming/shared/code-editor/file-browser/code-editor-file-browser.component';\r\nimport { CodeEditorActionsComponent } from 'app/exercises/programming/shared/code-editor/actions/code-editor-actions.component';\r\nimport { CodeEditorBuildOutputComponent } from 'app/exercises/programming/shared/code-editor/build-output/code-editor-build-output.component';\r\nimport { Participation } from 'app/entities/participation/participation.model';\r\nimport { CodeEditorInstructionsComponent } from 'app/exercises/programming/shared/code-editor/instructions/code-editor-instructions.component';\r\nimport { Feedback } from 'app/entities/feedback.model';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { ConnectionError } from 'app/exercises/programming/shared/code-editor/service/code-editor-repository.service';\r\nimport { Annotation, CodeEditorMonacoComponent } from 'app/exercises/programming/shared/code-editor/monaco/code-editor-monaco.component';\r\nimport { KeysPipe } from 'app/shared/pipes/keys.pipe';\r\nimport { ComponentCanDeactivate } from 'app/shared/guard/can-deactivate.model';\r\n\r\nexport enum CollapsableCodeEditorElement {\r\n    FileBrowser,\r\n    BuildOutput,\r\n    Instructions,\r\n}\r\n\r\n@Component({\r\n    selector: 'jhi-code-editor-container',\r\n    templateUrl: './code-editor-container.component.html',\r\n    styleUrls: ['./code-editor-container.component.scss'],\r\n    imports: [\r\n        CodeEditorGridComponent,\r\n        CodeEditorActionsComponent,\r\n        CodeEditorFileBrowserComponent,\r\n        CodeEditorMonacoComponent,\r\n        CodeEditorInstructionsComponent,\r\n        CodeEditorBuildOutputComponent,\r\n        KeysPipe,\r\n    ],\r\n})\r\nexport class CodeEditorContainerComponent implements OnChanges, ComponentCanDeactivate {\r\n    private translateService = inject(TranslateService);\r\n    private alertService = inject(AlertService);\r\n    private fileService = inject(CodeEditorFileService);\r\n\r\n    readonly CommitState = CommitState;\r\n    readonly EditorState = EditorState;\r\n    readonly CollapsableCodeEditorElement = CollapsableCodeEditorElement;\r\n    @ViewChild(CodeEditorGridComponent, { static: false }) grid: CodeEditorGridComponent;\r\n\r\n    @ViewChild(CodeEditorFileBrowserComponent, { static: false }) fileBrowser: CodeEditorFileBrowserComponent;\r\n    @ViewChild(CodeEditorActionsComponent, { static: false }) actions: CodeEditorActionsComponent;\r\n    @ViewChild(CodeEditorBuildOutputComponent, { static: false }) buildOutput: CodeEditorBuildOutputComponent;\r\n    @ViewChild(CodeEditorMonacoComponent, { static: false }) monacoEditor: CodeEditorMonacoComponent;\r\n    @ViewChild(CodeEditorInstructionsComponent, { static: false }) instructions: CodeEditorInstructionsComponent;\r\n\r\n    @Input()\r\n    editable = true;\r\n    @Input()\r\n    forRepositoryView = false;\r\n    @Input()\r\n    showInlineFeedback = true;\r\n    @Input()\r\n    buildable = true;\r\n    @Input()\r\n    showEditorInstructions = true;\r\n    @Input()\r\n    isTutorAssessment = false;\r\n    @Input()\r\n    highlightFileChanges = false;\r\n    @Input()\r\n    allowHiddenFiles = false;\r\n    @Input()\r\n    feedbackSuggestions: Feedback[] = [];\r\n    @Input()\r\n    readOnlyManualFeedback = false;\r\n    @Input()\r\n    highlightDifferences: boolean;\r\n    @Input()\r\n    disableAutoSave = false;\r\n\r\n    @Output()\r\n    onCommitStateChange = new EventEmitter<CommitState>();\r\n    @Output()\r\n    onFileChanged = new EventEmitter<void>();\r\n    @Output()\r\n    onUpdateFeedback = new EventEmitter<Feedback[]>();\r\n    @Output()\r\n    onFileLoad = new EventEmitter<string>();\r\n    @Output()\r\n    onAcceptSuggestion = new EventEmitter<Feedback>();\r\n    @Output()\r\n    onDiscardSuggestion = new EventEmitter<Feedback>();\r\n    @Input()\r\n    course?: Course;\r\n\r\n    /** Work in Progress: temporary properties needed to get first prototype working */\r\n\r\n    @Input()\r\n    participation: Participation;\r\n\r\n    /** END WIP */\r\n\r\n    // WARNING: Don't initialize variables in the declaration block. The method initializeProperties is responsible for this task.\r\n    selectedFile?: string;\r\n    unsavedFilesValue: { [fileName: string]: string }; // {[fileName]: fileContent}\r\n    fileBadges: { [fileName: string]: FileBadge[] };\r\n\r\n    /** Code Editor State Variables **/\r\n    editorState: EditorState;\r\n    commitState: CommitState;\r\n\r\n    errorFiles: string[] = [];\r\n    annotations: Array<Annotation> = [];\r\n\r\n    constructor() {\r\n        this.initializeProperties();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        // Update file badges when feedback suggestions change\r\n        if (changes.feedbackSuggestions) {\r\n            this.updateFileBadges();\r\n        }\r\n    }\r\n\r\n    get unsavedFiles() {\r\n        return this.unsavedFilesValue;\r\n    }\r\n\r\n    /**\r\n     * Setting unsaved files also updates the editorState / commitState.\r\n     * - unsaved files empty -> EditorState.CLEAN\r\n     * - unsaved files NOT empty -> EditorState.UNSAVED_CHANGES & CommitState.UNCOMMITTED_CHANGES\r\n     * - unsaved files empty AND editorState.SAVING -> CommitState.UNCOMMITTED_CHANGES\r\n     * @param unsavedFiles\r\n     */\r\n    set unsavedFiles(unsavedFiles: { [fileName: string]: string }) {\r\n        this.unsavedFilesValue = unsavedFiles;\r\n        if (_isEmpty(this.unsavedFiles) && this.editorState === EditorState.SAVING) {\r\n            this.editorState = EditorState.CLEAN;\r\n            if (this.commitState !== CommitState.COMMITTING) {\r\n                this.commitState = CommitState.UNCOMMITTED_CHANGES;\r\n            }\r\n        } else if (_isEmpty(this.unsavedFiles)) {\r\n            this.editorState = EditorState.CLEAN;\r\n        } else {\r\n            this.editorState = EditorState.UNSAVED_CHANGES;\r\n            this.commitState = CommitState.UNCOMMITTED_CHANGES;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update the file badges for the code editor (currently only feedback suggestions)\r\n     */\r\n    updateFileBadges() {\r\n        this.fileBadges = {};\r\n        // Create badges for feedback suggestions\r\n        // Get file paths from feedback suggestions:\r\n        const filePathsWithSuggestions = this.feedbackSuggestions\r\n            .map((feedback) => Feedback.getReferenceFilePath(feedback))\r\n            .filter((filePath) => filePath !== undefined) as string[];\r\n        for (const filePath of filePathsWithSuggestions) {\r\n            // Count the number of suggestions for this file\r\n            const suggestionsCount = this.feedbackSuggestions.filter((feedback) => Feedback.getReferenceFilePath(feedback) === filePath).length;\r\n            this.fileBadges[filePath] = [new FileBadge(FileBadgeType.FEEDBACK_SUGGESTION, suggestionsCount)];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Resets all variables of this class.\r\n     * When a new variable is added, it needs to be added to this method!\r\n     * Initializing in variable declaration is not allowed.\r\n     */\r\n    initializeProperties = () => {\r\n        this.selectedFile = undefined;\r\n        this.unsavedFiles = {};\r\n        this.fileBadges = {};\r\n        this.editorState = EditorState.CLEAN;\r\n        this.commitState = CommitState.UNDEFINED;\r\n    };\r\n\r\n    /**\r\n     * @function onFileChange\r\n     * @desc A file has changed (create, rename, delete), so we have uncommitted changes.\r\n     * Also, all references to a file need to be updated in case of rename,\r\n     * in case of delete make sure to also remove all sub entities (files in folder).\r\n     */\r\n    onFileChange<F extends FileChange>([, fileChange]: [string[], F]) {\r\n        this.commitState = CommitState.UNCOMMITTED_CHANGES;\r\n        if (fileChange instanceof CreateFileChange) {\r\n            // Select newly created file\r\n            if (fileChange.fileType === FileType.FILE) {\r\n                this.selectedFile = fileChange.fileName;\r\n            }\r\n        } else if (fileChange instanceof RenameFileChange || fileChange instanceof DeleteFileChange) {\r\n            this.unsavedFiles = this.fileService.updateFileReferences(this.unsavedFiles, fileChange);\r\n            this.selectedFile = this.fileService.updateFileReference(this.selectedFile!, fileChange);\r\n        }\r\n        // If unsavedFiles are deleted, this can mean that the editorState becomes clean\r\n        if (_isEmpty(this.unsavedFiles) && this.editorState === EditorState.UNSAVED_CHANGES) {\r\n            this.editorState = EditorState.CLEAN;\r\n        }\r\n        this.monacoEditor.onFileChange(fileChange);\r\n\r\n        this.onFileChanged.emit();\r\n    }\r\n\r\n    /**\r\n     * When files were saved, check which could be saved and set unsavedFiles to update the ui.\r\n     * Files that could not be saved will show an error in the header.\r\n     * @param files\r\n     */\r\n    onSavedFiles(files: { [fileName: string]: string | undefined }) {\r\n        const savedFiles = Object.entries(files)\r\n            .filter(([, error]: [string, string | undefined]) => !error)\r\n            .map(([fileName]) => fileName);\r\n        const errorFiles = Object.entries(files)\r\n            .filter(([, error]: [string, string | undefined]) => error)\r\n            .map(([fileName]) => fileName);\r\n\r\n        this.unsavedFiles = fromPairs(toPairs(this.unsavedFiles).filter(([fileName]) => !savedFiles.includes(fileName)));\r\n\r\n        if (errorFiles.length) {\r\n            this.onError('saveFailed');\r\n        }\r\n        this.monacoEditor.storeAnnotations(savedFiles);\r\n    }\r\n\r\n    /**\r\n     * On successful pull during a refresh operation, we remove all unsaved files.\r\n     */\r\n    onRefreshFiles() {\r\n        this.unsavedFiles = {};\r\n    }\r\n\r\n    /**\r\n     * When the content of a file changes, set it as unsaved.\r\n     */\r\n    onFileContentChange({ file, fileContent }: { file: string; fileContent: string }) {\r\n        this.unsavedFiles = { ...this.unsavedFiles, [file]: fileContent };\r\n        this.onFileChanged.emit();\r\n    }\r\n\r\n    fileLoad(selectedFile: string) {\r\n        this.onFileLoad.emit(selectedFile);\r\n    }\r\n\r\n    /**\r\n     * Show an error as an alert in the top of the editor html.\r\n     * Used by other components to display errors.\r\n     * @param error the translation key of the error that should be displayed\r\n     */\r\n    onError(error: any) {\r\n        let errorTranslationKey: string;\r\n        const translationParams = { connectionIssue: '' };\r\n        if (!error.includes(ConnectionError.message)) {\r\n            errorTranslationKey = error;\r\n        } else {\r\n            translationParams.connectionIssue = this.translateService.instant(`artemisApp.editor.errors.${ConnectionError.message}`);\r\n            errorTranslationKey = error.replaceAll(ConnectionError.message, '');\r\n        }\r\n        this.alertService.error(`artemisApp.editor.errors.${errorTranslationKey}`, translationParams);\r\n    }\r\n\r\n    getText(): string {\r\n        return this.monacoEditor.getText() ?? '';\r\n    }\r\n\r\n    getNumberOfLines(): number {\r\n        return this.monacoEditor.getNumberOfLines() ?? 0;\r\n    }\r\n\r\n    /**\r\n     * Highlights the line range in the Monaco editor.\r\n     * @param startLine The first line to highlight. Line numbers start at 1.\r\n     * @param endLine The last line to highlight.\r\n     */\r\n    highlightLines(startLine: number, endLine: number): void {\r\n        this.monacoEditor.highlightLines(startLine, endLine);\r\n    }\r\n\r\n    onToggleCollapse(event: InteractableEvent, collapsableElement: CollapsableCodeEditorElement) {\r\n        this.grid.toggleCollapse(event, collapsableElement);\r\n    }\r\n\r\n    /**\r\n     * Set the annotations and extract error files for the file browser.\r\n     * @param annotations The new annotations array\r\n     */\r\n    onAnnotations(annotations: Array<Annotation>) {\r\n        this.annotations = annotations;\r\n        this.errorFiles = uniq(annotations.filter((a) => a.type === 'error').map((a) => a.fileName));\r\n    }\r\n\r\n    /**\r\n     * The user will be warned if there are unsaved changes when trying to leave the code-editor.\r\n     */\r\n    canDeactivate() {\r\n        return _isEmpty(this.unsavedFiles);\r\n    }\r\n\r\n    /**\r\n     * Displays the alert for confirming refreshing or closing the page if there are unsaved changes\r\n     * NOTE: while the beforeunload event might be deprecated in the future, it is currently the only way to display a confirmation dialog when the user tries to leave the page\r\n     * @param event the beforeunload event\r\n     */\r\n    @HostListener('window:beforeunload', ['$event'])\r\n    unloadNotification(event: BeforeUnloadEvent) {\r\n        if (!this.canDeactivate()) {\r\n            event.preventDefault();\r\n            return this.translateService.instant('pendingChanges');\r\n        }\r\n        return true;\r\n    }\r\n}\r\n", "<jhi-code-editor-grid #grid [isTutorAssessment]=\"isTutorAssessment\">\r\n    <div editorNavbar class=\"d-flex flex-wrap align-items-center\">\r\n        <span>\r\n            <h4 class=\"editor-title\"><ng-content select=\"[editorTitle]\" /></h4>\r\n        </span>\r\n        <ng-content select=\"[editorTitleActions]\" />\r\n        <p class=\"editor-title\"><ng-content select=\"[submissionPolicy]\" /></p>\r\n        <div class=\"d-flex flex-wrap align-items-center ms-auto gap-2\">\r\n            <ng-content select=\"[editorToolbar]\" />\r\n            <ng-content select=\"[chatbot-button]\" />\r\n            @if (!isTutorAssessment || commitState === CommitState.CONFLICT) {\r\n                <jhi-code-editor-actions\r\n                    [buildable]=\"buildable\"\r\n                    [disableActions]=\"!editable && (!isTutorAssessment || commitState !== CommitState.CONFLICT)\"\r\n                    [unsavedFiles]=\"unsavedFiles\"\r\n                    [(editorState)]=\"editorState\"\r\n                    [(commitState)]=\"commitState\"\r\n                    [disableAutoSave]=\"disableAutoSave\"\r\n                    (onSavedFiles)=\"onSavedFiles($event)\"\r\n                    (onRefreshFiles)=\"onRefreshFiles()\"\r\n                    (commitStateChange)=\"onCommitStateChange.emit($event)\"\r\n                    (onError)=\"onError($event)\"\r\n                    [participation]=\"participation\"\r\n                />\r\n            }\r\n        </div>\r\n    </div>\r\n    <jhi-code-editor-file-browser\r\n        editorSidebarLeft\r\n        [disableActions]=\"!editable\"\r\n        [displayOnly]=\"forRepositoryView\"\r\n        [unsavedFiles]=\"unsavedFiles | keys\"\r\n        [errorFiles]=\"errorFiles\"\r\n        [editorState]=\"editorState\"\r\n        [isTutorAssessment]=\"isTutorAssessment\"\r\n        [highlightFileChanges]=\"highlightFileChanges\"\r\n        [fileBadges]=\"fileBadges\"\r\n        [allowHiddenFiles]=\"allowHiddenFiles\"\r\n        [(selectedFile)]=\"selectedFile\"\r\n        [(commitState)]=\"commitState\"\r\n        (onFileChange)=\"onFileChange($event)\"\r\n        (onError)=\"onError($event)\"\r\n        (onToggleCollapse)=\"onToggleCollapse($event, CollapsableCodeEditorElement.FileBrowser)\"\r\n    />\r\n    <ng-container editorCenter>\r\n        <jhi-code-editor-monaco\r\n            [commitState]=\"commitState\"\r\n            [editorState]=\"editorState\"\r\n            [course]=\"course\"\r\n            [feedbacks]=\"showInlineFeedback ? (participation?.results?.[0]?.feedbacks ?? []) : []\"\r\n            [feedbackSuggestions]=\"feedbackSuggestions\"\r\n            [readOnlyManualFeedback]=\"readOnlyManualFeedback\"\r\n            [disableActions]=\"!editable\"\r\n            [isTutorAssessment]=\"isTutorAssessment\"\r\n            [highlightDifferences]=\"highlightDifferences\"\r\n            [selectedFile]=\"selectedFile\"\r\n            [buildAnnotations]=\"annotations\"\r\n            [sessionId]=\"participation?.id ?? 'test'\"\r\n            (onFileContentChange)=\"onFileContentChange($event)\"\r\n            (onUpdateFeedback)=\"onUpdateFeedback.emit($event)\"\r\n            (onAcceptSuggestion)=\"onAcceptSuggestion.emit($event)\"\r\n            (onDiscardSuggestion)=\"onDiscardSuggestion.emit($event)\"\r\n            (onError)=\"onError($event)\"\r\n            (onFileLoad)=\"fileLoad($event)\"\r\n        />\r\n    </ng-container>\r\n    <ng-container editorSidebarRight>\r\n        @if (showEditorInstructions) {\r\n            <jhi-code-editor-instructions\r\n                (onToggleCollapse)=\"onToggleCollapse($event, CollapsableCodeEditorElement.Instructions)\"\r\n                (onError)=\"onError($event)\"\r\n                [isAssessmentMode]=\"isTutorAssessment\"\r\n            >\r\n                <ng-content select=\"[editorSidebar]\" />\r\n            </jhi-code-editor-instructions>\r\n        }\r\n    </ng-container>\r\n    <ng-container editorBottomArea>\r\n        @if (buildable) {\r\n            <jhi-code-editor-build-output\r\n                [participation]=\"participation\"\r\n                (onAnnotations)=\"onAnnotations($event)\"\r\n                (onError)=\"onError($event)\"\r\n                (onToggleCollapse)=\"onToggleCollapse($event, CollapsableCodeEditorElement.BuildOutput)\"\r\n            />\r\n        }\r\n    </ng-container>\r\n    <ng-container editorBottom>\r\n        @if (isTutorAssessment) {\r\n            <div>\r\n                <ng-content select=\"[editorBottom]\" />\r\n            </div>\r\n        }\r\n    </ng-container>\r\n</jhi-code-editor-grid>\r\n"],
  "mappings": "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",
  "names": ["CodeEditorFileService", "updateFileReferences", "refs", "fileChange", "RenameFileChange", "testRegex", "RegExp", "oldFileName", "replaceRegex", "fromPairs", "toPairs", "filter", "entry", "_isEmpty", "map", "fileName", "refContent", "test", "replace", "newFileName", "DeleteFileChange", "updateFileReference", "undefined", "factory", "\u0275fac", "providedIn", "import_interactjs", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "ctx_r0", "faGripLinesVertical", "faGripLines", "\u0275\u0275projection", "CodeEditorGridComponent", "renderer", "inject", "Renderer2", "editorSidebarRight", "editorSidebarLeft", "editorBottomArea", "buildOutputElement", "fileBrowserElement", "instructionsElement", "isTutorAssessment", "onResize", "EventEmitter", "fileBrowserIsCollapsed", "rightPanelIsCollapsed", "buildOutputIsCollapsed", "interactResizableMain", "resizableMinHeightMain", "resizableMaxHeightMain", "interactResizableLeft", "resizableMinWidthLeft", "resizableMaxWidthLeft", "interactResizableRight", "resizableMinWidthRight", "resizableMaxWidthRight", "interactResizableBottom", "resizableMinHeightBottom", "resizableMaxHeightBottom", "ngAfterViewInit", "window", "screen", "height", "interact", "resizable", "edges", "left", "right", "bottom", "top", "modifiers", "restrictSize", "min", "width", "max", "inertia", "on", "event", "target", "classList", "add", "remove", "emit", "ResizeType", "MAIN_BOTTOM", "style", "rect", "SIDEBAR_LEFT", "SIDEBAR_RIGHT", "BOTTOM", "elementRefForCollapsableElement", "collapsableElement", "CollapsableCodeEditorElement", "BuildOutput", "FileBrowser", "Instructions", "toggleCollapse", "interactableEvent", "horizontal", "interactResizable", "interactable", "toElement", "relatedTarget", "blur", "cardElement", "collapsed", "nativeElement", "contains", "removeClass", "enabled", "addClass", "selectors", "contentQueries", "rf", "ctx", "dirIndex", "\u0275\u0275template", "CodeEditorGridComponent_Conditional_19_Template", "CodeEditorGridComponent_Conditional_20_Template", "CodeEditorGridComponent_Conditional_32_Template", "CodeEditorGridComponent_Conditional_33_Template", "CodeEditorGridComponent_Conditional_50_Template", "CodeEditorGridComponent_Conditional_52_Template", "\u0275\u0275conditional", "FaIconComponent", "styles", "encapsulation", "import_interactjs", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275propertyInterpolate", "\u0275\u0275pipeBind1", "\u0275\u0275property", "ctx_r0", "faCircleNotch", "faTimesCircle", "faCheckCircle", "faExclamationTriangle", "CodeEditorStatusComponent", "CommitState", "EditorState", "editorState", "commitState", "selectors", "inputs", "features", "\u0275\u0275ProvidersFeature", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275template", "CodeEditorStatusComponent_Case_4_Template", "CodeEditorStatusComponent_Case_5_Template", "CodeEditorStatusComponent_Case_6_Template", "CodeEditorStatusComponent_Case_7_Template", "CodeEditorStatusComponent_Case_8_Template", "CodeEditorStatusComponent_Case_9_Template", "\u0275\u0275conditional", "tmp_0_0", "UNDEFINED", "COULD_NOT_BE_RETRIEVED", "CONFLICT", "CLEAN", "UNCOMMITTED_CHANGES", "COMMITTING", "NgbTooltip", "FaIconComponent", "TranslateDirective", "ArtemisTranslatePipe", "encapsulation", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275property", "\u0275\u0275pipeBind2", "\u0275\u0275pureFunction1", "_c0", "ctx_r1", "fileNameToDelete", "\u0275\u0275sanitizeHtml", "CodeEditorFileBrowserDeleteComponent", "activeModal", "inject", "NgbActiveModal", "repositoryFileService", "CodeEditorRepositoryFileService", "parent", "fileType", "isLoading", "faBan", "faTrashAlt", "ngOnInit", "deleteFile", "subscribe", "next", "closeModal", "onFileDeleted", "DeleteFileChange", "error", "err", "captureException", "dismiss", "selectors", "inputs", "features", "\u0275\u0275ProvidersFeature", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275listener", "i0", "\u0275\u0275restoreView", "_r1", "\u0275\u0275resetView", "\u0275\u0275template", "CodeEditorFileBrowserDeleteComponent_Conditional_5_Template", "CodeEditorFileBrowserDeleteComponent_Conditional_6_Template", "\u0275\u0275elementEnd", "CodeEditorFileBrowserDeleteComponent_Conditional_12_Template", "CodeEditorFileBrowserDeleteComponent_Conditional_13_Template", "\u0275\u0275conditional", "deleteForm_r3", "valid", "FormsModule", "\u0275NgNoValidate", "NgControlStatusGroup", "NgForm", "TranslateDirective", "FaIconComponent", "ArtemisTranslatePipe", "encapsulation", "TreeViewItem", "internalDisabled", "internalCollapsed", "internalChildren", "checked", "text", "value", "constructor", "item", "Error", "isString", "isBoolean", "collapsed", "disabled", "children", "length", "map", "child", "forEach", "setCollapsedRecursive", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275listener", "$event", "child_r2", "\u0275\u0275restoreView", "_r1", "$implicit", "ctx_r2", "\u0275\u0275nextContext", "\u0275\u0275resetView", "onChildCheckedChange", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "template", "\u0275\u0275repeaterCreate", "TreeViewItemComponent_Conditional_0_Conditional_5_For_4_Template", "\u0275\u0275repeaterTrackByIdentity", "\u0275\u0275repeater", "item", "children", "\u0275\u0275template", "TreeViewItemComponent_Conditional_0_ng_template_3_Template", "TreeViewItemComponent_Conditional_0_Conditional_5_Template", "\u0275\u0275pureFunction3", "_c0", "onCollapseExpand", "onCheckedChange", "\u0275\u0275conditional", "collapsed", "TreeViewItemComponent", "checkedChange", "EventEmitter", "checked", "emit", "child", "itemChecked", "childItem", "undefined", "selectors", "inputs", "outputs", "decls", "vars", "consts", "rf", "ctx", "TreeViewItemComponent_Conditional_0_Template", "NgTemplateOutlet", "styles", "items", "indexOf", "$item", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r2", "onCollapseExpand_r3", "\u0275\u0275nextContext", "onCollapseExpand", "\u0275\u0275resetView", "\u0275\u0275template", "TreeViewComponent_ng_template_0_Conditional_3_Conditional_3_Template", "TreeViewComponent_ng_template_0_Conditional_3_Conditional_4_Template", "\u0275\u0275advance", "\u0275\u0275conditional", "item_r4", "collapsed", "TreeViewComponent_ng_template_0_Conditional_3_Template", "\u0275\u0275twoWayListener", "$event", "_r1", "item", "i0", "\u0275\u0275twoWayBindingSet", "checked", "children", "\u0275\u0275twoWayProperty", "\u0275\u0275property", "disabled", "indeterminate", "\u0275\u0275textInterpolate1", "text", "item_r5", "ctx_r5", "itemTemplate", "defaultItemTemplate_r7", "TreeViewComponent", "maxHeight", "filterChange", "EventEmitter", "selectors", "inputs", "outputs", "decls", "vars", "consts", "template", "rf", "ctx", "TreeViewComponent_ng_template_0_Template", "\u0275\u0275templateRefExtractor", "\u0275\u0275repeaterCreate", "TreeViewComponent_For_6_Template", "_forTrack0", "\u0275\u0275styleProp", "\u0275\u0275repeater", "FormsModule", "CheckboxControlValueAccessor", "NgControlStatus", "NgModel", "TreeViewItemComponent", "styles", "findItem", "root", "value", "children", "child", "foundItem", "findItemInList", "list", "item", "CodeEditorFileBrowserCreateNodeComponent", "FileType", "faFile", "faFolder", "creatingInput", "createFileType", "folder", "onCreateFile", "EventEmitter", "onClearCreatingFile", "createFile", "event", "target", "value", "emit", "ngAfterViewInit", "nativeElement", "focus", "selectors", "viewQuery", "rf", "ctx", "NgbModal", "decls", "vars", "consts", "template", "\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275listener", "$event", "i0", "\u0275\u0275restoreView", "_r1", "\u0275\u0275resetView", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "FILE", "FaIconComponent", "styles", "CodeEditorFileBrowserNodeComponent", "FileType", "renamingInput", "item", "hasError", "hasUnsavedChanges", "isBeingRenamed", "onNodeSelect", "EventEmitter", "onSetRenamingNode", "onClearRenamingNode", "onRenameNode", "onDeleteNode", "ngOnChanges", "changes", "setTimeout", "nativeElement", "focus", "setRenamingNode", "event", "stopPropagation", "emit", "clearRenamingNode", "renameNode", "target", "value", "text", "deleteNode", "selectors", "viewQuery", "rf", "ctx", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275property", "ctx_r0", "icon", "CodeEditorFileBrowserBadgeComponent", "translateService", "inject", "TranslateService", "badge", "onColoredBackground", "tooltip", "type", "FileBadgeType", "FEEDBACK_SUGGESTION", "instant", "faLightbulb", "selectors", "inputs", "features", "\u0275\u0275ProvidersFeature", "NgbModal", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275template", "CodeEditorFileBrowserBadgeComponent_Conditional_2_Template", "\u0275\u0275elementEnd", "\u0275\u0275classProp", "\u0275\u0275conditional", "\u0275\u0275textInterpolate", "count", "NgbTooltip", "FaIconComponent", "styles", "badges", "indexOf", "$item", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275textInterpolate", "ctx_r0", "item", "text", "\u0275\u0275listener", "$event", "\u0275\u0275restoreView", "_r2", "\u0275\u0275nextContext", "\u0275\u0275resetView", "renameNode", "clearRenamingNode", "\u0275\u0275propertyInterpolate", "\u0275\u0275element", "\u0275\u0275property", "badge_r3", "_r4", "setCreatingNodeInFolder", "FileType", "FILE", "FOLDER", "setRenamingNode", "deleteNode", "\u0275\u0275pipeBind1", "faFile", "faFolder", "isCompressed", "value", "includes", "faEdit", "faTrash", "CodeEditorFileBrowserFolderComponent", "CodeEditorFileBrowserNodeComponent", "onCollapseExpand", "disableActions", "onSetCreatingNodeInFolder", "EventEmitter", "faChevronRight", "faChevronDown", "faFolderOpen", "event", "fileType", "stopPropagation", "emit", "__ngFactoryType__", "selectors", "inputs", "outputs", "features", "\u0275\u0275ProvidersFeature", "NgbModal", "\u0275\u0275InheritDefinitionFeature", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275template", "CodeEditorFileBrowserFolderComponent_Conditional_7_Template", "CodeEditorFileBrowserFolderComponent_Conditional_8_Template", "\u0275\u0275repeaterCreate", "CodeEditorFileBrowserFolderComponent_For_10_Template", "_forTrack0", "CodeEditorFileBrowserFolderComponent_Conditional_11_Template", "collapsed", "\u0275\u0275conditional", "isBeingRenamed", "\u0275\u0275repeater", "FaIconComponent", "CodeEditorFileBrowserBadgeComponent", "ArtemisTranslatePipe", "encapsulation", "badges", "indexOf", "$item", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "ctx_r0", "item", "checked", "\u0275\u0275textInterpolate", "text", "\u0275\u0275listener", "$event", "\u0275\u0275restoreView", "_r2", "\u0275\u0275nextContext", "\u0275\u0275resetView", "renameNode", "clearRenamingNode", "\u0275\u0275propertyInterpolate", "\u0275\u0275element", "badge_r3", "hasError", "hasChanges", "_r4", "setRenamingNode", "deleteNode", "\u0275\u0275pipeBind1", "faEdit", "faTrash", "CodeEditorFileBrowserFileComponent", "CodeEditorFileBrowserNodeComponent", "disableActions", "faFile", "__ngFactoryType__", "selectors", "inputs", "features", "\u0275\u0275ProvidersFeature", "NgbModal", "\u0275\u0275InheritDefinitionFeature", "decls", "vars", "consts", "template", "rf", "ctx", "onNodeSelect", "emit", "\u0275\u0275template", "CodeEditorFileBrowserFileComponent_Conditional_5_Template", "CodeEditorFileBrowserFileComponent_Conditional_6_Template", "\u0275\u0275repeaterCreate", "CodeEditorFileBrowserFileComponent_For_8_Template", "_forTrack0", "CodeEditorFileBrowserFileComponent_Conditional_9_Template", "\u0275\u0275classProp", "\u0275\u0275conditional", "isBeingRenamed", "\u0275\u0275repeater", "FaIconComponent", "NgClass", "CodeEditorFileBrowserBadgeComponent", "ArtemisTranslatePipe", "encapsulation", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "ctx_r1", "faFolderOpen", "faChevronRight", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r3", "\u0275\u0275nextContext", "\u0275\u0275resetView", "setCreatingFileInRoot", "FileType", "FILE", "FOLDER", "toggleTreeCompress", "\u0275\u0275propertyInterpolate", "\u0275\u0275pipeBind1", "disableActions", "isLoadingFiles", "commitState", "CommitState", "CONFLICT", "faPlus", "faFile", "faFolder", "compressFolders", "faAngleDoubleUp", "faAngleDoubleDown", "_r4", "clearCreatingFile", "$event", "onCreateFile", "creatingFile", "treeViewMaxHeight", "filesTreeViewItem", "itemTemplate_r5", "faCircleNotch", "editorState", "_r6", "item_r7", "item", "setRenamingFile", "onRenameFile", "handleNodeSelected", "openDeleteFileModal", "clearRenamingFile", "setCreatingFile", "renamingFile", "value", "unsavedFiles", "includes", "errorFiles", "onCollapseExpand_r9", "getFolderBadges", "_r10", "repositoryFilesWithInformationAboutChange", "fileBadges", "\u0275\u0275pureFunction0", "_c6", "_r11", "\u0275\u0275template", "CodeEditorFileBrowserComponent_ng_template_24_Conditional_2_Template", "CodeEditorFileBrowserComponent_ng_template_24_Conditional_3_Template", "CodeEditorFileBrowserComponent_ng_template_24_Conditional_4_Template", "\u0275\u0275conditional", "repositoryFiles", "CodeEditorFileBrowserComponent", "modalService", "inject", "NgbModal", "repositoryFileService", "CodeEditorRepositoryFileService", "repositoryService", "CodeEditorRepositoryService", "fileService", "CodeEditorFileService", "conflictService", "CodeEditorConflictStateService", "status", "treeview", "selectedFile", "selectedFileValue", "displayOnly", "commitStateValue", "isTutorAssessment", "highlightFileChanges", "allowHiddenFiles", "onToggleCollapse", "EventEmitter", "onFileChange", "selectedFileChange", "commitStateChange", "onError", "collapsed", "renamingInput", "creatingInput", "resizableMinWidth", "interactResizable", "gitConflictState", "conflictSubscription", "faChevronLeft", "file", "emit", "ngOnInit", "subscribeConflictState", "subscribe", "GitConflictState", "CHECKOUT_CONFLICT", "OK", "undefined", "ngAfterViewInit", "window", "screen", "width", "interact", "ngOnChanges", "changes", "previousValue", "UNDEFINED", "EditorState", "REFRESHING", "CLEAN", "initializeComponent", "currentValue", "setupTreeview", "checkIfRepositoryIsClean", "pipe", "tap", "switchMap", "COULD_NOT_BE_RETRIEVED", "throwError", "Error", "notifyConflictState", "loadFiles", "files", "loadFilesWithInformationAboutChange", "of", "filesWithInfoAboutChange", "error", "message", "getStatus", "rxMap", "res", "Object", "values", "find", "repositoryStatus", "catchError", "handleFileChange", "fileChange", "CreateFileChange", "__spreadProps", "__spreadValues", "fileName", "fileType", "updateFileReferences", "keys", "onFileDeleted", "checked", "priorFileSelection", "findItemInList", "tree", "buildTree", "sort", "map", "compressTree", "bind", "transformTreeToTreeViewItem", "treeViewItem", "Array", "node", "push", "TreeViewItem", "folder", "replace", "fileSplit", "split", "element", "text", "children", "shift", "length", "join", "toggleEditorCollapse", "event", "horizontal", "interactable", "newFileNamePath", "newFileName", "pop", "filePath", "newFilePath", "shouldDisplayFile", "renameFile", "next", "RenameFileChange", "folderPath", "createFile", "createFolder", "getRepositoryContent", "fromPairs", "toPairs", "filter", "getFilesWithInformationAboutChange", "filename", "folderName", "modalRef", "open", "CodeEditorFileBrowserDeleteComponent", "keyboard", "size", "componentInstance", "parent", "fileNameToDelete", "startsWith", "shouldDisplayFileBasedOnExtension", "TEXT_FILE_EXTENSIONS", "folderBadgesMap", "Map", "entries", "fileBadge", "folderBadgeCount", "get", "type", "set", "count", "from", "FileBadge", "selectors", "viewQuery", "rf", "ctx", "\u0275\u0275NgOnChangesFeature", "decls", "vars", "consts", "template", "i0", "_r1", "CodeEditorFileBrowserComponent_Conditional_6_Template", "CodeEditorFileBrowserComponent_Conditional_7_Template", "CodeEditorFileBrowserComponent_Conditional_13_Template", "CodeEditorFileBrowserComponent_Conditional_17_Template", "CodeEditorFileBrowserComponent_Conditional_18_Template", "CodeEditorFileBrowserComponent_Conditional_19_Template", "CodeEditorFileBrowserComponent_Conditional_21_Template", "CodeEditorFileBrowserComponent_ng_template_24_Template", "\u0275\u0275templateRefExtractor", "_c4", "_c5", "NgStyle", "FaIconComponent", "TranslateDirective", "CodeEditorFileBrowserCreateNodeComponent", "TreeViewComponent", "CodeEditorStatusComponent", "CodeEditorFileBrowserFolderComponent", "CodeEditorFileBrowserFileComponent", "ArtemisTranslatePipe", "styles", "CodeEditorSubmissionService", "DomainDependentService", "submissionService", "inject", "ProgrammingSubmissionService", "alertService", "AlertService", "participationId", "exerciseId", "isBuildingSubject", "Subject", "submissionSubscription", "constructor", "initDomainSubscription", "ngOnDestroy", "unsubscribe", "complete", "setDomain", "domain", "domainType", "domainValue", "DomainType", "PARTICIPATION", "id", "exercise", "programmingExercise", "personalParticipation", "getLatestPendingSubmissionByParticipationId", "pipe", "tap", "submissionState", "ProgrammingSubmissionState", "HAS_FAILED_SUBMISSION", "onError", "map", "submission", "isBuilding", "next", "subscribe", "TEST_REPOSITORY", "error", "getBuildingState", "asObservable", "factory", "\u0275fac", "providedIn", "CodeEditorResolveConflictModalComponent", "activeModal", "inject", "NgbActiveModal", "faBan", "faTimes", "faExclamationTriangle", "shouldReset", "EventEmitter", "resetRepository", "close", "emit", "closeModal", "dismiss", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275listener", "i0", "\u0275\u0275restoreView", "_r1", "\u0275\u0275resetView", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "deleteForm_r2", "valid", "FormsModule", "\u0275NgNoValidate", "NgControlStatusGroup", "NgForm", "TranslateDirective", "FaIconComponent", "styles", "CodeEditorConfirmRefreshModalComponent", "activeModal", "inject", "NgbActiveModal", "faExclamationTriangle", "faBan", "faTimes", "shouldRefresh", "EventEmitter", "refreshFiles", "close", "emit", "closeModal", "dismiss", "selectors", "features", "\u0275\u0275ProvidersFeature", "CodeEditorRepositoryFileService", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275listener", "i0", "\u0275\u0275restoreView", "_r1", "\u0275\u0275resetView", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "confirmForm_r2", "valid", "FormsModule", "\u0275NgNoValidate", "NgControlStatusGroup", "NgForm", "TranslateDirective", "FaIconComponent", "styles", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275property", "ctx_r0", "participation", "exercise", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "repositoryLink", "faExternalLink", "faCircleNotch", "faTimes", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r2", "\u0275\u0275nextContext", "\u0275\u0275resetView", "resetRepository", "\u0275\u0275template", "CodeEditorActionsComponent_Conditional_2_Conditional_6_Template", "CodeEditorActionsComponent_Conditional_2_Conditional_7_Template", "FeatureToggle", "ProgrammingExercises", "disableActions", "\u0275\u0275pipeBind1", "\u0275\u0275conditional", "isResolvingConflict", "faSync", "_r3", "onRefresh", "CodeEditorActionsComponent_Conditional_3_Conditional_4_Template", "CodeEditorActionsComponent_Conditional_3_Conditional_5_Template", "commit", "editorState", "EditorState", "REFRESHING", "SAVING", "commitState", "CommitState", "COMMITTING", "UNCOMMITTED_CHANGES", "CLEAN", "farPlayCircle", "CodeEditorActionsComponent", "repositoryService", "inject", "CodeEditorRepositoryService", "repositoryFileService", "CodeEditorRepositoryFileService", "conflictService", "CodeEditorConflictStateService", "modalService", "NgbModal", "submissionService", "CodeEditorSubmissionService", "route", "ActivatedRoute", "router", "Router", "buildable", "unsavedFiles", "disableAutoSave", "editorStateValue", "commitStateValue", "input", "commitStateChange", "EventEmitter", "editorStateChange", "isBuildingChange", "onSavedFiles", "onRefreshFiles", "onError", "isBuilding", "routerLink", "isInCourseManagement", "conflictStateSubscription", "submissionSubscription", "autoSaveTimer", "autoSaveInterval", "faPlayCircle", "emit", "ngOnInit", "params", "subscribe", "repositoryType", "courseId", "Number", "repositoryId", "exerciseId", "examId", "exerciseGroupId", "getLocalRepositoryLink", "url", "includes", "subscribeConflictState", "gitConflictState", "CONFLICT", "GitConflictState", "OK", "setTimeout", "UNDEFINED", "CHECKOUT_CONFLICT", "getBuildingState", "pipe", "tap", "window", "setInterval", "AUTOSAVE_EXERCISE_INTERVAL", "onSave", "AUTOSAVE_CHECK_INTERVAL", "ngOnChanges", "changes", "previousValue", "currentValue", "ngOnDestroy", "clearInterval", "unsubscribe", "open", "CodeEditorConfirmRefreshModalComponent", "keyboard", "size", "componentInstance", "shouldRefresh", "executeRefresh", "pull", "next", "error", "UNSAVED_CHANGES", "message", "ConnectionError", "saveChangedFiles", "catchError", "of", "andCommit", "_isEmpty", "Object", "entries", "map", "fileName", "fileContent", "updateFiles", "fileSubmission", "throwError", "undefined", "switchMap", "detail", "detailMessage", "CodeEditorResolveConflictModalComponent", "shouldReset", "notifyConflictState", "selectors", "inputs", "outputs", "features", "\u0275\u0275NgOnChangesFeature", "decls", "vars", "consts", "template", "rf", "ctx", "CodeEditorActionsComponent_Conditional_0_Template", "CodeEditorActionsComponent_Conditional_1_Template", "CodeEditorActionsComponent_Conditional_2_Template", "CodeEditorActionsComponent_Conditional_3_Template", "tmp_0_0", "RequestFeedbackButtonComponent", "FeatureToggleDirective", "NgbTooltip", "FaIconComponent", "TranslateDirective", "ArtemisTranslatePipe", "RouterLink", "encapsulation", "import_interactjs", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "ctx_r0", "faCircleNotch", "\u0275\u0275textInterpolate", "\u0275\u0275pipeBind3", "logEntry_r2", "time", "log", "\u0275\u0275repeaterCreate", "CodeEditorBuildOutputComponent_Conditional_16_For_6_Template", "\u0275\u0275repeaterTrackByIdentity", "\u0275\u0275repeater", "rawBuildLogs", "CodeEditorBuildOutputComponent", "buildLogService", "inject", "CodeEditorBuildLogService", "resultService", "ResultService", "participationWebsocketService", "ParticipationWebsocketService", "submissionService", "CodeEditorSubmissionService", "participation", "onAnnotations", "EventEmitter", "onToggleCollapse", "onError", "isBuilding", "BuildLogEntryArray", "result", "resizableMinHeight", "interactResizable", "resultSubscription", "submissionSubscription", "faChevronDown", "faTerminal", "ngOnInit", "setupSubmissionWebsocket", "ngAfterViewInit", "window", "screen", "height", "interact", "ngOnChanges", "changes", "participationChange", "hasParticipationChanged", "setupResultWebsocket", "results", "length", "latestResult", "findLatestResult", "of", "pipe", "switchMap", "feedbacks", "loadAndAttachResultDetails", "tap", "fetchBuildResults", "map", "buildLogsFromServer", "fromBuildLogs", "catchError", "subscribe", "extractAnnotations", "exercise", "getExercise", "buildLogErrors", "extractErrors", "programmingLanguage", "projectType", "codeAnalysisAnnotations", "filter", "Feedback", "isStaticCodeAnalysisFeedback", "feedback", "JSON", "parse", "detailText", "issue", "text", "message", "fileName", "filePath", "row", "startLine", "column", "startColumn", "type", "timestamp", "completionDate", "Date", "toString", "valueOf", "emit", "getBuildingState", "unsubscribe", "subscribeForLatestResultOfParticipation", "id", "undefined", "getFeedbackDetailsForResult", "res", "body", "getBuildLogs", "assessmentType", "AssessmentType", "AUTOMATIC_ATHENA", "submission", "buildFailed", "toggleEditorCollapse", "event", "horizontal", "interactable", "resizableMinWidth", "ngOnDestroy", "selectors", "inputs", "outputs", "features", "\u0275\u0275NgOnChangesFeature", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275listener", "$event", "\u0275\u0275template", "CodeEditorBuildOutputComponent_Conditional_14_Template", "CodeEditorBuildOutputComponent_Conditional_15_Template", "CodeEditorBuildOutputComponent_Conditional_16_Template", "\u0275\u0275conditional", "FaIconComponent", "TranslateDirective", "ArtemisDatePipe", "styles", "import_interactjs", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275elementStart", "\u0275\u0275template", "CodeEditorInstructionsComponent_Conditional_6_Conditional_5_Template", "CodeEditorInstructionsComponent_Conditional_6_Conditional_6_Template", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "ctx_r0", "farListAlt", "\u0275\u0275conditional", "isAssessmentMode", "CodeEditorInstructionsComponent_Conditional_7_Conditional_7_Template", "CodeEditorInstructionsComponent_Conditional_7_Conditional_8_Template", "faChevronLeft", "faChevronRight", "CodeEditorInstructionsComponent", "onToggleCollapse", "EventEmitter", "initialInstructionsWidth", "minInstructionsWidth", "interactResizable", "collapsed", "faListAlt", "ngAfterViewInit", "window", "screen", "width", "interact", "toggleEditorCollapse", "event", "emit", "horizontal", "interactable", "resizableMinWidth", "selectors", "inputs", "outputs", "ngContentSelectors", "_c0", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275listener", "$event", "CodeEditorInstructionsComponent_Conditional_6_Template", "CodeEditorInstructionsComponent_Conditional_7_Template", "CodeEditorInstructionsComponent_Conditional_9_Template", "\u0275\u0275projection", "\u0275\u0275pureFunction0", "_c1", "_c2", "_c3", "NgStyle", "FaIconComponent", "TranslateDirective", "styles", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275property", "ctx_r0", "feedback", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "faQuestionCircle", "\u0275\u0275pipeBind1", "\u0275\u0275textInterpolate", "gradingInstruction", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r3", "\u0275\u0275nextContext", "\u0275\u0275resetView", "deleteFeedback", "ButtonSize", "MEDIUM", "\u0275\u0275pureFunction1", "_c1", "\u0275\u0275pipeBind2", "dialogError$", "faTrashAlt", "highlightDifferences", "$event", "_r2", "updateFeedbackOnDrop", "i0", "preventDefault", "\u0275\u0275template", "CodeEditorTutorAssessmentInlineFeedbackComponent_Conditional_3_Conditional_9_Template", "CodeEditorTutorAssessmentInlineFeedbackComponent_Conditional_3_Conditional_16_Template", "\u0275\u0275twoWayListener", "\u0275\u0275twoWayBindingSet", "detailText", "credits", "cancelFeedback", "CodeEditorTutorAssessmentInlineFeedbackComponent_Conditional_3_Conditional_43_Template", "updateFeedback", "CodeEditorTutorAssessmentInlineFeedbackComponent_Conditional_3_Conditional_52_Template", "\u0275\u0275conditional", "\u0275\u0275twoWayProperty", "viewOnly", "faBan", "type", "MANUAL", "undefined", "faSave", "\u0275\u0275classProp", "isSubsequent", "readOnly", "roundScoreSpecifiedByCourseSettings", "course", "buildFeedbackTextForCodeEditor", "\u0275\u0275sanitizeHtml", "_r4", "editFeedback", "codeLine", "faPencilAlt", "faExclamationTriangle", "CodeEditorTutorAssessmentInlineFeedbackComponent_Conditional_4_Conditional_9_Template", "CodeEditorTutorAssessmentInlineFeedbackComponent_Conditional_4_Conditional_14_Template", "CodeEditorTutorAssessmentInlineFeedbackComponent_Conditional_4_Conditional_15_Template", "CodeEditorTutorAssessmentInlineFeedbackComponent_Conditional_4_Conditional_17_Template", "CodeEditorTutorAssessmentInlineFeedbackComponent_Conditional_4_Conditional_18_Template", "Feedback", "isNonGradedFeedbackSuggestion", "CodeEditorTutorAssessmentInlineFeedbackComponent", "structuredGradingCriterionService", "inject", "StructuredGradingCriterionService", "elementRef", "ElementRef", "_feedback", "oldFeedback", "cloneDeep", "selectedFile", "textareaRef", "onUpdateFeedback", "EventEmitter", "onCancelFeedback", "onDeleteFeedback", "onEditFeedback", "roundValueSpecifiedByCourseSettings", "FeedbackType", "dialogErrorSource", "Subject", "asObservable", "reference", "isFeedbackSuggestion", "updateFeedbackTypeOnChange", "text", "positive", "emit", "next", "line", "setTimeout", "nativeElement", "focus", "event", "updateFeedbackWithStructuredGradingInstructionEvent", "buildFeedbackTextForReview", "selectors", "viewQuery", "rf", "ctx", "CodeEditorTutorAssessmentInlineFeedbackComponent_Conditional_2_Template", "CodeEditorTutorAssessmentInlineFeedbackComponent_Conditional_3_Template", "CodeEditorTutorAssessmentInlineFeedbackComponent_Conditional_4_Template", "\u0275\u0275styleProp", "\u0275\u0275propertyInterpolate1", "FeedbackSuggestionBadgeComponent", "TranslateDirective", "FaIconComponent", "NgbTooltip", "GradingInstructionLinkIconComponent", "FormsModule", "DefaultValueAccessor", "NumberValueAccessor", "NgControlStatus", "NgModel", "DeleteButtonDirective", "AssessmentCorrectionRoundBadgeComponent", "ArtemisTranslatePipe", "FeedbackContentPipe", "QuotePipe", "encapsulation", "CodeEditorTutorAssessmentInlineFeedbackSuggestionComponent", "codeLine", "feedback", "course", "onAcceptSuggestion", "EventEmitter", "onDiscardSuggestion", "roundScoreSpecifiedByCourseSettings", "roundValueSpecifiedByCourseSettings", "buildFeedbackTextForReview", "faCheck", "faTrash", "elementRef", "inject", "ElementRef", "selectors", "inputs", "outputs", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275listener", "emit", "\u0275\u0275advance", "\u0275\u0275property", "\u0275\u0275classProp", "credits", "\u0275\u0275textInterpolate", "\u0275\u0275sanitizeHtml", "FeedbackSuggestionBadgeComponent", "TranslateDirective", "FaIconComponent", "styles", "CHAR_CODE_TAB", "CHAR_CODE_LINE_FEED", "CHAR_CODE_CARRIAGE_RETURN", "CHAR_CODE_SPACE", "IGNORED_CHAR_CODES", "FileTypeService", "isBinaryContent", "content", "i", "length", "charCode", "charCodeAt", "includes", "factory", "\u0275fac", "providedIn", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275listener", "$event", "\u0275\u0275restoreView", "_r2", "ctx_r2", "\u0275\u0275nextContext", "\u0275\u0275resetView", "updateFeedback", "deleteFeedback", "cancelFeedback", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "selectedFile", "feedback_r4", "line", "readOnlyManualFeedback", "highlightDifferences", "course", "_r5", "line_r6", "undefined", "_r7", "acceptSuggestion", "discardSuggestion", "suggestion_r8", "\u0275\u0275repeaterCreate", "CodeEditorMonacoComponent_Conditional_6_For_2_Template", "_forTrack0", "CodeEditorMonacoComponent_Conditional_6_For_4_Template", "\u0275\u0275repeaterTrackByIdentity", "CodeEditorMonacoComponent_Conditional_6_For_6_Template", "\u0275\u0275repeater", "feedbackForSelectedFile", "newFeedbackLines", "feedbackSuggestionsForSelectedFile", "\u0275\u0275element", "CodeEditorMonacoComponent", "CLASS_DIFF_LINE_HIGHLIGHT", "CLASS_FEEDBACK_HOVER_BUTTON", "FILE_TIMEOUT", "Feedback", "CommitState", "repositoryFileService", "inject", "CodeEditorRepositoryFileService", "fileService", "CodeEditorFileService", "localStorageService", "LocalStorageService", "changeDetectorRef", "ChangeDetectorRef", "fileTypeService", "FileTypeService", "editor", "viewChild", "required", "inlineFeedbackComponents", "viewChildren", "CodeEditorTutorAssessmentInlineFeedbackComponent", "inlineFeedbackSuggestionComponents", "CodeEditorTutorAssessmentInlineFeedbackSuggestionComponent", "commitState", "input", "editorState", "feedbacks", "feedbackSuggestions", "isTutorAssessment", "disableActions", "sessionId", "buildAnnotations", "onError", "output", "onFileContentChange", "onUpdateFeedback", "onFileLoad", "onAcceptSuggestion", "onDiscardSuggestion", "onHighlightLines", "loadingCount", "signal", "binaryFileSelected", "fileSession", "editorLocked", "computed", "CONFLICT", "loadingError", "feedbackInternal", "feedbackSuggestionsInternal", "filterFeedbackForSelectedFile", "map", "f", "attachLineAndReferenceToFeedback", "feedback", "__spreadProps", "__spreadValues", "getReferenceLine", "reference", "annotationsArray", "constructor", "effect", "set", "annotations", "untracked", "setBuildAnnotations", "ngOnChanges", "changes", "__async", "editorWasRefreshed", "previousValue", "EditorState", "REFRESHING", "CLEAN", "editorWasReset", "UNDEFINED", "reset", "previousFileName", "scrollTop", "getScrollTop", "selectFileInEditor", "renderFeedbackWidgets", "setupAddFeedbackButton", "emit", "layout", "fileName", "fileContent", "firstValueFrom", "getFile", "pipe", "timeout", "then", "fileObj", "error", "message", "ConnectionError", "code", "cursor", "column", "lineNumber", "isBinaryContent", "switchToSelectedFile", "selectedFileName", "changeModel", "setPosition", "setScrollTop", "onFileTextChanged", "text", "previousText", "previousScrollTop", "getPosition", "file", "getText", "getNumberOfLines", "highlightLines", "startLine", "endLine", "getLineHighlights", "setLineDecorationsHoverButton", "addNewFeedback", "lineNumberZeroBased", "getInlineFeedbackNode", "existingFeedbackIndex", "findIndex", "feedbackArray", "filter", "l", "includes", "areIdentical", "FEEDBACK_SUGGESTION_IDENTIFIER", "replace", "FEEDBACK_SUGGESTION_ACCEPTED_IDENTIFIER", "lineOfWidgetToFocus", "detectChanges", "setTimeout", "disposeWidgets", "addLineWidgetWithFeedback", "feedbackNode", "getInlineFeedbackNodeOrElseThrow", "addLineWidget", "querySelector", "focus", "element", "Error", "find", "comp", "codeLine", "elementRef", "nativeElement", "id", "oneBasedLine", "getReferenceFilePath", "onFileChange", "fileChange", "RenameFileChange", "updateFileReferences", "annotation", "oldFileName", "newFileName", "storeAnnotations", "DeleteFileChange", "CreateFileChange", "fileType", "FileType", "FILE", "savedFiles", "toUpdate", "fromPairs", "a", "hash", "toKeep", "pickBy", "loadAnnotations", "store", "JSON", "stringify", "parse", "retrieve", "length", "sessionAnnotations", "row", "timestamp", "setAnnotations", "buildAnnotation", "UNCOMMITTED_CHANGES", "selectors", "viewQuery", "rf", "ctx", "RepositoryFileService", "\u0275\u0275NgOnChangesFeature", "decls", "vars", "consts", "template", "\u0275\u0275template", "CodeEditorMonacoComponent_Conditional_6_Template", "i0", "_r1", "CodeEditorMonacoComponent_Conditional_10_Template", "CodeEditorMonacoComponent_Conditional_11_Template", "\u0275\u0275conditional", "MonacoEditorComponent", "CodeEditorHeaderComponent", "TranslateDirective", "styles", "encapsulation", "changeDetection", "KeysPipe", "transform", "obj", "Object", "keys", "pure", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275twoWayListener", "$event", "\u0275\u0275restoreView", "_r2", "ctx_r2", "\u0275\u0275nextContext", "i0", "\u0275\u0275twoWayBindingSet", "editorState", "\u0275\u0275resetView", "commitState", "\u0275\u0275listener", "onSavedFiles", "onRefreshFiles", "onCommitStateChange", "emit", "onError", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "buildable", "editable", "isTutorAssessment", "CommitState", "CONFLICT", "unsavedFiles", "\u0275\u0275twoWayProperty", "disableAutoSave", "participation", "_r4", "onToggleCollapse", "CollapsableCodeEditorElement", "Instructions", "\u0275\u0275projection", "_r5", "onAnnotations", "BuildOutput", "CodeEditorContainerComponent", "translateService", "inject", "TranslateService", "alertService", "AlertService", "fileService", "CodeEditorFileService", "EditorState", "grid", "fileBrowser", "actions", "buildOutput", "monacoEditor", "instructions", "forRepositoryView", "showInlineFeedback", "showEditorInstructions", "highlightFileChanges", "allowHiddenFiles", "feedbackSuggestions", "readOnlyManualFeedback", "highlightDifferences", "EventEmitter", "onFileChanged", "onUpdateFeedback", "onFileLoad", "onAcceptSuggestion", "onDiscardSuggestion", "course", "selectedFile", "unsavedFilesValue", "fileBadges", "errorFiles", "annotations", "constructor", "initializeProperties", "ngOnChanges", "changes", "updateFileBadges", "_isEmpty", "SAVING", "CLEAN", "COMMITTING", "UNCOMMITTED_CHANGES", "UNSAVED_CHANGES", "filePathsWithSuggestions", "map", "feedback", "Feedback", "getReferenceFilePath", "filter", "filePath", "undefined", "suggestionsCount", "length", "FileBadge", "FileBadgeType", "FEEDBACK_SUGGESTION", "UNDEFINED", "onFileChange", "fileChange", "CreateFileChange", "fileType", "FileType", "FILE", "fileName", "RenameFileChange", "DeleteFileChange", "updateFileReferences", "updateFileReference", "files", "savedFiles", "Object", "entries", "error", "fromPairs", "toPairs", "includes", "storeAnnotations", "onFileContentChange", "file", "fileContent", "__spreadProps", "__spreadValues", "fileLoad", "errorTranslationKey", "translationParams", "connectionIssue", "ConnectionError", "message", "instant", "replaceAll", "getText", "getNumberOfLines", "highlightLines", "startLine", "endLine", "event", "collapsableElement", "toggleCollapse", "uniq", "a", "type", "canDeactivate", "unloadNotification", "preventDefault", "selectors", "viewQuery", "rf", "ctx", "CodeEditorGridComponent", "CodeEditorFileBrowserComponent", "CodeEditorActionsComponent", "CodeEditorBuildOutputComponent", "CodeEditorMonacoComponent", "CodeEditorInstructionsComponent", "\u0275\u0275resolveWindow", "\u0275\u0275template", "CodeEditorContainerComponent_Conditional_22_Template", "_r1", "FileBrowser", "\u0275\u0275elementContainerStart", "CodeEditorContainerComponent_Conditional_35_Template", "CodeEditorContainerComponent_Conditional_39_Template", "CodeEditorContainerComponent_Conditional_43_Template", "\u0275\u0275conditional", "\u0275\u0275pipeBind1", "tmp_17_0", "results", "feedbacks", "\u0275\u0275pureFunction0", "_c2", "tmp_25_0", "id", "KeysPipe", "styles"]
}
