{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/pascaligo/pascaligo.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.2(404545bded1df6ffa41ea0af4e8ddb219018c6c1)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/pascaligo/pascaligo.ts\nvar conf = {\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"(*\", \"*)\"]\n  },\n  brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"], [\"<\", \">\"]],\n  autoClosingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: \"<\",\n    close: \">\"\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }],\n  surroundingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: \"<\",\n    close: \">\"\n  }, {\n    open: \"'\",\n    close: \"'\"\n  }]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".pascaligo\",\n  ignoreCase: true,\n  brackets: [{\n    open: \"{\",\n    close: \"}\",\n    token: \"delimiter.curly\"\n  }, {\n    open: \"[\",\n    close: \"]\",\n    token: \"delimiter.square\"\n  }, {\n    open: \"(\",\n    close: \")\",\n    token: \"delimiter.parenthesis\"\n  }, {\n    open: \"<\",\n    close: \">\",\n    token: \"delimiter.angle\"\n  }],\n  keywords: [\"begin\", \"block\", \"case\", \"const\", \"else\", \"end\", \"fail\", \"for\", \"from\", \"function\", \"if\", \"is\", \"nil\", \"of\", \"remove\", \"return\", \"skip\", \"then\", \"type\", \"var\", \"while\", \"with\", \"option\", \"None\", \"transaction\"],\n  typeKeywords: [\"bool\", \"int\", \"list\", \"map\", \"nat\", \"record\", \"string\", \"unit\", \"address\", \"map\", \"mtz\", \"xtz\"],\n  operators: [\"=\", \">\", \"<\", \"<=\", \">=\", \"<>\", \":\", \":=\", \"and\", \"mod\", \"or\", \"+\", \"-\", \"*\", \"/\", \"@\", \"&\", \"^\", \"%\"],\n  // we include these common regular expressions\n  symbols: /[=><:@\\^&|+\\-*\\/\\^%]+/,\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [\n    // identifiers and keywords\n    [/[a-zA-Z_][\\w]*/, {\n      cases: {\n        \"@keywords\": {\n          token: \"keyword.$0\"\n        },\n        \"@default\": \"identifier\"\n      }\n    }],\n    // whitespace\n    {\n      include: \"@whitespace\"\n    },\n    // delimiters and operators\n    [/[{}()\\[\\]]/, \"@brackets\"], [/[<>](?!@symbols)/, \"@brackets\"], [/@symbols/, {\n      cases: {\n        \"@operators\": \"delimiter\",\n        \"@default\": \"\"\n      }\n    }],\n    // numbers\n    [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"], [/\\$[0-9a-fA-F]{1,16}/, \"number.hex\"], [/\\d+/, \"number\"],\n    // delimiter: after number because of .\\d floats\n    [/[;,.]/, \"delimiter\"],\n    // strings\n    [/'([^'\\\\]|\\\\.)*$/, \"string.invalid\"],\n    // non-teminated string\n    [/'/, \"string\", \"@string\"],\n    // characters\n    [/'[^\\\\']'/, \"string\"], [/'/, \"string.invalid\"], [/\\#\\d+/, \"string\"]],\n    /* */\n    comment: [[/[^\\(\\*]+/, \"comment\"],\n    //[/\\(\\*/,    'comment', '@push' ],    // nested comment  not allowed :-(\n    [/\\*\\)/, \"comment\", \"@pop\"], [/\\(\\*/, \"comment\"]],\n    string: [[/[^\\\\']+/, \"string\"], [/\\\\./, \"string.escape.invalid\"], [/'/, {\n      token: \"string.quote\",\n      bracket: \"@close\",\n      next: \"@pop\"\n    }]],\n    whitespace: [[/[ \\t\\r\\n]+/, \"white\"], [/\\(\\*/, \"comment\", \"@comment\"], [/\\/\\/.*$/, \"comment\"]]\n  }\n};\nexport { conf, language };"],"mappings":"4BAQA,IAAIA,EAAO,CACT,SAAU,CACR,YAAa,KACb,aAAc,CAAC,KAAM,IAAI,CAC3B,EACA,SAAU,CAAC,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,CAAC,EACzD,iBAAkB,CAAC,CACjB,KAAM,IACN,MAAO,GACT,EAAG,CACD,KAAM,IACN,MAAO,GACT,EAAG,CACD,KAAM,IACN,MAAO,GACT,EAAG,CACD,KAAM,IACN,MAAO,GACT,EAAG,CACD,KAAM,IACN,MAAO,GACT,CAAC,EACD,iBAAkB,CAAC,CACjB,KAAM,IACN,MAAO,GACT,EAAG,CACD,KAAM,IACN,MAAO,GACT,EAAG,CACD,KAAM,IACN,MAAO,GACT,EAAG,CACD,KAAM,IACN,MAAO,GACT,EAAG,CACD,KAAM,IACN,MAAO,GACT,CAAC,CACH,EACIC,EAAW,CACb,aAAc,GACd,aAAc,aACd,WAAY,GACZ,SAAU,CAAC,CACT,KAAM,IACN,MAAO,IACP,MAAO,iBACT,EAAG,CACD,KAAM,IACN,MAAO,IACP,MAAO,kBACT,EAAG,CACD,KAAM,IACN,MAAO,IACP,MAAO,uBACT,EAAG,CACD,KAAM,IACN,MAAO,IACP,MAAO,iBACT,CAAC,EACD,SAAU,CAAC,QAAS,QAAS,OAAQ,QAAS,OAAQ,MAAO,OAAQ,MAAO,OAAQ,WAAY,KAAM,KAAM,MAAO,KAAM,SAAU,SAAU,OAAQ,OAAQ,OAAQ,MAAO,QAAS,OAAQ,SAAU,OAAQ,aAAa,EAC5N,aAAc,CAAC,OAAQ,MAAO,OAAQ,MAAO,MAAO,SAAU,SAAU,OAAQ,UAAW,MAAO,MAAO,KAAK,EAC9G,UAAW,CAAC,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,IAAK,KAAM,MAAO,MAAO,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAG,EAElH,QAAS,wBAET,UAAW,CACT,KAAM,CAEN,CAAC,iBAAkB,CACjB,MAAO,CACL,YAAa,CACX,MAAO,YACT,EACA,WAAY,YACd,CACF,CAAC,EAED,CACE,QAAS,aACX,EAEA,CAAC,aAAc,WAAW,EAAG,CAAC,mBAAoB,WAAW,EAAG,CAAC,WAAY,CAC3E,MAAO,CACL,aAAc,YACd,WAAY,EACd,CACF,CAAC,EAED,CAAC,2BAA4B,cAAc,EAAG,CAAC,sBAAuB,YAAY,EAAG,CAAC,MAAO,QAAQ,EAErG,CAAC,QAAS,WAAW,EAErB,CAAC,kBAAmB,gBAAgB,EAEpC,CAAC,IAAK,SAAU,SAAS,EAEzB,CAAC,WAAY,QAAQ,EAAG,CAAC,IAAK,gBAAgB,EAAG,CAAC,QAAS,QAAQ,CAAC,EAEpE,QAAS,CAAC,CAAC,WAAY,SAAS,EAEhC,CAAC,OAAQ,UAAW,MAAM,EAAG,CAAC,OAAQ,SAAS,CAAC,EAChD,OAAQ,CAAC,CAAC,UAAW,QAAQ,EAAG,CAAC,MAAO,uBAAuB,EAAG,CAAC,IAAK,CACtE,MAAO,eACP,QAAS,SACT,KAAM,MACR,CAAC,CAAC,EACF,WAAY,CAAC,CAAC,aAAc,OAAO,EAAG,CAAC,OAAQ,UAAW,UAAU,EAAG,CAAC,UAAW,SAAS,CAAC,CAC/F,CACF","names":["conf","language"],"x_google_ignoreList":[0]}