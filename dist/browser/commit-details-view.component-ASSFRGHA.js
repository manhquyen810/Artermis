import{b as H}from"./chunk-EAC2ODNH.js";import{a as B}from"./chunk-SLVT6IA5.js";import{f as c}from"./chunk-FAFORKWV.js";import{a as D}from"./chunk-QU4DXSXD.js";import"./chunk-YGSJB6WY.js";import"./chunk-O2WHE2S3.js";import"./chunk-JJUII2KT.js";import"./chunk-EANMTTQG.js";import"./chunk-PNTOXB52.js";import"./chunk-OTCBNILH.js";import"./chunk-O26CMRR4.js";import"./chunk-MP6UGYTC.js";import"./chunk-4I367PEU.js";import"./chunk-CK7FH6VF.js";import"./chunk-PUNMJFMR.js";import"./chunk-R75LTV62.js";import"./chunk-XBLNBTXN.js";import"./chunk-G3JOQOSD.js";import"./chunk-G4I63THF.js";import"./chunk-PZ7IDTIM.js";import{c as A}from"./chunk-JNO6DNVW.js";import"./chunk-EELXLOHY.js";import"./chunk-VZRSC3LP.js";import"./chunk-5SKDOIBQ.js";import"./chunk-WA5GEAJB.js";import"./chunk-5GXY5RYT.js";import{a as E}from"./chunk-K3W6YFKH.js";import"./chunk-EDXSOKK5.js";import"./chunk-R5BZWVRQ.js";import{p as g}from"./chunk-DID2YGL7.js";import"./chunk-CXQURQM5.js";import"./chunk-S4QLGR2R.js";import"./chunk-Z4VHWOB5.js";import"./chunk-XUCCGZJR.js";import"./chunk-HKBU2OOC.js";import"./chunk-5ZXXURLP.js";import"./chunk-NOBD5HSR.js";import"./chunk-U54OSGNH.js";import{f as P}from"./chunk-M6Z6DKZQ.js";import"./chunk-3Y6745HG.js";import"./chunk-E2KBL4LX.js";import"./chunk-PZTBTDSR.js";import"./chunk-IOA4DPXY.js";import{Bd as T,Db as e,Ea as d,Oc as x,P as b,Tb as R,Zb as y,dd as i,ed as h,fd as p,kc as I,ra as v,sc as u,t as F,xc as m,yc as r,yd as a,z as S,zc as f,zd as l}from"./chunk-5LC5EQRR.js";import"./chunk-3E746U5Y.js";function _(o,w){if(o&1&&(i(0,`
        `),f(1,"jhi-git-diff-report",2),i(2,`
    `)),o&2){let t=x(2);e(),I("report",t.report)("diffForTemplateAndSolution",!1)("templateFileContentByPath",t.leftCommitFileContentByPath)("solutionFileContentByPath",t.rightCommitFileContentByPath)("isRepositoryView",!0)("diffForTemplateAndEmptyRepository",t.isTemplate)}}function L(o,w){if(o&1&&(i(0,`
    `),m(1,"h3"),i(2),a(3,"artemisTranslate"),m(4,"span",0),i(5),r(),i(6,`
    `),r(),i(7,`

    `),m(8,"div"),i(9,`
        `),m(10,"p"),i(11,`
            `),m(12,"span")(13,"strong"),i(14),a(15,"artemisTranslate"),r(),i(16),m(17,"span",0),i(18),r()(),i(19,`
            `),m(20,"span",1)(21,"strong"),i(22),a(23,"artemisTranslate"),r(),i(24),a(25,"artemisDate"),r(),i(26,`
            `),m(27,"span",1)(28,"strong"),i(29),a(30,"artemisTranslate"),r(),i(31),r(),i(32,`
        `),r(),i(33,`
    `),r(),i(34,`
    `),f(35,"br"),i(36,`

    `),y(37,_,3,6)),o&2){let t=x();e(2),p(`
        `,l(3,10,"artemisApp.repository.commitHistory.commitDetails.commit")," "),e(3),p("",t.currentCommit.hash," "),e(9),h(l(15,12,"artemisApp.repository.commitHistory.commitDetails.author")),e(2),p(": ",t.currentCommit.author,", "),e(2),h(t.currentCommit.authorEmail),e(4),h(l(23,14,"artemisApp.repository.commitHistory.commitDetails.date")),e(2),p(": ",T(25,16,t.currentCommit.timestamp,"long",!0),""),e(5),h(l(30,20,"artemisApp.repository.commitHistory.commitDetails.commitMessage")),e(2),p(": ",t.currentCommit.message,""),e(6),u(t.report&&t.leftCommitFileContentByPath&&t.rightCommitFileContentByPath?37:-1)}}var J=(()=>{class o{programmingExerciseService=d(B);programmingExerciseParticipationService=d(D);route=d(P);report;exerciseId;repositoryId;commitHash;isTemplate=!1;errorWhileFetching=!1;leftCommitFileContentByPath;rightCommitFileContentByPath;commits=[];currentCommit;previousCommit;repositoryType;repoFilesSubscription;participationRepoFilesAtLeftCommitSubscription;participationRepoFilesAtRightCommitSubscription;paramSub;participationSub;ngOnDestroy(){this.repoFilesSubscription?.unsubscribe(),this.participationRepoFilesAtLeftCommitSubscription?.unsubscribe(),this.participationRepoFilesAtRightCommitSubscription?.unsubscribe(),this.paramSub?.unsubscribe(),this.participationSub?.unsubscribe()}ngOnInit(){this.paramSub=this.route.params.subscribe(t=>{this.exerciseId=Number(t.exerciseId),this.repositoryId=Number(t.repositoryId),this.commitHash=t.commitHash,this.repositoryType=t.repositoryType??"USER",this.retrieveAndHandleCommits()})}retrieveAndHandleCommits(){let t;(this.repositoryType===c.TEMPLATE||this.repositoryType===c.SOLUTION||this.repositoryType===c.TESTS)&&(t=this.programmingExerciseParticipationService.retrieveCommitHistoryForTemplateSolutionOrTests(this.exerciseId,this.repositoryType)),this.repositoryType===c.AUXILIARY&&(t=this.programmingExerciseParticipationService.retrieveCommitHistoryForAuxiliaryRepository(this.exerciseId,this.repositoryId)),this.repositoryType===c.USER&&(t=this.programmingExerciseParticipationService.retrieveCommitHistoryForParticipation(this.repositoryId)),t&&t.pipe(S(n=>n.sort((s,C)=>g(C.timestamp).isAfter(g(s.timestamp))?1:-1)),v(n=>{this.commits=n;let s=this.commits.findIndex(C=>C.hash===this.commitHash);s!==-1&&(this.currentCommit=this.commits[s],this.previousCommit=s<this.commits.length-1?this.commits[s+1]:this.commits[this.commits.length-1],this.isTemplate=s===this.commits.length-1)}),b(()=>F(()=>new Error("Error processing commits")))).subscribe({next:()=>this.getDiffReport(),error:()=>{this.errorWhileFetching=!0}})}getDiffReport(){this.repoFilesSubscription=this.programmingExerciseService.getDiffReportForCommits(this.exerciseId,this.repositoryId,this.previousCommit.hash,this.currentCommit.hash,this.repositoryType).subscribe(t=>{this.handleNewReport(t)})}handleNewReport(t){this.report=t,this.report.leftCommitHash=this.previousCommit.hash,this.report.rightCommitHash=this.currentCommit.hash,this.report.participationIdForLeftCommit=this.repositoryId,this.report.participationIdForRightCommit=this.repositoryId,this.fetchParticipationRepoFiles()}fetchParticipationRepoFiles(){this.isTemplate?(this.leftCommitFileContentByPath=new Map,this.fetchParticipationRepoFilesAtRightCommit()):this.participationRepoFilesAtLeftCommitSubscription=this.programmingExerciseParticipationService.getParticipationRepositoryFilesWithContentAtCommitForCommitDetailsView(this.exerciseId,this.report.participationIdForLeftCommit,this.report.leftCommitHash,this.repositoryType).subscribe({next:t=>{this.leftCommitFileContentByPath=t,this.fetchParticipationRepoFilesAtRightCommit()},error:()=>{this.errorWhileFetching=!0}})}fetchParticipationRepoFilesAtRightCommit(){this.participationRepoFilesAtRightCommitSubscription=this.programmingExerciseParticipationService.getParticipationRepositoryFilesWithContentAtCommitForCommitDetailsView(this.exerciseId,this.report.participationIdForRightCommit,this.report.rightCommitHash,this.repositoryType).subscribe({next:t=>{this.rightCommitFileContentByPath=t},error:()=>{this.errorWhileFetching=!0}})}static \u0275fac=function(n){return new(n||o)};static \u0275cmp=R({type:o,selectors:[["jhi-commit-details-view"]],decls:1,vars:1,consts:[[1,"text-primary"],[2,"margin-left","40px"],[3,"report","diffForTemplateAndSolution","templateFileContentByPath","solutionFileContentByPath","isRepositoryView","diffForTemplateAndEmptyRepository"]],template:function(n,s){n&1&&y(0,L,38,22),n&2&&u(s.currentCommit?0:-1)},dependencies:[H,A,E],encapsulation:2})}return o})();export{J as CommitDetailsViewComponent};
//# sourceMappingURL=commit-details-view.component-ASSFRGHA.js.map
