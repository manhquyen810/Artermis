{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/php/php.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.2(404545bded1df6ffa41ea0af4e8ddb219018c6c1)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/php/php.ts\nvar conf = {\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]],\n  autoClosingPairs: [{\n    open: \"{\",\n    close: \"}\",\n    notIn: [\"string\"]\n  }, {\n    open: \"[\",\n    close: \"]\",\n    notIn: [\"string\"]\n  }, {\n    open: \"(\",\n    close: \")\",\n    notIn: [\"string\"]\n  }, {\n    open: '\"',\n    close: '\"',\n    notIn: [\"string\"]\n  }, {\n    open: \"'\",\n    close: \"'\",\n    notIn: [\"string\", \"comment\"]\n  }],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*(#|//)region\\\\b\"),\n      end: new RegExp(\"^\\\\s*(#|//)endregion\\\\b\")\n    }\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \"\",\n  // ignoreCase: true,\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [[/<\\?((php)|=)?/, {\n      token: \"@rematch\",\n      switchTo: \"@phpInSimpleState.root\"\n    }], [/<!DOCTYPE/, \"metatag.html\", \"@doctype\"], [/<!--/, \"comment.html\", \"@comment\"], [/(<)(\\w+)(\\/>)/, [\"delimiter.html\", \"tag.html\", \"delimiter.html\"]], [/(<)(script)/, [\"delimiter.html\", {\n      token: \"tag.html\",\n      next: \"@script\"\n    }]], [/(<)(style)/, [\"delimiter.html\", {\n      token: \"tag.html\",\n      next: \"@style\"\n    }]], [/(<)([:\\w]+)/, [\"delimiter.html\", {\n      token: \"tag.html\",\n      next: \"@otherTag\"\n    }]], [/(<\\/)(\\w+)/, [\"delimiter.html\", {\n      token: \"tag.html\",\n      next: \"@otherTag\"\n    }]], [/</, \"delimiter.html\"], [/[^<]+/]\n    // text\n    ],\n    doctype: [[/<\\?((php)|=)?/, {\n      token: \"@rematch\",\n      switchTo: \"@phpInSimpleState.comment\"\n    }], [/[^>]+/, \"metatag.content.html\"], [/>/, \"metatag.html\", \"@pop\"]],\n    comment: [[/<\\?((php)|=)?/, {\n      token: \"@rematch\",\n      switchTo: \"@phpInSimpleState.comment\"\n    }], [/-->/, \"comment.html\", \"@pop\"], [/[^-]+/, \"comment.content.html\"], [/./, \"comment.content.html\"]],\n    otherTag: [[/<\\?((php)|=)?/, {\n      token: \"@rematch\",\n      switchTo: \"@phpInSimpleState.otherTag\"\n    }], [/\\/?>/, \"delimiter.html\", \"@pop\"], [/\"([^\"]*)\"/, \"attribute.value\"], [/'([^']*)'/, \"attribute.value\"], [/[\\w\\-]+/, \"attribute.name\"], [/=/, \"delimiter\"], [/[ \\t\\r\\n]+/]\n    // whitespace\n    ],\n    // -- BEGIN <script> tags handling\n    // After <script\n    script: [[/<\\?((php)|=)?/, {\n      token: \"@rematch\",\n      switchTo: \"@phpInSimpleState.script\"\n    }], [/type/, \"attribute.name\", \"@scriptAfterType\"], [/\"([^\"]*)\"/, \"attribute.value\"], [/'([^']*)'/, \"attribute.value\"], [/[\\w\\-]+/, \"attribute.name\"], [/=/, \"delimiter\"], [/>/, {\n      token: \"delimiter.html\",\n      next: \"@scriptEmbedded.text/javascript\",\n      nextEmbedded: \"text/javascript\"\n    }], [/[ \\t\\r\\n]+/],\n    // whitespace\n    [/(<\\/)(script\\s*)(>)/, [\"delimiter.html\", \"tag.html\", {\n      token: \"delimiter.html\",\n      next: \"@pop\"\n    }]]],\n    // After <script ... type\n    scriptAfterType: [[/<\\?((php)|=)?/, {\n      token: \"@rematch\",\n      switchTo: \"@phpInSimpleState.scriptAfterType\"\n    }], [/=/, \"delimiter\", \"@scriptAfterTypeEquals\"], [/>/, {\n      token: \"delimiter.html\",\n      next: \"@scriptEmbedded.text/javascript\",\n      nextEmbedded: \"text/javascript\"\n    }],\n    // cover invalid e.g. <script type>\n    [/[ \\t\\r\\n]+/],\n    // whitespace\n    [/<\\/script\\s*>/, {\n      token: \"@rematch\",\n      next: \"@pop\"\n    }]],\n    // After <script ... type =\n    scriptAfterTypeEquals: [[/<\\?((php)|=)?/, {\n      token: \"@rematch\",\n      switchTo: \"@phpInSimpleState.scriptAfterTypeEquals\"\n    }], [/\"([^\"]*)\"/, {\n      token: \"attribute.value\",\n      switchTo: \"@scriptWithCustomType.$1\"\n    }], [/'([^']*)'/, {\n      token: \"attribute.value\",\n      switchTo: \"@scriptWithCustomType.$1\"\n    }], [/>/, {\n      token: \"delimiter.html\",\n      next: \"@scriptEmbedded.text/javascript\",\n      nextEmbedded: \"text/javascript\"\n    }],\n    // cover invalid e.g. <script type=>\n    [/[ \\t\\r\\n]+/],\n    // whitespace\n    [/<\\/script\\s*>/, {\n      token: \"@rematch\",\n      next: \"@pop\"\n    }]],\n    // After <script ... type = $S2\n    scriptWithCustomType: [[/<\\?((php)|=)?/, {\n      token: \"@rematch\",\n      switchTo: \"@phpInSimpleState.scriptWithCustomType.$S2\"\n    }], [/>/, {\n      token: \"delimiter.html\",\n      next: \"@scriptEmbedded.$S2\",\n      nextEmbedded: \"$S2\"\n    }], [/\"([^\"]*)\"/, \"attribute.value\"], [/'([^']*)'/, \"attribute.value\"], [/[\\w\\-]+/, \"attribute.name\"], [/=/, \"delimiter\"], [/[ \\t\\r\\n]+/],\n    // whitespace\n    [/<\\/script\\s*>/, {\n      token: \"@rematch\",\n      next: \"@pop\"\n    }]],\n    scriptEmbedded: [[/<\\?((php)|=)?/, {\n      token: \"@rematch\",\n      switchTo: \"@phpInEmbeddedState.scriptEmbedded.$S2\",\n      nextEmbedded: \"@pop\"\n    }], [/<\\/script/, {\n      token: \"@rematch\",\n      next: \"@pop\",\n      nextEmbedded: \"@pop\"\n    }]],\n    // -- END <script> tags handling\n    // -- BEGIN <style> tags handling\n    // After <style\n    style: [[/<\\?((php)|=)?/, {\n      token: \"@rematch\",\n      switchTo: \"@phpInSimpleState.style\"\n    }], [/type/, \"attribute.name\", \"@styleAfterType\"], [/\"([^\"]*)\"/, \"attribute.value\"], [/'([^']*)'/, \"attribute.value\"], [/[\\w\\-]+/, \"attribute.name\"], [/=/, \"delimiter\"], [/>/, {\n      token: \"delimiter.html\",\n      next: \"@styleEmbedded.text/css\",\n      nextEmbedded: \"text/css\"\n    }], [/[ \\t\\r\\n]+/],\n    // whitespace\n    [/(<\\/)(style\\s*)(>)/, [\"delimiter.html\", \"tag.html\", {\n      token: \"delimiter.html\",\n      next: \"@pop\"\n    }]]],\n    // After <style ... type\n    styleAfterType: [[/<\\?((php)|=)?/, {\n      token: \"@rematch\",\n      switchTo: \"@phpInSimpleState.styleAfterType\"\n    }], [/=/, \"delimiter\", \"@styleAfterTypeEquals\"], [/>/, {\n      token: \"delimiter.html\",\n      next: \"@styleEmbedded.text/css\",\n      nextEmbedded: \"text/css\"\n    }],\n    // cover invalid e.g. <style type>\n    [/[ \\t\\r\\n]+/],\n    // whitespace\n    [/<\\/style\\s*>/, {\n      token: \"@rematch\",\n      next: \"@pop\"\n    }]],\n    // After <style ... type =\n    styleAfterTypeEquals: [[/<\\?((php)|=)?/, {\n      token: \"@rematch\",\n      switchTo: \"@phpInSimpleState.styleAfterTypeEquals\"\n    }], [/\"([^\"]*)\"/, {\n      token: \"attribute.value\",\n      switchTo: \"@styleWithCustomType.$1\"\n    }], [/'([^']*)'/, {\n      token: \"attribute.value\",\n      switchTo: \"@styleWithCustomType.$1\"\n    }], [/>/, {\n      token: \"delimiter.html\",\n      next: \"@styleEmbedded.text/css\",\n      nextEmbedded: \"text/css\"\n    }],\n    // cover invalid e.g. <style type=>\n    [/[ \\t\\r\\n]+/],\n    // whitespace\n    [/<\\/style\\s*>/, {\n      token: \"@rematch\",\n      next: \"@pop\"\n    }]],\n    // After <style ... type = $S2\n    styleWithCustomType: [[/<\\?((php)|=)?/, {\n      token: \"@rematch\",\n      switchTo: \"@phpInSimpleState.styleWithCustomType.$S2\"\n    }], [/>/, {\n      token: \"delimiter.html\",\n      next: \"@styleEmbedded.$S2\",\n      nextEmbedded: \"$S2\"\n    }], [/\"([^\"]*)\"/, \"attribute.value\"], [/'([^']*)'/, \"attribute.value\"], [/[\\w\\-]+/, \"attribute.name\"], [/=/, \"delimiter\"], [/[ \\t\\r\\n]+/],\n    // whitespace\n    [/<\\/style\\s*>/, {\n      token: \"@rematch\",\n      next: \"@pop\"\n    }]],\n    styleEmbedded: [[/<\\?((php)|=)?/, {\n      token: \"@rematch\",\n      switchTo: \"@phpInEmbeddedState.styleEmbedded.$S2\",\n      nextEmbedded: \"@pop\"\n    }], [/<\\/style/, {\n      token: \"@rematch\",\n      next: \"@pop\",\n      nextEmbedded: \"@pop\"\n    }]],\n    // -- END <style> tags handling\n    phpInSimpleState: [[/<\\?((php)|=)?/, \"metatag.php\"], [/\\?>/, {\n      token: \"metatag.php\",\n      switchTo: \"@$S2.$S3\"\n    }], {\n      include: \"phpRoot\"\n    }],\n    phpInEmbeddedState: [[/<\\?((php)|=)?/, \"metatag.php\"], [/\\?>/, {\n      token: \"metatag.php\",\n      switchTo: \"@$S2.$S3\",\n      nextEmbedded: \"$S3\"\n    }], {\n      include: \"phpRoot\"\n    }],\n    phpRoot: [[/[a-zA-Z_]\\w*/, {\n      cases: {\n        \"@phpKeywords\": {\n          token: \"keyword.php\"\n        },\n        \"@phpCompileTimeConstants\": {\n          token: \"constant.php\"\n        },\n        \"@default\": \"identifier.php\"\n      }\n    }], [/[$a-zA-Z_]\\w*/, {\n      cases: {\n        \"@phpPreDefinedVariables\": {\n          token: \"variable.predefined.php\"\n        },\n        \"@default\": \"variable.php\"\n      }\n    }],\n    // brackets\n    [/[{}]/, \"delimiter.bracket.php\"], [/[\\[\\]]/, \"delimiter.array.php\"], [/[()]/, \"delimiter.parenthesis.php\"],\n    // whitespace\n    [/[ \\t\\r\\n]+/],\n    // comments\n    [/(#|\\/\\/)$/, \"comment.php\"], [/(#|\\/\\/)/, \"comment.php\", \"@phpLineComment\"],\n    // block comments\n    [/\\/\\*/, \"comment.php\", \"@phpComment\"],\n    // strings\n    [/\"/, \"string.php\", \"@phpDoubleQuoteString\"], [/'/, \"string.php\", \"@phpSingleQuoteString\"],\n    // delimiters\n    [/[\\+\\-\\*\\%\\&\\|\\^\\~\\!\\=\\<\\>\\/\\?\\;\\:\\.\\,\\@]/, \"delimiter.php\"],\n    // numbers\n    [/\\d*\\d+[eE]([\\-+]?\\d+)?/, \"number.float.php\"], [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float.php\"], [/0[xX][0-9a-fA-F']*[0-9a-fA-F]/, \"number.hex.php\"], [/0[0-7']*[0-7]/, \"number.octal.php\"], [/0[bB][0-1']*[0-1]/, \"number.binary.php\"], [/\\d[\\d']*/, \"number.php\"], [/\\d/, \"number.php\"]],\n    phpComment: [[/\\*\\//, \"comment.php\", \"@pop\"], [/[^*]+/, \"comment.php\"], [/./, \"comment.php\"]],\n    phpLineComment: [[/\\?>/, {\n      token: \"@rematch\",\n      next: \"@pop\"\n    }], [/.$/, \"comment.php\", \"@pop\"], [/[^?]+$/, \"comment.php\", \"@pop\"], [/[^?]+/, \"comment.php\"], [/./, \"comment.php\"]],\n    phpDoubleQuoteString: [[/[^\\\\\"]+/, \"string.php\"], [/@escapes/, \"string.escape.php\"], [/\\\\./, \"string.escape.invalid.php\"], [/\"/, \"string.php\", \"@pop\"]],\n    phpSingleQuoteString: [[/[^\\\\']+/, \"string.php\"], [/@escapes/, \"string.escape.php\"], [/\\\\./, \"string.escape.invalid.php\"], [/'/, \"string.php\", \"@pop\"]]\n  },\n  phpKeywords: [\"abstract\", \"and\", \"array\", \"as\", \"break\", \"callable\", \"case\", \"catch\", \"cfunction\", \"class\", \"clone\", \"const\", \"continue\", \"declare\", \"default\", \"do\", \"else\", \"elseif\", \"enddeclare\", \"endfor\", \"endforeach\", \"endif\", \"endswitch\", \"endwhile\", \"extends\", \"false\", \"final\", \"for\", \"foreach\", \"function\", \"global\", \"goto\", \"if\", \"implements\", \"interface\", \"instanceof\", \"insteadof\", \"namespace\", \"new\", \"null\", \"object\", \"old_function\", \"or\", \"private\", \"protected\", \"public\", \"resource\", \"static\", \"switch\", \"throw\", \"trait\", \"try\", \"true\", \"use\", \"var\", \"while\", \"xor\", \"die\", \"echo\", \"empty\", \"exit\", \"eval\", \"include\", \"include_once\", \"isset\", \"list\", \"require\", \"require_once\", \"return\", \"print\", \"unset\", \"yield\", \"__construct\"],\n  phpCompileTimeConstants: [\"__CLASS__\", \"__DIR__\", \"__FILE__\", \"__LINE__\", \"__NAMESPACE__\", \"__METHOD__\", \"__FUNCTION__\", \"__TRAIT__\"],\n  phpPreDefinedVariables: [\"$GLOBALS\", \"$_SERVER\", \"$_GET\", \"$_POST\", \"$_FILES\", \"$_REQUEST\", \"$_SESSION\", \"$_ENV\", \"$_COOKIE\", \"$php_errormsg\", \"$HTTP_RAW_POST_DATA\", \"$http_response_header\", \"$argc\", \"$argv\"],\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/\n};\nexport { conf, language };"],"mappings":"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","names":["conf","language"],"x_google_ignoreList":[0]}