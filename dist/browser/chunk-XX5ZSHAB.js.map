{
  "version": 3,
  "sources": ["src/main/webapp/app/exercises/shared/feedback-suggestion/exercise-feedback-suggestion-options.component.ts", "src/main/webapp/app/exercises/shared/feedback-suggestion/exercise-feedback-suggestion-options.component.html"],
  "sourcesContent": ["import { Component, Input, OnChanges, OnInit, SimpleChanges, inject } from '@angular/core';\r\nimport { AssessmentType } from 'app/entities/assessment-type.model';\r\nimport { Exercise, ExerciseType } from 'app/entities/exercise.model';\r\nimport { Observable } from 'rxjs';\r\nimport { AthenaService } from 'app/assessment/athena.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport dayjs from 'dayjs/esm';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { AsyncPipe, NgStyle } from '@angular/common';\r\nimport { HelpIconComponent } from 'app/shared/components/help-icon.component';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'jhi-exercise-feedback-suggestion-options',\r\n    templateUrl: './exercise-feedback-suggestion-options.component.html',\r\n    imports: [TranslateDirective, NgStyle, HelpIconComponent, FormsModule, AsyncPipe],\r\n})\r\nexport class ExerciseFeedbackSuggestionOptionsComponent implements OnInit, OnChanges {\r\n    private athenaService = inject(AthenaService);\r\n    private activatedRoute = inject(ActivatedRoute);\r\n\r\n    @Input() exercise: Exercise;\r\n    @Input() dueDate?: dayjs.Dayjs;\r\n    @Input() readOnly = false;\r\n\r\n    protected readonly ExerciseType = ExerciseType;\r\n\r\n    protected readonly AssessmentType = AssessmentType;\r\n\r\n    readonly assessmentType: AssessmentType;\r\n\r\n    isAthenaEnabled$: Observable<boolean>;\r\n    modulesAvailable: boolean;\r\n    availableAthenaModules: string[];\r\n    initialAthenaModule?: string;\r\n\r\n    ngOnInit(): void {\r\n        const courseId = Number(this.activatedRoute.snapshot.paramMap.get('courseId'));\r\n        this.athenaService.getAvailableModules(courseId, this.exercise).subscribe((modules) => {\r\n            this.availableAthenaModules = modules;\r\n            this.modulesAvailable = modules.length > 0;\r\n        });\r\n        this.isAthenaEnabled$ = this.athenaService.isEnabled();\r\n        this.initialAthenaModule = this.exercise.feedbackSuggestionModule;\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.dueDate && !changes.dueDate.isFirstChange()) {\r\n            if (this.inputControlsDisabled()) {\r\n                this.exercise.feedbackSuggestionModule = this.initialAthenaModule;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns true in case the input controls should be disabled. This is the case for all exercises when the due date has passed. For programming exercises,\r\n     * it returns true in case the assessment type is automatic, the exercise is readonly, the due date is undefined or the due date has passed.\r\n     */\r\n    inputControlsDisabled() {\r\n        if (this.exercise.type == ExerciseType.PROGRAMMING) {\r\n            return this.exercise.assessmentType == AssessmentType.AUTOMATIC || this.readOnly || this.exercise.dueDate == undefined || this.hasDueDatePassed();\r\n        }\r\n        return this.hasDueDatePassed();\r\n    }\r\n\r\n    /**\r\n     * Returns the label style for the checkbox to enable feedback suggestions. In case the input controls are disabled, the label text color is set to grey.\r\n     */\r\n    getCheckboxLabelStyle() {\r\n        if (this.inputControlsDisabled()) {\r\n            return { color: 'grey' };\r\n        }\r\n        return {};\r\n    }\r\n\r\n    toggleFeedbackSuggestions(event: any) {\r\n        if (event.target.checked) {\r\n            this.exercise.feedbackSuggestionModule = this.availableAthenaModules.first();\r\n        } else {\r\n            this.exercise.allowFeedbackRequests = false;\r\n            this.exercise.feedbackSuggestionModule = undefined;\r\n        }\r\n    }\r\n\r\n    toggleFeedbackRequests(event: any) {\r\n        if (event.target.checked) {\r\n            this.exercise.feedbackSuggestionModule = this.availableAthenaModules.first();\r\n            this.exercise.allowFeedbackRequests = true;\r\n        } else {\r\n            this.exercise.allowFeedbackRequests = false;\r\n        }\r\n    }\r\n\r\n    private hasDueDatePassed() {\r\n        return dayjs(this.exercise.dueDate).isBefore(dayjs());\r\n    }\r\n}\r\n", "@if ((isAthenaEnabled$ | async) && modulesAvailable) {\r\n    <div class=\"form-group\">\r\n        <div class=\"form-check\">\r\n            <input\r\n                type=\"checkbox\"\r\n                class=\"form-check-input\"\r\n                name=\"feedbackSuggestionsEnabledCheck\"\r\n                [checked]=\"!!exercise.feedbackSuggestionModule\"\r\n                [disabled]=\"inputControlsDisabled()\"\r\n                id=\"feedbackSuggestionsEnabledCheck\"\r\n                (change)=\"toggleFeedbackSuggestions($event)\"\r\n            />\r\n            <label\r\n                [ngStyle]=\"getCheckboxLabelStyle()\"\r\n                class=\"form-control-label\"\r\n                for=\"feedbackSuggestionsEnabledCheck\"\r\n                jhiTranslate=\"artemisApp.exercise.feedbackSuggestionsEnabled\"\r\n            ></label>\r\n            <jhi-help-icon placement=\"right auto\" [text]=\"'artemisApp.exercise.feedbackSuggestionsEnabledTooltip'\" />\r\n        </div>\r\n        @if (this.exercise.type === ExerciseType.TEXT || this.exercise.type === ExerciseType.MODELING) {\r\n            <div class=\"form-check\">\r\n                <input\r\n                    type=\"checkbox\"\r\n                    class=\"form-check-input\"\r\n                    name=\"allowFeedbackRequests\"\r\n                    [checked]=\"!!exercise.allowFeedbackRequests\"\r\n                    id=\"allowFeedbackRequests\"\r\n                    (change)=\"toggleFeedbackRequests($event)\"\r\n                />\r\n                <label class=\"form-control-label\" for=\"allowFeedbackRequests\" jhiTranslate=\"artemisApp.textExercise.allowPreliminaryAthenaFeedbackRequests\"></label>\r\n                <jhi-help-icon placement=\"right auto\" [text]=\"'artemisApp.textExercise.allowPreliminaryAthenaFeedbackRequestsTooltip'\" />\r\n            </div>\r\n        }\r\n        @if (!!this.exercise.feedbackSuggestionModule) {\r\n            <div class=\"form-group\">\r\n                <label for=\"athenaModuleSelect\">Athena Module</label>\r\n                <select\r\n                    id=\"athenaModuleSelect\"\r\n                    class=\"form-select\"\r\n                    [value]=\"this.exercise.feedbackSuggestionModule\"\r\n                    [(ngModel)]=\"this.exercise.feedbackSuggestionModule\"\r\n                    [disabled]=\"inputControlsDisabled()\"\r\n                >\r\n                    @for (athenaModule of availableAthenaModules; track athenaModule) {\r\n                        <option [value]=\"athenaModule\">{{ athenaModule }}</option>\r\n                    }\r\n                </select>\r\n            </div>\r\n        }\r\n    </div>\r\n}\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275listener", "$event", "\u0275\u0275restoreView", "_r3", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "toggleFeedbackRequests", "\u0275\u0275elementEnd", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275property", "exercise", "allowFeedbackRequests", "athenaModule_r5", "\u0275\u0275textInterpolate", "\u0275\u0275twoWayListener", "_r4", "i0", "\u0275\u0275twoWayBindingSet", "feedbackSuggestionModule", "\u0275\u0275repeaterCreate", "ExerciseFeedbackSuggestionOptionsComponent_Conditional_0_Conditional_13_For_9_Template", "\u0275\u0275repeaterTrackByIdentity", "\u0275\u0275twoWayProperty", "inputControlsDisabled", "\u0275\u0275repeater", "availableAthenaModules", "_r1", "toggleFeedbackSuggestions", "\u0275\u0275template", "ExerciseFeedbackSuggestionOptionsComponent_Conditional_0_Conditional_12_Template", "ExerciseFeedbackSuggestionOptionsComponent_Conditional_0_Conditional_13_Template", "getCheckboxLabelStyle", "\u0275\u0275conditional", "type", "ExerciseType", "TEXT", "MODELING", "ExerciseFeedbackSuggestionOptionsComponent", "athenaService", "inject", "AthenaService", "activatedRoute", "ActivatedRoute", "dueDate", "readOnly", "AssessmentType", "assessmentType", "isAthenaEnabled$", "modulesAvailable", "initialAthenaModule", "ngOnInit", "courseId", "Number", "snapshot", "paramMap", "get", "getAvailableModules", "subscribe", "modules", "length", "isEnabled", "ngOnChanges", "changes", "isFirstChange", "PROGRAMMING", "AUTOMATIC", "undefined", "hasDueDatePassed", "color", "event", "target", "checked", "first", "dayjs", "isBefore", "selectors", "inputs", "features", "\u0275\u0275NgOnChangesFeature", "decls", "vars", "consts", "template", "rf", "ctx", "ExerciseFeedbackSuggestionOptionsComponent_Conditional_0_Template", "\u0275\u0275pipeBind1", "TranslateDirective", "NgStyle", "HelpIconComponent", "FormsModule", "NgSelectOption", "\u0275NgSelectMultipleOption", "SelectControlValueAccessor", "NgControlStatus", "NgModel", "AsyncPipe", "encapsulation"]
}
