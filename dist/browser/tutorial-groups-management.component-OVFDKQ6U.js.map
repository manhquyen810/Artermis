{
  "version": 3,
  "sources": ["src/main/webapp/app/course/tutorial-groups/shared/tutorial-group-free-days-overview/tutorial-group-free-days-overview.component.ts", "src/main/webapp/app/course/tutorial-groups/shared/tutorial-group-free-days-overview/tutorial-group-free-days-overview.component.html", "src/main/webapp/app/shared/vertical-progress-bar/vertical-progress-bar.component.ts", "src/main/webapp/app/shared/vertical-progress-bar/vertical-progress-bar.component.html", "src/main/webapp/app/course/tutorial-groups/shared/tutorial-group-utilization-indicator/tutorial-group-utilization-indicator.component.ts", "src/main/webapp/app/course/tutorial-groups/shared/tutorial-group-utilization-indicator/tutorial-group-utilization-indicator.component.html", "src/main/webapp/app/course/tutorial-groups/shared/meeting-pattern.pipe.ts", "src/main/webapp/app/course/tutorial-groups/shared/tutorial-groups-table/tutorial-group-row/tutorial-group-row.component.ts", "src/main/webapp/app/course/tutorial-groups/shared/tutorial-groups-table/tutorial-group-row/tutorial-group-row.component.html", "src/main/webapp/app/course/tutorial-groups/shared/tutorial-groups-table/tutorial-groups-table.component.ts", "src/main/webapp/app/course/tutorial-groups/shared/tutorial-groups-table/tutorial-groups-table.component.html", "src/main/webapp/app/course/tutorial-groups/tutorial-groups-management/tutorial-groups/tutorial-groups-management/tutorial-groups-import-dialog/tutorial-groups-registration-import-dialog.component.ts", "src/main/webapp/app/course/tutorial-groups/tutorial-groups-management/tutorial-groups/tutorial-groups-management/tutorial-groups-import-dialog/tutorial-groups-registration-import-dialog.component.html", "src/main/webapp/app/course/tutorial-groups/tutorial-groups-management/tutorial-groups/tutorial-groups-management/tutorial-groups-import-button/tutorial-groups-import-button.component.ts", "src/main/webapp/app/course/tutorial-groups/tutorial-groups-management/tutorial-groups/tutorial-groups-management/tutorial-groups-import-button/tutorial-groups-import-button.component.html", "src/main/webapp/app/course/tutorial-groups/tutorial-groups-management/tutorial-groups/tutorial-groups-management/tutorial-groups-export-button.component/tutorial-groups-export-button.component.ts", "src/main/webapp/app/course/tutorial-groups/tutorial-groups-management/tutorial-groups/tutorial-groups-management/tutorial-groups-export-button.component/tutorial-groups-export-button.component.html", "src/main/webapp/app/course/tutorial-groups/tutorial-groups-management/tutorial-groups/tutorial-groups-management/tutorial-groups-course-information/tutorial-groups-course-information.component.ts", "src/main/webapp/app/course/tutorial-groups/tutorial-groups-management/tutorial-groups/tutorial-groups-management/tutorial-groups-course-information/tutorial-groups-course-information.component.html", "src/main/webapp/app/course/tutorial-groups/tutorial-groups-management/tutorial-groups/tutorial-groups-management/tutorial-groups-management.component.ts", "src/main/webapp/app/course/tutorial-groups/tutorial-groups-management/tutorial-groups/tutorial-groups-management/tutorial-groups-management.component.html"],
  "sourcesContent": ["import { ChangeDetectionStrategy, Component, DoCheck, Input, IterableDiffer, IterableDiffers, OnInit, inject } from '@angular/core';\r\nimport { TutorialGroupFreePeriod } from 'app/entities/tutorial-group/tutorial-group-free-day.model';\r\nimport { SortService } from 'app/shared/service/sort.service';\r\nimport dayjs from 'dayjs/esm';\r\nimport { SidePanelComponent } from 'app/shared/side-panel/side-panel.component';\r\nimport { NgClass } from '@angular/common';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { NgbPopover } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-tutorial-group-free-days-overview',\r\n    templateUrl: './tutorial-group-free-days-overview.component.html',\r\n    styleUrls: ['./tutorial-group-free-days-overview.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    imports: [SidePanelComponent, NgClass, TranslateDirective, NgbPopover, ArtemisDatePipe, ArtemisTranslatePipe],\r\n})\r\nexport class TutorialGroupFreeDaysOverviewComponent implements OnInit, DoCheck {\r\n    private sortService = inject(SortService);\r\n    private iterableDiffers = inject(IterableDiffers);\r\n\r\n    @Input()\r\n    tutorialGroupFreeDays: TutorialGroupFreePeriod[] = [];\r\n\r\n    @Input()\r\n    timeZone?: string = undefined;\r\n\r\n    public isInThePast(tutorialGroupFreeDay: TutorialGroupFreePeriod): boolean {\r\n        return tutorialGroupFreeDay.start!.isBefore(this.getCurrentDate());\r\n    }\r\n\r\n    private diff: IterableDiffer<TutorialGroupFreePeriod>;\r\n\r\n    public getCurrentDate(): dayjs.Dayjs {\r\n        return dayjs();\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        this.diff = this.iterableDiffers.find(this.tutorialGroupFreeDays).create();\r\n        this.sort();\r\n    }\r\n\r\n    public ngDoCheck(): void {\r\n        const changes = this.diff.diff(this.tutorialGroupFreeDays);\r\n        if (changes) {\r\n            this.sort();\r\n        }\r\n    }\r\n\r\n    private sort() {\r\n        this.sortService.sortByProperty(this.tutorialGroupFreeDays, 'start', false);\r\n    }\r\n}\r\n", "<jhi-side-panel [panelHeader]=\"'artemisApp.pages.courseTutorialGroupOverview.freeDaySidePanel.header' | artemisTranslate\">\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <ul class=\"list-group\">\r\n                @for (freeDay of tutorialGroupFreeDays; track freeDay) {\r\n                    <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                        <span [ngClass]=\"{ 'opacity-50': isInThePast(freeDay) }\">\r\n                            {{ freeDay.start | artemisDate: 'long-date' : false : timeZone : true }}\r\n                        </span>\r\n                        @if (freeDay.reason && freeDay.reason.trim().length > 0) {\r\n                            <button\r\n                                type=\"button\"\r\n                                class=\"btn btn-outline-secondary me-2\"\r\n                                [ngClass]=\"{ 'opacity-50': isInThePast(freeDay) }\"\r\n                                placement=\"top\"\r\n                                [ngbPopover]=\"freeDay.reason.trim()\"\r\n                                [popoverTitle]=\"'artemisApp.entities.tutorialFreePeriod.reason' | artemisTranslate\"\r\n                                jhiTranslate=\"artemisApp.entities.tutorialFreePeriod.reason\"\r\n                            ></button>\r\n                        }\r\n                    </li>\r\n                }\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</jhi-side-panel>\r\n", "import { ChangeDetectionStrategy, ChangeDetectorRef, Component, HostBinding, Input, OnInit, inject } from '@angular/core';\r\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n/**\r\n * Simple Vertical Progress Bar without any external dependencies\r\n * <ul>\r\n *     <li> Supports three different colors depending on fill level\r\n *     <li> [upperBorder, 100] -> upper color\r\n *     <li> (lowerBorder, upperBorder) -> intermediate color\r\n *     <li> [0,lowerBorder] -> lower color\r\n * </ul>\r\n */\r\n@Component({\r\n    selector: 'jhi-vertical-progress-bar',\r\n    templateUrl: './vertical-progress-bar.component.html',\r\n    styleUrls: ['./vertical-progress-bar.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    imports: [NgbTooltip],\r\n})\r\nexport class VerticalProgressBarComponent implements OnInit {\r\n    private cdr = inject(ChangeDetectorRef);\r\n\r\n    // CSS VARIABLES START\r\n    @HostBinding('style.--progress-bar-height')\r\n    heightCSS = '50px';\r\n    @HostBinding('style.--progress-bar-width')\r\n    widthCSS = '50px';\r\n    @HostBinding('style.--fill-level')\r\n    fillLevelCSS = '0%';\r\n    @HostBinding('style.--fill-color')\r\n    fillColorCSS = 'green';\r\n    @HostBinding('style.--fill-duration')\r\n    fillDurationCSS = '1s';\r\n    @HostBinding('style.--border-radius')\r\n    borderRadiusCSS = '16px';\r\n\r\n    // CSS VARIABLES END\r\n\r\n    ngOnInit(): void {\r\n        this.setFillColor();\r\n    }\r\n\r\n    fillLevelInPercentInternal = 0;\r\n    lowerBorderInternal = 60;\r\n    upperBorderInternal = 90;\r\n\r\n    @Input()\r\n    set lowerBorder(border: number) {\r\n        this.lowerBorderInternal = Math.round(Math.max(border, 0));\r\n        this.setFillColor();\r\n        this.cdr.markForCheck();\r\n    }\r\n\r\n    @Input()\r\n    set upperBorder(border: number) {\r\n        this.upperBorderInternal = Math.round(Math.min(border, 100));\r\n        this.setFillColor();\r\n        this.cdr.markForCheck();\r\n    }\r\n    @Input()\r\n    lowerColor = 'var(--success)';\r\n    @Input()\r\n    intermediateColor = 'var(--warning)';\r\n    @Input()\r\n    upperColor = 'var(--danger)';\r\n    @Input()\r\n    tooltip = '';\r\n\r\n    @Input()\r\n    set animateFilling(showAnimation: boolean) {\r\n        if (showAnimation) {\r\n            this.fillDurationCSS = '1s';\r\n        } else {\r\n            this.fillDurationCSS = '0s';\r\n        }\r\n    }\r\n\r\n    @Input()\r\n    set heightInPixels(height: number) {\r\n        if (height !== undefined && height !== null && height > 0) {\r\n            this.heightCSS = `${height}px`;\r\n            this.cdr.markForCheck();\r\n        }\r\n    }\r\n\r\n    @Input()\r\n    set widthInPixels(width: number) {\r\n        if (width !== undefined && width !== null && width > 0) {\r\n            this.widthCSS = `${width}px`;\r\n            this.cdr.markForCheck();\r\n        }\r\n    }\r\n\r\n    @Input()\r\n    set fillLevelInPercent(percent: number) {\r\n        if (percent !== undefined && percent !== null) {\r\n            this.fillLevelInPercentInternal = Math.min(Math.max(Math.round(percent), 0), 100);\r\n            this.fillLevelCSS = `${this.fillLevelInPercentInternal}%`;\r\n            this.setFillColor();\r\n            this.cdr.markForCheck();\r\n        }\r\n    }\r\n\r\n    private setFillColor() {\r\n        if (this.fillLevelInPercentInternal <= this.lowerBorderInternal) {\r\n            this.fillColorCSS = this.lowerColor;\r\n        } else if (this.fillLevelInPercentInternal >= this.upperBorderInternal) {\r\n            this.fillColorCSS = this.upperColor;\r\n        } else {\r\n            this.fillColorCSS = this.intermediateColor;\r\n        }\r\n    }\r\n}\r\n", "<div class=\"vertical-progress-bar\">\r\n    <div class=\"progress-bar\" [ngbTooltip]=\"tooltip\">\r\n        <div class=\"fill-level\"></div>\r\n    </div>\r\n    <div class=\"fill-level-text\">{{ fillLevelCSS }}</div>\r\n</div>\r\n", "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { TutorialGroup } from 'app/entities/tutorial-group/tutorial-group.model';\r\nimport { VerticalProgressBarComponent } from 'app/shared/vertical-progress-bar/vertical-progress-bar.component';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-tutorial-group-utilization-indicator',\r\n    templateUrl: './tutorial-group-utilization-indicator.component.html',\r\n    styleUrls: ['./tutorial-group-utilization-indicator.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    imports: [VerticalProgressBarComponent, ArtemisTranslatePipe],\r\n})\r\nexport class TutorialGroupUtilizationIndicatorComponent {\r\n    readonly Math = Math;\r\n    @Input() tutorialGroup: TutorialGroup;\r\n}\r\n", "@if (tutorialGroup.averageAttendance !== undefined && tutorialGroup.capacity !== undefined) {\r\n    <jhi-vertical-progress-bar\r\n        [fillLevelInPercent]=\"Math.round((tutorialGroup.averageAttendance / tutorialGroup.capacity) * 100)\"\r\n        [widthInPixels]=\"20\"\r\n        [heightInPixels]=\"50\"\r\n        [tooltip]=\"'artemisApp.entities.tutorialGroup.averageAttendance' | artemisTranslate: { averageAttendance: tutorialGroup.averageAttendance }\"\r\n    >\r\n        >\r\n    </jhi-vertical-progress-bar>\r\n} @else {\r\n    <!-- We can at least show the average attendance even if capacity is not defined-->\r\n    <span>{{\r\n        tutorialGroup.averageAttendance !== undefined\r\n            ? ('artemisApp.entities.tutorialGroup.averageAttendance' | artemisTranslate: { averageAttendance: tutorialGroup.averageAttendance })\r\n            : ''\r\n    }}</span>\r\n}\r\n", "import { Pipe, PipeTransform } from '@angular/core';\r\nimport { TutorialGroupSchedule } from 'app/entities/tutorial-group/tutorial-group-schedule.model';\r\nimport { getDayTranslationKey } from 'app/course/tutorial-groups/shared/weekdays';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { RemoveSecondsPipe } from 'app/course/tutorial-groups/shared/remove-seconds.pipe';\r\n\r\n/**\r\n * A pipe that generates a translated meeting pattern given a tutorial group schedule\r\n * Example: 'Every Week, Monday from 14:00 to 15:00' English\r\n * Example: 'Jede Woche, Montag von 14:00 bis 15:00' German\r\n */\r\n@Pipe({ name: 'meetingPattern' })\r\nexport class MeetingPatternPipe implements PipeTransform {\r\n    removeSecondsPipe = new RemoveSecondsPipe();\r\n\r\n    constructor(private translateService: TranslateService) {}\r\n\r\n    /**\r\n     * Transforms a tutorial group schedule to a translated meeting pattern.\r\n     * @param schedule The tutorial group schedule to transform.\r\n     * @returns The translated meeting pattern.\r\n     */\r\n    transform(schedule: TutorialGroupSchedule | undefined, includeRepetitionFrequency = false): string {\r\n        if (!schedule) {\r\n            return '';\r\n        }\r\n\r\n        const weekDayTranslated = this.translateService.instant(getDayTranslationKey(schedule.dayOfWeek));\r\n        const repetitionTranslated = includeRepetitionFrequency ? `${this.getRepetitionTranslated(schedule.repetitionFrequency)}, ` : '';\r\n        const startTime = this.removeSecondsPipe.transform(schedule.startTime);\r\n        const endTime = this.removeSecondsPipe.transform(schedule.endTime);\r\n        return `${repetitionTranslated}${weekDayTranslated}, ${startTime} - ${endTime}`;\r\n    }\r\n\r\n    private getRepetitionTranslated(repetitionFrequency?: number) {\r\n        if (!repetitionFrequency) {\r\n            return '';\r\n        } else if (repetitionFrequency === 1) {\r\n            return this.translateService.instant(`artemisApp.generic.repetitions.everyWeek`);\r\n        } else {\r\n            return this.translateService.instant(`artemisApp.generic.repetitions.everyNWeeks`, { n: repetitionFrequency });\r\n        }\r\n    }\r\n}\r\n", "import { ChangeDetectionStrategy, Component, HostBinding, Input, TemplateRef, ViewEncapsulation } from '@angular/core';\r\nimport { TutorialGroup } from 'app/entities/tutorial-group/tutorial-group.model';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { RouterLink } from '@angular/router';\r\nimport { TutorialGroupUtilizationIndicatorComponent } from '../../tutorial-group-utilization-indicator/tutorial-group-utilization-indicator.component';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { NgTemplateOutlet } from '@angular/common';\r\nimport { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\nimport { MeetingPatternPipe } from 'app/course/tutorial-groups/shared/meeting-pattern.pipe';\r\n\r\n@Component({\r\n    selector: '[jhi-tutorial-group-row]',\r\n    templateUrl: './tutorial-group-row.component.html',\r\n    styleUrls: ['./tutorial-group-row.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    imports: [RouterLink, TutorialGroupUtilizationIndicatorComponent, TranslateDirective, NgTemplateOutlet, ArtemisDatePipe, ArtemisTranslatePipe, MeetingPatternPipe],\r\n})\r\nexport class TutorialGroupRowComponent {\r\n    readonly Math = Math;\r\n    @HostBinding('class') class = 'tutorial-group-row';\r\n\r\n    @Input()\r\n    showIdColumn = false;\r\n\r\n    /**\r\n     * If true we show the campus column\r\n     */\r\n    @Input()\r\n    tutorialGroupsSplitAcrossMultipleCampuses = false;\r\n    /**\r\n     * If true we show the online / offline column\r\n     */\r\n    @Input()\r\n    mixOfOfflineAndOfflineTutorialGroups = false;\r\n\r\n    /**\r\n     * If true we show the language column\r\n     */\r\n    @Input()\r\n    mifOfDifferentLanguages = false;\r\n\r\n    @Input()\r\n    showChannelColumn = false;\r\n\r\n    @Input() extraColumn: TemplateRef<any>;\r\n\r\n    @Input() tutorialGroup: TutorialGroup;\r\n\r\n    @Input() course: Course;\r\n\r\n    @Input() timeZone?: string = undefined;\r\n}\r\n", "<ng-container>\r\n    @if (showIdColumn) {\r\n        <td>\r\n            <a [id]=\"'id-' + tutorialGroup.id\" [routerLink]=\"['./', tutorialGroup.id!]\" class=\"link-primary\">{{ tutorialGroup.id }}</a>\r\n        </td>\r\n    }\r\n    <td>\r\n        <a [routerLink]=\"['./', tutorialGroup.id!]\" class=\"link-primary\">\r\n            <span class=\"d-inline-block text-truncate title\"> {{ tutorialGroup.title }} </span>\r\n        </a>\r\n    </td>\r\n    <td>\r\n        <jhi-tutorial-group-utilization-indicator [tutorialGroup]=\"tutorialGroup\" />\r\n    </td>\r\n    <td>{{ (tutorialGroup.numberOfRegisteredUsers ?? '') + ' / ' + (tutorialGroup.capacity ?? '') }}</td>\r\n    <td>{{ tutorialGroup.isUserTutor ? ('global.generic.you' | artemisTranslate) : tutorialGroup.teachingAssistantName }}</td>\r\n    <td>\r\n        @if (tutorialGroup.tutorialGroupSchedule) {\r\n            <span>\r\n                <!-- Only include repetition frequency if not the default of once per week -->\r\n                {{ tutorialGroup.tutorialGroupSchedule | meetingPattern: tutorialGroup.tutorialGroupSchedule.repetitionFrequency !== 1 }}\r\n            </span>\r\n        } @else {}\r\n    </td>\r\n    @if (mixOfOfflineAndOfflineTutorialGroups) {\r\n        <td jhiTranslate=\"{{ tutorialGroup.isOnline ? 'artemisApp.generic.online' : 'artemisApp.generic.offline' }}\"></td>\r\n    }\r\n    @if (mifOfDifferentLanguages) {\r\n        <td>\r\n            {{ tutorialGroup.language ? tutorialGroup.language : '' }}\r\n        </td>\r\n    }\r\n    @if (tutorialGroupsSplitAcrossMultipleCampuses) {\r\n        <td>\r\n            <span class=\"d-inline-block text-truncate long-text\"> {{ tutorialGroup.campus }} </span>\r\n        </td>\r\n    }\r\n    <td>\r\n        @if (tutorialGroup.nextSession) {\r\n            <span>\r\n                {{ tutorialGroup.nextSession.start | artemisDate: 'short-date' : false : timeZone! : true }}\r\n                {{ tutorialGroup.nextSession.start | artemisDate: 'time' : false : timeZone! }} -\r\n                {{ tutorialGroup.nextSession.end | artemisDate: 'time' : false : timeZone! }}\r\n            </span>\r\n        } @else {}\r\n    </td>\r\n    @if (showChannelColumn && tutorialGroup.channel) {\r\n        <td>\r\n            @if (tutorialGroup.channel.isMember) {\r\n                <a\r\n                    [id]=\"'channel-' + tutorialGroup.id + '-' + tutorialGroup.channel.id\"\r\n                    [routerLink]=\"['/courses', course.id!, 'communication']\"\r\n                    [queryParams]=\"{ conversationId: tutorialGroup.channel.id }\"\r\n                    class=\"link-primary\"\r\n                    >{{ tutorialGroup.channel.name }}</a\r\n                >\r\n            } @else {\r\n                <span>{{ tutorialGroup.channel.name }}</span>\r\n            }\r\n        </td>\r\n    }\r\n    <td>\r\n        <ng-template [ngTemplateOutlet]=\"extraColumn\" [ngTemplateOutletContext]=\"{ $implicit: tutorialGroup }\" />\r\n    </td>\r\n</ng-container>\r\n", "import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, Input, OnChanges, SimpleChanges, TemplateRef, inject } from '@angular/core';\r\nimport { faQuestionCircle, faSort } from '@fortawesome/free-solid-svg-icons';\r\nimport { TutorialGroup } from 'app/entities/tutorial-group/tutorial-group.model';\r\nimport { SortService } from 'app/shared/service/sort.service';\r\nimport { Course } from 'app/entities/course.model';\r\nimport dayjs from 'dayjs/esm';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { SortDirective } from 'app/shared/sort/sort.directive';\r\nimport { SortByDirective } from 'app/shared/sort/sort-by.directive';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { RouterLink } from '@angular/router';\r\nimport { TutorialGroupRowComponent } from './tutorial-group-row/tutorial-group-row.component';\r\nimport { NgClass } from '@angular/common';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-tutorial-groups-table',\r\n    templateUrl: './tutorial-groups-table.component.html',\r\n    styleUrls: ['./tutorial-groups-table.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    imports: [TranslateDirective, SortDirective, SortByDirective, FaIconComponent, NgbTooltip, RouterLink, TutorialGroupRowComponent, NgClass, ArtemisTranslatePipe],\r\n})\r\nexport class TutorialGroupsTableComponent implements OnChanges {\r\n    private sortService = inject(SortService);\r\n    private cdr = inject(ChangeDetectorRef);\r\n\r\n    @ContentChild(TemplateRef, { static: true }) extraColumn: TemplateRef<any>;\r\n\r\n    @Input()\r\n    showIdColumn = false;\r\n\r\n    @Input()\r\n    showChannelColumn = false;\r\n\r\n    @Input()\r\n    tutorialGroups: TutorialGroup[] = [];\r\n\r\n    @Input()\r\n    course: Course;\r\n\r\n    @Input()\r\n    timeZone?: string = undefined;\r\n\r\n    timeZoneUsedForDisplay = dayjs.tz.guess();\r\n\r\n    sortingPredicate = 'title';\r\n    ascending = true;\r\n    faSort = faSort;\r\n    faQuestionCircle = faQuestionCircle;\r\n\r\n    /**\r\n     * If true we show the campus column\r\n     */\r\n    tutorialGroupsSplitAcrossMultipleCampuses = false;\r\n    /**\r\n     * If true we show the online / offline column\r\n     */\r\n    mixOfOfflineAndOfflineTutorialGroups = false;\r\n\r\n    /**\r\n     * If true we show the language column\r\n     */\r\n    mifOfDifferentLanguages = false;\r\n\r\n    trackId(index: number, item: TutorialGroup) {\r\n        return item.id;\r\n    }\r\n\r\n    sortRows() {\r\n        if (this.sortingPredicate === 'dayAndTime') {\r\n            this.sortService.sortByMultipleProperties(this.tutorialGroups, ['tutorialGroupSchedule.dayOfWeek', 'tutorialGroupSchedule.startTime'], this.ascending);\r\n        } else if (this.sortingPredicate === 'capacityAndRegistrations') {\r\n            this.sortService.sortByMultipleProperties(this.tutorialGroups, ['capacity', 'numberOfRegisteredUsers'], this.ascending);\r\n        } else {\r\n            this.sortService.sortByProperty(this.tutorialGroups, this.sortingPredicate, this.ascending);\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        for (const propName in changes) {\r\n            if (changes.hasOwnProperty(propName)) {\r\n                const change = changes[propName];\r\n                switch (propName) {\r\n                    case 'timeZone': {\r\n                        if (change.currentValue) {\r\n                            this.timeZoneUsedForDisplay = change.currentValue;\r\n                            this.cdr.detectChanges();\r\n                        }\r\n                        break;\r\n                    }\r\n                    case 'tutorialGroups':\r\n                        {\r\n                            if (change.currentValue && change.currentValue.length > 0) {\r\n                                this.tutorialGroupsSplitAcrossMultipleCampuses = this.tutorialGroups.some(\r\n                                    (tutorialGroup) => tutorialGroup.campus !== this.tutorialGroups[0].campus,\r\n                                );\r\n                                this.mixOfOfflineAndOfflineTutorialGroups = this.tutorialGroups.some((tutorialGroup) => tutorialGroup.isOnline !== this.tutorialGroups[0].isOnline);\r\n                                this.mifOfDifferentLanguages = this.tutorialGroups.some((tutorialGroup) => tutorialGroup.language !== this.tutorialGroups[0].language);\r\n                                this.cdr.detectChanges();\r\n                            }\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n", "<div class=\"table-responsive tutorial-groups-table\">\r\n    <div class=\"col-12 mb-2\">\r\n        <div\r\n            class=\"alert alert-info\"\r\n            jhiTranslate=\"artemisApp.pages.tutorialGroupSessionManagement.timeZoneExplanation\"\r\n            [translateValues]=\"{ timeZone: timeZoneUsedForDisplay }\"\r\n        ></div>\r\n    </div>\r\n    <table class=\"table table-sm table-hover\">\r\n        <thead>\r\n            <tr jhiSort [(predicate)]=\"sortingPredicate\" [(ascending)]=\"ascending\" (sortChange)=\"sortRows()\">\r\n                @if (showIdColumn) {\r\n                    <th jhiSortBy=\"id\">\r\n                        <a class=\"th-link\" jhiTranslate=\"global.field.id\"></a>\r\n                        <fa-icon [icon]=\"faSort\" />\r\n                    </th>\r\n                }\r\n                <th jhiSortBy=\"title\">\r\n                    <a class=\"th-link\" jhiTranslate=\"artemisApp.entities.tutorialGroup.title\"></a>\r\n                    <fa-icon [icon]=\"faSort\" />\r\n                </th>\r\n                <th>\r\n                    <span jhiTranslate=\"artemisApp.entities.tutorialGroup.utilization\"></span>\r\n                    <fa-icon [icon]=\"faQuestionCircle\" class=\"text-secondary\" ngbTooltip=\"{{ 'artemisApp.entities.tutorialGroup.utilizationHelp' | artemisTranslate }}\" />\r\n                </th>\r\n                <th jhiSortBy=\"capacityAndRegistrations\">\r\n                    <a class=\"th-link\" jhiTranslate=\"artemisApp.entities.tutorialGroup.registrationsWithCapacity\"></a>\r\n                    <fa-icon [icon]=\"faSort\" />\r\n                </th>\r\n                <th jhiSortBy=\"teachingAssistantName\">\r\n                    <a class=\"th-link\" jhiTranslate=\"artemisApp.entities.tutorialGroup.teachingAssistant\"></a>\r\n                    <fa-icon [icon]=\"faSort\" />\r\n                </th>\r\n                <th jhiSortBy=\"dayAndTime\">\r\n                    <a class=\"th-link\" jhiTranslate=\"artemisApp.entities.tutorialGroup.locationTime\"></a>\r\n                    <fa-icon [icon]=\"faSort\" />\r\n                </th>\r\n                @if (mixOfOfflineAndOfflineTutorialGroups) {\r\n                    <th jhiSortBy=\"isOnline\" id=\"online-column\">\r\n                        <a class=\"th-link\" jhiTranslate=\"artemisApp.entities.tutorialGroup.isOnline\"></a>\r\n                        <fa-icon [icon]=\"faSort\" />\r\n                    </th>\r\n                }\r\n                @if (mifOfDifferentLanguages) {\r\n                    <th jhiSortBy=\"language\" id=\"language-column\">\r\n                        <a class=\"th-link\" jhiTranslate=\"artemisApp.entities.tutorialGroup.language\"></a>\r\n                        <fa-icon [icon]=\"faSort\" />\r\n                    </th>\r\n                }\r\n                @if (tutorialGroupsSplitAcrossMultipleCampuses) {\r\n                    <th jhiSortBy=\"campus\" id=\"campus-column\">\r\n                        <a class=\"th-link\" jhiTranslate=\"artemisApp.entities.tutorialGroup.campus\"></a>\r\n                        <fa-icon [icon]=\"faSort\" />\r\n                    </th>\r\n                }\r\n                <th jhiSortBy=\"nextSession\">\r\n                    <a class=\"th-link\" jhiTranslate=\"artemisApp.entities.tutorialGroup.nextSession\"></a>\r\n                    <fa-icon [icon]=\"faSort\" />\r\n                </th>\r\n                @if (showChannelColumn) {\r\n                    <th>\r\n                        <a class=\"th-link\" [routerLink]=\"['/courses', course.id!, 'communication']\" jhiTranslate=\"artemisApp.entities.tutorialGroup.channel\"></a>\r\n                    </th>\r\n                }\r\n                @if (extraColumn) {\r\n                    <th></th>\r\n                }\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            @for (tutorialGroup of tutorialGroups; track trackId($index, tutorialGroup)) {\r\n                <tr\r\n                    jhi-tutorial-group-row\r\n                    id=\"tutorial-group-row-{{ tutorialGroup.id }}\"\r\n                    [ngClass]=\"{\r\n                        'table-success': tutorialGroup.isUserRegistered,\r\n                        'is-user-tutor': tutorialGroup.isUserTutor,\r\n                        'is-user-not-tutor': !tutorialGroup.isUserTutor,\r\n                    }\"\r\n                    [tutorialGroup]=\"tutorialGroup\"\r\n                    [course]=\"course\"\r\n                    [extraColumn]=\"extraColumn\"\r\n                    [showIdColumn]=\"showIdColumn\"\r\n                    [showChannelColumn]=\"showChannelColumn\"\r\n                    [timeZone]=\"timeZone\"\r\n                    [mifOfDifferentLanguages]=\"mifOfDifferentLanguages\"\r\n                    [mixOfOfflineAndOfflineTutorialGroups]=\"mixOfOfflineAndOfflineTutorialGroups\"\r\n                    [tutorialGroupsSplitAcrossMultipleCampuses]=\"tutorialGroupsSplitAcrossMultipleCampuses\"\r\n                ></tr>\r\n            }\r\n        </tbody>\r\n    </table>\r\n</div>\r\n", "import { Component, ElementRef, Input, OnDestroy, OnInit, ViewChild, inject } from '@angular/core';\r\nimport { faBan, faCheck, faCircleNotch, faFileImport, faSpinner } from '@fortawesome/free-solid-svg-icons';\r\nimport { TutorialGroupRegistrationImportDTO } from 'app/entities/tutorial-group/tutorial-group-import-dto.model';\r\nimport { cleanString } from 'app/shared/util/utils';\r\nimport { ParseResult, parse } from 'papaparse';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { TutorialGroupsService } from 'app/course/tutorial-groups/services/tutorial-groups.service';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Subject } from 'rxjs';\r\nimport { StudentDTO } from 'app/entities/student-dto.model';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { titleRegex } from 'app/course/tutorial-groups/tutorial-groups-management/tutorial-groups/crud/tutorial-group-form/tutorial-group-form.component';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { CsvDownloadService } from 'app/shared/util/CsvDownloadService';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n/**\r\n * Each row is a object with the structure\r\n * \t{\r\n * \t\t\"Column Header 1\": \"foo\",\r\n * \t\t\"Column Header 2\": \"bar\"\r\n * \t}\r\n */\r\ntype ParsedCSVRow = { [header: string]: string };\r\n\r\n// ToDo: Idea for future: Let the specify the column names / values in the dialog\r\nconst POSSIBLE_TUTORIAL_GROUP_TITLE_HEADERS = ['gruppe', 'titel', 'group', 'title', 'tutorialgroups'];\r\nconst POSSIBLE_REGISTRATION_NUMBER_HEADERS = ['registrationnumber', 'matriculationnumber', 'matrikelnummer', 'number'];\r\nconst POSSIBLE_LOGIN_HEADERS = ['login', 'user', 'username', 'benutzer', 'benutzername', 'anmeldename'];\r\nconst POSSIBLE_FIRST_NAME_HEADERS = ['firstname', 'firstnameofstudent', 'givenname', 'forename', 'vorname'];\r\nconst POSSIBLE_LAST_NAME_HEADERS = ['familyname', 'lastname', 'familynameofstudent', 'surname', 'nachname', 'familienname', 'name'];\r\nconst POSSIBLE_CAMPUS_HEADERS = ['campus'];\r\nconst POSSIBLE_CAPACITY_HEADERS = ['capacity'];\r\nconst POSSIBLE_LANGUAGE_HEADERS = ['language', 'sprache'];\r\nconst POSSIBLE_ADDITIONAL_INFO_HEADERS = ['additionalinformation'];\r\nconst POSSIBLE_IS_ONLINE_HEADERS = ['isonline', 'ist Online'];\r\n\r\ntype filterValues = 'all' | 'onlyImported' | 'onlyNotImported';\r\n\r\n@Component({\r\n    selector: 'jhi-tutorial-groups-import-dialog',\r\n    templateUrl: './tutorial-groups-registration-import-dialog.component.html',\r\n    styleUrls: ['./tutorial-groups-registration-import-dialog.component.scss'],\r\n    imports: [TranslateDirective, FaIconComponent, FormsModule, ReactiveFormsModule, ArtemisTranslatePipe],\r\n})\r\nexport class TutorialGroupsRegistrationImportDialogComponent implements OnInit, OnDestroy {\r\n    private fb = inject(FormBuilder);\r\n    private translateService = inject(TranslateService);\r\n    private activeModal = inject(NgbActiveModal);\r\n    private alertService = inject(AlertService);\r\n    private tutorialGroupService = inject(TutorialGroupsService);\r\n    private csvDownloadService = inject(CsvDownloadService);\r\n\r\n    ngUnsubscribe = new Subject<void>();\r\n\r\n    @ViewChild('fileInput') fileInput: ElementRef<HTMLInputElement>;\r\n    selectedFile?: File;\r\n\r\n    @Input() courseId: number;\r\n\r\n    registrationsDisplayedInTable: TutorialGroupRegistrationImportDTO[] = [];\r\n    allRegistrations: TutorialGroupRegistrationImportDTO[] = [];\r\n    notImportedRegistrations: TutorialGroupRegistrationImportDTO[] = [];\r\n    importedRegistrations: TutorialGroupRegistrationImportDTO[] = [];\r\n\r\n    isCSVParsing = false;\r\n    protected readonly CsvExample = CsvExample;\r\n    validationErrors: string[] = [];\r\n    isImporting = false;\r\n    isImportDone = false;\r\n    numberOfImportedRegistrations = 0;\r\n    numberOfNotImportedRegistration = 0;\r\n    dialogErrorSource = new Subject<string>();\r\n    dialogError$ = this.dialogErrorSource.asObservable();\r\n\r\n    supportedTitleHeader = POSSIBLE_TUTORIAL_GROUP_TITLE_HEADERS.join(', ');\r\n    supportedRegistrationNumberHeaders = POSSIBLE_REGISTRATION_NUMBER_HEADERS.join(', ');\r\n    supportedLoginHeaders = POSSIBLE_LOGIN_HEADERS.join(', ');\r\n    supportedFirstNameHeaders = POSSIBLE_FIRST_NAME_HEADERS.join(', ');\r\n    supportedLastNameHeaders = POSSIBLE_LAST_NAME_HEADERS.join(', ');\r\n\r\n    fixedPlaceForm: FormGroup;\r\n\r\n    get statusHeaderControl() {\r\n        return this.fixedPlaceForm.get('statusHeader');\r\n    }\r\n    get fixedPlaceValueControl() {\r\n        return this.fixedPlaceForm.get('fixedPlaceValue');\r\n    }\r\n    get specifyFixedPlaceControl() {\r\n        return this.fixedPlaceForm.get('specifyFixedPlace');\r\n    }\r\n\r\n    // Icons\r\n    faBan = faBan;\r\n    faSpinner = faSpinner;\r\n    faCheck = faCheck;\r\n    faCircleNotch = faCircleNotch;\r\n    faFileImport = faFileImport;\r\n    selectedFilter: filterValues = 'all';\r\n\r\n    ngOnDestroy(): void {\r\n        this.ngUnsubscribe.next();\r\n        this.ngUnsubscribe.complete();\r\n        this.dialogErrorSource.unsubscribe();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.fixedPlaceForm = this.fb.group({\r\n            specifyFixedPlace: [false],\r\n            statusHeader: ['', [Validators.maxLength(255)]],\r\n            fixedPlaceValue: ['', [Validators.maxLength(255)]],\r\n        });\r\n        this.fixedPlaceValueControl?.disable();\r\n        this.statusHeaderControl?.disable();\r\n        this.onStatusChanges();\r\n        this.onFixedPlaceCheckboxChange();\r\n    }\r\n\r\n    onStatusChanges() {\r\n        this.statusHeaderControl?.valueChanges.pipe(takeUntil(this.ngUnsubscribe)).subscribe((selectedStatusColumn) => {\r\n            if (!selectedStatusColumn) {\r\n                this.fixedPlaceValueControl?.reset('', { emitEvent: false });\r\n                this.fixedPlaceValueControl?.disable();\r\n            } else {\r\n                this.fixedPlaceValueControl?.enable();\r\n            }\r\n        });\r\n    }\r\n\r\n    onFixedPlaceCheckboxChange() {\r\n        this.specifyFixedPlaceControl?.valueChanges.pipe(takeUntil(this.ngUnsubscribe)).subscribe((specifyFixedPlace) => {\r\n            this.fixedPlaceValueControl?.reset('', { emitEvent: false });\r\n            this.statusHeaderControl?.reset('', { emitEvent: false });\r\n            if (specifyFixedPlace) {\r\n                this.statusHeaderControl?.enable();\r\n                this.fixedPlaceValueControl?.enable();\r\n            } else {\r\n                this.statusHeaderControl?.disable();\r\n                this.fixedPlaceValueControl?.disable();\r\n            }\r\n        });\r\n    }\r\n\r\n    get isParseDisabled() {\r\n        return (\r\n            this.selectedFile === undefined ||\r\n            this.isCSVParsing ||\r\n            this.isImporting ||\r\n            (this.specifyFixedPlaceControl?.value && (!this.statusHeaderControl?.value || !this.fixedPlaceValueControl?.value)) ||\r\n            this.fixedPlaceForm.invalid\r\n        );\r\n    }\r\n\r\n    get isSubmitDisabled(): boolean {\r\n        return this.isImporting || !this.registrationsDisplayedInTable?.length;\r\n    }\r\n\r\n    resetDialog() {\r\n        this.registrationsDisplayedInTable = [];\r\n        this.allRegistrations = [];\r\n        this.notImportedRegistrations = [];\r\n        this.importedRegistrations = [];\r\n        this.validationErrors = [];\r\n        this.isImportDone = false;\r\n        this.isImporting = false;\r\n        this.isCSVParsing = false;\r\n        this.numberOfImportedRegistrations = 0;\r\n        this.numberOfNotImportedRegistration = 0;\r\n    }\r\n\r\n    onCSVFileSelected(event: Event) {\r\n        const target = event.target as HTMLInputElement;\r\n\r\n        if (target.files && target.files.length > 0) {\r\n            this.resetDialog();\r\n            if (target.files[0]) {\r\n                this.selectedFile = target.files[0];\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reads registrations from a csv file\r\n     * The column \"title\" is mandatory, all other columns are optional\r\n     * @param csvFile File that contains one registration per row\r\n     */\r\n    private async readRegistrationsFromCSVFile(csvFile: File): Promise<TutorialGroupRegistrationImportDTO[]> {\r\n        let csvRows: ParsedCSVRow[] = [];\r\n        try {\r\n            this.isCSVParsing = true;\r\n            this.validationErrors = [];\r\n            const parseResult = await this.parseCSVFile(csvFile);\r\n\r\n            if (parseResult.errors.length > 0) {\r\n                const errorMessagesCombined = parseResult.errors.map((error) => error.message).join('|');\r\n                this.validationErrors.push(errorMessagesCombined);\r\n            } else {\r\n                csvRows = parseResult.data as ParsedCSVRow[];\r\n            }\r\n        } catch (error) {\r\n            this.validationErrors.push(error.message);\r\n        } finally {\r\n            this.isCSVParsing = false;\r\n        }\r\n\r\n        if (csvRows && csvRows.length > 0) {\r\n            this.performExtraRowValidation(csvRows);\r\n        }\r\n        if (this.validationErrors && this.validationErrors.length > 0) {\r\n            this.resetFileUpload();\r\n            return [];\r\n        }\r\n        // get the used headers from the first csv row object returned by the parser\r\n        let parsedHeaders = Object.keys(csvRows.first() || []);\r\n        parsedHeaders = parsedHeaders.map(this.removeWhitespacesAndUnderscoresFromHeaderName);\r\n\r\n        // we find out which of the possible values is used in the csv file for the respective properties\r\n        const usedTitleHeader = parsedHeaders.find((value) => POSSIBLE_TUTORIAL_GROUP_TITLE_HEADERS.includes(value)) || '';\r\n        const usedRegistrationNumberHeader = parsedHeaders.find((value) => POSSIBLE_REGISTRATION_NUMBER_HEADERS.includes(value)) || '';\r\n        const usedLoginHeader = parsedHeaders.find((value) => POSSIBLE_LOGIN_HEADERS.includes(value)) || '';\r\n        const usedFirstNameHeader = parsedHeaders.find((value) => POSSIBLE_FIRST_NAME_HEADERS.includes(value)) || '';\r\n        const usedLastNameHeader = parsedHeaders.find((value) => POSSIBLE_LAST_NAME_HEADERS.includes(value)) || '';\r\n        const usedCampusHeader = parsedHeaders.find((value) => POSSIBLE_CAMPUS_HEADERS.includes(value)) || '';\r\n        const usedCapacityHeader = parsedHeaders.find((value) => POSSIBLE_CAPACITY_HEADERS.includes(value)) || '';\r\n        const usedLanguageHeader = parsedHeaders.find((value) => POSSIBLE_LANGUAGE_HEADERS.includes(value)) || '';\r\n        const usedAdditionalInfoHeader = parsedHeaders.find((value) => POSSIBLE_ADDITIONAL_INFO_HEADERS.includes(value)) || '';\r\n        const usedIsOnlineHeader = parsedHeaders.find((value) => POSSIBLE_IS_ONLINE_HEADERS.includes(value)) || '';\r\n\r\n        // if status header is used filter out those rows that do not have a fixed place\r\n        const statusColumn = cleanString(this.statusHeaderControl?.value);\r\n        const fixedPlaceValue = cleanString(this.fixedPlaceValueControl?.value);\r\n\r\n        const csvFixedPlaceRows = csvRows.filter((row) => !statusColumn || !fixedPlaceValue || cleanString(row[statusColumn]) === fixedPlaceValue);\r\n        // convert the 'raw' csv rows into a list of TutorialGroupImportDTOs\r\n        const registrations = csvFixedPlaceRows\r\n            .map((csvRow) => {\r\n                const registration: TutorialGroupRegistrationImportDTO = {\r\n                    title: csvRow[usedTitleHeader]?.trim() || '',\r\n                } as TutorialGroupRegistrationImportDTO;\r\n                registration.student = {\r\n                    registrationNumber: csvRow[usedRegistrationNumberHeader]?.trim() || '',\r\n                    login: csvRow[usedLoginHeader]?.trim() || '',\r\n                    firstName: csvRow[usedFirstNameHeader]?.trim() || '',\r\n                    lastName: csvRow[usedLastNameHeader]?.trim() || '',\r\n                } as StudentDTO;\r\n                registration.campus = csvRow[usedCampusHeader]?.trim() || '';\r\n                registration.capacity = csvRow[usedCapacityHeader] ? Number(csvRow[usedCapacityHeader]) : undefined;\r\n                registration.language = csvRow[usedLanguageHeader]?.trim() || '';\r\n                registration.additionalInformation = csvRow[usedAdditionalInfoHeader]?.trim() || '';\r\n                registration.isOnline = csvRow[usedIsOnlineHeader]?.trim().toLowerCase() || '';\r\n\r\n                return registration;\r\n            })\r\n            .sort((a, b) => a.title.localeCompare(b.title));\r\n\r\n        this.performExtraDTOValidation(registrations);\r\n        if (this.validationErrors && this.validationErrors.length > 0) {\r\n            this.resetFileUpload();\r\n            return [];\r\n        } else {\r\n            return registrations;\r\n        }\r\n    }\r\n\r\n    removeWhitespacesAndUnderscoresFromHeaderName(header: string) {\r\n        return header.trim().toLowerCase().replace(/_/g, '-').replace(/\\s+/g, '');\r\n    }\r\n\r\n    resetFileUpload() {\r\n        this.fileInput.nativeElement.value = ''; // remove selected file so user can fix the file and select it again\r\n        this.selectedFile = undefined;\r\n    }\r\n\r\n    import() {\r\n        this.isImporting = true;\r\n        this.tutorialGroupService.import(this.courseId, this.registrationsDisplayedInTable).subscribe({\r\n            next: (res) => this.onSaveSuccess(res),\r\n            error: () => this.onSaveError(),\r\n        });\r\n    }\r\n\r\n    generateCSV(example: CsvExample) {\r\n        let csvContent: string;\r\n        switch (example) {\r\n            case CsvExample.Example1:\r\n                csvContent = 'data:text/csv;charset=utf-8,Title\\n';\r\n                break;\r\n            case CsvExample.Example2:\r\n                csvContent = 'data:text/csv;charset=utf-8,Title,Matriculation Number,First Name,Last Name\\n';\r\n                break;\r\n            case CsvExample.Example3:\r\n                csvContent = 'data:text/csv;charset=utf-8,Title,Login,First Name,Last Name\\n';\r\n                break;\r\n            case CsvExample.Example4:\r\n                csvContent = 'data:text/csv;charset=utf-8,Title,Registration Number,First Name,Last Name,Campus,Language,Additional Information,Capacity,Is Online\\n';\r\n                break;\r\n            default:\r\n                csvContent = '';\r\n        }\r\n        this.csvDownloadService.downloadCSV(csvContent, `example${example}.csv`);\r\n    }\r\n\r\n    /**\r\n     * Performs validations on the parsed csv rows\r\n     * - checks if values for the required column 'tutorial group title' are present\r\n     *\r\n     * @param csvRows Parsed list of rows\r\n     */\r\n    performExtraRowValidation(csvRows: ParsedCSVRow[]): void {\r\n        const titleValidationError = this.withoutTitleValidation(csvRows);\r\n        const titleRegexValidationError = this.titleRegexValidation(csvRows);\r\n        const withoutIdentifierValidationError = this.withoutIdentifierValidation(csvRows);\r\n        const maxLength = 1000;\r\n        if (titleValidationError !== null) {\r\n            this.validationErrors.push(titleValidationError.length <= maxLength ? titleValidationError : titleValidationError.slice(0, maxLength) + '...');\r\n        }\r\n        if (titleRegexValidationError !== null) {\r\n            this.validationErrors.push(titleRegexValidationError.length <= maxLength ? titleRegexValidationError : titleRegexValidationError.slice(0, maxLength) + '...');\r\n        }\r\n        if (withoutIdentifierValidationError !== null) {\r\n            this.validationErrors.push(\r\n                withoutIdentifierValidationError.length <= maxLength ? withoutIdentifierValidationError : withoutIdentifierValidationError.slice(0, maxLength) + '...',\r\n            );\r\n        }\r\n    }\r\n\r\n    performExtraDTOValidation(registrations: TutorialGroupRegistrationImportDTO[]): void {\r\n        const duplicatedRegistrationNumbers = this.duplicatedRegistrationNumbers(registrations);\r\n        const maxLength = 1000;\r\n        if (duplicatedRegistrationNumbers !== null) {\r\n            this.validationErrors.push(\r\n                duplicatedRegistrationNumbers.length <= maxLength ? duplicatedRegistrationNumbers : duplicatedRegistrationNumbers.slice(0, maxLength) + '...',\r\n            );\r\n        }\r\n        const duplicatedLogins = this.duplicatedLogins(registrations);\r\n        if (duplicatedLogins !== null) {\r\n            this.validationErrors.push(duplicatedLogins.length <= maxLength ? duplicatedLogins : duplicatedLogins.slice(0, maxLength) + '...');\r\n        }\r\n    }\r\n\r\n    withoutTitleValidation(csvRows: ParsedCSVRow[]): string | null {\r\n        const invalidList: number[] = [];\r\n        for (const [i, row] of csvRows.entries()) {\r\n            const hasTutorialGroupTitle = this.checkIfRowContainsKey(row, POSSIBLE_TUTORIAL_GROUP_TITLE_HEADERS);\r\n            if (!hasTutorialGroupTitle) {\r\n                // '+ 2' instead of '+ 1' due to the header column in the csv file\r\n                invalidList.push(i + 2);\r\n            }\r\n        }\r\n        return invalidList.length === 0 ? null : this.translateService.instant('artemisApp.tutorialGroupImportDialog.errorMessages.withoutTitle') + invalidList.join(', ');\r\n    }\r\n    titleRegexValidation(csvRows: ParsedCSVRow[]): string | null {\r\n        const invalidList: number[] = [];\r\n        for (const [i, row] of csvRows.entries()) {\r\n            const hasTutorialGroupTitle = this.checkIfRowContainsKey(row, POSSIBLE_TUTORIAL_GROUP_TITLE_HEADERS);\r\n            if (hasTutorialGroupTitle) {\r\n                const titleHeader = POSSIBLE_TUTORIAL_GROUP_TITLE_HEADERS.find((value) => row[value] !== undefined && row[value] !== null && row[value].trim() !== '');\r\n                if (titleHeader) {\r\n                    const title = row[titleHeader];\r\n                    const regex = titleRegex;\r\n                    if (!regex.test(title)) {\r\n                        invalidList.push(i + 2);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return invalidList.length === 0 ? null : this.translateService.instant('artemisApp.tutorialGroupImportDialog.errorMessages.invalidTitle') + invalidList.join(', ');\r\n    }\r\n\r\n    withoutIdentifierValidation(csvRows: ParsedCSVRow[]): string | null {\r\n        const invalidList: number[] = [];\r\n        for (const [i, user] of csvRows.entries()) {\r\n            const specifiesAUser = this.checkIfRowContainsKey(user, POSSIBLE_FIRST_NAME_HEADERS) || this.checkIfRowContainsKey(user, POSSIBLE_LAST_NAME_HEADERS);\r\n            const specifiesARegistrationNumber = this.checkIfRowContainsKey(user, POSSIBLE_REGISTRATION_NUMBER_HEADERS);\r\n            const specifiesALogin = this.checkIfRowContainsKey(user, POSSIBLE_LOGIN_HEADERS);\r\n\r\n            if (specifiesAUser && !(specifiesARegistrationNumber || specifiesALogin)) {\r\n                // '+ 2' instead of '+ 1' due to the header column in the csv file\r\n                invalidList.push(i + 2);\r\n            }\r\n        }\r\n        return invalidList.length === 0\r\n            ? null\r\n            : this.translateService.instant('artemisApp.tutorialGroupImportDialog.errorMessages.noIdentificationInformation') + invalidList.join(', ');\r\n    }\r\n\r\n    duplicatedRegistrationNumbers(registrations: TutorialGroupRegistrationImportDTO[]): string | null {\r\n        const duplicatedRegistrationNumbers: string[] = [];\r\n        const registrationNumbers = registrations.map((registration) => registration.student?.registrationNumber).filter((registrationNumber) => registrationNumber);\r\n\r\n        const uniqueRegistrationNumbers = [...new Set(registrationNumbers)];\r\n\r\n        uniqueRegistrationNumbers.forEach((registrationNumber) => {\r\n            if (registrationNumbers.filter((rn) => rn === registrationNumber).length > 1) {\r\n                duplicatedRegistrationNumbers.push(registrationNumber);\r\n            }\r\n        });\r\n\r\n        return duplicatedRegistrationNumbers.length === 0\r\n            ? null\r\n            : this.translateService.instant('artemisApp.tutorialGroupImportDialog.errorMessages.duplicatedRegistrationNumbers') + duplicatedRegistrationNumbers.join(', ');\r\n    }\r\n\r\n    duplicatedLogins(registrations: TutorialGroupRegistrationImportDTO[]): string | null {\r\n        const duplicatedLogins: string[] = [];\r\n        const logins = registrations.map((registration) => registration.student?.login).filter((login) => login);\r\n\r\n        const uniqueLogins = [...new Set(logins)];\r\n\r\n        uniqueLogins.forEach((login) => {\r\n            if (logins.filter((l) => l === login).length > 1) {\r\n                duplicatedLogins.push(login);\r\n            }\r\n        });\r\n\r\n        return duplicatedLogins.length === 0\r\n            ? null\r\n            : this.translateService.instant('artemisApp.tutorialGroupImportDialog.errorMessages.duplicatedLogins') + duplicatedLogins.join(', ');\r\n    }\r\n\r\n    /**\r\n     * Checks if the csv row contains one of the supplied keys.\r\n     * @param csvRow which should be checked if it contains one of the keys.\r\n     * @param keys that should be checked for in the row.\r\n     */\r\n    checkIfRowContainsKey(csvRow: ParsedCSVRow, keys: string[]): boolean {\r\n        return keys.some((key) => csvRow[key] !== undefined && csvRow[key] !== null && csvRow[key] !== '');\r\n    }\r\n\r\n    clear() {\r\n        if (this.isImportDone) {\r\n            this.activeModal.close();\r\n        } else {\r\n            this.activeModal.dismiss('cancel');\r\n        }\r\n    }\r\n\r\n    onFinish() {\r\n        this.activeModal.close();\r\n    }\r\n\r\n    onSaveSuccess(registrations: HttpResponse<TutorialGroupRegistrationImportDTO[]>) {\r\n        this.isImporting = false;\r\n        this.isImportDone = true;\r\n        this.registrationsDisplayedInTable = registrations.body ?? [];\r\n        this.registrationsDisplayedInTable = this.registrationsDisplayedInTable.sort((a, b) => a.title.localeCompare(b.title));\r\n        this.allRegistrations = this.registrationsDisplayedInTable;\r\n        this.notImportedRegistrations = this.allRegistrations.filter((registration) => registration.importSuccessful !== true);\r\n        this.importedRegistrations = this.allRegistrations.filter((registration) => registration.importSuccessful === true);\r\n        this.numberOfNotImportedRegistration = this.notImportedRegistrations.length;\r\n        this.numberOfImportedRegistrations = this.importedRegistrations.length;\r\n    }\r\n\r\n    onSaveError() {\r\n        this.alertService.error('artemisApp.tutorialGroupImportDialog.errorMessages.genericErrorMessage');\r\n        this.isImporting = false;\r\n    }\r\n\r\n    wasImported(registration: TutorialGroupRegistrationImportDTO): boolean {\r\n        return this.isImportDone && registration.importSuccessful === true;\r\n    }\r\n\r\n    wasNotImported(registration: TutorialGroupRegistrationImportDTO): boolean {\r\n        return this.isImportDone && registration.importSuccessful !== true;\r\n    }\r\n\r\n    /**\r\n     * Parses a csv file and returns a promise with a list of rows\r\n     * @param csvFile File that should be parsed\r\n     */\r\n    async parseCSVFile(csvFile: File): Promise<ParseResult<unknown>> {\r\n        return new Promise((resolve, reject) => {\r\n            parse(csvFile, {\r\n                delimiter: ',',\r\n                header: true,\r\n                transformHeader: (header: string) => cleanString(header),\r\n                skipEmptyLines: true,\r\n                complete: (results) => resolve(results),\r\n                error: (error) => reject(error),\r\n            });\r\n        });\r\n    }\r\n\r\n    async onParseClicked() {\r\n        this.resetDialog();\r\n        if (this.selectedFile) {\r\n            this.registrationsDisplayedInTable = await this.readRegistrationsFromCSVFile(this.selectedFile);\r\n        }\r\n    }\r\n\r\n    onFilterChange(newFilterValue: filterValues) {\r\n        this.selectedFilter = newFilterValue;\r\n        switch (newFilterValue) {\r\n            case 'all':\r\n                this.registrationsDisplayedInTable = this.allRegistrations;\r\n                break;\r\n            case 'onlyImported':\r\n                this.registrationsDisplayedInTable = this.importedRegistrations;\r\n                break;\r\n            case 'onlyNotImported':\r\n                this.registrationsDisplayedInTable = this.notImportedRegistrations;\r\n        }\r\n    }\r\n}\r\n\r\nenum CsvExample {\r\n    Example1 = 1,\r\n    Example2 = 2,\r\n    Example3 = 3,\r\n    Example4 = 5,\r\n}\r\n", "<div class=\"tutorial-group-import-dialog\">\r\n    <div class=\"modal-header\">\r\n        <h4 class=\"modal-title\">\r\n            <span jhiTranslate=\"artemisApp.tutorialGroupImportDialog.dialogTitle\"></span>\r\n        </h4>\r\n        <button type=\"button\" class=\"btn-close\" (click)=\"clear()\"></button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <!-- Intro-->\r\n        <div class=\"form-group\">\r\n            <p jhiTranslate=\"artemisApp.tutorialGroupImportDialog.explanations.description\"></p>\r\n            <p jhiTranslate=\"artemisApp.tutorialGroupImportDialog.explanations.requirements\"></p>\r\n            <p jhiTranslate=\"artemisApp.tutorialGroupImportDialog.supportedHeaderNames.label\"></p>\r\n            <p jhiTranslate=\"artemisApp.tutorialGroupImportDialog.supportedHeaderNames.format\"></p>\r\n            <ul>\r\n                <li jhiTranslate=\"artemisApp.tutorialGroupImportDialog.supportedHeaderNames.alwaysRequired\"></li>\r\n                <ul>\r\n                    <li jhiTranslate=\"artemisApp.tutorialGroupImportDialog.supportedHeaderNames.tutorialGroupTitle\"></li>\r\n                </ul>\r\n                <li jhiTranslate=\"artemisApp.tutorialGroupImportDialog.supportedHeaderNames.requiredIfStudentRegistration\"></li>\r\n                <ul>\r\n                    <li jhiTranslate=\"artemisApp.tutorialGroupImportDialog.supportedHeaderNames.registrationNumber\"></li>\r\n                    <li jhiTranslate=\"artemisApp.tutorialGroupImportDialog.supportedHeaderNames.login\"></li>\r\n                </ul>\r\n                <li jhiTranslate=\"artemisApp.tutorialGroupImportDialog.supportedHeaderNames.alwaysOptional\"></li>\r\n                <ul>\r\n                    <li jhiTranslate=\"artemisApp.tutorialGroupImportDialog.supportedHeaderNames.firstName\"></li>\r\n                    <li jhiTranslate=\"artemisApp.tutorialGroupImportDialog.supportedHeaderNames.lastName\"></li>\r\n                    <li jhiTranslate=\"artemisApp.tutorialGroupImportDialog.supportedHeaderNames.campus\"></li>\r\n                    <li jhiTranslate=\"artemisApp.tutorialGroupImportDialog.supportedHeaderNames.language\"></li>\r\n                    <li jhiTranslate=\"artemisApp.tutorialGroupImportDialog.supportedHeaderNames.additionalInformation\"></li>\r\n                    <li jhiTranslate=\"artemisApp.tutorialGroupImportDialog.supportedHeaderNames.capacity\"></li>\r\n                    <li jhiTranslate=\"artemisApp.tutorialGroupImportDialog.supportedHeaderNames.isOnline\"></li>\r\n                </ul>\r\n            </ul>\r\n        </div>\r\n        <!-- Example Tables -->\r\n        <div class=\"form-group\">\r\n            <div class=\"d-flex align-items-center\">\r\n                <label class=\"font-weight-bold\">\r\n                    <span jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.example1\"></span>\r\n                </label>\r\n                <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-outline-secondary ms-2\"\r\n                    (click)=\"generateCSV(CsvExample.Example1)\"\r\n                    jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.template\"\r\n                ></button>\r\n            </div>\r\n            <table class=\"table table-striped table-bordered table-sm mt-2\">\r\n                <thead>\r\n                    <tr>\r\n                        <th jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.columns.title\"></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <th jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.groupA\"></th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.groupB\"></th>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <div class=\"d-flex align-items-center\">\r\n                <label class=\"font-weight-bold\">\r\n                    <span jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.example2\"></span>\r\n                </label>\r\n                <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-outline-secondary ms-2\"\r\n                    (click)=\"generateCSV(CsvExample.Example2)\"\r\n                    jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.template\"\r\n                ></button>\r\n            </div>\r\n            <table class=\"table table-striped table-bordered table-sm mt-2\">\r\n                <thead>\r\n                    <tr>\r\n                        <th jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.columns.title\"></th>\r\n                        <th jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.columns.registrationNumber\"></th>\r\n                        <th jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.columns.firstName\"></th>\r\n                        <th jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.columns.lastName\"></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <th jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.groupA\"></th>\r\n                        <td>123456</td>\r\n                        <td>John</td>\r\n                        <td>Doe</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.groupA\"></th>\r\n                        <td>555555</td>\r\n                        <td>Jonas</td>\r\n                        <td>Krapfen</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.groupB\"></th>\r\n                        <td>789012</td>\r\n                        <td>Anna</td>\r\n                        <td>Smith</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <div class=\"d-flex align-items-center\">\r\n                <label class=\"font-weight-bold\">\r\n                    <span jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.example3\"></span>\r\n                </label>\r\n                <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-outline-secondary ms-2\"\r\n                    (click)=\"generateCSV(CsvExample.Example3)\"\r\n                    jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.template\"\r\n                ></button>\r\n            </div>\r\n            <table class=\"table table-striped table-bordered table-sm mt-2\">\r\n                <thead>\r\n                    <tr>\r\n                        <th jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.columns.title\"></th>\r\n                        <th jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.columns.login\"></th>\r\n                        <th jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.columns.firstName\"></th>\r\n                        <th jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.columns.lastName\"></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <th jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.groupA\"></th>\r\n                        <td>ge12abc</td>\r\n                        <td>John</td>\r\n                        <td>Doe</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.groupA\"></th>\r\n                        <td>ge14abc</td>\r\n                        <td>Jonas</td>\r\n                        <td>Krapfen</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.groupB\"></th>\r\n                        <td>ge13abc</td>\r\n                        <td>Anna</td>\r\n                        <td>Smith</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <div class=\"d-flex align-items-center\">\r\n                <label class=\"font-weight-bold\">\r\n                    <span jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.example4\"></span>\r\n                </label>\r\n                <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-outline-secondary ms-2\"\r\n                    (click)=\"generateCSV(CsvExample.Example4)\"\r\n                    jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.template\"\r\n                ></button>\r\n            </div>\r\n            <div class=\"table-wrapper-scroll-y scrollbar\">\r\n                <table class=\"table table-striped table-bordered table-sm table-responsive mt-2\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.columns.title\"></th>\r\n                            <th jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.columns.registrationNumber\"></th>\r\n                            <th jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.columns.firstName\"></th>\r\n                            <th jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.columns.lastName\"></th>\r\n                            <th jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.columns.campus\"></th>\r\n                            <th jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.columns.language\"></th>\r\n                            <th jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.columns.additionalInformation\"></th>\r\n                            <th jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.columns.capacity\"></th>\r\n                            <th jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.columns.isOnline\"></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.groupA\"></th>\r\n                            <td>123456</td>\r\n                            <td>John</td>\r\n                            <td>Doe</td>\r\n                            <td>Main Campus</td>\r\n                            <td>English</td>\r\n                            <td>Extra info</td>\r\n                            <td>20</td>\r\n                            <td>true</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.groupA\"></th>\r\n                            <td>555555</td>\r\n                            <td>Jonas</td>\r\n                            <td>Krapfen</td>\r\n                            <td>Main Campus</td>\r\n                            <td>English</td>\r\n                            <td>Extra info</td>\r\n                            <td>20</td>\r\n                            <td>true</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.groupB\"></th>\r\n                            <td>789012</td>\r\n                            <td>Anna</td>\r\n                            <td>Smith</td>\r\n                            <td>City Campus</td>\r\n                            <td>German</td>\r\n                            <td>Extra info</td>\r\n                            <td>15</td>\r\n                            <td>false</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n        <!-- File Upload -->\r\n        <div class=\"form-group\">\r\n            <div class=\"d-flex align-items-end\">\r\n                <div>\r\n                    <label class=\"font-weight-bold\" jhiTranslate=\"artemisApp.tutorialGroupImportDialog.csvFile.label\"></label>\r\n                </div>\r\n                @if (isCSVParsing) {\r\n                    <fa-icon class=\"position-relative ms-1\" [icon]=\"faSpinner\" animation=\"spin\" />\r\n                }\r\n            </div>\r\n            <div class=\"mt-2\">\r\n                <input #fileInput type=\"file\" accept=\".csv\" (change)=\"onCSVFileSelected($event)\" />\r\n                @if (validationErrors && validationErrors.length > 0) {\r\n                    <div class=\"mt-4 mb-2 text-danger\">\r\n                        <div jhiTranslate=\"artemisApp.tutorialGroupImportDialog.csvFile.validationFailed\"></div>\r\n                        <ul class=\"mt-1\">\r\n                            @for (validationError of validationErrors; track validationError) {\r\n                                <li>\r\n                                    <b>{{ validationError }}</b>\r\n                                </li>\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n        <!-- Fixed Place Filter Form -->\r\n        <form [formGroup]=\"fixedPlaceForm\">\r\n            <!-- Specify Fixed Place -->\r\n            <div class=\"form-check\">\r\n                <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"checkbox\" formControlName=\"specifyFixedPlace\" />\r\n                <label class=\"form-check-label\" for=\"checkbox\" jhiTranslate=\"artemisApp.tutorialGroupImportDialog.fixedPlaceForm.checkbox.label\"></label>\r\n            </div>\r\n            <div [hidden]=\"specifyFixedPlaceControl?.value === false\">\r\n                <div>\r\n                    <small jhiTranslate=\"artemisApp.tutorialGroupImportDialog.fixedPlaceForm.checkbox.explanation\"></small>\r\n                </div>\r\n                <!-- Status Header -->\r\n                <div class=\"form-group\">\r\n                    <label for=\"status-header\" jhiTranslate=\"artemisApp.tutorialGroupImportDialog.fixedPlaceForm.statusHeaderInput.label\"></label>\r\n                    <input\r\n                        type=\"text\"\r\n                        class=\"form-control\"\r\n                        id=\"status-header\"\r\n                        formControlName=\"statusHeader\"\r\n                        [placeholder]=\"'artemisApp.tutorialGroupImportDialog.fixedPlaceForm.statusHeaderInput.placeholder' | artemisTranslate\"\r\n                    />\r\n                    @if (statusHeaderControl?.invalid && (statusHeaderControl?.dirty || statusHeaderControl?.touched)) {\r\n                        <div class=\"alert alert-danger\">\r\n                            @if (statusHeaderControl?.errors?.maxlength) {\r\n                                <div\r\n                                    jhiTranslate=\"artemisApp.tutorialGroupImportDialog.fixedPlaceForm.statusHeaderInput.maxLengthValidationError\"\r\n                                    [translateValues]=\"{ max: '255' }\"\r\n                                ></div>\r\n                            }\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <!-- Fixed Place Value -->\r\n                <div class=\"form-group\">\r\n                    <label for=\"fixed-place\" jhiTranslate=\"artemisApp.tutorialGroupImportDialog.fixedPlaceForm.fixedPlaceValueInput.label\"></label>\r\n                    <input\r\n                        type=\"text\"\r\n                        class=\"form-control\"\r\n                        id=\"fixed-place\"\r\n                        formControlName=\"fixedPlaceValue\"\r\n                        [placeholder]=\"'artemisApp.tutorialGroupImportDialog.fixedPlaceForm.fixedPlaceValueInput.placeholder' | artemisTranslate\"\r\n                    />\r\n                    @if (fixedPlaceValueControl?.invalid && (fixedPlaceValueControl?.dirty || fixedPlaceValueControl?.touched)) {\r\n                        <div class=\"alert alert-danger\">\r\n                            @if (fixedPlaceValueControl?.errors?.maxlength) {\r\n                                <div\r\n                                    jhiTranslate=\"artemisApp.tutorialGroupImportDialog.fixedPlaceForm.fixedPlaceValueInput.maxLengthValidationError\"\r\n                                    [translateValues]=\"{ max: '255' }\"\r\n                                ></div>\r\n                            }\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </form>\r\n        <div>\r\n            <button\r\n                type=\"button\"\r\n                class=\"btn btn-secondary\"\r\n                [disabled]=\"isParseDisabled\"\r\n                (click)=\"onParseClicked()\"\r\n                jhiTranslate=\"artemisApp.tutorialGroupImportDialog.csvFile.parseCSVButton\"\r\n            ></button>\r\n        </div>\r\n        @if (isImportDone) {\r\n            <hr />\r\n        }\r\n        <!-- Not Imported Filter -->\r\n        @if (isImportDone) {\r\n            <div>\r\n                <div class=\"btn-group\" role=\"group\">\r\n                    <input\r\n                        type=\"radio\"\r\n                        class=\"btn-check\"\r\n                        name=\"btnradio\"\r\n                        id=\"only-imported\"\r\n                        autocomplete=\"off\"\r\n                        [value]=\"'onlyImported'\"\r\n                        [ngModel]=\"selectedFilter\"\r\n                        (ngModelChange)=\"onFilterChange($event)\"\r\n                    />\r\n                    <label class=\"btn btn-outline-success\" for=\"only-imported\" jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.showImportedButton\"></label>\r\n                    <input\r\n                        type=\"radio\"\r\n                        class=\"btn-check\"\r\n                        name=\"btnradio\"\r\n                        id=\"only-not-imported\"\r\n                        autocomplete=\"off\"\r\n                        [value]=\"'onlyNotImported'\"\r\n                        [ngModel]=\"selectedFilter\"\r\n                        (ngModelChange)=\"onFilterChange($event)\"\r\n                    />\r\n                    <label class=\"btn btn-outline-danger\" for=\"only-not-imported\" jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.showNotImportedButton\"></label>\r\n                    <input\r\n                        type=\"radio\"\r\n                        class=\"btn-check\"\r\n                        name=\"btnradio\"\r\n                        id=\"all\"\r\n                        autocomplete=\"off\"\r\n                        [value]=\"'all'\"\r\n                        [ngModel]=\"selectedFilter\"\r\n                        (ngModelChange)=\"onFilterChange($event)\"\r\n                    />\r\n                    <label class=\"btn btn-outline-secondary\" for=\"all\" jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.showAllButton\"></label>\r\n                </div>\r\n            </div>\r\n        }\r\n        <!-- Overview Table -->\r\n        @if (registrationsDisplayedInTable && registrationsDisplayedInTable.length > 0) {\r\n            <div class=\"form-group mt-4\">\r\n                <div class=\"table-wrapper-scroll-y scrollbar\">\r\n                    <table class=\"table table-striped table-bordered table-sm table-responsive mt-2\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">#</th>\r\n                                <th scope=\"col\" jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.columns.title\"></th>\r\n                                <th scope=\"col\" jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.columns.registrationNumber\"></th>\r\n                                <th scope=\"col\" jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.columns.login\"></th>\r\n                                <th scope=\"col\" jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.columns.firstName\"></th>\r\n                                <th scope=\"col\" jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.columns.lastName\"></th>\r\n                                <th scope=\"col\" jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.columns.campus\"></th>\r\n                                <th scope=\"col\" jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.columns.language\"></th>\r\n                                <th scope=\"col\" jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.columns.additionalInformation\"></th>\r\n                                <th scope=\"col\" jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.columns.capacity\"></th>\r\n                                <th scope=\"col\" jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.columns.isOnline\"></th>\r\n                                @if (isImportDone && numberOfNotImportedRegistration > 0) {\r\n                                    <th scope=\"col\" jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.columns.error\"></th>\r\n                                }\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody class=\"table-body\">\r\n                            @for (registration of registrationsDisplayedInTable; track registration; let i = $index) {\r\n                                <tr [class.table-success]=\"wasImported(registration)\" [class.table-danger]=\"wasNotImported(registration)\">\r\n                                    <td>\r\n                                        <span class=\"d-inline-block text-truncate\" style=\"max-width: 200px\">{{ i + 1 }} </span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span class=\"d-inline-block text-truncate\" style=\"max-width: 200px\"> {{ registration?.title ?? '' }} </span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span> {{ registration?.student?.registrationNumber ?? '' }} </span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span class=\"d-inline-block text-truncate\" style=\"max-width: 200px\">{{ registration?.student?.login ?? '' }} </span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span class=\"d-inline-block text-truncate\" style=\"max-width: 100px\">{{ registration?.student?.firstName ?? '' }}</span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span class=\"d-inline-block text-truncate\" style=\"max-width: 100px\">{{ registration?.student?.lastName ?? '' }} </span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span class=\"d-inline-block text-truncate\" style=\"max-width: 200px\">{{ registration?.campus ?? '' }} </span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span class=\"d-inline-block text-truncate\" style=\"max-width: 200px\">{{ registration?.language ?? '' }} </span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span class=\"d-inline-block text-truncate\" style=\"max-width: 200px\">{{ registration?.additionalInformation ?? '' }} </span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span class=\"d-inline-block text-truncate\" style=\"max-width: 100px\">{{ registration?.capacity ?? '' }} </span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span class=\"d-inline-block text-truncate\" style=\"max-width: 100px\">{{ registration?.isOnline ?? '' }} </span>\r\n                                    </td>\r\n                                    @if (isImportDone && numberOfNotImportedRegistration > 0) {\r\n                                        <td>\r\n                                            <span class=\"d-inline-block text-truncate\" style=\"max-width: 400px\">\r\n                                                {{\r\n                                                    registration?.error\r\n                                                        ? ('artemisApp.tutorialGroupImportDialog.serverErrors.' + registration.error!.replaceAll('_', '').trim().toLocaleLowerCase()\r\n                                                          | artemisTranslate)\r\n                                                        : ''\r\n                                                }}\r\n                                            </span>\r\n                                        </td>\r\n                                    }\r\n                                </tr>\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        }\r\n    </div>\r\n    <div class=\"modal-footer justify-content-between\">\r\n        @if (allRegistrations && allRegistrations.length > 0) {\r\n            <div class=\"flex-shrink-0 me-2 d-flex\">\r\n                @if (!isImportDone) {\r\n                    <div>\r\n                        <strong jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.footer.total\" [translateValues]=\"{ count: allRegistrations.length }\"></strong>\r\n                    </div>\r\n                } @else {\r\n                    <div>\r\n                        <strong jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.footer.imported\" [translateValues]=\"{ count: numberOfImportedRegistrations }\"></strong>\r\n                    </div>\r\n                    <div class=\"ms-2\">\r\n                        <strong\r\n                            jhiTranslate=\"artemisApp.tutorialGroupImportDialog.table.footer.notImported\"\r\n                            [translateValues]=\"{ count: numberOfNotImportedRegistration }\"\r\n                        ></strong>\r\n                    </div>\r\n                }\r\n            </div>\r\n        }\r\n        <div class=\"flex-grow-1 d-flex justify-content-end gap-2\">\r\n            @if (!isImportDone) {\r\n                <button type=\"button\" class=\"btn btn-secondary cancel\" data-dismiss=\"modal\" (click)=\"clear()\">\r\n                    <fa-icon [icon]=\"faBan\" />&nbsp;<span jhiTranslate=\"entity.action.cancel\"></span>\r\n                </button>\r\n            }\r\n            @if (!isImportDone) {\r\n                <button type=\"submit\" id=\"import\" name=\"importButton\" class=\"btn btn-primary\" [disabled]=\"isSubmitDisabled\" (click)=\"import()\">\r\n                    <fa-icon [icon]=\"faFileImport\" class=\"me-2\" />\r\n                    <span jhiTranslate=\"entity.action.to-import\"></span>\r\n                    <fa-icon class=\"ms-1\" [hidden]=\"!isImporting\" animation=\"spin\" [icon]=\"faCircleNotch\" />\r\n                </button>\r\n            } @else {\r\n                <button class=\"btn btn-success\" id=\"finish-button\" (click)=\"onFinish()\">\r\n                    <fa-icon [icon]=\"faCheck\" class=\"me-2\" />\r\n                    <span jhiTranslate=\"entity.action.finish\"></span>\r\n                </button>\r\n            }\r\n        </div>\r\n    </div>\r\n</div>\r\n", "import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnDestroy, Output, TemplateRef, ViewChild, inject } from '@angular/core';\r\nimport { NgbDropdownButtonItem, NgbDropdownItem, NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TutorialGroupsRegistrationImportDialogComponent } from 'app/course/tutorial-groups/tutorial-groups-management/tutorial-groups/tutorial-groups-management/tutorial-groups-import-dialog/tutorial-groups-registration-import-dialog.component';\r\nimport { EMPTY, Subject, from } from 'rxjs';\r\nimport { catchError, takeUntil } from 'rxjs/operators';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\n\r\n@Component({\r\n    selector: 'jhi-tutorial-groups-import-button',\r\n    templateUrl: './tutorial-groups-import-button.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    imports: [NgbDropdownButtonItem, NgbDropdownItem, TranslateDirective],\r\n})\r\nexport class TutorialGroupsImportButtonComponent implements OnDestroy {\r\n    private modalService = inject(NgbModal);\r\n\r\n    ngUnsubscribe = new Subject<void>();\r\n\r\n    @ViewChild('warning')\r\n    public warningRef: TemplateRef<any>;\r\n\r\n    @Input() courseId: number;\r\n\r\n    @Output() importFinished: EventEmitter<void> = new EventEmitter();\r\n\r\n    openTutorialGroupImportDialog(event: MouseEvent) {\r\n        event.stopPropagation();\r\n        const modalRef: NgbModalRef = this.modalService.open(TutorialGroupsRegistrationImportDialogComponent, {\r\n            size: 'xl',\r\n            scrollable: false,\r\n            backdrop: 'static',\r\n            animation: false,\r\n        });\r\n        modalRef.componentInstance.courseId = this.courseId;\r\n\r\n        from(modalRef.result)\r\n            .pipe(\r\n                catchError(() => EMPTY),\r\n                takeUntil(this.ngUnsubscribe),\r\n            )\r\n            .subscribe(() => {\r\n                this.openWarning();\r\n            });\r\n    }\r\n\r\n    openWarning() {\r\n        if (this.warningRef) {\r\n            const modalRef: NgbModalRef = this.modalService.open(this.warningRef, { centered: true, animation: false });\r\n            from(modalRef.result)\r\n                .pipe(\r\n                    catchError(() => EMPTY),\r\n                    takeUntil(this.ngUnsubscribe),\r\n                )\r\n                .subscribe(() => {\r\n                    this.importFinished.emit();\r\n                });\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.ngUnsubscribe.next();\r\n        this.ngUnsubscribe.complete();\r\n    }\r\n}\r\n", "<button id=\"importDialogButton\" (click)=\"openTutorialGroupImportDialog($event)\" ngbDropdownItem>\r\n    <span jhiTranslate=\"artemisApp.tutorialGroupImportDialog.importButton\"></span>\r\n</button>\r\n\r\n<ng-template #warning let-warning>\r\n    <div class=\"modal-header\">\r\n        <h4 class=\"modal-title\" jhiTranslate=\"artemisApp.tutorialGroupImportDialog.warning\"></h4>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <p jhiTranslate=\"artemisApp.tutorialGroupImportDialog.finishedWarning\"></p>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-light\" (click)=\"warning.close()\">Ok</button>\r\n    </div>\r\n</ng-template>\r\n", "import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnDestroy, Output, TemplateRef, ViewChild, inject } from '@angular/core';\r\nimport { NgbDropdownButtonItem, NgbDropdownItem, NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { EMPTY, Subject, from } from 'rxjs';\r\nimport { catchError, takeUntil } from 'rxjs/operators';\r\nimport { TutorialGroupsService } from 'app/course/tutorial-groups/services/tutorial-groups.service';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'jhi-tutorial-groups-export-button',\r\n    templateUrl: './tutorial-groups-export-button.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    imports: [NgbDropdownButtonItem, NgbDropdownItem, TranslateDirective, FormsModule],\r\n})\r\nexport class TutorialGroupsExportButtonComponent implements OnDestroy {\r\n    private modalService = inject(NgbModal);\r\n    private tutorialGroupsService = inject(TutorialGroupsService);\r\n    private alertService = inject(AlertService);\r\n\r\n    ngUnsubscribe = new Subject<void>();\r\n\r\n    @ViewChild('exportDialog') exportDialogRef: TemplateRef<any>;\r\n\r\n    @Input() courseId: number;\r\n\r\n    @Output() exportFinished: EventEmitter<void> = new EventEmitter();\r\n\r\n    selectAll = false;\r\n\r\n    selectedFields: string[] = [];\r\n    availableFields = [\r\n        { value: 'ID', selected: false },\r\n        { value: 'Title', selected: false },\r\n        { value: 'Day of Week', selected: false },\r\n        { value: 'Start Time', selected: false },\r\n        { value: 'End Time', selected: false },\r\n        { value: 'Location', selected: false },\r\n        { value: 'Campus', selected: false },\r\n        { value: 'Language', selected: false },\r\n        { value: 'Additional Information', selected: false },\r\n        { value: 'Capacity', selected: false },\r\n        { value: 'Is Online', selected: false },\r\n        { value: 'Students', selected: false },\r\n    ];\r\n\r\n    openExportDialog(event: MouseEvent) {\r\n        event.stopPropagation();\r\n        const modalRef: NgbModalRef = this.modalService.open(this.exportDialogRef, {\r\n            size: 'lg',\r\n            scrollable: false,\r\n            backdrop: 'static',\r\n            animation: false,\r\n        });\r\n\r\n        from(modalRef.result)\r\n            .pipe(\r\n                catchError(() => EMPTY),\r\n                takeUntil(this.ngUnsubscribe),\r\n            )\r\n            .subscribe(() => {\r\n                this.exportFinished.emit();\r\n            });\r\n    }\r\n\r\n    toggleSelectAll() {\r\n        this.selectAll = !this.selectAll;\r\n        this.availableFields.forEach((field) => (field.selected = this.selectAll));\r\n        this.updateSelectedFields();\r\n    }\r\n\r\n    onFieldSelectionChange(field: any) {\r\n        field.selected = !field.selected;\r\n        this.selectAll = this.areAllFieldsSelected();\r\n        this.updateSelectedFields();\r\n    }\r\n\r\n    updateSelectedFields() {\r\n        this.selectedFields = this.availableFields.filter((field) => field.selected).map((field) => field.value);\r\n    }\r\n\r\n    areAllFieldsSelected(): boolean {\r\n        return this.availableFields.every((field) => field.selected);\r\n    }\r\n\r\n    exportCSV(modal: NgbModalRef) {\r\n        this.tutorialGroupsService.exportTutorialGroupsToCSV(this.courseId, this.selectedFields).subscribe({\r\n            next: (blob: Blob) => {\r\n                const a = document.createElement('a');\r\n                const objectUrl = URL.createObjectURL(blob);\r\n                a.href = objectUrl;\r\n                a.download = 'tutorial-groups.csv';\r\n                a.click();\r\n                URL.revokeObjectURL(objectUrl);\r\n                this.resetSelections();\r\n                modal.close();\r\n            },\r\n            error: () => {\r\n                this.alertService.error('artemisApp.tutorialGroupExportDialog.failedCSV');\r\n                this.resetSelections();\r\n                modal.dismiss('error');\r\n            },\r\n        });\r\n    }\r\n\r\n    exportJSON(modal: NgbModalRef) {\r\n        this.tutorialGroupsService.exportToJson(this.courseId, this.selectedFields).subscribe(\r\n            (response) => {\r\n                const blob = new Blob([response], { type: 'application/json' });\r\n                const url = window.URL.createObjectURL(blob);\r\n                const a = document.createElement('a');\r\n                a.href = url;\r\n                a.download = 'tutorial_groups.json';\r\n                a.click();\r\n                window.URL.revokeObjectURL(url);\r\n                this.resetSelections();\r\n                modal.close();\r\n            },\r\n            () => {\r\n                this.alertService.error('artemisApp.tutorialGroupExportDialog.failedJSON');\r\n                this.resetSelections();\r\n                modal.dismiss('error');\r\n            },\r\n        );\r\n    }\r\n\r\n    private resetSelections() {\r\n        this.selectedFields = [];\r\n        this.availableFields.forEach((field) => (field.selected = false));\r\n        this.selectAll = false;\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.ngUnsubscribe.next();\r\n        this.ngUnsubscribe.complete();\r\n    }\r\n}\r\n", "<button id=\"exportDialogButton\" (click)=\"openExportDialog($event)\" [jhiTranslate]=\"'artemisApp.tutorialGroupExportDialog.buttonHeader'\" ngbDropdownItem></button>\r\n\r\n<ng-template #exportDialog let-modal>\r\n    <div class=\"modal-header\">\r\n        <h4 class=\"modal-title\" [jhiTranslate]=\"'artemisApp.tutorialGroupExportDialog.header'\"></h4>\r\n        <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"modal.dismiss('cancel')\"></button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <form>\r\n            <p [jhiTranslate]=\"'artemisApp.tutorialGroupExportDialog.description'\"></p>\r\n            <div>\r\n                <div class=\"form-check mb-3\">\r\n                    <input id=\"selectAllId\" class=\"form-check-input\" type=\"checkbox\" (change)=\"toggleSelectAll()\" [checked]=\"selectAll\" />\r\n                    <label class=\"form-check-label\" [jhiTranslate]=\"'artemisApp.tutorialGroupExportDialog.selectAll'\"></label>\r\n                </div>\r\n            </div>\r\n            @for (field of availableFields; track field) {\r\n                <div>\r\n                    <div class=\"form-check mb-2\">\r\n                        <input id=\"fieldId\" class=\"form-check-input\" type=\"checkbox\" [value]=\"field.value\" [checked]=\"field.selected\" (change)=\"onFieldSelectionChange(field)\" />\r\n                        <label class=\"form-check-label\">{{ field.value }}</label>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </form>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"modal.dismiss('cancel')\" [jhiTranslate]=\"'artemisApp.tutorialGroupExportDialog.cancel'\"></button>\r\n        <button\r\n            type=\"button\"\r\n            class=\"btn btn-primary\"\r\n            (click)=\"exportJSON(modal)\"\r\n            [disabled]=\"selectedFields.length === 0\"\r\n            [jhiTranslate]=\"'artemisApp.tutorialGroupExportDialog.exportJSON'\"\r\n        >\r\n            >\r\n        </button>\r\n        <button\r\n            type=\"button\"\r\n            class=\"btn btn-primary\"\r\n            (click)=\"exportCSV(modal)\"\r\n            [disabled]=\"selectedFields.length === 0\"\r\n            [jhiTranslate]=\"'artemisApp.tutorialGroupExportDialog.exportCSV'\"\r\n        >\r\n            >\r\n        </button>\r\n    </div>\r\n</ng-template>\r\n", "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { TutorialGroup } from 'app/entities/tutorial-group/tutorial-group.model';\r\nimport { SidePanelComponent } from 'app/shared/side-panel/side-panel.component';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-tutorial-groups-course-information',\r\n    templateUrl: './tutorial-groups-course-information.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    imports: [SidePanelComponent, TranslateDirective, ArtemisTranslatePipe],\r\n})\r\nexport class TutorialGroupsCourseInformationComponent {\r\n    @Input()\r\n    tutorialGroups: TutorialGroup[] = [];\r\n\r\n    get totalNumberOfRegistrations(): number {\r\n        return this.tutorialGroups.reduce((acc, tutorialGroup) => acc + (tutorialGroup.numberOfRegisteredUsers ?? 0), 0);\r\n    }\r\n}\r\n", "<jhi-side-panel [panelHeader]=\"'artemisApp.pages.courseTutorialGroupOverview.sidePanel.header' | artemisTranslate\">\r\n    <div class=\"row mb-1\">\r\n        <div class=\"col-8\" jhiTranslate=\"artemisApp.pages.courseTutorialGroupOverview.sidePanel.numberOfGroups\"></div>\r\n        <div class=\"col-4\">{{ tutorialGroups ? tutorialGroups.length : 0 }}</div>\r\n    </div>\r\n    <div class=\"row mb-1\">\r\n        <div class=\"col-8\" jhiTranslate=\"artemisApp.pages.courseTutorialGroupOverview.sidePanel.numberOfRegistrations\"></div>\r\n        <div class=\"col-4\">{{ totalNumberOfRegistrations }}</div>\r\n    </div>\r\n</jhi-side-panel>\r\n", "import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit, inject } from '@angular/core';\r\nimport { TutorialGroupFreeDaysOverviewComponent } from 'app/course/tutorial-groups/shared/tutorial-group-free-days-overview/tutorial-group-free-days-overview.component';\r\nimport { TutorialGroupsTableComponent } from 'app/course/tutorial-groups/shared/tutorial-groups-table/tutorial-groups-table.component';\r\nimport { TutorialGroup } from 'app/entities/tutorial-group/tutorial-group.model';\r\nimport { ActivatedRoute, RouterLink } from '@angular/router';\r\nimport { TutorialGroupsService } from 'app/course/tutorial-groups/services/tutorial-groups.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Subject, combineLatest, finalize } from 'rxjs';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { faPlus, faUmbrellaBeach } from '@fortawesome/free-solid-svg-icons';\r\nimport { Course, isMessagingEnabled } from 'app/entities/course.model';\r\nimport { onError } from 'app/shared/util/global.utils';\r\nimport { TutorialGroupFreePeriod } from 'app/entities/tutorial-group/tutorial-group-free-day.model';\r\nimport { TutorialGroupsConfigurationService } from 'app/course/tutorial-groups/services/tutorial-groups-configuration.service';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { TutorialGroupsConfiguration } from 'app/entities/tutorial-group/tutorial-groups-configuration.model';\r\nimport { LoadingIndicatorContainerComponent } from 'app/shared/loading-indicator-container/loading-indicator-container.component';\r\nimport { NgbDropdown, NgbDropdownItem, NgbDropdownMenu, NgbDropdownToggle, NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { TutorialGroupsImportButtonComponent } from './tutorial-groups-import-button/tutorial-groups-import-button.component';\r\nimport { TutorialGroupsExportButtonComponent } from './tutorial-groups-export-button.component/tutorial-groups-export-button.component';\r\nimport { TutorialGroupRowButtonsComponent } from './tutorial-group-row-buttons/tutorial-group-row-buttons.component';\r\nimport { TutorialGroupsCourseInformationComponent } from './tutorial-groups-course-information/tutorial-groups-course-information.component';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-tutorial-groups-management',\r\n    templateUrl: './tutorial-groups-management.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    imports: [\r\n        LoadingIndicatorContainerComponent,\r\n        NgbTooltip,\r\n        RouterLink,\r\n        FaIconComponent,\r\n        TranslateDirective,\r\n        NgbDropdown,\r\n        NgbDropdownToggle,\r\n        NgbDropdownMenu,\r\n        NgbDropdownItem,\r\n        TutorialGroupsImportButtonComponent,\r\n        TutorialGroupsExportButtonComponent,\r\n        TutorialGroupsTableComponent,\r\n        TutorialGroupRowButtonsComponent,\r\n        TutorialGroupsCourseInformationComponent,\r\n        TutorialGroupFreeDaysOverviewComponent,\r\n        ArtemisTranslatePipe,\r\n    ],\r\n})\r\nexport class TutorialGroupsManagementComponent implements OnInit, OnDestroy {\r\n    private tutorialGroupService = inject(TutorialGroupsService);\r\n    private activatedRoute = inject(ActivatedRoute);\r\n    private alertService = inject(AlertService);\r\n    private tutorialGroupsConfigurationService = inject(TutorialGroupsConfigurationService);\r\n    private cdr = inject(ChangeDetectorRef);\r\n\r\n    ngUnsubscribe = new Subject<void>();\r\n\r\n    courseId: number;\r\n    course: Course;\r\n    isAtLeastInstructor = false;\r\n\r\n    configuration: TutorialGroupsConfiguration;\r\n\r\n    isLoading = false;\r\n    tutorialGroups: TutorialGroup[] = [];\r\n    faPlus = faPlus;\r\n    faUmbrellaBeach = faUmbrellaBeach;\r\n\r\n    readonly isMessagingEnabled = isMessagingEnabled;\r\n\r\n    tutorialGroupFreeDays: TutorialGroupFreePeriod[] = [];\r\n\r\n    ngOnInit(): void {\r\n        this.activatedRoute.data.pipe(takeUntil(this.ngUnsubscribe)).subscribe(({ course }) => {\r\n            if (course) {\r\n                this.course = course;\r\n                this.courseId = course.id!;\r\n                this.isAtLeastInstructor = course.isAtLeastInstructor;\r\n                this.loadTutorialGroups();\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.ngUnsubscribe.next();\r\n        this.ngUnsubscribe.complete();\r\n    }\r\n\r\n    loadTutorialGroups() {\r\n        this.isLoading = true;\r\n\r\n        combineLatest([this.tutorialGroupService.getAllForCourse(this.courseId), this.tutorialGroupsConfigurationService.getOneOfCourse(this.course.id!)])\r\n            .pipe(\r\n                finalize(() => {\r\n                    this.isLoading = false;\r\n                }),\r\n                takeUntil(this.ngUnsubscribe),\r\n            )\r\n            .subscribe({\r\n                next: ([tutorialGroupsRes, configurationRes]) => {\r\n                    const tutorialGroups = tutorialGroupsRes.body!;\r\n                    tutorialGroups.sort((a, b) => {\r\n                        if (a.isUserTutor && !b.isUserTutor) {\r\n                            return -1;\r\n                        } else if (!a.isUserTutor && b.isUserTutor) {\r\n                            return 1;\r\n                        } else {\r\n                            return a.title!.localeCompare(b.title!);\r\n                        }\r\n                    });\r\n                    this.tutorialGroups = tutorialGroups;\r\n\r\n                    this.configuration = configurationRes.body!;\r\n                    if (this.configuration.tutorialGroupFreePeriods) {\r\n                        this.tutorialGroupFreeDays = this.configuration.tutorialGroupFreePeriods;\r\n                    }\r\n                },\r\n                error: (res: HttpErrorResponse) => onError(this.alertService, res),\r\n            })\r\n            .add(() => this.cdr.detectChanges());\r\n    }\r\n}\r\n", "<jhi-loading-indicator-container [isLoading]=\"isLoading\">\r\n    <div class=\"row\">\r\n        <div class=\"col-12 col-xl-10\">\r\n            <div class=\"d-flex justify-content-between\">\r\n                <h4>\r\n                    {{ 'artemisApp.pages.tutorialGroupsManagement.title' | artemisTranslate }}\r\n                    <span class=\"badge rounded-pill text-bg-warning ms-1\" ngbTooltip=\"{{ 'artemisApp.generic.betaWarning' | artemisTranslate }}\">BETA</span>\r\n                </h4>\r\n                @if (isAtLeastInstructor) {\r\n                    <div>\r\n                        @if (course?.tutorialGroupsConfiguration) {\r\n                            <a\r\n                                ngbTooltip=\"{{ 'artemisApp.pages.tutorialFreePeriodsManagement.explanation' | artemisTranslate }}\"\r\n                                class=\"btn btn-primary\"\r\n                                [routerLink]=\"['/course-management', courseId, 'tutorial-groups', 'configuration', course!.tutorialGroupsConfiguration!.id, 'tutorial-free-days']\"\r\n                            >\r\n                                <fa-icon [icon]=\"faUmbrellaBeach\" />\r\n                                <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.pages.tutorialGroupsManagement.freePeriodsButtons\"></span>\r\n                            </a>\r\n                        }\r\n                        <a class=\"btn btn-primary\" [routerLink]=\"['/course-management', courseId, 'tutorial-groups', 'create']\">\r\n                            <fa-icon [icon]=\"faPlus\" />\r\n                            <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.pages.tutorialGroupsManagement.creatTutorialGroupButton\"></span>\r\n                        </a>\r\n                        <div ngbDropdown class=\"d-inline-block\">\r\n                            <button type=\"button\" class=\"btn btn-primary\" id=\"dropdownBasic1\" ngbDropdownToggle jhiTranslate=\"artemisApp.generic.more\"></button>\r\n                            <div ngbDropdownMenu>\r\n                                @if (course?.tutorialGroupsConfiguration) {\r\n                                    <a\r\n                                        ngbDropdownItem\r\n                                        class=\"btn\"\r\n                                        [routerLink]=\"['/course-management', courseId, 'tutorial-groups', 'configuration', course!.tutorialGroupsConfiguration!.id, 'edit']\"\r\n                                    >\r\n                                        <span jhiTranslate=\"artemisApp.pages.tutorialGroupsManagement.editConfigurationButton\"></span>\r\n                                    </a>\r\n                                }\r\n                                <jhi-tutorial-groups-import-button\r\n                                    ngbTooltip=\"{{ 'artemisApp.tutorialGroupImportDialog.explanations.description' | artemisTranslate }}\"\r\n                                    [courseId]=\"courseId\"\r\n                                    (importFinished)=\"loadTutorialGroups()\"\r\n                                />\r\n                                <jhi-tutorial-groups-export-button\r\n                                    ngbTooltip=\"{{ 'artemisApp.tutorialGroupExportDialog.toolTip' | artemisTranslate }}\"\r\n                                    [courseId]=\"courseId\"\r\n                                    (exportFinished)=\"loadTutorialGroups()\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n            @if (tutorialGroups?.length) {\r\n                <jhi-tutorial-groups-table\r\n                    [tutorialGroups]=\"tutorialGroups\"\r\n                    [course]=\"course\"\r\n                    [showIdColumn]=\"true\"\r\n                    [showChannelColumn]=\"configuration.useTutorialGroupChannels! && isMessagingEnabled(course)\"\r\n                    [timeZone]=\"course.timeZone\"\r\n                >\r\n                    <ng-template let-tutorialGroup>\r\n                        <jhi-tutorial-group-row-buttons\r\n                            [course]=\"course\"\r\n                            [isAtLeastInstructor]=\"isAtLeastInstructor\"\r\n                            [tutorialGroup]=\"tutorialGroup\"\r\n                            (tutorialGroupDeleted)=\"loadTutorialGroups()\"\r\n                            (registrationsChanged)=\"loadTutorialGroups()\"\r\n                            (attendanceUpdated)=\"loadTutorialGroups()\"\r\n                        />\r\n                    </ng-template>\r\n                </jhi-tutorial-groups-table>\r\n            } @else {\r\n                <div>\r\n                    <div class=\"alert alert-success\" role=\"alert\">\r\n                        <div>\r\n                            <span class=\"badge rounded-pill text-bg-warning ms-1\" ngbTooltip=\"{{ 'artemisApp.generic.betaWarning' | artemisTranslate }}\">BETA</span>\r\n                            {{ 'artemisApp.pages.tutorialGroupsManagement.intro' | artemisTranslate }}\r\n                        </div>\r\n                        <div class=\"text-center\">\r\n                            @if (isAtLeastInstructor) {\r\n                                <jhi-tutorial-groups-import-button\r\n                                    class=\"btn btn-outline-secondary\"\r\n                                    ngbTooltip=\"{{ 'artemisApp.tutorialGroupImportDialog.explanations.description' | artemisTranslate }}\"\r\n                                    [courseId]=\"courseId\"\r\n                                    (importFinished)=\"loadTutorialGroups()\"\r\n                                />\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n        <div class=\"col-12 col-xl-2\">\r\n            <jhi-tutorial-groups-course-information [tutorialGroups]=\"tutorialGroups\" />\r\n            @if (tutorialGroupFreeDays && tutorialGroupFreeDays.length > 0) {\r\n                <div class=\"mt-1\">\r\n                    <jhi-tutorial-group-free-days-overview [timeZone]=\"course.timeZone\" [tutorialGroupFreeDays]=\"tutorialGroupFreeDays\" />\r\n                </div>\r\n            }\r\n        </div>\r\n    </div>\r\n</jhi-loading-indicator-container>\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275property", "\u0275\u0275pureFunction1", "_c0", "ctx_r1", "isInThePast", "freeDay_r1", "reason", "trim", "\u0275\u0275pipeBind1", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275template", "TutorialGroupFreeDaysOverviewComponent_For_10_Conditional_7_Template", "\u0275\u0275textInterpolate1", "\u0275\u0275pipeBindV", "\u0275\u0275pureFunction2", "_c1", "start", "timeZone", "\u0275\u0275conditional", "length", "TutorialGroupFreeDaysOverviewComponent", "sortService", "inject", "SortService", "iterableDiffers", "IterableDiffers", "tutorialGroupFreeDays", "undefined", "tutorialGroupFreeDay", "isBefore", "getCurrentDate", "diff", "dayjs", "ngOnInit", "find", "create", "sort", "ngDoCheck", "sortByProperty", "selectors", "inputs", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275repeaterCreate", "TutorialGroupFreeDaysOverviewComponent_For_10_Template", "\u0275\u0275repeaterTrackByIdentity", "\u0275\u0275repeater", "SidePanelComponent", "NgClass", "TranslateDirective", "NgbPopover", "ArtemisDatePipe", "ArtemisTranslatePipe", "encapsulation", "changeDetection", "VerticalProgressBarComponent", "cdr", "inject", "ChangeDetectorRef", "heightCSS", "widthCSS", "fillLevelCSS", "fillColorCSS", "fillDurationCSS", "borderRadiusCSS", "ngOnInit", "setFillColor", "fillLevelInPercentInternal", "lowerBorderInternal", "upperBorderInternal", "lowerBorder", "border", "Math", "round", "max", "markForCheck", "upperBorder", "min", "lowerColor", "intermediateColor", "upperColor", "tooltip", "animateFilling", "showAnimation", "heightInPixels", "height", "widthInPixels", "width", "fillLevelInPercent", "percent", "selectors", "hostVars", "hostBindings", "rf", "ctx", "\u0275\u0275styleProp", "\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "\u0275\u0275textInterpolate", "NgbTooltip", "styles", "changeDetection", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "ctx_r0", "Math", "round", "tutorialGroup", "averageAttendance", "capacity", "\u0275\u0275pipeBind2", "\u0275\u0275pureFunction1", "_c0", "\u0275\u0275textInterpolate", "undefined", "TutorialGroupUtilizationIndicatorComponent", "selectors", "inputs", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275template", "TutorialGroupUtilizationIndicatorComponent_Conditional_0_Template", "TutorialGroupUtilizationIndicatorComponent_Conditional_1_Template", "\u0275\u0275conditional", "VerticalProgressBarComponent", "ArtemisTranslatePipe", "encapsulation", "changeDetection", "MeetingPatternPipe", "translateService", "removeSecondsPipe", "RemoveSecondsPipe", "constructor", "transform", "schedule", "includeRepetitionFrequency", "weekDayTranslated", "instant", "getDayTranslationKey", "dayOfWeek", "repetitionTranslated", "getRepetitionTranslated", "repetitionFrequency", "startTime", "endTime", "n", "\u0275\u0275directiveInject", "TranslateService", "pure", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "ctx_r0", "tutorialGroup", "id", "\u0275\u0275pureFunction1", "_c1", "\u0275\u0275textInterpolate", "\u0275\u0275textInterpolate1", "\u0275\u0275pipeBind2", "tutorialGroupSchedule", "repetitionFrequency", "\u0275\u0275element", "\u0275\u0275propertyInterpolate", "isOnline", "language", "campus", "\u0275\u0275textInterpolate3", "\u0275\u0275pipeBindV", "\u0275\u0275pureFunction2", "_c3", "nextSession", "start", "timeZone", "\u0275\u0275pipeBind4", "end", "channel", "_c4", "course", "_c5", "name", "\u0275\u0275template", "TutorialGroupRowComponent_Conditional_37_Conditional_3_Template", "TutorialGroupRowComponent_Conditional_37_Conditional_4_Template", "\u0275\u0275conditional", "isMember", "TutorialGroupRowComponent", "Math", "class", "showIdColumn", "tutorialGroupsSplitAcrossMultipleCampuses", "mixOfOfflineAndOfflineTutorialGroups", "mifOfDifferentLanguages", "showChannelColumn", "extraColumn", "undefined", "selectors", "hostVars", "hostBindings", "rf", "ctx", "\u0275\u0275classMap", "\u0275\u0275elementContainerStart", "TutorialGroupRowComponent_Conditional_2_Template", "TutorialGroupRowComponent_Conditional_26_Template", "TutorialGroupRowComponent_Conditional_27_Template", "TutorialGroupRowComponent_Conditional_29_Template", "TutorialGroupRowComponent_Conditional_30_Template", "TutorialGroupRowComponent_Conditional_31_Template", "TutorialGroupRowComponent_Conditional_34_Template", "TutorialGroupRowComponent_Conditional_35_Template", "TutorialGroupRowComponent_Conditional_37_Template", "TutorialGroupRowComponent_ng_template_40_Template", "title", "tmp_4_0", "numberOfRegisteredUsers", "capacity", "isUserTutor", "\u0275\u0275pipeBind1", "teachingAssistantName", "_c2", "RouterLink", "TutorialGroupUtilizationIndicatorComponent", "TranslateDirective", "NgTemplateOutlet", "ArtemisDatePipe", "ArtemisTranslatePipe", "MeetingPatternPipe", "styles", "encapsulation", "changeDetection", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "ctx_r0", "faSort", "\u0275\u0275pureFunction1", "_c1", "course", "id", "\u0275\u0275propertyInterpolate1", "tutorialGroup_r2", "\u0275\u0275pureFunction3", "_c2", "isUserRegistered", "isUserTutor", "extraColumn", "showIdColumn", "showChannelColumn", "timeZone", "mifOfDifferentLanguages", "mixOfOfflineAndOfflineTutorialGroups", "tutorialGroupsSplitAcrossMultipleCampuses", "TutorialGroupsTableComponent", "sortService", "inject", "SortService", "cdr", "ChangeDetectorRef", "tutorialGroups", "undefined", "timeZoneUsedForDisplay", "dayjs", "tz", "guess", "sortingPredicate", "ascending", "faQuestionCircle", "trackId", "index", "item", "sortRows", "sortByMultipleProperties", "sortByProperty", "ngOnChanges", "changes", "propName", "hasOwnProperty", "change", "currentValue", "detectChanges", "length", "some", "tutorialGroup", "campus", "isOnline", "language", "selectors", "contentQueries", "rf", "ctx", "dirIndex", "TemplateRef", "\u0275\u0275twoWayListener", "$event", "i0", "\u0275\u0275twoWayBindingSet", "\u0275\u0275listener", "\u0275\u0275template", "TutorialGroupsTableComponent_Conditional_13_Template", "TutorialGroupsTableComponent_Conditional_50_Template", "TutorialGroupsTableComponent_Conditional_51_Template", "TutorialGroupsTableComponent_Conditional_52_Template", "TutorialGroupsTableComponent_Conditional_60_Template", "TutorialGroupsTableComponent_Conditional_61_Template", "\u0275\u0275repeaterCreate", "TutorialGroupsTableComponent_For_67_Template", "_c0", "\u0275\u0275twoWayProperty", "\u0275\u0275conditional", "\u0275\u0275propertyInterpolate", "\u0275\u0275pipeBind1", "\u0275\u0275repeater", "TranslateDirective", "SortDirective", "SortByDirective", "FaIconComponent", "NgbTooltip", "RouterLink", "TutorialGroupRowComponent", "NgClass", "ArtemisTranslatePipe", "styles", "changeDetection", "import_papaparse", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275property", "ctx_r1", "faSpinner", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275textInterpolate", "validationError_r3", "\u0275\u0275repeaterCreate", "TutorialGroupsRegistrationImportDialogComponent_Conditional_402_For_8_Template", "\u0275\u0275repeaterTrackByIdentity", "\u0275\u0275repeater", "validationErrors", "\u0275\u0275pureFunction0", "_c1", "\u0275\u0275template", "TutorialGroupsRegistrationImportDialogComponent_Conditional_431_Conditional_3_Template", "\u0275\u0275conditional", "statusHeaderControl", "errors", "maxlength", "TutorialGroupsRegistrationImportDialogComponent_Conditional_441_Conditional_3_Template", "fixedPlaceValueControl", "\u0275\u0275listener", "$event", "\u0275\u0275restoreView", "_r4", "\u0275\u0275nextContext", "\u0275\u0275resetView", "onFilterChange", "selectedFilter", "\u0275\u0275textInterpolate1", "registration_r5", "error", "\u0275\u0275pipeBind1", "replaceAll", "trim", "toLocaleLowerCase", "TutorialGroupsRegistrationImportDialogComponent_Conditional_452_For_40_Conditional_69_Template", "\u0275\u0275classProp", "wasImported", "wasNotImported", "\u0275$index_758_r6", "tmp_16_0", "title", "undefined", "tmp_17_0", "student", "registrationNumber", "tmp_18_0", "login", "tmp_19_0", "firstName", "tmp_20_0", "lastName", "tmp_21_0", "campus", "tmp_22_0", "language", "tmp_23_0", "additionalInformation", "tmp_24_0", "capacity", "tmp_25_0", "isOnline", "isImportDone", "numberOfNotImportedRegistration", "TutorialGroupsRegistrationImportDialogComponent_Conditional_452_Conditional_34_Template", "TutorialGroupsRegistrationImportDialogComponent_Conditional_452_For_40_Template", "registrationsDisplayedInTable", "\u0275\u0275pureFunction1", "_c2", "allRegistrations", "length", "numberOfImportedRegistrations", "TutorialGroupsRegistrationImportDialogComponent_Conditional_456_Conditional_3_Template", "TutorialGroupsRegistrationImportDialogComponent_Conditional_456_Conditional_4_Template", "_r7", "clear", "faBan", "_r8", "import", "isSubmitDisabled", "faFileImport", "isImporting", "faCircleNotch", "_r9", "onFinish", "faCheck", "POSSIBLE_TUTORIAL_GROUP_TITLE_HEADERS", "POSSIBLE_REGISTRATION_NUMBER_HEADERS", "POSSIBLE_LOGIN_HEADERS", "POSSIBLE_FIRST_NAME_HEADERS", "POSSIBLE_LAST_NAME_HEADERS", "POSSIBLE_CAMPUS_HEADERS", "POSSIBLE_CAPACITY_HEADERS", "POSSIBLE_LANGUAGE_HEADERS", "POSSIBLE_ADDITIONAL_INFO_HEADERS", "POSSIBLE_IS_ONLINE_HEADERS", "TutorialGroupsRegistrationImportDialogComponent", "fb", "inject", "FormBuilder", "translateService", "TranslateService", "activeModal", "NgbActiveModal", "alertService", "AlertService", "tutorialGroupService", "TutorialGroupsService", "csvDownloadService", "CsvDownloadService", "ngUnsubscribe", "Subject", "fileInput", "selectedFile", "courseId", "notImportedRegistrations", "importedRegistrations", "isCSVParsing", "CsvExample", "dialogErrorSource", "dialogError$", "asObservable", "supportedTitleHeader", "join", "supportedRegistrationNumberHeaders", "supportedLoginHeaders", "supportedFirstNameHeaders", "supportedLastNameHeaders", "fixedPlaceForm", "get", "specifyFixedPlaceControl", "ngOnDestroy", "next", "complete", "unsubscribe", "ngOnInit", "group", "specifyFixedPlace", "statusHeader", "Validators", "maxLength", "fixedPlaceValue", "disable", "onStatusChanges", "onFixedPlaceCheckboxChange", "valueChanges", "pipe", "takeUntil", "subscribe", "selectedStatusColumn", "enable", "reset", "emitEvent", "isParseDisabled", "value", "invalid", "resetDialog", "onCSVFileSelected", "event", "target", "files", "readRegistrationsFromCSVFile", "csvFile", "__async", "csvRows", "parseResult", "parseCSVFile", "errorMessagesCombined", "map", "message", "push", "data", "performExtraRowValidation", "resetFileUpload", "parsedHeaders", "Object", "keys", "first", "removeWhitespacesAndUnderscoresFromHeaderName", "usedTitleHeader", "find", "includes", "usedRegistrationNumberHeader", "usedLoginHeader", "usedFirstNameHeader", "usedLastNameHeader", "usedCampusHeader", "usedCapacityHeader", "usedLanguageHeader", "usedAdditionalInfoHeader", "usedIsOnlineHeader", "statusColumn", "cleanString", "registrations", "filter", "row", "csvRow", "registration", "Number", "toLowerCase", "sort", "a", "b", "localeCompare", "performExtraDTOValidation", "header", "replace", "nativeElement", "res", "onSaveSuccess", "onSaveError", "generateCSV", "example", "csvContent", "Example1", "Example2", "Example3", "Example4", "downloadCSV", "titleValidationError", "withoutTitleValidation", "titleRegexValidationError", "titleRegexValidation", "withoutIdentifierValidationError", "withoutIdentifierValidation", "slice", "duplicatedRegistrationNumbers", "duplicatedLogins", "invalidList", "i", "entries", "checkIfRowContainsKey", "instant", "titleHeader", "titleRegex", "test", "user", "specifiesAUser", "specifiesARegistrationNumber", "specifiesALogin", "registrationNumbers", "uniqueRegistrationNumbers", "Set", "forEach", "rn", "logins", "uniqueLogins", "l", "some", "key", "close", "dismiss", "body", "importSuccessful", "Promise", "resolve", "reject", "parse", "delimiter", "transformHeader", "skipEmptyLines", "results", "onParseClicked", "newFilterValue", "selectors", "viewQuery", "rf", "ctx", "i0", "_r1", "TutorialGroupsRegistrationImportDialogComponent_Conditional_395_Template", "TutorialGroupsRegistrationImportDialogComponent_Conditional_402_Template", "TutorialGroupsRegistrationImportDialogComponent_Conditional_431_Template", "TutorialGroupsRegistrationImportDialogComponent_Conditional_441_Template", "TutorialGroupsRegistrationImportDialogComponent_Conditional_450_Template", "TutorialGroupsRegistrationImportDialogComponent_Conditional_451_Template", "TutorialGroupsRegistrationImportDialogComponent_Conditional_452_Template", "TutorialGroupsRegistrationImportDialogComponent_Conditional_456_Template", "TutorialGroupsRegistrationImportDialogComponent_Conditional_459_Template", "TutorialGroupsRegistrationImportDialogComponent_Conditional_460_Template", "TutorialGroupsRegistrationImportDialogComponent_Conditional_461_Template", "dirty", "touched", "TranslateDirective", "FaIconComponent", "FormsModule", "\u0275NgNoValidate", "DefaultValueAccessor", "CheckboxControlValueAccessor", "RadioControlValueAccessor", "NgControlStatus", "NgControlStatusGroup", "NgModel", "ReactiveFormsModule", "FormGroupDirective", "FormControlName", "ArtemisTranslatePipe", "styles", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275listener", "warning_r3", "\u0275\u0275restoreView", "_r2", "$implicit", "\u0275\u0275resetView", "close", "TutorialGroupsImportButtonComponent", "modalService", "inject", "NgbModal", "ngUnsubscribe", "Subject", "warningRef", "courseId", "importFinished", "EventEmitter", "openTutorialGroupImportDialog", "event", "stopPropagation", "modalRef", "open", "TutorialGroupsRegistrationImportDialogComponent", "size", "scrollable", "backdrop", "animation", "componentInstance", "from", "result", "pipe", "catchError", "EMPTY", "takeUntil", "subscribe", "openWarning", "centered", "emit", "ngOnDestroy", "next", "complete", "selectors", "viewQuery", "rf", "ctx", "$event", "i0", "_r1", "\u0275\u0275template", "TutorialGroupsImportButtonComponent_ng_template_5_Template", "\u0275\u0275templateRefExtractor", "NgbDropdownButtonItem", "NgbDropdownItem", "TranslateDirective", "encapsulation", "changeDetection", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275listener", "field_r6", "\u0275\u0275restoreView", "_r5", "$implicit", "ctx_r3", "\u0275\u0275nextContext", "\u0275\u0275resetView", "onFieldSelectionChange", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "value", "selected", "\u0275\u0275textInterpolate", "\u0275\u0275element", "modal_r3", "_r2", "dismiss", "toggleSelectAll", "\u0275\u0275repeaterCreate", "TutorialGroupsExportButtonComponent_ng_template_2_For_25_Template", "\u0275\u0275repeaterTrackByIdentity", "exportJSON", "exportCSV", "selectAll", "\u0275\u0275repeater", "availableFields", "selectedFields", "length", "TutorialGroupsExportButtonComponent", "modalService", "inject", "NgbModal", "tutorialGroupsService", "TutorialGroupsService", "alertService", "AlertService", "ngUnsubscribe", "Subject", "exportDialogRef", "courseId", "exportFinished", "EventEmitter", "openExportDialog", "event", "stopPropagation", "modalRef", "open", "size", "scrollable", "backdrop", "animation", "from", "result", "pipe", "catchError", "EMPTY", "takeUntil", "subscribe", "emit", "forEach", "field", "updateSelectedFields", "areAllFieldsSelected", "filter", "map", "every", "modal", "exportTutorialGroupsToCSV", "next", "blob", "a", "document", "createElement", "objectUrl", "URL", "createObjectURL", "href", "download", "click", "revokeObjectURL", "resetSelections", "close", "error", "exportToJson", "response", "Blob", "type", "url", "window", "ngOnDestroy", "complete", "selectors", "viewQuery", "rf", "ctx", "$event", "i0", "_r1", "\u0275\u0275template", "TutorialGroupsExportButtonComponent_ng_template_2_Template", "\u0275\u0275templateRefExtractor", "NgbDropdownButtonItem", "NgbDropdownItem", "TranslateDirective", "FormsModule", "\u0275NgNoValidate", "NgControlStatusGroup", "NgForm", "encapsulation", "changeDetection", "TutorialGroupsCourseInformationComponent", "tutorialGroups", "totalNumberOfRegistrations", "reduce", "acc", "tutorialGroup", "numberOfRegisteredUsers", "selectors", "inputs", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275property", "\u0275\u0275pipeBind1", "\u0275\u0275advance", "\u0275\u0275textInterpolate", "length", "SidePanelComponent", "TranslateDirective", "ArtemisTranslatePipe", "encapsulation", "changeDetection", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275propertyInterpolate", "\u0275\u0275pipeBind1", "\u0275\u0275property", "\u0275\u0275pureFunction2", "_c1", "ctx_r1", "courseId", "course", "tutorialGroupsConfiguration", "id", "faUmbrellaBeach", "_c2", "\u0275\u0275template", "TutorialGroupsManagementComponent_Conditional_16_Conditional_3_Template", "TutorialGroupsManagementComponent_Conditional_16_Conditional_17_Template", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "loadTutorialGroups", "\u0275\u0275conditional", "\u0275\u0275pureFunction1", "_c0", "faPlus", "_r3", "isAtLeastInstructor", "tutorialGroup_r4", "TutorialGroupsManagementComponent_Conditional_18_ng_template_3_Template", "tutorialGroups", "configuration", "useTutorialGroupChannels", "isMessagingEnabled", "timeZone", "_r5", "TutorialGroupsManagementComponent_Conditional_19_Conditional_15_Template", "\u0275\u0275textInterpolate1", "tutorialGroupFreeDays", "TutorialGroupsManagementComponent", "tutorialGroupService", "inject", "TutorialGroupsService", "activatedRoute", "ActivatedRoute", "alertService", "AlertService", "tutorialGroupsConfigurationService", "TutorialGroupsConfigurationService", "cdr", "ChangeDetectorRef", "ngUnsubscribe", "Subject", "isLoading", "ngOnInit", "data", "pipe", "takeUntil", "subscribe", "ngOnDestroy", "next", "complete", "combineLatest", "getAllForCourse", "getOneOfCourse", "finalize", "tutorialGroupsRes", "configurationRes", "body", "sort", "a", "b", "isUserTutor", "title", "localeCompare", "tutorialGroupFreePeriods", "error", "res", "onError", "add", "detectChanges", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "TutorialGroupsManagementComponent_Conditional_16_Template", "TutorialGroupsManagementComponent_Conditional_18_Template", "TutorialGroupsManagementComponent_Conditional_19_Template", "TutorialGroupsManagementComponent_Conditional_25_Template", "length", "LoadingIndicatorContainerComponent", "NgbTooltip", "RouterLink", "FaIconComponent", "TranslateDirective", "NgbDropdown", "NgbDropdownToggle", "NgbDropdownMenu", "NgbDropdownItem", "TutorialGroupsImportButtonComponent", "TutorialGroupsExportButtonComponent", "TutorialGroupsTableComponent", "TutorialGroupRowButtonsComponent", "TutorialGroupsCourseInformationComponent", "TutorialGroupFreeDaysOverviewComponent", "ArtemisTranslatePipe", "encapsulation", "changeDetection"]
}
