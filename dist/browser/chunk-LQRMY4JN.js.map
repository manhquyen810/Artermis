{
  "version": 3,
  "sources": ["src/main/webapp/app/course/competencies/competency-card/competency-card.component.ts", "src/main/webapp/app/course/competencies/competency-card/competency-card.component.html"],
  "sourcesContent": ["import dayjs from 'dayjs/esm';\r\nimport { Component, inject, input } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { CompetencyProgress, CourseCompetency, getIcon, getMastery, getProgress } from 'app/entities/competency.model';\r\nimport { RouterLink } from '@angular/router';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { NgClass } from '@angular/common';\r\nimport { CompetencyRingsComponent } from '../competency-rings/competency-rings.component';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\nimport { ArtemisTimeAgoPipe } from 'app/shared/pipes/artemis-time-ago.pipe';\r\nimport { HtmlForMarkdownPipe } from 'app/shared/pipes/html-for-markdown.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-competency-card',\r\n    templateUrl: './competency-card.component.html',\r\n    styleUrls: ['../../../overview/course-exercises/course-exercise-row.scss'],\r\n    imports: [RouterLink, FaIconComponent, NgbTooltip, TranslateDirective, NgClass, CompetencyRingsComponent, ArtemisTranslatePipe, ArtemisTimeAgoPipe, HtmlForMarkdownPipe],\r\n})\r\nexport class CompetencyCardComponent {\r\n    translateService = inject(TranslateService);\r\n\r\n    courseId = input<number | undefined>();\r\n    competency = input<CourseCompetency>();\r\n    isPrerequisite = input<boolean>();\r\n    hideProgress = input<boolean>(false);\r\n    noProgressRings = input<boolean>(false);\r\n\r\n    protected readonly getIcon = getIcon;\r\n\r\n    getUserProgress(): CompetencyProgress {\r\n        const userProgress = this.competency()?.userProgress?.first();\r\n        if (userProgress) {\r\n            return userProgress;\r\n        }\r\n        return { progress: 0, confidence: 1 } as CompetencyProgress;\r\n    }\r\n\r\n    get progress(): number {\r\n        return getProgress(this.getUserProgress());\r\n    }\r\n\r\n    get mastery(): number {\r\n        return getMastery(this.getUserProgress());\r\n    }\r\n\r\n    get isMastered(): boolean {\r\n        return this.mastery >= 100;\r\n    }\r\n\r\n    get softDueDatePassed(): boolean {\r\n        return dayjs().isAfter(this.competency()?.softDueDate);\r\n    }\r\n}\r\n", "<div\r\n    [id]=\"'competency-card-' + competency()?.id\"\r\n    class=\"course-exercise-row row align-items-center justify-content-between mb-2 mt-2 position-relative\"\r\n    [class.border-secondary]=\"isPrerequisite()\"\r\n    [class.border-success]=\"isMastered\"\r\n    [class.text-secondary]=\"isMastered\"\r\n>\r\n    @if (courseId() && !isPrerequisite()) {\r\n        <a class=\"stretched-link\" [routerLink]=\"['/courses', courseId(), 'competencies', competency()?.id!]\"></a>\r\n    }\r\n    <div class=\"col-auto d-none d-sm-block\">\r\n        <a class=\"exercise-row-icon\">\r\n            <fa-icon\r\n                [icon]=\"getIcon(competency()?.taxonomy)\"\r\n                size=\"2x\"\r\n                [ngbTooltip]=\"'artemisApp.courseCompetency.taxonomies.' + (competency()?.taxonomy ?? 'none') | artemisTranslate\"\r\n                container=\"body\"\r\n            />\r\n        </a>\r\n    </div>\r\n    <div class=\"col\">\r\n        <div class=\"row\">\r\n            <div class=\"col-auto d-sm-none\">\r\n                <h4 class=\"fw-medium\">\r\n                    <fa-icon [icon]=\"getIcon(competency()?.taxonomy)\" />\r\n                </h4>\r\n            </div>\r\n            <div class=\"col-sm col py-2\">\r\n                <h4 class=\"m-0\">\r\n                    {{ competency()?.title }}\r\n                    @if (isMastered) {\r\n                        <span class=\"badge text-white text-bg-success\" jhiTranslate=\"artemisApp.competency.mastered\"></span>\r\n                    }\r\n                    @if (competency()?.optional) {\r\n                        <span id=\"optional-badge\" class=\"badge text-white bg-warning\" jhiTranslate=\"artemisApp.competency.optional\"></span>\r\n                    }\r\n                </h4>\r\n                @if (competency()?.description) {\r\n                    <p class=\"m-0 markdown-preview\" [innerHTML]=\"competency()?.description | htmlForMarkdown\"></p>\r\n                }\r\n                @if (isPrerequisite() && competency()?.linkedCourseCompetency?.course) {\r\n                    <div>\r\n                        @if (competency()!.linkedCourseCompetency!.course!.title) {\r\n                            <span class=\"badge bg-primary\">{{ competency()!.linkedCourseCompetency!.course!.title! }}</span>\r\n                        }\r\n                        @if (competency()!.linkedCourseCompetency!.course!.semester) {\r\n                            <span class=\"badge bg-secondary\">{{ competency()!.linkedCourseCompetency!.course!.semester! }}</span>\r\n                        }\r\n                    </div>\r\n                }\r\n                <ng-content />\r\n            </div>\r\n            @if (competency()?.softDueDate) {\r\n                <div class=\"col-sm col py-2\" style=\"max-width: fit-content\">\r\n                    <span style=\"vertical-align: middle\" jhiTranslate=\"artemisApp.competency.competencyCard.softDueDate\"></span>\r\n                    <span class=\"badge\" [ngClass]=\"softDueDatePassed && !isMastered ? 'bg-danger' : 'bg-success'\" id=\"date-badge\">\r\n                        {{ competency()!.softDueDate! | artemisTimeAgo }}\r\n                    </span>\r\n                </div>\r\n            }\r\n            @if (!noProgressRings()) {\r\n                <div class=\"col-sm col text-end py-1 px-2\" style=\"max-width: 95px\">\r\n                    <jhi-competency-rings [progress]=\"progress\" [mastery]=\"mastery\" [hideProgress]=\"hideProgress()\" />\r\n                </div>\r\n            }\r\n        </div>\r\n    </div>\r\n</div>\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275property", "\u0275\u0275pureFunction2", "_c1", "ctx_r0", "courseId", "tmp_1_0", "competency", "id", "\u0275\u0275pipeBind1", "description", "\u0275\u0275sanitizeHtml", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275textInterpolate", "linkedCourseCompetency", "course", "title", "semester", "\u0275\u0275template", "CompetencyCardComponent_Conditional_32_Conditional_3_Template", "CompetencyCardComponent_Conditional_32_Conditional_4_Template", "\u0275\u0275conditional", "softDueDatePassed", "isMastered", "\u0275\u0275textInterpolate1", "softDueDate", "progress", "mastery", "hideProgress", "CompetencyCardComponent", "translateService", "inject", "TranslateService", "input", "isPrerequisite", "noProgressRings", "getIcon", "getUserProgress", "userProgress", "first", "confidence", "getProgress", "getMastery", "dayjs", "isAfter", "selectors", "inputs", "ngContentSelectors", "_c0", "decls", "vars", "consts", "template", "rf", "ctx", "CompetencyCardComponent_Conditional_2_Template", "CompetencyCardComponent_Conditional_28_Template", "CompetencyCardComponent_Conditional_29_Template", "CompetencyCardComponent_Conditional_31_Template", "CompetencyCardComponent_Conditional_32_Template", "\u0275\u0275projection", "CompetencyCardComponent_Conditional_36_Template", "CompetencyCardComponent_Conditional_37_Template", "\u0275\u0275classProp", "tmp_3_0", "tmp_5_0", "taxonomy", "tmp_6_0", "undefined", "tmp_7_0", "tmp_8_0", "tmp_10_0", "optional", "tmp_11_0", "tmp_12_0", "tmp_13_0", "RouterLink", "FaIconComponent", "NgbTooltip", "TranslateDirective", "NgClass", "CompetencyRingsComponent", "ArtemisTranslatePipe", "ArtemisTimeAgoPipe", "HtmlForMarkdownPipe", "styles"]
}
