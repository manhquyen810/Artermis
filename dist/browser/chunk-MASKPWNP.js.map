{
  "version": 3,
  "sources": ["src/main/webapp/app/shared/confirm-icon/confirm-icon.component.ts", "src/main/webapp/app/shared/confirm-icon/confirm-icon.component.html"],
  "sourcesContent": ["import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { IconProp, SizeProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { faCheck, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgClass } from '@angular/common';\r\n\r\n@Component({\r\n    selector: 'jhi-confirm-icon',\r\n    templateUrl: './confirm-icon.component.html',\r\n    imports: [FaIconComponent, NgbTooltip, NgClass],\r\n})\r\nexport class ConfirmIconComponent {\r\n    @Input() initialIcon = <IconProp>faTrash;\r\n    @Input() initialTooltip: string;\r\n    @Input() confirmIcon = <IconProp>faCheck;\r\n    @Input() confirmTooltip: string;\r\n    @Input() iconSize = <SizeProp>'md';\r\n    @Output() confirmEvent = new EventEmitter();\r\n    showConfirm = false;\r\n\r\n    /**\r\n     * call toggle and emit confirmEvent\r\n     */\r\n    confirmAction(): void {\r\n        this.toggle();\r\n        this.confirmEvent.emit(true);\r\n    }\r\n\r\n    /**\r\n     * toggle showConfirm\r\n     */\r\n    toggle(): void {\r\n        this.showConfirm = !this.showConfirm;\r\n    }\r\n}\r\n", "@if (!showConfirm) {\r\n    <fa-icon style=\"display: inline-flex; justify-content: center\" [icon]=\"initialIcon\" [ngbTooltip]=\"initialTooltip\" (click)=\"toggle()\" />\r\n}\r\n@if (showConfirm) {\r\n    <fa-icon [ngClass]=\"'text-danger'\" [icon]=\"confirmIcon\" [ngbTooltip]=\"confirmTooltip\" [size]=\"iconSize\" (mouseleave)=\"toggle()\" (click)=\"confirmAction()\" />\r\n}\r\n"],
  "mappings": "4VCCIA,EAAA,EAAA;KAAA,EAAAC,EAAA,EAAA,UAAA,CAAA,EAAkHC,EAAA,QAAA,UAAA,CAAAC,EAAAC,CAAA,EAAA,IAAAC,EAAAC,EAAA,EAAA,OAAAC,EAASF,EAAAG,OAAA,CAAQ,CAAA,CAAA,EAAnIC,EAAA,EACJT,EAAA,EAAA;CAAA,oBADmEU,EAAA,EAAAC,EAAA,OAAAN,EAAAO,WAAA,EAAoB,aAAAP,EAAAQ,cAAA,qCAGnFb,EAAA,EAAA;KAAA,EAAAC,EAAA,EAAA,UAAA,CAAA,EAAwGC,EAAA,aAAA,UAAA,CAAAC,EAAAW,CAAA,EAAA,IAAAT,EAAAC,EAAA,EAAA,OAAAC,EAAcF,EAAAG,OAAA,CAAQ,CAAA,CAAA,EAAC,QAAA,UAAA,CAAAL,EAAAW,CAAA,EAAA,IAAAT,EAAAC,EAAA,EAAA,OAAAC,EAAUF,EAAAU,cAAA,CAAe,CAAA,CAAA,EAAxJN,EAAA,EACJT,EAAA,EAAA;CAAA,oBADaU,EAAA,EAAAC,EAAA,UAAA,aAAA,EAAyB,OAAAN,EAAAW,WAAA,EAAqB,aAAAX,EAAAY,cAAA,EAA8B,OAAAZ,EAAAa,QAAA,GDQzF,IAAaC,GAAoB,IAAA,CAA3B,MAAOA,CAAoB,CACpBP,YAAwBQ,EACxBP,eACAG,YAAwBK,EACxBJ,eACAC,SAAqB,KACpBI,aAAe,IAAIC,EAC7BC,YAAc,GAKdT,eAAa,CACT,KAAKP,OAAM,EACX,KAAKc,aAAaG,KAAK,EAAI,CAC/B,CAKAjB,QAAM,CACF,KAAKgB,YAAc,CAAC,KAAKA,WAC7B,4CAtBSL,EAAoB,2BAApBA,EAAoBO,UAAA,CAAA,CAAA,kBAAA,CAAA,EAAAC,OAAA,CAAAf,YAAA,cAAAC,eAAA,iBAAAG,YAAA,cAAAC,eAAA,iBAAAC,SAAA,UAAA,EAAAU,QAAA,CAAAN,aAAA,cAAA,EAAAO,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,UAAA,cAAA,kBAAA,SAAA,EAAA,QAAA,OAAA,YAAA,EAAA,CAAA,EAAA,aAAA,QAAA,UAAA,OAAA,aAAA,MAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,GCZjCE,EAAA,EAAAC,EAAA,EAAA,CAAA,EAAoB,EAAAC,EAAA,EAAA,CAAA,QAApBC,EAAAJ,EAAAV,YAAA,GAAA,CAAA,EAGAd,EAAA,EAAA4B,EAAAJ,EAAAV,YAAA,EAAA,EAAA,kBDOce,EAAiBC,EAAYC,CAAO,EAAAC,cAAA,CAAA,CAAA,SAErCvB,CAAoB,GAAA",
  "names": ["\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "toggle", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "initialIcon", "initialTooltip", "_r3", "confirmAction", "confirmIcon", "confirmTooltip", "iconSize", "ConfirmIconComponent", "faTrash", "faCheck", "confirmEvent", "EventEmitter", "showConfirm", "emit", "selectors", "inputs", "outputs", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275template", "ConfirmIconComponent_Conditional_0_Template", "ConfirmIconComponent_Conditional_1_Template", "\u0275\u0275conditional", "FaIconComponent", "NgbTooltip", "NgClass", "encapsulation"]
}
