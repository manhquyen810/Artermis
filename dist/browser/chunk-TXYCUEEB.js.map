{
  "version": 3,
  "sources": ["src/main/webapp/app/overview/course-lectures/lecture-unit/lecture-unit.directive.ts", "src/main/webapp/app/overview/course-lectures/lecture-unit/lecture-unit.component.ts", "src/main/webapp/app/overview/course-lectures/lecture-unit/lecture-unit.component.html", "src/main/webapp/app/overview/course-lectures/attachment-unit/attachment-unit.component.ts", "src/main/webapp/app/overview/course-lectures/attachment-unit/attachment-unit.component.html", "src/main/webapp/app/overview/course-lectures/exercise-unit/exercise-unit.component.ts", "src/main/webapp/app/overview/course-lectures/exercise-unit/exercise-unit.component.html", "src/main/webapp/app/overview/course-lectures/video-unit/video-unit.component.ts", "src/main/webapp/app/overview/course-lectures/video-unit/video-unit.component.html", "src/main/webapp/app/overview/course-lectures/text-unit/text-unit.component.ts", "src/main/webapp/app/overview/course-lectures/text-unit/text-unit.component.html", "src/main/webapp/app/overview/course-lectures/online-unit/online-unit.component.ts", "src/main/webapp/app/overview/course-lectures/online-unit/online-unit.component.html"],
  "sourcesContent": ["import { AbstractScienceComponent } from 'app/shared/science/science.component';\r\nimport { ScienceEventType } from 'app/shared/science/science.model';\r\nimport { LectureUnit } from 'app/entities/lecture-unit/lectureUnit.model';\r\nimport { effect, input, output } from '@angular/core';\r\nimport { Directive } from '@angular/core';\r\nimport { LectureUnitCompletionEvent } from 'app/overview/course-lectures/course-lecture-details.component';\r\n\r\n@Directive()\r\nexport class LectureUnitDirective<T extends LectureUnit> extends AbstractScienceComponent {\r\n    lectureUnit = input.required<T>();\r\n\r\n    readonly onCompletion = output<LectureUnitCompletionEvent>();\r\n    readonly onCollapse = output<boolean>();\r\n\r\n    isPresentationMode = input<boolean>(false);\r\n\r\n    constructor() {\r\n        super(ScienceEventType.LECTURE__OPEN_UNIT);\r\n\r\n        effect(() => {\r\n            this.setResourceId(this.lectureUnit().id!);\r\n        });\r\n    }\r\n\r\n    toggleCompletion(completed: boolean) {\r\n        this.onCompletion.emit({ lectureUnit: this.lectureUnit(), completed: completed });\r\n    }\r\n\r\n    toggleCollapse(isCollapsed: boolean) {\r\n        this.onCollapse.emit(isCollapsed);\r\n    }\r\n}\r\n", "import { Component, computed, input, output, signal } from '@angular/core';\r\nimport { IconDefinition, faExternalLinkAlt, faSquare, faSquareCheck } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\n\r\nimport { NgbCollapseModule, NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { LectureUnit } from 'app/entities/lecture-unit/lectureUnit.model';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\nimport { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n    selector: 'jhi-lecture-unit-card',\r\n    imports: [FontAwesomeModule, NgbCollapseModule, TranslateDirective, ArtemisTranslatePipe, ArtemisDatePipe, CommonModule, NgbTooltipModule],\r\n    templateUrl: './lecture-unit.component.html',\r\n    styleUrl: './lecture-unit.component.scss',\r\n})\r\nexport class LectureUnitComponent {\r\n    protected faSquareCheck = faSquareCheck;\r\n    protected faSquare = faSquare;\r\n\r\n    lectureUnit = input.required<LectureUnit>();\r\n    icon = input.required<IconDefinition>();\r\n\r\n    showViewIsolatedButton = input<boolean>(false);\r\n    viewIsolatedButtonLabel = input<string>('artemisApp.textUnit.isolated');\r\n    viewIsolatedButtonIcon = input<IconDefinition>(faExternalLinkAlt);\r\n    isPresentationMode = input.required<boolean>();\r\n\r\n    readonly onShowIsolated = output<void>();\r\n    readonly onCollapse = output<boolean>();\r\n    readonly onCompletion = output<boolean>();\r\n\r\n    readonly isCollapsed = signal<boolean>(true);\r\n\r\n    readonly isVisibleToStudents = computed(() => this.lectureUnit().visibleToStudents);\r\n\r\n    toggleCompletion(event: Event) {\r\n        event.stopPropagation();\r\n        this.onCompletion.emit(!this.lectureUnit().completed!);\r\n    }\r\n\r\n    toggleCollapse() {\r\n        this.isCollapsed.update((isCollapsed) => !isCollapsed);\r\n        this.onCollapse.emit(this.isCollapsed());\r\n    }\r\n\r\n    handleIsolatedView(event: Event) {\r\n        event.stopPropagation();\r\n        this.onShowIsolated.emit();\r\n    }\r\n}\r\n", "<div class=\"lecture-unit-card col clickable\">\r\n    <div class=\"lecture-unit-header row px-4 m-0\" id=\"lecture-unit-toggle-button\" (click)=\"toggleCollapse()\">\r\n        <div class=\"d-flex p-0 justify-content-between align-items-center\">\r\n            <div class=\"d-flex\">\r\n                <fa-icon class=\"me-3\" size=\"lg\" [icon]=\"icon()\" />\r\n                <h5 class=\"m-0\">{{ lectureUnit().name ?? '' }}</h5>\r\n                @if (!isVisibleToStudents()) {\r\n                    <span\r\n                        class=\"badge bg-warning ms-2\"\r\n                        ngbTooltip=\"{{ 'artemisApp.textUnit.notReleasedTooltip' | artemisTranslate }} {{ lectureUnit().releaseDate | artemisDate }}\"\r\n                        jhiTranslate=\"artemisApp.courseOverview.exerciseList.notReleased\"\r\n                    ></span>\r\n                }\r\n            </div>\r\n            <div class=\"d-flex align-items-center\">\r\n                @if (showViewIsolatedButton()) {\r\n                    <button id=\"view-isolated-button\" class=\"btn btn-sm btn-primary\" (click)=\"handleIsolatedView($event)\">\r\n                        <fa-icon [icon]=\"viewIsolatedButtonIcon()\" />\r\n                        <span class=\"d-none d-md-inline\" [jhiTranslate]=\"viewIsolatedButtonLabel()\"></span>\r\n                    </button>\r\n                }\r\n                @if (this.lectureUnit().completed !== undefined && !isPresentationMode() && isVisibleToStudents()) {\r\n                    <fa-icon\r\n                        id=\"completed-checkbox\"\r\n                        class=\"ms-3\"\r\n                        [ngClass]=\"{ 'text-body-secondary': !this.lectureUnit().completed, 'text-success': this.lectureUnit().completed }\"\r\n                        size=\"lg\"\r\n                        [icon]=\"this.lectureUnit().completed ? faSquareCheck : faSquare\"\r\n                        [ngbTooltip]=\"(this.lectureUnit().completed ? 'artemisApp.lectureUnit.completedTooltip' : 'artemisApp.lectureUnit.uncompletedTooltip') | artemisTranslate\"\r\n                        (click)=\"toggleCompletion($event)\"\r\n                    />\r\n                }\r\n            </div>\r\n        </div>\r\n    </div>\r\n    @if (!isCollapsed()) {\r\n        <div id=\"lecture-unit-body\" class=\"lecture-unit-body px-4 py-2\">\r\n            <ng-content />\r\n        </div>\r\n    }\r\n</div>\r\n", "import { Component, inject } from '@angular/core';\r\nimport { LectureUnitDirective } from 'app/overview/course-lectures/lecture-unit/lecture-unit.directive';\r\nimport { AttachmentUnit } from 'app/entities/lecture-unit/attachmentUnit.model';\r\nimport { LectureUnitComponent } from 'app/overview/course-lectures/lecture-unit/lecture-unit.component';\r\n\r\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core';\r\nimport {\r\n    faDownload,\r\n    faFile,\r\n    faFileArchive,\r\n    faFileCode,\r\n    faFileCsv,\r\n    faFileExcel,\r\n    faFileImage,\r\n    faFileLines,\r\n    faFilePdf,\r\n    faFilePen,\r\n    faFilePowerpoint,\r\n    faFileWord,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { FileService } from 'app/shared/http/file.service';\r\nimport { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\n\r\n@Component({\r\n    selector: 'jhi-attachment-unit',\r\n    imports: [LectureUnitComponent, ArtemisDatePipe, TranslateDirective],\r\n    templateUrl: './attachment-unit.component.html',\r\n})\r\nexport class AttachmentUnitComponent extends LectureUnitDirective<AttachmentUnit> {\r\n    protected readonly faDownload = faDownload;\r\n\r\n    private readonly fileService = inject(FileService);\r\n\r\n    /**\r\n     * Returns the name of the attachment file (including its file extension)\r\n     */\r\n    getFileName(): string {\r\n        if (this.lectureUnit().attachment?.link) {\r\n            const link = this.lectureUnit().attachment!.link!;\r\n            const filename = link.substring(link.lastIndexOf('/') + 1);\r\n            return this.fileService.replaceAttachmentPrefixAndUnderscores(filename);\r\n        }\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * Downloads the file\r\n     */\r\n    handleDownload() {\r\n        this.logEvent();\r\n\r\n        if (this.lectureUnit().attachment?.link) {\r\n            const link = this.lectureUnit().attachment!.link!;\r\n            this.fileService.downloadFileByAttachmentName(link, this.lectureUnit().attachment!.name!);\r\n            this.onCompletion.emit({ lectureUnit: this.lectureUnit(), completed: true });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the matching icon for the file extension of the attachment\r\n     */\r\n    getAttachmentIcon(): IconDefinition {\r\n        if (this.lectureUnit().attachment?.link) {\r\n            const fileExtension = this.lectureUnit().attachment?.link?.split('.').pop()!.toLocaleLowerCase();\r\n            switch (fileExtension) {\r\n                case 'png':\r\n                case 'jpg':\r\n                case 'jpeg':\r\n                case 'gif':\r\n                case 'svg':\r\n                    return faFileImage;\r\n                case 'pdf':\r\n                    return faFilePdf;\r\n                case 'zip':\r\n                case 'tar':\r\n                    return faFileArchive;\r\n                case 'txt':\r\n                case 'rtf':\r\n                case 'md':\r\n                    return faFileLines;\r\n                case 'htm':\r\n                case 'html':\r\n                case 'json':\r\n                    return faFileCode;\r\n                case 'doc':\r\n                case 'docx':\r\n                case 'pages':\r\n                case 'pages-tef':\r\n                case 'odt':\r\n                    return faFileWord;\r\n                case 'csv':\r\n                    return faFileCsv;\r\n                case 'xls':\r\n                case 'xlsx':\r\n                case 'numbers':\r\n                case 'ods':\r\n                    return faFileExcel;\r\n                case 'ppt':\r\n                case 'pptx':\r\n                case 'key':\r\n                case 'odp':\r\n                    return faFilePowerpoint;\r\n                case 'odg':\r\n                case 'odc':\r\n                case 'odi':\r\n                case 'odf':\r\n                    return faFilePen;\r\n                default:\r\n                    return faFile;\r\n            }\r\n        }\r\n        return faFile;\r\n    }\r\n}\r\n", "<jhi-lecture-unit-card\r\n    [lectureUnit]=\"lectureUnit()\"\r\n    [icon]=\"getAttachmentIcon()\"\r\n    [showViewIsolatedButton]=\"true\"\r\n    [viewIsolatedButtonLabel]=\"'artemisApp.attachmentUnit.download'\"\r\n    [viewIsolatedButtonIcon]=\"faDownload\"\r\n    [isPresentationMode]=\"isPresentationMode()\"\r\n    (onCompletion)=\"toggleCompletion($event)\"\r\n    (onCollapse)=\"toggleCollapse($event)\"\r\n    (onShowIsolated)=\"handleDownload()\"\r\n>\r\n    @if (lectureUnit().attachment?.uploadDate) {\r\n        <div>\r\n            <span class=\"font-weight-bold\" jhiTranslate=\"artemisApp.attachmentUnit.uploadDate\">: </span>\r\n            {{ lectureUnit().attachment?.uploadDate | artemisDate }}\r\n        </div>\r\n    }\r\n    @if (lectureUnit().attachment?.version) {\r\n        <div>\r\n            <span class=\"font-weight-bold\" jhiTranslate=\"artemisApp.attachmentUnit.version\">: </span>\r\n            {{ lectureUnit().attachment?.version }}\r\n        </div>\r\n    }\r\n    @if (lectureUnit().attachment?.link) {\r\n        <div>\r\n            <span class=\"font-weight-bold\" jhiTranslate=\"artemisApp.attachmentUnit.FileName\">: </span>\r\n            {{ getFileName() }}\r\n        </div>\r\n    }\r\n    @if (lectureUnit()?.description) {\r\n        <div>\r\n            <hr />\r\n            {{ lectureUnit().description }}\r\n        </div>\r\n    }\r\n</jhi-lecture-unit-card>\r\n", "import { Component, HostBinding, Input, ViewEncapsulation } from '@angular/core';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { ExerciseUnit } from 'app/entities/lecture-unit/exerciseUnit.model';\r\nimport { CourseExerciseRowComponent } from '../../course-exercises/course-exercise-row.component';\r\n\r\n@Component({\r\n    selector: 'jhi-exercise-unit',\r\n    templateUrl: './exercise-unit.component.html',\r\n    encapsulation: ViewEncapsulation.None,\r\n    styleUrls: ['./exercise-unit.component.scss'],\r\n    imports: [CourseExerciseRowComponent],\r\n})\r\nexport class ExerciseUnitComponent {\r\n    @HostBinding('className') componentClass: string;\r\n\r\n    constructor() {\r\n        this.componentClass = 'exercise-unit';\r\n    }\r\n\r\n    @Input() exerciseUnit: ExerciseUnit;\r\n    @Input() course: Course;\r\n    @Input() isPresentationMode = false;\r\n}\r\n", "@if (exerciseUnit?.exercise && course) {\r\n    <jhi-course-exercise-row class=\"exercise-row\" [exercise]=\"exerciseUnit.exercise!\" [course]=\"course\" [hasGuidedTour]=\"false\" [isPresentationMode]=\"isPresentationMode\" />\r\n}\r\n", "import { Component, computed } from '@angular/core';\r\nimport { VideoUnit } from 'app/entities/lecture-unit/videoUnit.model';\r\nimport urlParser from 'js-video-url-parser';\r\nimport { faVideo } from '@fortawesome/free-solid-svg-icons';\r\nimport { LectureUnitDirective } from 'app/overview/course-lectures/lecture-unit/lecture-unit.directive';\r\nimport { LectureUnitComponent } from 'app/overview/course-lectures/lecture-unit/lecture-unit.component';\r\nimport { SafeResourceUrlPipe } from 'app/shared/pipes/safe-resource-url.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-video-unit',\r\n    imports: [LectureUnitComponent, SafeResourceUrlPipe],\r\n    templateUrl: './video-unit.component.html',\r\n})\r\nexport class VideoUnitComponent extends LectureUnitDirective<VideoUnit> {\r\n    protected readonly faVideo = faVideo;\r\n\r\n    // List of regexes that should not be blocked by js-video-url-parser\r\n    private readonly videoUrlAllowList = [\r\n        // TUM-Live. Example: 'https://live.rbg.tum.de/w/test/26?video_only=1'\r\n        RegExp('^https://live\\\\.rbg\\\\.tum\\\\.de/w/\\\\w+/\\\\d+(/(CAM|COMB|PRES))?\\\\?video_only=1$'),\r\n    ];\r\n    private completionTimeout: NodeJS.Timeout;\r\n\r\n    readonly videoUrl = computed(() => {\r\n        if (this.lectureUnit().source) {\r\n            const source = this.lectureUnit().source!;\r\n            if (this.videoUrlAllowList.some((r) => r.test(source)) || !urlParser || urlParser.parse(source)) {\r\n                return source;\r\n            }\r\n        }\r\n        return undefined;\r\n    });\r\n\r\n    toggleCollapse(isCollapsed: boolean) {\r\n        super.toggleCollapse(isCollapsed);\r\n        if (!isCollapsed) {\r\n            // log event\r\n            this.logEvent();\r\n\r\n            // Mark the unit as completed when the user has it open for at least 5 minutes\r\n            this.completionTimeout = setTimeout(\r\n                () => {\r\n                    this.onCompletion.emit({ lectureUnit: this.lectureUnit(), completed: true });\r\n                },\r\n                1000 * 60 * 5,\r\n            );\r\n        } else {\r\n            clearTimeout(this.completionTimeout);\r\n        }\r\n    }\r\n}\r\n", "<jhi-lecture-unit-card\r\n    [lectureUnit]=\"lectureUnit()\"\r\n    [icon]=\"faVideo\"\r\n    [showViewIsolatedButton]=\"false\"\r\n    [isPresentationMode]=\"isPresentationMode()\"\r\n    (onCompletion)=\"toggleCompletion($event)\"\r\n    (onCollapse)=\"toggleCollapse($event)\"\r\n>\r\n    <div class=\"ratio ratio-16x9\">\r\n        <iframe id=\"videoFrame\" class=\"rounded\" [src]=\"videoUrl() | safeResourceUrl\" allow=\"fullscreen\"></iframe>\r\n    </div>\r\n    {{ lectureUnit().description }}\r\n</jhi-lecture-unit-card>\r\n", "import { Component, computed, inject } from '@angular/core';\r\nimport { TextUnit } from 'app/entities/lecture-unit/textUnit.model';\r\nimport { ArtemisMarkdownService } from 'app/shared/markdown.service';\r\nimport { LectureUnitComponent } from 'app/overview/course-lectures/lecture-unit/lecture-unit.component';\r\nimport { faScroll } from '@fortawesome/free-solid-svg-icons';\r\nimport { htmlForMarkdown } from 'app/shared/util/markdown.conversion.util';\r\nimport { LectureUnitDirective } from 'app/overview/course-lectures/lecture-unit/lecture-unit.directive';\r\n\r\n@Component({\r\n    selector: 'jhi-text-unit',\r\n    imports: [LectureUnitComponent],\r\n    templateUrl: './text-unit.component.html',\r\n})\r\nexport class TextUnitComponent extends LectureUnitDirective<TextUnit> {\r\n    protected readonly faScroll = faScroll;\r\n\r\n    private readonly artemisMarkdown = inject(ArtemisMarkdownService);\r\n\r\n    readonly formattedContent = computed(() => {\r\n        if (this.lectureUnit().content) {\r\n            return this.artemisMarkdown.safeHtmlForMarkdown(this.lectureUnit().content);\r\n        }\r\n        return undefined;\r\n    });\r\n\r\n    handleIsolatedView() {\r\n        // log event\r\n        this.logEvent();\r\n\r\n        const win = window.open('about:blank', '_blank')!;\r\n        win.document.write(`<html><head><title>${this.lectureUnit().name}</title>`);\r\n        win.document.write('<link rel=\"stylesheet\" href=\"public/content/github-markdown.css\">');\r\n        win.document.write('</head><body class=\"markdown-body\">');\r\n        win.document.write('</body></html>');\r\n        win.document.close();\r\n        win.document.body.innerHTML = htmlForMarkdown(this.lectureUnit().content, []);\r\n        win.focus();\r\n    }\r\n}\r\n", "<jhi-lecture-unit-card\r\n    [lectureUnit]=\"lectureUnit()\"\r\n    [icon]=\"faScroll\"\r\n    [showViewIsolatedButton]=\"true\"\r\n    [isPresentationMode]=\"isPresentationMode()\"\r\n    (onCompletion)=\"toggleCompletion($event)\"\r\n    (onCollapse)=\"toggleCollapse($event)\"\r\n    (onShowIsolated)=\"handleIsolatedView()\"\r\n>\r\n    @if (formattedContent()) {\r\n        <div class=\"markdown-preview\" id=\"printContent\" [innerHtml]=\"formattedContent()\"></div>\r\n    }\r\n</jhi-lecture-unit-card>\r\n", "import { Component } from '@angular/core';\r\nimport { LectureUnitDirective } from 'app/overview/course-lectures/lecture-unit/lecture-unit.directive';\r\nimport { OnlineUnit } from 'app/entities/lecture-unit/onlineUnit.model';\r\nimport { LectureUnitComponent } from 'app/overview/course-lectures/lecture-unit/lecture-unit.component';\r\nimport { faUpRightFromSquare } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n    selector: 'jhi-online-unit',\r\n    imports: [LectureUnitComponent],\r\n    templateUrl: './online-unit.component.html',\r\n})\r\nexport class OnlineUnitComponent extends LectureUnitDirective<OnlineUnit> {\r\n    protected readonly faUpRightFromSquare = faUpRightFromSquare;\r\n\r\n    handleIsolatedView() {\r\n        this.logEvent();\r\n\r\n        if (this.lectureUnit().source) {\r\n            window.open(this.lectureUnit().source!, '_blank');\r\n            this.onCompletion.emit({ lectureUnit: this.lectureUnit(), completed: true });\r\n        }\r\n    }\r\n}\r\n", "<jhi-lecture-unit-card\r\n    [lectureUnit]=\"lectureUnit()\"\r\n    [icon]=\"faUpRightFromSquare\"\r\n    [showViewIsolatedButton]=\"true\"\r\n    [viewIsolatedButtonLabel]=\"'artemisApp.onlineUnit.doOpen'\"\r\n    [isPresentationMode]=\"isPresentationMode()\"\r\n    (onCompletion)=\"toggleCompletion($event)\"\r\n    (onCollapse)=\"toggleCollapse($event)\"\r\n    (onShowIsolated)=\"handleIsolatedView()\"\r\n>\r\n    {{ this.lectureUnit().description }}\r\n</jhi-lecture-unit-card>\r\n"],
  "mappings": "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",
  "names": ["LectureUnitDirective", "AbstractScienceComponent", "lectureUnit", "input", "required", "onCompletion", "output", "onCollapse", "isPresentationMode", "constructor", "ScienceEventType", "LECTURE__OPEN_UNIT", "effect", "setResourceId", "id", "toggleCompletion", "completed", "emit", "toggleCollapse", "isCollapsed", "inputs", "outputs", "features", "\u0275\u0275InheritDefinitionFeature", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275propertyInterpolate2", "\u0275\u0275pipeBind1", "ctx_r0", "lectureUnit", "releaseDate", "\u0275\u0275elementStart", "\u0275\u0275listener", "$event", "\u0275\u0275restoreView", "_r2", "\u0275\u0275nextContext", "\u0275\u0275resetView", "handleIsolatedView", "\u0275\u0275elementEnd", "\u0275\u0275property", "viewIsolatedButtonIcon", "viewIsolatedButtonLabel", "_r3", "toggleCompletion", "\u0275\u0275pureFunction2", "_c1", "completed", "faSquareCheck", "faSquare", "\u0275\u0275projection", "LectureUnitComponent", "input", "required", "icon", "showViewIsolatedButton", "faExternalLinkAlt", "isPresentationMode", "onShowIsolated", "output", "onCollapse", "onCompletion", "isCollapsed", "signal", "isVisibleToStudents", "computed", "visibleToStudents", "event", "stopPropagation", "emit", "toggleCollapse", "update", "selectors", "inputs", "outputs", "ngContentSelectors", "_c0", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275template", "LectureUnitComponent_Conditional_13_Template", "LectureUnitComponent_Conditional_17_Template", "LectureUnitComponent_Conditional_18_Template", "LectureUnitComponent_Conditional_22_Template", "\u0275\u0275textInterpolate", "tmp_1_0", "name", "undefined", "\u0275\u0275conditional", "FontAwesomeModule", "FaIconComponent", "NgbCollapseModule", "TranslateDirective", "ArtemisTranslatePipe", "ArtemisDatePipe", "CommonModule", "NgClass", "NgbTooltipModule", "NgbTooltip", "styles", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275textInterpolate1", "\u0275\u0275pipeBind1", "tmp_1_0", "ctx_r0", "lectureUnit", "attachment", "uploadDate", "version", "getFileName", "\u0275\u0275element", "description", "AttachmentUnitComponent", "LectureUnitDirective", "faDownload", "fileService", "inject", "FileService", "link", "filename", "substring", "lastIndexOf", "replaceAttachmentPrefixAndUnderscores", "handleDownload", "logEvent", "downloadFileByAttachmentName", "name", "onCompletion", "emit", "completed", "getAttachmentIcon", "split", "pop", "toLocaleLowerCase", "faFileImage", "faFilePdf", "faFileArchive", "faFileLines", "faFileCode", "faFileWord", "faFileCsv", "faFileExcel", "faFilePowerpoint", "faFilePen", "faFile", "__ngFactoryType__", "selectors", "features", "\u0275\u0275InheritDefinitionFeature", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275listener", "$event", "toggleCompletion", "toggleCollapse", "\u0275\u0275template", "AttachmentUnitComponent_Conditional_2_Template", "AttachmentUnitComponent_Conditional_3_Template", "AttachmentUnitComponent_Conditional_4_Template", "AttachmentUnitComponent_Conditional_5_Template", "\u0275\u0275property", "isPresentationMode", "\u0275\u0275conditional", "tmp_6_0", "tmp_7_0", "tmp_8_0", "tmp_9_0", "LectureUnitComponent", "ArtemisDatePipe", "TranslateDirective", "encapsulation", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275property", "ctx_r0", "exerciseUnit", "exercise", "course", "isPresentationMode", "ExerciseUnitComponent", "componentClass", "constructor", "selectors", "hostVars", "hostBindings", "rf", "ctx", "\u0275\u0275hostProperty", "\u0275\u0275template", "ExerciseUnitComponent_Conditional_0_Template", "\u0275\u0275conditional", "CourseExerciseRowComponent", "styles", "encapsulation", "import_js_video_url_parser", "VideoUnitComponent", "LectureUnitDirective", "faVideo", "videoUrlAllowList", "RegExp", "completionTimeout", "videoUrl", "computed", "lectureUnit", "source", "some", "r", "test", "urlParser", "parse", "toggleCollapse", "isCollapsed", "clearTimeout", "logEvent", "setTimeout", "onCompletion", "emit", "completed", "__ngFactoryType__", "selectors", "features", "\u0275\u0275InheritDefinitionFeature", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275listener", "$event", "toggleCompletion", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275property", "isPresentationMode", "\u0275\u0275advance", "\u0275\u0275pipeBind1", "\u0275\u0275sanitizeResourceUrl", "\u0275\u0275textInterpolate1", "description", "LectureUnitComponent", "SafeResourceUrlPipe", "encapsulation", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275property", "ctx_r0", "formattedContent", "\u0275\u0275sanitizeHtml", "TextUnitComponent", "LectureUnitDirective", "faScroll", "artemisMarkdown", "inject", "ArtemisMarkdownService", "computed", "lectureUnit", "content", "safeHtmlForMarkdown", "handleIsolatedView", "logEvent", "win", "window", "open", "document", "write", "name", "close", "body", "innerHTML", "htmlForMarkdown", "focus", "__ngFactoryType__", "selectors", "features", "\u0275\u0275InheritDefinitionFeature", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275listener", "$event", "toggleCompletion", "toggleCollapse", "\u0275\u0275template", "TextUnitComponent_Conditional_2_Template", "\u0275\u0275elementEnd", "isPresentationMode", "\u0275\u0275conditional", "LectureUnitComponent", "encapsulation", "OnlineUnitComponent", "LectureUnitDirective", "faUpRightFromSquare", "handleIsolatedView", "logEvent", "lectureUnit", "source", "window", "open", "onCompletion", "emit", "completed", "__ngFactoryType__", "selectors", "features", "\u0275\u0275InheritDefinitionFeature", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275listener", "$event", "toggleCompletion", "toggleCollapse", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275property", "isPresentationMode", "\u0275\u0275advance", "\u0275\u0275textInterpolate1", "description", "LectureUnitComponent", "encapsulation"]
}
