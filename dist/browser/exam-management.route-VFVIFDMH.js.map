{
  "version": 3,
  "sources": ["src/main/webapp/app/exam/manage/exam-management-resolve.service.ts", "src/main/webapp/app/exam/manage/exam-management.route.ts"],
  "sourcesContent": ["import { StudentExamService } from 'app/exam/manage/student-exams/student-exam.service';\r\nimport { Exam } from 'app/entities/exam/exam.model';\r\nimport { ExamManagementService } from 'app/exam/manage/exam-management.service';\r\nimport { ExerciseGroup } from 'app/entities/exercise-group.model';\r\nimport { ExerciseGroupService } from 'app/exam/manage/exercise-groups/exercise-group.service';\r\nimport { Injectable, inject } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Observable, filter, map, of } from 'rxjs';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { StudentExamWithGradeDTO } from 'app/exam/exam-scores/exam-score-dtos.model';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { CourseManagementService } from 'app/course/manage/course-management.service';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class CourseResolve implements Resolve<Course | null> {\r\n    private courseManagementService = inject(CourseManagementService);\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<Course | null> {\r\n        const courseId = route.params['courseId'];\r\n\r\n        if (courseId) {\r\n            return this.courseManagementService.find(courseId).pipe(\r\n                map((response) => response.body),\r\n                catchError(() => of(null)),\r\n            );\r\n        }\r\n\r\n        return of(null);\r\n    }\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ExamResolve implements Resolve<Exam> {\r\n    private examManagementService = inject(ExamManagementService);\r\n\r\n    /**\r\n     * Resolves the route by extracting the examId and returns the exam with that id if it exists\r\n     * or creates a new exam otherwise.\r\n     * @param route Contains the information about the route to be resolved\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot): Observable<Exam> {\r\n        const courseId = route.params['courseId'] ? route.params['courseId'] : undefined;\r\n        const examId = route.params['examId'] ? route.params['examId'] : undefined;\r\n        const withStudents = route.data['requestOptions'] ? route.data['requestOptions'].withStudents : false;\r\n        const withExerciseGroups = route.data['requestOptions'] ? route.data['requestOptions'].withExerciseGroups : false;\r\n        const isImport = route.data['requestOptions']?.forImport ?? false;\r\n        if (isImport && examId) {\r\n            // When importing an exam, the courseId cannot be used, as the exam.course.id may deviate from the target course id\r\n            // Additionally, the exercises are needed to select the exercises, that should be imported alongside the exam\r\n            return this.examManagementService.findWithExercisesAndWithoutCourseId(examId).pipe(\r\n                filter((response: HttpResponse<Exam>) => response.ok),\r\n                map((response: HttpResponse<Exam>) => response.body!),\r\n            );\r\n        } else if (courseId && examId) {\r\n            return this.examManagementService.find(courseId, examId, withStudents, withExerciseGroups).pipe(\r\n                filter((response: HttpResponse<Exam>) => response.ok),\r\n                map((response: HttpResponse<Exam>) => response.body!),\r\n            );\r\n        }\r\n        return of(new Exam());\r\n    }\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ExerciseGroupResolve implements Resolve<ExerciseGroup> {\r\n    private exerciseGroupService = inject(ExerciseGroupService);\r\n\r\n    /**\r\n     * Resolves the route by extracting the exerciseGroupId and returns the exercise group with that id if it exists\r\n     * or creates a new exercise group otherwise.\r\n     * @param route Contains the information about the route to be resolved\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot): Observable<ExerciseGroup> {\r\n        const courseId = route.params['courseId'] || undefined;\r\n        const examId = route.params['examId'] || undefined;\r\n        const exerciseGroupId = route.params['exerciseGroupId'] || undefined;\r\n        if (courseId && examId && exerciseGroupId) {\r\n            return this.exerciseGroupService.find(courseId, examId, exerciseGroupId).pipe(\r\n                filter((response: HttpResponse<ExerciseGroup>) => response.ok),\r\n                map((exerciseGroup: HttpResponse<ExerciseGroup>) => exerciseGroup.body!),\r\n            );\r\n        }\r\n        return of({ isMandatory: true } as ExerciseGroup);\r\n    }\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class StudentExamResolve implements Resolve<StudentExamWithGradeDTO> {\r\n    private studentExamService = inject(StudentExamService);\r\n\r\n    /**\r\n     * Resolves the route by extracting the studentExamId and returns the student exam with that id if it exists\r\n     * or creates a new student exam otherwise.\r\n     * @param route Contains the information about the route to be resolved\r\n     */\r\n    resolve(route: ActivatedRouteSnapshot): Observable<StudentExamWithGradeDTO> {\r\n        const courseId = route.params['courseId'] || undefined;\r\n        const examId = route.params['examId'] || undefined;\r\n        const studentExamId = route.params['studentExamId'] ? route.params['studentExamId'] : route.params['testRunId'];\r\n        if (courseId && examId && studentExamId) {\r\n            return this.studentExamService.find(courseId, examId, studentExamId).pipe(\r\n                filter((response) => response.ok),\r\n                map((response) => response.body!),\r\n            );\r\n        }\r\n        return of(new StudentExamWithGradeDTO());\r\n    }\r\n}\r\n", "import { Routes } from '@angular/router';\r\nimport { UserRouteAccessService } from 'app/core/auth/user-route-access-service';\r\n\r\nimport { PendingChangesGuard } from 'app/shared/guard/pending-changes.guard';\r\nimport { Authority } from 'app/shared/constants/authority.constants';\r\nimport { ExerciseAssessmentDashboardComponent } from 'app/exercises/shared/dashboards/tutor/exercise-assessment-dashboard.component';\r\nimport { ParticipationSubmissionComponent } from 'app/exercises/shared/participation-submission/participation-submission.component';\r\n\r\nimport { ParticipationComponent } from 'app/exercises/shared/participation/participation.component';\r\nimport { ExerciseScoresComponent } from 'app/exercises/shared/exercise-scores/exercise-scores.component';\r\n\r\nimport { CodeEditorTutorAssessmentContainerComponent } from 'app/exercises/programming/assess/code-editor-tutor-assessment-container.component';\r\nimport { exerciseTypes } from 'app/entities/exercise.model';\r\n\r\nimport { ExerciseStatisticsComponent } from 'app/exercises/shared/statistics/exercise-statistics.component';\r\n\r\nimport { OrionExerciseAssessmentDashboardComponent } from 'app/orion/assessment/orion-exercise-assessment-dashboard.component';\r\nimport { OrionTutorAssessmentComponent } from 'app/orion/assessment/orion-tutor-assessment.component';\r\nimport { isOrion } from 'app/shared/orion/orion';\r\nimport { FileUploadExerciseManagementResolve } from 'app/exercises/file-upload/manage/file-upload-exercise-management-resolve.service';\r\nimport { ModelingExerciseResolver } from 'app/exercises/modeling/manage/modeling-exercise-resolver.service';\r\nimport { CourseResolve, ExamResolve, ExerciseGroupResolve, StudentExamResolve } from 'app/exam/manage/exam-management-resolve.service';\r\nimport { ProgrammingExerciseResolve } from 'app/exercises/programming/manage/programming-exercise-resolve.service';\r\nimport { TextExerciseResolver } from 'app/exercises/text/manage/text-exercise/text-exercise-resolver.service';\r\nimport { repositorySubRoutes } from 'app/exercises/programming/shared/routes/programming-exercise-repository.route';\r\n\r\nexport const examManagementRoute: Routes = [\r\n    {\r\n        path: '',\r\n        loadComponent: () => import('app/exam/manage/exam-management.component').then((m) => m.ExamManagementComponent),\r\n        data: {\r\n            authorities: [Authority.TA, Authority.EDITOR, Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.examManagement.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: 'new',\r\n        loadComponent: () => import('app/exam/manage/exams/exam-update.component').then((m) => m.ExamUpdateComponent),\r\n        resolve: {\r\n            exam: ExamResolve,\r\n            course: CourseResolve,\r\n        },\r\n        data: {\r\n            authorities: [Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.examManagement.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/edit',\r\n        loadComponent: () => import('app/exam/manage/exams/exam-update.component').then((m) => m.ExamUpdateComponent),\r\n        resolve: {\r\n            exam: ExamResolve,\r\n            course: CourseResolve,\r\n        },\r\n        data: {\r\n            authorities: [Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.examManagement.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/scores',\r\n        loadComponent: () => import('app/exam/exam-scores/exam-scores.component').then((m) => m.ExamScoresComponent),\r\n        data: {\r\n            authorities: [Authority.ADMIN, Authority.INSTRUCTOR],\r\n            pageTitle: 'artemisApp.examScores.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId',\r\n        loadComponent: () => import('app/exam/manage/exams/exam-detail.component').then((m) => m.ExamDetailComponent),\r\n        resolve: {\r\n            exam: ExamResolve,\r\n        },\r\n        data: {\r\n            authorities: [Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.examManagement.title',\r\n            requestOptions: {\r\n                withExerciseGroups: true,\r\n            },\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    // Exam Import\r\n    {\r\n        path: 'import/:examId',\r\n        loadComponent: () => import('app/exam/manage/exams/exam-update.component').then((m) => m.ExamUpdateComponent),\r\n        resolve: {\r\n            exam: ExamResolve,\r\n            course: CourseResolve,\r\n        },\r\n        data: {\r\n            authorities: [Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.examManagement.title',\r\n            requestOptions: {\r\n                forImport: true,\r\n            },\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/exercise-groups',\r\n        loadComponent: () => import('app/exam/manage/exercise-groups/exercise-groups.component').then((m) => m.ExerciseGroupsComponent),\r\n        data: {\r\n            authorities: [Authority.EDITOR, Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.examManagement.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/exercise-groups/new',\r\n        loadComponent: () => import('app/exam/manage/exercise-groups/exercise-group-update.component').then((m) => m.ExerciseGroupUpdateComponent),\r\n        resolve: {\r\n            exam: ExamResolve,\r\n            exerciseGroup: ExerciseGroupResolve,\r\n        },\r\n        data: {\r\n            authorities: [Authority.EDITOR, Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.examManagement.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/edit',\r\n        loadComponent: () => import('app/exam/manage/exercise-groups/exercise-group-update.component').then((m) => m.ExerciseGroupUpdateComponent),\r\n        resolve: {\r\n            exam: ExamResolve,\r\n            exerciseGroup: ExerciseGroupResolve,\r\n        },\r\n        data: {\r\n            authorities: [Authority.EDITOR, Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.examManagement.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/text-exercises/:exerciseId/tutor-effort-statistics',\r\n        loadChildren: () => import('../../exercises/text/manage/tutor-effort/tutor-effort-statistics.route').then((m) => m.tutorEffortStatisticsRoute),\r\n    },\r\n    {\r\n        path: ':examId/students',\r\n        loadComponent: () => import('app/exam/manage/students/exam-students.component').then((m) => m.ExamStudentsComponent),\r\n        resolve: {\r\n            exam: ExamResolve,\r\n        },\r\n        data: {\r\n            authorities: [Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.examManagement.title',\r\n            requestOptions: {\r\n                withStudents: true,\r\n            },\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/students/verify-attendance',\r\n        loadComponent: () =>\r\n            import('app/exam/manage/students/verify-attendance-check/exam-students-attendance-check.component').then((m) => m.ExamStudentsAttendanceCheckComponent),\r\n        resolve: {\r\n            exam: ExamResolve,\r\n        },\r\n        data: {\r\n            authorities: [Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.examManagement.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/student-exams',\r\n        loadComponent: () => import('app/exam/manage/student-exams/student-exams.component').then((m) => m.StudentExamsComponent),\r\n        data: {\r\n            authorities: [Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.examManagement.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/grading-system',\r\n        loadComponent: () => import('app/grading-system/grading-system.component').then((m) => m.GradingSystemComponent),\r\n        data: {\r\n            authorities: [Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.examManagement.gradingSystem',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n        loadChildren: () => import('app/grading-system/grading-system.route').then((m) => m.gradingSystemState),\r\n    },\r\n    {\r\n        path: ':examId/bonus',\r\n        loadComponent: () => import('app/grading-system/bonus/bonus.component').then((m) => m.BonusComponent),\r\n        data: {\r\n            authorities: [Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.bonus.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/suspicious-behavior',\r\n        loadComponent: () => import('app/exam/manage/suspicious-behavior/suspicious-behavior.component').then((m) => m.SuspiciousBehaviorComponent),\r\n        data: {\r\n            authorities: [Authority.ADMIN, Authority.INSTRUCTOR],\r\n            pageTitle: 'artemisApp.examManagement.suspiciousBehavior.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/suspicious-behavior/suspicious-sessions',\r\n        loadComponent: () =>\r\n            import('app/exam/manage/suspicious-behavior/suspicious-sessions-overview/suspicious-sessions-overview.component').then((m) => m.SuspiciousSessionsOverviewComponent),\r\n        data: {\r\n            authorities: [Authority.ADMIN, Authority.INSTRUCTOR],\r\n            pageTitle: 'artemisApp.examManagement.suspiciousBehavior.suspiciousSessions.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/test-runs',\r\n        loadComponent: () => import('app/exam/manage/test-runs/test-run-management.component').then((m) => m.TestRunManagementComponent),\r\n        resolve: {\r\n            exam: ExamResolve,\r\n        },\r\n        data: {\r\n            authorities: [Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.examManagement.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/test-runs/assess',\r\n        loadComponent: () => import('app/course/dashboards/assessment-dashboard/assessment-dashboard.component').then((m) => m.AssessmentDashboardComponent),\r\n        data: {\r\n            authorities: [Authority.ADMIN, Authority.INSTRUCTOR, Authority.TA],\r\n            pageTitle: 'artemisApp.examManagement.assessmentDashboard',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/test-runs/:studentExamId',\r\n        loadComponent: () => import('app/exam/manage/student-exams/student-exam-detail.component').then((m) => m.StudentExamDetailComponent),\r\n        resolve: {\r\n            studentExam: StudentExamResolve,\r\n        },\r\n        data: {\r\n            authorities: [Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.examManagement.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/student-exams/:studentExamId',\r\n        loadComponent: () => import('app/exam/manage/student-exams/student-exam-detail.component').then((m) => m.StudentExamDetailComponent),\r\n        resolve: {\r\n            studentExam: StudentExamResolve,\r\n        },\r\n        data: {\r\n            authorities: [Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.examManagement.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/student-exams/:studentExamId/summary',\r\n        loadComponent: () => import('app/exam/manage/student-exams/student-exam-summary.component').then((m) => m.StudentExamSummaryComponent),\r\n        resolve: {\r\n            studentExam: StudentExamResolve,\r\n        },\r\n        data: {\r\n            authorities: [Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.examManagement.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/student-exams/:studentExamId/programming-exercises/:exerciseId/repository/:repositoryType',\r\n        children: repositorySubRoutes,\r\n    },\r\n    {\r\n        path: ':examId/student-exams/:studentExamId/programming-exercises/:exerciseId/repository/:repositoryType/:repositoryId',\r\n        children: repositorySubRoutes,\r\n    },\r\n    {\r\n        path: ':examId/student-exams/:studentExamId/exam-timeline',\r\n        loadComponent: () => import('app/exam/manage/student-exams/student-exam-timeline/student-exam-timeline.component').then((m) => m.StudentExamTimelineComponent),\r\n        resolve: {\r\n            studentExam: StudentExamResolve,\r\n        },\r\n        data: {\r\n            authorities: [Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.examManagement.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/student-exams/:studentExamId/summary/overview/grading-key',\r\n        loadComponent: () => import('app/grading-system/grading-key-overview/grading-key-overview.component').then((m) => m.GradingKeyOverviewComponent),\r\n        data: {\r\n            authorities: [Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.examManagement.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/student-exams/:studentExamId/summary/overview/bonus-grading-key',\r\n        loadComponent: () => import('app/grading-system/grading-key-overview/grading-key-overview.component').then((m) => m.GradingKeyOverviewComponent),\r\n        data: {\r\n            authorities: [Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.examManagement.title',\r\n            forBonus: true,\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/test-runs/:testRunId/conduction',\r\n        loadComponent: () => import('app/exam/participate/exam-participation.component').then((m) => m.ExamParticipationComponent),\r\n        data: {\r\n            authorities: [Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.exam.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n        canDeactivate: [PendingChangesGuard],\r\n    },\r\n    {\r\n        path: ':examId/test-runs/:studentExamId/summary',\r\n        loadComponent: () => import('app/exam/manage/student-exams/student-exam-summary.component').then((m) => m.StudentExamSummaryComponent),\r\n        resolve: {\r\n            studentExam: StudentExamResolve,\r\n        },\r\n        data: {\r\n            authorities: [Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.examManagement.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    // Create Modeling Exercise\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/modeling-exercises/new',\r\n        loadComponent: () => import('app/exercises/modeling/manage/modeling-exercise-update.component').then((m) => m.ModelingExerciseUpdateComponent),\r\n        resolve: {\r\n            modelingExercise: ModelingExerciseResolver,\r\n        },\r\n        data: {\r\n            authorities: [Authority.EDITOR, Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.modelingExercise.home.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    // Import Modeling Exercise\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/modeling-exercises/import/:exerciseId',\r\n        loadComponent: () => import('app/exercises/modeling/manage/modeling-exercise-update.component').then((m) => m.ModelingExerciseUpdateComponent),\r\n        resolve: {\r\n            modelingExercise: ModelingExerciseResolver,\r\n        },\r\n        data: {\r\n            authorities: [Authority.EDITOR, Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.modelingExercise.home.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    // Edit Modeling Exercise\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/modeling-exercises/:exerciseId/edit',\r\n        loadComponent: () => import('app/exercises/modeling/manage/modeling-exercise-update.component').then((m) => m.ModelingExerciseUpdateComponent),\r\n        resolve: {\r\n            modelingExercise: ModelingExerciseResolver,\r\n        },\r\n        data: {\r\n            authorities: [Authority.EDITOR, Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.modelingExercise.home.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    // Create Text Exercise\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/text-exercises/new',\r\n        loadComponent: () => import('app/exercises/text/manage/text-exercise/text-exercise-update.component').then((m) => m.TextExerciseUpdateComponent),\r\n        resolve: {\r\n            textExercise: TextExerciseResolver,\r\n        },\r\n        data: {\r\n            authorities: [Authority.EDITOR, Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.textExercise.home.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    // Import Text Exercise\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/text-exercises/import/:exerciseId',\r\n        loadComponent: () => import('app/exercises/text/manage/text-exercise/text-exercise-update.component').then((m) => m.TextExerciseUpdateComponent),\r\n        resolve: {\r\n            textExercise: TextExerciseResolver,\r\n        },\r\n        data: {\r\n            authorities: [Authority.EDITOR, Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.textExercise.home.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    // Edit Text Exercise\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/text-exercises/:exerciseId/edit',\r\n        loadComponent: () => import('app/exercises/text/manage/text-exercise/text-exercise-update.component').then((m) => m.TextExerciseUpdateComponent),\r\n        resolve: {\r\n            textExercise: TextExerciseResolver,\r\n        },\r\n        data: {\r\n            authorities: [Authority.EDITOR, Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.textExercise.home.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    // Create File Upload Exercise\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/file-upload-exercises/new',\r\n        loadComponent: () => import('app/exercises/file-upload/manage/file-upload-exercise-update.component').then((m) => m.FileUploadExerciseUpdateComponent),\r\n        resolve: {\r\n            fileUploadExercise: FileUploadExerciseManagementResolve,\r\n        },\r\n        data: {\r\n            authorities: [Authority.EDITOR, Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.fileUploadExercise.home.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    // Edit File Upload Exercise\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/file-upload-exercises/:exerciseId/edit',\r\n        loadComponent: () => import('app/exercises/file-upload/manage/file-upload-exercise-update.component').then((m) => m.FileUploadExerciseUpdateComponent),\r\n        resolve: {\r\n            fileUploadExercise: FileUploadExerciseManagementResolve,\r\n        },\r\n        data: {\r\n            authorities: [Authority.EDITOR, Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.fileUploadExercise.home.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    // Quiz Pool Configuration\r\n    {\r\n        path: ':examId/quiz-pool',\r\n        loadComponent: () => import('app/exercises/quiz/manage/quiz-pool.component').then((m) => m.QuizPoolComponent),\r\n        data: {\r\n            authorities: [Authority.EDITOR, Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.quizExercise.home.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    // Import File Upload Exercise\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/file-upload-exercises/import/:exerciseId',\r\n        loadComponent: () => import('app/exercises/file-upload/manage/file-upload-exercise-update.component').then((m) => m.FileUploadExerciseUpdateComponent),\r\n        resolve: {\r\n            fileUploadExercise: FileUploadExerciseManagementResolve,\r\n        },\r\n        data: {\r\n            authorities: [Authority.EDITOR, Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.fileUploadExercise.home.importLabel',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    // Create Quiz Exercise\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/quiz-exercises/new',\r\n        loadComponent: () => import('app/exercises/quiz/manage/quiz-exercise-update.component').then((m) => m.QuizExerciseUpdateComponent),\r\n        data: {\r\n            authorities: [Authority.EDITOR, Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.quizExercise.home.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    // Import Quiz Exercise\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/quiz-exercises/import/:exerciseId',\r\n        loadComponent: () => import('app/exercises/quiz/manage/quiz-exercise-update.component').then((m) => m.QuizExerciseUpdateComponent),\r\n        data: {\r\n            authorities: [Authority.EDITOR, Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.quizExercise.home.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    // Edit Quiz Exercise\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/quiz-exercises/:exerciseId/edit',\r\n        loadComponent: () => import('app/exercises/quiz/manage/quiz-exercise-update.component').then((m) => m.QuizExerciseUpdateComponent),\r\n        data: {\r\n            authorities: [Authority.EDITOR, Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.quizExercise.home.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    // Create Programming Exercise\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/programming-exercises/new',\r\n        loadComponent: () => import('app/exercises/programming/manage/update/programming-exercise-update.component').then((m) => m.ProgrammingExerciseUpdateComponent),\r\n        resolve: {\r\n            programmingExercise: ProgrammingExerciseResolve,\r\n        },\r\n        data: {\r\n            authorities: [Authority.EDITOR, Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.programmingExercise.home.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    // Import programming exercise\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/programming-exercises/import/:exerciseId',\r\n        loadComponent: () => import('app/exercises/programming/manage/update/programming-exercise-update.component').then((m) => m.ProgrammingExerciseUpdateComponent),\r\n        resolve: {\r\n            programmingExercise: ProgrammingExerciseResolve,\r\n        },\r\n        data: {\r\n            authorities: [Authority.EDITOR, Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.programmingExercise.home.importLabel',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    // Import programming exercise from file\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/programming-exercises/import-from-file',\r\n        loadComponent: () => import('app/exercises/programming/manage/update/programming-exercise-update.component').then((m) => m.ProgrammingExerciseUpdateComponent),\r\n        resolve: {\r\n            programmingExercise: ProgrammingExerciseResolve,\r\n        },\r\n        data: {\r\n            authorities: [Authority.EDITOR, Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.programmingExercise.home.importLabel',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    // Edit Programming Exercise\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/programming-exercises/:exerciseId/edit',\r\n        loadComponent: () => import('app/exercises/programming/manage/update/programming-exercise-update.component').then((m) => m.ProgrammingExerciseUpdateComponent),\r\n        resolve: {\r\n            programmingExercise: ProgrammingExerciseResolve,\r\n        },\r\n        data: {\r\n            authorities: [Authority.EDITOR, Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.programmingExercise.home.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/text-exercises/:exerciseId',\r\n        loadComponent: () => import('app/exercises/text/manage/text-exercise/text-exercise-detail.component').then((m) => m.TextExerciseDetailComponent),\r\n        data: {\r\n            authorities: [Authority.TA, Authority.EDITOR, Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.textExercise.home.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/file-upload-exercises/:exerciseId',\r\n        loadComponent: () => import('app/exercises/file-upload/manage/file-upload-exercise-detail.component').then((m) => m.FileUploadExerciseDetailComponent),\r\n        data: {\r\n            authorities: [Authority.TA, Authority.EDITOR, Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.fileUploadExercise.home.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/modeling-exercises/:exerciseId',\r\n        loadComponent: () => import('app/exercises/modeling/manage/modeling-exercise-detail.component').then((m) => m.ModelingExerciseDetailComponent),\r\n        data: {\r\n            authorities: [Authority.TA, Authority.EDITOR, Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.modelingExercise.home.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/programming-exercises/:exerciseId',\r\n        loadComponent: () => import('app/exercises/programming/manage/programming-exercise-detail.component').then((m) => m.ProgrammingExerciseDetailComponent),\r\n        resolve: {\r\n            programmingExercise: ProgrammingExerciseResolve,\r\n        },\r\n        data: {\r\n            authorities: [Authority.TA, Authority.EDITOR, Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.programmingExercise.home.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/programming-exercises/:exerciseId/repository/:repositoryType',\r\n        children: repositorySubRoutes,\r\n    },\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/programming-exercises/:exerciseId/repository/:repositoryType/:repositoryId',\r\n        children: repositorySubRoutes,\r\n    },\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/quiz-exercises/:exerciseId',\r\n        loadComponent: () => import('app/exercises/quiz/manage/quiz-exercise-detail.component').then((m) => m.QuizExerciseDetailComponent),\r\n        data: {\r\n            authorities: [Authority.TA, Authority.EDITOR, Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.quizExercise.home.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/modeling-exercises/:exerciseId/plagiarism',\r\n        loadComponent: () => import('app/exercises/shared/plagiarism/plagiarism-inspector/plagiarism-inspector.component').then((m) => m.PlagiarismInspectorComponent),\r\n        resolve: {\r\n            exercise: ModelingExerciseResolver,\r\n        },\r\n        data: {\r\n            authorities: [Authority.TA, Authority.EDITOR, Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.plagiarism.plagiarismDetection',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/text-exercises/:exerciseId/plagiarism',\r\n        loadComponent: () => import('app/exercises/shared/plagiarism/plagiarism-inspector/plagiarism-inspector.component').then((m) => m.PlagiarismInspectorComponent),\r\n        resolve: {\r\n            exercise: TextExerciseResolver,\r\n        },\r\n        data: {\r\n            authorities: [Authority.TA, Authority.EDITOR, Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.plagiarism.plagiarismDetection',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/programming-exercises/:exerciseId/plagiarism',\r\n        loadComponent: () => import('app/exercises/shared/plagiarism/plagiarism-inspector/plagiarism-inspector.component').then((m) => m.PlagiarismInspectorComponent),\r\n        resolve: {\r\n            exercise: ProgrammingExerciseResolve,\r\n        },\r\n        data: {\r\n            authorities: [Authority.TA, Authority.EDITOR, Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.plagiarism.plagiarismDetection',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/programming-exercises/:exerciseId/grading/:tab',\r\n        loadComponent: () =>\r\n            import('app/exercises/programming/manage/grading/programming-exercise-configure-grading.component').then((m) => m.ProgrammingExerciseConfigureGradingComponent),\r\n        data: {\r\n            authorities: [Authority.EDITOR, Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.programmingExercise.home.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/programming-exercises/:exerciseId/edit-build-plan',\r\n        loadComponent: () => import('app/exercises/programming/manage/build-plan-editor.component').then((m) => m.BuildPlanEditorComponent),\r\n        data: {\r\n            authorities: [Authority.EDITOR, Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.programmingExercise.buildPlanEditor',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/quiz-exercises/:exerciseId/preview',\r\n        loadComponent: () => import('app/exercises/quiz/participate/quiz-participation.component').then((m) => m.QuizParticipationComponent),\r\n        data: {\r\n            authorities: [Authority.EDITOR, Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.quizExercise.home.title',\r\n            mode: 'preview',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/quiz-exercises/:exerciseId/solution',\r\n        loadComponent: () => import('app/exercises/quiz/participate/quiz-participation.component').then((m) => m.QuizParticipationComponent),\r\n        data: {\r\n            authorities: [Authority.EDITOR, Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.quizExercise.home.title',\r\n            mode: 'solution',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/quiz-exercises/:exerciseId/re-evaluate',\r\n        loadComponent: () => import('app/exercises/quiz/manage/re-evaluate/quiz-re-evaluate.component').then((m) => m.QuizReEvaluateComponent),\r\n        data: {\r\n            authorities: [Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.quizExercise.home.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/quiz-exercises/:exerciseId/quiz-point-statistic',\r\n        loadComponent: () => import('app/exercises/quiz/manage/statistics/quiz-point-statistic/quiz-point-statistic.component').then((m) => m.QuizPointStatisticComponent),\r\n        data: {\r\n            authorities: [Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.course.home.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/quiz-exercises/:exerciseId/quiz-statistic',\r\n        loadComponent: () => import('app/exercises/quiz/manage/statistics/quiz-statistic/quiz-statistic.component').then((m) => m.QuizStatisticComponent),\r\n        data: {\r\n            authorities: [Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.course.home.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/quiz-exercises/:exerciseId/mc-question-statistic/:questionId',\r\n        loadComponent: () =>\r\n            import('app/exercises/quiz/manage/statistics/multiple-choice-question-statistic/multiple-choice-question-statistic.component').then(\r\n                (m) => m.MultipleChoiceQuestionStatisticComponent,\r\n            ),\r\n        data: {\r\n            authorities: [Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.course.home.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/quiz-exercises/:exerciseId/dnd-question-statistic/:questionId',\r\n        loadComponent: () =>\r\n            import('app/exercises/quiz/manage/statistics/drag-and-drop-question-statistic/drag-and-drop-question-statistic.component').then(\r\n                (m) => m.DragAndDropQuestionStatisticComponent,\r\n            ),\r\n        data: {\r\n            authorities: [Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.course.home.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/quiz-exercises/:exerciseId/sa-question-statistic/:questionId',\r\n        loadComponent: () =>\r\n            import('app/exercises/quiz/manage/statistics/short-answer-question-statistic/short-answer-question-statistic.component').then(\r\n                (m) => m.ShortAnswerQuestionStatisticComponent,\r\n            ),\r\n        data: {\r\n            authorities: [Authority.INSTRUCTOR, Authority.ADMIN],\r\n            pageTitle: 'artemisApp.course.home.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/assessment-dashboard',\r\n        loadComponent: () => import('app/course/dashboards/assessment-dashboard/assessment-dashboard.component').then((m) => m.AssessmentDashboardComponent),\r\n        data: {\r\n            authorities: [Authority.ADMIN, Authority.INSTRUCTOR, Authority.EDITOR, Authority.TA],\r\n            pageTitle: 'artemisApp.examManagement.assessmentDashboard',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/assessment-dashboard/:exerciseId',\r\n        component: !isOrion ? ExerciseAssessmentDashboardComponent : OrionExerciseAssessmentDashboardComponent,\r\n        data: {\r\n            authorities: [Authority.ADMIN, Authority.INSTRUCTOR, Authority.EDITOR, Authority.TA],\r\n            pageTitle: 'artemisApp.exerciseAssessmentDashboard.home.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/test-assessment-dashboard/:exerciseId',\r\n        component: !isOrion ? ExerciseAssessmentDashboardComponent : OrionExerciseAssessmentDashboardComponent,\r\n        data: {\r\n            authorities: [Authority.ADMIN, Authority.INSTRUCTOR],\r\n            pageTitle: 'artemisApp.exerciseAssessmentDashboard.testRunPageHeader',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    ...exerciseTypes.map((exerciseType) => {\r\n        return {\r\n            path: ':examId/exercise-groups/:exerciseGroupId/' + exerciseType + '-exercises/:exerciseId/scores',\r\n            component: ExerciseScoresComponent,\r\n            data: {\r\n                authorities: [Authority.ADMIN, Authority.INSTRUCTOR, Authority.EDITOR, Authority.TA],\r\n                pageTitle: 'artemisApp.instructorDashboard.exerciseDashboard',\r\n            },\r\n            canActivate: [UserRouteAccessService],\r\n        };\r\n    }),\r\n    ...exerciseTypes.map((exerciseType) => {\r\n        return {\r\n            path: ':examId/exercise-groups/:exerciseGroupId/' + exerciseType + '-exercises/:exerciseId/participations',\r\n            component: ParticipationComponent,\r\n            data: {\r\n                authorities: [Authority.TA, Authority.EDITOR, Authority.INSTRUCTOR, Authority.ADMIN],\r\n                pageTitle: 'artemisApp.participation.home.title',\r\n            },\r\n            canActivate: [UserRouteAccessService],\r\n        };\r\n    }),\r\n    ...exerciseTypes.map((exerciseType) => {\r\n        return {\r\n            path: ':examId/exercise-groups/:exerciseGroupId/' + exerciseType + '-exercises/:exerciseId/exercise-statistics',\r\n            component: ExerciseStatisticsComponent,\r\n            data: {\r\n                authorities: [Authority.ADMIN, Authority.INSTRUCTOR, Authority.EDITOR, Authority.TA],\r\n                pageTitle: 'exercise-statistics.title',\r\n            },\r\n            canActivate: [UserRouteAccessService],\r\n        };\r\n    }),\r\n    ...exerciseTypes.map((exerciseType) => {\r\n        return {\r\n            path: ':examId/exercise-groups/:exerciseGroupId/' + exerciseType + '-exercises/:exerciseId/participations/:participationId',\r\n            component: ParticipationSubmissionComponent,\r\n            data: {\r\n                authorities: [Authority.INSTRUCTOR, Authority.ADMIN],\r\n                pageTitle: 'artemisApp.participation.home.title',\r\n            },\r\n            canActivate: [UserRouteAccessService],\r\n        };\r\n    }),\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/text-exercises/:exerciseId/example-submissions',\r\n        loadComponent: () => import('app/exercises/shared/example-submission/example-submissions.component').then((m) => m.ExampleSubmissionsComponent),\r\n        resolve: {\r\n            exercise: TextExerciseResolver,\r\n        },\r\n        data: {\r\n            authorities: [Authority.ADMIN, Authority.INSTRUCTOR, Authority.EDITOR],\r\n            pageTitle: 'artemisApp.exampleSubmission.home.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/programming-exercises/:exerciseId/code-editor',\r\n        loadChildren: () => import('../../exercises/programming/manage/code-editor/code-editor-management-routes').then((m) => m.routes),\r\n    },\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/text-exercises/:exerciseId',\r\n        loadChildren: () => import('../../exercises/text/assess/text-submission-assessment.route').then((m) => m.textSubmissionAssessmentRoutes),\r\n    },\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/text-exercises/:exerciseId/example-submissions/:exampleSubmissionId',\r\n        loadChildren: () => import('../../exercises/text/manage/example-text-submission/example-text-submission.route').then((m) => m.exampleTextSubmissionRoute),\r\n    },\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/modeling-exercises/:exerciseId/example-submissions',\r\n        loadComponent: () => import('app/exercises/shared/example-submission/example-submissions.component').then((m) => m.ExampleSubmissionsComponent),\r\n        resolve: {\r\n            exercise: ModelingExerciseResolver,\r\n        },\r\n        data: {\r\n            authorities: [Authority.ADMIN, Authority.INSTRUCTOR, Authority.EDITOR],\r\n            pageTitle: 'artemisApp.exampleSubmission.home.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/modeling-exercises/:exerciseId/example-submissions/:exampleSubmissionId',\r\n        loadComponent: () => import('app/exercises/modeling/manage/example-modeling/example-modeling-submission.component').then((m) => m.ExampleModelingSubmissionComponent),\r\n        data: {\r\n            authorities: [Authority.ADMIN, Authority.INSTRUCTOR, Authority.EDITOR, Authority.TA],\r\n            pageTitle: 'artemisApp.exampleSubmission.home.editor',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/modeling-exercises/:exerciseId/submissions/:submissionId/assessment',\r\n        loadComponent: () =>\r\n            import('app/exercises/modeling/assess/modeling-assessment-editor/modeling-assessment-editor.component').then((m) => m.ModelingAssessmentEditorComponent),\r\n        data: {\r\n            authorities: [Authority.ADMIN, Authority.INSTRUCTOR, Authority.EDITOR, Authority.TA],\r\n            pageTitle: 'artemisApp.apollonDiagram.detail.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/programming-exercises/:exerciseId/submissions/:submissionId/assessment',\r\n        component: !isOrion ? CodeEditorTutorAssessmentContainerComponent : OrionTutorAssessmentComponent,\r\n        data: {\r\n            authorities: [Authority.ADMIN, Authority.INSTRUCTOR, Authority.EDITOR, Authority.TA],\r\n            pageTitle: 'artemisApp.programmingExercise.home.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/programming-exercises/:exerciseId/submissions/:submissionId/assessments/:resultId',\r\n        component: !isOrion ? CodeEditorTutorAssessmentContainerComponent : OrionTutorAssessmentComponent,\r\n        data: {\r\n            authorities: [Authority.ADMIN, Authority.INSTRUCTOR, Authority.EDITOR, Authority.TA],\r\n            pageTitle: 'artemisApp.programmingExercise.home.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/file-upload-exercises/:exerciseId/submissions/:submissionId/assessment',\r\n        loadComponent: () => import('app/exercises/file-upload/assess/file-upload-assessment.component').then((m) => m.FileUploadAssessmentComponent),\r\n        data: {\r\n            authorities: [Authority.ADMIN, Authority.INSTRUCTOR, Authority.EDITOR, Authority.TA],\r\n            pageTitle: 'artemisApp.fileUploadExercise.home.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/file-upload-exercises/:exerciseId/submissions/:submissionId/assessments/:resultId',\r\n        loadComponent: () => import('app/exercises/file-upload/assess/file-upload-assessment.component').then((m) => m.FileUploadAssessmentComponent),\r\n        data: {\r\n            authorities: [Authority.ADMIN, Authority.INSTRUCTOR, Authority.EDITOR, Authority.TA],\r\n            pageTitle: 'artemisApp.fileUploadExercise.home.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n    {\r\n        path: ':examId/exercise-groups/:exerciseGroupId/modeling-exercises/:exerciseId/submissions/:submissionId/assessments/:resultId',\r\n        loadComponent: () =>\r\n            import('app/exercises/modeling/assess/modeling-assessment-editor/modeling-assessment-editor.component').then((m) => m.ModelingAssessmentEditorComponent),\r\n        data: {\r\n            authorities: [Authority.ADMIN, Authority.INSTRUCTOR],\r\n            usePathForBreadcrumbs: true,\r\n            pageTitle: 'artemisApp.apollonDiagram.detail.title',\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n    },\r\n];\r\n"],
  "mappings": "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",
  "names": ["CourseResolve", "courseManagementService", "inject", "CourseManagementService", "resolve", "route", "courseId", "params", "find", "pipe", "map", "response", "body", "catchError", "of", "factory", "\u0275fac", "providedIn", "ExamResolve", "examManagementService", "ExamManagementService", "undefined", "examId", "withStudents", "data", "withExerciseGroups", "forImport", "findWithExercisesAndWithoutCourseId", "filter", "ok", "Exam", "ExerciseGroupResolve", "exerciseGroupService", "ExerciseGroupService", "exerciseGroupId", "exerciseGroup", "isMandatory", "StudentExamResolve", "studentExamService", "StudentExamService", "studentExamId", "StudentExamWithGradeDTO", "examManagementRoute", "path", "loadComponent", "then", "m", "ExamManagementComponent", "data", "authorities", "Authority", "TA", "EDITOR", "INSTRUCTOR", "ADMIN", "pageTitle", "canActivate", "UserRouteAccessService", "ExamUpdateComponent", "resolve", "exam", "ExamResolve", "course", "CourseResolve", "ExamScoresComponent", "ExamDetailComponent", "requestOptions", "withExerciseGroups", "forImport", "ExerciseGroupsComponent", "ExerciseGroupUpdateComponent", "exerciseGroup", "ExerciseGroupResolve", "loadChildren", "tutorEffortStatisticsRoute", "ExamStudentsComponent", "withStudents", "ExamStudentsAttendanceCheckComponent", "StudentExamsComponent", "GradingSystemComponent", "gradingSystemState", "BonusComponent", "SuspiciousBehaviorComponent", "SuspiciousSessionsOverviewComponent", "TestRunManagementComponent", "AssessmentDashboardComponent", "StudentExamDetailComponent", "studentExam", "StudentExamResolve", "StudentExamSummaryComponent", "children", "repositorySubRoutes", "StudentExamTimelineComponent", "GradingKeyOverviewComponent", "forBonus", "ExamParticipationComponent", "canDeactivate", "PendingChangesGuard", "ModelingExerciseUpdateComponent", "modelingExercise", "ModelingExerciseResolver", "TextExerciseUpdateComponent", "textExercise", "TextExerciseResolver", "FileUploadExerciseUpdateComponent", "fileUploadExercise", "FileUploadExerciseManagementResolve", "QuizPoolComponent", "QuizExerciseUpdateComponent", "ProgrammingExerciseUpdateComponent", "programmingExercise", "ProgrammingExerciseResolve", "TextExerciseDetailComponent", "FileUploadExerciseDetailComponent", "ModelingExerciseDetailComponent", "ProgrammingExerciseDetailComponent", "QuizExerciseDetailComponent", "PlagiarismInspectorComponent", "exercise", "ProgrammingExerciseConfigureGradingComponent", "BuildPlanEditorComponent", "QuizParticipationComponent", "mode", "QuizReEvaluateComponent", "QuizPointStatisticComponent", "QuizStatisticComponent", "MultipleChoiceQuestionStatisticComponent", "DragAndDropQuestionStatisticComponent", "ShortAnswerQuestionStatisticComponent", "component", "isOrion", "OrionExerciseAssessmentDashboardComponent", "ExerciseAssessmentDashboardComponent", "exerciseTypes", "map", "exerciseType", "ExerciseScoresComponent", "ParticipationComponent", "ExerciseStatisticsComponent", "ParticipationSubmissionComponent", "ExampleSubmissionsComponent", "routes", "textSubmissionAssessmentRoutes", "exampleTextSubmissionRoute", "ExampleModelingSubmissionComponent", "ModelingAssessmentEditorComponent", "OrionTutorAssessmentComponent", "CodeEditorTutorAssessmentContainerComponent", "FileUploadAssessmentComponent", "usePathForBreadcrumbs"]
}
