{
  "version": 3,
  "sources": ["src/main/webapp/app/course/tutorial-groups/tutorial-groups-management/registered-students/registered-students.component.ts", "src/main/webapp/app/course/tutorial-groups/tutorial-groups-management/registered-students/registered-students.component.html", "src/main/webapp/app/course/tutorial-groups/tutorial-groups-management/tutorial-group-sessions/crud/tutorial-group-session-form/tutorial-group-session-form.component.ts", "src/main/webapp/app/course/tutorial-groups/tutorial-groups-management/tutorial-group-sessions/crud/tutorial-group-session-form/tutorial-group-session-form.component.html", "src/main/webapp/app/course/tutorial-groups/tutorial-groups-management/tutorial-group-sessions/crud/create-tutorial-group-session/create-tutorial-group-session.component.ts", "src/main/webapp/app/course/tutorial-groups/tutorial-groups-management/tutorial-group-sessions/crud/create-tutorial-group-session/create-tutorial-group-session.component.html", "src/main/webapp/app/course/tutorial-groups/tutorial-groups-management/tutorial-group-sessions/tutorial-group-sessions-management/cancellation-modal/cancellation-modal.component.ts", "src/main/webapp/app/course/tutorial-groups/tutorial-groups-management/tutorial-group-sessions/tutorial-group-sessions-management/cancellation-modal/cancellation-modal.component.html", "src/main/webapp/app/course/tutorial-groups/tutorial-groups-management/tutorial-group-sessions/crud/edit-tutorial-group-session/edit-tutorial-group-session.component.ts", "src/main/webapp/app/course/tutorial-groups/tutorial-groups-management/tutorial-group-sessions/crud/edit-tutorial-group-session/edit-tutorial-group-session.component.html", "src/main/webapp/app/course/tutorial-groups/tutorial-groups-management/tutorial-group-sessions/tutorial-group-sessions-management/tutorial-group-session-row-buttons/tutorial-group-session-row-buttons.component.ts", "src/main/webapp/app/course/tutorial-groups/tutorial-groups-management/tutorial-group-sessions/tutorial-group-sessions-management/tutorial-group-session-row-buttons/tutorial-group-session-row-buttons.component.html", "src/main/webapp/app/course/tutorial-groups/shared/remove-seconds.pipe.ts", "src/main/webapp/app/course/tutorial-groups/tutorial-groups-management/tutorial-group-sessions/tutorial-group-sessions-management/tutorial-group-sessions-management.component.ts", "src/main/webapp/app/course/tutorial-groups/tutorial-groups-management/tutorial-group-sessions/tutorial-group-sessions-management/tutorial-group-sessions-management.component.html", "src/main/webapp/app/course/tutorial-groups/tutorial-groups-management/tutorial-groups/tutorial-groups-management/tutorial-group-row-buttons/tutorial-group-row-buttons.component.ts", "src/main/webapp/app/course/tutorial-groups/tutorial-groups-management/tutorial-groups/tutorial-groups-management/tutorial-group-row-buttons/tutorial-group-row-buttons.component.html"],
  "sourcesContent": ["import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnDestroy, inject } from '@angular/core';\r\nimport { TutorialGroup } from 'app/entities/tutorial-group/tutorial-group.model';\r\nimport { TutorialGroupsService } from 'app/course/tutorial-groups/services/tutorial-groups.service';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { finalize, takeUntil, tap } from 'rxjs/operators';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { onError } from 'app/shared/util/global.utils';\r\nimport { Course, CourseGroup } from 'app/entities/course.model';\r\nimport { User } from 'app/core/user/user.model';\r\nimport { CourseManagementService } from 'app/course/manage/course-management.service';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Subject } from 'rxjs';\r\nimport { LoadingIndicatorContainerComponent } from 'app/shared/loading-indicator-container/loading-indicator-container.component';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { CourseGroupComponent } from 'app/shared/course-group/course-group.component';\r\nimport { captureException } from '@sentry/angular';\r\n\r\n@Component({\r\n    selector: 'jhi-registered-students',\r\n    templateUrl: './registered-students.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    imports: [LoadingIndicatorContainerComponent, TranslateDirective, CourseGroupComponent],\r\n})\r\nexport class RegisteredStudentsComponent implements OnDestroy {\r\n    private activeModal = inject(NgbActiveModal);\r\n    private tutorialGroupService = inject(TutorialGroupsService);\r\n    private alertService = inject(AlertService);\r\n    private courseService = inject(CourseManagementService);\r\n    private cdr = inject(ChangeDetectorRef);\r\n\r\n    @Input() course: Course;\r\n    @Input() tutorialGroupId: number;\r\n\r\n    tutorialGroup: TutorialGroup;\r\n    isLoading = false;\r\n    registeredStudents: User[] = [];\r\n    courseGroup = CourseGroup.STUDENTS;\r\n    isAdmin = false;\r\n    filteredUsersSize = 0;\r\n    numberOfRegistrations = 0;\r\n\r\n    registrationsChanged = false;\r\n\r\n    isInitialized = false;\r\n    ngUnsubscribe = new Subject<void>();\r\n\r\n    get capacityReached(): boolean {\r\n        if (!this.tutorialGroup) {\r\n            return false;\r\n        }\r\n        if (this.tutorialGroup.capacity === undefined || this.tutorialGroup.capacity === null) {\r\n            return false;\r\n        } else {\r\n            return this.numberOfRegistrations >= this.tutorialGroup.capacity;\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.ngUnsubscribe.next();\r\n        this.ngUnsubscribe.complete();\r\n    }\r\n\r\n    initialize() {\r\n        if (!this.tutorialGroupId || !this.course) {\r\n            captureException('Error: Component not fully configured');\r\n        } else {\r\n            this.isInitialized = true;\r\n            this.loadAll();\r\n        }\r\n    }\r\n\r\n    handleUsersSizeChange = (filteredUsersSize: number) => (this.filteredUsersSize = filteredUsersSize);\r\n\r\n    addToGroup = (login: string) =>\r\n        this.tutorialGroupService.registerStudent(this.course.id!, this.tutorialGroup.id!, login).pipe(\r\n            tap({\r\n                next: () => {\r\n                    this.registrationsChanged = true;\r\n                    this.numberOfRegistrations++;\r\n                },\r\n            }),\r\n        );\r\n\r\n    removeFromGroup = (login: string) =>\r\n        this.tutorialGroupService.deregisterStudent(this.course.id!, this.tutorialGroup.id!, login).pipe(\r\n            tap({\r\n                next: () => {\r\n                    this.registrationsChanged = true;\r\n                    this.numberOfRegistrations--;\r\n                },\r\n            }),\r\n        );\r\n\r\n    userSearch = (loginOrName: string) => this.courseService.searchStudents(this.course.id!, loginOrName);\r\n\r\n    get exportFilename(): string {\r\n        if (this.course && this.tutorialGroup) {\r\n            return this.course.title + ' ' + this.tutorialGroup.title;\r\n        } else {\r\n            return 'RegisteredStudents';\r\n        }\r\n    }\r\n\r\n    loadAll = () => {\r\n        this.tutorialGroupService\r\n            .getOneOfCourse(this.course.id!, this.tutorialGroupId)\r\n            .pipe(\r\n                finalize(() => (this.isLoading = false)),\r\n                takeUntil(this.ngUnsubscribe),\r\n            )\r\n            .subscribe({\r\n                next: (tutorialGroupResult) => {\r\n                    if (tutorialGroupResult.body) {\r\n                        this.tutorialGroup = tutorialGroupResult.body;\r\n                        // server will send undefined instead of empty array, therefore we set it here as it is easier to handle\r\n                        if (!this.tutorialGroup.registrations) {\r\n                            this.tutorialGroup.registrations = [];\r\n                        }\r\n                        this.registeredStudents = this.tutorialGroup.registrations.map((registration) => registration.student!);\r\n                        this.numberOfRegistrations = this.registeredStudents.length;\r\n                    }\r\n                },\r\n                error: (res: HttpErrorResponse) => onError(this.alertService, res),\r\n            })\r\n            .add(() => this.cdr.detectChanges());\r\n    };\r\n\r\n    clear() {\r\n        if (this.registrationsChanged) {\r\n            this.activeModal.close();\r\n        } else {\r\n            this.activeModal.dismiss();\r\n        }\r\n    }\r\n}\r\n", "<jhi-loading-indicator-container [isLoading]=\"isLoading\">\r\n    @if (isInitialized && tutorialGroup) {\r\n        <div>\r\n            <div class=\"modal-header\">\r\n                <h4 class=\"modal-title\" jhiTranslate=\"artemisApp.pages.registeredStudents.header\" [translateValues]=\"{ title: tutorialGroup.title }\"></h4>\r\n                <button type=\"button\" class=\"btn-close\" (click)=\"clear()\"></button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                @if (capacityReached) {\r\n                    <div\r\n                        class=\"alert alert-warning\"\r\n                        role=\"alert\"\r\n                        jhiTranslate=\"artemisApp.pages.registeredStudents.capacityWarning\"\r\n                        [translateValues]=\"{ capacity: tutorialGroup.capacity }\"\r\n                    ></div>\r\n                }\r\n                <jhi-course-group\r\n                    [tutorialGroup]=\"tutorialGroup\"\r\n                    [allGroupUsers]=\"registeredStudents\"\r\n                    [courseGroup]=\"courseGroup\"\r\n                    [isLoadingAllGroupUsers]=\"isLoading\"\r\n                    [isAdmin]=\"isAdmin\"\r\n                    [course]=\"course\"\r\n                    [userSearch]=\"userSearch\"\r\n                    [addUserToGroup]=\"addToGroup\"\r\n                    [removeUserFromGroup]=\"removeFromGroup\"\r\n                    [exportFileName]=\"exportFilename\"\r\n                    [handleUsersSizeChange]=\"handleUsersSizeChange\"\r\n                    (importFinish)=\"loadAll()\"\r\n                >\r\n                    @if (tutorialGroup) {\r\n                        <span>\r\n                            <span>{{ tutorialGroup.title }} - </span>\r\n                            @if (filteredUsersSize < registeredStudents.length) {\r\n                                <span>{{ filteredUsersSize }} <span jhiTranslate=\"artemisApp.course.courseGroup.outOf\"></span> </span>\r\n                            }\r\n                            {{ registeredStudents.length }}\r\n                            <span [jhiTranslate]=\"'artemisApp.course.students'\"></span>\r\n                        </span>\r\n                    }\r\n                </jhi-course-group>\r\n            </div>\r\n        </div>\r\n    }\r\n</jhi-loading-indicator-container>\r\n", "import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, OnInit, Output, inject } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { NgbTimeAdapter, NgbTimepicker } from '@ng-bootstrap/ng-bootstrap';\r\nimport { faCalendarAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { NgbTimeStringAdapter } from 'app/course/tutorial-groups/shared/ngbTimeStringAdapter';\r\nimport { validTimeRange } from 'app/course/tutorial-groups/shared/timeRangeValidator';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { OwlDateTimeModule } from '@danielmoncada/angular-datetime-picker';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\nexport interface TutorialGroupSessionFormData {\r\n    date?: Date;\r\n    startTime?: string;\r\n    endTime?: string;\r\n    location?: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'jhi-tutorial-group-session-form',\r\n    templateUrl: './tutorial-group-session-form.component.html',\r\n    providers: [{ provide: NgbTimeAdapter, useClass: NgbTimeStringAdapter }],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    imports: [TranslateDirective, FormsModule, ReactiveFormsModule, OwlDateTimeModule, FaIconComponent, NgbTimepicker, ArtemisDatePipe, ArtemisTranslatePipe],\r\n})\r\nexport class TutorialGroupSessionFormComponent implements OnInit, OnChanges {\r\n    private fb = inject(FormBuilder);\r\n\r\n    @Input()\r\n    formData: TutorialGroupSessionFormData = {\r\n        date: undefined,\r\n        startTime: undefined,\r\n        endTime: undefined,\r\n        location: undefined,\r\n    };\r\n\r\n    @Input() timeZone: string;\r\n    @Input() isEditMode = false;\r\n    @Output() formSubmitted: EventEmitter<TutorialGroupSessionFormData> = new EventEmitter<TutorialGroupSessionFormData>();\r\n    faCalendarAlt = faCalendarAlt;\r\n\r\n    form: FormGroup;\r\n    get isDateInvalid() {\r\n        if (this.dateControl) {\r\n            return this.dateControl.invalid && (this.dateControl.touched || this.dateControl.dirty);\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    markDateAsTouched() {\r\n        if (this.dateControl) {\r\n            this.dateControl.markAsTouched();\r\n        }\r\n    }\r\n\r\n    get dateControl() {\r\n        return this.form.get('date');\r\n    }\r\n\r\n    get startTimeControl() {\r\n        return this.form.get('startTime');\r\n    }\r\n\r\n    get endTimeControl() {\r\n        return this.form.get('endTime');\r\n    }\r\n\r\n    get locationControl() {\r\n        return this.form.get('location');\r\n    }\r\n\r\n    get isSubmitPossible() {\r\n        return !this.form.invalid;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.initializeForm();\r\n    }\r\n\r\n    ngOnChanges() {\r\n        this.initializeForm();\r\n        if (this.isEditMode && this.formData) {\r\n            this.setFormValues(this.formData);\r\n        }\r\n    }\r\n\r\n    submitForm() {\r\n        const tutorialGroupSessionFormData: TutorialGroupSessionFormData = { ...this.form.value };\r\n        this.formSubmitted.emit(tutorialGroupSessionFormData);\r\n    }\r\n\r\n    private setFormValues(formData: TutorialGroupSessionFormData) {\r\n        this.form.patchValue(formData);\r\n    }\r\n\r\n    private initializeForm() {\r\n        if (this.form) {\r\n            return;\r\n        }\r\n        this.form = this.fb.group(\r\n            {\r\n                startTime: ['13:00:00', [Validators.required]],\r\n                endTime: ['14:00:00', [Validators.required]],\r\n                date: [undefined, [Validators.required]],\r\n                location: [undefined, [Validators.required]],\r\n            },\r\n            { validators: validTimeRange },\r\n        );\r\n    }\r\n}\r\n", "<div class=\"row\">\r\n    <div class=\"col-12 mb-2\">\r\n        <div class=\"alert alert-info\" jhiTranslate=\"artemisApp.generic.timeZone\" [translateValues]=\"{ timeZone }\"></div>\r\n    </div>\r\n    <div class=\"col-12\">\r\n        @if (form) {\r\n            <form class=\"row\" [formGroup]=\"form\" (ngSubmit)=\"submitForm()\">\r\n                <!-- Date -->\r\n                <div>\r\n                    <label class=\"form-label\" for=\"date\" jhiTranslate=\"artemisApp.forms.sessionForm.dateInput.label\"></label>\r\n                    <div class=\"input-group\">\r\n                        <input formControlName=\"date\" [owlDateTime]=\"date\" class=\"d-none\" />\r\n                        <input\r\n                            name=\"date\"\r\n                            id=\"date\"\r\n                            required\r\n                            [class.is-invalid]=\"isDateInvalid\"\r\n                            (focus)=\"markDateAsTouched()\"\r\n                            [value]=\"dateControl?.value | artemisDate: 'long-date' : false : undefined : true\"\r\n                            [owlDateTimeTrigger]=\"date\"\r\n                            readonly\r\n                            class=\"form-control\"\r\n                        />\r\n                        <button type=\"button\" class=\"btn btn-secondary\" [owlDateTimeTrigger]=\"date\"><fa-icon [icon]=\"faCalendarAlt\" /></button>\r\n                        <owl-date-time [firstDayOfWeek]=\"1\" [pickerType]=\"'calendar'\" #date [pickerMode]=\"'dialog'\" />\r\n                    </div>\r\n                    @if (dateControl?.invalid && (dateControl?.dirty || dateControl?.touched)) {\r\n                        <div class=\"alert alert-danger\">\r\n                            @if (dateControl?.errors?.required) {\r\n                                <div jhiTranslate=\"artemisApp.forms.sessionForm.dateInput.requiredDateError\"></div>\r\n                            }\r\n                            @if (dateControl?.errors?.owlDateTimeParse) {\r\n                                <div jhiTranslate=\"artemisApp.forms.sessionForm.dateInput.parseError\"></div>\r\n                            }\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <!-- Time -->\r\n                <div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-auto my-auto\">\r\n                            <span jhiTranslate=\"artemisApp.forms.sessionForm.timeInput.from\"></span>\r\n                        </div>\r\n                        <div class=\"col-auto\">\r\n                            <ngb-timepicker formControlName=\"startTime\" [hourStep]=\"1\" [minuteStep]=\"15\" />\r\n                        </div>\r\n                        <div class=\"col-auto my-auto\">\r\n                            <span jhiTranslate=\"artemisApp.forms.sessionForm.timeInput.to\"></span>\r\n                        </div>\r\n                        <div class=\"col-auto my-auto\">\r\n                            <ngb-timepicker formControlName=\"endTime\" [hourStep]=\"1\" [minuteStep]=\"15\" />\r\n                        </div>\r\n                    </div>\r\n                    @if (startTimeControl?.invalid && (startTimeControl?.dirty || startTimeControl?.touched)) {\r\n                        <div class=\"alert alert-danger\">\r\n                            @if (startTimeControl?.errors?.required) {\r\n                                <div jhiTranslate=\"artemisApp.forms.sessionForm.timeInput.invalidTimeRange\"></div>\r\n                            }\r\n                        </div>\r\n                    }\r\n                    @if (endTimeControl?.invalid && (endTimeControl?.dirty || endTimeControl?.touched)) {\r\n                        <div class=\"alert alert-danger\">\r\n                            @if (endTimeControl?.errors?.required) {\r\n                                <div jhiTranslate=\"artemisApp.forms.sessionForm.timeInput.invalidTimeRange\"></div>\r\n                            }\r\n                        </div>\r\n                    }\r\n                    @if (form?.invalid && (form?.dirty || form?.touched)) {\r\n                        <div>\r\n                            @if (form?.errors?.invalidTimeRange) {\r\n                                <div class=\"alert alert-danger\" jhiTranslate=\"artemisApp.forms.sessionForm.timeInput.invalidTimeRange\"></div>\r\n                            }\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <!-- Location -->\r\n                <div class=\"form-group\">\r\n                    <label for=\"location\" jhiTranslate=\"artemisApp.forms.sessionForm.locationInput.labelOnline\"></label>\r\n                    <textarea\r\n                        class=\"form-control\"\r\n                        id=\"location\"\r\n                        rows=\"1\"\r\n                        formControlName=\"location\"\r\n                        [placeholder]=\"'artemisApp.forms.sessionForm.locationInput.placeholder' | artemisTranslate\"\r\n                    ></textarea>\r\n                    @if (locationControl?.invalid && (locationControl?.dirty || locationControl?.touched)) {\r\n                        <div class=\"alert alert-danger\">\r\n                            @if (locationControl?.errors?.maxlength) {\r\n                                <div jhiTranslate=\"artemisApp.forms.sessionForm.locationInput.maxLengthValidationError\" [translateValues]=\"{ max: '2000' }\"></div>\r\n                            }\r\n                            @if (locationControl?.errors?.required) {\r\n                                <div jhiTranslate=\"artemisApp.forms.sessionForm.locationInput.requiredValidationError\"></div>\r\n                            }\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <div class=\"row mt-2\">\r\n                    <div class=\"col-12\">\r\n                        <button id=\"submitButton\" class=\"btn btn-primary\" type=\"submit\" [disabled]=\"!isSubmitPossible\">\r\n                            <span jhiTranslate=\"{{ isEditMode ? 'global.generic.edit' : 'global.generic.create' }}\"></span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        }\r\n    </div>\r\n</div>\r\n", "import { ChangeDetectionStrategy, Component, Input, OnDestroy, inject } from '@angular/core';\r\nimport { TutorialGroup } from 'app/entities/tutorial-group/tutorial-group.model';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { finalize, takeUntil } from 'rxjs/operators';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { TutorialGroupSessionFormData } from 'app/course/tutorial-groups/tutorial-groups-management/tutorial-group-sessions/crud/tutorial-group-session-form/tutorial-group-session-form.component';\r\nimport { TutorialGroupSessionDTO, TutorialGroupSessionService } from 'app/course/tutorial-groups/services/tutorial-group-session.service';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Subject } from 'rxjs';\r\nimport { LoadingIndicatorContainerComponent } from 'app/shared/loading-indicator-container/loading-indicator-container.component';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { TutorialGroupSessionFormComponent } from '../tutorial-group-session-form/tutorial-group-session-form.component';\r\nimport { captureException } from '@sentry/angular';\r\n\r\n@Component({\r\n    selector: 'jhi-create-tutorial-group-session',\r\n    templateUrl: './create-tutorial-group-session.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    imports: [LoadingIndicatorContainerComponent, TranslateDirective, TutorialGroupSessionFormComponent],\r\n})\r\nexport class CreateTutorialGroupSessionComponent implements OnDestroy {\r\n    private activeModal = inject(NgbActiveModal);\r\n    private tutorialGroupSessionService = inject(TutorialGroupSessionService);\r\n    private alertService = inject(AlertService);\r\n\r\n    ngUnsubscribe = new Subject<void>();\r\n\r\n    tutorialGroupSessionToCreate: TutorialGroupSessionDTO = new TutorialGroupSessionDTO();\r\n    isLoading: boolean;\r\n\r\n    @Input()\r\n    tutorialGroup: TutorialGroup;\r\n\r\n    @Input()\r\n    course: Course;\r\n\r\n    isInitialized = false;\r\n\r\n    initialize() {\r\n        if (!this.course || !this.tutorialGroup) {\r\n            captureException('Error: Component not fully configured');\r\n        } else {\r\n            this.isInitialized = true;\r\n        }\r\n    }\r\n\r\n    createTutorialGroupSession(formData: TutorialGroupSessionFormData) {\r\n        const { date, startTime, endTime, location } = formData;\r\n\r\n        this.tutorialGroupSessionToCreate.date = date;\r\n        this.tutorialGroupSessionToCreate.startTime = startTime;\r\n        this.tutorialGroupSessionToCreate.endTime = endTime;\r\n        this.tutorialGroupSessionToCreate.location = location;\r\n\r\n        this.isLoading = true;\r\n\r\n        this.tutorialGroupSessionService\r\n            .create(this.course.id!, this.tutorialGroup.id!, this.tutorialGroupSessionToCreate)\r\n            .pipe(\r\n                finalize(() => {\r\n                    this.isLoading = false;\r\n                }),\r\n                takeUntil(this.ngUnsubscribe),\r\n            )\r\n            .subscribe({\r\n                next: () => {\r\n                    this.activeModal.close();\r\n                },\r\n                error: (res: HttpErrorResponse) => {\r\n                    this.onError(res);\r\n                    this.clear();\r\n                },\r\n            });\r\n    }\r\n\r\n    onError(httpErrorResponse: HttpErrorResponse) {\r\n        const error = httpErrorResponse.error;\r\n        if (error && error.errorKey && error.errorKey === 'sessionOverlapsWithSession') {\r\n            this.alertService.error(error.message, error.params);\r\n        } else {\r\n            this.alertService.error('error.unexpectedError', {\r\n                error: httpErrorResponse.message,\r\n            });\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.activeModal.dismiss();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.ngUnsubscribe.next();\r\n        this.ngUnsubscribe.complete();\r\n    }\r\n}\r\n", "<jhi-loading-indicator-container [isLoading]=\"isLoading\">\r\n    @if (isInitialized) {\r\n        <div>\r\n            <div class=\"modal-header\">\r\n                <h4 class=\"modal-title\" jhiTranslate=\"artemisApp.pages.createTutorialSession.title\"></h4>\r\n                <button type=\"button\" class=\"btn-close\" (click)=\"clear()\"></button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <jhi-tutorial-group-session-form [isEditMode]=\"false\" [timeZone]=\"course.timeZone!\" (formSubmitted)=\"createTutorialGroupSession($event)\" />\r\n            </div>\r\n        </div>\r\n    }\r\n</jhi-loading-indicator-container>\r\n", "import { ChangeDetectionStrategy, Component, Input, OnDestroy, OnInit, inject } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TutorialGroupSession, TutorialGroupSessionStatus } from 'app/entities/tutorial-group/tutorial-group-session.model';\r\nimport { onError } from 'app/shared/util/global.utils';\r\nimport { TutorialGroupSessionService } from 'app/course/tutorial-groups/services/tutorial-group-session.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-cancellation-modal',\r\n    templateUrl: './cancellation-modal.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    imports: [FormsModule, ReactiveFormsModule, TranslateDirective, ArtemisTranslatePipe],\r\n})\r\nexport class CancellationModalComponent implements OnInit, OnDestroy {\r\n    activeModal = inject(NgbActiveModal);\r\n    private tutorialGroupSessionService = inject(TutorialGroupSessionService);\r\n    private alertService = inject(AlertService);\r\n    private fb = inject(FormBuilder);\r\n\r\n    ngUnsubscribe = new Subject<void>();\r\n\r\n    tutorialGroupSessionStatus = TutorialGroupSessionStatus;\r\n    form: FormGroup;\r\n\r\n    @Input()\r\n    course: Course;\r\n\r\n    @Input()\r\n    tutorialGroupId: number;\r\n\r\n    @Input()\r\n    tutorialGroupSession: TutorialGroupSession;\r\n\r\n    ngOnInit(): void {\r\n        this.initializeForm();\r\n    }\r\n\r\n    get reasonControl() {\r\n        return this.form.get('reason');\r\n    }\r\n\r\n    private initializeForm() {\r\n        this.form = this.fb.group({\r\n            reason: [undefined, [Validators.maxLength(255)]],\r\n        });\r\n    }\r\n\r\n    get isSubmitPossible() {\r\n        return !this.form.invalid;\r\n    }\r\n\r\n    generateSessionLabel(tutorialGroupSession: TutorialGroupSession): string {\r\n        if (!tutorialGroupSession?.start || !tutorialGroupSession?.end) {\r\n            return '';\r\n        } else {\r\n            return tutorialGroupSession.start.tz(this.course.timeZone).format('LLLL') + ' - ' + tutorialGroupSession.end.tz(this.course.timeZone).format('LT');\r\n        }\r\n    }\r\n    cancelOrActivate(): void {\r\n        if (this.tutorialGroupSession.status === TutorialGroupSessionStatus.ACTIVE) {\r\n            this.cancelSession();\r\n        } else {\r\n            this.activateSession();\r\n        }\r\n    }\r\n\r\n    cancelSession(): void {\r\n        this.tutorialGroupSessionService\r\n            .cancel(this.course.id!, this.tutorialGroupId, this.tutorialGroupSession.id!, this.reasonControl?.value)\r\n            .pipe(takeUntil(this.ngUnsubscribe))\r\n            .subscribe({\r\n                next: () => {\r\n                    this.activeModal.close('confirmed');\r\n                },\r\n                error: (res: HttpErrorResponse) => {\r\n                    onError(this.alertService, res);\r\n                    this.activeModal.close('error');\r\n                },\r\n            });\r\n    }\r\n\r\n    activateSession(): void {\r\n        this.tutorialGroupSessionService\r\n            .activate(this.course.id!, this.tutorialGroupId, this.tutorialGroupSession.id!)\r\n            .pipe(takeUntil(this.ngUnsubscribe))\r\n            .subscribe({\r\n                next: () => {\r\n                    this.activeModal.close('confirmed');\r\n                },\r\n                error: (res: HttpErrorResponse) => {\r\n                    onError(this.alertService, res);\r\n                    this.activeModal.close('error');\r\n                },\r\n            });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.ngUnsubscribe.next();\r\n        this.ngUnsubscribe.complete();\r\n    }\r\n}\r\n", "<div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">\r\n        {{\r\n            (tutorialGroupSession.status === tutorialGroupSessionStatus.ACTIVE\r\n                ? 'artemisApp.pages.tutorialGroupSessionManagement.cancelActivateModal.cancelSession.title'\r\n                : 'artemisApp.pages.tutorialGroupSessionManagement.cancelActivateModal.activateSession.title'\r\n            ) | artemisTranslate\r\n        }}\r\n    </h4>\r\n    <button type=\"button\" class=\"btn-close\" (click)=\"activeModal.dismiss()\"></button>\r\n</div>\r\n<div class=\"modal-body\">\r\n    <p>\r\n        {{\r\n            (tutorialGroupSession.status === tutorialGroupSessionStatus.ACTIVE\r\n                ? 'artemisApp.pages.tutorialGroupSessionManagement.cancelActivateModal.cancelSession.question'\r\n                : 'artemisApp.pages.tutorialGroupSessionManagement.cancelActivateModal.activateSession.question'\r\n            ) | artemisTranslate: { label: generateSessionLabel(tutorialGroupSession) }\r\n        }}\r\n    </p>\r\n    @if (tutorialGroupSession.status === tutorialGroupSessionStatus.ACTIVE) {\r\n        <form [formGroup]=\"form\">\r\n            <div class=\"form-group\">\r\n                <label for=\"reason\" jhiTranslate=\"artemisApp.pages.tutorialGroupSessionManagement.cancelActivateModal.cancelSession.explanation\"></label>\r\n                <textarea class=\"form-control\" id=\"reason\" rows=\"2\" formControlName=\"reason\"></textarea>\r\n                @if (reasonControl?.invalid && (reasonControl?.dirty || reasonControl?.touched)) {\r\n                    <div class=\"alert alert-danger\">\r\n                        @if (reasonControl?.errors?.maxlength) {\r\n                            <div\r\n                                jhiTranslate=\"artemisApp.pages.tutorialGroupSessionManagement.cancelActivateModal.cancelSession.maxLengthValidationError\"\r\n                                [translateValues]=\"{ max: '256' }\"\r\n                            ></div>\r\n                        }\r\n                    </div>\r\n                }\r\n            </div>\r\n        </form>\r\n    }\r\n</div>\r\n<div class=\"modal-footer\">\r\n    <button id=\"dismiss-button\" type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"activeModal.dismiss()\" jhiTranslate=\"global.form.cancel\"></button>\r\n    <button\r\n        id=\"cancel-activate-button\"\r\n        type=\"button\"\r\n        class=\"btn btn-success\"\r\n        (click)=\"cancelOrActivate()\"\r\n        [disabled]=\"!isSubmitPossible\"\r\n        jhiTranslate=\"global.form.confirm\"\r\n    ></button>\r\n</div>\r\n", "import { ChangeDetectionStrategy, Component, Input, OnDestroy, inject } from '@angular/core';\r\nimport { TutorialGroupSession } from 'app/entities/tutorial-group/tutorial-group-session.model';\r\nimport { TutorialGroupSessionFormData } from 'app/course/tutorial-groups/tutorial-groups-management/tutorial-group-sessions/crud/tutorial-group-session-form/tutorial-group-session-form.component';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { finalize, takeUntil } from 'rxjs/operators';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { TutorialGroupSessionDTO, TutorialGroupSessionService } from 'app/course/tutorial-groups/services/tutorial-group-session.service';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { TutorialGroup } from 'app/entities/tutorial-group/tutorial-group.model';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Subject } from 'rxjs';\r\nimport { LoadingIndicatorContainerComponent } from 'app/shared/loading-indicator-container/loading-indicator-container.component';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { TutorialGroupSessionFormComponent } from '../tutorial-group-session-form/tutorial-group-session-form.component';\r\nimport { captureException } from '@sentry/angular';\r\n\r\n@Component({\r\n    selector: 'jhi-edit-tutorial-group-session',\r\n    templateUrl: './edit-tutorial-group-session.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    imports: [LoadingIndicatorContainerComponent, TranslateDirective, TutorialGroupSessionFormComponent],\r\n})\r\nexport class EditTutorialGroupSessionComponent implements OnDestroy {\r\n    private activeModal = inject(NgbActiveModal);\r\n    private tutorialGroupSessionService = inject(TutorialGroupSessionService);\r\n    private alertService = inject(AlertService);\r\n\r\n    ngUnsubscribe = new Subject<void>();\r\n\r\n    @Input()\r\n    tutorialGroup: TutorialGroup;\r\n\r\n    @Input()\r\n    course: Course;\r\n\r\n    @Input()\r\n    tutorialGroupSession: TutorialGroupSession;\r\n\r\n    isLoading = false;\r\n    formData?: TutorialGroupSessionFormData = undefined;\r\n\r\n    isInitialized = false;\r\n\r\n    initialize() {\r\n        if (!this.tutorialGroupSession || !this.course || !this.tutorialGroup) {\r\n            captureException('Error: Component not fully configured');\r\n        } else {\r\n            this.formData = {\r\n                date: this.tutorialGroupSession.start?.tz(this.course.timeZone).toDate(),\r\n                startTime: this.tutorialGroupSession.start?.tz(this.course.timeZone).format('HH:mm:ss'),\r\n                endTime: this.tutorialGroupSession.end?.tz(this.course.timeZone).format('HH:mm:ss'),\r\n                location: this.tutorialGroupSession.location,\r\n            };\r\n            this.isInitialized = true;\r\n        }\r\n    }\r\n\r\n    updateSession(formData: TutorialGroupSessionFormData) {\r\n        const { date, startTime, endTime, location } = formData;\r\n\r\n        const tutorialGroupSessionDTO = new TutorialGroupSessionDTO();\r\n\r\n        tutorialGroupSessionDTO.date = date;\r\n        tutorialGroupSessionDTO.startTime = startTime;\r\n        tutorialGroupSessionDTO.endTime = endTime;\r\n        tutorialGroupSessionDTO.location = location;\r\n\r\n        this.isLoading = true;\r\n\r\n        this.tutorialGroupSessionService\r\n            .update(this.course.id!, this.tutorialGroup.id!, this.tutorialGroupSession.id!, tutorialGroupSessionDTO)\r\n            .pipe(\r\n                finalize(() => {\r\n                    this.isLoading = false;\r\n                }),\r\n                takeUntil(this.ngUnsubscribe),\r\n            )\r\n            .subscribe({\r\n                next: () => {\r\n                    this.activeModal.close();\r\n                },\r\n                error: (res: HttpErrorResponse) => {\r\n                    this.onError(res);\r\n                    this.clear();\r\n                },\r\n            });\r\n    }\r\n\r\n    onError(httpErrorResponse: HttpErrorResponse) {\r\n        const error = httpErrorResponse.error;\r\n        if (error && error.errorKey && error.errorKey === 'sessionOverlapsWithSession') {\r\n            this.alertService.error(error.message, error.params);\r\n        } else {\r\n            this.alertService.error('error.unexpectedError', {\r\n                error: httpErrorResponse.message,\r\n            });\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.activeModal.dismiss();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.ngUnsubscribe.next();\r\n        this.ngUnsubscribe.complete();\r\n    }\r\n}\r\n", "<jhi-loading-indicator-container [isLoading]=\"isLoading\">\r\n    @if (isInitialized) {\r\n        <div>\r\n            <div class=\"modal-header\">\r\n                <h4 class=\"modal-title\" jhiTranslate=\"artemisApp.pages.editTutorialSession.title\"></h4>\r\n                <button type=\"button\" class=\"btn-close\" (click)=\"clear()\"></button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <jhi-tutorial-group-session-form [isEditMode]=\"true\" [timeZone]=\"course.timeZone!\" [formData]=\"formData!\" (formSubmitted)=\"updateSession($event)\" />\r\n            </div>\r\n        </div>\r\n    }\r\n</jhi-loading-indicator-container>\r\n", "import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnDestroy, Output, inject } from '@angular/core';\r\nimport { EMPTY, Subject, from } from 'rxjs';\r\nimport { faTrash, faUsers, faWrench } from '@fortawesome/free-solid-svg-icons';\r\nimport { TutorialGroupSessionService } from 'app/course/tutorial-groups/services/tutorial-group-session.service';\r\nimport { TutorialGroupSession, TutorialGroupSessionStatus } from 'app/entities/tutorial-group/tutorial-group-session.model';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CancellationModalComponent } from 'app/course/tutorial-groups/tutorial-groups-management/tutorial-group-sessions/tutorial-group-sessions-management/cancellation-modal/cancellation-modal.component';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { TutorialGroup } from 'app/entities/tutorial-group/tutorial-group.model';\r\nimport { EditTutorialGroupSessionComponent } from 'app/course/tutorial-groups/tutorial-groups-management/tutorial-group-sessions/crud/edit-tutorial-group-session/edit-tutorial-group-session.component';\r\nimport { catchError, takeUntil } from 'rxjs/operators';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { DeleteButtonDirective } from 'app/shared/delete-dialog/delete-button.directive';\r\nimport { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-tutorial-group-session-row-buttons',\r\n    templateUrl: './tutorial-group-session-row-buttons.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    imports: [FaIconComponent, TranslateDirective, DeleteButtonDirective, ArtemisDatePipe, ArtemisTranslatePipe],\r\n})\r\nexport class TutorialGroupSessionRowButtonsComponent implements OnDestroy {\r\n    private tutorialGroupSessionService = inject(TutorialGroupSessionService);\r\n    private modalService = inject(NgbModal);\r\n\r\n    ngUnsubscribe = new Subject<void>();\r\n\r\n    @Input() course: Course;\r\n    @Input() tutorialGroup: TutorialGroup;\r\n    @Input() tutorialGroupSession: TutorialGroupSession;\r\n\r\n    @Output() tutorialGroupSessionDeleted = new EventEmitter<void>();\r\n    @Output() tutorialGroupEdited = new EventEmitter<void>();\r\n    @Output() cancelOrActivatePressed = new EventEmitter<void>();\r\n\r\n    tutorialGroupSessionStatus = TutorialGroupSessionStatus;\r\n    private dialogErrorSource = new Subject<string>();\r\n    dialogError$ = this.dialogErrorSource.asObservable();\r\n\r\n    faWrench = faWrench;\r\n    faUsers = faUsers;\r\n    faTrash = faTrash;\r\n\r\n    deleteTutorialGroupSession = () => {\r\n        this.tutorialGroupSessionService\r\n            .delete(this.course.id!, this.tutorialGroup.id!, this.tutorialGroupSession.id!)\r\n            .pipe(takeUntil(this.ngUnsubscribe))\r\n            .subscribe({\r\n                next: () => {\r\n                    this.dialogErrorSource.next('');\r\n                    this.tutorialGroupSessionDeleted.emit();\r\n                },\r\n                error: (error: HttpErrorResponse) => this.dialogErrorSource.next(error.message),\r\n            });\r\n    };\r\n\r\n    openCancellationDialog(session: TutorialGroupSession): void {\r\n        const modalRef = this.modalService.open(CancellationModalComponent, { size: 'lg', scrollable: false, backdrop: 'static', animation: false });\r\n        modalRef.componentInstance.tutorialGroupSession = session;\r\n        modalRef.componentInstance.course = this.course;\r\n        modalRef.componentInstance.tutorialGroupId = this.tutorialGroup.id!;\r\n\r\n        from(modalRef.result)\r\n            .pipe(\r\n                catchError(() => EMPTY),\r\n                takeUntil(this.ngUnsubscribe),\r\n            )\r\n            .subscribe((result) => {\r\n                if (result === 'confirmed') {\r\n                    this.cancelOrActivatePressed.emit();\r\n                }\r\n            });\r\n    }\r\n\r\n    openEditSessionDialog(event: MouseEvent) {\r\n        event.stopPropagation();\r\n        const modalRef: NgbModalRef = this.modalService.open(EditTutorialGroupSessionComponent, { size: 'lg', scrollable: false, backdrop: 'static', animation: false });\r\n        modalRef.componentInstance.course = this.course;\r\n        modalRef.componentInstance.tutorialGroup = this.tutorialGroup;\r\n        modalRef.componentInstance.tutorialGroupSession = this.tutorialGroupSession;\r\n        modalRef.componentInstance.initialize();\r\n        from(modalRef.result)\r\n            .pipe(\r\n                catchError(() => EMPTY),\r\n                takeUntil(this.ngUnsubscribe),\r\n            )\r\n            .subscribe(() => {\r\n                this.tutorialGroupEdited.emit();\r\n            });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.ngUnsubscribe.next();\r\n        this.ngUnsubscribe.complete();\r\n        this.dialogErrorSource.unsubscribe();\r\n    }\r\n}\r\n", "<div class=\"btn-group flex-btn-group-container\">\r\n    <!-- Cancel/Activate -->\r\n    @if (!tutorialGroupSession.tutorialGroupFreePeriod) {\r\n        <button [id]=\"'cancel-activate-' + tutorialGroupSession.id\" type=\"button\" class=\"btn btn-secondary\" (click)=\"openCancellationDialog(tutorialGroupSession)\">\r\n            {{\r\n                (tutorialGroupSession.status === tutorialGroupSessionStatus.CANCELLED\r\n                    ? 'artemisApp.pages.tutorialGroupSessionManagement.rowButtons.activate'\r\n                    : 'artemisApp.pages.tutorialGroupSessionManagement.rowButtons.cancel'\r\n                ) | artemisTranslate\r\n            }}\r\n        </button>\r\n    }\r\n    <!-- Edit -->\r\n    <button type=\"button\" [id]=\"'edit-' + tutorialGroupSession.id\" (click)=\"openEditSessionDialog($event)\" class=\"btn btn-warning btn-sm me-1\">\r\n        <fa-icon [icon]=\"faWrench\" />\r\n        <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.edit\"></span>\r\n    </button>\r\n    <!-- Delete -->\r\n    <button\r\n        [id]=\"'delete-' + tutorialGroupSession.id\"\r\n        jhiDeleteButton\r\n        [animation]=\"false\"\r\n        entityTitle=\"{{ tutorialGroupSession.start | artemisDate: 'short-date' : false : course.timeZone! }}\r\n    {{ tutorialGroupSession.start | artemisDate: 'time' : false : course.timeZone! }} -\r\n    {{ tutorialGroupSession.end | artemisDate: 'time' : false : course.timeZone! }}\"\r\n        deleteQuestion=\"artemisApp.pages.tutorialGroupSessionManagement.deleteDialog.question\"\r\n        (delete)=\"deleteTutorialGroupSession()\"\r\n        [dialogError]=\"dialogError$\"\r\n    >\r\n        <fa-icon [icon]=\"faTrash\" />\r\n    </button>\r\n</div>\r\n", "import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n/**\r\n * A pipe that removes the seconds information from a time string in the format '14:00:00'.\r\n */\r\n@Pipe({ name: 'removeSeconds' })\r\nexport class RemoveSecondsPipe implements PipeTransform {\r\n    /**\r\n     * Transforms a time string in the format '14:00:00' to a string without seconds, e.g. '14:00'.\r\n     * @param time The time string to transform.\r\n     * @returns The time string without seconds.\r\n     */\r\n    transform(time: string | undefined): string {\r\n        if (!time) {\r\n            return '';\r\n        }\r\n        // if already in the format '14:00', return it\r\n        if (time.length === 5) {\r\n            return time;\r\n        }\r\n\r\n        return time.split(':').slice(0, 2).join(':');\r\n    }\r\n}\r\n", "import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnDestroy, ViewEncapsulation, inject } from '@angular/core';\r\nimport { TutorialGroupsService } from 'app/course/tutorial-groups/services/tutorial-groups.service';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { TutorialGroupSessionsTableComponent } from 'app/course/tutorial-groups/shared/tutorial-group-sessions-table/tutorial-group-sessions-table.component';\r\nimport { EMPTY, Subject, from } from 'rxjs';\r\nimport { catchError, finalize, map, takeUntil } from 'rxjs/operators';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { onError } from 'app/shared/util/global.utils';\r\nimport { TutorialGroup } from 'app/entities/tutorial-group/tutorial-group.model';\r\nimport { TutorialGroupSchedule } from 'app/entities/tutorial-group/tutorial-group-schedule.model';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { TutorialGroupSession } from 'app/entities/tutorial-group/tutorial-group-session.model';\r\nimport { getDayTranslationKey } from 'app/course/tutorial-groups/shared/weekdays';\r\nimport { NgbActiveModal, NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CreateTutorialGroupSessionComponent } from 'app/course/tutorial-groups/tutorial-groups-management/tutorial-group-sessions/crud/create-tutorial-group-session/create-tutorial-group-session.component';\r\nimport { LoadingIndicatorContainerComponent } from 'app/shared/loading-indicator-container/loading-indicator-container.component';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { TutorialGroupSessionRowButtonsComponent } from './tutorial-group-session-row-buttons/tutorial-group-session-row-buttons.component';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\nimport { RemoveSecondsPipe } from 'app/course/tutorial-groups/shared/remove-seconds.pipe';\r\nimport { captureException } from '@sentry/angular';\r\n\r\n@Component({\r\n    selector: 'jhi-session-management',\r\n    templateUrl: './tutorial-group-sessions-management.component.html',\r\n    styleUrls: ['./tutorial-group-sessions-management.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None,\r\n    imports: [\r\n        LoadingIndicatorContainerComponent,\r\n        TranslateDirective,\r\n        FaIconComponent,\r\n        TutorialGroupSessionsTableComponent,\r\n        TutorialGroupSessionRowButtonsComponent,\r\n        ArtemisTranslatePipe,\r\n        RemoveSecondsPipe,\r\n    ],\r\n})\r\nexport class TutorialGroupSessionsManagementComponent implements OnDestroy {\r\n    private tutorialGroupService = inject(TutorialGroupsService);\r\n    private alertService = inject(AlertService);\r\n    private modalService = inject(NgbModal);\r\n    private activeModal = inject(NgbActiveModal);\r\n    private cdr = inject(ChangeDetectorRef);\r\n\r\n    ngUnsubscribe = new Subject<void>();\r\n\r\n    isLoading = false;\r\n\r\n    faPlus = faPlus;\r\n\r\n    @Input()\r\n    tutorialGroupId: number;\r\n    @Input()\r\n    course: Course;\r\n    tutorialGroup: TutorialGroup;\r\n    sessions: TutorialGroupSession[] = [];\r\n    tutorialGroupSchedule: TutorialGroupSchedule;\r\n    attendanceUpdated = false;\r\n\r\n    isInitialized = false;\r\n\r\n    initialize() {\r\n        if (!this.tutorialGroupId || !this.course) {\r\n            captureException('Error: Component not fully configured');\r\n        } else {\r\n            this.isInitialized = true;\r\n            this.loadAll();\r\n        }\r\n    }\r\n\r\n    getDayTranslationKey = getDayTranslationKey;\r\n    loadAll() {\r\n        this.isLoading = true;\r\n        return this.tutorialGroupService\r\n            .getOneOfCourse(this.course.id!, this.tutorialGroupId)\r\n            .pipe(\r\n                finalize(() => (this.isLoading = false)),\r\n                map((res: HttpResponse<TutorialGroup>) => {\r\n                    return res.body;\r\n                }),\r\n                takeUntil(this.ngUnsubscribe),\r\n            )\r\n            .subscribe({\r\n                next: (tutorialGroup) => {\r\n                    if (tutorialGroup) {\r\n                        this.tutorialGroup = tutorialGroup;\r\n                        if (tutorialGroup.tutorialGroupSessions) {\r\n                            this.sessions = tutorialGroup.tutorialGroupSessions;\r\n                        }\r\n                        if (tutorialGroup.tutorialGroupSchedule) {\r\n                            this.tutorialGroupSchedule = tutorialGroup.tutorialGroupSchedule;\r\n                        }\r\n                    }\r\n                },\r\n                error: (res: HttpErrorResponse) => onError(this.alertService, res),\r\n            })\r\n            .add(() => this.cdr.detectChanges());\r\n    }\r\n\r\n    openCreateSessionDialog(event: MouseEvent) {\r\n        event.stopPropagation();\r\n        const modalRef: NgbModalRef = this.modalService.open(CreateTutorialGroupSessionComponent, { size: 'xl', scrollable: false, backdrop: 'static', animation: false });\r\n        modalRef.componentInstance.course = this.course;\r\n        modalRef.componentInstance.tutorialGroup = this.tutorialGroup;\r\n        modalRef.componentInstance.initialize();\r\n        from(modalRef.result)\r\n            .pipe(\r\n                catchError(() => EMPTY),\r\n                takeUntil(this.ngUnsubscribe),\r\n            )\r\n            .subscribe(() => {\r\n                this.loadAll();\r\n            });\r\n    }\r\n\r\n    clear() {\r\n        if (this.attendanceUpdated) {\r\n            this.activeModal.close();\r\n        } else {\r\n            this.activeModal.dismiss();\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.ngUnsubscribe.next();\r\n        this.ngUnsubscribe.complete();\r\n    }\r\n}\r\n", "<jhi-loading-indicator-container [isLoading]=\"isLoading\">\r\n    @if (isInitialized && this.tutorialGroup) {\r\n        <div class=\"row tutorial-group-session-management\">\r\n            <div class=\"col-12 modal-header\">\r\n                <h4>{{ 'artemisApp.pages.tutorialGroupSessionManagement.title' | artemisTranslate }} - {{ tutorialGroup.title }}</h4>\r\n                <button type=\"button\" class=\"btn-close\" (click)=\"clear()\"></button>\r\n            </div>\r\n            @if (tutorialGroup.tutorialGroupSchedule) {\r\n                <div class=\"col-12\" class=\"modal-body\">\r\n                    <!-- Schedule -->\r\n                    <dt>\r\n                        <span jhiTranslate=\"artemisApp.entities.tutorialGroup.schedule\"></span>\r\n                    </dt>\r\n                    <dd>\r\n                        @if (tutorialGroup.tutorialGroupSchedule) {\r\n                            <span>{{\r\n                                (getDayTranslationKey(tutorialGroup.tutorialGroupSchedule?.dayOfWeek) | artemisTranslate) +\r\n                                    ' ' +\r\n                                    (tutorialGroup.tutorialGroupSchedule?.startTime | removeSeconds) +\r\n                                    '-' +\r\n                                    (tutorialGroup.tutorialGroupSchedule?.endTime | removeSeconds)\r\n                            }}</span>\r\n                            <br />\r\n                            @if (tutorialGroup.isOnline) {\r\n                                <span jhiTranslate=\"artemisApp.forms.scheduleForm.locationInput.labelOnline\"></span>\r\n                            }\r\n                            @if (!tutorialGroup.isOnline) {\r\n                                <span jhiTranslate=\"artemisApp.forms.scheduleForm.locationInput.labelOffline\"></span>\r\n                            }\r\n                            : {{ tutorialGroup.tutorialGroupSchedule?.location }}\r\n                            <br />\r\n                            <span>\r\n                                {{\r\n                                    (tutorialGroup.tutorialGroupSchedule!.repetitionFrequency! === 1\r\n                                        ? 'artemisApp.entities.tutorialGroupSchedule.repetitionOneWeek'\r\n                                        : 'artemisApp.entities.tutorialGroupSchedule.repetitionNWeeks'\r\n                                    ) | artemisTranslate: { n: tutorialGroup.tutorialGroupSchedule!.repetitionFrequency! }\r\n                                }}\r\n                            </span>\r\n                        } @else {\r\n                            <span jhiTranslate=\"artemisApp.pages.tutorialGroupDetail.scheduleNotSet\"></span>\r\n                        }\r\n                        <br />\r\n                    </dd>\r\n                </div>\r\n            }\r\n            <div class=\"my-2\">\r\n                <button type=\"button\" id=\"create-session-button\" class=\"btn btn-primary\" (click)=\"openCreateSessionDialog($event)\">\r\n                    <fa-icon [icon]=\"faPlus\" />\r\n                    <span jhiTranslate=\"artemisApp.pages.tutorialGroupSessionManagement.createSessionButton\"></span>\r\n                </button>\r\n            </div>\r\n            <div class=\"scrollbar table-wrapper-scroll-y border border-lightgrey p-3 modal-body\">\r\n                <jhi-tutorial-group-sessions-table\r\n                    [sessions]=\"sessions\"\r\n                    [timeZone]=\"course.timeZone\"\r\n                    [showIdColumn]=\"true\"\r\n                    [tutorialGroup]=\"tutorialGroup\"\r\n                    (attendanceUpdated)=\"attendanceUpdated = true\"\r\n                >\r\n                    <ng-template let-session>\r\n                        <jhi-tutorial-group-session-row-buttons\r\n                            [tutorialGroupSession]=\"session\"\r\n                            [course]=\"course\"\r\n                            [tutorialGroup]=\"tutorialGroup\"\r\n                            (cancelOrActivatePressed)=\"loadAll()\"\r\n                            (tutorialGroupSessionDeleted)=\"loadAll()\"\r\n                            (tutorialGroupEdited)=\"loadAll()\"\r\n                        />\r\n                    </ng-template>\r\n                </jhi-tutorial-group-sessions-table>\r\n            </div>\r\n        </div>\r\n    }\r\n</jhi-loading-indicator-container>\r\n", "import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnDestroy, Output, inject } from '@angular/core';\r\nimport { TutorialGroup } from 'app/entities/tutorial-group/tutorial-group.model';\r\nimport { faCalendarAlt, faTrash, faUsers, faWrench } from '@fortawesome/free-solid-svg-icons';\r\nimport { EMPTY, Subject, from } from 'rxjs';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { TutorialGroupsService } from 'app/course/tutorial-groups/services/tutorial-groups.service';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { RegisteredStudentsComponent } from 'app/course/tutorial-groups/tutorial-groups-management/registered-students/registered-students.component';\r\nimport { TutorialGroupSessionsManagementComponent } from 'app/course/tutorial-groups/tutorial-groups-management/tutorial-group-sessions/tutorial-group-sessions-management/tutorial-group-sessions-management.component';\r\nimport { catchError, takeUntil } from 'rxjs/operators';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { RouterLink } from '@angular/router';\r\nimport { DeleteButtonDirective } from 'app/shared/delete-dialog/delete-button.directive';\r\n\r\n@Component({\r\n    selector: 'jhi-tutorial-group-row-buttons',\r\n    templateUrl: './tutorial-group-row-buttons.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    imports: [FaIconComponent, TranslateDirective, RouterLink, DeleteButtonDirective],\r\n})\r\nexport class TutorialGroupRowButtonsComponent implements OnDestroy {\r\n    private tutorialGroupsService = inject(TutorialGroupsService);\r\n    private modalService = inject(NgbModal);\r\n\r\n    ngUnsubscribe = new Subject<void>();\r\n\r\n    @Input() isAtLeastInstructor = false;\r\n    @Input() course: Course;\r\n    @Input() tutorialGroup: TutorialGroup;\r\n\r\n    @Output() tutorialGroupDeleted = new EventEmitter<void>();\r\n    @Output() registrationsChanged = new EventEmitter<void>();\r\n    @Output() attendanceUpdated = new EventEmitter<void>();\r\n\r\n    private dialogErrorSource = new Subject<string>();\r\n    dialogError$ = this.dialogErrorSource.asObservable();\r\n\r\n    faWrench = faWrench;\r\n    faUsers = faUsers;\r\n    faTrash = faTrash;\r\n    faCalendar = faCalendarAlt;\r\n\r\n    public constructor() {}\r\n\r\n    openSessionDialog(event: MouseEvent) {\r\n        event.stopPropagation();\r\n        const modalRef: NgbModalRef = this.modalService.open(TutorialGroupSessionsManagementComponent, {\r\n            scrollable: false,\r\n            backdrop: 'static',\r\n            animation: false,\r\n            windowClass: 'session-management-dialog',\r\n        });\r\n        modalRef.componentInstance.course = this.course;\r\n        modalRef.componentInstance.tutorialGroupId = this.tutorialGroup.id!;\r\n        modalRef.componentInstance.initialize();\r\n        from(modalRef.result)\r\n            .pipe(\r\n                catchError(() => EMPTY),\r\n                takeUntil(this.ngUnsubscribe),\r\n            )\r\n            .subscribe(() => {\r\n                this.attendanceUpdated.emit();\r\n            });\r\n    }\r\n\r\n    openRegistrationDialog(event: MouseEvent) {\r\n        event.stopPropagation();\r\n        const modalRef: NgbModalRef = this.modalService.open(RegisteredStudentsComponent, { size: 'xl', scrollable: false, backdrop: 'static', animation: false });\r\n        modalRef.componentInstance.course = this.course;\r\n        modalRef.componentInstance.tutorialGroupId = this.tutorialGroup.id!;\r\n        modalRef.componentInstance.initialize();\r\n        from(modalRef.result)\r\n            .pipe(\r\n                catchError(() => EMPTY),\r\n                takeUntil(this.ngUnsubscribe),\r\n            )\r\n            .subscribe(() => {\r\n                this.registrationsChanged.emit();\r\n            });\r\n    }\r\n\r\n    deleteTutorialGroup = () => {\r\n        this.tutorialGroupsService\r\n            .delete(this.course.id!, this.tutorialGroup.id!)\r\n            .pipe(takeUntil(this.ngUnsubscribe))\r\n            .subscribe({\r\n                next: () => {\r\n                    this.dialogErrorSource.next('');\r\n                    this.tutorialGroupDeleted.emit();\r\n                },\r\n                error: (error: HttpErrorResponse) => this.dialogErrorSource.next(error.message),\r\n            });\r\n    };\r\n\r\n    ngOnDestroy(): void {\r\n        this.ngUnsubscribe.next();\r\n        this.ngUnsubscribe.complete();\r\n        this.dialogErrorSource.unsubscribe();\r\n    }\r\n}\r\n", "@if (course && tutorialGroup) {\r\n    <div class=\"btn-group flex-btn-group-container\">\r\n        <!-- Sessions -->\r\n        @if (isAtLeastInstructor || tutorialGroup.isUserTutor) {\r\n            <button type=\"button\" [id]=\"'sessions-' + tutorialGroup.id\" (click)=\"openSessionDialog($event)\" class=\"btn btn-primary btn-sm me-1\">\r\n                <fa-icon [icon]=\"faCalendar\" />\r\n                <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.pages.tutorialGroupsManagement.rowButtons.sessions\"></span>\r\n            </button>\r\n        }\r\n        <!-- Registered Students -->\r\n        @if (isAtLeastInstructor || tutorialGroup.isUserTutor) {\r\n            <button [id]=\"'registrations-' + tutorialGroup.id\" class=\"btn btn-primary btn-sm me-1\" (click)=\"openRegistrationDialog($event)\">\r\n                <fa-icon [icon]=\"faUsers\" />\r\n                <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.pages.registeredStudents.title\"></span>\r\n            </button>\r\n        }\r\n        <!-- Edit -->\r\n        @if (isAtLeastInstructor) {\r\n            <a [id]=\"'edit-' + tutorialGroup.id\" [routerLink]=\"['/course-management', course.id!, 'tutorial-groups', tutorialGroup.id, 'edit']\" class=\"btn btn-warning btn-sm me-1\">\r\n                <fa-icon [icon]=\"faWrench\" />\r\n                <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.edit\"></span>\r\n            </a>\r\n        }\r\n        <!-- Delete -->\r\n        @if (isAtLeastInstructor) {\r\n            <button\r\n                [id]=\"'delete-' + tutorialGroup.id\"\r\n                jhiDeleteButton\r\n                [entityTitle]=\"tutorialGroup.title || ''\"\r\n                deleteQuestion=\"artemisApp.pages.tutorialGroupsManagement.deleteDialog.question\"\r\n                deleteConfirmationText=\"artemisApp.pages.tutorialGroupsManagement.deleteDialog.confirm\"\r\n                (delete)=\"deleteTutorialGroup()\"\r\n                [dialogError]=\"dialogError$\"\r\n            >\r\n                <fa-icon [icon]=\"faTrash\" />\r\n            </button>\r\n        }\r\n    </div>\r\n}\r\n"],
  "mappings": "64CCSoBA,EAAA,EAAA;qBAAA,EAAAC,EAAA,EAAA,MAAA,CAAA,EAMJD,EAAA,EAAA;iBAAA,mBAFQE,EAAA,EAAAC,EAAA,kBAAAC,EAAA,EAAAC,GAAAC,EAAAC,cAAAC,QAAA,CAAA,6BAqBQR,EAAA,EAAA;iCAAA,EAAAS,EAAA,EAAA,MAAA,EAAMT,EAAA,CAAA,EAAwBC,EAAA,EAAA,OAAA,CAAA,EAAiED,EAAA,EAAA,GAAA,EAAAU,EAAA,EACnGV,EAAA,EAAA;6BAAA,mBADUE,EAAA,CAAA,EAAAS,EAAA,GAAAL,EAAAM,kBAAA,GAAA,6BAHdZ,EAAA,EAAA;yBAAA,EAAAS,EAAA,EAAA,MAAA,EACIT,EAAA,EAAA;6BAAA,EAAAS,EAAA,EAAA,MAAA,EAAMT,EAAA,CAAA,EAA4BU,EAAA,EAClCV,EAAA,EAAA;6BAAA,EAAAa,EAAA,EAAAC,GAAA,EAAA,CAAA,EAGAd,EAAA,CAAA,EACAC,EAAA,EAAA,OAAA,CAAA,EACJD,EAAA,EAAA;yBAAA,EAAAU,EAAA,EACJV,EAAA,GAAA;qBAAA,mBAPcE,EAAA,CAAA,EAAAS,EAAA,GAAAL,EAAAC,cAAAQ,MAAA,KAAA,EACNb,EAAA,CAAA,EAAAc,EAAAV,EAAAM,kBAAAN,EAAAW,mBAAAC,OAAA,EAAA,EAAA,EAGAhB,EAAA,EAAAS,EAAA;8BAAAL,EAAAW,mBAAAC,OAAA;6BAAA,EACMhB,EAAA,EAAAC,EAAA,eAAA,4BAAA,sCAnC1BH,EAAA,EAAA;SAAA,EAAAS,EAAA,EAAA,KAAA,EACIT,EAAA,EAAA;aAAA,EAAAS,EAAA,EAAA,MAAA,CAAA,EACIT,EAAA,EAAA;iBAAA,EAAAC,EAAA,EAAA,KAAA,CAAA,EACAD,EAAA,EAAA;iBAAA,EAAAS,EAAA,EAAA,SAAA,CAAA,EAAwCU,EAAA,QAAA,UAAA,CAAAC,EAAAC,CAAA,EAAA,IAAAf,EAAAgB,EAAA,EAAA,OAAAC,EAASjB,EAAAkB,MAAA,CAAO,CAAA,CAAA,EAAEd,EAAA,EAC9DV,EAAA,EAAA;aAAA,EAAAU,EAAA,EACAV,EAAA,EAAA;aAAA,EAAAS,EAAA,GAAA,MAAA,CAAA,EACIT,EAAA,GAAA;iBAAA,EAAAa,EAAA,GAAAY,GAAA,EAAA,CAAA,EAQAhB,EAAA,GAAA,mBAAA,CAAA,EAYIU,EAAA,eAAA,UAAA,CAAAC,EAAAC,CAAA,EAAA,IAAAf,EAAAgB,EAAA,EAAA,OAAAC,EAAgBjB,EAAAoB,QAAA,CAAS,CAAA,CAAA,EAEzB1B,EAAA,GAAA;qBAAA,EAAAa,EAAA,GAAAc,GAAA,GAAA,CAAA,EAUJjB,EAAA,EACJV,EAAA,GAAA;aAAA,EAAAU,EAAA,EACJV,EAAA,GAAA;SAAA,EAAAU,EAAA,EACJV,EAAA,GAAA;KAAA,oBAvC8FE,EAAA,CAAA,EAAAC,EAAA,kBAAAC,EAAA,GAAAwB,GAAAtB,EAAAC,cAAAQ,KAAA,CAAA,EAIlFb,EAAA,CAAA,EAAAc,EAAAV,EAAAuB,gBAAA,GAAA,EAAA,EASI3B,EAAA,EAAAC,EAAA,gBAAAG,EAAAC,aAAA,EAA+B,gBAAAD,EAAAW,kBAAA,EACK,cAAAX,EAAAwB,WAAA,EACT,yBAAAxB,EAAAyB,SAAA,EACS,UAAAzB,EAAA0B,OAAA,EACjB,SAAA1B,EAAA2B,MAAA,EACF,aAAA3B,EAAA4B,UAAA,EACQ,iBAAA5B,EAAA6B,UAAA,EACI,sBAAA7B,EAAA8B,eAAA,EACU,iBAAA9B,EAAA+B,cAAA,EACN,wBAAA/B,EAAAgC,qBAAA,EAIjCpC,EAAA,CAAA,EAAAc,EAAAV,EAAAC,cAAA,GAAA,EAAA,GDPpB,IAAagC,IAA2B,IAAA,CAAlC,MAAOA,CAA2B,CAC5BC,YAAcC,EAAOC,CAAc,EACnCC,qBAAuBF,EAAOG,CAAqB,EACnDC,aAAeJ,EAAOK,CAAY,EAClCC,cAAgBN,EAAOO,EAAuB,EAC9CC,IAAMR,EAAOS,CAAiB,EAE7BjB,OACAkB,gBAET5C,cACAwB,UAAY,GACZd,mBAA6B,CAAA,EAC7Ba,YAAW,WACXE,QAAU,GACVpB,kBAAoB,EACpBwC,sBAAwB,EAExBC,qBAAuB,GAEvBC,cAAgB,GAChBC,cAAgB,IAAIC,EAEpB,IAAI3B,iBAAe,CAIf,MAHI,CAAC,KAAKtB,eAGN,KAAKA,cAAcC,WAAaiD,QAAa,KAAKlD,cAAcC,WAAa,KACtE,GAEA,KAAK4C,uBAAyB,KAAK7C,cAAcC,QAEhE,CAEAkD,aAAW,CACP,KAAKH,cAAcI,KAAI,EACvB,KAAKJ,cAAcK,SAAQ,CAC/B,CAEAC,YAAU,CACF,CAAC,KAAKV,iBAAmB,CAAC,KAAKlB,OAC/B6B,EAAiB,uCAAuC,GAExD,KAAKR,cAAgB,GACrB,KAAK5B,QAAO,EAEpB,CAEAY,sBAAyB1B,GAA+B,KAAKA,kBAAoBA,EAEjFuB,WAAc4B,GACV,KAAKpB,qBAAqBqB,gBAAgB,KAAK/B,OAAOgC,GAAK,KAAK1D,cAAc0D,GAAKF,CAAK,EAAEG,KACtFC,GAAI,CACAR,KAAMA,IAAK,CACP,KAAKN,qBAAuB,GAC5B,KAAKD,uBACT,EACH,CAAC,EAGVhB,gBAAmB2B,GACf,KAAKpB,qBAAqByB,kBAAkB,KAAKnC,OAAOgC,GAAK,KAAK1D,cAAc0D,GAAKF,CAAK,EAAEG,KACxFC,GAAI,CACAR,KAAMA,IAAK,CACP,KAAKN,qBAAuB,GAC5B,KAAKD,uBACT,EACH,CAAC,EAGVlB,WAAcmC,GAAwB,KAAKtB,cAAcuB,eAAe,KAAKrC,OAAOgC,GAAKI,CAAW,EAEpG,IAAIhC,gBAAc,CACd,OAAI,KAAKJ,QAAU,KAAK1B,cACb,KAAK0B,OAAOlB,MAAQ,IAAM,KAAKR,cAAcQ,MAE7C,oBAEf,CAEAW,QAAUA,IAAK,CACX,KAAKiB,qBACA4B,eAAe,KAAKtC,OAAOgC,GAAK,KAAKd,eAAe,EACpDe,KACGM,EAAS,IAAO,KAAKzC,UAAY,EAAM,EACvC0C,EAAU,KAAKlB,aAAa,CAAC,EAEhCmB,UAAU,CACPf,KAAOgB,GAAuB,CACtBA,EAAoBC,OACpB,KAAKrE,cAAgBoE,EAAoBC,KAEpC,KAAKrE,cAAcsE,gBACpB,KAAKtE,cAAcsE,cAAgB,CAAA,GAEvC,KAAK5D,mBAAqB,KAAKV,cAAcsE,cAAcC,IAAKC,GAAiBA,EAAaC,OAAQ,EACtG,KAAK5B,sBAAwB,KAAKnC,mBAAmBC,OAE7D,EACA+D,MAAQC,GAA2BC,EAAQ,KAAKtC,aAAcqC,CAAG,EACpE,EACAE,IAAI,IAAM,KAAKnC,IAAIoC,cAAa,CAAE,CAC3C,EAEA7D,OAAK,CACG,KAAK6B,qBACL,KAAKb,YAAY8C,MAAK,EAEtB,KAAK9C,YAAY+C,QAAO,CAEhC,4CA9GShD,EAA2B,2BAA3BA,EAA2BiD,UAAA,CAAA,CAAA,yBAAA,CAAA,EAAAC,OAAA,CAAAxD,OAAA,SAAAkB,gBAAA,iBAAA,EAAAuC,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,WAAA,EAAA,CAAA,EAAA,cAAA,EAAA,CAAA,eAAA,6CAAA,EAAA,cAAA,EAAA,iBAAA,EAAA,CAAA,OAAA,SAAA,EAAA,YAAA,EAAA,OAAA,EAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,eAAA,gBAAA,gBAAA,cAAA,yBAAA,UAAA,SAAA,aAAA,iBAAA,sBAAA,iBAAA,uBAAA,EAAA,CAAA,OAAA,QAAA,eAAA,sDAAA,EAAA,QAAA,gBAAA,EAAA,iBAAA,EAAA,CAAA,EAAA,cAAA,EAAA,CAAA,eAAA,qCAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,ICvBxCrF,EAAA,EAAA,kCAAA,CAAA,EACIT,EAAA,EAAA;KAAA,EAAAa,EAAA,EAAAmF,GAAA,GAAA,EAAA,EA2CJtF,EAAA,EACAV,EAAA,EAAA;CAAA,SA7CiCG,EAAA,YAAA4F,EAAAhE,SAAA,EAC7B7B,EAAA,CAAA,EAAAc,EAAA+E,EAAAzC,eAAAyC,EAAAxF,cAAA,EAAA,EAAA,kBDoBU0F,EAAoCC,EAAoBC,EAAoB,EAAAC,cAAA,EAAAC,gBAAA,CAAA,CAAA,SAE7E9D,CAA2B,GAAA,2GGMR+D,EAAA,EAAA;iCAAA,EAAAC,EAAA,EAAA,MAAA,EAAA,EACJD,EAAA,EAAA;6BAAA,0BAEIA,EAAA,EAAA;iCAAA,EAAAC,EAAA,EAAA,MAAA,EAAA,EACJD,EAAA,EAAA;6BAAA,6BANJA,EAAA,EAAA;yBAAA,EAAAE,EAAA,EAAA,MAAA,EAAA,EACIF,EAAA,EAAA;6BAAA,EAAAG,EAAA,EAAAC,GAAA,EAAA,CAAA,EAAqC,EAAAC,GAAA,EAAA,CAAA,EAMzCC,EAAA,EACJN,EAAA,EAAA;qBAAA,mBAPQO,EAAA,CAAA,EAAAC,EAAAC,EAAAA,EAAAC,aAAA,MAAAD,EAAAC,YAAAC,QAAA,OAAAF,EAAAC,YAAAC,OAAAC,SAAA,EAAA,EAAA,EAGAL,EAAA,EAAAC,EAAAC,EAAAA,EAAAC,aAAA,MAAAD,EAAAC,YAAAC,QAAA,OAAAF,EAAAC,YAAAC,OAAAE,iBAAA,EAAA,EAAA,0BAyBIb,EAAA,EAAA;iCAAA,EAAAC,EAAA,EAAA,MAAA,EAAA,EACJD,EAAA,EAAA;6BAAA,6BAHJA,EAAA,EAAA;yBAAA,EAAAE,EAAA,EAAA,MAAA,EAAA,EACIF,EAAA,EAAA;6BAAA,EAAAG,EAAA,EAAAW,GAAA,EAAA,CAAA,EAGJR,EAAA,EACJN,EAAA,EAAA;qBAAA,mBAJQO,EAAA,CAAA,EAAAC,EAAAC,EAAAA,EAAAM,kBAAA,MAAAN,EAAAM,iBAAAJ,QAAA,OAAAF,EAAAM,iBAAAJ,OAAAC,SAAA,EAAA,EAAA,0BAQIZ,EAAA,EAAA;iCAAA,EAAAC,EAAA,EAAA,MAAA,EAAA,EACJD,EAAA,EAAA;6BAAA,6BAHJA,EAAA,EAAA;yBAAA,EAAAE,EAAA,EAAA,MAAA,EAAA,EACIF,EAAA,EAAA;6BAAA,EAAAG,EAAA,EAAAa,GAAA,EAAA,CAAA,EAGJV,EAAA,EACJN,EAAA,EAAA;qBAAA,mBAJQO,EAAA,CAAA,EAAAC,EAAAC,EAAAA,EAAAQ,gBAAA,MAAAR,EAAAQ,eAAAN,QAAA,OAAAF,EAAAQ,eAAAN,OAAAC,SAAA,EAAA,EAAA,0BAQIZ,EAAA,EAAA;iCAAA,EAAAC,EAAA,EAAA,MAAA,EAAA,EACJD,EAAA,EAAA;6BAAA,6BAHJA,EAAA,EAAA;yBAAA,EAAAE,EAAA,EAAA,KAAA,EACIF,EAAA,EAAA;6BAAA,EAAAG,EAAA,EAAAe,GAAA,EAAA,CAAA,EAGJZ,EAAA,EACJN,EAAA,EAAA;qBAAA,mBAJQO,EAAA,CAAA,EAAAC,EAAAC,EAAAA,EAAAU,MAAA,MAAAV,EAAAU,KAAAR,QAAA,OAAAF,EAAAU,KAAAR,OAAAS,iBAAA,EAAA,EAAA,0BAmBIpB,EAAA,EAAA;iCAAA,EAAAC,EAAA,EAAA,MAAA,EAAA,EACJD,EAAA,EAAA;6BAAA,SAD4FO,EAAA,EAAAc,EAAA,kBAAAC,EAAA,EAAAC,EAAA,CAAA,0BAGxFvB,EAAA,EAAA;iCAAA,EAAAC,EAAA,EAAA,MAAA,EAAA,EACJD,EAAA,EAAA;6BAAA,6BANJA,EAAA,EAAA;yBAAA,EAAAE,EAAA,EAAA,MAAA,EAAA,EACIF,EAAA,EAAA;6BAAA,EAAAG,EAAA,EAAAqB,GAAA,EAAA,CAAA,EAA0C,EAAAC,GAAA,EAAA,CAAA,EAM9CnB,EAAA,EACJN,EAAA,EAAA;qBAAA,mBAPQO,EAAA,CAAA,EAAAC,EAAAC,EAAAA,EAAAiB,iBAAA,MAAAjB,EAAAiB,gBAAAf,QAAA,OAAAF,EAAAiB,gBAAAf,OAAAgB,UAAA,EAAA,EAAA,EAGApB,EAAA,EAAAC,EAAAC,EAAAA,EAAAiB,iBAAA,MAAAjB,EAAAiB,gBAAAf,QAAA,OAAAF,EAAAiB,gBAAAf,OAAAC,SAAA,EAAA,EAAA,sCApFhBZ,EAAA,EAAA;aAAA,EAAAE,EAAA,EAAA,OAAA,CAAA,EAAqC0B,EAAA,WAAA,UAAA,CAAAC,EAAAC,CAAA,EAAA,IAAArB,EAAAsB,EAAA,EAAA,OAAAC,EAAYvB,EAAAwB,WAAA,CAAY,CAAA,CAAA,EACzDjC,EAAA,EAAA;iBAAA,EACAA,EAAA,EAAA;iBAAA,EAAAE,EAAA,EAAA,KAAA,EACIF,EAAA,EAAA;qBAAA,EAAAC,EAAA,EAAA,QAAA,CAAA,EACAD,EAAA,EAAA;qBAAA,EAAAE,EAAA,EAAA,MAAA,CAAA,EACIF,EAAA,EAAA;yBAAA,EAAAC,EAAA,GAAA,QAAA,CAAA,EACAD,EAAA,GAAA;yBAAA,EAAAE,EAAA,GAAA,QAAA,CAAA,sBAKI0B,EAAA,QAAA,UAAA,CAAAC,EAAAC,CAAA,EAAA,IAAArB,EAAAsB,EAAA,EAAA,OAAAC,EAASvB,EAAAyB,kBAAA,CAAmB,CAAA,CAAA,EALhC5B,EAAA,EAWAN,EAAA,GAAA;yBAAA,EAAAE,EAAA,GAAA,SAAA,EAAA,EAA4ED,EAAA,GAAA,UAAA,EAAA,EAAkCK,EAAA,EAC9GN,EAAA,GAAA;yBAAA,EAAAC,EAAA,GAAA,gBAAA,GAAA,CAAA,EACJD,EAAA,GAAA;qBAAA,EAAAM,EAAA,EACAN,EAAA,GAAA;qBAAA,EAAAG,EAAA,GAAAgC,GAAA,EAAA,CAAA,EAUJ7B,EAAA,EACAN,EAAA,GAAA;iBAAA,EACAA,EAAA,GAAA;iBAAA,EAAAE,EAAA,GAAA,KAAA,EACIF,EAAA,GAAA;qBAAA,EAAAE,EAAA,GAAA,MAAA,CAAA,EACIF,EAAA,GAAA;yBAAA,EAAAE,EAAA,GAAA,MAAA,EAAA,EACIF,EAAA,GAAA;6BAAA,EAAAC,EAAA,GAAA,OAAA,EAAA,EACJD,EAAA,GAAA;yBAAA,EAAAM,EAAA,EACAN,EAAA,GAAA;yBAAA,EAAAE,EAAA,GAAA,MAAA,EAAA,EACIF,EAAA,GAAA;6BAAA,EAAAC,EAAA,GAAA,iBAAA,EAAA,EACJD,EAAA,GAAA;yBAAA,EAAAM,EAAA,EACAN,EAAA,GAAA;yBAAA,EAAAE,EAAA,GAAA,MAAA,EAAA,EACIF,EAAA,GAAA;6BAAA,EAAAC,EAAA,GAAA,OAAA,EAAA,EACJD,EAAA,GAAA;yBAAA,EAAAM,EAAA,EACAN,EAAA,GAAA;yBAAA,EAAAE,EAAA,GAAA,MAAA,EAAA,EACIF,EAAA,GAAA;6BAAA,EAAAC,EAAA,GAAA,iBAAA,EAAA,EACJD,EAAA,GAAA;yBAAA,EAAAM,EAAA,EACJN,EAAA,GAAA;qBAAA,EAAAM,EAAA,EACAN,EAAA,GAAA;qBAAA,EAAAG,EAAA,GAAAiC,GAAA,EAAA,CAAA,EAA2F,GAAAC,GAAA,EAAA,CAAA,EAON,GAAAC,GAAA,EAAA,CAAA,EAczFhC,EAAA,EACAN,EAAA,GAAA;iBAAA,EACAA,EAAA,GAAA;iBAAA,EAAAE,EAAA,GAAA,MAAA,EAAA,EACIF,EAAA,GAAA;qBAAA,EAAAC,EAAA,GAAA,QAAA,EAAA,EACAD,EAAA,GAAA;qBAAA,EAAAC,EAAA,GAAA,WAAA,EAAA,2BAOAD,EAAA,GAAA;qBAAA,EAAAG,EAAA,GAAAoC,GAAA,EAAA,CAAA,EAUJjC,EAAA,EACAN,EAAA,GAAA;iBAAA,EAAAE,EAAA,GAAA,MAAA,EAAA,EACIF,EAAA,GAAA;qBAAA,EAAAE,EAAA,GAAA,MAAA,CAAA,EACIF,EAAA,GAAA;yBAAA,EAAAE,EAAA,GAAA,SAAA,EAAA,EACIF,EAAA,GAAA;6BAAA,EAAAC,EAAA,GAAA,OAAA,EAAA,EACJD,EAAA,GAAA;yBAAA,EAAAM,EAAA,EACJN,EAAA,GAAA;qBAAA,EAAAM,EAAA,EACJN,EAAA,GAAA;iBAAA,EAAAM,EAAA,EACJN,EAAA,GAAA;aAAA,EAAAM,EAAA,EACJN,EAAA,GAAA;SAAA,6BAlGsBO,EAAA,EAAAc,EAAA,YAAAZ,EAAAU,IAAA,EAKwBZ,EAAA,CAAA,EAAAc,EAAA,cAAAmB,CAAA,EAK1BjC,EAAA,CAAA,EAAAkC,GAAA,aAAAhC,EAAAiC,aAAA,EAEArB,EAAA,QAAAsB,GAAA,GAAA,GAAAC,EAAA,GAAAC,GAAApC,EAAAC,aAAA,KAAA,KAAAD,EAAAC,YAAAoC,KAAA,CAAA,CAAA,EAAkF,qBAAAN,CAAA,EAKtCjC,EAAA,CAAA,EAAAc,EAAA,qBAAAmB,CAAA,EAAqCjC,EAAA,EAAAc,EAAA,OAAAZ,EAAAsC,aAAA,EACtExC,EAAA,CAAA,EAAAc,EAAA,iBAAA,CAAA,EAAoB,aAAA,UAAA,EAA0B,aAAA,QAAA,EAEjEd,EAAA,CAAA,EAAAC,EAAAC,EAAAC,aAAA,MAAAD,EAAAC,YAAAsC,UAAAvC,EAAAC,aAAA,MAAAD,EAAAC,YAAAuC,OAAAxC,EAAAC,aAAA,MAAAD,EAAAC,YAAAwC,SAAA,GAAA,EAAA,EAkBoD3C,EAAA,EAAA,EAAAc,EAAA,WAAA,CAAA,EAAc,aAAA,EAAA,EAMhBd,EAAA,EAAA,EAAAc,EAAA,WAAA,CAAA,EAAc,aAAA,EAAA,EAGhEd,EAAA,CAAA,EAAAC,EAAAC,EAAAM,kBAAA,MAAAN,EAAAM,iBAAAiC,UAAAvC,EAAAM,kBAAA,MAAAN,EAAAM,iBAAAkC,OAAAxC,EAAAM,kBAAA,MAAAN,EAAAM,iBAAAmC,SAAA,GAAA,EAAA,EAOA3C,EAAA,EAAAC,EAAAC,EAAAQ,gBAAA,MAAAR,EAAAQ,eAAA+B,UAAAvC,EAAAQ,gBAAA,MAAAR,EAAAQ,eAAAgC,OAAAxC,EAAAQ,gBAAA,MAAAR,EAAAQ,eAAAiC,SAAA,GAAA,EAAA,EAOA3C,EAAA,EAAAC,EAAAC,EAAAU,MAAA,MAAAV,EAAAU,KAAA6B,UAAAvC,EAAAU,MAAA,MAAAV,EAAAU,KAAA8B,OAAAxC,EAAAU,MAAA,MAAAV,EAAAU,KAAA+B,SAAA,GAAA,EAAA,EAgBI3C,EAAA,CAAA,EAAAc,EAAA,cAAA8B,EAAA,GAAA,GAAA,wDAAA,CAAA,EAEJ5C,EAAA,CAAA,EAAAC,EAAAC,EAAAiB,iBAAA,MAAAjB,EAAAiB,gBAAAsB,UAAAvC,EAAAiB,iBAAA,MAAAjB,EAAAiB,gBAAAuB,OAAAxC,EAAAiB,iBAAA,MAAAjB,EAAAiB,gBAAAwB,SAAA,GAAA,EAAA,EAaoE3C,EAAA,CAAA,EAAAc,EAAA,WAAA,CAAAZ,EAAA2C,gBAAA,EACtD7C,EAAA,CAAA,EAAA8C,GAAA,eAAA5C,EAAA6C,WAAA,sBAAA,uBAAA,GDzElC,IAAaC,IAAiC,IAAA,CAAxC,MAAOA,CAAiC,CAClCC,GAAKC,EAAOC,EAAW,EAG/BC,SAAyC,CACrCC,KAAMC,OACNC,UAAWD,OACXE,QAASF,OACTG,SAAUH,QAGLI,SACAX,WAAa,GACZY,cAA4D,IAAIC,EAC1EpB,cAAgBA,GAEhB5B,KACA,IAAIuB,eAAa,CACb,OAAI,KAAKhC,YACE,KAAKA,YAAYsC,UAAY,KAAKtC,YAAYwC,SAAW,KAAKxC,YAAYuC,OAE1E,EAEf,CAEAf,mBAAiB,CACT,KAAKxB,aACL,KAAKA,YAAY0D,cAAa,CAEtC,CAEA,IAAI1D,aAAW,CACX,OAAO,KAAKS,KAAKkD,IAAI,MAAM,CAC/B,CAEA,IAAItD,kBAAgB,CAChB,OAAO,KAAKI,KAAKkD,IAAI,WAAW,CACpC,CAEA,IAAIpD,gBAAc,CACd,OAAO,KAAKE,KAAKkD,IAAI,SAAS,CAClC,CAEA,IAAI3C,iBAAe,CACf,OAAO,KAAKP,KAAKkD,IAAI,UAAU,CACnC,CAEA,IAAIjB,kBAAgB,CAChB,MAAO,CAAC,KAAKjC,KAAK6B,OACtB,CAEAsB,UAAQ,CACJ,KAAKC,eAAc,CACvB,CAEAC,aAAW,CACP,KAAKD,eAAc,EACf,KAAKjB,YAAc,KAAKK,UACxB,KAAKc,cAAc,KAAKd,QAAQ,CAExC,CAEA1B,YAAU,CACN,IAAMyC,EAA6DC,GAAA,GAAK,KAAKxD,KAAK2B,OAClF,KAAKoB,cAAcU,KAAKF,CAA4B,CACxD,CAEQD,cAAcd,EAAsC,CACxD,KAAKxC,KAAK0D,WAAWlB,CAAQ,CACjC,CAEQY,gBAAc,CACd,KAAKpD,OAGT,KAAKA,KAAO,KAAKqC,GAAGsB,MAChB,CACIhB,UAAW,CAAC,WAAY,CAACiB,EAAWnE,QAAQ,CAAC,EAC7CmD,QAAS,CAAC,WAAY,CAACgB,EAAWnE,QAAQ,CAAC,EAC3CgD,KAAM,CAACC,OAAW,CAACkB,EAAWnE,QAAQ,CAAC,EACvCoD,SAAU,CAACH,OAAW,CAACkB,EAAWnE,QAAQ,CAAC,GAE/C,CAAEoE,WAAYC,EAAc,CAAE,EAEtC,4CApFS1B,EAAiC,2BAAjCA,EAAiC2B,UAAA,CAAA,CAAA,iCAAA,CAAA,EAAAC,OAAA,CAAAxB,SAAA,WAAAM,SAAA,WAAAX,WAAA,YAAA,EAAA8B,QAAA,CAAAlB,cAAA,eAAA,EAAAmB,SAAA,CAAAC,GAJ/B,CAAC,CAAEC,QAASC,GAAgBC,SAAUC,EAAoB,CAAE,CAAC,EAAAC,EAAA,EAAAC,MAAA,GAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,OAAA,EAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,SAAA,MAAA,EAAA,CAAA,eAAA,8BAAA,EAAA,QAAA,aAAA,EAAA,iBAAA,EAAA,CAAA,EAAA,QAAA,EAAA,CAAA,EAAA,MAAA,EAAA,WAAA,WAAA,EAAA,CAAA,MAAA,OAAA,eAAA,+CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,aAAA,EAAA,CAAA,kBAAA,OAAA,EAAA,SAAA,EAAA,aAAA,EAAA,CAAA,OAAA,OAAA,KAAA,OAAA,WAAA,GAAA,WAAA,GAAA,EAAA,eAAA,EAAA,QAAA,QAAA,oBAAA,EAAA,CAAA,OAAA,SAAA,EAAA,MAAA,gBAAA,EAAA,oBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,EAAA,iBAAA,aAAA,YAAA,EAAA,CAAA,EAAA,WAAA,SAAA,EAAA,CAAA,eAAA,6CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,kBAAA,YAAA,EAAA,WAAA,YAAA,EAAA,CAAA,eAAA,2CAAA,EAAA,CAAA,kBAAA,UAAA,EAAA,WAAA,YAAA,EAAA,CAAA,EAAA,YAAA,EAAA,CAAA,MAAA,WAAA,eAAA,wDAAA,EAAA,CAAA,KAAA,WAAA,OAAA,IAAA,kBAAA,WAAA,EAAA,eAAA,EAAA,aAAA,EAAA,CAAA,EAAA,MAAA,MAAA,EAAA,CAAA,KAAA,eAAA,OAAA,SAAA,EAAA,MAAA,cAAA,EAAA,UAAA,EAAA,CAAA,EAAA,cAAA,EAAA,CAAA,EAAA,QAAA,cAAA,EAAA,CAAA,eAAA,0DAAA,EAAA,CAAA,eAAA,mDAAA,EAAA,CAAA,eAAA,yDAAA,EAAA,CAAA,eAAA,0DAAA,EAAA,QAAA,cAAA,EAAA,CAAA,eAAA,sEAAA,EAAA,iBAAA,EAAA,CAAA,eAAA,oEAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,ICtB5E9F,EAAA,EAAA,MAAA,CAAA,EACIF,EAAA,EAAA;KAAA,EAAAE,EAAA,EAAA,MAAA,CAAA,EACIF,EAAA,EAAA;SAAA,EAAAC,EAAA,EAAA,MAAA,CAAA,EACJD,EAAA,EAAA;KAAA,EAAAM,EAAA,EACAN,EAAA,EAAA;KAAA,EAAAE,EAAA,EAAA,MAAA,CAAA,EACIF,EAAA,EAAA;SAAA,EAAAG,EAAA,EAAA+F,GAAA,GAAA,EAAA,EAoGJ5F,EAAA,EACJN,EAAA,GAAA;CAAA,EAAAM,EAAA,EACAN,EAAA,GAAA;CAAA,SAzGiFO,EAAA,CAAA,EAAAc,EAAA,kBAAAuB,EAAA,EAAAuD,GAAAF,EAAAhC,QAAA,CAAA,EAGzE1D,EAAA,CAAA,EAAAC,EAAAyF,EAAA9E,KAAA,EAAA,EAAA,kBDmBMiF,EAAoBC,GAAWC,GAAAC,EAAAC,EAAAC,GAAEC,GAAmBC,GAAAC,GAAEC,GAAiBC,GAAAC,GAAAC,GAAEC,EAAiBC,GAAeC,GAAiBC,CAAoB,EAAAC,cAAA,EAAAC,gBAAA,CAAA,CAAA,SAE/I/D,CAAiC,GAAA,qCGxBtCgE,EAAA,EAAA;SAAA,EAAAC,EAAA,EAAA,KAAA,EACID,EAAA,EAAA;aAAA,EAAAC,EAAA,EAAA,MAAA,CAAA,EACID,EAAA,EAAA;iBAAA,EAAAE,EAAA,EAAA,KAAA,CAAA,EACAF,EAAA,EAAA;iBAAA,EAAAC,EAAA,EAAA,SAAA,CAAA,EAAwCE,EAAA,QAAA,UAAA,CAAAC,EAAAC,CAAA,EAAA,IAAAC,EAAAC,EAAA,EAAA,OAAAC,EAASF,EAAAG,MAAA,CAAO,CAAA,CAAA,EAAEC,EAAA,EAC9DV,EAAA,EAAA;aAAA,EAAAU,EAAA,EACAV,EAAA,EAAA;aAAA,EAAAC,EAAA,GAAA,MAAA,CAAA,EACID,EAAA,GAAA;iBAAA,EAAAC,EAAA,GAAA,kCAAA,CAAA,EAAoFE,EAAA,gBAAA,SAAAQ,EAAA,CAAAP,EAAAC,CAAA,EAAA,IAAAC,EAAAC,EAAA,EAAA,OAAAC,EAAiBF,EAAAM,2BAAAD,CAAA,CAAkC,CAAA,CAAA,EAAvID,EAAA,EACJV,EAAA,GAAA;aAAA,EAAAU,EAAA,EACJV,EAAA,GAAA;SAAA,EAAAU,EAAA,EACJV,EAAA,GAAA;KAAA,oBAH6Ca,EAAA,EAAA,EAAAC,EAAA,aAAA,EAAA,EAAoB,WAAAR,EAAAS,OAAAC,QAAA,GDarE,IAAaC,IAAmC,IAAA,CAA1C,MAAOA,CAAmC,CACpCC,YAAcC,EAAOC,CAAc,EACnCC,4BAA8BF,EAAOG,CAA2B,EAChEC,aAAeJ,EAAOK,CAAY,EAE1CC,cAAgB,IAAIC,EAEpBC,6BAAwD,IAAIC,GAC5DC,UAGAC,cAGAf,OAEAgB,cAAgB,GAEhBC,YAAU,CACF,CAAC,KAAKjB,QAAU,CAAC,KAAKe,cACtBG,EAAiB,uCAAuC,EAExD,KAAKF,cAAgB,EAE7B,CAEAnB,2BAA2BsB,EAAsC,CAC7D,GAAM,CAAEC,KAAAA,EAAMC,UAAAA,EAAWC,QAAAA,EAASC,SAAAA,CAAQ,EAAKJ,EAE/C,KAAKP,6BAA6BQ,KAAOA,EACzC,KAAKR,6BAA6BS,UAAYA,EAC9C,KAAKT,6BAA6BU,QAAUA,EAC5C,KAAKV,6BAA6BW,SAAWA,EAE7C,KAAKT,UAAY,GAEjB,KAAKR,4BACAkB,OAAO,KAAKxB,OAAOyB,GAAK,KAAKV,cAAcU,GAAK,KAAKb,4BAA4B,EACjFc,KACGC,EAAS,IAAK,CACV,KAAKb,UAAY,EACrB,CAAC,EACDc,EAAU,KAAKlB,aAAa,CAAC,EAEhCmB,UAAU,CACPC,KAAMA,IAAK,CACP,KAAK3B,YAAY4B,MAAK,CAC1B,EACAC,MAAQC,GAA0B,CAC9B,KAAKC,QAAQD,CAAG,EAChB,KAAKvC,MAAK,CACd,EACH,CACT,CAEAwC,QAAQC,EAAoC,CACxC,IAAMH,EAAQG,EAAkBH,MAC5BA,GAASA,EAAMI,UAAYJ,EAAMI,WAAa,6BAC9C,KAAK5B,aAAawB,MAAMA,EAAMK,QAASL,EAAMM,MAAM,EAEnD,KAAK9B,aAAawB,MAAM,wBAAyB,CAC7CA,MAAOG,EAAkBE,QAC5B,CAET,CAEA3C,OAAK,CACD,KAAKS,YAAYoC,QAAO,CAC5B,CAEAC,aAAW,CACP,KAAK9B,cAAcoB,KAAI,EACvB,KAAKpB,cAAc+B,SAAQ,CAC/B,4CAzESvC,EAAmC,2BAAnCA,EAAmCwC,UAAA,CAAA,CAAA,mCAAA,CAAA,EAAAC,OAAA,CAAA5B,cAAA,gBAAAf,OAAA,QAAA,EAAA4C,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,WAAA,EAAA,CAAA,EAAA,cAAA,EAAA,CAAA,eAAA,+CAAA,EAAA,aAAA,EAAA,CAAA,OAAA,SAAA,EAAA,YAAA,EAAA,OAAA,EAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,gBAAA,aAAA,UAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,ICrBhD9D,EAAA,EAAA,kCAAA,CAAA,EACID,EAAA,EAAA;KAAA,EAAAiE,EAAA,EAAAC,GAAA,GAAA,CAAA,EAWJxD,EAAA,EACAV,EAAA,EAAA;CAAA,SAbiCc,EAAA,YAAAkD,EAAAnC,SAAA,EAC7BhB,EAAA,CAAA,EAAAsD,EAAAH,EAAAjC,cAAA,EAAA,EAAA,kBDkBUqC,EAAoCC,EAAoBC,EAAiC,EAAAC,cAAA,EAAAC,gBAAA,CAAA,CAAA,SAE1FvD,CAAmC,GAAA,oEGOpBwD,EAAA,EAAA;6BAAA,EAAAC,EAAA,EAAA,MAAA,EAAA,EAIJD,EAAA,EAAA;yBAAA,SAFQE,EAAA,EAAAC,EAAA,kBAAAC,EAAA,EAAAC,EAAA,CAAA,6BAJZL,EAAA,EAAA;qBAAA,EAAAM,EAAA,EAAA,MAAA,EAAA,EACIN,EAAA,EAAA;yBAAA,EAAAO,EAAA,EAAAC,GAAA,EAAA,CAAA,EAMJC,EAAA,EACJT,EAAA,EAAA;iBAAA,mBAPQE,EAAA,CAAA,EAAAQ,EAAAC,EAAAA,EAAAC,eAAA,MAAAD,EAAAC,cAAAC,QAAA,OAAAF,EAAAC,cAAAC,OAAAC,UAAA,EAAA,EAAA,6BANhBd,EAAA,EAAA;SAAA,EAAAM,EAAA,EAAA,OAAA,CAAA,EACIN,EAAA,EAAA;aAAA,EAAAM,EAAA,EAAA,MAAA,CAAA,EACIN,EAAA,EAAA;iBAAA,EAAAC,EAAA,EAAA,QAAA,CAAA,EACAD,EAAA,EAAA;iBAAA,EAAAC,EAAA,EAAA,WAAA,EAAA,EACAD,EAAA,EAAA;iBAAA,EAAAO,EAAA,EAAAQ,GAAA,EAAA,CAAA,EAUJN,EAAA,EACJT,EAAA,GAAA;SAAA,EAAAS,EAAA,EACJT,EAAA,GAAA;KAAA,kBAhBUE,EAAA,EAAAC,EAAA,YAAAQ,EAAAK,IAAA,EAIEd,EAAA,CAAA,EAAAQ,EAAAC,EAAAC,eAAA,MAAAD,EAAAC,cAAAK,UAAAN,EAAAC,eAAA,MAAAD,EAAAC,cAAAM,OAAAP,EAAAC,eAAA,MAAAD,EAAAC,cAAAO,SAAA,EAAA,EAAA,GDLhB,IAAaC,IAA0B,IAAA,CAAjC,MAAOA,CAA0B,CACnCC,YAAcC,EAAOC,CAAc,EAC3BC,4BAA8BF,EAAOG,CAA2B,EAChEC,aAAeJ,EAAOK,CAAY,EAClCC,GAAKN,EAAOO,EAAW,EAE/BC,cAAgB,IAAIC,EAEpBC,2BAA6BC,EAC7BjB,KAGAkB,OAGAC,gBAGAC,qBAEAC,UAAQ,CACJ,KAAKC,eAAc,CACvB,CAEA,IAAI1B,eAAa,CACb,OAAO,KAAKI,KAAKuB,IAAI,QAAQ,CACjC,CAEQD,gBAAc,CAClB,KAAKtB,KAAO,KAAKY,GAAGY,MAAM,CACtBC,OAAQ,CAACC,OAAW,CAACC,EAAWC,UAAU,GAAG,CAAC,CAAC,EAClD,CACL,CAEA,IAAIC,kBAAgB,CAChB,MAAO,CAAC,KAAK7B,KAAKC,OACtB,CAEA6B,qBAAqBV,EAA0C,CAC3D,MAAI,CAACA,GAAsBW,OAAS,CAACX,GAAsBY,IAChD,GAEAZ,EAAqBW,MAAME,GAAG,KAAKf,OAAOgB,QAAQ,EAAEC,OAAO,MAAM,EAAI,MAAQf,EAAqBY,IAAIC,GAAG,KAAKf,OAAOgB,QAAQ,EAAEC,OAAO,IAAI,CAEzJ,CACAC,kBAAgB,CACR,KAAKhB,qBAAqBiB,SAAWpB,EAA2BqB,OAChE,KAAKC,cAAa,EAElB,KAAKC,gBAAe,CAE5B,CAEAD,eAAa,CACT,KAAK/B,4BACAiC,OAAO,KAAKvB,OAAOwB,GAAK,KAAKvB,gBAAiB,KAAKC,qBAAqBsB,GAAK,KAAK9C,eAAe+C,KAAK,EACtGC,KAAKC,EAAU,KAAK/B,aAAa,CAAC,EAClCgC,UAAU,CACPC,KAAMA,IAAK,CACP,KAAK1C,YAAY2C,MAAM,WAAW,CACtC,EACAC,MAAQC,GAA0B,CAC9BC,EAAQ,KAAKzC,aAAcwC,CAAG,EAC9B,KAAK7C,YAAY2C,MAAM,OAAO,CAClC,EACH,CACT,CAEAR,iBAAe,CACX,KAAKhC,4BACA4C,SAAS,KAAKlC,OAAOwB,GAAK,KAAKvB,gBAAiB,KAAKC,qBAAqBsB,EAAG,EAC7EE,KAAKC,EAAU,KAAK/B,aAAa,CAAC,EAClCgC,UAAU,CACPC,KAAMA,IAAK,CACP,KAAK1C,YAAY2C,MAAM,WAAW,CACtC,EACAC,MAAQC,GAA0B,CAC9BC,EAAQ,KAAKzC,aAAcwC,CAAG,EAC9B,KAAK7C,YAAY2C,MAAM,OAAO,CAClC,EACH,CACT,CAEAK,aAAW,CACP,KAAKvC,cAAciC,KAAI,EACvB,KAAKjC,cAAcwC,SAAQ,CAC/B,4CAtFSlD,EAA0B,2BAA1BA,EAA0BmD,UAAA,CAAA,CAAA,wBAAA,CAAA,EAAAC,OAAA,CAAAtC,OAAA,SAAAC,gBAAA,kBAAAC,qBAAA,sBAAA,EAAAqC,MAAA,GAAAC,KAAA,GAAAC,OAAA,CAAA,CAAA,EAAA,cAAA,EAAA,CAAA,EAAA,aAAA,EAAA,CAAA,OAAA,SAAA,EAAA,YAAA,EAAA,OAAA,EAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,cAAA,EAAA,CAAA,KAAA,iBAAA,OAAA,SAAA,eAAA,qBAAA,EAAA,MAAA,wBAAA,EAAA,OAAA,EAAA,CAAA,KAAA,yBAAA,OAAA,SAAA,eAAA,sBAAA,EAAA,MAAA,cAAA,EAAA,QAAA,UAAA,EAAA,CAAA,EAAA,WAAA,EAAA,CAAA,EAAA,YAAA,EAAA,CAAA,MAAA,SAAA,eAAA,+FAAA,EAAA,CAAA,KAAA,SAAA,OAAA,IAAA,kBAAA,SAAA,EAAA,cAAA,EAAA,CAAA,EAAA,QAAA,cAAA,EAAA,CAAA,eAAA,6GAAA,EAAA,iBAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,ICpBvCvE,EAAA,EAAA,MAAA,CAAA,EACIN,EAAA,EAAA;KAAA,EAAAM,EAAA,EAAA,KAAA,CAAA,EACIN,EAAA,CAAA,0BAMJS,EAAA,EACAT,EAAA,EAAA;KAAA,EAAAM,EAAA,EAAA,SAAA,CAAA,EAAwCyE,EAAA,QAAA,UAAA,CAAA,OAASD,EAAAzD,YAAA2D,QAAA,CAAqB,CAAA,EAAEvE,EAAA,EAC5ET,EAAA,EAAA;CAAA,EAAAS,EAAA,EACAT,EAAA,EAAA;CAAA,EAAAM,EAAA,EAAA,MAAA,CAAA,EACIN,EAAA,GAAA;KAAA,EAAAM,EAAA,GAAA,GAAA,EACIN,EAAA,EAAA,2BAMJS,EAAA,EACAT,EAAA,GAAA;KAAA,EAAAO,EAAA,GAAA0E,GAAA,GAAA,CAAA,EAkBJxE,EAAA,EACAT,EAAA,GAAA;CAAA,EAAAM,EAAA,GAAA,MAAA,CAAA,EACIN,EAAA,GAAA;KAAA,EAAAM,EAAA,GAAA,SAAA,CAAA,EAA4EyE,EAAA,QAAA,UAAA,CAAA,OAASD,EAAAzD,YAAA2D,QAAA,CAAqB,CAAA,EAAoCvE,EAAA,EAC9IT,EAAA,GAAA;KAAA,EAAAM,EAAA,GAAA,SAAA,CAAA,EAIIyE,EAAA,QAAA,UAAA,CAAA,OAASD,EAAA1B,iBAAA,CAAkB,CAAA,EAG9B3C,EAAA,EACLT,EAAA,GAAA;CAAA,EAAAS,EAAA,EACAT,EAAA,GAAA;CAAA,SAhDQE,EAAA,CAAA,EAAAgF,EAAA;UAAAC,EAAA,EAAA,EAAAL,EAAA1C,qBAAAiB,SAAAyB,EAAA9C,2BAAAsB,OAAA,0FAAA,2FAAA,EAAA;KAAA,EAWApD,EAAA,CAAA,EAAAgF,EAAA;UAAAE,EAAA,GAAA,EAAAN,EAAA1C,qBAAAiB,SAAAyB,EAAA9C,2BAAAsB,OAAA,6FAAA,+FAAA+B,EAAA,EAAAC,GAAAR,EAAAhC,qBAAAgC,EAAA1C,oBAAA,CAAA,CAAA,EAAA;KAAA,EAOJlC,EAAA,CAAA,EAAAQ,EAAAoE,EAAA1C,qBAAAiB,SAAAyB,EAAA9C,2BAAAsB,OAAA,GAAA,EAAA,EA0BIpD,EAAA,CAAA,EAAAC,EAAA,WAAA,CAAA2E,EAAAjC,gBAAA,kBD5BM0C,GAAWC,GAAAC,EAAAC,EAAAC,GAAEC,GAAmBC,GAAAC,GAAEC,EAAoBC,CAAoB,EAAAC,cAAA,EAAAC,gBAAA,CAAA,CAAA,SAE3E9E,CAA0B,GAAA,qCGlB/B+E,EAAA,EAAA;SAAA,EAAAC,EAAA,EAAA,KAAA,EACID,EAAA,EAAA;aAAA,EAAAC,EAAA,EAAA,MAAA,CAAA,EACID,EAAA,EAAA;iBAAA,EAAAE,EAAA,EAAA,KAAA,CAAA,EACAF,EAAA,EAAA;iBAAA,EAAAC,EAAA,EAAA,SAAA,CAAA,EAAwCE,EAAA,QAAA,UAAA,CAAAC,EAAAC,CAAA,EAAA,IAAAC,EAAAC,EAAA,EAAA,OAAAC,EAASF,EAAAG,MAAA,CAAO,CAAA,CAAA,EAAEC,EAAA,EAC9DV,EAAA,EAAA;aAAA,EAAAU,EAAA,EACAV,EAAA,EAAA;aAAA,EAAAC,EAAA,GAAA,MAAA,CAAA,EACID,EAAA,GAAA;iBAAA,EAAAC,EAAA,GAAA,kCAAA,CAAA,EAA0GE,EAAA,gBAAA,SAAAQ,EAAA,CAAAP,EAAAC,CAAA,EAAA,IAAAC,EAAAC,EAAA,EAAA,OAAAC,EAAiBF,EAAAM,cAAAD,CAAA,CAAqB,CAAA,CAAA,EAAhJD,EAAA,EACJV,EAAA,GAAA;aAAA,EAAAU,EAAA,EACJV,EAAA,GAAA;SAAA,EAAAU,EAAA,EACJV,EAAA,GAAA;KAAA,oBAH6Ca,EAAA,EAAA,EAAAC,EAAA,aAAA,EAAA,EAAmB,WAAAR,EAAAS,OAAAC,QAAA,EAA8B,WAAAV,EAAAW,QAAA,GDclG,IAAaC,IAAiC,IAAA,CAAxC,MAAOA,CAAiC,CAClCC,YAAcC,EAAOC,CAAc,EACnCC,4BAA8BF,EAAOG,CAA2B,EAChEC,aAAeJ,EAAOK,CAAY,EAE1CC,cAAgB,IAAIC,EAGpBC,cAGAb,OAGAc,qBAEAC,UAAY,GACZb,SAA0Cc,OAE1CC,cAAgB,GAEhBC,YAAU,CACF,CAAC,KAAKJ,sBAAwB,CAAC,KAAKd,QAAU,CAAC,KAAKa,cACpDM,EAAiB,uCAAuC,GAExD,KAAKjB,SAAW,CACZkB,KAAM,KAAKN,qBAAqBO,OAAOC,GAAG,KAAKtB,OAAOC,QAAQ,EAAEsB,OAAM,EACtEC,UAAW,KAAKV,qBAAqBO,OAAOC,GAAG,KAAKtB,OAAOC,QAAQ,EAAEwB,OAAO,UAAU,EACtFC,QAAS,KAAKZ,qBAAqBa,KAAKL,GAAG,KAAKtB,OAAOC,QAAQ,EAAEwB,OAAO,UAAU,EAClFG,SAAU,KAAKd,qBAAqBc,UAExC,KAAKX,cAAgB,GAE7B,CAEApB,cAAcK,EAAsC,CAChD,GAAM,CAAEkB,KAAAA,EAAMI,UAAAA,EAAWE,QAAAA,EAASE,SAAAA,CAAQ,EAAK1B,EAEzC2B,EAA0B,IAAIC,GAEpCD,EAAwBT,KAAOA,EAC/BS,EAAwBL,UAAYA,EACpCK,EAAwBH,QAAUA,EAClCG,EAAwBD,SAAWA,EAEnC,KAAKb,UAAY,GAEjB,KAAKR,4BACAwB,OAAO,KAAK/B,OAAOgC,GAAK,KAAKnB,cAAcmB,GAAK,KAAKlB,qBAAqBkB,GAAKH,CAAuB,EACtGI,KACGC,EAAS,IAAK,CACV,KAAKnB,UAAY,EACrB,CAAC,EACDoB,EAAU,KAAKxB,aAAa,CAAC,EAEhCyB,UAAU,CACPC,KAAMA,IAAK,CACP,KAAKjC,YAAYkC,MAAK,CAC1B,EACAC,MAAQC,IAA0B,CAC9B,KAAKC,QAAQD,EAAG,EAChB,KAAK9C,MAAK,CACd,EACH,CACT,CAEA+C,QAAQC,EAAoC,CACxC,IAAMH,EAAQG,EAAkBH,MAC5BA,GAASA,EAAMI,UAAYJ,EAAMI,WAAa,6BAC9C,KAAKlC,aAAa8B,MAAMA,EAAMK,QAASL,EAAMM,MAAM,EAEnD,KAAKpC,aAAa8B,MAAM,wBAAyB,CAC7CA,MAAOG,EAAkBE,QAC5B,CAET,CAEAlD,OAAK,CACD,KAAKU,YAAY0C,QAAO,CAC5B,CAEAC,aAAW,CACP,KAAKpC,cAAc0B,KAAI,EACvB,KAAK1B,cAAcqC,SAAQ,CAC/B,4CApFS7C,EAAiC,2BAAjCA,EAAiC8C,UAAA,CAAA,CAAA,iCAAA,CAAA,EAAAC,OAAA,CAAArC,cAAA,gBAAAb,OAAA,SAAAc,qBAAA,sBAAA,EAAAqC,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,WAAA,EAAA,CAAA,EAAA,cAAA,EAAA,CAAA,eAAA,6CAAA,EAAA,aAAA,EAAA,CAAA,OAAA,SAAA,EAAA,YAAA,EAAA,OAAA,EAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,gBAAA,aAAA,WAAA,UAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,ICtB9CrE,EAAA,EAAA,kCAAA,CAAA,EACID,EAAA,EAAA;KAAA,EAAAwE,EAAA,EAAAC,GAAA,GAAA,CAAA,EAWJ/D,EAAA,EACAV,EAAA,EAAA;CAAA,SAbiCc,EAAA,YAAAyD,EAAAzC,SAAA,EAC7BjB,EAAA,CAAA,EAAA6D,EAAAH,EAAAvC,cAAA,EAAA,EAAA,kBDmBU2C,EAAoCC,EAAoBC,EAAiC,EAAAC,cAAA,EAAAC,gBAAA,CAAA,CAAA,SAE1F7D,CAAiC,GAAA,qCGnBtC8D,EAAA,EAAA;SAAA,EAAAC,EAAA,EAAA,SAAA,CAAA,EAAoGC,EAAA,QAAA,UAAA,CAAAC,EAAAC,CAAA,EAAA,IAAAC,EAAAC,EAAA,EAAA,OAAAC,EAASF,EAAAG,uBAAAH,EAAAI,oBAAA,CAA4C,CAAA,CAAA,EACrJT,EAAA,CAAA,0BAMJU,EAAA,EACJV,EAAA,EAAA;KAAA,oBARYW,EAAA,EAAAC,EAAA,KAAA,mBAAAP,EAAAI,qBAAAI,EAAA,EACJF,EAAA,EAAAG,EAAA;cAAAC,EAAA,EAAA,EAAAV,EAAAI,qBAAAO,SAAAX,EAAAY,2BAAAC,UAAA,sEAAA,mEAAA,EAAA;SAAA,GDoBZ,IAAaC,IAAuC,IAAA,CAA9C,MAAOA,CAAuC,CACxCC,4BAA8BC,EAAOC,CAA2B,EAChEC,aAAeF,EAAOG,CAAQ,EAEtCC,cAAgB,IAAIC,EAEXC,OACAC,cACAnB,qBAECoB,4BAA8B,IAAIC,EAClCC,oBAAsB,IAAID,EAC1BE,wBAA0B,IAAIF,EAExCb,2BAA6BgB,EACrBC,kBAAoB,IAAIR,EAChCS,aAAe,KAAKD,kBAAkBE,aAAY,EAElDC,SAAWA,GACXC,QAAUA,GACVC,QAAUA,GAEVC,2BAA6BA,IAAK,CAC9B,KAAKpB,4BACAqB,OAAO,KAAKd,OAAOd,GAAK,KAAKe,cAAcf,GAAK,KAAKJ,qBAAqBI,EAAG,EAC7E6B,KAAKC,EAAU,KAAKlB,aAAa,CAAC,EAClCmB,UAAU,CACPC,KAAMA,IAAK,CACP,KAAKX,kBAAkBW,KAAK,EAAE,EAC9B,KAAKhB,4BAA4BiB,KAAI,CACzC,EACAC,MAAQA,GAA6B,KAAKb,kBAAkBW,KAAKE,EAAMC,OAAO,EACjF,CACT,EAEAxC,uBAAuByC,EAA6B,CAChD,IAAMC,EAAW,KAAK3B,aAAa4B,KAAKC,GAA4B,CAAEC,KAAM,KAAMC,WAAY,GAAOC,SAAU,SAAUC,UAAW,EAAK,CAAE,EAC3IN,EAASO,kBAAkBhD,qBAAuBwC,EAClDC,EAASO,kBAAkB9B,OAAS,KAAKA,OACzCuB,EAASO,kBAAkBC,gBAAkB,KAAK9B,cAAcf,GAEhE8C,EAAKT,EAASU,MAAM,EACflB,KACGmB,EAAW,IAAMC,CAAK,EACtBnB,EAAU,KAAKlB,aAAa,CAAC,EAEhCmB,UAAWgB,GAAU,CACdA,IAAW,aACX,KAAK5B,wBAAwBc,KAAI,CAEzC,CAAC,CACT,CAEAiB,sBAAsBC,EAAiB,CACnCA,EAAMC,gBAAe,EACrB,IAAMf,EAAwB,KAAK3B,aAAa4B,KAAKe,GAAmC,CAAEb,KAAM,KAAMC,WAAY,GAAOC,SAAU,SAAUC,UAAW,EAAK,CAAE,EAC/JN,EAASO,kBAAkB9B,OAAS,KAAKA,OACzCuB,EAASO,kBAAkB7B,cAAgB,KAAKA,cAChDsB,EAASO,kBAAkBhD,qBAAuB,KAAKA,qBACvDyC,EAASO,kBAAkBU,WAAU,EACrCR,EAAKT,EAASU,MAAM,EACflB,KACGmB,EAAW,IAAMC,CAAK,EACtBnB,EAAU,KAAKlB,aAAa,CAAC,EAEhCmB,UAAU,IAAK,CACZ,KAAKb,oBAAoBe,KAAI,CACjC,CAAC,CACT,CAEAsB,aAAW,CACP,KAAK3C,cAAcoB,KAAI,EACvB,KAAKpB,cAAc4C,SAAQ,EAC3B,KAAKnC,kBAAkBoC,YAAW,CACtC,4CA1ESnD,EAAuC,2BAAvCA,EAAuCoD,UAAA,CAAA,CAAA,wCAAA,CAAA,EAAAC,OAAA,CAAA7C,OAAA,SAAAC,cAAA,gBAAAnB,qBAAA,sBAAA,EAAAgE,QAAA,CAAA5C,4BAAA,8BAAAE,oBAAA,sBAAAC,wBAAA,yBAAA,EAAA0C,MAAA,GAAAC,KAAA,GAAAC,OAAA,CAAA,CAAA,EAAA,YAAA,0BAAA,EAAA,CAAA,OAAA,SAAA,EAAA,MAAA,cAAA,SAAA,OAAA,EAAA,QAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,eAAA,qBAAA,EAAA,SAAA,aAAA,EAAA,CAAA,kBAAA,GAAA,iBAAA,wEAAA,EAAA,SAAA,KAAA,YAAA,cAAA,aAAA,EAAA,CAAA,OAAA,SAAA,EAAA,MAAA,gBAAA,EAAA,QAAA,IAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,ICxBpD7E,EAAA,EAAA,MAAA,CAAA,EACID,EAAA,EAAA;KAAA,EACAA,EAAA,EAAA;KAAA,EAAAgF,EAAA,EAAAC,GAAA,EAAA,CAAA,EAWAhF,EAAA,EAAA,SAAA,CAAA,EAA+DC,EAAA,QAAA,SAAAgF,EAAA,CAAA,OAASH,EAAAhB,sBAAAmB,CAAA,CAA6B,CAAA,EACjGlF,EAAA,EAAA;SAAA,EAAAmF,EAAA,EAAA,UAAA,CAAA,EACAnF,EAAA,EAAA;SAAA,EAAAmF,EAAA,EAAA,OAAA,CAAA,EACJnF,EAAA,EAAA;KAAA,EAAAU,EAAA,EACAV,EAAA,GAAA;KAAA,EACAA,EAAA,GAAA;KAAA,EAAAC,EAAA,GAAA,SAAA,CAAA,8DAQIC,EAAA,SAAA,UAAA,CAAA,OAAU6E,EAAAvC,2BAAA,CAA4B,CAAA,EAGtCxC,EAAA,GAAA;SAAA,EAAAmF,EAAA,GAAA,UAAA,CAAA,EACJnF,EAAA,GAAA;KAAA,EAAAU,EAAA,EACJV,EAAA,GAAA;CAAA,EAAAU,EAAA,EACAV,EAAA,GAAA;CAAA,SA9BIW,EAAA,CAAA,EAAAyE,EAAAL,EAAAtE,qBAAA4E,wBAAA,GAAA,CAAA,EAWsB1E,EAAA,EAAAC,EAAA,KAAA,QAAAmE,EAAAtE,qBAAAI,EAAA,EACTF,EAAA,CAAA,EAAAC,EAAA,OAAAmE,EAAA1C,QAAA,EAQT1B,EAAA,CAAA,EAAA2E,GAAA,cAAA,GAAAC,EAAA,GAAA,GAAAR,EAAAtE,qBAAA+E,MAAA,aAAA,GAAAT,EAAApD,OAAA8D,QAAA,EAAA;MAAAF,EAAA,GAAA,GAAAR,EAAAtE,qBAAA+E,MAAA,OAAA,GAAAT,EAAApD,OAAA8D,QAAA,EAAA;MAAAF,EAAA,GAAA,GAAAR,EAAAtE,qBAAAiF,IAAA,OAAA,GAAAX,EAAApD,OAAA8D,QAAA,EAAA,EAAA,EAHA7E,EAAA,KAAA,UAAAmE,EAAAtE,qBAAAI,EAAA,EAA0C,YAAA,EAAA,EAEvB,cAAAkE,EAAA5C,YAAA,EAQVxB,EAAA,CAAA,EAAAC,EAAA,OAAAmE,EAAAxC,OAAA,kBDPHoD,EAAiBC,EAAoBC,GAAuBC,GAAiBC,CAAoB,EAAAC,cAAA,EAAAC,gBAAA,CAAA,CAAA,SAElG9E,CAAuC,GAAA,EElBpD,IAAa+E,IAAiB,IAAA,CAAxB,MAAOA,CAAiB,CAM1BC,UAAUC,EAAwB,CAC9B,OAAKA,EAIDA,EAAKC,SAAW,EACTD,EAGJA,EAAKE,MAAM,GAAG,EAAEC,MAAM,EAAG,CAAC,EAAEC,KAAK,GAAG,EAPhC,EAQf,4CAhBSN,EAAiB,kDAAjBA,EAAiBO,KAAA,EAAA,CAAA,SAAjBP,CAAiB,GAAA,2CEkBEQ,EAAA,EAAA;iCAAA,EAAAC,EAAA,EAAA,OAAA,EAAA,EACJD,EAAA,EAAA;6BAAA,0BAEIA,EAAA,EAAA;iCAAA,EAAAC,EAAA,EAAA,OAAA,EAAA,EACJD,EAAA,EAAA;6BAAA,6BAbAA,EAAA,EAAA;6BAAA,EAAAE,EAAA,EAAA,MAAA,EAAMF,EAAA,CAAA,oEAMJG,EAAA,EACFH,EAAA,EAAA;6BAAA,EAAAC,EAAA,EAAA,IAAA,EACAD,EAAA,EAAA;6BAAA,EAAAI,EAAA,EAAAC,GAAA,EAAA,CAAA,EAA8B,GAAAC,GAAA,EAAA,CAAA,EAM9BN,EAAA,EAAA,EACAC,EAAA,GAAA,IAAA,EACAD,EAAA,GAAA;6BAAA,EAAAE,EAAA,GAAA,MAAA,EACIF,EAAA,EAAA,2BAMJG,EAAA,EACJH,EAAA,GAAA;yBAAA,mBAxBUO,EAAA,CAAA,EAAAC,GAAAC,EAAA,EAAA,EAAAC,EAAAC,qBAAAD,EAAAE,cAAAC,uBAAA,KAAA,KAAAH,EAAAE,cAAAC,sBAAAC,SAAA,CAAA,EAAA,IAAAL,EAAA,EAAA,EAAAC,EAAAE,cAAAC,uBAAA,KAAA,KAAAH,EAAAE,cAAAC,sBAAAE,SAAA,EAAA,IAAAN,EAAA,EAAA,EAAAC,EAAAE,cAAAC,uBAAA,KAAA,KAAAH,EAAAE,cAAAC,sBAAAG,OAAA,CAAA,EAQNT,EAAA,CAAA,EAAAU,EAAAP,EAAAE,cAAAM,SAAA,EAAA,EAAA,EAGAX,EAAA,EAAAU,EAAAP,EAAAE,cAAAM,SAAA,GAAA,EAAA,EAGAX,EAAA,EAAAY,EAAA;gCAAAT,EAAAE,cAAAC,uBAAA,KAAA,KAAAH,EAAAE,cAAAC,sBAAAO,SAAA;6BAAA,EAGIb,EAAA,CAAA,EAAAY,EAAA;kCAAAE,EAAA,GAAA,GAAAX,EAAAE,cAAAC,sBAAAS,sBAAA,EAAA,8DAAA,6DAAAC,EAAA,GAAAC,GAAAd,EAAAE,cAAAC,sBAAAS,mBAAA,CAAA,EAAA;6BAAA,0BAQJtB,EAAA,EAAA;6BAAA,EAAAC,EAAA,EAAA,OAAA,EAAA,EACJD,EAAA,EAAA;yBAAA,6BAjCRA,EAAA,EAAA;iBAAA,EAAAE,EAAA,EAAA,MAAA,EAAA,EACIF,EAAA,EAAA;qBAAA,EACAA,EAAA,EAAA;qBAAA,EAAAE,EAAA,EAAA,IAAA,EACIF,EAAA,EAAA;yBAAA,EAAAC,EAAA,EAAA,OAAA,EAAA,EACJD,EAAA,EAAA;qBAAA,EAAAG,EAAA,EACAH,EAAA,EAAA;qBAAA,EAAAE,EAAA,EAAA,IAAA,EACIF,EAAA,GAAA;yBAAA,EAAAI,EAAA,GAAAqB,GAAA,GAAA,EAAA,EAA2C,GAAAC,GAAA,EAAA,CAAA,EA4B3CzB,EAAA,GAAA,IAAA,EACJD,EAAA,GAAA;qBAAA,EAAAG,EAAA,EACJH,EAAA,GAAA;iBAAA,EAAAG,EAAA,EACJH,EAAA,GAAA;aAAA,mBA/BYO,EAAA,EAAA,EAAAU,EAAAP,EAAAE,cAAAC,sBAAA,GAAA,EAAA,sCA+CAb,EAAA,EAAA;yBAAA,EAAAE,EAAA,EAAA,yCAAA,EAAA,EAIIyB,EAAA,0BAAA,UAAA,CAAAC,EAAAC,CAAA,EAAA,IAAAnB,EAAAoB,EAAA,CAAA,EAAA,OAAAC,EAA2BrB,EAAAsB,QAAA,CAAS,CAAA,CAAA,EAAC,8BAAA,UAAA,CAAAJ,EAAAC,CAAA,EAAA,IAAAnB,EAAAoB,EAAA,CAAA,EAAA,OAAAC,EACNrB,EAAAsB,QAAA,CAAS,CAAA,CAAA,EAAC,sBAAA,UAAA,CAAAJ,EAAAC,CAAA,EAAA,IAAAnB,EAAAoB,EAAA,CAAA,EAAA,OAAAC,EAClBrB,EAAAsB,QAAA,CAAS,CAAA,CAAA,EANpC7B,EAAA,EAQJH,EAAA,EAAA;qBAAA,mCAPQO,EAAA,EAAA0B,EAAA,uBAAAC,CAAA,EAAgC,SAAAxB,EAAAyB,MAAA,EACf,gBAAAzB,EAAAE,aAAA,sCA7DrCZ,EAAA,EAAA;SAAA,EAAAE,EAAA,EAAA,MAAA,CAAA,EACIF,EAAA,EAAA;aAAA,EAAAE,EAAA,EAAA,MAAA,CAAA,EACIF,EAAA,EAAA;iBAAA,EAAAE,EAAA,EAAA,IAAA,EAAIF,EAAA,CAAA,0BAA4GG,EAAA,EAChHH,EAAA,EAAA;iBAAA,EAAAE,EAAA,EAAA,SAAA,CAAA,EAAwCyB,EAAA,QAAA,UAAA,CAAAC,EAAAQ,CAAA,EAAA,IAAA1B,EAAAoB,EAAA,EAAA,OAAAC,EAASrB,EAAA2B,MAAA,CAAO,CAAA,CAAA,EAAElC,EAAA,EAC9DH,EAAA,GAAA;aAAA,EAAAG,EAAA,EACAH,EAAA,GAAA;aAAA,EAAAI,EAAA,GAAAkC,GAAA,GAAA,CAAA,EAuCApC,EAAA,GAAA,MAAA,CAAA,EACIF,EAAA,GAAA;iBAAA,EAAAE,EAAA,GAAA,SAAA,CAAA,EAAyEyB,EAAA,QAAA,SAAAY,EAAA,CAAAX,EAAAQ,CAAA,EAAA,IAAA1B,EAAAoB,EAAA,EAAA,OAAAC,EAASrB,EAAA8B,wBAAAD,CAAA,CAA+B,CAAA,CAAA,EAC7GvC,EAAA,GAAA;qBAAA,EAAAC,EAAA,GAAA,UAAA,CAAA,EACAD,EAAA,GAAA;qBAAA,EAAAC,EAAA,GAAA,OAAA,CAAA,EACJD,EAAA,GAAA;iBAAA,EAAAG,EAAA,EACJH,EAAA,GAAA;aAAA,EAAAG,EAAA,EACAH,EAAA,GAAA;aAAA,EAAAE,EAAA,GAAA,MAAA,CAAA,EACIF,EAAA,GAAA;iBAAA,EAAAE,EAAA,GAAA,oCAAA,CAAA,EAKIyB,EAAA,oBAAA,UAAA,CAAAC,EAAAQ,CAAA,EAAA,IAAA1B,EAAAoB,EAAA,EAAA,OAAAC,EAAArB,EAAA+B,kBAAyC,EAAI,CAAA,CAAA,EAE7CzC,EAAA,GAAA;qBAAA,EAAAI,EAAA,GAAAsC,GAAA,EAAA,EAAA,aAAA,EAUJ1C,EAAA,GAAA;iBAAA,EAAAG,EAAA,EACJH,EAAA,GAAA;aAAA,EAAAG,EAAA,EACJH,EAAA,GAAA;SAAA,EAAAG,EAAA,EACJH,EAAA,GAAA;KAAA,oBArEgBO,EAAA,CAAA,EAAAoC,GAAA,GAAAlC,EAAA,EAAA,EAAA,uDAAA,EAAA,MAAAC,EAAAE,cAAAgC,MAAA,EAAA,EAGRrC,EAAA,CAAA,EAAAU,EAAAP,EAAAE,cAAAC,sBAAA,GAAA,EAAA,EAyCiBN,EAAA,CAAA,EAAA0B,EAAA,OAAAvB,EAAAmC,MAAA,EAMTtC,EAAA,CAAA,EAAA0B,EAAA,WAAAvB,EAAAoC,QAAA,EAAqB,WAAApC,EAAAyB,OAAAY,QAAA,EACO,eAAA,EAAA,EACP,gBAAArC,EAAAE,aAAA,GDhBzC,IAAaoC,IAAwC,IAAA,CAA/C,MAAOA,CAAwC,CACzCC,qBAAuBC,EAAOC,CAAqB,EACnDC,aAAeF,EAAOG,CAAY,EAClCC,aAAeJ,EAAOK,CAAQ,EAC9BC,YAAcN,EAAOO,CAAc,EACnCC,IAAMR,EAAOS,CAAiB,EAEtCC,cAAgB,IAAIC,EAEpBC,UAAY,GAEZjB,OAASA,GAGTkB,gBAEA5B,OACAvB,cACAkC,SAAmC,CAAA,EACnCjC,sBACA4B,kBAAoB,GAEpBuB,cAAgB,GAEhBC,YAAU,CACF,CAAC,KAAKF,iBAAmB,CAAC,KAAK5B,OAC/B+B,EAAiB,uCAAuC,GAExD,KAAKF,cAAgB,GACrB,KAAKhC,QAAO,EAEpB,CAEArB,qBAAuBA,GACvBqB,SAAO,CACH,YAAK8B,UAAY,GACV,KAAKb,qBACPkB,eAAe,KAAKhC,OAAOiC,GAAK,KAAKL,eAAe,EACpDM,KACGC,EAAS,IAAO,KAAKR,UAAY,EAAM,EACvCS,GAAKC,GACMA,EAAIC,IACd,EACDC,EAAU,KAAKd,aAAa,CAAC,EAEhCe,UAAU,CACPC,KAAOhE,GAAiB,CAChBA,IACA,KAAKA,cAAgBA,EACjBA,EAAciE,wBACd,KAAK/B,SAAWlC,EAAciE,uBAE9BjE,EAAcC,wBACd,KAAKA,sBAAwBD,EAAcC,uBAGvD,EACAiE,MAAQN,GAA2BO,EAAQ,KAAK3B,aAAcoB,CAAG,EACpE,EACAQ,IAAI,IAAM,KAAKtB,IAAIuB,cAAa,CAAE,CAC3C,CAEAzC,wBAAwB0C,EAAiB,CACrCA,EAAMC,gBAAe,EACrB,IAAMC,EAAwB,KAAK9B,aAAa+B,KAAKC,GAAqC,CAAEC,KAAM,KAAMC,WAAY,GAAOC,SAAU,SAAUC,UAAW,EAAK,CAAE,EACjKN,EAASO,kBAAkBxD,OAAS,KAAKA,OACzCiD,EAASO,kBAAkB/E,cAAgB,KAAKA,cAChDwE,EAASO,kBAAkB1B,WAAU,EACrC2B,EAAKR,EAASS,MAAM,EACfxB,KACGyB,EAAW,IAAMC,CAAK,EACtBrB,EAAU,KAAKd,aAAa,CAAC,EAEhCe,UAAU,IAAK,CACZ,KAAK3C,QAAO,CAChB,CAAC,CACT,CAEAK,OAAK,CACG,KAAKI,kBACL,KAAKe,YAAYwC,MAAK,EAEtB,KAAKxC,YAAYyC,QAAO,CAEhC,CAEAC,aAAW,CACP,KAAKtC,cAAcgB,KAAI,EACvB,KAAKhB,cAAcuC,SAAQ,CAC/B,4CAzFSnD,EAAwC,2BAAxCA,EAAwCoD,UAAA,CAAA,CAAA,wBAAA,CAAA,EAAAC,OAAA,CAAAtC,gBAAA,kBAAA5B,OAAA,QAAA,EAAAmE,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,WAAA,EAAA,CAAA,EAAA,MAAA,mCAAA,EAAA,CAAA,EAAA,SAAA,cAAA,EAAA,CAAA,OAAA,SAAA,EAAA,YAAA,EAAA,OAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,OAAA,SAAA,KAAA,wBAAA,EAAA,MAAA,cAAA,EAAA,OAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,eAAA,qEAAA,EAAA,CAAA,EAAA,YAAA,yBAAA,SAAA,mBAAA,MAAA,YAAA,EAAA,CAAA,EAAA,oBAAA,WAAA,WAAA,eAAA,eAAA,EAAA,CAAA,EAAA,YAAA,EAAA,CAAA,eAAA,4CAAA,EAAA,CAAA,eAAA,yDAAA,EAAA,CAAA,eAAA,0DAAA,EAAA,CAAA,eAAA,qDAAA,EAAA,CAAA,EAAA,0BAAA,8BAAA,sBAAA,uBAAA,SAAA,eAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,ICxCrDxG,EAAA,EAAA,kCAAA,CAAA,EACIF,EAAA,EAAA;KAAA,EAAAI,EAAA,EAAAwG,GAAA,GAAA,EAAA,EAyEJzG,EAAA,EACAH,EAAA,EAAA;CAAA,SA3EiCiC,EAAA,YAAA0E,EAAA7C,SAAA,EAC7BvD,EAAA,CAAA,EAAAU,EAAA0F,EAAA3C,eAAA2C,EAAA/F,cAAA,EAAA,EAAA,kBD8BIiG,EACAC,EACAC,EACAC,GACAC,GACAC,EACAC,EAAiB,EAAAC,OAAA,CAAA;CAAA,EAAAC,cAAA,EAAAC,gBAAA,CAAA,CAAA,SAGZtE,CAAwC,GAAA,uGGpCzCuE,EAAA,EAAA;aAAA,EAAAC,EAAA,EAAA,SAAA,CAAA,EAA4DC,EAAA,QAAA,SAAAC,EAAA,CAAAC,EAAAC,CAAA,EAAA,IAAAC,EAAAC,EAAA,CAAA,EAAA,OAAAC,EAASF,EAAAG,kBAAAN,CAAA,CAAyB,CAAA,CAAA,EAC1FH,EAAA,EAAA;iBAAA,EAAAU,EAAA,EAAA,UAAA,CAAA,EACAV,EAAA,EAAA;iBAAA,EAAAU,EAAA,EAAA,OAAA,CAAA,EACJV,EAAA,EAAA;aAAA,EAAAW,EAAA,EACJX,EAAA,EAAA;SAAA,qBAJ0BY,EAAA,EAAAC,EAAA,KAAA,YAAAP,EAAAQ,cAAAC,EAAA,EACTH,EAAA,CAAA,EAAAC,EAAA,OAAAP,EAAAU,UAAA,sCAMbhB,EAAA,EAAA;aAAA,EAAAC,EAAA,EAAA,SAAA,CAAA,EAAuFC,EAAA,QAAA,SAAAC,EAAA,CAAAC,EAAAa,CAAA,EAAA,IAAAX,EAAAC,EAAA,CAAA,EAAA,OAAAC,EAASF,EAAAY,uBAAAf,CAAA,CAA8B,CAAA,CAAA,EAC1HH,EAAA,EAAA;iBAAA,EAAAU,EAAA,EAAA,UAAA,CAAA,EACAV,EAAA,EAAA;iBAAA,EAAAU,EAAA,EAAA,OAAA,CAAA,EACJV,EAAA,EAAA;aAAA,EAAAW,EAAA,EACJX,EAAA,EAAA;SAAA,qBAJYY,EAAA,EAAAC,EAAA,KAAA,iBAAAP,EAAAQ,cAAAC,EAAA,EACKH,EAAA,CAAA,EAAAC,EAAA,OAAAP,EAAAa,OAAA,6BAMbnB,EAAA,EAAA;aAAA,EAAAC,EAAA,EAAA,IAAA,CAAA,EACID,EAAA,EAAA;iBAAA,EAAAU,EAAA,EAAA,UAAA,CAAA,EACAV,EAAA,EAAA;iBAAA,EAAAU,EAAA,EAAA,OAAA,CAAA,EACJV,EAAA,EAAA;aAAA,EAAAW,EAAA,EACJX,EAAA,EAAA;SAAA,mBAJOY,EAAA,EAAAC,EAAA,KAAA,QAAAP,EAAAQ,cAAAC,EAAA,EAAiC,aAAAK,GAAA,EAAAC,GAAAf,EAAAgB,OAAAP,GAAAT,EAAAQ,cAAAC,EAAA,CAAA,EACvBH,EAAA,CAAA,EAAAC,EAAA,OAAAP,EAAAiB,QAAA,sCAMbvB,EAAA,EAAA;aAAA,EAAAC,EAAA,EAAA,SAAA,CAAA,EAMIC,EAAA,SAAA,UAAA,CAAAE,EAAAoB,CAAA,EAAA,IAAAlB,EAAAC,EAAA,CAAA,EAAA,OAAAC,EAAUF,EAAAmB,oBAAA,CAAqB,CAAA,CAAA,EAG/BzB,EAAA,EAAA;iBAAA,EAAAU,EAAA,EAAA,UAAA,CAAA,EACJV,EAAA,EAAA;aAAA,EAAAW,EAAA,EACJX,EAAA,EAAA;SAAA,qBAVQY,EAAA,EAAAC,EAAA,KAAA,UAAAP,EAAAQ,cAAAC,EAAA,EAAmC,cAAAT,EAAAQ,cAAAY,OAAA,EAAA,EAEM,cAAApB,EAAAqB,YAAA,EAMhCf,EAAA,CAAA,EAAAC,EAAA,OAAAP,EAAAsB,OAAA,6BAjCrB5B,EAAA,EAAA;KAAA,EAAAC,EAAA,EAAA,MAAA,CAAA,EACID,EAAA,EAAA;SAAA,EACAA,EAAA,EAAA;SAAA,EAAA6B,EAAA,EAAAC,GAAA,EAAA,CAAA,EAAwD,EAAAC,GAAA,EAAA,CAAA,EAOA,EAAAC,GAAA,EAAA,CAAA,EAO7B,EAAAC,GAAA,EAAA,CAAA,EAoB/BtB,EAAA,EACJX,EAAA,EAAA;CAAA,kBAnCQY,EAAA,CAAA,EAAAsB,EAAA5B,EAAA6B,qBAAA7B,EAAAQ,cAAAsB,YAAA,EAAA,EAAA,EAOAxB,EAAA,EAAAsB,EAAA5B,EAAA6B,qBAAA7B,EAAAQ,cAAAsB,YAAA,EAAA,EAAA,EAOAxB,EAAA,EAAAsB,EAAA5B,EAAA6B,oBAAA,EAAA,EAAA,EAOAvB,EAAA,EAAAsB,EAAA5B,EAAA6B,oBAAA,EAAA,EAAA,GDFR,IAAaE,IAAgC,IAAA,CAAvC,MAAOA,CAAgC,CACjCC,sBAAwBC,EAAOC,CAAqB,EACpDC,aAAeF,EAAOG,CAAQ,EAEtCC,cAAgB,IAAIC,EAEXT,oBAAsB,GACtBb,OACAR,cAEC+B,qBAAuB,IAAIC,EAC3BC,qBAAuB,IAAID,EAC3BE,kBAAoB,IAAIF,EAE1BG,kBAAoB,IAAIL,EAChCjB,aAAe,KAAKsB,kBAAkBC,aAAY,EAElD3B,SAAWA,GACXJ,QAAUA,GACVS,QAAUA,GACVZ,WAAamC,GAEbC,aAAA,CAAsB,CAEtB3C,kBAAkB4C,EAAiB,CAC/BA,EAAMC,gBAAe,EACrB,IAAMC,EAAwB,KAAKd,aAAae,KAAKC,GAA0C,CAC3FC,WAAY,GACZC,SAAU,SACVC,UAAW,GACXC,YAAa,4BAChB,EACDN,EAASO,kBAAkBxC,OAAS,KAAKA,OACzCiC,EAASO,kBAAkBC,gBAAkB,KAAKjD,cAAcC,GAChEwC,EAASO,kBAAkBE,WAAU,EACrCC,EAAKV,EAASW,MAAM,EACfC,KACGC,EAAW,IAAMC,CAAK,EACtBC,EAAU,KAAK3B,aAAa,CAAC,EAEhC4B,UAAU,IAAK,CACZ,KAAKvB,kBAAkBwB,KAAI,CAC/B,CAAC,CACT,CAEAtD,uBAAuBmC,EAAiB,CACpCA,EAAMC,gBAAe,EACrB,IAAMC,EAAwB,KAAKd,aAAae,KAAKiB,GAA6B,CAAEC,KAAM,KAAMhB,WAAY,GAAOC,SAAU,SAAUC,UAAW,EAAK,CAAE,EACzJL,EAASO,kBAAkBxC,OAAS,KAAKA,OACzCiC,EAASO,kBAAkBC,gBAAkB,KAAKjD,cAAcC,GAChEwC,EAASO,kBAAkBE,WAAU,EACrCC,EAAKV,EAASW,MAAM,EACfC,KACGC,EAAW,IAAMC,CAAK,EACtBC,EAAU,KAAK3B,aAAa,CAAC,EAEhC4B,UAAU,IAAK,CACZ,KAAKxB,qBAAqByB,KAAI,CAClC,CAAC,CACT,CAEA/C,oBAAsBA,IAAK,CACvB,KAAKa,sBACAqC,OAAO,KAAKrD,OAAOP,GAAK,KAAKD,cAAcC,EAAG,EAC9CoD,KAAKG,EAAU,KAAK3B,aAAa,CAAC,EAClC4B,UAAU,CACPK,KAAMA,IAAK,CACP,KAAK3B,kBAAkB2B,KAAK,EAAE,EAC9B,KAAK/B,qBAAqB2B,KAAI,CAClC,EACAK,MAAQA,GAA6B,KAAK5B,kBAAkB2B,KAAKC,EAAMC,OAAO,EACjF,CACT,EAEAC,aAAW,CACP,KAAKpC,cAAciC,KAAI,EACvB,KAAKjC,cAAcqC,SAAQ,EAC3B,KAAK/B,kBAAkBgC,YAAW,CACtC,4CA9ES5C,EAAgC,2BAAhCA,EAAgC6C,UAAA,CAAA,CAAA,gCAAA,CAAA,EAAAC,OAAA,CAAAhD,oBAAA,sBAAAb,OAAA,SAAAR,cAAA,eAAA,EAAAsE,QAAA,CAAAvC,qBAAA,uBAAAE,qBAAA,uBAAAC,kBAAA,mBAAA,EAAAqC,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,YAAA,0BAAA,EAAA,CAAA,OAAA,SAAA,EAAA,MAAA,cAAA,SAAA,OAAA,EAAA,QAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,eAAA,gEAAA,EAAA,SAAA,aAAA,EAAA,CAAA,EAAA,MAAA,cAAA,SAAA,OAAA,EAAA,QAAA,IAAA,EAAA,CAAA,eAAA,4CAAA,EAAA,SAAA,aAAA,EAAA,CAAA,EAAA,MAAA,cAAA,SAAA,OAAA,EAAA,KAAA,YAAA,EAAA,CAAA,eAAA,qBAAA,EAAA,SAAA,aAAA,EAAA,CAAA,kBAAA,GAAA,iBAAA,kEAAA,yBAAA,iEAAA,EAAA,SAAA,KAAA,cAAA,aAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,GCtB7C5D,EAAA,EAAA8D,GAAA,EAAA,CAAA,OAAAzD,EAAAwD,EAAApE,QAAAoE,EAAA5E,cAAA,EAAA,EAAA,iBDoBc8E,EAAiBC,EAAoBC,GAAYC,EAAqB,EAAAC,cAAA,EAAAC,gBAAA,CAAA,CAAA,SAEvE5D,CAAgC,GAAA",
  "names": ["\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275property", "\u0275\u0275pureFunction1", "_c1", "ctx_r1", "tutorialGroup", "capacity", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275textInterpolate1", "filteredUsersSize", "\u0275\u0275template", "RegisteredStudentsComponent_Conditional_2_Conditional_15_Conditional_6_Template", "title", "\u0275\u0275conditional", "registeredStudents", "length", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "clear", "RegisteredStudentsComponent_Conditional_2_Conditional_12_Template", "loadAll", "RegisteredStudentsComponent_Conditional_2_Conditional_15_Template", "_c0", "capacityReached", "courseGroup", "isLoading", "isAdmin", "course", "userSearch", "addToGroup", "removeFromGroup", "exportFilename", "handleUsersSizeChange", "RegisteredStudentsComponent", "activeModal", "inject", "NgbActiveModal", "tutorialGroupService", "TutorialGroupsService", "alertService", "AlertService", "courseService", "CourseManagementService", "cdr", "ChangeDetectorRef", "tutorialGroupId", "numberOfRegistrations", "registrationsChanged", "isInitialized", "ngUnsubscribe", "Subject", "undefined", "ngOnDestroy", "next", "complete", "initialize", "captureException", "login", "registerStudent", "id", "pipe", "tap", "deregisterStudent", "loginOrName", "searchStudents", "getOneOfCourse", "finalize", "takeUntil", "subscribe", "tutorialGroupResult", "body", "registrations", "map", "registration", "student", "error", "res", "onError", "add", "detectChanges", "close", "dismiss", "selectors", "inputs", "decls", "vars", "consts", "template", "rf", "ctx", "RegisteredStudentsComponent_Conditional_2_Template", "LoadingIndicatorContainerComponent", "TranslateDirective", "CourseGroupComponent", "encapsulation", "changeDetection", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275elementStart", "\u0275\u0275template", "TutorialGroupSessionFormComponent_Conditional_9_Conditional_22_Conditional_3_Template", "TutorialGroupSessionFormComponent_Conditional_9_Conditional_22_Conditional_4_Template", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275conditional", "ctx_r1", "dateControl", "errors", "required", "owlDateTimeParse", "TutorialGroupSessionFormComponent_Conditional_9_Conditional_50_Conditional_3_Template", "startTimeControl", "TutorialGroupSessionFormComponent_Conditional_9_Conditional_51_Conditional_3_Template", "endTimeControl", "TutorialGroupSessionFormComponent_Conditional_9_Conditional_52_Conditional_3_Template", "form", "invalidTimeRange", "\u0275\u0275property", "\u0275\u0275pureFunction0", "_c2", "TutorialGroupSessionFormComponent_Conditional_9_Conditional_62_Conditional_3_Template", "TutorialGroupSessionFormComponent_Conditional_9_Conditional_62_Conditional_4_Template", "locationControl", "maxlength", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "submitForm", "markDateAsTouched", "TutorialGroupSessionFormComponent_Conditional_9_Conditional_22_Template", "TutorialGroupSessionFormComponent_Conditional_9_Conditional_50_Template", "TutorialGroupSessionFormComponent_Conditional_9_Conditional_51_Template", "TutorialGroupSessionFormComponent_Conditional_9_Conditional_52_Template", "TutorialGroupSessionFormComponent_Conditional_9_Conditional_62_Template", "date_r3", "\u0275\u0275classProp", "isDateInvalid", "\u0275\u0275pipeBindV", "\u0275\u0275pureFunction1", "_c1", "value", "faCalendarAlt", "invalid", "dirty", "touched", "\u0275\u0275pipeBind1", "isSubmitPossible", "\u0275\u0275propertyInterpolate", "isEditMode", "TutorialGroupSessionFormComponent", "fb", "inject", "FormBuilder", "formData", "date", "undefined", "startTime", "endTime", "location", "timeZone", "formSubmitted", "EventEmitter", "markAsTouched", "get", "ngOnInit", "initializeForm", "ngOnChanges", "setFormValues", "tutorialGroupSessionFormData", "__spreadValues", "emit", "patchValue", "group", "Validators", "validators", "validTimeRange", "selectors", "inputs", "outputs", "features", "\u0275\u0275ProvidersFeature", "provide", "NgbTimeAdapter", "useClass", "NgbTimeStringAdapter", "\u0275\u0275NgOnChangesFeature", "decls", "vars", "consts", "template", "rf", "ctx", "TutorialGroupSessionFormComponent_Conditional_9_Template", "_c0", "TranslateDirective", "FormsModule", "\u0275NgNoValidate", "DefaultValueAccessor", "NgControlStatus", "NgControlStatusGroup", "ReactiveFormsModule", "FormGroupDirective", "FormControlName", "OwlDateTimeModule", "OwlDateTimeTriggerDirective", "OwlDateTimeInputDirective", "OwlDateTimeComponent", "FaIconComponent", "NgbTimepicker", "ArtemisDatePipe", "ArtemisTranslatePipe", "encapsulation", "changeDetection", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "clear", "\u0275\u0275elementEnd", "$event", "createTutorialGroupSession", "\u0275\u0275advance", "\u0275\u0275property", "course", "timeZone", "CreateTutorialGroupSessionComponent", "activeModal", "inject", "NgbActiveModal", "tutorialGroupSessionService", "TutorialGroupSessionService", "alertService", "AlertService", "ngUnsubscribe", "Subject", "tutorialGroupSessionToCreate", "TutorialGroupSessionDTO", "isLoading", "tutorialGroup", "isInitialized", "initialize", "captureException", "formData", "date", "startTime", "endTime", "location", "create", "id", "pipe", "finalize", "takeUntil", "subscribe", "next", "close", "error", "res", "onError", "httpErrorResponse", "errorKey", "message", "params", "dismiss", "ngOnDestroy", "complete", "selectors", "inputs", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275template", "CreateTutorialGroupSessionComponent_Conditional_2_Template", "\u0275\u0275conditional", "LoadingIndicatorContainerComponent", "TranslateDirective", "TutorialGroupSessionFormComponent", "encapsulation", "changeDetection", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275property", "\u0275\u0275pureFunction0", "_c1", "\u0275\u0275elementStart", "\u0275\u0275template", "CancellationModalComponent_Conditional_15_Conditional_9_Conditional_3_Template", "\u0275\u0275elementEnd", "\u0275\u0275conditional", "ctx_r0", "reasonControl", "errors", "maxlength", "CancellationModalComponent_Conditional_15_Conditional_9_Template", "form", "invalid", "dirty", "touched", "CancellationModalComponent", "activeModal", "inject", "NgbActiveModal", "tutorialGroupSessionService", "TutorialGroupSessionService", "alertService", "AlertService", "fb", "FormBuilder", "ngUnsubscribe", "Subject", "tutorialGroupSessionStatus", "TutorialGroupSessionStatus", "course", "tutorialGroupId", "tutorialGroupSession", "ngOnInit", "initializeForm", "get", "group", "reason", "undefined", "Validators", "maxLength", "isSubmitPossible", "generateSessionLabel", "start", "end", "tz", "timeZone", "format", "cancelOrActivate", "status", "ACTIVE", "cancelSession", "activateSession", "cancel", "id", "value", "pipe", "takeUntil", "subscribe", "next", "close", "error", "res", "onError", "activate", "ngOnDestroy", "complete", "selectors", "inputs", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275listener", "dismiss", "CancellationModalComponent_Conditional_15_Template", "\u0275\u0275textInterpolate1", "\u0275\u0275pipeBind1", "\u0275\u0275pipeBind2", "\u0275\u0275pureFunction1", "_c0", "FormsModule", "\u0275NgNoValidate", "DefaultValueAccessor", "NgControlStatus", "NgControlStatusGroup", "ReactiveFormsModule", "FormGroupDirective", "FormControlName", "TranslateDirective", "ArtemisTranslatePipe", "encapsulation", "changeDetection", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "clear", "\u0275\u0275elementEnd", "$event", "updateSession", "\u0275\u0275advance", "\u0275\u0275property", "course", "timeZone", "formData", "EditTutorialGroupSessionComponent", "activeModal", "inject", "NgbActiveModal", "tutorialGroupSessionService", "TutorialGroupSessionService", "alertService", "AlertService", "ngUnsubscribe", "Subject", "tutorialGroup", "tutorialGroupSession", "isLoading", "undefined", "isInitialized", "initialize", "captureException", "date", "start", "tz", "toDate", "startTime", "format", "endTime", "end", "location", "tutorialGroupSessionDTO", "TutorialGroupSessionDTO", "update", "id", "pipe", "finalize", "takeUntil", "subscribe", "next", "close", "error", "res", "onError", "httpErrorResponse", "errorKey", "message", "params", "dismiss", "ngOnDestroy", "complete", "selectors", "inputs", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275template", "EditTutorialGroupSessionComponent_Conditional_2_Template", "\u0275\u0275conditional", "LoadingIndicatorContainerComponent", "TranslateDirective", "TutorialGroupSessionFormComponent", "encapsulation", "changeDetection", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "openCancellationDialog", "tutorialGroupSession", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "id", "\u0275\u0275textInterpolate1", "\u0275\u0275pipeBind1", "status", "tutorialGroupSessionStatus", "CANCELLED", "TutorialGroupSessionRowButtonsComponent", "tutorialGroupSessionService", "inject", "TutorialGroupSessionService", "modalService", "NgbModal", "ngUnsubscribe", "Subject", "course", "tutorialGroup", "tutorialGroupSessionDeleted", "EventEmitter", "tutorialGroupEdited", "cancelOrActivatePressed", "TutorialGroupSessionStatus", "dialogErrorSource", "dialogError$", "asObservable", "faWrench", "faUsers", "faTrash", "deleteTutorialGroupSession", "delete", "pipe", "takeUntil", "subscribe", "next", "emit", "error", "message", "session", "modalRef", "open", "CancellationModalComponent", "size", "scrollable", "backdrop", "animation", "componentInstance", "tutorialGroupId", "from", "result", "catchError", "EMPTY", "openEditSessionDialog", "event", "stopPropagation", "EditTutorialGroupSessionComponent", "initialize", "ngOnDestroy", "complete", "unsubscribe", "selectors", "inputs", "outputs", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275template", "TutorialGroupSessionRowButtonsComponent_Conditional_3_Template", "$event", "\u0275\u0275element", "\u0275\u0275conditional", "tutorialGroupFreePeriod", "\u0275\u0275propertyInterpolate3", "\u0275\u0275pipeBind4", "start", "timeZone", "end", "FaIconComponent", "TranslateDirective", "DeleteButtonDirective", "ArtemisDatePipe", "ArtemisTranslatePipe", "encapsulation", "changeDetection", "RemoveSecondsPipe", "transform", "time", "length", "split", "slice", "join", "pure", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275template", "TutorialGroupSessionsManagementComponent_Conditional_2_Conditional_12_Conditional_11_Conditional_9_Template", "TutorialGroupSessionsManagementComponent_Conditional_2_Conditional_12_Conditional_11_Conditional_10_Template", "\u0275\u0275advance", "\u0275\u0275textInterpolate", "\u0275\u0275pipeBind1", "ctx_r1", "getDayTranslationKey", "tutorialGroup", "tutorialGroupSchedule", "dayOfWeek", "startTime", "endTime", "\u0275\u0275conditional", "isOnline", "\u0275\u0275textInterpolate1", "location", "\u0275\u0275pipeBind2", "repetitionFrequency", "\u0275\u0275pureFunction1", "_c0", "TutorialGroupSessionsManagementComponent_Conditional_2_Conditional_12_Conditional_11_Template", "TutorialGroupSessionsManagementComponent_Conditional_2_Conditional_12_Conditional_12_Template", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r3", "\u0275\u0275nextContext", "\u0275\u0275resetView", "loadAll", "\u0275\u0275property", "session_r4", "course", "_r1", "clear", "TutorialGroupSessionsManagementComponent_Conditional_2_Conditional_12_Template", "$event", "openCreateSessionDialog", "attendanceUpdated", "TutorialGroupSessionsManagementComponent_Conditional_2_ng_template_27_Template", "\u0275\u0275textInterpolate2", "title", "faPlus", "sessions", "timeZone", "TutorialGroupSessionsManagementComponent", "tutorialGroupService", "inject", "TutorialGroupsService", "alertService", "AlertService", "modalService", "NgbModal", "activeModal", "NgbActiveModal", "cdr", "ChangeDetectorRef", "ngUnsubscribe", "Subject", "isLoading", "tutorialGroupId", "isInitialized", "initialize", "captureException", "getOneOfCourse", "id", "pipe", "finalize", "map", "res", "body", "takeUntil", "subscribe", "next", "tutorialGroupSessions", "error", "onError", "add", "detectChanges", "event", "stopPropagation", "modalRef", "open", "CreateTutorialGroupSessionComponent", "size", "scrollable", "backdrop", "animation", "componentInstance", "from", "result", "catchError", "EMPTY", "close", "dismiss", "ngOnDestroy", "complete", "selectors", "inputs", "decls", "vars", "consts", "template", "rf", "ctx", "TutorialGroupSessionsManagementComponent_Conditional_2_Template", "LoadingIndicatorContainerComponent", "TranslateDirective", "FaIconComponent", "TutorialGroupSessionsTableComponent", "TutorialGroupSessionRowButtonsComponent", "ArtemisTranslatePipe", "RemoveSecondsPipe", "styles", "encapsulation", "changeDetection", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275listener", "$event", "\u0275\u0275restoreView", "_r1", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "openSessionDialog", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "tutorialGroup", "id", "faCalendar", "_r3", "openRegistrationDialog", "faUsers", "\u0275\u0275pureFunction2", "_c0", "course", "faWrench", "_r4", "deleteTutorialGroup", "title", "dialogError$", "faTrash", "\u0275\u0275template", "TutorialGroupRowButtonsComponent_Conditional_0_Conditional_4_Template", "TutorialGroupRowButtonsComponent_Conditional_0_Conditional_5_Template", "TutorialGroupRowButtonsComponent_Conditional_0_Conditional_6_Template", "TutorialGroupRowButtonsComponent_Conditional_0_Conditional_7_Template", "\u0275\u0275conditional", "isAtLeastInstructor", "isUserTutor", "TutorialGroupRowButtonsComponent", "tutorialGroupsService", "inject", "TutorialGroupsService", "modalService", "NgbModal", "ngUnsubscribe", "Subject", "tutorialGroupDeleted", "EventEmitter", "registrationsChanged", "attendanceUpdated", "dialogErrorSource", "asObservable", "faCalendarAlt", "constructor", "event", "stopPropagation", "modalRef", "open", "TutorialGroupSessionsManagementComponent", "scrollable", "backdrop", "animation", "windowClass", "componentInstance", "tutorialGroupId", "initialize", "from", "result", "pipe", "catchError", "EMPTY", "takeUntil", "subscribe", "emit", "RegisteredStudentsComponent", "size", "delete", "next", "error", "message", "ngOnDestroy", "complete", "unsubscribe", "selectors", "inputs", "outputs", "decls", "vars", "consts", "template", "rf", "ctx", "TutorialGroupRowButtonsComponent_Conditional_0_Template", "FaIconComponent", "TranslateDirective", "RouterLink", "DeleteButtonDirective", "encapsulation", "changeDetection"]
}
