{
  "version": 3,
  "sources": ["src/main/webapp/app/exercises/quiz/manage/statistics/short-answer-question-statistic/short-answer-question-statistic.component.ts", "src/main/webapp/app/exercises/quiz/manage/statistics/short-answer-question-statistic/short-answer-question-statistic.component.html"],
  "sourcesContent": ["import { Component, inject } from '@angular/core';\r\nimport { QuizStatisticUtil } from 'app/exercises/quiz/shared/quiz-statistic-util.service';\r\nimport { ShortAnswerQuestionUtil } from 'app/exercises/quiz/shared/short-answer-question-util.service';\r\nimport { ArtemisMarkdownService } from 'app/shared/markdown.service';\r\nimport { ShortAnswerQuestion } from 'app/entities/quiz/short-answer-question.model';\r\nimport { ShortAnswerQuestionStatistic } from 'app/entities/quiz/short-answer-question-statistic.model';\r\nimport { ShortAnswerSolution } from 'app/entities/quiz/short-answer-solution.model';\r\nimport { QuizExercise } from 'app/entities/quiz/quiz-exercise.model';\r\nimport { QuestionStatisticComponent, blueColor, greenColor } from 'app/exercises/quiz/manage/statistics/question-statistic.component';\r\nimport { faCheckCircle, faSync, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { BarChartModule } from '@swimlane/ngx-charts';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { QuizStatisticsFooterComponent } from '../quiz-statistics-footer/quiz-statistics-footer.component';\r\n\r\n@Component({\r\n    selector: 'jhi-short-answer-question-statistic',\r\n    templateUrl: './short-answer-question-statistic.component.html',\r\n    providers: [QuizStatisticUtil, ShortAnswerQuestionUtil],\r\n    styleUrls: [\r\n        '../../../../../shared/chart/vertical-bar-chart.scss',\r\n        '../quiz-point-statistic/quiz-point-statistic.component.scss',\r\n        './short-answer-question-statistic.component.scss',\r\n    ],\r\n    imports: [TranslateDirective, BarChartModule, FaIconComponent, QuizStatisticsFooterComponent],\r\n})\r\nexport class ShortAnswerQuestionStatisticComponent extends QuestionStatisticComponent {\r\n    shortAnswerQuestionUtil = inject(ShortAnswerQuestionUtil);\r\n    private artemisMarkdown = inject(ArtemisMarkdownService);\r\n\r\n    declare question: ShortAnswerQuestion;\r\n\r\n    textParts: string[][];\r\n    lettersForSolutions: number[] = [];\r\n\r\n    sampleSolutions: ShortAnswerSolution[] = [];\r\n\r\n    // Icons\r\n    faSync = faSync;\r\n    faCheckCircle = faCheckCircle;\r\n    faTimesCircle = faTimesCircle;\r\n\r\n    loadQuiz(quiz: QuizExercise, refresh: boolean) {\r\n        const updatedQuestion = super.loadQuizCommon(quiz);\r\n        if (!updatedQuestion) {\r\n            return;\r\n        }\r\n\r\n        // load Layout only at the opening (not if the websocket refreshed the data)\r\n        if (!refresh) {\r\n            this.questionTextRendered = this.artemisMarkdown.safeHtmlForMarkdown(this.question.text);\r\n            this.generateShortAnswerStructure();\r\n            this.generateLettersForSolutions();\r\n            this.loadLayout();\r\n        }\r\n        this.loadData();\r\n        this.sampleSolutions = this.shortAnswerQuestionUtil.getSampleSolutions(this.question);\r\n    }\r\n\r\n    generateShortAnswerStructure() {\r\n        const textParts = this.shortAnswerQuestionUtil.divideQuestionTextIntoTextParts(this.question.text!);\r\n        this.textParts = this.shortAnswerQuestionUtil.transformTextPartsIntoHTML(textParts);\r\n    }\r\n\r\n    generateLettersForSolutions() {\r\n        for (const mapping of this.question.correctMappings || []) {\r\n            for (const i in this.question.spots) {\r\n                if (mapping.spot?.id === this.question.spots[+i].id) {\r\n                    this.lettersForSolutions.push(+i);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    getSampleSolutionForSpot(spotTag: string): ShortAnswerSolution {\r\n        const index = this.question.spots!.findIndex((spot) => spot.spotNr === this.shortAnswerQuestionUtil.getSpotNr(spotTag));\r\n        return this.sampleSolutions[index];\r\n    }\r\n\r\n    /**\r\n     * build the Chart-Layout based on the Json-entity (questionStatistic)\r\n     */\r\n    loadLayout() {\r\n        this.resetLabelsColors();\r\n\r\n        // set label and background color based on the spots\r\n        this.question.spots!.forEach((_spot, i) => {\r\n            this.labels.push(this.getLetter(i) + '.');\r\n            this.solutionLabels.push(this.getLetter(i) + '.');\r\n            this.backgroundColors.push(blueColor);\r\n            this.backgroundSolutionColors.push(greenColor);\r\n        });\r\n\r\n        this.addLastBarLayout(this.question.spots!.length);\r\n        this.loadInvalidLayout(this.question.spots!);\r\n    }\r\n\r\n    /**\r\n     * load the Data from the Json-entity to the chart: myChart\r\n     */\r\n    loadData() {\r\n        this.resetData();\r\n\r\n        // set data based on the spots for each spot\r\n        this.question.spots!.forEach((spot) => {\r\n            // eslint-disable-next-line @typescript-eslint/no-non-null-asserted-optional-chain\r\n            const spotCounter = (this.questionStatistic as ShortAnswerQuestionStatistic).shortAnswerSpotCounters?.find((sCounter) => {\r\n                return spot.id === sCounter.spot?.id;\r\n            })!;\r\n            this.addData(spotCounter.ratedCounter!, spotCounter.unRatedCounter!);\r\n        });\r\n        this.updateData();\r\n    }\r\n}\r\n", "@if (quizExercise) {\r\n    <div class=\"row\">\r\n        <div class=\"col-md-8 offset-md-2 text-center\">\r\n            <h3>{{ quizExercise.title }}</h3>\r\n            <div class=\"row\">\r\n                @if (question) {\r\n                    <div class=\"col\">\r\n                        <h3>\r\n                            {{ question.title }}\r\n                            @if (question.invalid) {\r\n                                <span class=\"invalid-question\" jhiTranslate=\"artemisApp.showStatistic.invalid\"></span>\r\n                            }\r\n                        </h3>\r\n                        <div class=\"short-answer-question-display-statistic\">\r\n                            @for (textPart of textParts; track textPart) {\r\n                                <div class=\"short-answer-question-display\">\r\n                                    @for (element of textPart; track element) {\r\n                                        <div class=\"short-answer-question-display__statistic-element\">\r\n                                            @if (!shortAnswerQuestionUtil.isInputField(element)) {\r\n                                                <div [innerHTML]=\"element\"></div>\r\n                                            }\r\n                                            @if (shortAnswerQuestionUtil.isInputField(element) && !showSolution) {\r\n                                                <div class=\"short-answer-question-container\">\r\n                                                    <input class=\"short-answer-question-container__input\" disabled />\r\n                                                    <div class=\"short-answer-question-container__statistic-letter\">\r\n                                                        <span>{{ getLetter(shortAnswerQuestionUtil.getSpotNr(element) - 1) + '.' }}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            }\r\n                                            @if (shortAnswerQuestionUtil.isInputField(element) && showSolution) {\r\n                                                <div class=\"short-answer-question-container\">\r\n                                                    <input\r\n                                                        class=\"short-answer-question-container__input\"\r\n                                                        disabled\r\n                                                        [style.background]=\"'lightgreen'\"\r\n                                                        value=\"{{ getSampleSolutionForSpot(element) !== undefined ? getSampleSolutionForSpot(element).text : '' }}\"\r\n                                                        size=\"{{ getSampleSolutionForSpot(element) !== undefined ? getSampleSolutionForSpot(element).text!.length + 4 : 5 }}\"\r\n                                                    />\r\n                                                    <div class=\"short-answer-question-container__statistic-letter-solution\">\r\n                                                        <span>{{ getLetter(shortAnswerQuestionUtil.getSpotNr(element) - 1) + '.' }}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            }\r\n                                            &nbsp;\r\n                                        </div>\r\n                                    }\r\n                                    <br />\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        <div #containerRef>\r\n                            <p>&nbsp;</p>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-7 text-start\">\r\n                                    <p id=\"text\" class=\"chart-title-text\">\r\n                                        @if (rated) {\r\n                                            <span jhiTranslate=\"artemisApp.showStatistic.questionStatistic.titleRated\"></span>\r\n                                        }\r\n                                        @if (!rated) {\r\n                                            <span jhiTranslate=\"artemisApp.showStatistic.questionStatistic.titleUnrated\"></span>\r\n                                        }\r\n                                    </p>\r\n                                </div>\r\n                                <div class=\"col-md-5 text-end\">\r\n                                    <p class=\"chart-title-text\">\r\n                                        <span>{{ participants }} </span><span jhiTranslate=\"artemisApp.showStatistic.participants\"></span>\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                            <ngx-charts-bar-vertical\r\n                                [view]=\"[containerRef.offsetWidth, 525]\"\r\n                                [results]=\"ngxData\"\r\n                                [scheme]=\"ngxColor\"\r\n                                [showDataLabel]=\"true\"\r\n                                [showXAxisLabel]=\"true\"\r\n                                [showYAxisLabel]=\"true\"\r\n                                [xAxisLabel]=\"xAxisLabel\"\r\n                                [yAxisLabel]=\"yAxisLabel\"\r\n                                [xAxis]=\"true\"\r\n                                [yAxis]=\"true\"\r\n                                [yScaleMax]=\"maxScale\"\r\n                                [tooltipDisabled]=\"true\"\r\n                                [rotateXAxisTicks]=\"false\"\r\n                                [maxXAxisTickLength]=\"17\"\r\n                                [dataLabelFormatting]=\"bindFormatting\"\r\n                                [roundEdges]=\"false\"\r\n                            />\r\n                            <div class=\"col-md-12 text-center button-row\">\r\n                                <button (click)=\"switchSolution()\" type=\"button\" class=\"btn btn-primary show-solution\">\r\n                                    @if (showSolution) {\r\n                                        <fa-icon [icon]=\"faCheckCircle\" />\r\n                                    }\r\n                                    &nbsp;\r\n                                    @if (!showSolution) {\r\n                                        <fa-icon [icon]=\"faTimesCircle\" />\r\n                                    }\r\n                                    &nbsp;\r\n                                    @if (showSolution) {\r\n                                        <span jhiTranslate=\"artemisApp.showStatistic.dragAndDropQuestionStatistic.hideSampleSolution\"></span>\r\n                                    }\r\n                                    @if (!showSolution) {\r\n                                        <span jhiTranslate=\"artemisApp.showStatistic.dragAndDropQuestionStatistic.showSampleSolution\"></span>\r\n                                    }\r\n                                </button>\r\n                                <button (click)=\"switchRated()\" type=\"button\" class=\"btn btn-primary\">\r\n                                    <fa-icon [icon]=\"faSync\" />&nbsp;\r\n                                    @if (rated) {\r\n                                        <span jhiTranslate=\"artemisApp.showStatistic.switchToUnrated\"></span>\r\n                                    }\r\n                                    @if (!rated) {\r\n                                        <span jhiTranslate=\"artemisApp.showStatistic.switchToRated\"></span>\r\n                                    }\r\n                                </button>\r\n                            </div>\r\n                            <p>&nbsp;</p>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n            <jhi-quiz-statistics-footer />\r\n        </div>\r\n    </div>\r\n}\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275property", "element_r2", "\u0275\u0275sanitizeHtml", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275textInterpolate", "ctx_r2", "getLetter", "shortAnswerQuestionUtil", "getSpotNr", "\u0275\u0275styleProp", "\u0275\u0275propertyInterpolate", "getSampleSolutionForSpot", "undefined", "text", "length", "\u0275\u0275template", "ShortAnswerQuestionStatisticComponent_Conditional_0_Conditional_10_For_10_For_4_Conditional_3_Template", "ShortAnswerQuestionStatisticComponent_Conditional_0_Conditional_10_For_10_For_4_Conditional_4_Template", "ShortAnswerQuestionStatisticComponent_Conditional_0_Conditional_10_For_10_For_4_Conditional_5_Template", "\u0275\u0275conditional", "isInputField", "showSolution", "\u0275\u0275repeaterCreate", "ShortAnswerQuestionStatisticComponent_Conditional_0_Conditional_10_For_10_For_4_Template", "\u0275\u0275repeaterTrackByIdentity", "\u0275\u0275repeater", "textPart_r4", "faCheckCircle", "faTimesCircle", "ShortAnswerQuestionStatisticComponent_Conditional_0_Conditional_10_Conditional_5_Template", "ShortAnswerQuestionStatisticComponent_Conditional_0_Conditional_10_For_10_Template", "ShortAnswerQuestionStatisticComponent_Conditional_0_Conditional_10_Conditional_24_Template", "ShortAnswerQuestionStatisticComponent_Conditional_0_Conditional_10_Conditional_25_Template", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "switchSolution", "ShortAnswerQuestionStatisticComponent_Conditional_0_Conditional_10_Conditional_45_Template", "ShortAnswerQuestionStatisticComponent_Conditional_0_Conditional_10_Conditional_46_Template", "ShortAnswerQuestionStatisticComponent_Conditional_0_Conditional_10_Conditional_47_Template", "ShortAnswerQuestionStatisticComponent_Conditional_0_Conditional_10_Conditional_48_Template", "switchRated", "ShortAnswerQuestionStatisticComponent_Conditional_0_Conditional_10_Conditional_54_Template", "ShortAnswerQuestionStatisticComponent_Conditional_0_Conditional_10_Conditional_55_Template", "\u0275\u0275textInterpolate1", "question", "title", "invalid", "textParts", "rated", "participants", "\u0275\u0275pureFunction1", "_c0", "containerRef_r5", "offsetWidth", "ngxData", "ngxColor", "xAxisLabel", "yAxisLabel", "maxScale", "bindFormatting", "faSync", "ShortAnswerQuestionStatisticComponent_Conditional_0_Conditional_10_Template", "quizExercise", "ShortAnswerQuestionStatisticComponent", "QuestionStatisticComponent", "inject", "ShortAnswerQuestionUtil", "artemisMarkdown", "ArtemisMarkdownService", "lettersForSolutions", "sampleSolutions", "loadQuiz", "quiz", "refresh", "loadQuizCommon", "questionTextRendered", "safeHtmlForMarkdown", "generateShortAnswerStructure", "generateLettersForSolutions", "loadLayout", "loadData", "getSampleSolutions", "divideQuestionTextIntoTextParts", "transformTextPartsIntoHTML", "mapping", "correctMappings", "i", "spots", "spot", "id", "push", "spotTag", "index", "findIndex", "spotNr", "resetLabelsColors", "forEach", "_spot", "labels", "solutionLabels", "backgroundColors", "blueColor", "backgroundSolutionColors", "greenColor", "addLastBarLayout", "loadInvalidLayout", "resetData", "spotCounter", "questionStatistic", "shortAnswerSpotCounters", "find", "sCounter", "addData", "ratedCounter", "unRatedCounter", "updateData", "__ngFactoryType__", "selectors", "features", "\u0275\u0275ProvidersFeature", "QuizStatisticUtil", "\u0275\u0275InheritDefinitionFeature", "decls", "vars", "consts", "template", "rf", "ctx", "ShortAnswerQuestionStatisticComponent_Conditional_0_Template", "TranslateDirective", "BarChartModule", "BarVerticalComponent", "FaIconComponent", "QuizStatisticsFooterComponent", "styles"]
}
