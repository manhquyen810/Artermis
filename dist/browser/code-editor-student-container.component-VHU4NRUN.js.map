{
  "version": 3,
  "sources": ["src/main/webapp/app/guided-tour/tours/code-editor-tour.ts", "src/main/webapp/app/exercises/programming/participate/code-editor-student-container.component.ts", "src/main/webapp/app/exercises/programming/participate/code-editor-student-container.component.html"],
  "sourcesContent": ["import { GuidedTour } from 'app/guided-tour/guided-tour.model';\r\nimport { TextTourStep, UserInterActionTourStep } from 'app/guided-tour/guided-tour-step.model';\r\nimport { Orientation, ResetParticipation, UserInteractionEvent } from 'app/guided-tour/guided-tour.constants';\r\nimport { clickOnElement } from 'app/guided-tour/guided-tour.utils';\r\n\r\nexport const codeEditorTour: GuidedTour = {\r\n    settingsKey: 'code_editor_tour',\r\n    resetParticipation: ResetParticipation.EXERCISE_PARTICIPATION,\r\n    steps: [\r\n        new TextTourStep({\r\n            highlightSelector: '.editor-sidebar-left .guided-tour-file-browser',\r\n            headlineTranslateKey: 'tour.programmingExercise.codeEditor.fileBrowser.headline',\r\n            contentTranslateKey: 'tour.programmingExercise.codeEditor.fileBrowser.content',\r\n            highlightPadding: 10,\r\n            orientation: Orientation.RIGHT,\r\n        }),\r\n        new UserInterActionTourStep({\r\n            highlightSelector: '.list-group-item.file-item:not(.node-selected)',\r\n            headlineTranslateKey: 'tour.programmingExercise.codeEditor.exerciseFile.headline',\r\n            contentTranslateKey: 'tour.programmingExercise.codeEditor.exerciseFile.content',\r\n            highlightPadding: 5,\r\n            orientation: Orientation.RIGHT,\r\n            userInteractionEvent: UserInteractionEvent.CLICK,\r\n        }),\r\n        new UserInterActionTourStep({\r\n            highlightSelector: '.guided-tour-editor',\r\n            headlineTranslateKey: 'tour.programmingExercise.codeEditor.monacoEditor.headline',\r\n            contentTranslateKey: 'tour.programmingExercise.codeEditor.monacoEditor.content',\r\n            highlightPadding: 5,\r\n            orientation: Orientation.RIGHT,\r\n            userInteractionEvent: UserInteractionEvent.MONACO_EDITOR,\r\n        }),\r\n        new UserInterActionTourStep({\r\n            highlightSelector: '.guided-tour-save-button',\r\n            headlineTranslateKey: 'tour.programmingExercise.codeEditor.saveChanges.headline',\r\n            contentTranslateKey: 'tour.programmingExercise.codeEditor.saveChanges.content',\r\n            highlightPadding: 10,\r\n            orientation: Orientation.BOTTOMRIGHT,\r\n            userInteractionEvent: UserInteractionEvent.CLICK,\r\n            triggerNextStep: true,\r\n        }),\r\n        new UserInterActionTourStep({\r\n            highlightSelector: '.guided-tour-submit-button',\r\n            headlineTranslateKey: 'tour.programmingExercise.codeEditor.submitChanges.headline',\r\n            contentTranslateKey: 'tour.programmingExercise.codeEditor.submitChanges.content',\r\n            hintTranslateKey: 'tour.programmingExercise.codeEditor.submitChanges.hint',\r\n            highlightPadding: 10,\r\n            orientation: Orientation.BOTTOMRIGHT,\r\n            userInteractionEvent: UserInteractionEvent.CLICK,\r\n            triggerNextStep: true,\r\n        }),\r\n        new UserInterActionTourStep({\r\n            highlightSelector: 'jhi-updating-result',\r\n            headlineTranslateKey: 'tour.programmingExercise.buildLoading.headline',\r\n            contentTranslateKey: 'tour.programmingExercise.buildLoading.content',\r\n            highlightPadding: 10,\r\n            orientation: Orientation.BOTTOMRIGHT,\r\n            userInteractionEvent: UserInteractionEvent.WAIT_FOR_SELECTOR,\r\n        }),\r\n        new TextTourStep({\r\n            highlightSelector: 'jhi-updating-result .guided-tour.text-success',\r\n            headlineTranslateKey: 'tour.programmingExercise.buildStatus.headline',\r\n            contentTranslateKey: 'tour.programmingExercise.buildStatus.content',\r\n            hintTranslateKey: 'tour.programmingExercise.buildStatus.hint',\r\n            highlightPadding: 10,\r\n            orientation: Orientation.BOTTOMRIGHT,\r\n            skipStepIfNoSelector: true,\r\n        }),\r\n        new UserInterActionTourStep({\r\n            highlightSelector: 'jhi-updating-result .guided-tour.text-danger .guided-tour.result',\r\n            headlineTranslateKey: 'tour.programmingExercise.buildStatus.headline',\r\n            contentTranslateKey: 'tour.programmingExercise.buildStatus.content',\r\n            hintTranslateKey: 'tour.programmingExercise.buildStatus.hint',\r\n            highlightPadding: 10,\r\n            orientation: Orientation.BOTTOMRIGHT,\r\n            userInteractionEvent: UserInteractionEvent.CLICK,\r\n            skipStepIfNoSelector: true,\r\n            triggerNextStep: true,\r\n        }),\r\n        new TextTourStep({\r\n            highlightSelector: '.modal-body pre',\r\n            headlineTranslateKey: 'tour.programmingExercise.testCases.headline',\r\n            contentTranslateKey: 'tour.programmingExercise.testCases.content',\r\n            highlightPadding: 20,\r\n            orientation: Orientation.BOTTOM,\r\n            skipStepIfNoSelector: true,\r\n            closeAction: () => {\r\n                clickOnElement('.modal-header .close');\r\n            },\r\n        }),\r\n        new TextTourStep({\r\n            highlightSelector: 'jhi-programming-exercise-instructions-task-status .guided-tour.success',\r\n            headlineTranslateKey: 'tour.programmingExercise.testSuccess.headline',\r\n            contentTranslateKey: 'tour.programmingExercise.testSuccess.content',\r\n            highlightPadding: 20,\r\n            orientation: Orientation.LEFT,\r\n            skipStepIfNoSelector: true,\r\n        }),\r\n        new TextTourStep({\r\n            highlightSelector: 'jhi-programming-exercise-instructions-task-status .guided-tour.failed',\r\n            headlineTranslateKey: 'tour.programmingExercise.testFailure.headline',\r\n            contentTranslateKey: 'tour.programmingExercise.testFailure.content',\r\n            highlightPadding: 20,\r\n            orientation: Orientation.LEFT,\r\n            skipStepIfNoSelector: true,\r\n        }),\r\n    ],\r\n};\r\n", "import { Component, OnDestroy, OnInit, ViewChild, inject } from '@angular/core';\r\nimport { IncludedInScoreBadgeComponent } from 'app/exercises/shared/exercise-headers/included-in-score-badge.component';\r\nimport { UpdatingResultComponent } from 'app/exercises/shared/result/updating-result.component';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { ProgrammingExerciseParticipationService } from 'app/exercises/programming/manage/services/programming-exercise-participation.service';\r\nimport { GuidedTourService } from 'app/guided-tour/guided-tour.service';\r\nimport { codeEditorTour } from 'app/guided-tour/tours/code-editor-tour';\r\nimport { ButtonSize } from 'app/shared/components/button.component';\r\nimport { DomainService } from 'app/exercises/programming/shared/code-editor/service/code-editor-domain.service';\r\nimport { ExerciseType, IncludedInOverallScore, getCourseFromExercise } from 'app/entities/exercise.model';\r\nimport { Result } from 'app/entities/result.model';\r\nimport { Feedback, FeedbackType, checkSubsequentFeedbackInAssessment } from 'app/entities/feedback.model';\r\nimport { ProgrammingExercise } from 'app/entities/programming/programming-exercise.model';\r\nimport { DomainType } from 'app/exercises/programming/shared/code-editor/model/code-editor.model';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CodeEditorContainerComponent } from 'app/exercises/programming/shared/code-editor/container/code-editor-container.component';\r\nimport { ProgrammingExerciseStudentParticipation } from 'app/entities/participation/programming-exercise-student-participation.model';\r\nimport { getManualUnreferencedFeedback } from 'app/exercises/shared/result/result.utils';\r\nimport { SubmissionType } from 'app/entities/submission.model';\r\nimport { SubmissionPolicyType } from 'app/entities/submission-policy.model';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { SubmissionPolicyService } from 'app/exercises/programming/manage/services/submission-policy.service';\r\nimport { hasExerciseDueDatePassed } from 'app/exercises/shared/exercise/exercise.utils';\r\nimport { faCircleNotch, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { isManualResult as isManualResultFunction } from 'app/exercises/shared/result/result.utils';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { CodeEditorRepositoryIsLockedComponent } from '../shared/code-editor/layout/code-editor-repository-is-locked.component';\r\nimport { ProgrammingExerciseStudentTriggerBuildButtonComponent } from '../shared/actions/programming-exercise-student-trigger-build-button.component';\r\nimport { ProgrammingExerciseInstructionComponent } from '../shared/instructions-render/programming-exercise-instruction.component';\r\nimport { AdditionalFeedbackComponent } from 'app/shared/additional-feedback/additional-feedback.component';\r\n\r\n@Component({\r\n    selector: 'jhi-code-editor-student',\r\n    templateUrl: './code-editor-student-container.component.html',\r\n    imports: [\r\n        FaIconComponent,\r\n        TranslateDirective,\r\n        CodeEditorContainerComponent,\r\n        IncludedInScoreBadgeComponent,\r\n        CodeEditorRepositoryIsLockedComponent,\r\n        UpdatingResultComponent,\r\n        ProgrammingExerciseStudentTriggerBuildButtonComponent,\r\n        ProgrammingExerciseInstructionComponent,\r\n        AdditionalFeedbackComponent,\r\n    ],\r\n})\r\nexport class CodeEditorStudentContainerComponent implements OnInit, OnDestroy {\r\n    private domainService = inject(DomainService);\r\n    private programmingExerciseParticipationService = inject(ProgrammingExerciseParticipationService);\r\n    private guidedTourService = inject(GuidedTourService);\r\n    private submissionPolicyService = inject(SubmissionPolicyService);\r\n    private route = inject(ActivatedRoute);\r\n\r\n    @ViewChild(CodeEditorContainerComponent, { static: false }) codeEditorContainer: CodeEditorContainerComponent;\r\n    readonly IncludedInOverallScore = IncludedInOverallScore;\r\n    readonly SubmissionPolicyType = SubmissionPolicyType;\r\n\r\n    ButtonSize = ButtonSize;\r\n    PROGRAMMING = ExerciseType.PROGRAMMING;\r\n\r\n    paramSub: Subscription;\r\n    participation: ProgrammingExerciseStudentParticipation;\r\n    exercise: ProgrammingExercise;\r\n    course?: Course;\r\n\r\n    // Fatal error state: when the participation can't be retrieved, the code editor is unusable for the student\r\n    loadingParticipation = false;\r\n    participationCouldNotBeFetched = false;\r\n    repositoryIsLocked = false;\r\n    showEditorInstructions = true;\r\n    latestResult: Result | undefined;\r\n    hasTutorAssessment = false;\r\n    isIllegalSubmission = false;\r\n    numberOfSubmissionsForSubmissionPolicy?: number;\r\n\r\n    // Icons\r\n    faCircleNotch = faCircleNotch;\r\n    faTimesCircle = faTimesCircle;\r\n\r\n    /**\r\n     * On init set up the route param subscription.\r\n     * Will load the participation according to participation Id with the latest result and result details.\r\n     */\r\n    ngOnInit(): void {\r\n        this.paramSub = this.route!.params.subscribe((params) => {\r\n            this.loadingParticipation = true;\r\n            this.participationCouldNotBeFetched = false;\r\n            const participationId = Number(params['participationId']);\r\n            this.loadParticipationWithLatestResult(participationId)\r\n                .pipe(\r\n                    tap((participationWithResults) => {\r\n                        this.domainService.setDomain([DomainType.PARTICIPATION, participationWithResults]);\r\n                        this.participation = participationWithResults;\r\n                        this.exercise = this.participation.exercise as ProgrammingExercise;\r\n                        const dueDateHasPassed = hasExerciseDueDatePassed(this.exercise, this.participation);\r\n                        this.repositoryIsLocked = this.participation.locked ?? false;\r\n                        this.latestResult = this.participation.results ? this.participation.results[0] : undefined;\r\n                        this.isIllegalSubmission = this.latestResult?.submission?.type === SubmissionType.ILLEGAL;\r\n                        this.checkForTutorAssessment(dueDateHasPassed);\r\n                        this.course = getCourseFromExercise(this.exercise);\r\n                        this.submissionPolicyService.getSubmissionPolicyOfProgrammingExercise(this.exercise.id!).subscribe((submissionPolicy) => {\r\n                            if (submissionPolicy?.active) {\r\n                                this.exercise.submissionPolicy = submissionPolicy;\r\n                                this.getNumberOfSubmissionsForSubmissionPolicy();\r\n                            }\r\n                        });\r\n                        if (this.participation.results && this.participation.results[0] && this.participation.results[0].feedbacks) {\r\n                            checkSubsequentFeedbackInAssessment(this.participation.results[0].feedbacks);\r\n                        }\r\n                    }),\r\n                )\r\n                .subscribe({\r\n                    next: () => {\r\n                        this.loadingParticipation = false;\r\n                        this.guidedTourService.enableTourForExercise(this.exercise, codeEditorTour, true);\r\n                    },\r\n                    error: () => {\r\n                        this.participationCouldNotBeFetched = true;\r\n                        this.loadingParticipation = false;\r\n                    },\r\n                });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * If a subscription exists for paramSub, unsubscribe\r\n     */\r\n    ngOnDestroy() {\r\n        if (this.paramSub) {\r\n            this.paramSub.unsubscribe();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Load the participation from server with the latest result.\r\n     * @param participationId\r\n     */\r\n    loadParticipationWithLatestResult(participationId: number): Observable<ProgrammingExerciseStudentParticipation> {\r\n        return this.programmingExerciseParticipationService.getStudentParticipationWithLatestResult(participationId).pipe(\r\n            map((participation: ProgrammingExerciseStudentParticipation) => {\r\n                if (participation.results?.length) {\r\n                    // connect result and participation\r\n                    participation.results[0].participation = participation;\r\n                }\r\n                return participation;\r\n            }),\r\n        );\r\n    }\r\n\r\n    checkForTutorAssessment(dueDateHasPassed: boolean) {\r\n        let isManualResult = false;\r\n        let hasTutorFeedback = false;\r\n        if (this.latestResult) {\r\n            // latest result is the first element of results, see loadParticipationWithLatestResult\r\n            isManualResult = isManualResultFunction(this.latestResult);\r\n            if (isManualResult) {\r\n                hasTutorFeedback = this.latestResult.feedbacks!.some((feedback) => feedback.type === FeedbackType.MANUAL);\r\n            }\r\n        }\r\n        // Also check for assessment due date to never show manual feedback before the due date\r\n        this.hasTutorAssessment = dueDateHasPassed && isManualResult && hasTutorFeedback;\r\n    }\r\n\r\n    getNumberOfSubmissionsForSubmissionPolicy() {\r\n        if (this.participation.id) {\r\n            this.submissionPolicyService.getParticipationSubmissionCount(this.participation.id).subscribe((numberOfSubmissions) => {\r\n                this.numberOfSubmissionsForSubmissionPolicy = numberOfSubmissions;\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check whether a latestResult exists and if, returns the unreferenced feedback of it\r\n     */\r\n    get unreferencedFeedback(): Feedback[] {\r\n        if (this.latestResult?.feedbacks) {\r\n            checkSubsequentFeedbackInAssessment(this.latestResult.feedbacks);\r\n            return getManualUnreferencedFeedback(this.latestResult.feedbacks) ?? [];\r\n        }\r\n        return [];\r\n    }\r\n\r\n    receivedNewResult() {\r\n        this.getNumberOfSubmissionsForSubmissionPolicy();\r\n    }\r\n}\r\n", "<div [id]=\"'exercise-' + exercise?.id\">\r\n    @if (loadingParticipation || participationCouldNotBeFetched) {\r\n        <nav class=\"card\">\r\n            <div class=\"card-body\">\r\n                @if (loadingParticipation) {\r\n                    <span>\r\n                        <fa-icon [icon]=\"faCircleNotch\" animation=\"spin\" />\r\n                        <p class=\"d-inline\" jhiTranslate=\"artemisApp.editor.fetchingParticipation\"></p>\r\n                    </span>\r\n                }\r\n                @if (participationCouldNotBeFetched) {\r\n                    <span>\r\n                        <fa-icon [icon]=\"faTimesCircle\" class=\"text-danger\" />\r\n                        <p class=\"d-inline\" jhiTranslate=\"artemisApp.editor.errors.participationNotFound\"></p>\r\n                    </span>\r\n                }\r\n            </div>\r\n        </nav>\r\n    }\r\n    @if (isIllegalSubmission) {\r\n        <div class=\"row-container\">\r\n            <span class=\"badge bg-danger\" jhiTranslate=\"artemisApp.assessment.assessmentIllegalSubmission\"></span>\r\n        </div>\r\n    }\r\n    @if (!loadingParticipation && !participationCouldNotBeFetched) {\r\n        <jhi-code-editor-container\r\n            [editable]=\"!repositoryIsLocked\"\r\n            [participation]=\"participation\"\r\n            [showEditorInstructions]=\"showEditorInstructions\"\r\n            [isTutorAssessment]=\"hasTutorAssessment\"\r\n            [readOnlyManualFeedback]=\"true\"\r\n            [course]=\"course\"\r\n        >\r\n            <div editorTitle>\r\n                <span>{{ exercise?.title }}</span>\r\n                <span\r\n                    [jhiTranslate]=\"exercise?.bonusPoints ? 'artemisApp.examParticipation.bonus' : 'artemisApp.examParticipation.points'\"\r\n                    [translateValues]=\"{ points: exercise?.maxPoints, bonusPoints: exercise?.bonusPoints }\"\r\n                ></span>\r\n                <span>\r\n                    @if (exercise.includedInOverallScore !== IncludedInOverallScore.INCLUDED_COMPLETELY) {\r\n                        <jhi-included-in-score-badge [includedInOverallScore]=\"exercise.includedInOverallScore\" />\r\n                    }\r\n                </span>\r\n            </div>\r\n            <div submissionPolicy class=\"ps-2 pt-1 justify-self-center\">\r\n                @if (exercise.submissionPolicy && exercise.submissionPolicy.active && numberOfSubmissionsForSubmissionPolicy !== undefined) {\r\n                    <span\r\n                        jhiTranslate=\"artemisApp.programmingExercise.submissionPolicy.submissionsAllowed\"\r\n                        [translateValues]=\"{ submissionCount: numberOfSubmissionsForSubmissionPolicy, totalSubmissions: exercise.submissionPolicy.submissionLimit }\"\r\n                    ></span>\r\n                    @if (exercise.submissionPolicy.type === SubmissionPolicyType.SUBMISSION_PENALTY) {\r\n                        <span\r\n                            jhiTranslate=\"artemisApp.programmingExercise.submissionPolicy.submissionPenalty.penaltyInfoLabel\"\r\n                            [translateValues]=\"{ points: exercise.submissionPolicy.exceedingPenalty }\"\r\n                        ></span>\r\n                    }\r\n                }\r\n            </div>\r\n            <!-- prettier-ignore -->\r\n            <div editorToolbar class=\"d-inline-flex align-items-center\">\r\n              @if (repositoryIsLocked) {\r\n                <jhi-code-editor-repository-is-locked class=\"me-3\" />\r\n              }\r\n              @if (participation) {\r\n                <jhi-updating-result\r\n                  [exercise]=\"exercise\"\r\n                  [showUngradedResults]=\"true\"\r\n                  [showBadge]=\"true\"\r\n                  [participation]=\"participation\"\r\n                  [personalParticipation]=\"true\"\r\n                  (onParticipationChange)=\"receivedNewResult()\"\r\n                  [showProgressBar]=\"true\"\r\n                  [showProgressBarBorder]=\"true\"\r\n                  class=\"me-2\"\r\n                />\r\n              }\r\n              <jhi-programming-exercise-student-trigger-build-button\r\n                class=\"me-2\"\r\n                [exercise]=\"exercise\"\r\n                [participation]=\"participation\"\r\n                [btnSize]=\"ButtonSize.MEDIUM\"\r\n              />\r\n            </div>\r\n            <jhi-programming-exercise-instructions\r\n                editorSidebar\r\n                (onNoInstructionsAvailable)=\"showEditorInstructions = false\"\r\n                [exercise]=\"exercise\"\r\n                [participation]=\"participation\"\r\n                [personalParticipation]=\"true\"\r\n                class=\"instructions-wrapper__content card-body p-0\"\r\n            />\r\n        </jhi-code-editor-container>\r\n    }\r\n    <div class=\"row ms-0\">\r\n        @if (unreferencedFeedback.length > 0) {\r\n            <jhi-additional-feedback class=\"col-xl-8 mt-3 alert unreferencedFeedback\" [feedback]=\"unreferencedFeedback\" [additional]=\"true\" [course]=\"course\" />\r\n        }\r\n    </div>\r\n</div>\r\n"],
  "mappings": "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",
  "names": ["codeEditorTour", "settingsKey", "resetParticipation", "ResetParticipation", "EXERCISE_PARTICIPATION", "steps", "TextTourStep", "highlightSelector", "headlineTranslateKey", "contentTranslateKey", "highlightPadding", "orientation", "Orientation", "RIGHT", "UserInterActionTourStep", "userInteractionEvent", "UserInteractionEvent", "CLICK", "MONACO_EDITOR", "BOTTOMRIGHT", "triggerNextStep", "hintTranslateKey", "WAIT_FOR_SELECTOR", "skipStepIfNoSelector", "BOTTOM", "closeAction", "clickOnElement", "LEFT", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "ctx_r0", "faCircleNotch", "faTimesCircle", "\u0275\u0275template", "CodeEditorStudentContainerComponent_Conditional_2_Conditional_5_Template", "CodeEditorStudentContainerComponent_Conditional_2_Conditional_6_Template", "\u0275\u0275conditional", "loadingParticipation", "participationCouldNotBeFetched", "exercise", "includedInOverallScore", "\u0275\u0275pureFunction1", "_c2", "submissionPolicy", "exceedingPenalty", "CodeEditorStudentContainerComponent_Conditional_4_Conditional_17_Conditional_3_Template", "\u0275\u0275pureFunction2", "_c1", "numberOfSubmissionsForSubmissionPolicy", "submissionLimit", "type", "SubmissionPolicyType", "SUBMISSION_PENALTY", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r3", "\u0275\u0275nextContext", "\u0275\u0275resetView", "receivedNewResult", "participation", "CodeEditorStudentContainerComponent_Conditional_4_Conditional_12_Template", "CodeEditorStudentContainerComponent_Conditional_4_Conditional_17_Template", "CodeEditorStudentContainerComponent_Conditional_4_Conditional_22_Template", "CodeEditorStudentContainerComponent_Conditional_4_Conditional_23_Template", "_r2", "showEditorInstructions", "repositoryIsLocked", "hasTutorAssessment", "course", "\u0275\u0275textInterpolate", "title", "bonusPoints", "_c0", "maxPoints", "IncludedInOverallScore", "INCLUDED_COMPLETELY", "active", "undefined", "ButtonSize", "MEDIUM", "unreferencedFeedback", "CodeEditorStudentContainerComponent", "domainService", "inject", "DomainService", "programmingExerciseParticipationService", "ProgrammingExerciseParticipationService", "guidedTourService", "GuidedTourService", "submissionPolicyService", "SubmissionPolicyService", "route", "ActivatedRoute", "codeEditorContainer", "PROGRAMMING", "ExerciseType", "paramSub", "latestResult", "isIllegalSubmission", "ngOnInit", "params", "subscribe", "participationId", "Number", "loadParticipationWithLatestResult", "pipe", "tap", "participationWithResults", "setDomain", "DomainType", "PARTICIPATION", "dueDateHasPassed", "hasExerciseDueDatePassed", "locked", "results", "submission", "checkForTutorAssessment", "getCourseFromExercise", "getSubmissionPolicyOfProgrammingExercise", "id", "getNumberOfSubmissionsForSubmissionPolicy", "feedbacks", "checkSubsequentFeedbackInAssessment", "next", "enableTourForExercise", "codeEditorTour", "error", "ngOnDestroy", "unsubscribe", "getStudentParticipationWithLatestResult", "map", "length", "isManualResult", "hasTutorFeedback", "isManualResultFunction", "some", "feedback", "FeedbackType", "MANUAL", "getParticipationSubmissionCount", "numberOfSubmissions", "getManualUnreferencedFeedback", "selectors", "viewQuery", "rf", "ctx", "CodeEditorContainerComponent", "CodeEditorStudentContainerComponent_Conditional_2_Template", "CodeEditorStudentContainerComponent_Conditional_3_Template", "CodeEditorStudentContainerComponent_Conditional_4_Template", "CodeEditorStudentContainerComponent_Conditional_7_Template", "FaIconComponent", "TranslateDirective", "IncludedInScoreBadgeComponent", "CodeEditorRepositoryIsLockedComponent", "UpdatingResultComponent", "ProgrammingExerciseStudentTriggerBuildButtonComponent", "ProgrammingExerciseInstructionComponent", "AdditionalFeedbackComponent", "encapsulation"]
}
