{"version":3,"sources":["src/main/webapp/app/exam/participate/exam-navigation-bar/exam-navigation-bar.component.ts","src/main/webapp/app/exam/participate/exam-navigation-bar/exam-navigation-bar.component.html","src/main/webapp/app/entities/submission-version.model.ts","src/main/webapp/app/exercises/shared/submission-version/submission-version.service.ts","src/main/webapp/app/exam/manage/student-exams/student-exam-timeline/programming-exam-diff/programming-exercise-exam-diff.component.ts","src/main/webapp/app/exam/manage/student-exams/student-exam-timeline/programming-exam-diff/programming-exercise-exam-diff.component.html","node_modules/@angular/material/fesm2022/slider.mjs","src/main/webapp/app/exam/manage/student-exams/student-exam-timeline/student-exam-timeline.component.ts","src/main/webapp/app/exam/manage/student-exams/student-exam-timeline/student-exam-timeline.component.html"],"sourcesContent":["import { AfterViewInit, Component, EventEmitter, Input, OnInit, Output, inject } from '@angular/core';\r\nimport { Exercise, ExerciseType } from 'app/entities/exercise.model';\r\nimport { ProgrammingExercise } from 'app/entities/programming/programming-exercise.model';\r\nimport { LayoutService } from 'app/shared/breakpoints/layout.service';\r\nimport { CustomBreakpointNames } from 'app/shared/breakpoints/breakpoints.service';\r\nimport dayjs from 'dayjs/esm';\r\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { ExamExerciseUpdateService } from 'app/exam/manage/exam-exercise-update.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { ButtonTooltipType, ExamParticipationService } from 'app/exam/participate/exam-participation.service';\r\nimport { CommitState, DomainChange, DomainType } from 'app/exercises/programming/shared/code-editor/model/code-editor.model';\r\nimport { CodeEditorRepositoryService } from 'app/exercises/programming/shared/code-editor/service/code-editor-repository.service';\r\nimport { map } from 'rxjs/operators';\r\nimport { CodeEditorConflictStateService } from 'app/exercises/programming/shared/code-editor/service/code-editor-conflict-state.service';\r\nimport { ExamSession } from 'app/entities/exam/exam-session.model';\r\nimport { faBars, faCheck, faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport { ProgrammingSubmission } from 'app/entities/programming/programming-submission.model';\r\nimport { SubmissionVersion } from 'app/entities/submission-version.model';\r\nimport { FileUploadSubmission } from 'app/entities/file-upload-submission.model';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { ExamLiveEventsButtonComponent } from '../events/exam-live-events-button.component';\r\nimport { NgClass } from '@angular/common';\r\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { ExamTimerComponent } from '../timer/exam-timer.component';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-exam-navigation-bar',\r\n    templateUrl: './exam-navigation-bar.component.html',\r\n    styleUrls: ['./exam-navigation-bar.component.scss'],\r\n    imports: [TranslateDirective, ExamLiveEventsButtonComponent, NgClass, NgbTooltip, FaIconComponent, ExamTimerComponent, ArtemisTranslatePipe],\r\n})\r\nexport class ExamNavigationBarComponent implements OnInit, AfterViewInit {\r\n    private layoutService = inject(LayoutService);\r\n    private examParticipationService = inject(ExamParticipationService);\r\n    private examExerciseUpdateService = inject(ExamExerciseUpdateService);\r\n    private repositoryService = inject(CodeEditorRepositoryService);\r\n    private conflictService = inject(CodeEditorConflictStateService);\r\n\r\n    @Input() exercises: Exercise[] = [];\r\n    @Input() exerciseIndex = 0;\r\n    @Input() endDate: dayjs.Dayjs;\r\n    @Input() overviewPageOpen: boolean;\r\n    @Input() examSessions?: ExamSession[] = [];\r\n    @Input() examTimeLineView = false;\r\n    @Output() onPageChanged = new EventEmitter<{\r\n        overViewChange: boolean;\r\n        exercise?: Exercise;\r\n        forceSave: boolean;\r\n        submission?: ProgrammingSubmission | SubmissionVersion | FileUploadSubmission;\r\n    }>();\r\n    @Output() examAboutToEnd = new EventEmitter<void>();\r\n    @Output() onExamHandInEarly = new EventEmitter<void>();\r\n\r\n    static itemsVisiblePerSideDefault = 4;\r\n    itemsVisiblePerSide = ExamNavigationBarComponent.itemsVisiblePerSideDefault;\r\n\r\n    criticalTime = dayjs.duration(5, 'minutes');\r\n\r\n    icon: IconProp;\r\n\r\n    subscriptionToLiveExamExerciseUpdates: Subscription;\r\n\r\n    // Icons\r\n    faBars = faBars;\r\n\r\n    ngOnInit(): void {\r\n        if (!this.examTimeLineView) {\r\n            this.subscriptionToLiveExamExerciseUpdates = this.examExerciseUpdateService.currentExerciseIdForNavigation.subscribe((exerciseIdToNavigateTo) => {\r\n                // another exercise will only be displayed if the student clicks on the corresponding pop-up notification\r\n                this.changeExerciseById(exerciseIdToNavigateTo);\r\n            });\r\n        }\r\n\r\n        this.layoutService.subscribeToLayoutChanges().subscribe(() => {\r\n            // You will have all matched breakpoints in observerResponse\r\n            if (this.layoutService.isBreakpointActive(CustomBreakpointNames.extraLarge)) {\r\n                this.itemsVisiblePerSide = ExamNavigationBarComponent.itemsVisiblePerSideDefault;\r\n            } else if (this.layoutService.isBreakpointActive(CustomBreakpointNames.large)) {\r\n                this.itemsVisiblePerSide = 3;\r\n            } else if (this.layoutService.isBreakpointActive(CustomBreakpointNames.medium)) {\r\n                this.itemsVisiblePerSide = 1;\r\n            } else {\r\n                this.itemsVisiblePerSide = 0;\r\n            }\r\n        });\r\n\r\n        const isInitialSession = this.examSessions && this.examSessions.length > 0 && this.examSessions[0].initialSession;\r\n        if (isInitialSession || isInitialSession == undefined) {\r\n            return;\r\n        }\r\n\r\n        // If it is not an initial session, update the isSynced variable for out of sync submissions.\r\n        this.exercises\r\n            .filter((exercise) => exercise.type === ExerciseType.PROGRAMMING && exercise.studentParticipations)\r\n            .forEach((exercise) => {\r\n                const domain: DomainChange = [DomainType.PARTICIPATION, exercise.studentParticipations![0]];\r\n                this.conflictService.setDomain(domain);\r\n                this.repositoryService.setDomain(domain);\r\n\r\n                this.repositoryService\r\n                    .getStatus()\r\n                    .pipe(map((response) => Object.values(CommitState).find((commitState) => commitState === response.repositoryStatus)))\r\n                    .subscribe((commitState) => {\r\n                        const submission = ExamParticipationService.getSubmissionForExercise(exercise);\r\n                        if (commitState === CommitState.UNCOMMITTED_CHANGES && submission) {\r\n                            // If there are uncommitted changes: set isSynced to false.\r\n                            submission.isSynced = false;\r\n                        }\r\n                    });\r\n            });\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        // Use setTimeout to ensure the DOM is fully loaded before calculating headerHeight\r\n        setTimeout(() => {\r\n            const headerHeight = (document.querySelector('jhi-navbar') as HTMLElement)?.offsetHeight;\r\n            document.documentElement.style.setProperty('--header-height', `${headerHeight}px`);\r\n        });\r\n    }\r\n\r\n    getExerciseButtonTooltip(exercise: Exercise): ButtonTooltipType {\r\n        return this.examParticipationService.getExerciseButtonTooltip(exercise);\r\n    }\r\n\r\n    triggerExamAboutToEnd() {\r\n        this.saveExercise(false);\r\n        this.examAboutToEnd.emit();\r\n    }\r\n\r\n    /**\r\n     * @param overviewPage: user wants to switch to the overview page\r\n     * @param exerciseIndex: index of the exercise to switch to, if it should not be used, you can pass -1\r\n     * @param forceSave: true if forceSave shall be used.\r\n     * @param submission the submission to be viewed, used in the exam timeline\r\n     */\r\n    changePage(overviewPage: boolean, exerciseIndex: number, forceSave?: boolean, submission?: SubmissionVersion | ProgrammingSubmission | FileUploadSubmission): void {\r\n        if (!overviewPage) {\r\n            // out of index -> do nothing\r\n            if (exerciseIndex > this.exercises.length - 1 || exerciseIndex < 0) {\r\n                return;\r\n            }\r\n            // set index and emit event\r\n            this.exerciseIndex = exerciseIndex;\r\n            this.onPageChanged.emit({ overViewChange: false, exercise: this.exercises[this.exerciseIndex], forceSave: !!forceSave, submission: submission });\r\n        } else if (overviewPage) {\r\n            // set index and emit event\r\n            this.exerciseIndex = -1;\r\n            // save current exercise\r\n            this.onPageChanged.emit({ overViewChange: true, exercise: undefined, forceSave: false });\r\n        }\r\n        this.setExerciseButtonStatus(this.exerciseIndex);\r\n    }\r\n\r\n    /**\r\n     * Auxiliary method to call changeExerciseByIndex based on the unique id of the exercise\r\n     * @param exerciseId the unique identifier of an exercise that stays the same regardless of student exam ordering\r\n     */\r\n    changeExerciseById(exerciseId: number) {\r\n        const foundIndex = this.exercises.findIndex((exercise) => exercise.id === exerciseId);\r\n        this.changePage(false, foundIndex, true);\r\n    }\r\n\r\n    /**\r\n     * Save the currently active exercise and go to the next exercise.\r\n     * @param changeExercise whether to go to the next exercise {boolean}\r\n     */\r\n    saveExercise(changeExercise = true) {\r\n        const newIndex = this.exerciseIndex + 1;\r\n        const submission = ExamParticipationService.getSubmissionForExercise(this.exercises[this.exerciseIndex]);\r\n        // we do not submit programming exercises on a save\r\n        if (submission && this.exercises[this.exerciseIndex].type !== ExerciseType.PROGRAMMING) {\r\n            submission.submitted = true;\r\n        }\r\n        if (changeExercise) {\r\n            if (newIndex > this.exercises.length - 1) {\r\n                // we are in the last exercise, if out of range \"change\" active exercise to current in order to trigger a save\r\n                this.changePage(false, this.exerciseIndex, true);\r\n            } else {\r\n                this.changePage(false, newIndex, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    isProgrammingExercise() {\r\n        return this.exercises[this.exerciseIndex].type === ExerciseType.PROGRAMMING;\r\n    }\r\n\r\n    isFileUploadExercise() {\r\n        return this.exercises[this.exerciseIndex].type === ExerciseType.FILE_UPLOAD;\r\n    }\r\n\r\n    getOverviewStatus(): 'active' | '' {\r\n        return this.overviewPageOpen ? 'active' : '';\r\n    }\r\n\r\n    /**\r\n     * calculate the exercise status (also see exam-exercise-overview-page.component.ts --> make sure the logic is consistent)\r\n     * also determines the used icon and its color\r\n     * TODO: we should try to extract a method for the common logic which avoids side effects (i.e. changing this.icon)\r\n     *  this method could e.g. return the sync status and the icon\r\n     *\r\n     * @param exerciseIndex index of the exercise\r\n     * @return the sync status of the exercise (whether the corresponding submission is saved on the server or not)\r\n     */\r\n    setExerciseButtonStatus(exerciseIndex: number): 'synced' | 'synced active' | 'notSynced' {\r\n        this.icon = faCheck;\r\n        // If we are in the exam timeline we do not use not synced as not synced shows\r\n        // that the current submission is not saved which doesn't make sense in the timeline.\r\n        if (this.examTimeLineView) {\r\n            return this.exerciseIndex === exerciseIndex ? 'synced active' : 'synced';\r\n        }\r\n\r\n        // start with a yellow status (edit icon)\r\n        // TODO: it's a bit weird, that it works that multiple icons (one per exercise) are hold in the same instance variable of the component\r\n        //  we should definitely refactor this and e.g. use the same ExamExerciseOverviewItem as in exam-exercise-overview-page.component.ts !\r\n        this.icon = faEdit;\r\n        const exercise = this.exercises[exerciseIndex];\r\n        const submission = ExamParticipationService.getSubmissionForExercise(exercise);\r\n        if (!submission) {\r\n            // in case no participation/submission yet exists -> display synced\r\n            // this should only occur for programming exercises\r\n            return 'synced';\r\n        }\r\n        if (submission.submitted) {\r\n            this.icon = faCheck;\r\n        }\r\n        if (submission.isSynced || this.isOnlyOfflineIDE(exercise)) {\r\n            // make button blue (except for the current page)\r\n            if (exerciseIndex === this.exerciseIndex && !this.overviewPageOpen) {\r\n                return 'synced active';\r\n            } else {\r\n                return 'synced';\r\n            }\r\n        } else {\r\n            // make button yellow except for programming exercises with only offline IDE\r\n            this.icon = faEdit;\r\n            return 'notSynced';\r\n        }\r\n    }\r\n\r\n    isOnlyOfflineIDE(exercise: Exercise): boolean {\r\n        if (exercise instanceof ProgrammingExercise) {\r\n            const programmingExercise = exercise as ProgrammingExercise;\r\n            return programmingExercise.allowOfflineIde === true && programmingExercise.allowOnlineEditor === false;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Notify parent component when user wants to hand in early\r\n     */\r\n    handInEarly() {\r\n        this.onExamHandInEarly.emit();\r\n    }\r\n}\r\n","<div class=\"row justify-content-between align-items-start exam-navigation pt-3\">\r\n    <div class=\"col m-0\">\r\n        @if (exercises && exercises.length > 0 && !overviewPageOpen) {\r\n            <div\r\n                class=\"col d-none d-lg-block h3 m-0 text-overflow\"\r\n                jhiTranslate=\"artemisApp.examParticipation.progress\"\r\n                [translateValues]=\"{ current: exerciseIndex + 1, all: exercises.length }\"\r\n            ></div>\r\n        }\r\n        @if (exercises && exercises.length > 0 && !overviewPageOpen) {\r\n            <div\r\n                class=\"col d-block d-lg-none h3 m-0 text-overflow\"\r\n                style=\"flex: 0.2\"\r\n                jhiTranslate=\"artemisApp.examParticipation.progressSmall\"\r\n                [translateValues]=\"{ current: exerciseIndex + 1, all: exercises.length }\"\r\n            ></div>\r\n        }\r\n        @if (overviewPageOpen) {\r\n            <div class=\"h3 m-0 text-overflow d-block col\" jhiTranslate=\"artemisApp.examParticipation.examOverview\"></div>\r\n        }\r\n        <div class=\"mt-2\">\r\n            <jhi-exam-live-events-button />\r\n        </div>\r\n    </div>\r\n    <div class=\"col\">\r\n        <div class=\"d-flex justify-content-center\">\r\n            <!-- exam overview item -->\r\n            <div class=\"navigation-item overview\">\r\n                @if (!examTimeLineView) {\r\n                    <button\r\n                        class=\"btn btn-primary w-100 synced\"\r\n                        [ngClass]=\"getOverviewStatus()\"\r\n                        [ngbTooltip]=\"'artemisApp.examParticipation.examOverview' | artemisTranslate\"\r\n                        (click)=\"changePage(true, -1)\"\r\n                    >\r\n                        <fa-icon [icon]=\"faBars\" />\r\n                    </button>\r\n                }\r\n            </div>\r\n            <div class=\"navigation-item\">\r\n                <button class=\"btn btn-secondary w-100\" (click)=\"changePage(false, exerciseIndex - 1, false)\" [disabled]=\"exerciseIndex <= 0\">\r\n                    <span aria-hidden=\"true\">&laquo;</span>\r\n                    <span class=\"sr-only\">Previous</span>\r\n                </button>\r\n            </div>\r\n            @for (exercise of exercises; track exercise; let i = $index) {\r\n                @if (\r\n                    i >=\r\n                        exerciseIndex -\r\n                            itemsVisiblePerSide -\r\n                            (exerciseIndex + 1 + itemsVisiblePerSide > exercises.length ? exerciseIndex + 1 + itemsVisiblePerSide - exercises.length : 0) &&\r\n                    i <= exerciseIndex + itemsVisiblePerSide - (exerciseIndex - itemsVisiblePerSide <= 0 ? exerciseIndex - itemsVisiblePerSide : 0)\r\n                ) {\r\n                    <div class=\"navigation-item\">\r\n                        <button\r\n                            id=\"exam-exercise-{{ i }}\"\r\n                            class=\"btn btn-primary w-100\"\r\n                            [ngClass]=\"setExerciseButtonStatus(i)\"\r\n                            [ngbTooltip]=\"!examTimeLineView ? ('artemisApp.examParticipation.' + getExerciseButtonTooltip(exercise) | artemisTranslate) : ''\"\r\n                            (click)=\"changePage(false, i, false)\"\r\n                        >\r\n                            <fa-icon [icon]=\"icon\" />\r\n                        </button>\r\n                        <div class=\"exerciseIndex\">{{ i + 1 }}</div>\r\n                    </div>\r\n                }\r\n            }\r\n            <div class=\"navigation-item\">\r\n                <button\r\n                    class=\"btn btn-secondary w-100\"\r\n                    (click)=\"changePage(false, overviewPageOpen ? 0 : exerciseIndex + 1, false)\"\r\n                    [disabled]=\"exerciseIndex >= exercises.length - 1 || exerciseIndex < 0\"\r\n                >\r\n                    <span aria-hidden=\"true\">&raquo;</span>\r\n                    <span class=\"sr-only\">Next</span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col\">\r\n        @if (!examTimeLineView) {\r\n            <div class=\"row justify-content-end align-items-start pe-2\">\r\n                <div class=\"d-flex mb-2 justify-content-end\">\r\n                    @if (!overviewPageOpen) {\r\n                        <button id=\"save\" [class.invisible]=\"isProgrammingExercise() || isFileUploadExercise()\" class=\"btn btn-primary\" (click)=\"saveExercise()\">\r\n                            {{ 'artemisApp.examParticipation.' + (exerciseIndex >= exercises.length - 1 ? 'submitLastExercise' : 'submitOtherExercise') | artemisTranslate }}\r\n                        </button>\r\n                    }\r\n                    <button id=\"hand-in-early\" class=\"btn btn-danger ms-2\" (click)=\"handInEarly()\" jhiTranslate=\"artemisApp.examParticipation.handInEarly\"></button>\r\n                </div>\r\n                <div class=\"ms-3 mb-2\">\r\n                    <jhi-exam-timer class=\"d-flex justify-content-end mx-0\" [criticalTime]=\"criticalTime\" [endDate]=\"endDate\" (timerAboutToEnd)=\"triggerExamAboutToEnd()\" />\r\n                </div>\r\n            </div>\r\n        }\r\n    </div>\r\n</div>\r\n","import { BaseEntity } from 'app/shared/model/base-entity';\r\nimport { Submission } from 'app/entities/submission.model';\r\nimport dayjs from 'dayjs/esm';\r\n\r\nexport class SubmissionVersion implements BaseEntity {\r\n    public id?: number;\r\n    public submission: Submission;\r\n    public createdDate: dayjs.Dayjs;\r\n    public content: string;\r\n}\r\n","import { Injectable, inject } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Submission } from 'app/entities/submission.model';\r\nimport { map } from 'rxjs/operators';\r\nimport { convertDateFromServer } from 'app/utils/date.utils';\r\nimport { SubmissionVersion } from 'app/entities/submission-version.model';\r\n\r\nexport type EntityResponseType = HttpResponse<Submission>;\r\nexport type EntityArrayResponseType = HttpResponse<Submission[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SubmissionVersionService {\r\n    private http = inject(HttpClient);\r\n\r\n    public resourceUrl = 'api/exercise/submissions';\r\n\r\n    /**\r\n     * Find all submission versions for a given submission id.\r\n     * This works because every participation has exactly one submission for all exercise types that support submission versions.\r\n     * @param submissionId the id of the submission\r\n     */\r\n    findAllSubmissionVersionsOfSubmission(submissionId: number): Observable<SubmissionVersion[]> {\r\n        return this.http.get<SubmissionVersion[]>(`${this.resourceUrl}/${submissionId}/versions`).pipe(map((res) => this.convertCreatedDatesFromServer(res)));\r\n    }\r\n    private convertCreatedDatesFromServer(res: SubmissionVersion[]): SubmissionVersion[] {\r\n        return res.map((version) => {\r\n            return { ...version, createdDate: convertDateFromServer(version.createdDate)! };\r\n        });\r\n    }\r\n}\r\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, inject, signal } from '@angular/core';\r\nimport { ProgrammingExercise } from 'app/entities/programming/programming-exercise.model';\r\nimport { ProgrammingSubmission } from 'app/entities/programming/programming-submission.model';\r\nimport { FeatureToggle } from 'app/shared/feature-toggle/feature-toggle.service';\r\nimport { ButtonSize } from 'app/shared/components/button.component';\r\nimport { GitDiffReportModalComponent } from 'app/exercises/programming/git-diff-report/git-diff-report-modal.component';\r\nimport { NgbModal, NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ProgrammingExerciseService } from 'app/exercises/programming/manage/services/programming-exercise.service';\r\nimport { Exercise, ExerciseType, IncludedInOverallScore } from 'app/entities/exercise.model';\r\nimport { ExamSubmissionComponent } from 'app/exam/participate/exercises/exam-submission.component';\r\nimport { ProgrammingExerciseStudentParticipation } from 'app/entities/participation/programming-exercise-student-participation.model';\r\nimport { faCodeCompare } from '@fortawesome/free-solid-svg-icons';\r\nimport { ProgrammingExerciseGitDiffReport } from 'app/entities/programming-exercise-git-diff-report.model';\r\nimport { Observable, Subject, Subscription, debounceTime, take } from 'rxjs';\r\nimport { CachedRepositoryFilesService } from 'app/exercises/programming/manage/services/cached-repository-files.service';\r\nimport { IncludedInScoreBadgeComponent } from 'app/exercises/shared/exercise-headers/included-in-score-badge.component';\r\nimport { CommitsInfoComponent } from 'app/exercises/programming/shared/commits-info/commits-info.component';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { GitDiffLineStatComponent } from 'app/exercises/programming/git-diff-report/git-diff-line-stat.component';\r\nimport { ButtonComponent } from 'app/shared/components/button.component';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\nimport { Submission } from 'app/entities/submission.model';\r\nimport { SubmissionVersion } from 'app/entities/submission-version.model';\r\n\r\n@Component({\r\n    selector: 'jhi-programming-exam-diff',\r\n    templateUrl: './programming-exercise-exam-diff.component.html',\r\n    providers: [{ provide: ExamSubmissionComponent, useExisting: ProgrammingExerciseExamDiffComponent }],\r\n    imports: [IncludedInScoreBadgeComponent, CommitsInfoComponent, TranslateDirective, GitDiffLineStatComponent, NgbTooltip, ButtonComponent, ArtemisTranslatePipe],\r\n})\r\nexport class ProgrammingExerciseExamDiffComponent extends ExamSubmissionComponent implements OnInit, OnDestroy {\r\n    private programmingExerciseService = inject(ProgrammingExerciseService);\r\n    private modalService = inject(NgbModal);\r\n    private cachedRepositoryFilesService = inject(CachedRepositoryFilesService);\r\n\r\n    @Input() exercise: ProgrammingExercise;\r\n    @Input() previousSubmission: ProgrammingSubmission | undefined;\r\n    @Input() currentSubmission: ProgrammingSubmission;\r\n    @Input() studentParticipation: ProgrammingExerciseStudentParticipation;\r\n    @Input() submissions: ProgrammingSubmission[];\r\n    @Input() cachedDiffReports: Map<string, ProgrammingExerciseGitDiffReport> = new Map<string, ProgrammingExerciseGitDiffReport>();\r\n    @Output() cachedDiffReportsChange = new EventEmitter<Map<string, ProgrammingExerciseGitDiffReport>>();\r\n    @Input() exerciseIdSubject: Subject<number> = new Subject<number>();\r\n\r\n    isLoadingDiffReport: boolean;\r\n    addedLineCount: number;\r\n    removedLineCount: number;\r\n    cachedRepositoryFiles: Map<string, Map<string, string>> = new Map<string, Map<string, string>>();\r\n    exerciseType = ExerciseType.PROGRAMMING;\r\n\r\n    private exerciseIdSubscription: Subscription;\r\n\r\n    readonly FeatureToggle = FeatureToggle;\r\n    readonly ButtonSize = ButtonSize;\r\n    readonly faCodeCompare = faCodeCompare;\r\n    readonly IncludedInOverallScore = IncludedInOverallScore;\r\n\r\n    ngOnInit() {\r\n        // we subscribe to the exercise id because this allows us to avoid reloading the diff report every time the user switches between submission timestamps\r\n        this.exerciseIdSubscription = this.exerciseIdSubject.pipe(debounceTime(200)).subscribe(() => {\r\n            // we cannot use a tuple of the ids as key because they are only compared by reference, so we have to use this workaround with a string\r\n            const key = this.calculateMapKey();\r\n            if (this.cachedDiffReports.has(key)) {\r\n                const diffReport = this.cachedDiffReports.get(key)!;\r\n                this.assignPropertiesToReportAndCalculateLineCount(diffReport);\r\n            } else {\r\n                this.loadGitDiffReport();\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.exerciseIdSubscription?.unsubscribe();\r\n    }\r\n\r\n    loadGitDiffReport() {\r\n        this.isLoadingDiffReport = true;\r\n        let subscription: Observable<ProgrammingExerciseGitDiffReport | undefined>;\r\n        if (this.previousSubmission) {\r\n            subscription = this.programmingExerciseService.getDiffReportForSubmissions(this.exercise.id!, this.previousSubmission.id!, this.currentSubmission.id!);\r\n        } else {\r\n            // if there is no previous submission, we want to see the diff between the current submission and the template\r\n            subscription = this.programmingExerciseService.getDiffReportForSubmissionWithTemplate(this.exercise.id!, this.currentSubmission.id!);\r\n        }\r\n        const key = this.calculateMapKey();\r\n        subscription.pipe(take(1)).subscribe((gitDiffReport: ProgrammingExerciseGitDiffReport | undefined) => {\r\n            if (gitDiffReport) {\r\n                this.assignPropertiesToReportAndCalculateLineCount(gitDiffReport);\r\n                this.cachedDiffReports.set(key, gitDiffReport);\r\n                this.cachedDiffReportsChange.emit(this.cachedDiffReports);\r\n            }\r\n            this.isLoadingDiffReport = false;\r\n        });\r\n    }\r\n\r\n    private assignPropertiesToReportAndCalculateLineCount(gitDiffReport: ProgrammingExerciseGitDiffReport) {\r\n        this.exercise.gitDiffReport = gitDiffReport;\r\n        gitDiffReport.programmingExercise = this.exercise;\r\n        gitDiffReport.participationIdForLeftCommit = this.previousSubmission?.participation?.id;\r\n        gitDiffReport.participationIdForRightCommit = this.currentSubmission.participation?.id;\r\n        gitDiffReport.leftCommitHash = this.previousSubmission?.commitHash;\r\n        gitDiffReport.rightCommitHash = this.currentSubmission.commitHash;\r\n        this.calculateLineCount(gitDiffReport);\r\n    }\r\n\r\n    /**\r\n     * Calculates the added and removed line count for the given git-diff report.\r\n     * In case the report doesn't contain any entries, the line count is set to 0.\r\n     * @param gitDiffReport the report containing the git diff\r\n     */\r\n    private calculateLineCount(gitDiffReport: ProgrammingExerciseGitDiffReport) {\r\n        this.addedLineCount =\r\n            gitDiffReport?.entries\r\n                ?.map((entry) => entry.lineCount)\r\n                .filter((lineCount) => lineCount)\r\n                .map((lineCount) => lineCount!)\r\n                .reduce((lineCount1, lineCount2) => lineCount1 + lineCount2, 0) ?? 0;\r\n        this.removedLineCount =\r\n            gitDiffReport?.entries\r\n                ?.map((entry) => entry.previousLineCount)\r\n                .filter((lineCount) => lineCount)\r\n                .map((lineCount) => lineCount!)\r\n                .reduce((lineCount1, lineCount2) => lineCount1 + lineCount2, 0) ?? 0;\r\n    }\r\n\r\n    /**\r\n     * Shows the git-diff in a modal.\r\n     */\r\n    showGitDiff(): void {\r\n        const modalRef = this.modalService.open(GitDiffReportModalComponent, { windowClass: GitDiffReportModalComponent.WINDOW_CLASS });\r\n        modalRef.componentInstance.report = signal(this.exercise.gitDiffReport);\r\n        modalRef.componentInstance.diffForTemplateAndSolution = signal(false);\r\n        modalRef.componentInstance.cachedRepositoryFiles = signal(this.cachedRepositoryFiles);\r\n        this.cachedRepositoryFilesService.getCachedRepositoryFilesObservable().subscribe((cachedRepositoryFiles) => {\r\n            this.cachedRepositoryFiles = cachedRepositoryFiles;\r\n        });\r\n    }\r\n\r\n    private calculateMapKey() {\r\n        return JSON.stringify([this.previousSubmission?.id, this.currentSubmission.id!]);\r\n    }\r\n\r\n    getExercise(): Exercise {\r\n        return this.exercise;\r\n    }\r\n\r\n    getExerciseId(): number | undefined {\r\n        return this.exercise.id;\r\n    }\r\n\r\n    getSubmission(): Submission | undefined {\r\n        return this.currentSubmission;\r\n    }\r\n\r\n    hasUnsavedChanges(): boolean {\r\n        return false;\r\n    }\r\n\r\n    setSubmissionVersion(submissionVersion: SubmissionVersion): void {\r\n        this.submissionVersion = submissionVersion;\r\n    }\r\n\r\n    updateSubmissionFromView(): void {}\r\n\r\n    updateViewFromSubmission(): void {}\r\n}\r\n","<h4 class=\"exercise-title\">\r\n    {{ exercise.title }}\r\n    <span\r\n        >[{{ exercise.maxPoints }} {{ 'artemisApp.examParticipation.exercisePoints' | artemisTranslate }}]\r\n        @if (exercise.includedInOverallScore !== IncludedInOverallScore.INCLUDED_COMPLETELY) {\r\n            <jhi-included-in-score-badge [includedInOverallScore]=\"exercise.includedInOverallScore\" />\r\n        }\r\n    </span>\r\n</h4>\r\n<jhi-commits-info\r\n    class=\"mb-2\"\r\n    [currentSubmissionHash]=\"currentSubmission?.commitHash\"\r\n    [previousSubmissionHash]=\"previousSubmission?.commitHash\"\r\n    [participationId]=\"studentParticipation?.id\"\r\n    [submissions]=\"submissions\"\r\n    [exerciseProjectKey]=\"exercise?.projectKey\"\r\n/>\r\n@if (exercise?.gitDiffReport) {\r\n    <div>\r\n        <dt>\r\n            <span\r\n                jhiTranslate=\"artemisApp.programmingExercise.diffReport.lineStatBetweenSubmissionsCurrentSubmissionLabel\"\r\n                [translateValues]=\"{ currentCommitHash: currentSubmission?.commitHash }\"\r\n            ></span>\r\n            @if (previousSubmission) {\r\n                <span\r\n                    jhiTranslate=\"artemisApp.programmingExercise.diffReport.lineStatBetweenSubmissionsPreviousSubmissionLabel\"\r\n                    [translateValues]=\"{ previousCommitHash: previousSubmission?.commitHash }\"\r\n                ></span>\r\n            } @else {\r\n                <span jhiTranslate=\"artemisApp.programmingExercise.diffReport.lineStatBetweenSubmissionsTemplateLabel\"></span>\r\n            }\r\n        </dt>\r\n        <dd>\r\n            <div class=\"fw-bold\">\r\n                <jhi-git-diff-line-stat\r\n                    [addedLineCount]=\"addedLineCount\"\r\n                    [removedLineCount]=\"removedLineCount\"\r\n                    ngbTooltip=\"{{ 'artemisApp.programmingExercise.diffReport.lineStatTooltipExamTimeline' | artemisTranslate }}\"\r\n                />\r\n                @if (addedLineCount > 0 || removedLineCount > 0) {\r\n                    <jhi-button\r\n                        [featureToggle]=\"FeatureToggle.ProgrammingExercises\"\r\n                        [isLoading]=\"isLoadingDiffReport\"\r\n                        [btnSize]=\"ButtonSize.SMALL\"\r\n                        [icon]=\"faCodeCompare\"\r\n                        [title]=\"'artemisApp.programmingExercise.diffReport.button'\"\r\n                        [tooltip]=\"'artemisApp.programmingExercise.diffReport.tooltipBetweenSubmissions'\"\r\n                        (onClick)=\"showGitDiff()\"\r\n                        class=\"ms-2\"\r\n                    />\r\n                }\r\n            </div>\r\n        </dd>\r\n    </div>\r\n}\r\n","import { Directionality } from '@angular/cdk/bidi';\nimport { Platform } from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, ChangeDetectorRef, NgZone, Renderer2, ElementRef, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, ViewChild, ANIMATION_MODULE_TYPE, booleanAttribute, numberAttribute, ViewChildren, ContentChild, ContentChildren, forwardRef, EventEmitter, signal, Directive, Output, NgModule } from '@angular/core';\nimport { RippleState, MatRipple, MAT_RIPPLE_GLOBAL_OPTIONS, _StructuralStylesLoader, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { _CdkPrivateStyleLoader } from '@angular/cdk/private';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\n/**\n * Thumb types: range slider has two thumbs (START, END) whereas single point\n * slider only has one thumb (END).\n */\nconst _c0 = [\"knob\"];\nconst _c1 = [\"valueIndicatorContainer\"];\nfunction MatSliderVisualThumb_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2, 1)(2, \"div\", 5)(3, \"span\", 6);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.valueIndicatorText);\n  }\n}\nconst _c2 = [\"trackActive\"];\nconst _c3 = [\"*\"];\nfunction MatSlider_Conditional_6_Conditional_2_For_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n  if (rf & 2) {\n    const tickMark_r1 = ctx.$implicit;\n    const ɵ$index_14_r2 = ctx.$index;\n    const ctx_r2 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(tickMark_r1 === 0 ? \"mdc-slider__tick-mark--active\" : \"mdc-slider__tick-mark--inactive\");\n    i0.ɵɵstyleProp(\"transform\", ctx_r2._calcTickMarkTransform(ɵ$index_14_r2));\n  }\n}\nfunction MatSlider_Conditional_6_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵrepeaterCreate(0, MatSlider_Conditional_6_Conditional_2_For_1_Template, 1, 4, \"div\", 8, i0.ɵɵrepeaterTrackByIndex);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵrepeater(ctx_r2._tickMarks);\n  }\n}\nfunction MatSlider_Conditional_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6, 1);\n    i0.ɵɵtemplate(2, MatSlider_Conditional_6_Conditional_2_Template, 2, 0);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵconditional(ctx_r2._cachedWidth ? 2 : -1);\n  }\n}\nfunction MatSlider_Conditional_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-slider-visual-thumb\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"discrete\", ctx_r2.discrete)(\"thumbPosition\", 1)(\"valueIndicatorText\", ctx_r2.startValueIndicatorText);\n  }\n}\nvar _MatThumb = /*#__PURE__*/function (_MatThumb) {\n  _MatThumb[_MatThumb[\"START\"] = 1] = \"START\";\n  _MatThumb[_MatThumb[\"END\"] = 2] = \"END\";\n  return _MatThumb;\n}(_MatThumb || {});\n/** Tick mark enum, for discrete sliders. */\nvar _MatTickMark = /*#__PURE__*/function (_MatTickMark) {\n  _MatTickMark[_MatTickMark[\"ACTIVE\"] = 0] = \"ACTIVE\";\n  _MatTickMark[_MatTickMark[\"INACTIVE\"] = 1] = \"INACTIVE\";\n  return _MatTickMark;\n}(_MatTickMark || {});\n/**\n * Injection token that can be used for a `MatSlider` to provide itself as a\n * parent to the `MatSliderThumb` and `MatSliderRangeThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER = /*#__PURE__*/new InjectionToken('_MatSlider');\n/**\n * Injection token that can be used to query for a `MatSliderThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER_THUMB = /*#__PURE__*/new InjectionToken('_MatSliderThumb');\n/**\n * Injection token that can be used to query for a `MatSliderRangeThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER_RANGE_THUMB = /*#__PURE__*/new InjectionToken('_MatSliderRangeThumb');\n/**\n * Injection token that can be used to query for a `MatSliderVisualThumb`.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst MAT_SLIDER_VISUAL_THUMB = /*#__PURE__*/new InjectionToken('_MatSliderVisualThumb');\n/**\n * A simple change event emitted by the MatSlider component.\n * @deprecated Use event bindings directly on the MatSliderThumbs for `change` and `input` events. See https://v17.material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatSliderChange {\n  /** The MatSliderThumb that was interacted with. */\n  source;\n  /** The MatSlider that was interacted with. */\n  parent;\n  /** The new value of the source slider. */\n  value;\n}\n\n/**\n * The visual slider thumb.\n *\n * Handles the slider thumb ripple states (hover, focus, and active),\n * and displaying the value tooltip on discrete sliders.\n * @docs-private\n */\nlet MatSliderVisualThumb = /*#__PURE__*/(() => {\n  class MatSliderVisualThumb {\n    _cdr = inject(ChangeDetectorRef);\n    _ngZone = inject(NgZone);\n    _slider = inject(MAT_SLIDER);\n    _renderer = inject(Renderer2);\n    _listenerCleanups;\n    /** Whether the slider displays a numeric value label upon pressing the thumb. */\n    discrete;\n    /** Indicates which slider thumb this input corresponds to. */\n    thumbPosition;\n    /** The display value of the slider thumb. */\n    valueIndicatorText;\n    /** The MatRipple for this slider thumb. */\n    _ripple;\n    /** The slider thumb knob. */\n    _knob;\n    /** The slider thumb value indicator container. */\n    _valueIndicatorContainer;\n    /** The slider input corresponding to this slider thumb. */\n    _sliderInput;\n    /** The native html element of the slider input corresponding to this thumb. */\n    _sliderInputEl;\n    /** The RippleRef for the slider thumbs hover state. */\n    _hoverRippleRef;\n    /** The RippleRef for the slider thumbs focus state. */\n    _focusRippleRef;\n    /** The RippleRef for the slider thumbs active state. */\n    _activeRippleRef;\n    /** Whether the slider thumb is currently being hovered. */\n    _isHovered = false;\n    /** Whether the slider thumb is currently being pressed. */\n    _isActive = false;\n    /** Whether the value indicator tooltip is visible. */\n    _isValueIndicatorVisible = false;\n    /** The host native HTML input element. */\n    _hostElement = inject(ElementRef).nativeElement;\n    _platform = inject(Platform);\n    constructor() {}\n    ngAfterViewInit() {\n      const sliderInput = this._slider._getInput(this.thumbPosition);\n      // No-op if the slider isn't configured properly. `MatSlider` will\n      // throw an error instructing the user how to set up the slider.\n      if (!sliderInput) {\n        return;\n      }\n      this._ripple.radius = 24;\n      this._sliderInput = sliderInput;\n      this._sliderInputEl = this._sliderInput._hostElement;\n      // These listeners don't update any data bindings so we bind them outside\n      // of the NgZone to prevent Angular from needlessly running change detection.\n      this._ngZone.runOutsideAngular(() => {\n        const input = this._sliderInputEl;\n        const renderer = this._renderer;\n        this._listenerCleanups = [renderer.listen(input, 'pointermove', this._onPointerMove), renderer.listen(input, 'pointerdown', this._onDragStart), renderer.listen(input, 'pointerup', this._onDragEnd), renderer.listen(input, 'pointerleave', this._onMouseLeave), renderer.listen(input, 'focus', this._onFocus), renderer.listen(input, 'blur', this._onBlur)];\n      });\n    }\n    ngOnDestroy() {\n      this._listenerCleanups?.forEach(cleanup => cleanup());\n    }\n    _onPointerMove = event => {\n      if (this._sliderInput._isFocused) {\n        return;\n      }\n      const rect = this._hostElement.getBoundingClientRect();\n      const isHovered = this._slider._isCursorOnSliderThumb(event, rect);\n      this._isHovered = isHovered;\n      if (isHovered) {\n        this._showHoverRipple();\n      } else {\n        this._hideRipple(this._hoverRippleRef);\n      }\n    };\n    _onMouseLeave = () => {\n      this._isHovered = false;\n      this._hideRipple(this._hoverRippleRef);\n    };\n    _onFocus = () => {\n      // We don't want to show the hover ripple on top of the focus ripple.\n      // Happen when the users cursor is over a thumb and then the user tabs to it.\n      this._hideRipple(this._hoverRippleRef);\n      this._showFocusRipple();\n      this._hostElement.classList.add('mdc-slider__thumb--focused');\n    };\n    _onBlur = () => {\n      // Happens when the user tabs away while still dragging a thumb.\n      if (!this._isActive) {\n        this._hideRipple(this._focusRippleRef);\n      }\n      // Happens when the user tabs away from a thumb but their cursor is still over it.\n      if (this._isHovered) {\n        this._showHoverRipple();\n      }\n      this._hostElement.classList.remove('mdc-slider__thumb--focused');\n    };\n    _onDragStart = event => {\n      if (event.button !== 0) {\n        return;\n      }\n      this._isActive = true;\n      this._showActiveRipple();\n    };\n    _onDragEnd = () => {\n      this._isActive = false;\n      this._hideRipple(this._activeRippleRef);\n      // Happens when the user starts dragging a thumb, tabs away, and then stops dragging.\n      if (!this._sliderInput._isFocused) {\n        this._hideRipple(this._focusRippleRef);\n      }\n      // On Safari we need to immediately re-show the hover ripple because\n      // sliders do not retain focus from pointer events on that platform.\n      if (this._platform.SAFARI) {\n        this._showHoverRipple();\n      }\n    };\n    /** Handles displaying the hover ripple. */\n    _showHoverRipple() {\n      if (!this._isShowingRipple(this._hoverRippleRef)) {\n        this._hoverRippleRef = this._showRipple({\n          enterDuration: 0,\n          exitDuration: 0\n        });\n        this._hoverRippleRef?.element.classList.add('mat-mdc-slider-hover-ripple');\n      }\n    }\n    /** Handles displaying the focus ripple. */\n    _showFocusRipple() {\n      // Show the focus ripple event if noop animations are enabled.\n      if (!this._isShowingRipple(this._focusRippleRef)) {\n        this._focusRippleRef = this._showRipple({\n          enterDuration: 0,\n          exitDuration: 0\n        }, true);\n        this._focusRippleRef?.element.classList.add('mat-mdc-slider-focus-ripple');\n      }\n    }\n    /** Handles displaying the active ripple. */\n    _showActiveRipple() {\n      if (!this._isShowingRipple(this._activeRippleRef)) {\n        this._activeRippleRef = this._showRipple({\n          enterDuration: 225,\n          exitDuration: 400\n        });\n        this._activeRippleRef?.element.classList.add('mat-mdc-slider-active-ripple');\n      }\n    }\n    /** Whether the given rippleRef is currently fading in or visible. */\n    _isShowingRipple(rippleRef) {\n      return rippleRef?.state === RippleState.FADING_IN || rippleRef?.state === RippleState.VISIBLE;\n    }\n    /** Manually launches the slider thumb ripple using the specified ripple animation config. */\n    _showRipple(animation, ignoreGlobalRippleConfig) {\n      if (this._slider.disabled) {\n        return;\n      }\n      this._showValueIndicator();\n      if (this._slider._isRange) {\n        const sibling = this._slider._getThumb(this.thumbPosition === _MatThumb.START ? _MatThumb.END : _MatThumb.START);\n        sibling._showValueIndicator();\n      }\n      if (this._slider._globalRippleOptions?.disabled && !ignoreGlobalRippleConfig) {\n        return;\n      }\n      return this._ripple.launch({\n        animation: this._slider._noopAnimations ? {\n          enterDuration: 0,\n          exitDuration: 0\n        } : animation,\n        centered: true,\n        persistent: true\n      });\n    }\n    /**\n     * Fades out the given ripple.\n     * Also hides the value indicator if no ripple is showing.\n     */\n    _hideRipple(rippleRef) {\n      rippleRef?.fadeOut();\n      if (this._isShowingAnyRipple()) {\n        return;\n      }\n      if (!this._slider._isRange) {\n        this._hideValueIndicator();\n      }\n      const sibling = this._getSibling();\n      if (!sibling._isShowingAnyRipple()) {\n        this._hideValueIndicator();\n        sibling._hideValueIndicator();\n      }\n    }\n    /** Shows the value indicator ui. */\n    _showValueIndicator() {\n      this._hostElement.classList.add('mdc-slider__thumb--with-indicator');\n    }\n    /** Hides the value indicator ui. */\n    _hideValueIndicator() {\n      this._hostElement.classList.remove('mdc-slider__thumb--with-indicator');\n    }\n    _getSibling() {\n      return this._slider._getThumb(this.thumbPosition === _MatThumb.START ? _MatThumb.END : _MatThumb.START);\n    }\n    /** Gets the value indicator container's native HTML element. */\n    _getValueIndicatorContainer() {\n      return this._valueIndicatorContainer?.nativeElement;\n    }\n    /** Gets the native HTML element of the slider thumb knob. */\n    _getKnob() {\n      return this._knob.nativeElement;\n    }\n    _isShowingAnyRipple() {\n      return this._isShowingRipple(this._hoverRippleRef) || this._isShowingRipple(this._focusRippleRef) || this._isShowingRipple(this._activeRippleRef);\n    }\n    static ɵfac = function MatSliderVisualThumb_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatSliderVisualThumb)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatSliderVisualThumb,\n      selectors: [[\"mat-slider-visual-thumb\"]],\n      viewQuery: function MatSliderVisualThumb_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(MatRipple, 5);\n          i0.ɵɵviewQuery(_c0, 5);\n          i0.ɵɵviewQuery(_c1, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._ripple = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._knob = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._valueIndicatorContainer = _t.first);\n        }\n      },\n      hostAttrs: [1, \"mdc-slider__thumb\", \"mat-mdc-slider-visual-thumb\"],\n      inputs: {\n        discrete: \"discrete\",\n        thumbPosition: \"thumbPosition\",\n        valueIndicatorText: \"valueIndicatorText\"\n      },\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_SLIDER_VISUAL_THUMB,\n        useExisting: MatSliderVisualThumb\n      }])],\n      decls: 4,\n      vars: 2,\n      consts: [[\"knob\", \"\"], [\"valueIndicatorContainer\", \"\"], [1, \"mdc-slider__value-indicator-container\"], [1, \"mdc-slider__thumb-knob\"], [\"matRipple\", \"\", 1, \"mat-focus-indicator\", 3, \"matRippleDisabled\"], [1, \"mdc-slider__value-indicator\"], [1, \"mdc-slider__value-indicator-text\"]],\n      template: function MatSliderVisualThumb_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, MatSliderVisualThumb_Conditional_0_Template, 5, 1, \"div\", 2);\n          i0.ɵɵelement(1, \"div\", 3, 0)(3, \"div\", 4);\n        }\n        if (rf & 2) {\n          i0.ɵɵconditional(ctx.discrete ? 0 : -1);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"matRippleDisabled\", true);\n        }\n      },\n      dependencies: [MatRipple],\n      styles: [\".mat-mdc-slider-visual-thumb .mat-ripple{height:100%;width:100%}.mat-mdc-slider .mdc-slider__tick-marks{justify-content:start}.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--active,.mat-mdc-slider .mdc-slider__tick-marks .mdc-slider__tick-mark--inactive{position:absolute;left:2px}\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return MatSliderVisualThumb;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// TODO(wagnermaciel): maybe handle the following edge case:\n// 1. start dragging discrete slider\n// 2. tab to disable checkbox\n// 3. without ending drag, disable the slider\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\nlet MatSlider = /*#__PURE__*/(() => {\n  class MatSlider {\n    _ngZone = inject(NgZone);\n    _cdr = inject(ChangeDetectorRef);\n    _elementRef = inject(ElementRef);\n    _dir = inject(Directionality, {\n      optional: true\n    });\n    _globalRippleOptions = inject(MAT_RIPPLE_GLOBAL_OPTIONS, {\n      optional: true\n    });\n    /** The active portion of the slider track. */\n    _trackActive;\n    /** The slider thumb(s). */\n    _thumbs;\n    /** The sliders hidden range input(s). */\n    _input;\n    /** The sliders hidden range input(s). */\n    _inputs;\n    /** Whether the slider is disabled. */\n    get disabled() {\n      return this._disabled;\n    }\n    set disabled(v) {\n      this._disabled = v;\n      const endInput = this._getInput(_MatThumb.END);\n      const startInput = this._getInput(_MatThumb.START);\n      if (endInput) {\n        endInput.disabled = this._disabled;\n      }\n      if (startInput) {\n        startInput.disabled = this._disabled;\n      }\n    }\n    _disabled = false;\n    /** Whether the slider displays a numeric value label upon pressing the thumb. */\n    get discrete() {\n      return this._discrete;\n    }\n    set discrete(v) {\n      this._discrete = v;\n      this._updateValueIndicatorUIs();\n    }\n    _discrete = false;\n    /** Whether the slider displays tick marks along the slider track. */\n    showTickMarks = false;\n    /** The minimum value that the slider can have. */\n    get min() {\n      return this._min;\n    }\n    set min(v) {\n      const min = isNaN(v) ? this._min : v;\n      if (this._min !== min) {\n        this._updateMin(min);\n      }\n    }\n    _min = 0;\n    /**\n     * Theme color of the slider. This API is supported in M2 themes only, it\n     * has no effect in M3 themes. For color customization in M3, see https://material.angular.io/components/slider/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.io/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    color;\n    /** Whether ripples are disabled in the slider. */\n    disableRipple = false;\n    _updateMin(min) {\n      const prevMin = this._min;\n      this._min = min;\n      this._isRange ? this._updateMinRange({\n        old: prevMin,\n        new: min\n      }) : this._updateMinNonRange(min);\n      this._onMinMaxOrStepChange();\n    }\n    _updateMinRange(min) {\n      const endInput = this._getInput(_MatThumb.END);\n      const startInput = this._getInput(_MatThumb.START);\n      const oldEndValue = endInput.value;\n      const oldStartValue = startInput.value;\n      startInput.min = min.new;\n      endInput.min = Math.max(min.new, startInput.value);\n      startInput.max = Math.min(endInput.max, endInput.value);\n      startInput._updateWidthInactive();\n      endInput._updateWidthInactive();\n      min.new < min.old ? this._onTranslateXChangeBySideEffect(endInput, startInput) : this._onTranslateXChangeBySideEffect(startInput, endInput);\n      if (oldEndValue !== endInput.value) {\n        this._onValueChange(endInput);\n      }\n      if (oldStartValue !== startInput.value) {\n        this._onValueChange(startInput);\n      }\n    }\n    _updateMinNonRange(min) {\n      const input = this._getInput(_MatThumb.END);\n      if (input) {\n        const oldValue = input.value;\n        input.min = min;\n        input._updateThumbUIByValue();\n        this._updateTrackUI(input);\n        if (oldValue !== input.value) {\n          this._onValueChange(input);\n        }\n      }\n    }\n    /** The maximum value that the slider can have. */\n    get max() {\n      return this._max;\n    }\n    set max(v) {\n      const max = isNaN(v) ? this._max : v;\n      if (this._max !== max) {\n        this._updateMax(max);\n      }\n    }\n    _max = 100;\n    _updateMax(max) {\n      const prevMax = this._max;\n      this._max = max;\n      this._isRange ? this._updateMaxRange({\n        old: prevMax,\n        new: max\n      }) : this._updateMaxNonRange(max);\n      this._onMinMaxOrStepChange();\n    }\n    _updateMaxRange(max) {\n      const endInput = this._getInput(_MatThumb.END);\n      const startInput = this._getInput(_MatThumb.START);\n      const oldEndValue = endInput.value;\n      const oldStartValue = startInput.value;\n      endInput.max = max.new;\n      startInput.max = Math.min(max.new, endInput.value);\n      endInput.min = startInput.value;\n      endInput._updateWidthInactive();\n      startInput._updateWidthInactive();\n      max.new > max.old ? this._onTranslateXChangeBySideEffect(startInput, endInput) : this._onTranslateXChangeBySideEffect(endInput, startInput);\n      if (oldEndValue !== endInput.value) {\n        this._onValueChange(endInput);\n      }\n      if (oldStartValue !== startInput.value) {\n        this._onValueChange(startInput);\n      }\n    }\n    _updateMaxNonRange(max) {\n      const input = this._getInput(_MatThumb.END);\n      if (input) {\n        const oldValue = input.value;\n        input.max = max;\n        input._updateThumbUIByValue();\n        this._updateTrackUI(input);\n        if (oldValue !== input.value) {\n          this._onValueChange(input);\n        }\n      }\n    }\n    /** The values at which the thumb will snap. */\n    get step() {\n      return this._step;\n    }\n    set step(v) {\n      const step = isNaN(v) ? this._step : v;\n      if (this._step !== step) {\n        this._updateStep(step);\n      }\n    }\n    _step = 1;\n    _updateStep(step) {\n      this._step = step;\n      this._isRange ? this._updateStepRange() : this._updateStepNonRange();\n      this._onMinMaxOrStepChange();\n    }\n    _updateStepRange() {\n      const endInput = this._getInput(_MatThumb.END);\n      const startInput = this._getInput(_MatThumb.START);\n      const oldEndValue = endInput.value;\n      const oldStartValue = startInput.value;\n      const prevStartValue = startInput.value;\n      endInput.min = this._min;\n      startInput.max = this._max;\n      endInput.step = this._step;\n      startInput.step = this._step;\n      if (this._platform.SAFARI) {\n        endInput.value = endInput.value;\n        startInput.value = startInput.value;\n      }\n      endInput.min = Math.max(this._min, startInput.value);\n      startInput.max = Math.min(this._max, endInput.value);\n      startInput._updateWidthInactive();\n      endInput._updateWidthInactive();\n      endInput.value < prevStartValue ? this._onTranslateXChangeBySideEffect(startInput, endInput) : this._onTranslateXChangeBySideEffect(endInput, startInput);\n      if (oldEndValue !== endInput.value) {\n        this._onValueChange(endInput);\n      }\n      if (oldStartValue !== startInput.value) {\n        this._onValueChange(startInput);\n      }\n    }\n    _updateStepNonRange() {\n      const input = this._getInput(_MatThumb.END);\n      if (input) {\n        const oldValue = input.value;\n        input.step = this._step;\n        if (this._platform.SAFARI) {\n          input.value = input.value;\n        }\n        input._updateThumbUIByValue();\n        if (oldValue !== input.value) {\n          this._onValueChange(input);\n        }\n      }\n    }\n    /**\n     * Function that will be used to format the value before it is displayed\n     * in the thumb label. Can be used to format very large number in order\n     * for them to fit into the slider thumb.\n     */\n    displayWith = value => `${value}`;\n    /** Used to keep track of & render the active & inactive tick marks on the slider track. */\n    _tickMarks;\n    /** Whether animations have been disabled. */\n    _noopAnimations;\n    /** Subscription to changes to the directionality (LTR / RTL) context for the application. */\n    _dirChangeSubscription;\n    /** Observer used to monitor size changes in the slider. */\n    _resizeObserver;\n    // Stored dimensions to avoid calling getBoundingClientRect redundantly.\n    _cachedWidth;\n    _cachedLeft;\n    _rippleRadius = 24;\n    // The value indicator tooltip text for the visual slider thumb(s).\n    /** @docs-private */\n    startValueIndicatorText = '';\n    /** @docs-private */\n    endValueIndicatorText = '';\n    // Used to control the translateX of the visual slider thumb(s).\n    _endThumbTransform;\n    _startThumbTransform;\n    _isRange = false;\n    /** Whether the slider is rtl. */\n    _isRtl = false;\n    _hasViewInitialized = false;\n    /**\n     * The width of the tick mark track.\n     * The tick mark track width is different from full track width\n     */\n    _tickMarkTrackWidth = 0;\n    _hasAnimation = false;\n    _resizeTimer = null;\n    _platform = inject(Platform);\n    constructor() {\n      inject(_CdkPrivateStyleLoader).load(_StructuralStylesLoader);\n      const animationMode = inject(ANIMATION_MODULE_TYPE, {\n        optional: true\n      });\n      this._noopAnimations = animationMode === 'NoopAnimations';\n      if (this._dir) {\n        this._dirChangeSubscription = this._dir.change.subscribe(() => this._onDirChange());\n        this._isRtl = this._dir.value === 'rtl';\n      }\n    }\n    /** The radius of the native slider's knob. AFAIK there is no way to avoid hardcoding this. */\n    _knobRadius = 8;\n    _inputPadding;\n    ngAfterViewInit() {\n      if (this._platform.isBrowser) {\n        this._updateDimensions();\n      }\n      const eInput = this._getInput(_MatThumb.END);\n      const sInput = this._getInput(_MatThumb.START);\n      this._isRange = !!eInput && !!sInput;\n      this._cdr.detectChanges();\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        _validateInputs(this._isRange, this._getInput(_MatThumb.END), this._getInput(_MatThumb.START));\n      }\n      const thumb = this._getThumb(_MatThumb.END);\n      this._rippleRadius = thumb._ripple.radius;\n      this._inputPadding = this._rippleRadius - this._knobRadius;\n      this._isRange ? this._initUIRange(eInput, sInput) : this._initUINonRange(eInput);\n      this._updateTrackUI(eInput);\n      this._updateTickMarkUI();\n      this._updateTickMarkTrackUI();\n      this._observeHostResize();\n      this._cdr.detectChanges();\n    }\n    _initUINonRange(eInput) {\n      eInput.initProps();\n      eInput.initUI();\n      this._updateValueIndicatorUI(eInput);\n      this._hasViewInitialized = true;\n      eInput._updateThumbUIByValue();\n    }\n    _initUIRange(eInput, sInput) {\n      eInput.initProps();\n      eInput.initUI();\n      sInput.initProps();\n      sInput.initUI();\n      eInput._updateMinMax();\n      sInput._updateMinMax();\n      eInput._updateStaticStyles();\n      sInput._updateStaticStyles();\n      this._updateValueIndicatorUIs();\n      this._hasViewInitialized = true;\n      eInput._updateThumbUIByValue();\n      sInput._updateThumbUIByValue();\n    }\n    ngOnDestroy() {\n      this._dirChangeSubscription.unsubscribe();\n      this._resizeObserver?.disconnect();\n      this._resizeObserver = null;\n    }\n    /** Handles updating the slider ui after a dir change. */\n    _onDirChange() {\n      this._isRtl = this._dir?.value === 'rtl';\n      this._isRange ? this._onDirChangeRange() : this._onDirChangeNonRange();\n      this._updateTickMarkUI();\n    }\n    _onDirChangeRange() {\n      const endInput = this._getInput(_MatThumb.END);\n      const startInput = this._getInput(_MatThumb.START);\n      endInput._setIsLeftThumb();\n      startInput._setIsLeftThumb();\n      endInput.translateX = endInput._calcTranslateXByValue();\n      startInput.translateX = startInput._calcTranslateXByValue();\n      endInput._updateStaticStyles();\n      startInput._updateStaticStyles();\n      endInput._updateWidthInactive();\n      startInput._updateWidthInactive();\n      endInput._updateThumbUIByValue();\n      startInput._updateThumbUIByValue();\n    }\n    _onDirChangeNonRange() {\n      const input = this._getInput(_MatThumb.END);\n      input._updateThumbUIByValue();\n    }\n    /** Starts observing and updating the slider if the host changes its size. */\n    _observeHostResize() {\n      if (typeof ResizeObserver === 'undefined' || !ResizeObserver) {\n        return;\n      }\n      this._ngZone.runOutsideAngular(() => {\n        this._resizeObserver = new ResizeObserver(() => {\n          if (this._isActive()) {\n            return;\n          }\n          if (this._resizeTimer) {\n            clearTimeout(this._resizeTimer);\n          }\n          this._onResize();\n        });\n        this._resizeObserver.observe(this._elementRef.nativeElement);\n      });\n    }\n    /** Whether any of the thumbs are currently active. */\n    _isActive() {\n      return this._getThumb(_MatThumb.START)._isActive || this._getThumb(_MatThumb.END)._isActive;\n    }\n    _getValue(thumbPosition = _MatThumb.END) {\n      const input = this._getInput(thumbPosition);\n      if (!input) {\n        return this.min;\n      }\n      return input.value;\n    }\n    _skipUpdate() {\n      return !!(this._getInput(_MatThumb.START)?._skipUIUpdate || this._getInput(_MatThumb.END)?._skipUIUpdate);\n    }\n    /** Stores the slider dimensions. */\n    _updateDimensions() {\n      this._cachedWidth = this._elementRef.nativeElement.offsetWidth;\n      this._cachedLeft = this._elementRef.nativeElement.getBoundingClientRect().left;\n    }\n    /** Sets the styles for the active portion of the track. */\n    _setTrackActiveStyles(styles) {\n      const trackStyle = this._trackActive.nativeElement.style;\n      trackStyle.left = styles.left;\n      trackStyle.right = styles.right;\n      trackStyle.transformOrigin = styles.transformOrigin;\n      trackStyle.transform = styles.transform;\n    }\n    /** Returns the translateX positioning for a tick mark based on it's index. */\n    _calcTickMarkTransform(index) {\n      // TODO(wagnermaciel): See if we can avoid doing this and just using flex to position these.\n      const offset = index * (this._tickMarkTrackWidth / (this._tickMarks.length - 1));\n      const translateX = this._isRtl ? this._cachedWidth - 6 - offset : offset;\n      return `translateX(${translateX}px`;\n    }\n    // Handlers for updating the slider ui.\n    _onTranslateXChange(source) {\n      if (!this._hasViewInitialized) {\n        return;\n      }\n      this._updateThumbUI(source);\n      this._updateTrackUI(source);\n      this._updateOverlappingThumbUI(source);\n    }\n    _onTranslateXChangeBySideEffect(input1, input2) {\n      if (!this._hasViewInitialized) {\n        return;\n      }\n      input1._updateThumbUIByValue();\n      input2._updateThumbUIByValue();\n    }\n    _onValueChange(source) {\n      if (!this._hasViewInitialized) {\n        return;\n      }\n      this._updateValueIndicatorUI(source);\n      this._updateTickMarkUI();\n      this._cdr.detectChanges();\n    }\n    _onMinMaxOrStepChange() {\n      if (!this._hasViewInitialized) {\n        return;\n      }\n      this._updateTickMarkUI();\n      this._updateTickMarkTrackUI();\n      this._cdr.markForCheck();\n    }\n    _onResize() {\n      if (!this._hasViewInitialized) {\n        return;\n      }\n      this._updateDimensions();\n      if (this._isRange) {\n        const eInput = this._getInput(_MatThumb.END);\n        const sInput = this._getInput(_MatThumb.START);\n        eInput._updateThumbUIByValue();\n        sInput._updateThumbUIByValue();\n        eInput._updateStaticStyles();\n        sInput._updateStaticStyles();\n        eInput._updateMinMax();\n        sInput._updateMinMax();\n        eInput._updateWidthInactive();\n        sInput._updateWidthInactive();\n      } else {\n        const eInput = this._getInput(_MatThumb.END);\n        if (eInput) {\n          eInput._updateThumbUIByValue();\n        }\n      }\n      this._updateTickMarkUI();\n      this._updateTickMarkTrackUI();\n      this._cdr.detectChanges();\n    }\n    /** Whether or not the slider thumbs overlap. */\n    _thumbsOverlap = false;\n    /** Returns true if the slider knobs are overlapping one another. */\n    _areThumbsOverlapping() {\n      const startInput = this._getInput(_MatThumb.START);\n      const endInput = this._getInput(_MatThumb.END);\n      if (!startInput || !endInput) {\n        return false;\n      }\n      return endInput.translateX - startInput.translateX < 20;\n    }\n    /**\n     * Updates the class names of overlapping slider thumbs so\n     * that the current active thumb is styled to be on \"top\".\n     */\n    _updateOverlappingThumbClassNames(source) {\n      const sibling = source.getSibling();\n      const sourceThumb = this._getThumb(source.thumbPosition);\n      const siblingThumb = this._getThumb(sibling.thumbPosition);\n      siblingThumb._hostElement.classList.remove('mdc-slider__thumb--top');\n      sourceThumb._hostElement.classList.toggle('mdc-slider__thumb--top', this._thumbsOverlap);\n    }\n    /** Updates the UI of slider thumbs when they begin or stop overlapping. */\n    _updateOverlappingThumbUI(source) {\n      if (!this._isRange || this._skipUpdate()) {\n        return;\n      }\n      if (this._thumbsOverlap !== this._areThumbsOverlapping()) {\n        this._thumbsOverlap = !this._thumbsOverlap;\n        this._updateOverlappingThumbClassNames(source);\n      }\n    }\n    // _MatThumb styles update conditions\n    //\n    // 1. TranslateX, resize, or dir change\n    //    - Reason: The thumb styles need to be updated according to the new translateX.\n    // 2. Min, max, or step\n    //    - Reason: The value may have silently changed.\n    /** Updates the translateX of the given thumb. */\n    _updateThumbUI(source) {\n      if (this._skipUpdate()) {\n        return;\n      }\n      const thumb = this._getThumb(source.thumbPosition === _MatThumb.END ? _MatThumb.END : _MatThumb.START);\n      thumb._hostElement.style.transform = `translateX(${source.translateX}px)`;\n    }\n    // Value indicator text update conditions\n    //\n    // 1. Value\n    //    - Reason: The value displayed needs to be updated.\n    // 2. Min, max, or step\n    //    - Reason: The value may have silently changed.\n    /** Updates the value indicator tooltip ui for the given thumb. */\n    _updateValueIndicatorUI(source) {\n      if (this._skipUpdate()) {\n        return;\n      }\n      const valuetext = this.displayWith(source.value);\n      this._hasViewInitialized ? source._valuetext.set(valuetext) : source._hostElement.setAttribute('aria-valuetext', valuetext);\n      if (this.discrete) {\n        source.thumbPosition === _MatThumb.START ? this.startValueIndicatorText = valuetext : this.endValueIndicatorText = valuetext;\n        const visualThumb = this._getThumb(source.thumbPosition);\n        valuetext.length < 3 ? visualThumb._hostElement.classList.add('mdc-slider__thumb--short-value') : visualThumb._hostElement.classList.remove('mdc-slider__thumb--short-value');\n      }\n    }\n    /** Updates all value indicator UIs in the slider. */\n    _updateValueIndicatorUIs() {\n      const eInput = this._getInput(_MatThumb.END);\n      const sInput = this._getInput(_MatThumb.START);\n      if (eInput) {\n        this._updateValueIndicatorUI(eInput);\n      }\n      if (sInput) {\n        this._updateValueIndicatorUI(sInput);\n      }\n    }\n    // Update Tick Mark Track Width\n    //\n    // 1. Min, max, or step\n    //    - Reason: The maximum reachable value may have changed.\n    //    - Side note: The maximum reachable value is different from the maximum value set by the\n    //      user. For example, a slider with [min: 5, max: 100, step: 10] would have a maximum\n    //      reachable value of 95.\n    // 2. Resize\n    //    - Reason: The position for the maximum reachable value needs to be recalculated.\n    /** Updates the width of the tick mark track. */\n    _updateTickMarkTrackUI() {\n      if (!this.showTickMarks || this._skipUpdate()) {\n        return;\n      }\n      const step = this._step && this._step > 0 ? this._step : 1;\n      const maxValue = Math.floor(this.max / step) * step;\n      const percentage = (maxValue - this.min) / (this.max - this.min);\n      this._tickMarkTrackWidth = (this._cachedWidth - 6) * percentage;\n    }\n    // Track active update conditions\n    //\n    // 1. TranslateX\n    //    - Reason: The track active should line up with the new thumb position.\n    // 2. Min or max\n    //    - Reason #1: The 'active' percentage needs to be recalculated.\n    //    - Reason #2: The value may have silently changed.\n    // 3. Step\n    //    - Reason: The value may have silently changed causing the thumb(s) to shift.\n    // 4. Dir change\n    //    - Reason: The track active will need to be updated according to the new thumb position(s).\n    // 5. Resize\n    //    - Reason: The total width the 'active' tracks translateX is based on has changed.\n    /** Updates the scale on the active portion of the track. */\n    _updateTrackUI(source) {\n      if (this._skipUpdate()) {\n        return;\n      }\n      this._isRange ? this._updateTrackUIRange(source) : this._updateTrackUINonRange(source);\n    }\n    _updateTrackUIRange(source) {\n      const sibling = source.getSibling();\n      if (!sibling || !this._cachedWidth) {\n        return;\n      }\n      const activePercentage = Math.abs(sibling.translateX - source.translateX) / this._cachedWidth;\n      if (source._isLeftThumb && this._cachedWidth) {\n        this._setTrackActiveStyles({\n          left: 'auto',\n          right: `${this._cachedWidth - sibling.translateX}px`,\n          transformOrigin: 'right',\n          transform: `scaleX(${activePercentage})`\n        });\n      } else {\n        this._setTrackActiveStyles({\n          left: `${sibling.translateX}px`,\n          right: 'auto',\n          transformOrigin: 'left',\n          transform: `scaleX(${activePercentage})`\n        });\n      }\n    }\n    _updateTrackUINonRange(source) {\n      this._isRtl ? this._setTrackActiveStyles({\n        left: 'auto',\n        right: '0px',\n        transformOrigin: 'right',\n        transform: `scaleX(${1 - source.fillPercentage})`\n      }) : this._setTrackActiveStyles({\n        left: '0px',\n        right: 'auto',\n        transformOrigin: 'left',\n        transform: `scaleX(${source.fillPercentage})`\n      });\n    }\n    // Tick mark update conditions\n    //\n    // 1. Value\n    //    - Reason: a tick mark which was once active might now be inactive or vice versa.\n    // 2. Min, max, or step\n    //    - Reason #1: the number of tick marks may have changed.\n    //    - Reason #2: The value may have silently changed.\n    /** Updates the dots along the slider track. */\n    _updateTickMarkUI() {\n      if (!this.showTickMarks || this.step === undefined || this.min === undefined || this.max === undefined) {\n        return;\n      }\n      const step = this.step > 0 ? this.step : 1;\n      this._isRange ? this._updateTickMarkUIRange(step) : this._updateTickMarkUINonRange(step);\n    }\n    _updateTickMarkUINonRange(step) {\n      const value = this._getValue();\n      let numActive = Math.max(Math.round((value - this.min) / step), 0) + 1;\n      let numInactive = Math.max(Math.round((this.max - value) / step), 0) - 1;\n      this._isRtl ? numActive++ : numInactive++;\n      this._tickMarks = Array(numActive).fill(_MatTickMark.ACTIVE).concat(Array(numInactive).fill(_MatTickMark.INACTIVE));\n    }\n    _updateTickMarkUIRange(step) {\n      const endValue = this._getValue();\n      const startValue = this._getValue(_MatThumb.START);\n      const numInactiveBeforeStartThumb = Math.max(Math.round((startValue - this.min) / step), 0);\n      const numActive = Math.max(Math.round((endValue - startValue) / step) + 1, 0);\n      const numInactiveAfterEndThumb = Math.max(Math.round((this.max - endValue) / step), 0);\n      this._tickMarks = Array(numInactiveBeforeStartThumb).fill(_MatTickMark.INACTIVE).concat(Array(numActive).fill(_MatTickMark.ACTIVE), Array(numInactiveAfterEndThumb).fill(_MatTickMark.INACTIVE));\n    }\n    /** Gets the slider thumb input of the given thumb position. */\n    _getInput(thumbPosition) {\n      if (thumbPosition === _MatThumb.END && this._input) {\n        return this._input;\n      }\n      if (this._inputs?.length) {\n        return thumbPosition === _MatThumb.START ? this._inputs.first : this._inputs.last;\n      }\n      return;\n    }\n    /** Gets the slider thumb HTML input element of the given thumb position. */\n    _getThumb(thumbPosition) {\n      return thumbPosition === _MatThumb.END ? this._thumbs?.last : this._thumbs?.first;\n    }\n    _setTransition(withAnimation) {\n      this._hasAnimation = !this._platform.IOS && withAnimation && !this._noopAnimations;\n      this._elementRef.nativeElement.classList.toggle('mat-mdc-slider-with-animation', this._hasAnimation);\n    }\n    /** Whether the given pointer event occurred within the bounds of the slider pointer's DOM Rect. */\n    _isCursorOnSliderThumb(event, rect) {\n      const radius = rect.width / 2;\n      const centerX = rect.x + radius;\n      const centerY = rect.y + radius;\n      const dx = event.clientX - centerX;\n      const dy = event.clientY - centerY;\n      return Math.pow(dx, 2) + Math.pow(dy, 2) < Math.pow(radius, 2);\n    }\n    static ɵfac = function MatSlider_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatSlider)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatSlider,\n      selectors: [[\"mat-slider\"]],\n      contentQueries: function MatSlider_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MAT_SLIDER_THUMB, 5);\n          i0.ɵɵcontentQuery(dirIndex, MAT_SLIDER_RANGE_THUMB, 4);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._input = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._inputs = _t);\n        }\n      },\n      viewQuery: function MatSlider_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c2, 5);\n          i0.ɵɵviewQuery(MAT_SLIDER_VISUAL_THUMB, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._trackActive = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._thumbs = _t);\n        }\n      },\n      hostAttrs: [1, \"mat-mdc-slider\", \"mdc-slider\"],\n      hostVars: 12,\n      hostBindings: function MatSlider_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassMap(\"mat-\" + (ctx.color || \"primary\"));\n          i0.ɵɵclassProp(\"mdc-slider--range\", ctx._isRange)(\"mdc-slider--disabled\", ctx.disabled)(\"mdc-slider--discrete\", ctx.discrete)(\"mdc-slider--tick-marks\", ctx.showTickMarks)(\"_mat-animation-noopable\", ctx._noopAnimations);\n        }\n      },\n      inputs: {\n        disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n        discrete: [2, \"discrete\", \"discrete\", booleanAttribute],\n        showTickMarks: [2, \"showTickMarks\", \"showTickMarks\", booleanAttribute],\n        min: [2, \"min\", \"min\", numberAttribute],\n        color: \"color\",\n        disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n        max: [2, \"max\", \"max\", numberAttribute],\n        step: [2, \"step\", \"step\", numberAttribute],\n        displayWith: \"displayWith\"\n      },\n      exportAs: [\"matSlider\"],\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_SLIDER,\n        useExisting: MatSlider\n      }])],\n      ngContentSelectors: _c3,\n      decls: 9,\n      vars: 5,\n      consts: [[\"trackActive\", \"\"], [\"tickMarkContainer\", \"\"], [1, \"mdc-slider__track\"], [1, \"mdc-slider__track--inactive\"], [1, \"mdc-slider__track--active\"], [1, \"mdc-slider__track--active_fill\"], [1, \"mdc-slider__tick-marks\"], [3, \"discrete\", \"thumbPosition\", \"valueIndicatorText\"], [3, \"class\", \"transform\"]],\n      template: function MatSlider_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵprojection(0);\n          i0.ɵɵelementStart(1, \"div\", 2);\n          i0.ɵɵelement(2, \"div\", 3);\n          i0.ɵɵelementStart(3, \"div\", 4);\n          i0.ɵɵelement(4, \"div\", 5, 0);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(6, MatSlider_Conditional_6_Template, 3, 1, \"div\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(7, MatSlider_Conditional_7_Template, 1, 3, \"mat-slider-visual-thumb\", 7);\n          i0.ɵɵelement(8, \"mat-slider-visual-thumb\", 7);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵconditional(ctx.showTickMarks ? 6 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(ctx._isRange ? 7 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"discrete\", ctx.discrete)(\"thumbPosition\", 2)(\"valueIndicatorText\", ctx.endValueIndicatorText);\n        }\n      },\n      dependencies: [MatSliderVisualThumb],\n      styles: [\".mdc-slider__track{position:absolute;top:50%;transform:translateY(-50%);width:100%;pointer-events:none;height:var(--mdc-slider-inactive-track-height, 4px)}.mdc-slider__track--active,.mdc-slider__track--inactive{display:flex;height:100%;position:absolute;width:100%}.mdc-slider__track--active{overflow:hidden;border-radius:var(--mdc-slider-active-track-shape, var(--mat-sys-corner-full));height:var(--mdc-slider-active-track-height, 4px);top:calc((var(--mdc-slider-inactive-track-height, 4px) - var(--mdc-slider-active-track-height, 4px))/2)}.mdc-slider__track--active_fill{border-top-style:solid;box-sizing:border-box;height:100%;width:100%;position:relative;transform-origin:left;transition:transform 80ms ease;border-color:var(--mdc-slider-active-track-color, var(--mat-sys-primary));border-top-width:var(--mdc-slider-active-track-height, 4px)}.mdc-slider--disabled .mdc-slider__track--active_fill{border-color:var(--mdc-slider-disabled-active-track-color, var(--mat-sys-on-surface))}[dir=rtl] .mdc-slider__track--active_fill{-webkit-transform-origin:right;transform-origin:right}.mdc-slider__track--inactive{left:0;top:0;opacity:.24;background-color:var(--mdc-slider-inactive-track-color, var(--mat-sys-surface-variant));height:var(--mdc-slider-inactive-track-height, 4px);border-radius:var(--mdc-slider-inactive-track-shape, var(--mat-sys-corner-full))}.mdc-slider--disabled .mdc-slider__track--inactive{background-color:var(--mdc-slider-disabled-inactive-track-color, var(--mat-sys-on-surface));opacity:.24}.mdc-slider__track--inactive::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media(forced-colors: active){.mdc-slider__track--inactive::before{border-color:CanvasText}}.mdc-slider__value-indicator-container{bottom:44px;left:50%;pointer-events:none;position:absolute;transform:translateX(-50%);transform:var(--mat-slider-value-indicator-container-transform, translateX(-50%) rotate(-45deg))}.mdc-slider__thumb--with-indicator .mdc-slider__value-indicator-container{pointer-events:auto}.mdc-slider__value-indicator{display:flex;align-items:center;border-radius:4px;height:32px;padding:0 12px;transform:scale(0);transform-origin:bottom;opacity:1;transition:transform 100ms cubic-bezier(0.4, 0, 1, 1);word-break:normal;background-color:var(--mdc-slider-label-container-color, var(--mat-sys-primary));color:var(--mdc-slider-label-label-text-color, var(--mat-sys-on-primary));width:var(--mat-slider-value-indicator-width, 28px);height:var(--mat-slider-value-indicator-height, 28px);padding:var(--mat-slider-value-indicator-padding, 0);opacity:var(--mat-slider-value-indicator-opacity, 1);border-radius:var(--mat-slider-value-indicator-border-radius, 50% 50% 50% 0)}.mdc-slider__thumb--with-indicator .mdc-slider__value-indicator{transition:transform 100ms cubic-bezier(0, 0, 0.2, 1);transform:scale(1)}.mdc-slider__value-indicator::before{border-left:6px solid rgba(0,0,0,0);border-right:6px solid rgba(0,0,0,0);border-top:6px solid;bottom:-5px;content:\\\"\\\";height:0;left:50%;position:absolute;transform:translateX(-50%);width:0;display:var(--mat-slider-value-indicator-caret-display, none);border-top-color:var(--mdc-slider-label-container-color, var(--mat-sys-primary))}.mdc-slider__value-indicator::after{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media(forced-colors: active){.mdc-slider__value-indicator::after{border-color:CanvasText}}.mdc-slider__value-indicator-text{text-align:center;width:var(--mat-slider-value-indicator-width, 28px);transform:var(--mat-slider-value-indicator-text-transform, rotate(45deg));font-family:var(--mdc-slider-label-label-text-font, var(--mat-sys-label-medium-font));font-size:var(--mdc-slider-label-label-text-size, var(--mat-sys-label-medium-size));font-weight:var(--mdc-slider-label-label-text-weight, var(--mat-sys-label-medium-weight));line-height:var(--mdc-slider-label-label-text-line-height, var(--mat-sys-label-medium-line-height));letter-spacing:var(--mdc-slider-label-label-text-tracking, var(--mat-sys-label-medium-tracking))}.mdc-slider__thumb{-webkit-user-select:none;user-select:none;display:flex;left:-24px;outline:none;position:absolute;height:48px;width:48px;pointer-events:none}.mdc-slider--discrete .mdc-slider__thumb{transition:transform 80ms ease}.mdc-slider--disabled .mdc-slider__thumb{pointer-events:none}.mdc-slider__thumb--top{z-index:1}.mdc-slider__thumb-knob{position:absolute;box-sizing:border-box;left:50%;top:50%;transform:translate(-50%, -50%);border-style:solid;width:var(--mdc-slider-handle-width, 20px);height:var(--mdc-slider-handle-height, 20px);border-width:calc(var(--mdc-slider-handle-height, 20px)/2) calc(var(--mdc-slider-handle-width, 20px)/2);box-shadow:var(--mdc-slider-handle-elevation, var(--mat-sys-level1));background-color:var(--mdc-slider-handle-color, var(--mat-sys-primary));border-color:var(--mdc-slider-handle-color, var(--mat-sys-primary));border-radius:var(--mdc-slider-handle-shape, var(--mat-sys-corner-full))}.mdc-slider__thumb:hover .mdc-slider__thumb-knob{background-color:var(--mdc-slider-hover-handle-color, var(--mat-sys-primary));border-color:var(--mdc-slider-hover-handle-color, var(--mat-sys-primary))}.mdc-slider__thumb--focused .mdc-slider__thumb-knob{background-color:var(--mdc-slider-focus-handle-color, var(--mat-sys-primary));border-color:var(--mdc-slider-focus-handle-color, var(--mat-sys-primary))}.mdc-slider--disabled .mdc-slider__thumb-knob{background-color:var(--mdc-slider-disabled-handle-color, var(--mat-sys-on-surface));border-color:var(--mdc-slider-disabled-handle-color, var(--mat-sys-on-surface))}.mdc-slider__thumb--top .mdc-slider__thumb-knob,.mdc-slider__thumb--top.mdc-slider__thumb:hover .mdc-slider__thumb-knob,.mdc-slider__thumb--top.mdc-slider__thumb--focused .mdc-slider__thumb-knob{border:solid 1px #fff;box-sizing:content-box;border-color:var(--mdc-slider-with-overlap-handle-outline-color, var(--mat-sys-on-primary));border-width:var(--mdc-slider-with-overlap-handle-outline-width, 1px)}.mdc-slider__tick-marks{align-items:center;box-sizing:border-box;display:flex;height:100%;justify-content:space-between;padding:0 1px;position:absolute;width:100%}.mdc-slider__tick-mark--active,.mdc-slider__tick-mark--inactive{width:var(--mdc-slider-with-tick-marks-container-size, 2px);height:var(--mdc-slider-with-tick-marks-container-size, 2px);border-radius:var(--mdc-slider-with-tick-marks-container-shape, var(--mat-sys-corner-full))}.mdc-slider__tick-mark--inactive{opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity, 0.38);background-color:var(--mdc-slider-with-tick-marks-inactive-container-color, var(--mat-sys-on-surface-variant))}.mdc-slider--disabled .mdc-slider__tick-mark--inactive{opacity:var(--mdc-slider-with-tick-marks-inactive-container-opacity, 0.38);background-color:var(--mdc-slider-with-tick-marks-disabled-container-color, var(--mat-sys-on-surface))}.mdc-slider__tick-mark--active{opacity:var(--mdc-slider-with-tick-marks-active-container-opacity, 0.38);background-color:var(--mdc-slider-with-tick-marks-active-container-color, var(--mat-sys-on-primary))}.mdc-slider__input{cursor:pointer;left:2px;margin:0;height:44px;opacity:0;position:absolute;top:2px;width:44px;box-sizing:content-box}.mdc-slider__input.mat-mdc-slider-input-no-pointer-events{pointer-events:none}.mdc-slider__input.mat-slider__right-input{left:auto;right:0}.mat-mdc-slider{display:inline-block;box-sizing:border-box;outline:none;vertical-align:middle;cursor:pointer;height:48px;margin:0 8px;position:relative;touch-action:pan-y;width:auto;min-width:112px;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-slider.mdc-slider--disabled{cursor:auto;opacity:.38}.mat-mdc-slider .mdc-slider__thumb,.mat-mdc-slider .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider.mdc-slider--discrete .mdc-slider__track--active_fill{transition-duration:0ms}.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__thumb,.mat-mdc-slider.mat-mdc-slider-with-animation .mdc-slider__track--active_fill{transition-duration:80ms}.mat-mdc-slider .mat-ripple .mat-ripple-element{background-color:var(--mat-slider-ripple-color, var(--mat-sys-primary))}.mat-mdc-slider .mat-ripple .mat-mdc-slider-hover-ripple{background-color:var(--mat-slider-hover-state-layer-color, color-mix(in srgb, var(--mat-sys-primary) 5%, transparent))}.mat-mdc-slider .mat-ripple .mat-mdc-slider-focus-ripple,.mat-mdc-slider .mat-ripple .mat-mdc-slider-active-ripple{background-color:var(--mat-slider-focus-state-layer-color, color-mix(in srgb, var(--mat-sys-primary) 20%, transparent))}.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__thumb,.mat-mdc-slider._mat-animation-noopable.mdc-slider--discrete .mdc-slider__track--active_fill,.mat-mdc-slider._mat-animation-noopable .mdc-slider__value-indicator{transition:none}.mat-mdc-slider .mat-focus-indicator::before{border-radius:50%}.mdc-slider__thumb--focused .mat-focus-indicator::before{content:\\\"\\\"}\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return MatSlider;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Ensures that there is not an invalid configuration for the slider thumb inputs. */\nfunction _validateInputs(isRange, endInputElement, startInputElement) {\n  const startValid = !isRange || startInputElement?._hostElement.hasAttribute('matSliderStartThumb');\n  const endValid = endInputElement?._hostElement.hasAttribute(isRange ? 'matSliderEndThumb' : 'matSliderThumb');\n  if (!startValid || !endValid) {\n    _throwInvalidInputConfigurationError();\n  }\n}\nfunction _throwInvalidInputConfigurationError() {\n  throw Error(`Invalid slider thumb input configuration!\n\n   Valid configurations are as follows:\n\n     <mat-slider>\n       <input matSliderThumb>\n     </mat-slider>\n\n     or\n\n     <mat-slider>\n       <input matSliderStartThumb>\n       <input matSliderEndThumb>\n     </mat-slider>\n   `);\n}\n\n/**\n * Provider that allows the slider thumb to register as a ControlValueAccessor.\n * @docs-private\n */\nconst MAT_SLIDER_THUMB_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => MatSliderThumb),\n  multi: true\n};\n/**\n * Provider that allows the range slider thumb to register as a ControlValueAccessor.\n * @docs-private\n */\nconst MAT_SLIDER_RANGE_THUMB_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => MatSliderRangeThumb),\n  multi: true\n};\n/**\n * Directive that adds slider-specific behaviors to an input element inside `<mat-slider>`.\n * Up to two may be placed inside of a `<mat-slider>`.\n *\n * If one is used, the selector `matSliderThumb` must be used, and the outcome will be a normal\n * slider. If two are used, the selectors `matSliderStartThumb` and `matSliderEndThumb` must be\n * used, and the outcome will be a range slider with two slider thumbs.\n */\nlet MatSliderThumb = /*#__PURE__*/(() => {\n  class MatSliderThumb {\n    _ngZone = inject(NgZone);\n    _elementRef = inject(ElementRef);\n    _cdr = inject(ChangeDetectorRef);\n    _slider = inject(MAT_SLIDER);\n    _platform = inject(Platform);\n    _listenerCleanups;\n    get value() {\n      return numberAttribute(this._hostElement.value, 0);\n    }\n    set value(value) {\n      value = isNaN(value) ? 0 : value;\n      const stringValue = value + '';\n      if (!this._hasSetInitialValue) {\n        this._initialValue = stringValue;\n        return;\n      }\n      if (this._isActive) {\n        return;\n      }\n      this._setValue(stringValue);\n    }\n    /**\n     * Handles programmatic value setting. This has been split out to\n     * allow the range thumb to override it and add additional necessary logic.\n     */\n    _setValue(value) {\n      this._hostElement.value = value;\n      this._updateThumbUIByValue();\n      this._slider._onValueChange(this);\n      this._cdr.detectChanges();\n      this._slider._cdr.markForCheck();\n    }\n    /** Event emitted when the `value` is changed. */\n    valueChange = new EventEmitter();\n    /** Event emitted when the slider thumb starts being dragged. */\n    dragStart = new EventEmitter();\n    /** Event emitted when the slider thumb stops being dragged. */\n    dragEnd = new EventEmitter();\n    /**\n     * The current translateX in px of the slider visual thumb.\n     * @docs-private\n     */\n    get translateX() {\n      if (this._slider.min >= this._slider.max) {\n        this._translateX = this._tickMarkOffset;\n        return this._translateX;\n      }\n      if (this._translateX === undefined) {\n        this._translateX = this._calcTranslateXByValue();\n      }\n      return this._translateX;\n    }\n    set translateX(v) {\n      this._translateX = v;\n    }\n    _translateX;\n    /**\n     * Indicates whether this thumb is the start or end thumb.\n     * @docs-private\n     */\n    thumbPosition = _MatThumb.END;\n    /** @docs-private */\n    get min() {\n      return numberAttribute(this._hostElement.min, 0);\n    }\n    set min(v) {\n      this._hostElement.min = v + '';\n      this._cdr.detectChanges();\n    }\n    /** @docs-private */\n    get max() {\n      return numberAttribute(this._hostElement.max, 0);\n    }\n    set max(v) {\n      this._hostElement.max = v + '';\n      this._cdr.detectChanges();\n    }\n    get step() {\n      return numberAttribute(this._hostElement.step, 0);\n    }\n    set step(v) {\n      this._hostElement.step = v + '';\n      this._cdr.detectChanges();\n    }\n    /** @docs-private */\n    get disabled() {\n      return booleanAttribute(this._hostElement.disabled);\n    }\n    set disabled(v) {\n      this._hostElement.disabled = v;\n      this._cdr.detectChanges();\n      if (this._slider.disabled !== this.disabled) {\n        this._slider.disabled = this.disabled;\n      }\n    }\n    /** The percentage of the slider that coincides with the value. */\n    get percentage() {\n      if (this._slider.min >= this._slider.max) {\n        return this._slider._isRtl ? 1 : 0;\n      }\n      return (this.value - this._slider.min) / (this._slider.max - this._slider.min);\n    }\n    /** @docs-private */\n    get fillPercentage() {\n      if (!this._slider._cachedWidth) {\n        return this._slider._isRtl ? 1 : 0;\n      }\n      if (this._translateX === 0) {\n        return 0;\n      }\n      return this.translateX / this._slider._cachedWidth;\n    }\n    /** The host native HTML input element. */\n    _hostElement = this._elementRef.nativeElement;\n    /** The aria-valuetext string representation of the input's value. */\n    _valuetext = signal('');\n    /** The radius of a native html slider's knob. */\n    _knobRadius = 8;\n    /** The distance in px from the start of the slider track to the first tick mark. */\n    _tickMarkOffset = 3;\n    /** Whether user's cursor is currently in a mouse down state on the input. */\n    _isActive = false;\n    /** Whether the input is currently focused (either by tab or after clicking). */\n    _isFocused = false;\n    /** Used to relay updates to _isFocused to the slider visual thumbs. */\n    _setIsFocused(v) {\n      this._isFocused = v;\n    }\n    /**\n     * Whether the initial value has been set.\n     * This exists because the initial value cannot be immediately set because the min and max\n     * must first be relayed from the parent MatSlider component, which can only happen later\n     * in the component lifecycle.\n     */\n    _hasSetInitialValue = false;\n    /** The stored initial value. */\n    _initialValue;\n    /** Defined when a user is using a form control to manage slider value & validation. */\n    _formControl;\n    /** Emits when the component is destroyed. */\n    _destroyed = new Subject();\n    /**\n     * Indicates whether UI updates should be skipped.\n     *\n     * This flag is used to avoid flickering\n     * when correcting values on pointer up/down.\n     */\n    _skipUIUpdate = false;\n    /** Callback called when the slider input value changes. */\n    _onChangeFn;\n    /** Callback called when the slider input has been touched. */\n    _onTouchedFn = () => {};\n    /**\n     * Whether the NgModel has been initialized.\n     *\n     * This flag is used to ignore ghost null calls to\n     * writeValue which can break slider initialization.\n     *\n     * See https://github.com/angular/angular/issues/14988.\n     */\n    _isControlInitialized = false;\n    constructor() {\n      const renderer = inject(Renderer2);\n      this._ngZone.runOutsideAngular(() => {\n        this._listenerCleanups = [renderer.listen(this._hostElement, 'pointerdown', this._onPointerDown.bind(this)), renderer.listen(this._hostElement, 'pointermove', this._onPointerMove.bind(this)), renderer.listen(this._hostElement, 'pointerup', this._onPointerUp.bind(this))];\n      });\n    }\n    ngOnDestroy() {\n      this._listenerCleanups.forEach(cleanup => cleanup());\n      this._destroyed.next();\n      this._destroyed.complete();\n      this.dragStart.complete();\n      this.dragEnd.complete();\n    }\n    /** @docs-private */\n    initProps() {\n      this._updateWidthInactive();\n      // If this or the parent slider is disabled, just make everything disabled.\n      if (this.disabled !== this._slider.disabled) {\n        // The MatSlider setter for disabled will relay this and disable both inputs.\n        this._slider.disabled = true;\n      }\n      this.step = this._slider.step;\n      this.min = this._slider.min;\n      this.max = this._slider.max;\n      this._initValue();\n    }\n    /** @docs-private */\n    initUI() {\n      this._updateThumbUIByValue();\n    }\n    _initValue() {\n      this._hasSetInitialValue = true;\n      if (this._initialValue === undefined) {\n        this.value = this._getDefaultValue();\n      } else {\n        this._hostElement.value = this._initialValue;\n        this._updateThumbUIByValue();\n        this._slider._onValueChange(this);\n        this._cdr.detectChanges();\n      }\n    }\n    _getDefaultValue() {\n      return this.min;\n    }\n    _onBlur() {\n      this._setIsFocused(false);\n      this._onTouchedFn();\n    }\n    _onFocus() {\n      this._slider._setTransition(false);\n      this._slider._updateTrackUI(this);\n      this._setIsFocused(true);\n    }\n    _onChange() {\n      this.valueChange.emit(this.value);\n      // only used to handle the edge case where user\n      // mousedown on the slider then uses arrow keys.\n      if (this._isActive) {\n        this._updateThumbUIByValue({\n          withAnimation: true\n        });\n      }\n    }\n    _onInput() {\n      this._onChangeFn?.(this.value);\n      // handles arrowing and updating the value when\n      // a step is defined.\n      if (this._slider.step || !this._isActive) {\n        this._updateThumbUIByValue({\n          withAnimation: true\n        });\n      }\n      this._slider._onValueChange(this);\n    }\n    _onNgControlValueChange() {\n      // only used to handle when the value change\n      // originates outside of the slider.\n      if (!this._isActive || !this._isFocused) {\n        this._slider._onValueChange(this);\n        this._updateThumbUIByValue();\n      }\n      this._slider.disabled = this._formControl.disabled;\n    }\n    _onPointerDown(event) {\n      if (this.disabled || event.button !== 0) {\n        return;\n      }\n      // On IOS, dragging only works if the pointer down happens on the\n      // slider thumb and the slider does not receive focus from pointer events.\n      if (this._platform.IOS) {\n        const isCursorOnSliderThumb = this._slider._isCursorOnSliderThumb(event, this._slider._getThumb(this.thumbPosition)._hostElement.getBoundingClientRect());\n        this._isActive = isCursorOnSliderThumb;\n        this._updateWidthActive();\n        this._slider._updateDimensions();\n        return;\n      }\n      this._isActive = true;\n      this._setIsFocused(true);\n      this._updateWidthActive();\n      this._slider._updateDimensions();\n      // Does nothing if a step is defined because we\n      // want the value to snap to the values on input.\n      if (!this._slider.step) {\n        this._updateThumbUIByPointerEvent(event, {\n          withAnimation: true\n        });\n      }\n      if (!this.disabled) {\n        this._handleValueCorrection(event);\n        this.dragStart.emit({\n          source: this,\n          parent: this._slider,\n          value: this.value\n        });\n      }\n    }\n    /**\n     * Corrects the value of the slider on pointer up/down.\n     *\n     * Called on pointer down and up because the value is set based\n     * on the inactive width instead of the active width.\n     */\n    _handleValueCorrection(event) {\n      // Don't update the UI with the current value! The value on pointerdown\n      // and pointerup is calculated in the split second before the input(s)\n      // resize. See _updateWidthInactive() and _updateWidthActive() for more\n      // details.\n      this._skipUIUpdate = true;\n      // Note that this function gets triggered before the actual value of the\n      // slider is updated. This means if we were to set the value here, it\n      // would immediately be overwritten. Using setTimeout ensures the setting\n      // of the value happens after the value has been updated by the\n      // pointerdown event.\n      setTimeout(() => {\n        this._skipUIUpdate = false;\n        this._fixValue(event);\n      }, 0);\n    }\n    /** Corrects the value of the slider based on the pointer event's position. */\n    _fixValue(event) {\n      const xPos = event.clientX - this._slider._cachedLeft;\n      const width = this._slider._cachedWidth;\n      const step = this._slider.step === 0 ? 1 : this._slider.step;\n      const numSteps = Math.floor((this._slider.max - this._slider.min) / step);\n      const percentage = this._slider._isRtl ? 1 - xPos / width : xPos / width;\n      // To ensure the percentage is rounded to the necessary number of decimals.\n      const fixedPercentage = Math.round(percentage * numSteps) / numSteps;\n      const impreciseValue = fixedPercentage * (this._slider.max - this._slider.min) + this._slider.min;\n      const value = Math.round(impreciseValue / step) * step;\n      const prevValue = this.value;\n      if (value === prevValue) {\n        // Because we prevented UI updates, if it turns out that the race\n        // condition didn't happen and the value is already correct, we\n        // have to apply the ui updates now.\n        this._slider._onValueChange(this);\n        this._slider.step > 0 ? this._updateThumbUIByValue() : this._updateThumbUIByPointerEvent(event, {\n          withAnimation: this._slider._hasAnimation\n        });\n        return;\n      }\n      this.value = value;\n      this.valueChange.emit(this.value);\n      this._onChangeFn?.(this.value);\n      this._slider._onValueChange(this);\n      this._slider.step > 0 ? this._updateThumbUIByValue() : this._updateThumbUIByPointerEvent(event, {\n        withAnimation: this._slider._hasAnimation\n      });\n    }\n    _onPointerMove(event) {\n      // Again, does nothing if a step is defined because\n      // we want the value to snap to the values on input.\n      if (!this._slider.step && this._isActive) {\n        this._updateThumbUIByPointerEvent(event);\n      }\n    }\n    _onPointerUp() {\n      if (this._isActive) {\n        this._isActive = false;\n        if (this._platform.SAFARI) {\n          this._setIsFocused(false);\n        }\n        this.dragEnd.emit({\n          source: this,\n          parent: this._slider,\n          value: this.value\n        });\n        // This setTimeout is to prevent the pointerup from triggering a value\n        // change on the input based on the inactive width. It's not clear why\n        // but for some reason on IOS this race condition is even more common so\n        // the timeout needs to be increased.\n        setTimeout(() => this._updateWidthInactive(), this._platform.IOS ? 10 : 0);\n      }\n    }\n    _clamp(v) {\n      const min = this._tickMarkOffset;\n      const max = this._slider._cachedWidth - this._tickMarkOffset;\n      return Math.max(Math.min(v, max), min);\n    }\n    _calcTranslateXByValue() {\n      if (this._slider._isRtl) {\n        return (1 - this.percentage) * (this._slider._cachedWidth - this._tickMarkOffset * 2) + this._tickMarkOffset;\n      }\n      return this.percentage * (this._slider._cachedWidth - this._tickMarkOffset * 2) + this._tickMarkOffset;\n    }\n    _calcTranslateXByPointerEvent(event) {\n      return event.clientX - this._slider._cachedLeft;\n    }\n    /**\n     * Used to set the slider width to the correct\n     * dimensions while the user is dragging.\n     */\n    _updateWidthActive() {}\n    /**\n     * Sets the slider input to disproportionate dimensions to allow for touch\n     * events to be captured on touch devices.\n     */\n    _updateWidthInactive() {\n      this._hostElement.style.padding = `0 ${this._slider._inputPadding}px`;\n      this._hostElement.style.width = `calc(100% + ${this._slider._inputPadding - this._tickMarkOffset * 2}px)`;\n      this._hostElement.style.left = `-${this._slider._rippleRadius - this._tickMarkOffset}px`;\n    }\n    _updateThumbUIByValue(options) {\n      this.translateX = this._clamp(this._calcTranslateXByValue());\n      this._updateThumbUI(options);\n    }\n    _updateThumbUIByPointerEvent(event, options) {\n      this.translateX = this._clamp(this._calcTranslateXByPointerEvent(event));\n      this._updateThumbUI(options);\n    }\n    _updateThumbUI(options) {\n      this._slider._setTransition(!!options?.withAnimation);\n      this._slider._onTranslateXChange(this);\n    }\n    /**\n     * Sets the input's value.\n     * @param value The new value of the input\n     * @docs-private\n     */\n    writeValue(value) {\n      if (this._isControlInitialized || value !== null) {\n        this.value = value;\n      }\n    }\n    /**\n     * Registers a callback to be invoked when the input's value changes from user input.\n     * @param fn The callback to register\n     * @docs-private\n     */\n    registerOnChange(fn) {\n      this._onChangeFn = fn;\n      this._isControlInitialized = true;\n    }\n    /**\n     * Registers a callback to be invoked when the input is blurred by the user.\n     * @param fn The callback to register\n     * @docs-private\n     */\n    registerOnTouched(fn) {\n      this._onTouchedFn = fn;\n    }\n    /**\n     * Sets the disabled state of the slider.\n     * @param isDisabled The new disabled state\n     * @docs-private\n     */\n    setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n    }\n    focus() {\n      this._hostElement.focus();\n    }\n    blur() {\n      this._hostElement.blur();\n    }\n    static ɵfac = function MatSliderThumb_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatSliderThumb)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatSliderThumb,\n      selectors: [[\"input\", \"matSliderThumb\", \"\"]],\n      hostAttrs: [\"type\", \"range\", 1, \"mdc-slider__input\"],\n      hostVars: 1,\n      hostBindings: function MatSliderThumb_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"change\", function MatSliderThumb_change_HostBindingHandler() {\n            return ctx._onChange();\n          })(\"input\", function MatSliderThumb_input_HostBindingHandler() {\n            return ctx._onInput();\n          })(\"blur\", function MatSliderThumb_blur_HostBindingHandler() {\n            return ctx._onBlur();\n          })(\"focus\", function MatSliderThumb_focus_HostBindingHandler() {\n            return ctx._onFocus();\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"aria-valuetext\", ctx._valuetext());\n        }\n      },\n      inputs: {\n        value: [2, \"value\", \"value\", numberAttribute]\n      },\n      outputs: {\n        valueChange: \"valueChange\",\n        dragStart: \"dragStart\",\n        dragEnd: \"dragEnd\"\n      },\n      exportAs: [\"matSliderThumb\"],\n      features: [i0.ɵɵProvidersFeature([MAT_SLIDER_THUMB_VALUE_ACCESSOR, {\n        provide: MAT_SLIDER_THUMB,\n        useExisting: MatSliderThumb\n      }])]\n    });\n  }\n  return MatSliderThumb;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatSliderRangeThumb = /*#__PURE__*/(() => {\n  class MatSliderRangeThumb extends MatSliderThumb {\n    _cdr = inject(ChangeDetectorRef);\n    /** @docs-private */\n    getSibling() {\n      if (!this._sibling) {\n        this._sibling = this._slider._getInput(this._isEndThumb ? _MatThumb.START : _MatThumb.END);\n      }\n      return this._sibling;\n    }\n    _sibling;\n    /**\n     * Returns the minimum translateX position allowed for this slider input's visual thumb.\n     * @docs-private\n     */\n    getMinPos() {\n      const sibling = this.getSibling();\n      if (!this._isLeftThumb && sibling) {\n        return sibling.translateX;\n      }\n      return this._tickMarkOffset;\n    }\n    /**\n     * Returns the maximum translateX position allowed for this slider input's visual thumb.\n     * @docs-private\n     */\n    getMaxPos() {\n      const sibling = this.getSibling();\n      if (this._isLeftThumb && sibling) {\n        return sibling.translateX;\n      }\n      return this._slider._cachedWidth - this._tickMarkOffset;\n    }\n    _setIsLeftThumb() {\n      this._isLeftThumb = this._isEndThumb && this._slider._isRtl || !this._isEndThumb && !this._slider._isRtl;\n    }\n    /** Whether this slider corresponds to the input on the left hand side. */\n    _isLeftThumb;\n    /** Whether this slider corresponds to the input with greater value. */\n    _isEndThumb;\n    constructor() {\n      super();\n      this._isEndThumb = this._hostElement.hasAttribute('matSliderEndThumb');\n      this._setIsLeftThumb();\n      this.thumbPosition = this._isEndThumb ? _MatThumb.END : _MatThumb.START;\n    }\n    _getDefaultValue() {\n      return this._isEndThumb && this._slider._isRange ? this.max : this.min;\n    }\n    _onInput() {\n      super._onInput();\n      this._updateSibling();\n      if (!this._isActive) {\n        this._updateWidthInactive();\n      }\n    }\n    _onNgControlValueChange() {\n      super._onNgControlValueChange();\n      this.getSibling()?._updateMinMax();\n    }\n    _onPointerDown(event) {\n      if (this.disabled || event.button !== 0) {\n        return;\n      }\n      if (this._sibling) {\n        this._sibling._updateWidthActive();\n        this._sibling._hostElement.classList.add('mat-mdc-slider-input-no-pointer-events');\n      }\n      super._onPointerDown(event);\n    }\n    _onPointerUp() {\n      super._onPointerUp();\n      if (this._sibling) {\n        setTimeout(() => {\n          this._sibling._updateWidthInactive();\n          this._sibling._hostElement.classList.remove('mat-mdc-slider-input-no-pointer-events');\n        });\n      }\n    }\n    _onPointerMove(event) {\n      super._onPointerMove(event);\n      if (!this._slider.step && this._isActive) {\n        this._updateSibling();\n      }\n    }\n    _fixValue(event) {\n      super._fixValue(event);\n      this._sibling?._updateMinMax();\n    }\n    _clamp(v) {\n      return Math.max(Math.min(v, this.getMaxPos()), this.getMinPos());\n    }\n    _updateMinMax() {\n      const sibling = this.getSibling();\n      if (!sibling) {\n        return;\n      }\n      if (this._isEndThumb) {\n        this.min = Math.max(this._slider.min, sibling.value);\n        this.max = this._slider.max;\n      } else {\n        this.min = this._slider.min;\n        this.max = Math.min(this._slider.max, sibling.value);\n      }\n    }\n    _updateWidthActive() {\n      const minWidth = this._slider._rippleRadius * 2 - this._slider._inputPadding * 2;\n      const maxWidth = this._slider._cachedWidth + this._slider._inputPadding - minWidth - this._tickMarkOffset * 2;\n      const percentage = this._slider.min < this._slider.max ? (this.max - this.min) / (this._slider.max - this._slider.min) : 1;\n      const width = maxWidth * percentage + minWidth;\n      this._hostElement.style.width = `${width}px`;\n      this._hostElement.style.padding = `0 ${this._slider._inputPadding}px`;\n    }\n    _updateWidthInactive() {\n      const sibling = this.getSibling();\n      if (!sibling) {\n        return;\n      }\n      const maxWidth = this._slider._cachedWidth - this._tickMarkOffset * 2;\n      const midValue = this._isEndThumb ? this.value - (this.value - sibling.value) / 2 : this.value + (sibling.value - this.value) / 2;\n      const _percentage = this._isEndThumb ? (this.max - midValue) / (this._slider.max - this._slider.min) : (midValue - this.min) / (this._slider.max - this._slider.min);\n      const percentage = this._slider.min < this._slider.max ? _percentage : 1;\n      // Extend the native input width by the radius of the ripple\n      let ripplePadding = this._slider._rippleRadius;\n      // If one of the inputs is maximally sized (the value of both thumbs is\n      // equal to the min or max), make that input take up all of the width and\n      // make the other unselectable.\n      if (percentage === 1) {\n        ripplePadding = 48;\n      } else if (percentage === 0) {\n        ripplePadding = 0;\n      }\n      const width = maxWidth * percentage + ripplePadding;\n      this._hostElement.style.width = `${width}px`;\n      this._hostElement.style.padding = '0px';\n      if (this._isLeftThumb) {\n        this._hostElement.style.left = `-${this._slider._rippleRadius - this._tickMarkOffset}px`;\n        this._hostElement.style.right = 'auto';\n      } else {\n        this._hostElement.style.left = 'auto';\n        this._hostElement.style.right = `-${this._slider._rippleRadius - this._tickMarkOffset}px`;\n      }\n    }\n    _updateStaticStyles() {\n      this._hostElement.classList.toggle('mat-slider__right-input', !this._isLeftThumb);\n    }\n    _updateSibling() {\n      const sibling = this.getSibling();\n      if (!sibling) {\n        return;\n      }\n      sibling._updateMinMax();\n      if (this._isActive) {\n        sibling._updateWidthActive();\n      } else {\n        sibling._updateWidthInactive();\n      }\n    }\n    /**\n     * Sets the input's value.\n     * @param value The new value of the input\n     * @docs-private\n     */\n    writeValue(value) {\n      if (this._isControlInitialized || value !== null) {\n        this.value = value;\n        this._updateWidthInactive();\n        this._updateSibling();\n      }\n    }\n    _setValue(value) {\n      super._setValue(value);\n      this._updateWidthInactive();\n      this._updateSibling();\n    }\n    static ɵfac = function MatSliderRangeThumb_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatSliderRangeThumb)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatSliderRangeThumb,\n      selectors: [[\"input\", \"matSliderStartThumb\", \"\"], [\"input\", \"matSliderEndThumb\", \"\"]],\n      exportAs: [\"matSliderRangeThumb\"],\n      features: [i0.ɵɵProvidersFeature([MAT_SLIDER_RANGE_THUMB_VALUE_ACCESSOR, {\n        provide: MAT_SLIDER_RANGE_THUMB,\n        useExisting: MatSliderRangeThumb\n      }]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return MatSliderRangeThumb;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatSliderModule = /*#__PURE__*/(() => {\n  class MatSliderModule {\n    static ɵfac = function MatSliderModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatSliderModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatSliderModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [MatCommonModule, MatRippleModule]\n    });\n  }\n  return MatSliderModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatSlider, MatSliderChange, MatSliderModule, MatSliderRangeThumb, MatSliderThumb, MatSliderVisualThumb };\n","import { AfterViewInit, ChangeDetectorRef, Component, OnDestroy, OnInit, QueryList, ViewChild, ViewChildren, inject } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { StudentExam } from 'app/entities/student-exam.model';\r\nimport { Exercise, ExerciseType } from 'app/entities/exercise.model';\r\nimport { ExamPage } from 'app/entities/exam/exam-page.model';\r\nimport { ExamSubmissionComponent } from 'app/exam/participate/exercises/exam-submission.component';\r\nimport { ExamNavigationBarComponent } from 'app/exam/participate/exam-navigation-bar/exam-navigation-bar.component';\r\nimport { ModelingExamSubmissionComponent } from 'app/exam/participate/exercises/modeling/modeling-exam-submission.component';\r\nimport { QuizExamSubmissionComponent } from 'app/exam/participate/exercises/quiz/quiz-exam-submission.component';\r\nimport { TextExamSubmissionComponent } from 'app/exam/participate/exercises/text/text-exam-submission.component';\r\nimport { SubmissionService } from 'app/exercises/shared/submission/submission.service';\r\nimport dayjs from 'dayjs/esm';\r\nimport { SubmissionVersion } from 'app/entities/submission-version.model';\r\nimport { Observable, Subscription, forkJoin, map, mergeMap, tap, toArray } from 'rxjs';\r\nimport { ProgrammingSubmission } from 'app/entities/programming/programming-submission.model';\r\nimport { Submission } from 'app/entities/submission.model';\r\nimport { FileUploadSubmission } from 'app/entities/file-upload-submission.model';\r\nimport { FileUploadExamSubmissionComponent } from 'app/exam/participate/exercises/file-upload/file-upload-exam-submission.component';\r\nimport { SubmissionVersionService } from 'app/exercises/shared/submission-version/submission-version.service';\r\nimport { ProgrammingExerciseExamDiffComponent } from 'app/exam/manage/student-exams/student-exam-timeline/programming-exam-diff/programming-exercise-exam-diff.component';\r\nimport { ExamPageComponent } from 'app/exam/participate/exercises/exam-page.component';\r\nimport { ProgrammingExerciseGitDiffReport } from 'app/entities/programming-exercise-git-diff-report.model';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { MatSlider, MatSliderThumb } from '@angular/material/slider';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'jhi-student-exam-timeline',\r\n    templateUrl: './student-exam-timeline.component.html',\r\n    styleUrls: ['./student-exam-timeline.component.scss'],\r\n    imports: [\r\n        TranslateDirective,\r\n        MatSlider,\r\n        MatSliderThumb,\r\n        FormsModule,\r\n        ExamNavigationBarComponent,\r\n        QuizExamSubmissionComponent,\r\n        FileUploadExamSubmissionComponent,\r\n        TextExamSubmissionComponent,\r\n        ModelingExamSubmissionComponent,\r\n        ProgrammingExerciseExamDiffComponent,\r\n    ],\r\n})\r\nexport class StudentExamTimelineComponent implements OnInit, AfterViewInit, OnDestroy {\r\n    private activatedRoute = inject(ActivatedRoute);\r\n    private submissionService = inject(SubmissionService);\r\n    private submissionVersionService = inject(SubmissionVersionService);\r\n    private cdr = inject(ChangeDetectorRef);\r\n\r\n    readonly ExerciseType = ExerciseType;\r\n    readonly SubmissionVersion = SubmissionVersion;\r\n\r\n    // stores if a page component has already been visited (true) or not (false)\r\n    // this is an array because the exam-timeline uses a page component for each exercise\r\n    pageComponentVisited: boolean[];\r\n    selectedTimestamp: number;\r\n    timestampIndex = 0;\r\n\r\n    studentExam: StudentExam;\r\n    exerciseIndex: number;\r\n    activeExamPage = new ExamPage();\r\n    submissionTimeStamps: dayjs.Dayjs[] = [];\r\n    submissionVersions: SubmissionVersion[] = [];\r\n    programmingSubmissions: ProgrammingSubmission[] = [];\r\n    fileUploadSubmissions: FileUploadSubmission[] = [];\r\n\r\n    currentExercise: Exercise | undefined;\r\n    currentSubmission: SubmissionVersion | ProgrammingSubmission | FileUploadSubmission | undefined;\r\n    changesSubscription: Subscription;\r\n    cachedDiffReports: Map<string, ProgrammingExerciseGitDiffReport> = new Map<string, ProgrammingExerciseGitDiffReport>();\r\n\r\n    @ViewChildren(ExamSubmissionComponent) currentPageComponents: QueryList<ExamSubmissionComponent>;\r\n    @ViewChild('examNavigationBar') examNavigationBarComponent: ExamNavigationBarComponent;\r\n\r\n    private activatedRouteSubscription: Subscription;\r\n\r\n    ngOnInit(): void {\r\n        this.activatedRouteSubscription = this.activatedRoute.data.subscribe(({ studentExam: studentExamWithGrade }) => {\r\n            this.studentExam = studentExamWithGrade.studentExam;\r\n        });\r\n        this.exerciseIndex = 0;\r\n        this.pageComponentVisited = new Array(this.studentExam.exercises!.length).fill(false);\r\n        this.retrieveSubmissionDataAndTimeStamps().subscribe((results) => {\r\n            const allSubmissions = results.flat();\r\n            allSubmissions.forEach((result) => {\r\n                //workaround because instanceof does not work.\r\n                if (this.isSubmissionVersion(result)) {\r\n                    const submissionVersion = result as SubmissionVersion;\r\n                    this.submissionVersions.push(submissionVersion);\r\n                    this.submissionTimeStamps.push(submissionVersion.createdDate);\r\n                } else if (this.isFileUploadSubmission(result)) {\r\n                    const fileUploadSubmission = result as FileUploadSubmission;\r\n                    this.fileUploadSubmissions.push(fileUploadSubmission);\r\n                    this.submissionTimeStamps.push(fileUploadSubmission.submissionDate!);\r\n                } else {\r\n                    const programmingSubmission = result as ProgrammingSubmission;\r\n                    this.programmingSubmissions.push(programmingSubmission);\r\n                    this.submissionTimeStamps.push(programmingSubmission.submissionDate!);\r\n                }\r\n            });\r\n            this.sortTimeStamps();\r\n            this.selectedTimestamp = this.submissionTimeStamps[0]?.toDate().getTime() ?? 0;\r\n            const firstSubmission = this.findFirstSubmission();\r\n            this.currentSubmission = firstSubmission;\r\n            this.exerciseIndex = this.findExerciseIndex(firstSubmission!);\r\n            this.examNavigationBarComponent.changePage(false, this.exerciseIndex, false, firstSubmission);\r\n        });\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.changesSubscription = this.currentPageComponents.changes.subscribe(() => {\r\n            this.updateSubmissionOrSubmissionVersionInView();\r\n        });\r\n    }\r\n    ngOnDestroy(): void {\r\n        this.activatedRouteSubscription?.unsubscribe();\r\n        this.changesSubscription?.unsubscribe();\r\n    }\r\n\r\n    /**\r\n     * Updates the view for a programming exercise by setting the correct submission for the component\r\n     * This does not really work yet because the programming submission is not updated in the view\r\n     * This will change in the followup PR #7097\r\n     * Programming exercises do not support submission versions and therefore, need to be handled differently.\r\n     */\r\n    private updateProgrammingExerciseView() {\r\n        const activeProgrammingComponent = this.activePageComponent as ProgrammingExerciseExamDiffComponent | undefined;\r\n        if (activeProgrammingComponent) {\r\n            activeProgrammingComponent.studentParticipation = this.currentExercise!.studentParticipations![0];\r\n            activeProgrammingComponent.exercise = this.currentExercise!;\r\n            activeProgrammingComponent.currentSubmission = this.currentSubmission as ProgrammingSubmission;\r\n            activeProgrammingComponent.previousSubmission = this.findPreviousProgrammingSubmission(this.currentExercise!, this.currentSubmission!);\r\n            activeProgrammingComponent.submissions = this.programmingSubmissions.filter((submission) => submission.participation?.exercise?.id === this.currentExercise?.id);\r\n            activeProgrammingComponent.exerciseIdSubject.next(this.currentExercise!.id!);\r\n        }\r\n    }\r\n\r\n    findPreviousProgrammingSubmission(currentExercise: Exercise, currentSubmission: ProgrammingSubmission): ProgrammingSubmission | undefined {\r\n        const comparisonTimestamp: dayjs.Dayjs = currentSubmission.submissionDate!;\r\n        let smallestDiff = Infinity;\r\n        let correspondingSubmission: ProgrammingSubmission | undefined;\r\n        for (const programmingSubmission of this.programmingSubmissions) {\r\n            const diff = Math.abs(programmingSubmission.submissionDate!.diff(comparisonTimestamp));\r\n            if (\r\n                programmingSubmission.submissionDate!.isBefore(comparisonTimestamp) &&\r\n                diff < smallestDiff &&\r\n                programmingSubmission.participation?.exercise?.id === currentExercise.id\r\n            ) {\r\n                smallestDiff = diff;\r\n                correspondingSubmission = programmingSubmission;\r\n            }\r\n        }\r\n        return correspondingSubmission;\r\n    }\r\n\r\n    /**\r\n     * Updates the view for a file upload exercise by setting the correct submission for the component\r\n     * File Upload exercises do not support submission versions and therefore, need to be handled differently.\r\n     */\r\n    private updateFileUploadExerciseView() {\r\n        const fileUploadComponent = this.activePageComponent as FileUploadExamSubmissionComponent;\r\n        if (fileUploadComponent) {\r\n            fileUploadComponent.studentSubmission.update(() => this.currentSubmission as FileUploadSubmission);\r\n            fileUploadComponent.updateViewFromSubmission();\r\n        }\r\n    }\r\n\r\n    displayCurrentTimestamp(): string {\r\n        return dayjs(this.selectedTimestamp).format('HH:mm:ss');\r\n    }\r\n\r\n    /**\r\n     * Checks if the submission is a submission version\r\n     * Instanceof does not work here because it always returns false.\r\n     * @param object the object to check\r\n     */\r\n    isSubmissionVersion(object: SubmissionVersion | Submission | undefined) {\r\n        if (!object) {\r\n            return false;\r\n        }\r\n        const submissionVersion = object as SubmissionVersion;\r\n        // submissionVersion.content is intentionally not checked because it can be undefined if the content is empty\r\n        return submissionVersion.id && submissionVersion.createdDate && submissionVersion.submission;\r\n    }\r\n\r\n    /**\r\n     * Helper method to check if the object is a file upload submission\r\n     * Instanceof does not work here because we have submission objects that are is only a super class of FileUploadSubmission\r\n     * @param object the object to check\r\n     */\r\n    private isFileUploadSubmission(object: FileUploadSubmission | SubmissionVersion | ProgrammingSubmission | undefined) {\r\n        if (!object) {\r\n            return false;\r\n        }\r\n        const fileUploadSubmission = object as FileUploadSubmission;\r\n        return !!fileUploadSubmission.id && fileUploadSubmission.submissionDate && fileUploadSubmission.filePath;\r\n    }\r\n\r\n    /**\r\n     * Retrieve all submission versions/submissions for all exercises of the exam\r\n     */\r\n    retrieveSubmissionDataAndTimeStamps() {\r\n        const submissionObservables: Observable<SubmissionVersion[] | Submission[]>[] = [];\r\n        this.studentExam.exercises?.forEach((exercise) => {\r\n            if (exercise.type === ExerciseType.PROGRAMMING) {\r\n                const id = exercise.studentParticipations![0].id!;\r\n                const programmingSubmission = this.submissionService.findAllSubmissionsOfParticipation(id).pipe(map(({ body }) => body!));\r\n                submissionObservables.push(programmingSubmission);\r\n            } else if (exercise.type === ExerciseType.FILE_UPLOAD) {\r\n                const id = exercise.studentParticipations![0].id!;\r\n                submissionObservables.push(this.submissionService.findAllSubmissionsOfParticipation(id).pipe(map(({ body }) => body!)));\r\n            } else {\r\n                submissionObservables.push(\r\n                    this.submissionVersionService.findAllSubmissionVersionsOfSubmission(exercise.studentParticipations![0].submissions![0].id!).pipe(\r\n                        mergeMap((versions) => versions),\r\n                        toArray(),\r\n                    ),\r\n                );\r\n            }\r\n        });\r\n\r\n        return forkJoin([...submissionObservables]).pipe(tap(() => this.cdr.detectChanges()));\r\n    }\r\n\r\n    /**\r\n     * Sorts the time stamps in ascending order\r\n     */\r\n    private sortTimeStamps() {\r\n        this.submissionTimeStamps = this.submissionTimeStamps.sort((date1, date2) => (date1.isAfter(date2) ? 1 : -1));\r\n    }\r\n\r\n    /**\r\n     * This method is called when the user clicks on the next or previous button in the navigation bar or on the slider.\r\n     * @param exerciseChange contains the exercise to which the user wants to navigate to and the submission that should be displayed\r\n     */\r\n    onPageChange(exerciseChange: { exercise?: Exercise; submission?: ProgrammingSubmission | SubmissionVersion | FileUploadSubmission }): void {\r\n        const activeComponent = this.activePageComponent;\r\n        if (activeComponent) {\r\n            activeComponent.onDeactivate();\r\n        }\r\n\r\n        if (!exerciseChange.submission) {\r\n            // only change the submission if the exercise has changed, prevents unnecessary updates if you press the same button multiple times on the navigation bar\r\n            if (exerciseChange.exercise !== this.currentExercise) {\r\n                exerciseChange.submission = this.findSubmissionForExerciseClosestToCurrentTimeStampForExercise(exerciseChange.exercise!);\r\n            }\r\n        }\r\n\r\n        if (exerciseChange.submission) {\r\n            if (this.isSubmissionVersion(exerciseChange.submission)) {\r\n                const submissionVersion = exerciseChange.submission as SubmissionVersion;\r\n                this.selectedTimestamp = submissionVersion.createdDate.toDate().getTime();\r\n            } else if (this.isFileUploadSubmission(exerciseChange.submission)) {\r\n                const fileUploadSubmission = exerciseChange.submission as FileUploadSubmission;\r\n                this.selectedTimestamp = fileUploadSubmission.submissionDate!.toDate().getTime();\r\n            } else {\r\n                const programmingSubmission = exerciseChange.submission as ProgrammingSubmission;\r\n                this.selectedTimestamp = programmingSubmission.submissionDate!.toDate().getTime();\r\n            }\r\n            this.currentSubmission = exerciseChange.submission;\r\n            this.initializeExercise(exerciseChange.exercise!, exerciseChange.submission);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Finds the first submission of the student exam\r\n     * Used to determine what's the first submission and hence, the first exercise to display.\r\n     */\r\n\r\n    private findFirstSubmission(): FileUploadSubmission | SubmissionVersion | ProgrammingSubmission | undefined {\r\n        const submissionVersion = this.submissionVersions.find((submission) => submission.createdDate.isSame(this.submissionTimeStamps[0]));\r\n        if (!submissionVersion) {\r\n            const programmingSubmission = this.programmingSubmissions.find((submission) => submission.submissionDate?.isSame(this.submissionTimeStamps[0]));\r\n            if (!programmingSubmission) {\r\n                return this.fileUploadSubmissions.find((submission) => submission.submissionDate?.isSame(this.submissionTimeStamps[0]));\r\n            } else {\r\n                return programmingSubmission;\r\n            }\r\n        }\r\n        return submissionVersion;\r\n    }\r\n\r\n    initializeExercise(exercise: Exercise, submission: Submission | SubmissionVersion | undefined) {\r\n        this.activeExamPage.exercise = exercise;\r\n        // set current exercise index\r\n        this.exerciseIndex = this.studentExam.exercises!.findIndex((exercise1) => exercise1.id === exercise.id);\r\n        this.currentExercise = exercise;\r\n        this.currentSubmission = submission;\r\n        this.activateActiveComponent();\r\n        this.updateSubmissionOrSubmissionVersionInView();\r\n    }\r\n\r\n    private updateSubmissionOrSubmissionVersionInView() {\r\n        if (this.currentExercise?.type === ExerciseType.PROGRAMMING) {\r\n            this.updateProgrammingExerciseView();\r\n        } else if (this.currentExercise?.type === ExerciseType.FILE_UPLOAD) {\r\n            this.updateFileUploadExerciseView();\r\n        } else {\r\n            const activePageComponent = this.activePageComponent as ExamSubmissionComponent | undefined;\r\n            activePageComponent?.setSubmissionVersion(this.currentSubmission as SubmissionVersion);\r\n        }\r\n    }\r\n\r\n    private activateActiveComponent() {\r\n        this.pageComponentVisited[this.activePageIndex] = true;\r\n        const activeComponent = this.activePageComponent;\r\n        if (activeComponent) {\r\n            activeComponent.onActivate();\r\n        }\r\n    }\r\n\r\n    get activePageIndex(): number {\r\n        return this.studentExam.exercises!.findIndex((examExercise) => examExercise.id === this.activeExamPage.exercise?.id);\r\n    }\r\n\r\n    get activePageComponent(): ExamPageComponent | undefined {\r\n        // we have to find the current component based on the activeExercise because the queryList might not be full yet (e.g. only 2 of 5 components initialized)\r\n        return this.currentPageComponents.find((submissionComponent) => (submissionComponent as ExamSubmissionComponent).getExercise().id === this.activeExamPage.exercise?.id);\r\n    }\r\n\r\n    /**\r\n     * This method is called when the user clicks on the slider\r\n     */\r\n    onSliderInputChange() {\r\n        this.selectedTimestamp = this.submissionTimeStamps[this.timestampIndex].toDate().getTime();\r\n        const submission = this.findCorrespondingSubmissionForTimestamp(this.selectedTimestamp);\r\n        if (this.isSubmissionVersion(submission)) {\r\n            const submissionVersion = submission as SubmissionVersion;\r\n            this.currentExercise = submissionVersion.submission.participation?.exercise;\r\n        } else if (this.isFileUploadSubmission(submission)) {\r\n            const fileUploadSubmission = submission as FileUploadSubmission;\r\n            this.currentExercise = fileUploadSubmission.participation?.exercise;\r\n        } else {\r\n            const programmingSubmission = submission as ProgrammingSubmission;\r\n            this.currentExercise = programmingSubmission.participation?.exercise;\r\n        }\r\n        const exerciseIndex = this.studentExam.exercises!.findIndex((examExercise) => examExercise.id === this.currentExercise?.id);\r\n        this.exerciseIndex = exerciseIndex;\r\n        this.currentSubmission = submission;\r\n        this.examNavigationBarComponent.changePage(false, exerciseIndex, false, submission);\r\n    }\r\n\r\n    /**\r\n     * Finds the submission for the current timestamp.\r\n     * @param timestamp The timestamp for which the submission should be found.\r\n     */\r\n    private findCorrespondingSubmissionForTimestamp(timestamp: number): SubmissionVersion | ProgrammingSubmission | FileUploadSubmission | undefined {\r\n        const comparisonObject = dayjs(timestamp);\r\n        for (const submissionVersion of this.submissionVersions) {\r\n            if (submissionVersion.createdDate.isSame(comparisonObject)) {\r\n                return submissionVersion;\r\n            }\r\n        }\r\n        for (const programmingSubmission of this.programmingSubmissions) {\r\n            if (programmingSubmission.submissionDate?.isSame(comparisonObject)) {\r\n                return programmingSubmission;\r\n            }\r\n        }\r\n        for (const fileUploadSubmission of this.fileUploadSubmissions) {\r\n            if (fileUploadSubmission.submissionDate?.isSame(comparisonObject)) {\r\n                return fileUploadSubmission;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Finds the submission for the exercise with the closest timestamp to the current timestamp.\r\n     * @param exercise The exercise for which the submission should be found.\r\n     */\r\n    private findSubmissionForExerciseClosestToCurrentTimeStampForExercise(exercise: Exercise) {\r\n        const comparisonObject = dayjs(this.selectedTimestamp);\r\n        let smallestDiff = Infinity;\r\n        let timestampWithSmallestDiff = 0;\r\n        if (exercise.type === ExerciseType.PROGRAMMING) {\r\n            timestampWithSmallestDiff = this.findClosestTimestampForExerciseInSubmissionArray(exercise, this.programmingSubmissions);\r\n        } else if (exercise.type === ExerciseType.FILE_UPLOAD) {\r\n            // file upload exercises only have one submission\r\n            return this.fileUploadSubmissions.find((submission) => submission.participation?.exercise?.id === exercise.id);\r\n        } else {\r\n            const numberOfSubmissionsForExercise = this.submissionVersions.filter((submission) => submission.submission?.participation?.exercise?.id === exercise.id).length;\r\n            for (const submissionVersion of this.submissionVersions) {\r\n                if (\r\n                    Math.abs(submissionVersion.createdDate.diff(comparisonObject)) < smallestDiff &&\r\n                    submissionVersion.submission.participation?.exercise?.id === exercise.id &&\r\n                    (!submissionVersion.createdDate.isSame(comparisonObject) || numberOfSubmissionsForExercise === 1)\r\n                ) {\r\n                    smallestDiff = Math.abs(submissionVersion.createdDate.diff(comparisonObject));\r\n                    timestampWithSmallestDiff = submissionVersion.createdDate.valueOf();\r\n                }\r\n            }\r\n        }\r\n        return this.findCorrespondingSubmissionForTimestamp(timestampWithSmallestDiff);\r\n    }\r\n\r\n    /**\r\n     * Finds the closest timestamp for a submission of a given exercise in a given submission array\r\n     * @param exercise the exercise for which the submission should be found\r\n     * @param submissions the submissions array in which the submission should be found\r\n     */\r\n    private findClosestTimestampForExerciseInSubmissionArray(exercise: Exercise, submissions: Submission[]): number {\r\n        const comparisonObject = dayjs(this.selectedTimestamp);\r\n        let smallestDiff = Infinity;\r\n        let timestampWithSmallestDiff = 0;\r\n        const numberOfSubmissionsForExercise = submissions.filter(\r\n            (submission: ProgrammingSubmission | FileUploadSubmission) => submission.participation?.exercise?.id === exercise.id,\r\n        ).length;\r\n        for (const submission of submissions) {\r\n            if (\r\n                submission.submissionDate!.diff(comparisonObject) < smallestDiff &&\r\n                submission.participation?.exercise?.id === exercise.id &&\r\n                (!submission.submissionDate?.isSame(comparisonObject) || numberOfSubmissionsForExercise === 1)\r\n            ) {\r\n                smallestDiff = submission.submissionDate!.diff(comparisonObject);\r\n                timestampWithSmallestDiff = submission.submissionDate!.valueOf();\r\n            }\r\n        }\r\n        return timestampWithSmallestDiff;\r\n    }\r\n\r\n    private findExerciseIndex(firstSubmission: FileUploadSubmission | SubmissionVersion | ProgrammingSubmission) {\r\n        if (this.isSubmissionVersion(firstSubmission)) {\r\n            const submissionVersion = firstSubmission as SubmissionVersion;\r\n            return this.studentExam.exercises!.findIndex((examExercise) => examExercise.id === submissionVersion.submission.participation?.exercise?.id);\r\n        } else {\r\n            const submission = firstSubmission as FileUploadSubmission | ProgrammingSubmission;\r\n            return this.studentExam.exercises!.findIndex((examExercise) => examExercise.id === submission.participation?.exercise?.id);\r\n        }\r\n    }\r\n}\r\n","<h4 class=\"mb-4\" jhiTranslate=\"artemisApp.examTimeline.title\" [translateValues]=\"{ username: studentExam.user!.login! }\"></h4>\r\n@if (studentExam) {\r\n    <div>\r\n        <div class=\"custom-slider\">\r\n            <h5>Selected Timestamp: {{ displayCurrentTimestamp() }}</h5>\r\n            <mat-slider class=\"mat-slider mb-5\" [min]=\"0\" [max]=\"submissionTimeStamps.length - 1\" [step]=\"1\" (change)=\"onSliderInputChange()\" [showTickMarks]=\"true\">\r\n                <input matSliderThumb [(ngModel)]=\"timestampIndex\" #slider />\r\n            </mat-slider>\r\n        </div>\r\n        <jhi-exam-navigation-bar\r\n            #examNavigationBar\r\n            id=\"exam-navigation-bar\"\r\n            class=\"sticky-top d-block\"\r\n            [exercises]=\"studentExam?.exercises!\"\r\n            [exerciseIndex]=\"exerciseIndex\"\r\n            [examTimeLineView]=\"true\"\r\n            (onPageChanged)=\"onPageChange($event)\"\r\n        />\r\n        <!-- exercises -->\r\n        @for (exercise of studentExam.exercises; track exercise; let i = $index) {\r\n            @if (exercise && exercise.studentParticipations && exercise.studentParticipations[0]) {\r\n                @if (pageComponentVisited[i]) {\r\n                    <div [hidden]=\"i !== activePageIndex\">\r\n                        @switch (exercise.type) {\r\n                            @case (ExerciseType.QUIZ) {\r\n                                <jhi-quiz-submission-exam\r\n                                    [exercise]=\"exercise\"\r\n                                    [quizConfiguration]=\"exercise\"\r\n                                    [studentSubmission]=\"exercise.studentParticipations[0].submissions![0]\"\r\n                                    [readonly]=\"true\"\r\n                                    [examTimeline]=\"true\"\r\n                                />\r\n                            }\r\n                            @case (ExerciseType.FILE_UPLOAD) {\r\n                                <jhi-file-upload-submission-exam\r\n                                    [exercise]=\"exercise\"\r\n                                    [studentSubmission]=\"exercise.studentParticipations[0].submissions![0]\"\r\n                                    [readonly]=\"true\"\r\n                                    [examTimeline]=\"true\"\r\n                                />\r\n                            }\r\n                            @case (ExerciseType.TEXT) {\r\n                                <jhi-text-editor-exam\r\n                                    [exercise]=\"exercise\"\r\n                                    [studentSubmission]=\"exercise.studentParticipations[0].submissions![0]\"\r\n                                    [readonly]=\"true\"\r\n                                    [examTimeline]=\"true\"\r\n                                />\r\n                            }\r\n                            @case (ExerciseType.MODELING) {\r\n                                <jhi-modeling-submission-exam\r\n                                    [exercise]=\"exercise\"\r\n                                    [studentSubmission]=\"exercise.studentParticipations[0].submissions![0]\"\r\n                                    [readonly]=\"true\"\r\n                                    [examTimeline]=\"true\"\r\n                                />\r\n                            }\r\n                            @case (ExerciseType.PROGRAMMING) {\r\n                                <jhi-programming-exam-diff\r\n                                    [exercise]=\"exercise\"\r\n                                    [studentParticipation]=\"exercise.studentParticipations[0]\"\r\n                                    [(cachedDiffReports)]=\"cachedDiffReports\"\r\n                                />\r\n                            }\r\n                        }\r\n                    </div>\r\n                }\r\n            }\r\n        }\r\n    </div>\r\n}\r\n"],"mappings":"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","names":["ɵɵtext","ɵɵelement","ɵɵadvance","ɵɵproperty","ɵɵpureFunction2","_c0","ctx_r0","exerciseIndex","exercises","length","ɵɵelementStart","ɵɵlistener","ɵɵrestoreView","_r2","ɵɵnextContext","ɵɵresetView","changePage","ɵɵelementEnd","getOverviewStatus","ɵɵpipeBind1","faBars","_r3","ɵ$index_67_r4","$index","ɵɵpropertyInterpolate1","setExerciseButtonStatus","examTimeLineView","getExerciseButtonTooltip","exercise_r6","icon","ɵɵtextInterpolate","ɵɵtemplate","ExamNavigationBarComponent_For_35_Conditional_1_Template","ɵɵconditional","itemsVisiblePerSide","_r8","saveExercise","ɵɵclassProp","isProgrammingExercise","isFileUploadExercise","ɵɵtextInterpolate1","ExamNavigationBarComponent_Conditional_52_Conditional_5_Template","_r7","handInEarly","triggerExamAboutToEnd","overviewPageOpen","criticalTime","endDate","ExamNavigationBarComponent","layoutService","inject","LayoutService","examParticipationService","ExamParticipationService","examExerciseUpdateService","ExamExerciseUpdateService","repositoryService","CodeEditorRepositoryService","conflictService","CodeEditorConflictStateService","examSessions","onPageChanged","EventEmitter","examAboutToEnd","onExamHandInEarly","itemsVisiblePerSideDefault","dayjs","duration","subscriptionToLiveExamExerciseUpdates","ngOnInit","currentExerciseIdForNavigation","subscribe","exerciseIdToNavigateTo","changeExerciseById","subscribeToLayoutChanges","isBreakpointActive","CustomBreakpointNames","extraLarge","large","medium","isInitialSession","initialSession","undefined","filter","exercise","type","ExerciseType","PROGRAMMING","studentParticipations","forEach","domain","DomainType","PARTICIPATION","setDomain","getStatus","pipe","map","response","Object","values","CommitState","find","commitState","repositoryStatus","submission","getSubmissionForExercise","UNCOMMITTED_CHANGES","isSynced","ngAfterViewInit","setTimeout","headerHeight","document","querySelector","offsetHeight","documentElement","style","setProperty","emit","overviewPage","forceSave","overViewChange","exerciseId","foundIndex","findIndex","id","changeExercise","newIndex","submitted","FILE_UPLOAD","faCheck","faEdit","isOnlyOfflineIDE","ProgrammingExercise","programmingExercise","allowOfflineIde","allowOnlineEditor","selectors","inputs","outputs","decls","vars","consts","template","rf","ctx","ExamNavigationBarComponent_Conditional_4_Template","ExamNavigationBarComponent_Conditional_5_Template","ExamNavigationBarComponent_Conditional_6_Template","ExamNavigationBarComponent_Conditional_20_Template","ɵɵrepeaterCreate","ExamNavigationBarComponent_For_35_Template","ɵɵrepeaterTrackByIdentity","ExamNavigationBarComponent_Conditional_52_Template","ɵɵrepeater","TranslateDirective","ExamLiveEventsButtonComponent","NgClass","NgbTooltip","FaIconComponent","ExamTimerComponent","ArtemisTranslatePipe","styles","SubmissionVersion","id","submission","createdDate","content","SubmissionVersionService","http","inject","HttpClient","resourceUrl","findAllSubmissionVersionsOfSubmission","submissionId","get","pipe","map","res","convertCreatedDatesFromServer","version","__spreadProps","__spreadValues","createdDate","convertDateFromServer","factory","ɵfac","providedIn","ɵɵtext","ɵɵelement","ɵɵadvance","ɵɵproperty","ctx_r0","exercise","includedInOverallScore","ɵɵpureFunction1","_c1","previousSubmission","commitHash","ɵɵelementStart","ɵɵlistener","ɵɵrestoreView","_r2","ɵɵnextContext","ɵɵresetView","showGitDiff","ɵɵelementEnd","FeatureToggle","ProgrammingExercises","isLoadingDiffReport","ButtonSize","SMALL","faCodeCompare","ɵɵtemplate","ProgrammingExerciseExamDiffComponent_Conditional_10_Conditional_7_Template","ProgrammingExerciseExamDiffComponent_Conditional_10_Conditional_8_Template","ProgrammingExerciseExamDiffComponent_Conditional_10_Conditional_17_Template","_c0","currentSubmission","ɵɵconditional","ɵɵpropertyInterpolate","ɵɵpipeBind1","addedLineCount","removedLineCount","ProgrammingExerciseExamDiffComponent","ExamSubmissionComponent","programmingExerciseService","inject","ProgrammingExerciseService","modalService","NgbModal","cachedRepositoryFilesService","CachedRepositoryFilesService","studentParticipation","submissions","cachedDiffReports","Map","cachedDiffReportsChange","EventEmitter","exerciseIdSubject","Subject","cachedRepositoryFiles","exerciseType","ExerciseType","PROGRAMMING","exerciseIdSubscription","IncludedInOverallScore","ngOnInit","pipe","debounceTime","subscribe","key","calculateMapKey","has","diffReport","get","assignPropertiesToReportAndCalculateLineCount","loadGitDiffReport","ngOnDestroy","unsubscribe","subscription","getDiffReportForSubmissions","id","getDiffReportForSubmissionWithTemplate","take","gitDiffReport","set","emit","programmingExercise","participationIdForLeftCommit","participation","participationIdForRightCommit","leftCommitHash","rightCommitHash","calculateLineCount","entries","map","entry","lineCount","filter","reduce","lineCount1","lineCount2","previousLineCount","modalRef","open","GitDiffReportModalComponent","windowClass","WINDOW_CLASS","componentInstance","report","signal","diffForTemplateAndSolution","getCachedRepositoryFilesObservable","JSON","stringify","getExercise","getExerciseId","getSubmission","hasUnsavedChanges","setSubmissionVersion","submissionVersion","updateSubmissionFromView","updateViewFromSubmission","__ngFactoryType__","selectors","inputs","outputs","features","ɵɵProvidersFeature","provide","useExisting","ɵɵInheritDefinitionFeature","decls","vars","consts","template","rf","ctx","ProgrammingExerciseExamDiffComponent_Conditional_5_Template","ProgrammingExerciseExamDiffComponent_Conditional_10_Template","ɵɵtextInterpolate1","title","ɵɵtextInterpolate2","maxPoints","INCLUDED_COMPLETELY","projectKey","IncludedInScoreBadgeComponent","CommitsInfoComponent","TranslateDirective","GitDiffLineStatComponent","NgbTooltip","ButtonComponent","ArtemisTranslatePipe","encapsulation","_c0","_c1","MatSliderVisualThumb_Conditional_0_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ctx_r0","ɵɵnextContext","ɵɵadvance","ɵɵtextInterpolate","_c2","_c3","MatSlider_Conditional_6_Conditional_2_For_1_Template","ɵɵelement","tickMark_r1","ɵ$index_14_r2","ctx_r2","ɵɵclassMap","ɵɵstyleProp","MatSlider_Conditional_6_Conditional_2_Template","ɵɵrepeaterCreate","ɵɵrepeaterTrackByIndex","ɵɵrepeater","MatSlider_Conditional_6_Template","ɵɵtemplate","ɵɵconditional","MatSlider_Conditional_7_Template","ɵɵproperty","_MatThumb","_MatTickMark","MAT_SLIDER","InjectionToken","MAT_SLIDER_THUMB","MAT_SLIDER_RANGE_THUMB","MAT_SLIDER_VISUAL_THUMB","MatSliderVisualThumb","inject","ChangeDetectorRef","NgZone","MAT_SLIDER","Renderer2","ElementRef","Platform","sliderInput","input","renderer","cleanup","event","rect","isHovered","rippleRef","RippleState","animation","ignoreGlobalRippleConfig","_MatThumb","sibling","__ngFactoryType__","ɵɵdefineComponent","rf","ctx","ɵɵviewQuery","MatRipple","_c0","_c1","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵProvidersFeature","MAT_SLIDER_VISUAL_THUMB","ɵɵtemplate","MatSliderVisualThumb_Conditional_0_Template","ɵɵelement","ɵɵconditional","ɵɵadvance","ɵɵproperty","MatSlider","Directionality","MAT_RIPPLE_GLOBAL_OPTIONS","v","endInput","startInput","min","prevMin","oldEndValue","oldStartValue","oldValue","max","prevMax","step","prevStartValue","value","_CdkPrivateStyleLoader","_StructuralStylesLoader","animationMode","ANIMATION_MODULE_TYPE","eInput","sInput","thumb","thumbPosition","styles","trackStyle","index","offset","source","input1","input2","sourceThumb","valuetext","visualThumb","percentage","activePercentage","numActive","numInactive","_MatTickMark","endValue","startValue","numInactiveBeforeStartThumb","numInactiveAfterEndThumb","withAnimation","radius","centerX","centerY","dx","dy","dirIndex","ɵɵcontentQuery","MAT_SLIDER_THUMB","MAT_SLIDER_RANGE_THUMB","_c2","ɵɵclassMap","ɵɵclassProp","booleanAttribute","numberAttribute","_c3","ɵɵprojectionDef","ɵɵprojection","ɵɵelementStart","ɵɵelementEnd","MatSlider_Conditional_6_Template","MatSlider_Conditional_7_Template","MAT_SLIDER_THUMB_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","forwardRef","MatSliderThumb","MatSliderThumb","inject","NgZone","ElementRef","ChangeDetectorRef","MAT_SLIDER","Platform","numberAttribute","value","stringValue","EventEmitter","v","_MatThumb","booleanAttribute","signal","Subject","renderer","Renderer2","cleanup","event","isCursorOnSliderThumb","xPos","width","step","numSteps","percentage","impreciseValue","prevValue","min","max","options","fn","isDisabled","__ngFactoryType__","ɵɵdefineDirective","rf","ctx","ɵɵlistener","ɵɵattribute","ɵɵProvidersFeature","MAT_SLIDER_THUMB_VALUE_ACCESSOR","MAT_SLIDER_THUMB","ɵɵtext","ɵɵelement","ɵɵadvance","ɵɵproperty","exercise_r3","studentParticipations","submissions","ɵɵelementStart","ɵɵtwoWayListener","$event","ɵɵrestoreView","_r4","ctx_r1","ɵɵnextContext","i0","ɵɵtwoWayBindingSet","cachedDiffReports","ɵɵresetView","ɵɵelementEnd","ɵɵtwoWayProperty","ɵɵtemplate","StudentExamTimelineComponent_Conditional_2_For_20_Conditional_1_Conditional_1_Case_3_Template","StudentExamTimelineComponent_Conditional_2_For_20_Conditional_1_Conditional_1_Case_4_Template","StudentExamTimelineComponent_Conditional_2_For_20_Conditional_1_Conditional_1_Case_5_Template","StudentExamTimelineComponent_Conditional_2_For_20_Conditional_1_Conditional_1_Case_6_Template","StudentExamTimelineComponent_Conditional_2_For_20_Conditional_1_Conditional_1_Case_7_Template","ɵ$index_28_r6","activePageIndex","ɵɵconditional","tmp_17_0","type","ExerciseType","QUIZ","FILE_UPLOAD","TEXT","MODELING","PROGRAMMING","StudentExamTimelineComponent_Conditional_2_For_20_Conditional_1_Conditional_1_Template","pageComponentVisited","StudentExamTimelineComponent_Conditional_2_For_20_Conditional_1_Template","ɵɵlistener","_r1","onSliderInputChange","timestampIndex","onPageChange","ɵɵrepeaterCreate","StudentExamTimelineComponent_Conditional_2_For_20_Template","ɵɵrepeaterTrackByIdentity","ɵɵtextInterpolate1","displayCurrentTimestamp","submissionTimeStamps","length","studentExam","exercises","exerciseIndex","ɵɵrepeater","StudentExamTimelineComponent","activatedRoute","inject","ActivatedRoute","submissionService","SubmissionService","submissionVersionService","SubmissionVersionService","cdr","ChangeDetectorRef","SubmissionVersion","selectedTimestamp","activeExamPage","ExamPage","submissionVersions","programmingSubmissions","fileUploadSubmissions","currentExercise","currentSubmission","changesSubscription","Map","currentPageComponents","examNavigationBarComponent","activatedRouteSubscription","ngOnInit","data","subscribe","studentExamWithGrade","Array","fill","retrieveSubmissionDataAndTimeStamps","results","flat","forEach","result","isSubmissionVersion","submissionVersion","push","createdDate","isFileUploadSubmission","fileUploadSubmission","submissionDate","programmingSubmission","sortTimeStamps","toDate","getTime","firstSubmission","findFirstSubmission","findExerciseIndex","changePage","ngAfterViewInit","changes","updateSubmissionOrSubmissionVersionInView","ngOnDestroy","unsubscribe","updateProgrammingExerciseView","activeProgrammingComponent","activePageComponent","studentParticipation","exercise","previousSubmission","findPreviousProgrammingSubmission","filter","submission","participation","id","exerciseIdSubject","next","comparisonTimestamp","smallestDiff","Infinity","correspondingSubmission","diff","Math","abs","isBefore","updateFileUploadExerciseView","fileUploadComponent","studentSubmission","update","updateViewFromSubmission","dayjs","format","object","filePath","submissionObservables","findAllSubmissionsOfParticipation","pipe","map","body","findAllSubmissionVersionsOfSubmission","mergeMap","versions","toArray","forkJoin","tap","detectChanges","sort","date1","date2","isAfter","exerciseChange","activeComponent","onDeactivate","findSubmissionForExerciseClosestToCurrentTimeStampForExercise","initializeExercise","find","isSame","findIndex","exercise1","activateActiveComponent","setSubmissionVersion","onActivate","examExercise","submissionComponent","getExercise","findCorrespondingSubmissionForTimestamp","timestamp","comparisonObject","timestampWithSmallestDiff","findClosestTimestampForExerciseInSubmissionArray","numberOfSubmissionsForExercise","valueOf","selectors","viewQuery","rf","ctx","ExamSubmissionComponent","StudentExamTimelineComponent_Conditional_2_Template","ɵɵpureFunction1","_c1","user","login","TranslateDirective","MatSlider","MatSliderThumb","FormsModule","DefaultValueAccessor","NgControlStatus","NgModel","ExamNavigationBarComponent","QuizExamSubmissionComponent","FileUploadExamSubmissionComponent","TextExamSubmissionComponent","ModelingExamSubmissionComponent","ProgrammingExerciseExamDiffComponent","styles"],"x_google_ignoreList":[6]}