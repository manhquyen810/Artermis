{
  "version": 3,
  "sources": ["src/main/webapp/app/exercises/shared/participation-submission/participation-submission.component.ts", "src/main/webapp/app/exercises/shared/participation-submission/participation-submission.component.html"],
  "sourcesContent": ["import { Component, Input, OnInit, inject } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { SubmissionService } from 'app/exercises/shared/submission/submission.service';\r\nimport { Subject, Subscription, combineLatest, of } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { ParticipationService } from 'app/exercises/shared/participation/participation.service';\r\nimport { Submission } from 'app/entities/submission.model';\r\nimport { Participation, ParticipationType } from 'app/entities/participation/participation.model';\r\nimport { StudentParticipation } from 'app/entities/participation/student-participation.model';\r\nimport { ExerciseService } from 'app/exercises/shared/exercise/exercise.service';\r\nimport { Exercise, ExerciseType } from 'app/entities/exercise.model';\r\nimport { ProgrammingExerciseService } from 'app/exercises/programming/manage/services/programming-exercise.service';\r\nimport dayjs from 'dayjs/esm';\r\nimport { ProgrammingSubmission } from 'app/entities/programming/programming-submission.model';\r\nimport { ProgrammingExercise } from 'app/entities/programming/programming-exercise.model';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ProfileService } from 'app/shared/layouts/profiles/profile.service';\r\nimport { ButtonSize } from 'app/shared/components/button.component';\r\nimport { ActionType } from 'app/shared/delete-dialog/delete-dialog.model';\r\nimport { Result } from 'app/entities/result.model';\r\nimport { FileUploadAssessmentService } from 'app/exercises/file-upload/assess/file-upload-assessment.service';\r\nimport { ModelingAssessmentService } from 'app/exercises/modeling/assess/modeling-assessment.service';\r\nimport { TextAssessmentService } from 'app/exercises/text/assess/text-assessment.service';\r\nimport { ProgrammingAssessmentManualResultService } from 'app/exercises/programming/assess/manual-result/programming-assessment-manual-result.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { createCommitUrl } from 'app/exercises/programming/shared/utils/programming-exercise.utils';\r\nimport { EventManager } from 'app/core/util/event-manager.service';\r\nimport { getExerciseDueDate, hasExerciseDueDatePassed } from 'app/exercises/shared/exercise/exercise.utils';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { NgClass } from '@angular/common';\r\nimport { NgxDatatableModule } from '@siemens/ngx-datatable';\r\nimport { ResultComponent } from '../result/result.component';\r\nimport { DeleteButtonDirective } from 'app/shared/delete-dialog/delete-button.directive';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\nimport { ArtemisTimeAgoPipe } from 'app/shared/pipes/artemis-time-ago.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-participation-submission',\r\n    templateUrl: './participation-submission.component.html',\r\n    imports: [TranslateDirective, NgClass, NgxDatatableModule, ResultComponent, DeleteButtonDirective, FaIconComponent, ArtemisDatePipe, ArtemisTranslatePipe, ArtemisTimeAgoPipe],\r\n})\r\nexport class ParticipationSubmissionComponent implements OnInit {\r\n    private route = inject(ActivatedRoute);\r\n    private submissionService = inject(SubmissionService);\r\n    private translateService = inject(TranslateService);\r\n    private participationService = inject(ParticipationService);\r\n    private exerciseService = inject(ExerciseService);\r\n    private programmingExerciseService = inject(ProgrammingExerciseService);\r\n    private fileUploadAssessmentService = inject(FileUploadAssessmentService);\r\n    private modelingAssessmentsService = inject(ModelingAssessmentService);\r\n    private textAssessmentService = inject(TextAssessmentService);\r\n    private programmingAssessmentService = inject(ProgrammingAssessmentManualResultService);\r\n    private eventManager = inject(EventManager);\r\n    private profileService = inject(ProfileService);\r\n\r\n    readonly ParticipationType = ParticipationType;\r\n    readonly buttonSizeSmall = ButtonSize.SMALL;\r\n    readonly actionTypeEmpty = ActionType.NoButtonTextDelete;\r\n\r\n    // These two variables are used to emit errors to the delete dialog\r\n    protected dialogErrorSource = new Subject<string>();\r\n    dialogError$ = this.dialogErrorSource.asObservable();\r\n\r\n    @Input() participationId: number;\r\n\r\n    public exerciseStatusBadge = 'bg-success';\r\n\r\n    isTmpOrSolutionProgrParticipation = false;\r\n    exercise?: Exercise;\r\n    participation?: Participation;\r\n    dueDate?: dayjs.Dayjs;\r\n    submissions?: Submission[];\r\n    eventSubscriber: Subscription;\r\n    isLoading = true;\r\n    commitHashURLTemplate?: string;\r\n    resultIdToBuildJobIdMap?: { [key: string]: string };\r\n\r\n    // Icons\r\n    faTrash = faTrash;\r\n\r\n    /**\r\n     * Initialize component by setting up page and subscribe to eventManager\r\n     */\r\n    ngOnInit() {\r\n        this.setupPage();\r\n        this.eventSubscriber = this.eventManager.subscribe('submissionsModification', () => this.setupPage());\r\n    }\r\n\r\n    /**\r\n     * Set up page by loading participation and all submissions\r\n     */\r\n    setupPage() {\r\n        this.isLoading = true;\r\n\r\n        // If no query parameters are set, this.route.queryParams will be undefined so we need a fallback dummy observable\r\n        combineLatest([this.route.params, this.route.queryParams ?? of(undefined)]).subscribe(([params, queryParams]) => {\r\n            this.participationId = +params['participationId'];\r\n            if (queryParams?.['isTmpOrSolutionProgrParticipation'] != undefined) {\r\n                this.isTmpOrSolutionProgrParticipation = queryParams['isTmpOrSolutionProgrParticipation'] === 'true';\r\n            }\r\n            this.participationService.getBuildJobIdsForResultsOfParticipation(this.participationId).subscribe((resultIdToBuildJobIdMap) => {\r\n                this.resultIdToBuildJobIdMap = resultIdToBuildJobIdMap;\r\n                if (this.isTmpOrSolutionProgrParticipation) {\r\n                    // Find programming exercise of template and solution programming participation\r\n                    this.programmingExerciseService.findWithTemplateAndSolutionParticipation(params['exerciseId'], true).subscribe((exerciseResponse) => {\r\n                        this.exercise = exerciseResponse.body!;\r\n                        this.exerciseStatusBadge = dayjs().isAfter(dayjs(this.exercise.dueDate!)) ? 'bg-danger' : 'bg-success';\r\n                        const templateParticipation = (this.exercise as ProgrammingExercise).templateParticipation;\r\n                        const solutionParticipation = (this.exercise as ProgrammingExercise).solutionParticipation;\r\n\r\n                        // Check if requested participationId belongs to the template or solution participation\r\n                        if (this.participationId === templateParticipation?.id) {\r\n                            this.participation = templateParticipation;\r\n                            this.submissions = templateParticipation.submissions!;\r\n                            // This is needed to access the exercise in the result details\r\n                            templateParticipation.programmingExercise = this.exercise;\r\n                        } else if (this.participationId === solutionParticipation?.id) {\r\n                            this.participation = solutionParticipation;\r\n                            this.submissions = solutionParticipation.submissions!;\r\n                            // This is needed to access the exercise in the result details\r\n                            solutionParticipation.programmingExercise = this.exercise;\r\n                        } else {\r\n                            // Should not happen\r\n                            alert(this.translateService.instant('artemisApp.participation.noParticipation'));\r\n                        }\r\n\r\n                        if (this.submissions) {\r\n                            this.submissions.forEach((submission: ProgrammingSubmission) => {\r\n                                if (submission.results) {\r\n                                    submission.results.forEach((result: Result) => {\r\n                                        result.buildJobId = this.resultIdToBuildJobIdMap?.[result.id!];\r\n                                    });\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        this.isLoading = false;\r\n                    });\r\n                } else {\r\n                    // Get exercise for release and due dates\r\n                    this.exerciseService.find(params['exerciseId']).subscribe((exerciseResponse) => {\r\n                        this.exercise = exerciseResponse.body!;\r\n                        this.updateStatusBadgeColor();\r\n                    });\r\n                    this.fetchParticipationAndSubmissionsForStudent();\r\n                    this.isLoading = false;\r\n                }\r\n            });\r\n        });\r\n\r\n        // Get active profiles, to distinguish between VC systems\r\n        this.profileService.getProfileInfo().subscribe((profileInfo) => {\r\n            this.commitHashURLTemplate = profileInfo.commitHashURLTemplate;\r\n        });\r\n    }\r\n\r\n    fetchParticipationAndSubmissionsForStudent() {\r\n        combineLatest([this.participationService.find(this.participationId), this.submissionService.findAllSubmissionsOfParticipation(this.participationId)])\r\n            .pipe(\r\n                map((res) => [res[0].body, res[1].body]),\r\n                catchError(() => of(null)),\r\n            )\r\n            .subscribe((response) => {\r\n                this.isLoading = false;\r\n                if (!response) {\r\n                    return;\r\n                }\r\n\r\n                const participation = response[0] as StudentParticipation;\r\n                const submissions = response[1] as Submission[];\r\n                if (participation) {\r\n                    this.participation = participation;\r\n                    this.updateStatusBadgeColor();\r\n                }\r\n\r\n                if (submissions) {\r\n                    this.submissions = submissions;\r\n                    if (this.participation) {\r\n                        this.participation.submissions = submissions;\r\n                    }\r\n                    // set the submission to every result so it can be accessed via the result\r\n                    // set the build log availability for every result\r\n                    submissions.forEach((submission: Submission) => {\r\n                        if (submission.results) {\r\n                            submission.results.forEach((result: Result) => {\r\n                                result.submission = submission;\r\n                                result.buildJobId = this.resultIdToBuildJobIdMap?.[result.id!];\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    getName() {\r\n        if (this.participation?.type === ParticipationType.STUDENT || this.participation?.type === ParticipationType.PROGRAMMING) {\r\n            return (this.participation as StudentParticipation).student?.name || (this.participation as StudentParticipation).team?.name;\r\n        } else if (this.participation?.type === ParticipationType.SOLUTION) {\r\n            return this.translateService.instant('artemisApp.participation.solutionParticipation');\r\n        } else if (this.participation?.type === ParticipationType.TEMPLATE) {\r\n            return this.translateService.instant('artemisApp.participation.templateParticipation');\r\n        }\r\n        return 'N/A';\r\n    }\r\n\r\n    getCommitUrl(submission: ProgrammingSubmission): string | undefined {\r\n        return createCommitUrl(this.commitHashURLTemplate, (this.exercise as ProgrammingExercise)?.projectKey, this.participation, submission);\r\n    }\r\n\r\n    private updateStatusBadgeColor() {\r\n        let afterDueDate = false;\r\n\r\n        if (this.exercise && this.participation) {\r\n            this.dueDate = getExerciseDueDate(this.exercise, this.participation);\r\n            afterDueDate = hasExerciseDueDatePassed(this.exercise, this.participation);\r\n        } else if (this.exercise) {\r\n            afterDueDate = dayjs().isAfter(dayjs(this.exercise.dueDate!));\r\n        }\r\n\r\n        this.exerciseStatusBadge = afterDueDate ? 'bg-danger' : 'bg-success';\r\n    }\r\n\r\n    /**\r\n     * Delete a submission from the server\r\n     * @param submissionId - Id of submission that is deleted.\r\n     */\r\n    deleteSubmission(submissionId: number) {\r\n        this.submissionService.delete(submissionId).subscribe({\r\n            next: () => {\r\n                this.eventManager.broadcast({\r\n                    name: 'submissionsModification',\r\n                    content: 'Deleted a submission',\r\n                });\r\n                this.dialogErrorSource.next('');\r\n            },\r\n            error: (error: HttpErrorResponse) => this.dialogErrorSource.next(error.message),\r\n        });\r\n    }\r\n\r\n    deleteResult(submission: Submission, result: Result) {\r\n        if (this.exercise && submission.id && result.id && this.participationId) {\r\n            switch (this.exercise.type) {\r\n                case ExerciseType.TEXT:\r\n                    this.textAssessmentService.deleteAssessment(this.participationId, submission.id, result.id).subscribe({\r\n                        next: () => this.updateResults(submission, result),\r\n                        error: (error: HttpErrorResponse) => this.handleErrorResponse(error),\r\n                    });\r\n                    break;\r\n                case ExerciseType.MODELING:\r\n                    this.modelingAssessmentsService.deleteAssessment(this.participationId, submission.id, result.id).subscribe({\r\n                        next: () => this.updateResults(submission, result),\r\n                        error: (error: HttpErrorResponse) => this.handleErrorResponse(error),\r\n                    });\r\n                    break;\r\n                case ExerciseType.FILE_UPLOAD:\r\n                    this.fileUploadAssessmentService.deleteAssessment(this.participationId, submission.id, result.id).subscribe({\r\n                        next: () => this.updateResults(submission, result),\r\n                        error: (error: HttpErrorResponse) => this.handleErrorResponse(error),\r\n                    });\r\n                    break;\r\n                case ExerciseType.PROGRAMMING:\r\n                    this.programmingAssessmentService.deleteAssessment(this.participationId, submission.id, result.id).subscribe({\r\n                        next: () => this.updateResults(submission, result),\r\n                        error: (error: HttpErrorResponse) => this.handleErrorResponse(error),\r\n                    });\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    viewBuildLogs(resultId: number): void {\r\n        const url = `/api/programming/build-log/${resultId}`;\r\n        window.open(url, '_blank');\r\n    }\r\n\r\n    private updateResults(submission: Submission, result: Result) {\r\n        submission.results = submission.results?.filter((remainingResult) => remainingResult.id !== result.id);\r\n        this.dialogErrorSource.next('');\r\n    }\r\n\r\n    private handleErrorResponse(error: HttpErrorResponse) {\r\n        if (error.error?.message === 'error.hasComplaint') {\r\n            this.dialogErrorSource.next(this.translateService.instant('artemisApp.result.delete.error.hasComplaint'));\r\n        } else {\r\n            this.dialogErrorSource.next(error.message);\r\n        }\r\n    }\r\n}\r\n", "@if (participation) {\r\n    <div>\r\n        <h2\r\n            jhiTranslate=\"artemisApp.participation.participationSubmission.submissionsForParticipation\"\r\n            [translateValues]=\"{ participant: getName(), exercise: exercise?.title }\"\r\n        ></h2>\r\n        @if (exercise?.releaseDate) {\r\n            <h4>\r\n                <span class=\"me-2\"> {{ 'artemisApp.exercise.releaseDate' | artemisTranslate }}: {{ (exercise!.releaseDate | artemisDate) || 'N/A' }} </span>\r\n                <span [ngClass]=\"exerciseStatusBadge\" class=\"badge\">{{ exercise!.releaseDate | artemisTimeAgo }} </span>\r\n            </h4>\r\n        }\r\n        @if (dueDate) {\r\n            <h4>\r\n                <span class=\"me-2\"> {{ 'artemisApp.exercise.dueDate' | artemisTranslate }}: {{ (dueDate | artemisDate) || 'N/A' }} </span>\r\n                <span [ngClass]=\"exerciseStatusBadge\" class=\"badge\"> {{ dueDate | artemisTimeAgo }} </span>\r\n            </h4>\r\n        }\r\n        @if (exercise?.assessmentDueDate) {\r\n            <h4>\r\n                <span class=\"me-2\"> {{ 'artemisApp.exercise.assessmentDueDate' | artemisTranslate }}: {{ (exercise!.assessmentDueDate | artemisDate) || 'N/A' }} </span>\r\n                <span [ngClass]=\"exerciseStatusBadge\" class=\"badge\">{{ exercise!.assessmentDueDate | artemisTimeAgo }}</span>\r\n            </h4>\r\n        }\r\n    </div>\r\n}\r\n<br />\r\n@if (submissions) {\r\n    <div class=\"table-responsive\">\r\n        <ngx-datatable\r\n            id=\"participationSubmissionTable\"\r\n            class=\"bootstrap\"\r\n            [headerHeight]=\"50\"\r\n            [limit]=\"20\"\r\n            [columnMode]=\"'force'\"\r\n            [footerHeight]=\"50\"\r\n            [rowHeight]=\"'auto'\"\r\n            [rows]=\"submissions\"\r\n            [sorts]=\"[{ prop: 'id', dir: 'asc' }]\"\r\n            [rowClass]=\"\"\r\n            [scrollbarH]=\"true\"\r\n        >\r\n            <ngx-datatable-column name=\"Id\" prop=\"id\" [minWidth]=\"60\" [width]=\"60\">\r\n                <ng-template ngx-datatable-cell-template let-value=\"value\">\r\n                    {{ value }}\r\n                </ng-template>\r\n            </ngx-datatable-column>\r\n            <ngx-datatable-column prop=\"type\" [minWidth]=\"80\" [width]=\"80\">\r\n                <ng-template ngx-datatable-header-template>\r\n                    <span jhiTranslate=\"artemisApp.participation.participationSubmission.submissionType\"></span>\r\n                </ng-template>\r\n                <ng-template ngx-datatable-cell-template let-value=\"value\">\r\n                    {{ value }}\r\n                </ng-template>\r\n            </ngx-datatable-column>\r\n            <ngx-datatable-column prop=\"submissionDate\" [minWidth]=\"80\" [width]=\"80\">\r\n                <ng-template ngx-datatable-header-template>\r\n                    <span jhiTranslate=\"artemisApp.participation.participationSubmission.submissionDate\"></span>\r\n                </ng-template>\r\n                <ng-template ngx-datatable-cell-template let-value=\"value\">\r\n                    {{ value | artemisDate: 'long' : true }}\r\n                </ng-template>\r\n            </ngx-datatable-column>\r\n            <ngx-datatable-column prop=\"results\" [minWidth]=\"80\" [width]=\"80\">\r\n                <ng-template ngx-datatable-header-template>\r\n                    <span jhiTranslate=\"artemisApp.participation.participationSubmission.resultCount\"></span>\r\n                </ng-template>\r\n                <ng-template ngx-datatable-cell-template let-value=\"value\">\r\n                    {{ value.length || 0 }}\r\n                </ng-template>\r\n            </ngx-datatable-column>\r\n            <ngx-datatable-column prop=\"results\" [minWidth]=\"500\" [width]=\"500\">\r\n                <ng-template ngx-datatable-header-template>\r\n                    <span jhiTranslate=\"artemisApp.participation.participationSubmission.results\"></span>\r\n                </ng-template>\r\n                <ng-template ngx-datatable-cell-template let-value=\"value\">\r\n                    <div class=\"d-flex flex-column\">\r\n                        @for (result of value; track result) {\r\n                            <div>\r\n                                <jhi-result\r\n                                    [exercise]=\"exercise\"\r\n                                    [result]=\"result\"\r\n                                    [participation]=\"participation!\"\r\n                                    [showUngradedResults]=\"!isTmpOrSolutionProgrParticipation\"\r\n                                    [showBadge]=\"!isTmpOrSolutionProgrParticipation\"\r\n                                />\r\n                                @if (exercise?.isAtLeastInstructor) {\r\n                                    <span\r\n                                        class=\"badge\"\r\n                                        style=\"border-radius: 0px\"\r\n                                        jhiDeleteButton\r\n                                        [buttonSize]=\"buttonSizeSmall\"\r\n                                        [actionType]=\"actionTypeEmpty\"\r\n                                        [entityTitle]=\"'deleteResultButton'\"\r\n                                        deleteQuestion=\"artemisApp.result.delete.question2\"\r\n                                        (delete)=\"deleteResult(result.submission, result)\"\r\n                                        [dialogError]=\"dialogError$\"\r\n                                    >\r\n                                        <fa-icon [icon]=\"faTrash\" />\r\n                                        {{ 'artemisApp.result.delete.buttonText' | artemisTranslate }}\r\n                                    </span>\r\n                                    @if (result?.buildJobId) {\r\n                                        <a class=\"detail-link\" (click)=\"viewBuildLogs(result.buildJobId)\" jhiTranslate=\"artemisApp.result.buildLogs.viewLogs\"></a>\r\n                                    }\r\n                                }\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </ng-template>\r\n            </ngx-datatable-column>\r\n            @if (isTmpOrSolutionProgrParticipation || participation?.type === ParticipationType.PROGRAMMING) {\r\n                <ngx-datatable-column prop=\"commitHash\" [minWidth]=\"80\" [width]=\"80\">\r\n                    <ng-template ngx-datatable-header-template>\r\n                        <span jhiTranslate=\"artemisApp.programmingSubmission.commitHash\"></span>\r\n                    </ng-template>\r\n                    <ng-template ngx-datatable-cell-template let-row=\"row\" let-value=\"value\">\r\n                        @if (value) {\r\n                            <div>\r\n                                @if (getCommitUrl(row)) {\r\n                                    <a href=\"{{ getCommitUrl(row) }}\" target=\"_blank\" rel=\"noopener noreferrer\">{{ value.slice(0, 11) }}</a>\r\n                                } @else {\r\n                                    {{ value.slice(0, 11) }}\r\n                                }\r\n                            </div>\r\n                        } @else {\r\n                            {{ 'n.a' }}\r\n                        }\r\n                    </ng-template>\r\n                </ngx-datatable-column>\r\n            }\r\n            <ngx-datatable-column prop=\"results\" [minWidth]=\"180\" [width]=\"180\">\r\n                <ng-template ngx-datatable-header-template>\r\n                    <span jhiTranslate=\"artemisApp.result.assessmentType\"></span>\r\n                </ng-template>\r\n                <ng-template ngx-datatable-cell-template let-value=\"value\">\r\n                    <div class=\"d-flex flex-column\">\r\n                        @for (result of value; track result) {\r\n                            <div>{{ result.assessmentType }}</div>\r\n                        }\r\n                    </div>\r\n                </ng-template>\r\n            </ngx-datatable-column>\r\n            <ngx-datatable-column prop=\"results\" [minWidth]=\"200\" [width]=\"200\">\r\n                <ng-template ngx-datatable-header-template>\r\n                    <span jhiTranslate=\"artemisApp.participation.participationSubmission.assessor\"></span>\r\n                </ng-template>\r\n                <ng-template ngx-datatable-cell-template let-value=\"value\">\r\n                    <div class=\"d-flex flex-column\">\r\n                        @for (result of value; track result) {\r\n                            <div>{{ result.assessor?.name || 'n.a' }}</div>\r\n                        }\r\n                    </div>\r\n                </ng-template>\r\n            </ngx-datatable-column>\r\n            <ngx-datatable-column prop=\"results\" [minWidth]=\"200\" [width]=\"200\">\r\n                <ng-template ngx-datatable-header-template>\r\n                    <span jhiTranslate=\"artemisApp.exercise.completionDate\"></span>\r\n                </ng-template>\r\n                <ng-template ngx-datatable-cell-template let-value=\"value\">\r\n                    <div class=\"d-flex flex-column\">\r\n                        @for (result of value; track result) {\r\n                            <div>{{ result.completionDate | artemisDate: 'long' : true }}</div>\r\n                        }\r\n                    </div>\r\n                </ng-template>\r\n            </ngx-datatable-column>\r\n            @if (exercise?.isAtLeastInstructor) {\r\n                <ngx-datatable-column prop=\"id\" [minWidth]=\"120\" [width]=\"120\">\r\n                    <ng-template ngx-datatable-header-template>\r\n                        <span jhiTranslate=\"artemisApp.participation.participationSubmission.action\"></span>\r\n                    </ng-template>\r\n                    <ng-template ngx-datatable-cell-template let-value=\"value\">\r\n                        <button\r\n                            class=\"btn btn-danger btn-sm me-1\"\r\n                            id=\"deleteButton\"\r\n                            jhiDeleteButton\r\n                            deleteQuestion=\"artemisApp.participation.participationSubmission.delete\"\r\n                            (delete)=\"deleteSubmission(value)\"\r\n                            [dialogError]=\"dialogError$\"\r\n                        >\r\n                            <fa-icon [icon]=\"faTrash\" />\r\n                        </button>\r\n                    </ng-template>\r\n                </ngx-datatable-column>\r\n            }\r\n        </ngx-datatable>\r\n    </div>\r\n}\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275textInterpolate2", "\u0275\u0275pipeBind1", "ctx_r0", "exercise", "releaseDate", "\u0275\u0275property", "exerciseStatusBadge", "\u0275\u0275textInterpolate1", "dueDate", "assessmentDueDate", "\u0275\u0275textInterpolate", "\u0275\u0275element", "\u0275\u0275template", "ParticipationSubmissionComponent_Conditional_0_Conditional_5_Template", "ParticipationSubmissionComponent_Conditional_0_Conditional_6_Template", "ParticipationSubmissionComponent_Conditional_0_Conditional_7_Template", "\u0275\u0275pureFunction2", "_c0", "getName", "title", "\u0275\u0275conditional", "value_r2", "value_r3", "\u0275\u0275pipeBind3", "value_r4", "value_r5", "length", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r8", "result_r7", "\u0275\u0275nextContext", "$implicit", "\u0275\u0275resetView", "viewBuildLogs", "buildJobId", "_r6", "deleteResult", "submission", "ParticipationSubmissionComponent_Conditional_3_ng_template_35_For_4_Conditional_5_Conditional_7_Template", "buttonSizeSmall", "actionTypeEmpty", "dialogError$", "faTrash", "ParticipationSubmissionComponent_Conditional_3_ng_template_35_For_4_Conditional_5_Template", "participation", "isTmpOrSolutionProgrParticipation", "isAtLeastInstructor", "\u0275\u0275repeaterCreate", "ParticipationSubmissionComponent_Conditional_3_ng_template_35_For_4_Template", "\u0275\u0275repeaterTrackByIdentity", "\u0275\u0275repeater", "value_r9", "\u0275\u0275propertyInterpolate", "getCommitUrl", "row_r11", "\u0275\u0275sanitizeUrl", "value_r12", "slice", "ParticipationSubmissionComponent_Conditional_3_Conditional_38_ng_template_5_Conditional_1_Conditional_3_Template", "ParticipationSubmissionComponent_Conditional_3_Conditional_38_ng_template_5_Conditional_1_Conditional_4_Template", "ParticipationSubmissionComponent_Conditional_3_Conditional_38_ng_template_5_Conditional_1_Template", "ParticipationSubmissionComponent_Conditional_3_Conditional_38_ng_template_5_Conditional_2_Template", "ParticipationSubmissionComponent_Conditional_3_Conditional_38_ng_template_3_Template", "ParticipationSubmissionComponent_Conditional_3_Conditional_38_ng_template_5_Template", "result_r13", "assessmentType", "ParticipationSubmissionComponent_Conditional_3_ng_template_43_For_4_Template", "value_r14", "result_r15", "assessor", "name", "ParticipationSubmissionComponent_Conditional_3_ng_template_50_For_4_Template", "value_r16", "result_r17", "completionDate", "ParticipationSubmissionComponent_Conditional_3_ng_template_57_For_4_Template", "value_r18", "value_r20", "_r19", "value", "deleteSubmission", "ParticipationSubmissionComponent_Conditional_3_Conditional_60_ng_template_3_Template", "ParticipationSubmissionComponent_Conditional_3_Conditional_60_ng_template_5_Template", "ParticipationSubmissionComponent_Conditional_3_ng_template_7_Template", "ParticipationSubmissionComponent_Conditional_3_ng_template_12_Template", "ParticipationSubmissionComponent_Conditional_3_ng_template_14_Template", "ParticipationSubmissionComponent_Conditional_3_ng_template_19_Template", "ParticipationSubmissionComponent_Conditional_3_ng_template_21_Template", "ParticipationSubmissionComponent_Conditional_3_ng_template_26_Template", "ParticipationSubmissionComponent_Conditional_3_ng_template_28_Template", "ParticipationSubmissionComponent_Conditional_3_ng_template_33_Template", "ParticipationSubmissionComponent_Conditional_3_ng_template_35_Template", "ParticipationSubmissionComponent_Conditional_3_Conditional_38_Template", "ParticipationSubmissionComponent_Conditional_3_ng_template_41_Template", "ParticipationSubmissionComponent_Conditional_3_ng_template_43_Template", "ParticipationSubmissionComponent_Conditional_3_ng_template_48_Template", "ParticipationSubmissionComponent_Conditional_3_ng_template_50_Template", "ParticipationSubmissionComponent_Conditional_3_ng_template_55_Template", "ParticipationSubmissionComponent_Conditional_3_ng_template_57_Template", "ParticipationSubmissionComponent_Conditional_3_Conditional_60_Template", "submissions", "\u0275\u0275pureFunction1", "_c2", "\u0275\u0275pureFunction0", "_c1", "type", "ParticipationType", "PROGRAMMING", "ParticipationSubmissionComponent", "route", "inject", "ActivatedRoute", "submissionService", "SubmissionService", "translateService", "TranslateService", "participationService", "ParticipationService", "exerciseService", "ExerciseService", "programmingExerciseService", "ProgrammingExerciseService", "fileUploadAssessmentService", "FileUploadAssessmentService", "modelingAssessmentsService", "ModelingAssessmentService", "textAssessmentService", "TextAssessmentService", "programmingAssessmentService", "ProgrammingAssessmentManualResultService", "eventManager", "EventManager", "profileService", "ProfileService", "ButtonSize", "SMALL", "ActionType", "NoButtonTextDelete", "dialogErrorSource", "Subject", "asObservable", "participationId", "eventSubscriber", "isLoading", "commitHashURLTemplate", "resultIdToBuildJobIdMap", "ngOnInit", "setupPage", "subscribe", "combineLatest", "params", "queryParams", "of", "undefined", "getBuildJobIdsForResultsOfParticipation", "findWithTemplateAndSolutionParticipation", "exerciseResponse", "body", "dayjs", "isAfter", "templateParticipation", "solutionParticipation", "id", "programmingExercise", "alert", "instant", "forEach", "results", "result", "find", "updateStatusBadgeColor", "fetchParticipationAndSubmissionsForStudent", "getProfileInfo", "profileInfo", "findAllSubmissionsOfParticipation", "pipe", "map", "res", "catchError", "response", "STUDENT", "student", "team", "SOLUTION", "TEMPLATE", "createCommitUrl", "projectKey", "afterDueDate", "getExerciseDueDate", "hasExerciseDueDatePassed", "submissionId", "delete", "next", "broadcast", "content", "error", "message", "ExerciseType", "TEXT", "deleteAssessment", "updateResults", "handleErrorResponse", "MODELING", "FILE_UPLOAD", "resultId", "url", "window", "open", "filter", "remainingResult", "selectors", "inputs", "decls", "vars", "consts", "template", "rf", "ctx", "ParticipationSubmissionComponent_Conditional_0_Template", "ParticipationSubmissionComponent_Conditional_3_Template", "TranslateDirective", "NgClass", "NgxDatatableModule", "DatatableComponent", "DataTableColumnDirective", "DataTableColumnHeaderDirective", "DataTableColumnCellDirective", "ResultComponent", "DeleteButtonDirective", "FaIconComponent", "ArtemisDatePipe", "ArtemisTranslatePipe", "ArtemisTimeAgoPipe", "encapsulation"]
}
