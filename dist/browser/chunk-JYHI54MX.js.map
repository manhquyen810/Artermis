{
  "version": 3,
  "sources": ["src/main/webapp/app/exercises/programming/assess/repo-export/programming-assessment-repo-export.service.ts"],
  "sourcesContent": ["import { Injectable, inject } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport dayjs from 'dayjs/esm';\r\n\r\nexport type RepositoryExportOptions = {\r\n    exportAllParticipants: boolean;\r\n    filterLateSubmissions: boolean;\r\n    filterLateSubmissionsDate?: dayjs.Dayjs;\r\n    excludePracticeSubmissions: boolean;\r\n    addParticipantName: boolean;\r\n    combineStudentCommits: boolean;\r\n    anonymizeRepository: boolean;\r\n    normalizeCodeStyle: boolean;\r\n};\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ProgrammingAssessmentRepoExportService {\r\n    private http = inject(HttpClient);\r\n\r\n    public resourceUrl = 'api/programming/programming-exercises';\r\n\r\n    /**\r\n     * Exports repositories to the server by their participant identifiers\r\n     * @param {number} exerciseId - Id of the exercise\r\n     * @param {string[]} participantIdentifiers - Identifiers of participants\r\n     * @param {RepositoryExportOptions} repositoryExportOptions\r\n     */\r\n    exportReposByParticipantIdentifiers(exerciseId: number, participantIdentifiers: string[], repositoryExportOptions: RepositoryExportOptions): Observable<HttpResponse<Blob>> {\r\n        const url = `${this.resourceUrl}/${exerciseId}/export-repos-by-participant-identifiers/${participantIdentifiers}`;\r\n        return this.http.post(url, repositoryExportOptions, {\r\n            observe: 'response',\r\n            responseType: 'blob',\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Exports repositories to the server by their participation ids\r\n     * @param {number} exerciseId - Id of the exercise\r\n     * @param {number[]} participationIds - Ids of participations\r\n     * @param {RepositoryExportOptions} repositoryExportOptions\r\n     */\r\n    exportReposByParticipations(exerciseId: number, participationIds: number[], repositoryExportOptions: RepositoryExportOptions): Observable<HttpResponse<Blob>> {\r\n        const url = `${this.resourceUrl}/${exerciseId}/export-repos-by-participation-ids/${participationIds}`;\r\n        return this.http.post(url, repositoryExportOptions, {\r\n            observe: 'response',\r\n            responseType: 'blob',\r\n        });\r\n    }\r\n}\r\n"],
  "mappings": "yFAiBA,IAAaA,GAAsC,IAAA,CAA7C,MAAOA,CAAsC,CACvCC,KAAOC,EAAOC,CAAU,EAEzBC,YAAc,wCAQrBC,oCAAoCC,EAAoBC,EAAkCC,EAAgD,CACtI,IAAMC,EAAM,GAAG,KAAKL,WAAW,IAAIE,CAAU,4CAA4CC,CAAsB,GAC/G,OAAO,KAAKN,KAAKS,KAAKD,EAAKD,EAAyB,CAChDG,QAAS,WACTC,aAAc,OACjB,CACL,CAQAC,4BAA4BP,EAAoBQ,EAA4BN,EAAgD,CACxH,IAAMC,EAAM,GAAG,KAAKL,WAAW,IAAIE,CAAU,sCAAsCQ,CAAgB,GACnG,OAAO,KAAKb,KAAKS,KAAKD,EAAKD,EAAyB,CAChDG,QAAS,WACTC,aAAc,OACjB,CACL,4CA/BSZ,EAAsC,6BAAtCA,EAAsCe,QAAtCf,EAAsCgB,UAAAC,WADzB,MAAM,CAAA,SACnBjB,CAAsC,GAAA",
  "names": ["ProgrammingAssessmentRepoExportService", "http", "inject", "HttpClient", "resourceUrl", "exportReposByParticipantIdentifiers", "exerciseId", "participantIdentifiers", "repositoryExportOptions", "url", "post", "observe", "responseType", "exportReposByParticipations", "participationIds", "factory", "\u0275fac", "providedIn"]
}
