{
  "version": 3,
  "sources": ["src/main/webapp/app/lti/lti13-deep-linking.component.ts", "src/main/webapp/app/lti/lti13-deep-linking.component.html"],
  "sourcesContent": ["import { Component, OnInit, inject } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CourseManagementService } from 'app/course/manage/course-management.service';\r\nimport { Exercise } from 'app/entities/exercise.model';\r\nimport { faExclamationTriangle, faSort, faWrench } from '@fortawesome/free-solid-svg-icons';\r\nimport { SortService } from 'app/shared/service/sort.service';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { onError } from 'app/shared/util/global.utils';\r\nimport { SessionStorageService } from 'ngx-webstorage';\r\nimport { TranslateDirective } from '../shared/language/translate.directive';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HelpIconComponent } from 'app/shared/components/help-icon.component';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\nimport { SortByDirective } from 'app/shared/sort/sort-by.directive';\r\nimport { SortDirective } from 'app/shared/sort/sort.directive';\r\nimport { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\r\nimport { HasAnyAuthorityDirective } from 'app/shared/auth/has-any-authority.directive';\r\n\r\n@Component({\r\n    selector: 'jhi-deep-linking',\r\n    templateUrl: './lti13-deep-linking.component.html',\r\n    imports: [\r\n        TranslateDirective,\r\n        FaIconComponent,\r\n        FormsModule,\r\n        HelpIconComponent,\r\n        ArtemisTranslatePipe,\r\n        SortByDirective,\r\n        SortDirective,\r\n        ArtemisDatePipe,\r\n        // NOTE: this is actually used in the html template, otherwise *jhiHasAnyAuthority would not work\r\n        HasAnyAuthorityDirective,\r\n    ],\r\n})\r\nexport class Lti13DeepLinkingComponent implements OnInit {\r\n    route = inject(ActivatedRoute);\r\n    private sortService = inject(SortService);\r\n    private courseManagementService = inject(CourseManagementService);\r\n    private http = inject(HttpClient);\r\n    private accountService = inject(AccountService);\r\n    private router = inject(Router);\r\n    private alertService = inject(AlertService);\r\n    private sessionStorageService = inject(SessionStorageService);\r\n\r\n    courseId: number;\r\n    exercises: Exercise[];\r\n    selectedExercises?: Set<number> = new Set();\r\n    course: Course;\r\n\r\n    predicate = 'type';\r\n    reverse = false;\r\n    isLinking = true;\r\n\r\n    // Icons\r\n    faSort = faSort;\r\n    faExclamationTriangle = faExclamationTriangle;\r\n    faWrench = faWrench;\r\n\r\n    /**\r\n     * Initializes the component.\r\n     * - Retrieves the course ID from the route parameters.\r\n     * - Fetches the user's identity.\r\n     * - Retrieves the course details and exercises.\r\n     * - Redirects unauthenticated users to the login page.\r\n     */\r\n    ngOnInit() {\r\n        this.route.params.subscribe((params) => {\r\n            this.courseId = Number(params['courseId']);\r\n\r\n            if (!this.courseId) {\r\n                this.isLinking = false;\r\n                return;\r\n            }\r\n            if (!this.isLinking) {\r\n                return;\r\n            }\r\n\r\n            this.accountService.identity().then((user) => {\r\n                if (user) {\r\n                    this.courseManagementService.findWithExercises(this.courseId).subscribe((findWithExercisesResult) => {\r\n                        if (findWithExercisesResult?.body?.exercises) {\r\n                            this.course = findWithExercisesResult.body;\r\n                            this.exercises = findWithExercisesResult.body.exercises;\r\n                        }\r\n                    });\r\n                } else {\r\n                    this.redirectUserToLoginThenTargetLink(window.location.href);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Redirects the user to the login page and sets up a listener for user login.\r\n     * After login, redirects the user back to the original link.\r\n     *\r\n     * @param currentLink The current URL to return to after login.\r\n     */\r\n    redirectUserToLoginThenTargetLink(currentLink: string): void {\r\n        this.router.navigate(['/']).then(() => {\r\n            this.accountService.getAuthenticationState().subscribe((user) => {\r\n                if (user) {\r\n                    window.location.replace(currentLink);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Sorts the list of exercises based on the selected predicate and order.\r\n     */\r\n    sortRows() {\r\n        this.sortService.sortByProperty(this.exercises, this.predicate, this.reverse);\r\n    }\r\n\r\n    /**\r\n     * Toggles an exercise's selection based on its ID.\r\n     *\r\n     * Adds the ID to selectedExercises if not present, removes it otherwise.\r\n     * Does nothing if the ID is undefined.\r\n     *\r\n     * @param exerciseId The exercise ID to toggle.\r\n     */\r\n    selectExercise(exerciseId: number | undefined) {\r\n        if (exerciseId !== undefined) {\r\n            if (this.selectedExercises?.has(exerciseId)) {\r\n                this.selectedExercises?.delete(exerciseId);\r\n            } else {\r\n                this.selectedExercises?.add(exerciseId);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if the given exercise is currently selected.\r\n     *\r\n     * @param exercise The exercise to check.\r\n     * @returns True if the exercise is selected, false otherwise.\r\n     */\r\n    isExerciseSelected(exerciseId: number | undefined) {\r\n        return exerciseId !== undefined && this.selectedExercises?.has(exerciseId);\r\n    }\r\n\r\n    /**\r\n     * Sends a deep link request for the selected exercise.\r\n     * If an exercise is selected, it sends a POST request to initiate deep linking.\r\n     */\r\n    sendDeepLinkRequest() {\r\n        if (this.selectedExercises?.size) {\r\n            const ltiIdToken = this.sessionStorageService.retrieve('ltiIdToken') ?? '';\r\n            const clientRegistrationId = this.sessionStorageService.retrieve('clientRegistrationId') ?? '';\r\n            const exerciseIds = Array.from(this.selectedExercises).join(',');\r\n\r\n            const httpParams = new HttpParams().set('exerciseIds', exerciseIds).set('ltiIdToken', ltiIdToken!).set('clientRegistrationId', clientRegistrationId!);\r\n\r\n            type DeepLinkingResponse = {\r\n                targetLinkUri: string;\r\n            };\r\n            this.http.post<DeepLinkingResponse>(`api/lti/lti13/deep-linking/${this.courseId}`, null, { observe: 'response', params: httpParams }).subscribe({\r\n                next: (response) => {\r\n                    if (response.status === 200) {\r\n                        if (response.body) {\r\n                            const targetLink = response.body.targetLinkUri;\r\n                            window.location.replace(targetLink);\r\n                        }\r\n                    } else {\r\n                        this.isLinking = false;\r\n                        this.alertService.error('artemisApp.lti13.deepLinking.unknownError');\r\n                    }\r\n                },\r\n                error: (error) => {\r\n                    this.isLinking = false;\r\n                    onError(this.alertService, error);\r\n                },\r\n            });\r\n        } else {\r\n            this.alertService.error('artemisApp.lti13.deepLinking.selectToLink');\r\n        }\r\n    }\r\n}\r\n", "<div [hidden]=\"!isLinking\" *jhiHasAnyAuthority=\"['ROLE_ADMIN', 'ROLE_INSTRUCTOR']\">\r\n    <div class=\"modal-header\">\r\n        <div class=\"col d-flex flex-row pt-3 pb-1\">\r\n            <h4 class=\"modal-title\" jhiTranslate=\"artemisApp.lti13.selectContentFromCourse\" [translateValues]=\"{ title: course?.title }\">\r\n                Select content from course {{ course?.title }}\r\n            </h4>\r\n            <jhi-help-icon class=\"ps-1\" text=\"artemisApp.lti13.selectContentTooltip\" />\r\n        </div>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <div class=\"table-responsive\">\r\n            <table class=\"table table-bordered\">\r\n                <thead class=\"thead-dark\">\r\n                    <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"reverse\" (sortChange)=\"sortRows()\">\r\n                        <th class=\"d-md-table-cell\"></th>\r\n                        <th jhiSortBy=\"id\">\r\n                            id\r\n                            <fa-icon [icon]=\"faSort\" />\r\n                        </th>\r\n                        <th jhiSortBy=\"type\">\r\n                            {{ 'artemisApp.exercise.type' | artemisTranslate }}\r\n                            <fa-icon [icon]=\"faSort\" />\r\n                        </th>\r\n                        <th jhiSortBy=\"title\">\r\n                            {{ 'artemisApp.exercise.title' | artemisTranslate }}\r\n                            <fa-icon [icon]=\"faSort\" />\r\n                        </th>\r\n                        <th jhiSortBy=\"releaseDate\">\r\n                            {{ 'artemisApp.exercise.releaseDate' | artemisTranslate }}\r\n                            <fa-icon [icon]=\"faSort\" />\r\n                        </th>\r\n                        <th jhiSortBy=\"startDate\">\r\n                            {{ 'artemisApp.exercise.startDate' | artemisTranslate }}\r\n                            <fa-icon [icon]=\"faSort\" />\r\n                        </th>\r\n                        <th jhiSortBy=\"dueDate\">\r\n                            {{ 'artemisApp.exercise.dueDate' | artemisTranslate }}\r\n                            <fa-icon [icon]=\"faSort\" />\r\n                        </th>\r\n                        <th jhiSortBy=\"assessmentDueDate\">\r\n                            {{ 'artemisApp.exercise.assessmentDueDate' | artemisTranslate }}\r\n                            <fa-icon [icon]=\"faSort\" />\r\n                        </th>\r\n                        <th jhiSortBy=\"includedInOverallScore\">\r\n                            {{ 'artemisApp.exercise.includedInOverallScore' | artemisTranslate }}\r\n                            <fa-icon [icon]=\"faSort\" />\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    @for (exercise of exercises; track exercise) {\r\n                        <tr id=\"exercise-{{ exercise.id }}\">\r\n                            <td class=\"d-md-table-cell\">\r\n                                <input class=\"form-check-input\" type=\"checkbox\" (change)=\"selectExercise(exercise.id)\" [ngModel]=\"isExerciseSelected(exercise.id)\" />\r\n                            </td>\r\n                            <td>{{ exercise.id ? exercise.id : '' }}</td>\r\n                            <td>{{ exercise.type ? exercise.type : '' }}</td>\r\n                            <td>{{ exercise.title ? exercise.title : '' }}</td>\r\n                            <td>{{ exercise.releaseDate | artemisDate }}</td>\r\n                            <td>{{ exercise.startDate | artemisDate }}</td>\r\n                            <td>{{ exercise.dueDate | artemisDate }}</td>\r\n                            <td>{{ exercise.assessmentDueDate | artemisDate }}</td>\r\n                            <td>\r\n                                {{\r\n                                    exercise.includedInOverallScore === 'NOT_INCLUDED'\r\n                                        ? ('artemisApp.exercise.no' | artemisTranslate)\r\n                                        : ('artemisApp.exercise.yes' | artemisTranslate)\r\n                                }}\r\n                            </td>\r\n                        </tr>\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <div>\r\n            @if (selectedExercises?.size) {\r\n                <button type=\"submit\" (click)=\"sendDeepLinkRequest()\" class=\"btn btn-success\">\r\n                    <span class=\"d-sm-inline\" jhiTranslate=\"artemisApp.lti13.deepLinking.link\"></span>\r\n                </button>\r\n            } @else {\r\n                <button type=\"submit\" class=\"btn btn-success disabled\">\r\n                    <span class=\"d-sm-inline\" jhiTranslate=\"artemisApp.lti13.deepLinking.selectToLink\"></span>\r\n                </button>\r\n            }\r\n        </div>\r\n    </div>\r\n</div>\r\n<h2 [hidden]=\"isLinking\" jhiTranslate=\"artemisApp.lti13.deepLinking.linkedFailed\"></h2>\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275listener", "exercise_r4", "\u0275\u0275restoreView", "_r3", "$implicit", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "selectExercise", "id", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275propertyInterpolate1", "\u0275\u0275property", "isExerciseSelected", "\u0275\u0275textInterpolate", "type", "title", "\u0275\u0275pipeBind1", "releaseDate", "startDate", "dueDate", "assessmentDueDate", "\u0275\u0275textInterpolate1", "includedInOverallScore", "_r5", "sendDeepLinkRequest", "\u0275\u0275element", "\u0275\u0275twoWayListener", "$event", "_r1", "i0", "\u0275\u0275twoWayBindingSet", "predicate", "reverse", "sortRows", "\u0275\u0275repeaterCreate", "Lti13DeepLinkingComponent_div_0_For_77_Template", "\u0275\u0275repeaterTrackByIdentity", "\u0275\u0275template", "Lti13DeepLinkingComponent_div_0_Conditional_86_Template", "Lti13DeepLinkingComponent_div_0_Conditional_87_Template", "isLinking", "\u0275\u0275pureFunction1", "_c1", "course", "\u0275\u0275twoWayProperty", "faSort", "\u0275\u0275repeater", "exercises", "\u0275\u0275conditional", "selectedExercises", "size", "Lti13DeepLinkingComponent", "route", "inject", "ActivatedRoute", "sortService", "SortService", "courseManagementService", "CourseManagementService", "http", "HttpClient", "accountService", "AccountService", "router", "Router", "alertService", "AlertService", "sessionStorageService", "SessionStorageService", "courseId", "Set", "faExclamationTriangle", "faWrench", "ngOnInit", "params", "subscribe", "Number", "identity", "then", "user", "findWithExercises", "findWithExercisesResult", "body", "redirectUserToLoginThenTargetLink", "window", "location", "href", "currentLink", "navigate", "getAuthenticationState", "replace", "sortByProperty", "exerciseId", "undefined", "has", "delete", "add", "ltiIdToken", "retrieve", "clientRegistrationId", "exerciseIds", "Array", "from", "join", "httpParams", "HttpParams", "set", "post", "observe", "next", "response", "status", "targetLink", "targetLinkUri", "error", "onError", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "Lti13DeepLinkingComponent_div_0_Template", "\u0275\u0275pureFunction0", "_c0", "TranslateDirective", "FaIconComponent", "FormsModule", "CheckboxControlValueAccessor", "NgControlStatus", "NgModel", "HelpIconComponent", "ArtemisTranslatePipe", "SortByDirective", "SortDirective", "ArtemisDatePipe", "HasAnyAuthorityDirective", "encapsulation"]
}
