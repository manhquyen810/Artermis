{
  "version": 3,
  "sources": ["src/main/webapp/app/entities/exercise-group-variant-column.model.ts", "src/main/webapp/app/exam/manage/exams/exam-checklist-component/exam-checklist-exercisegroup-table/exam-checklist-exercisegroup-table.component.ts", "src/main/webapp/app/exam/manage/exams/exam-checklist-component/exam-checklist-exercisegroup-table/exam-checklist-exercisegroup-table.component.html", "src/main/webapp/app/exam/manage/exams/exam-checklist-component/exam-edit-workingtime-dialog/exam-edit-working-time-dialog.component.ts", "src/main/webapp/app/exam/manage/exams/exam-checklist-component/exam-edit-workingtime-dialog/exam-edit-working-time-dialog.component.html", "src/main/webapp/app/exam/manage/exams/exam-checklist-component/exam-edit-workingtime-dialog/exam-edit-working-time.component.ts", "src/main/webapp/app/exam/manage/exams/exam-checklist-component/exam-edit-workingtime-dialog/exam-edit-working-time.component.html", "src/main/webapp/app/exam/manage/exams/exam-checklist-component/exam-announcement-dialog/exam-live-announcement-create-modal.component.ts", "src/main/webapp/app/exam/manage/exams/exam-checklist-component/exam-announcement-dialog/exam-live-announcement-create-modal.component.html", "src/main/webapp/app/exam/manage/exams/exam-checklist-component/exam-announcement-dialog/exam-live-announcement-create-button.component.ts", "src/main/webapp/app/exam/manage/exams/exam-checklist-component/exam-announcement-dialog/exam-live-announcement-create-button.component.html", "src/main/webapp/app/exam/manage/exams/exam-checklist-component/exam-checklist.component.ts", "src/main/webapp/app/exam/manage/exams/exam-checklist-component/exam-checklist.component.html", "src/main/webapp/app/exam/manage/exams/exam-detail.component.ts", "src/main/webapp/app/exam/manage/exams/exam-detail.component.html"],
  "sourcesContent": ["import { ExerciseType } from 'app/entities/exercise.model';\r\n\r\nexport class ExerciseGroupVariantColumn {\r\n    indexExerciseGroup: number;\r\n    exerciseGroupTitle?: string;\r\n    exerciseGroupPointsEqual?: boolean;\r\n\r\n    indexExercise: number;\r\n    exerciseTitle?: string;\r\n    exerciseType?: ExerciseType;\r\n    exerciseMaxPoints?: number;\r\n    exerciseNumberOfParticipations?: number;\r\n    noExercises = false;\r\n}\r\n", "import { Component, Input, OnChanges } from '@angular/core';\r\nimport { ExerciseGroup } from 'app/entities/exercise-group.model';\r\nimport { ExerciseType, getIcon, getIconTooltip } from 'app/entities/exercise.model';\r\nimport { ExerciseGroupVariantColumn } from 'app/entities/exercise-group-variant-column.model';\r\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { NoDataComponent } from 'app/shared/no-data-component';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-exam-checklist-exercisegroup-table',\r\n    templateUrl: './exam-checklist-exercisegroup-table.component.html',\r\n    styleUrls: ['./exam-checklist-exercisegroup-table.component.scss'],\r\n    imports: [TranslateDirective, NgbTooltip, FaIconComponent, NoDataComponent, ArtemisTranslatePipe],\r\n})\r\nexport class ExamChecklistExerciseGroupTableComponent implements OnChanges {\r\n    @Input() quizExamMaxPoints: number;\r\n    @Input() exerciseGroups: ExerciseGroup[];\r\n    exerciseGroupVariantColumns: ExerciseGroupVariantColumn[] = [];\r\n    readonly getIcon = getIcon;\r\n    readonly getIconTooltip = getIconTooltip;\r\n\r\n    // Icons\r\n    faExclamationTriangle = faExclamationTriangle;\r\n    totalParticipants: number;\r\n\r\n    ngOnChanges() {\r\n        this.exerciseGroupVariantColumns = []; // Clear any previously existing entries\r\n        if (this.exerciseGroups) {\r\n            let exerciseGroupIndex = 1;\r\n            this.exerciseGroups.forEach((exerciseGroup) => {\r\n                const exerciseGroupVariantColumn = new ExerciseGroupVariantColumn();\r\n                exerciseGroupVariantColumn.exerciseGroupTitle = exerciseGroup.title;\r\n                exerciseGroupVariantColumn.indexExerciseGroup = exerciseGroupIndex;\r\n\r\n                if (!exerciseGroup.exercises || exerciseGroup.exercises.length === 0) {\r\n                    exerciseGroupVariantColumn.noExercises = true;\r\n                    this.exerciseGroupVariantColumns.push(exerciseGroupVariantColumn);\r\n                } else {\r\n                    // set points and checks\r\n                    const maxPoints = exerciseGroup.exercises?.[0].maxPoints;\r\n                    exerciseGroupVariantColumn.exerciseGroupPointsEqual = true;\r\n                    exerciseGroupVariantColumn.exerciseGroupPointsEqual = !exerciseGroup.exercises?.some((exercise) => {\r\n                        return exercise.maxPoints !== maxPoints;\r\n                    });\r\n\r\n                    exerciseGroupVariantColumn.noExercises = false;\r\n                    let exerciseVariantIndex = 1;\r\n                    this.totalParticipants = 0;\r\n                    exerciseGroup.exercises!.forEach((exercise, index) => {\r\n                        // generate columns for each exercise\r\n                        let exerciseVariantColumn;\r\n                        if (index === 0) {\r\n                            // the first exercise uses the exercisegroup column\r\n                            exerciseVariantColumn = exerciseGroupVariantColumn;\r\n                            exerciseVariantColumn.indexExercise = exerciseVariantIndex;\r\n                        } else {\r\n                            exerciseVariantColumn = new ExerciseGroupVariantColumn();\r\n                            exerciseVariantColumn.indexExercise = exerciseVariantIndex;\r\n                            exerciseVariantColumn.exerciseGroupTitle = '';\r\n                        }\r\n                        // set properties\r\n                        exerciseVariantColumn.exerciseTitle = exercise.title;\r\n                        exerciseVariantColumn.exerciseType = exercise.type;\r\n                        exerciseVariantColumn.exerciseNumberOfParticipations = exercise.numberOfParticipations ? exercise.numberOfParticipations : 0;\r\n                        exerciseVariantColumn.exerciseMaxPoints = exercise.maxPoints;\r\n\r\n                        this.totalParticipants += exerciseVariantColumn.exerciseNumberOfParticipations;\r\n\r\n                        this.exerciseGroupVariantColumns.push(exerciseVariantColumn);\r\n                        exerciseVariantIndex++;\r\n                    });\r\n                }\r\n                exerciseGroupIndex++;\r\n            });\r\n        }\r\n    }\r\n\r\n    protected readonly ExerciseType = ExerciseType;\r\n}\r\n", "<table class=\"table table-striped table-bordered exercise-group-table\">\r\n    <thead>\r\n        <tr>\r\n            <th style=\"max-width: 30px\">\r\n                <span>#</span>\r\n            </th>\r\n            <th style=\"max-width: 100px\">\r\n                <span jhiTranslate=\"artemisApp.examManagement.checklist.textitems.exerciseStart\"></span>\r\n            </th>\r\n            <th style=\"max-width: 30px\">\r\n                <span>#</span>\r\n            </th>\r\n            <th>\r\n                <span jhiTranslate=\"artemisApp.examManagement.checklist.textitems.exerciseTableSingular\"></span>\r\n            </th>\r\n            <th>\r\n                <span jhiTranslate=\"artemisApp.examManagement.checklist.textitems.points\"></span>\r\n            </th>\r\n            <th>\r\n                <span jhiTranslate=\"artemisApp.examManagement.checklist.textitems.numberParticipants\"></span>\r\n            </th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        @if (quizExamMaxPoints > 0) {\r\n            <tr>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n                <td>\r\n                    <div class=\"d-flex\">\r\n                        <div style=\"padding-right: 10px\" [ngbTooltip]=\"getIconTooltip(ExerciseType.QUIZ) | artemisTranslate\">\r\n                            <fa-icon [icon]=\"getIcon(ExerciseType.QUIZ)\" placement=\"right auto\" />\r\n                        </div>\r\n                        <span>Quiz Exam</span>\r\n                    </div>\r\n                </td>\r\n                <td>{{ quizExamMaxPoints }}</td>\r\n                <td>{{ totalParticipants }}</td>\r\n            </tr>\r\n        }\r\n        @for (column of exerciseGroupVariantColumns; track column; let i = $index) {\r\n            <tr>\r\n                <td style=\"max-width: 30px\">\r\n                    @if (column.indexExerciseGroup) {\r\n                        <div>{{ column.indexExerciseGroup }}</div>\r\n                    }\r\n                </td>\r\n                <td style=\"max-width: 100px; font-weight: bold\">\r\n                    @if (column.exerciseGroupTitle) {\r\n                        <div>\r\n                            {{ column.exerciseGroupTitle }}\r\n                            @if (!column.noExercises && !column.exerciseGroupPointsEqual) {\r\n                                <fa-icon\r\n                                    ngbTooltip=\"Exercises within this group do not have the same number of maximum points!\"\r\n                                    [icon]=\"faExclamationTriangle\"\r\n                                    style=\"color: rgba(255, 193, 7, 0.6)\"\r\n                                    class=\"warning\"\r\n                                />\r\n                            }\r\n                            @if (column.noExercises) {\r\n                                <fa-icon\r\n                                    ngbTooltip=\"This exercise group does not contain any exercises!\"\r\n                                    [icon]=\"faExclamationTriangle\"\r\n                                    style=\"color: rgba(255, 193, 7, 0.6)\"\r\n                                    class=\"warning\"\r\n                                />\r\n                            }\r\n                        </div>\r\n                    }\r\n                </td>\r\n                <td style=\"max-width: 30px\">\r\n                    @if (!column.noExercises) {\r\n                        <span>{{ column.indexExercise }}</span>\r\n                    } @else {\r\n                        <jhi-no-data />\r\n                    }\r\n                </td>\r\n                <td>\r\n                    @if (column.exerciseTitle) {\r\n                        <div class=\"d-flex\">\r\n                            <div style=\"padding-right: 10px; max-width: min-content\" [ngbTooltip]=\"getIconTooltip(column!.exerciseType) | artemisTranslate\">\r\n                                <fa-icon [icon]=\"getIcon(column!.exerciseType)\" placement=\"right auto\" />\r\n                            </div>\r\n                            <span>{{ column.exerciseTitle }}</span>\r\n                        </div>\r\n                    } @else {\r\n                        <jhi-no-data />\r\n                    }\r\n                </td>\r\n                <td>\r\n                    @if (column.exerciseMaxPoints) {\r\n                        <span>{{ column.exerciseMaxPoints }}</span>\r\n                    } @else {\r\n                        <jhi-no-data />\r\n                    }\r\n                </td>\r\n                <td>\r\n                    @if (column.exerciseNumberOfParticipations) {\r\n                        <span>{{ column.exerciseNumberOfParticipations }}</span>\r\n                    } @else {\r\n                        <jhi-no-data />\r\n                    }\r\n                </td>\r\n            </tr>\r\n        }\r\n    </tbody>\r\n</table>\r\n", "import { HttpResponse } from '@angular/common/http';\r\nimport { Component, EventEmitter, Input, Output, inject } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { faBan, faCheck, faSpinner } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { Exam } from 'app/entities/exam/exam.model';\r\nimport { ExamManagementService } from 'app/exam/manage/exam-management.service';\r\nimport { examWorkingTime } from 'app/exam/participate/exam.utils';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { WorkingTimeChangeComponent } from 'app/exam/shared/working-time-change/working-time-change.component';\r\nimport { WorkingTimeControlComponent } from 'app/exam/shared/working-time-control/working-time-control.component';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { ConfirmEntityNameComponent } from 'app/shared/confirm-entity-name/confirm-entity-name.component';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\n\r\n@Component({\r\n    selector: 'jhi-edit-working-time-dialog',\r\n    templateUrl: './exam-edit-working-time-dialog.component.html',\r\n    imports: [FormsModule, TranslateDirective, WorkingTimeControlComponent, WorkingTimeChangeComponent, ConfirmEntityNameComponent, FaIconComponent],\r\n})\r\nexport class ExamEditWorkingTimeDialogComponent {\r\n    private activeModal = inject(NgbActiveModal);\r\n    private examManagementService = inject(ExamManagementService);\r\n\r\n    @Input() exam: Exam;\r\n    @Output() examChange = new EventEmitter<Exam>();\r\n\r\n    isLoading: boolean;\r\n\r\n    // Icons\r\n    faBan = faBan;\r\n    faSpinner = faSpinner;\r\n    faCheck = faCheck;\r\n\r\n    workingTimeSeconds = 0;\r\n\r\n    get oldWorkingTime() {\r\n        return examWorkingTime(this.exam);\r\n    }\r\n\r\n    get newWorkingTime() {\r\n        return this.oldWorkingTime ? this.oldWorkingTime + this.workingTimeSeconds : undefined;\r\n    }\r\n\r\n    clear(): void {\r\n        this.activeModal.close();\r\n    }\r\n\r\n    confirmUpdateWorkingTime(): void {\r\n        if (!this.isWorkingTimeChangeValid) return;\r\n        this.isLoading = true;\r\n        this.examManagementService.updateWorkingTime(this.exam.course!.id!, this.exam.id!, this.workingTimeSeconds).subscribe({\r\n            next: (res: HttpResponse<Exam>) => {\r\n                this.isLoading = false;\r\n                if (res.body) {\r\n                    this.examChange.emit(res.body);\r\n                }\r\n                this.clear();\r\n            },\r\n            error: () => {\r\n                // If an error happens, the alert service takes care of displaying an error message\r\n                this.isLoading = false;\r\n            },\r\n        });\r\n    }\r\n\r\n    get isWorkingTimeChangeValid(): boolean {\r\n        return Math.abs(this.workingTimeSeconds) !== 0;\r\n    }\r\n}\r\n", "<form name=\"workingTimeForm\" (ngSubmit)=\"confirmUpdateWorkingTime()\" #editForm=\"ngForm\">\r\n    <div class=\"modal-header\">\r\n        <h4 class=\"modal-title\">\r\n            <span jhiTranslate=\"artemisApp.examManagement.editWorkingTime.title\"></span>\r\n        </h4>\r\n        <button type=\"button\" class=\"btn-close\" data-dismiss=\"modal\" aria-hidden=\"true\" (click)=\"clear()\"></button>\r\n    </div>\r\n    <div class=\"modal-body d-flex flex-column\">\r\n        <div class=\"d-flex flex-column gap-4 align-items-start\">\r\n            <jhi-working-time-control\r\n                name=\"workingTimeSeconds\"\r\n                durationLabelText=\"artemisApp.examManagement.editWorkingTime.label\"\r\n                [(ngModel)]=\"workingTimeSeconds\"\r\n                [allowNegative]=\"true\"\r\n                [disabled]=\"isLoading\"\r\n            />\r\n        </div>\r\n        <div class=\"bg-light rounded-2 p-3 mt-3\">\r\n            @if (newWorkingTime && oldWorkingTime) {\r\n                <jhi-working-time-change [newWorkingTime]=\"newWorkingTime\" [oldWorkingTime]=\"oldWorkingTime\" />\r\n            }\r\n        </div>\r\n        <hr />\r\n        <div>\r\n            <p jhiTranslate=\"artemisApp.examManagement.editWorkingTime.question\" [translateValues]=\"{ title: exam.title }\"></p>\r\n            <jhi-confirm-entity-name\r\n                confirmationText=\"artemisApp.examManagement.editWorkingTime.typeNameToConfirm\"\r\n                [entityName]=\"exam.title!\"\r\n                [disabled]=\"isLoading\"\r\n                name=\"confirmEntityName\"\r\n                ngModel\r\n            />\r\n        </div>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"clear()\" [disabled]=\"isLoading\">\r\n            <fa-icon [icon]=\"faBan\" />&nbsp;<span jhiTranslate=\"entity.action.cancel\"></span>\r\n        </button>\r\n        <button\r\n            id=\"confirm\"\r\n            type=\"submit\"\r\n            class=\"btn btn-warning\"\r\n            [style.cursor]=\"editForm.invalid || isLoading || !isWorkingTimeChangeValid ? 'not-allowed' : 'pointer'\"\r\n            [disabled]=\"editForm.invalid || isLoading || !isWorkingTimeChangeValid\"\r\n        >\r\n            @if (isLoading) {\r\n                <span><fa-icon [icon]=\"faSpinner\" animation=\"spin\" />&nbsp;</span>\r\n            }\r\n            @if (!isLoading) {\r\n                <fa-icon [icon]=\"faCheck\" />\r\n            }\r\n            &nbsp;\r\n            <span jhiTranslate=\"entity.action.confirm\"></span>\r\n        </button>\r\n    </div>\r\n</form>\r\n", "import { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Component, EventEmitter, Input, OnDestroy, OnInit, Output, inject } from '@angular/core';\r\nimport { faHourglassHalf } from '@fortawesome/free-solid-svg-icons';\r\nimport dayjs from 'dayjs/esm';\r\nimport { Subscription, from } from 'rxjs';\r\n\r\nimport { Exam } from 'app/entities/exam/exam.model';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { ExamEditWorkingTimeDialogComponent } from './exam-edit-working-time-dialog.component';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\n\r\n@Component({\r\n    selector: 'jhi-exam-edit-working-time',\r\n    templateUrl: './exam-edit-working-time.component.html',\r\n    imports: [FaIconComponent, TranslateDirective],\r\n})\r\nexport class ExamEditWorkingTimeComponent implements OnInit, OnDestroy {\r\n    private modalService = inject(NgbModal);\r\n    alertService = inject(AlertService);\r\n\r\n    @Input() exam: Exam;\r\n    @Output() examChange = new EventEmitter<Exam>();\r\n\r\n    faHourglassHalf = faHourglassHalf;\r\n    workingTimeChangeAllowed = false;\r\n\r\n    private modalRef: NgbModalRef | undefined;\r\n    private timeoutRef: any;\r\n    private subscription: Subscription;\r\n\r\n    ngOnInit() {\r\n        this.checkWorkingTimeChangeAllowed();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.timeoutRef) {\r\n            clearTimeout(this.timeoutRef);\r\n        }\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    private checkWorkingTimeChangeAllowed() {\r\n        const endDate = this.exam.endDate?.subtract(1, 'minutes');\r\n        this.workingTimeChangeAllowed = dayjs().isBefore(endDate);\r\n\r\n        // Run the check again when the exam ends\r\n        const nextCheckTimeout = endDate?.diff();\r\n        if (nextCheckTimeout) {\r\n            this.timeoutRef = setTimeout(this.checkWorkingTimeChangeAllowed.bind(this), nextCheckTimeout);\r\n        }\r\n    }\r\n\r\n    openDialog(event: MouseEvent) {\r\n        event.preventDefault();\r\n        this.alertService.closeAll();\r\n        this.modalRef = this.modalService.open(ExamEditWorkingTimeDialogComponent, {\r\n            size: 'lg',\r\n            backdrop: 'static',\r\n            animation: true,\r\n        });\r\n        this.modalRef.componentInstance.exam = this.exam;\r\n        this.subscription = this.modalRef.componentInstance.examChange.subscribe((exam: Exam) => this.examChange.emit(exam));\r\n\r\n        from(this.modalRef.result).subscribe(() => (this.modalRef = undefined));\r\n    }\r\n}\r\n", "<button id=\"edit-working-time-button\" class=\"btn btn-md btn-warning\" [disabled]=\"!workingTimeChangeAllowed\" (click)=\"openDialog($event)\">\r\n    <fa-icon [icon]=\"faHourglassHalf\" />\r\n    <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.examManagement.editWorkingTime.title\"></span>\r\n</button>\r\n", "import { Component, inject } from '@angular/core';\r\nimport { SafeHtml } from '@angular/platform-browser';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ExamManagementService } from 'app/exam/manage/exam-management.service';\r\nimport { ExamLiveEventType, ExamWideAnnouncementEvent } from 'app/exam/participate/exam-participation-live-events.service';\r\nimport { faCheckCircle, faSpinner } from '@fortawesome/free-solid-svg-icons';\r\nimport { ExamLiveEventComponent } from 'app/exam/shared/events/exam-live-event.component';\r\nimport dayjs from 'dayjs/esm';\r\nimport { BoldAction } from 'app/shared/monaco-editor/model/actions/bold.action';\r\nimport { ItalicAction } from 'app/shared/monaco-editor/model/actions/italic.action';\r\nimport { UnderlineAction } from 'app/shared/monaco-editor/model/actions/underline.action';\r\nimport { CodeAction } from 'app/shared/monaco-editor/model/actions/code.action';\r\nimport { CodeBlockAction } from 'app/shared/monaco-editor/model/actions/code-block.action';\r\nimport { OrderedListAction } from 'app/shared/monaco-editor/model/actions/ordered-list.action';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { MarkdownEditorMonacoComponent } from 'app/shared/markdown-editor/monaco/markdown-editor-monaco.component';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\n\r\n@Component({\r\n    selector: 'jhi-exam-live-announcement-create-modal',\r\n    templateUrl: './exam-live-announcement-create-modal.component.html',\r\n    styleUrls: ['./exam-live-announcement-create-modal.component.scss'],\r\n    imports: [FormsModule, TranslateDirective, MarkdownEditorMonacoComponent, ExamLiveEventComponent, FaIconComponent],\r\n})\r\nexport class ExamLiveAnnouncementCreateModalComponent {\r\n    private activeModal = inject(NgbActiveModal);\r\n    private examManagementService = inject(ExamManagementService);\r\n\r\n    actions = [new BoldAction(), new ItalicAction(), new UnderlineAction(), new CodeAction(), new CodeBlockAction(), new OrderedListAction(), new OrderedListAction()];\r\n\r\n    courseId: number;\r\n    examId: number;\r\n\r\n    textContent: string;\r\n    html?: SafeHtml;\r\n\r\n    status: 'not_submitted' | 'submitting' | 'submitted' = 'not_submitted';\r\n\r\n    announcement?: ExamWideAnnouncementEvent;\r\n\r\n    // Icons\r\n    faSpinner = faSpinner;\r\n    faCheckCircle = faCheckCircle;\r\n\r\n    submitAnnouncement() {\r\n        this.status = 'submitting';\r\n        this.examManagementService.createAnnouncement(this.courseId, this.examId, this.textContent).subscribe({\r\n            next: (event: ExamWideAnnouncementEvent) => {\r\n                this.status = 'submitted';\r\n                this.announcement = event;\r\n            },\r\n            error: () => {\r\n                this.status = 'not_submitted';\r\n            },\r\n        });\r\n    }\r\n\r\n    textContentChanged(textContent: string) {\r\n        this.textContent = textContent;\r\n        this.announcement = {\r\n            id: 0,\r\n            createdDate: dayjs(),\r\n            eventType: ExamLiveEventType.EXAM_WIDE_ANNOUNCEMENT,\r\n            text: textContent,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Closes the modal by dismissing it\r\n     */\r\n    clear() {\r\n        this.activeModal.dismiss('cancel');\r\n    }\r\n}\r\n", "<form name=\"makeLiveExamAnnouncementForm\">\r\n    <div class=\"modal-header\">\r\n        <h4 class=\"modal-title\" jhiTranslate=\"artemisApp.examManagement.announcementCreate.title\"></h4>\r\n        @if (status !== 'submitting') {\r\n            <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"clear()\"></button>\r\n        }\r\n    </div>\r\n    @if (status === 'not_submitted') {\r\n        <div class=\"modal-body\">\r\n            <div class=\"form-group\">\r\n                <div class=\"mb-4\" jhiTranslate=\"artemisApp.examManagement.announcementCreate.task\"></div>\r\n                <jhi-markdown-editor-monaco\r\n                    class=\"markdown-editor\"\r\n                    [markdown]=\"textContent\"\r\n                    [showPreviewButton]=\"false\"\r\n                    [showEditButton]=\"false\"\r\n                    [enableFileUpload]=\"false\"\r\n                    [colorAction]=\"undefined\"\r\n                    [defaultActions]=\"actions\"\r\n                    (markdownChange)=\"textContentChanged($event)\"\r\n                />\r\n            </div>\r\n            @if (announcement) {\r\n                <h3 class=\"p-2\" jhiTranslate=\"artemisApp.examManagement.announcementCreate.preview\"></h3>\r\n                <jhi-exam-live-event [event]=\"announcement!\" />\r\n            }\r\n        </div>\r\n    }\r\n    @if (status === 'submitting') {\r\n        <div class=\"modal-body\">\r\n            <h2 class=\"mb-0\">\r\n                <fa-icon [icon]=\"faSpinner\" animation=\"spin\" />\r\n                <span jhiTranslate=\"artemisApp.examManagement.announcementCreate.sending\"></span>\r\n            </h2>\r\n        </div>\r\n    }\r\n    @if (status === 'submitted') {\r\n        <div class=\"modal-body\">\r\n            <h2 class=\"mb-4\">\r\n                <fa-icon [icon]=\"faCheckCircle\" class=\"success-color\" />\r\n                <span jhiTranslate=\"artemisApp.examManagement.announcementCreate.sent\"></span>\r\n            </h2>\r\n            @if (announcement) {\r\n                <jhi-exam-live-event [event]=\"announcement!\" />\r\n            }\r\n        </div>\r\n    }\r\n    <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" [class.btn-primary]=\"status === 'submitted'\" (click)=\"clear()\" jhiTranslate=\"entity.action.close\"></button>\r\n        @if (status !== 'submitted') {\r\n            <button\r\n                [disabled]=\"status === 'submitting' || !textContent\"\r\n                type=\"button\"\r\n                class=\"btn btn-primary\"\r\n                (click)=\"submitAnnouncement()\"\r\n                jhiTranslate=\"artemisApp.examManagement.announcementCreate.sendButton\"\r\n            ></button>\r\n        }\r\n    </div>\r\n</form>\r\n", "import { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Component, Input, OnDestroy, OnInit, inject } from '@angular/core';\r\nimport { faBullhorn } from '@fortawesome/free-solid-svg-icons';\r\nimport dayjs from 'dayjs/esm';\r\nimport { Subscription, from } from 'rxjs';\r\n\r\nimport { Exam } from 'app/entities/exam/exam.model';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { ExamLiveAnnouncementCreateModalComponent } from 'app/exam/manage/exams/exam-checklist-component/exam-announcement-dialog/exam-live-announcement-create-modal.component';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\n\r\n@Component({\r\n    selector: 'jhi-exam-live-announcement-create-button',\r\n    templateUrl: './exam-live-announcement-create-button.component.html',\r\n    imports: [FaIconComponent, TranslateDirective],\r\n})\r\nexport class ExamLiveAnnouncementCreateButtonComponent implements OnInit, OnDestroy {\r\n    private modalService = inject(NgbModal);\r\n    alertService = inject(AlertService);\r\n\r\n    @Input() exam: Exam;\r\n\r\n    faBullhorn = faBullhorn;\r\n    announcementCreationAllowed = false;\r\n\r\n    private modalRef: NgbModalRef | undefined;\r\n    private timeoutRef: any;\r\n    private subscription: Subscription;\r\n\r\n    ngOnInit() {\r\n        this.checkAnnouncementCreationAllowed();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.timeoutRef) {\r\n            clearTimeout(this.timeoutRef);\r\n        }\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    private checkAnnouncementCreationAllowed() {\r\n        const now = dayjs();\r\n\r\n        this.announcementCreationAllowed = !!this.exam.visibleDate?.isBefore(now);\r\n\r\n        // Run the check again at the visible date\r\n        if (!this.announcementCreationAllowed) {\r\n            const nextCheckTimeout = this.exam.visibleDate?.diff(now);\r\n            if (nextCheckTimeout) {\r\n                this.timeoutRef = setTimeout(this.checkAnnouncementCreationAllowed.bind(this), nextCheckTimeout);\r\n            }\r\n        }\r\n    }\r\n\r\n    openDialog(event: MouseEvent) {\r\n        event.preventDefault();\r\n        this.alertService.closeAll();\r\n        this.modalRef = this.modalService.open(ExamLiveAnnouncementCreateModalComponent, {\r\n            size: 'lg',\r\n            backdrop: 'static',\r\n            animation: true,\r\n        });\r\n        this.modalRef.componentInstance.examId = this.exam.id;\r\n        this.modalRef.componentInstance.courseId = this.exam.course!.id!;\r\n\r\n        from(this.modalRef.result).subscribe(() => (this.modalRef = undefined));\r\n    }\r\n}\r\n", "<button id=\"announcement-create-button\" class=\"btn btn-md btn-warning\" [disabled]=\"!announcementCreationAllowed\" (click)=\"openDialog($event)\">\r\n    <fa-icon [icon]=\"faBullhorn\" />\r\n    <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.examManagement.announcementCreate.button\"></span>\r\n</button>\r\n", "import { Component, Input, OnChanges, OnDestroy, OnInit, inject } from '@angular/core';\r\nimport { Exam } from 'app/entities/exam/exam.model';\r\nimport { ExamChecklist } from 'app/entities/exam/exam-checklist.model';\r\nimport { faChartBar, faEye, faListAlt, faThList, faUser, faWrench } from '@fortawesome/free-solid-svg-icons';\r\nimport { ExamChecklistService } from 'app/exam/manage/exams/exam-checklist-component/exam-checklist.service';\r\nimport { WebsocketService } from 'app/core/websocket/websocket.service';\r\nimport { ExamManagementService } from 'app/exam/manage/exam-management.service';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport dayjs from 'dayjs/esm';\r\nimport { StudentExamService } from 'app/exam/manage/student-exams/student-exam.service';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { captureException } from '@sentry/angular';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { ChecklistCheckComponent } from 'app/shared/components/checklist-check/checklist-check.component';\r\nimport { ExamChecklistExerciseGroupTableComponent } from './exam-checklist-exercisegroup-table/exam-checklist-exercisegroup-table.component';\r\nimport { RouterLink } from '@angular/router';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { ProgressBarComponent } from 'app/shared/dashboards/tutor-participation-graph/progress-bar/progress-bar.component';\r\nimport { ExamEditWorkingTimeComponent } from './exam-edit-workingtime-dialog/exam-edit-working-time.component';\r\nimport { ExamLiveAnnouncementCreateButtonComponent } from './exam-announcement-dialog/exam-live-announcement-create-button.component';\r\nimport { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-exam-checklist',\r\n    templateUrl: './exam-checklist.component.html',\r\n    imports: [\r\n        TranslateDirective,\r\n        ChecklistCheckComponent,\r\n        ExamChecklistExerciseGroupTableComponent,\r\n        RouterLink,\r\n        FaIconComponent,\r\n        ProgressBarComponent,\r\n        ExamEditWorkingTimeComponent,\r\n        ExamLiveAnnouncementCreateButtonComponent,\r\n        ArtemisDatePipe,\r\n        ArtemisTranslatePipe,\r\n    ],\r\n})\r\nexport class ExamChecklistComponent implements OnChanges, OnInit, OnDestroy {\r\n    private examChecklistService = inject(ExamChecklistService);\r\n    private websocketService = inject(WebsocketService);\r\n    private examManagementService = inject(ExamManagementService);\r\n    private alertService = inject(AlertService);\r\n    private studentExamService = inject(StudentExamService);\r\n\r\n    @Input() exam: Exam;\r\n    @Input() getExamRoutesByIdentifier: any;\r\n    private longestWorkingTimeSub: Subscription | null = null;\r\n\r\n    examChecklist: ExamChecklist;\r\n    isLoading = false;\r\n    pointsExercisesEqual = false;\r\n    allExamsGenerated = false;\r\n    allGroupsContainExercise = false;\r\n    totalPoints = false;\r\n    hasOptionalExercises = false;\r\n    countMandatoryExercises = 0;\r\n    isTestExam: boolean;\r\n    isEvaluatingQuizExercises: boolean;\r\n    isAssessingUnsubmittedExams: boolean;\r\n    existsUnfinishedAssessments = false;\r\n    existsUnassessedQuizzes = false;\r\n    existsUnsubmittedExercises = false;\r\n    isExamOver = false;\r\n    longestWorkingTime?: number;\r\n\r\n    numberOfSubmitted = 0;\r\n    numberOfStarted = 0;\r\n\r\n    examPreparationFinished: boolean;\r\n\r\n    // Icons\r\n    faEye = faEye;\r\n    faWrench = faWrench;\r\n    faUser = faUser;\r\n    faListAlt = faListAlt;\r\n    faThList = faThList;\r\n    faChartBar = faChartBar;\r\n\r\n    private dialogErrorSource = new Subject<string>();\r\n    dialogError$ = this.dialogErrorSource.asObservable();\r\n\r\n    ngOnInit() {\r\n        const submittedTopic = this.examChecklistService.getSubmittedTopic(this.exam);\r\n        this.websocketService.subscribe(submittedTopic);\r\n        this.websocketService.receive(submittedTopic).subscribe(() => (this.numberOfSubmitted += 1));\r\n        const startedTopic = this.examChecklistService.getStartedTopic(this.exam);\r\n        this.websocketService.subscribe(startedTopic);\r\n        this.websocketService.receive(startedTopic).subscribe(() => (this.numberOfStarted += 1));\r\n        if (this.exam?.course?.id && this.exam?.id) {\r\n            this.longestWorkingTimeSub = this.studentExamService.getLongestWorkingTimeForExam(this.exam.course.id, this.exam.id).subscribe((res) => {\r\n                this.longestWorkingTime = res;\r\n                this.calculateIsExamOver();\r\n            });\r\n        }\r\n    }\r\n\r\n    ngOnChanges() {\r\n        this.isTestExam = this.exam.testExam!;\r\n        this.pointsExercisesEqual = this.examChecklistService.checkPointsExercisesEqual(this.exam);\r\n        this.totalPoints = this.examChecklistService.checkTotalPointsMandatory(this.pointsExercisesEqual, this.exam);\r\n        this.allGroupsContainExercise = this.examChecklistService.checkEachGroupContainsExercise(this.exam);\r\n        this.countMandatoryExercises = this.exam.exerciseGroups?.filter((group) => group.isMandatory)?.length ?? 0;\r\n        this.hasOptionalExercises = this.countMandatoryExercises < (this.exam.exerciseGroups?.length ?? 0);\r\n        this.examChecklistService.getExamStatistics(this.exam).subscribe((examStats) => {\r\n            this.examChecklist = examStats;\r\n            this.allExamsGenerated =\r\n                !!this.exam.numberOfExamUsers && this.exam.numberOfExamUsers > 0 && this.examChecklistService.checkAllExamsGenerated(this.exam, this.examChecklist);\r\n            this.numberOfStarted = this.examChecklist.numberOfExamsStarted;\r\n            this.numberOfSubmitted = this.examChecklist.numberOfExamsSubmitted;\r\n            if (this.isExamOver) {\r\n                if (this.examChecklist.numberOfTotalExamAssessmentsFinishedByCorrectionRound !== undefined) {\r\n                    const lastAssessmentFinished = this.examChecklist.numberOfTotalExamAssessmentsFinishedByCorrectionRound.last();\r\n                    this.existsUnfinishedAssessments = lastAssessmentFinished !== this.examChecklist.numberOfTotalParticipationsForAssessment;\r\n                }\r\n            }\r\n            this.existsUnassessedQuizzes = this.examChecklist.existsUnassessedQuizzes;\r\n            this.existsUnsubmittedExercises = this.examChecklist.existsUnsubmittedExercises;\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        const submittedTopic = this.examChecklistService.getSubmittedTopic(this.exam);\r\n        this.websocketService.unsubscribe(submittedTopic);\r\n        const startedTopic = this.examChecklistService.getStartedTopic(this.exam);\r\n        this.websocketService.unsubscribe(startedTopic);\r\n        if (this.longestWorkingTimeSub) {\r\n            this.longestWorkingTimeSub.unsubscribe();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Evaluates all the quiz exercises that belong to the exam\r\n     */\r\n    evaluateQuizExercises() {\r\n        this.isEvaluatingQuizExercises = true;\r\n        if (this.exam.course?.id && this.exam.id) {\r\n            this.examManagementService.evaluateQuizExercises(this.exam.course.id, this.exam.id).subscribe({\r\n                next: (res) => {\r\n                    this.alertService.success('artemisApp.studentExams.evaluateQuizExerciseSuccess', { number: res?.body });\r\n                    this.existsUnassessedQuizzes = false;\r\n                    this.isEvaluatingQuizExercises = false;\r\n                },\r\n                error: (error: HttpErrorResponse) => {\r\n                    this.dialogErrorSource.next(error.message);\r\n                    this.alertService.error('artemisApp.studentExams.evaluateQuizExerciseFailure');\r\n                    this.isEvaluatingQuizExercises = false;\r\n                },\r\n            });\r\n        } else {\r\n            captureException(new Error(`Quiz exercises could not be evaluated due to missing course ID or exam ID`));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Evaluates all the unsubmitted Text and Modelling submissions to 0\r\n     */\r\n    assessUnsubmittedExamModelingAndTextParticipations() {\r\n        this.isAssessingUnsubmittedExams = true;\r\n        if (this.exam.course?.id && this.exam.id) {\r\n            this.examManagementService.assessUnsubmittedExamModelingAndTextParticipations(this.exam.course.id, this.exam.id).subscribe({\r\n                next: (res) => {\r\n                    this.alertService.success('artemisApp.studentExams.assessUnsubmittedStudentExamsSuccess', { number: res?.body });\r\n                    this.existsUnsubmittedExercises = false;\r\n                    this.isAssessingUnsubmittedExams = false;\r\n                },\r\n                error: (error: HttpErrorResponse) => {\r\n                    this.dialogErrorSource.next(error.message);\r\n                    this.alertService.error('artemisApp.studentExams.assessUnsubmittedStudentExamsFailure');\r\n                    this.isAssessingUnsubmittedExams = false;\r\n                },\r\n            });\r\n        } else {\r\n            captureException(new Error(`Unsubmitted exercises could not be evaluated due to missing course ID or exam ID`));\r\n        }\r\n    }\r\n\r\n    calculateIsExamOver() {\r\n        if (this.longestWorkingTime && this.exam) {\r\n            const startDate = dayjs(this.exam.startDate);\r\n            let endDate = startDate.add(this.longestWorkingTime, 'seconds');\r\n            if (this.exam.gracePeriod) {\r\n                endDate = endDate.add(this.exam.gracePeriod!, 'seconds');\r\n            }\r\n            this.isExamOver = endDate.isBefore(dayjs());\r\n        }\r\n    }\r\n}\r\n", "@if (exam?.course?.isAtLeastInstructor) {\r\n    <div>\r\n        <h2>\r\n            <span jhiTranslate=\"artemisApp.examManagement.checklist.{{ isTestExam ? 'testExam.' : '' }}title\"></span>\r\n        </h2>\r\n        @if (!isTestExam) {\r\n            <p>\r\n                <span>\r\n                    {{ 'artemisApp.examManagement.checklist.introduction' | artemisTranslate }}\r\n                    <a href=\"https://docs.artemis.cit.tum.de/user/exams/instructors_guide/\" jhiTranslate=\"artemisApp.examManagement.checklist.linkDescription\"></a>\r\n                    {{ 'artemisApp.examManagement.checklist.introductionPart2' | artemisTranslate }}\r\n                </span>\r\n            </p>\r\n        }\r\n        @if (isTestExam) {\r\n            <p>\r\n                <!-- documentation currently missing. -->\r\n                <span jhiTranslate=\"artemisApp.examManagement.checklist.testExam.introduction\"></span>\r\n            </p>\r\n        }\r\n        <br />\r\n        <h3 jhiTranslate=\"artemisApp.examStatus.preparation.{{ isTestExam ? 'testExam.' : '' }}examPreparation\"></h3>\r\n        <div class=\"table-responsive\">\r\n            <table class=\"table table-striped\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                            <span>#</span>\r\n                        </th>\r\n                        <th>\r\n                            <span jhiTranslate=\"artemisApp.examManagement.checklist.checklistItem\"></span>\r\n                        </th>\r\n                        <th>\r\n                            <span jhiTranslate=\"artemisApp.examManagement.checklist.description\"></span>\r\n                        </th>\r\n                        <th>\r\n                            <span jhiTranslate=\"artemisApp.examManagement.checklist.goTo\"></span>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>1</td>\r\n                        <td>\r\n                            <span jhiTranslate=\"artemisApp.examManagement.checklist.tableItem.exerciseGroups\"></span>\r\n                        </td>\r\n                        <td>\r\n                            <span jhiTranslate=\"artemisApp.examManagement.checklist.descriptionItem.exerciseGroups\"></span>\r\n                            <hr />\r\n                            <ul class=\"list-unstyled\">\r\n                                <li class=\"list-group-item border-1\">\r\n                                    <span>\r\n                                        <jhi-checklist-check\r\n                                            [checkAttribute]=\"exam.exerciseGroups && exam.exerciseGroups.length > 0\"\r\n                                            data-testid=\"check-least-one-exercise-group\"\r\n                                        />\r\n                                        <span jhiTranslate=\"artemisApp.examManagement.checklist.textitems.leastoneexercisegroup\"></span>\r\n                                    </span>\r\n                                </li>\r\n                                <li class=\"list-group-item border-1\">\r\n                                    <span>\r\n                                        <!-- assert amount mandatory exercises <= number in settings <= amount total exercises -->\r\n                                        <jhi-checklist-check\r\n                                            [checkAttribute]=\"\r\n                                                exam.exerciseGroups &&\r\n                                                countMandatoryExercises <= (exam.numberOfExercisesInExam ?? 0) &&\r\n                                                (exam.numberOfExercisesInExam ?? 0) <= exam.exerciseGroups.length\r\n                                            \"\r\n                                            data-testid=\"check-number-of-exercise-groups\"\r\n                                        />\r\n                                        <span\r\n                                            jhiTranslate=\"{{\r\n                                                !hasOptionalExercises\r\n                                                    ? 'artemisApp.examManagement.checklist.textitems.numberofexercisegroupsequal'\r\n                                                    : 'artemisApp.examManagement.checklist.textitems.numberofexercisegroupsinbetween'\r\n                                            }}\"\r\n                                        ></span>\r\n                                    </span>\r\n                                </li>\r\n                                <li class=\"list-group-item border-1\">\r\n                                    <span>\r\n                                        <jhi-checklist-check [checkAttribute]=\"allGroupsContainExercise\" data-testid=\"check-each-exercise-group-has-exercises\" />\r\n                                        <span jhiTranslate=\"artemisApp.examManagement.checklist.textitems.eachexercisegroup\"></span>\r\n                                    </span>\r\n                                </li>\r\n                                <li class=\"list-group-item border-1\">\r\n                                    <span>\r\n                                        <jhi-checklist-check [checkAttribute]=\"pointsExercisesEqual\" data-testid=\"check-points-in-exercise-groups-equal\" />\r\n                                        <span jhiTranslate=\"artemisApp.examManagement.checklist.textitems.pointsexercisegroupequal\"></span>\r\n                                    </span>\r\n                                </li>\r\n                                <li class=\"list-group-item border-1\">\r\n                                    <span>\r\n                                        <jhi-checklist-check [checkAttribute]=\"totalPoints\" data-testid=\"check-total-points-possible\" />\r\n                                        <span jhiTranslate=\"artemisApp.examManagement.checklist.textitems.totalpointspossible\"></span>\r\n                                    </span>\r\n                                </li>\r\n                            </ul>\r\n                            <hr />\r\n                            <!-- Exercise Group table -->\r\n                            <jhi-exam-checklist-exercisegroup-table [quizExamMaxPoints]=\"exam.quizExamMaxPoints ?? 0\" [exerciseGroups]=\"exam.exerciseGroups || []\" />\r\n                        </td>\r\n                        <td>\r\n                            <a type=\"submit\" [routerLink]=\"getExamRoutesByIdentifier('exercise-groups')\" class=\"btn btn-primary\" id=\"exercises-button-groups-table\">\r\n                                <fa-icon [icon]=\"faListAlt\" />\r\n                                <span jhiTranslate=\"artemisApp.examManagement.exerciseGroups\"></span>\r\n                            </a>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>2</td>\r\n                        <td>\r\n                            <span jhiTranslate=\"artemisApp.examManagement.checklist.tableItem.testRun\"></span>\r\n                        </td>\r\n                        <td>\r\n                            <span jhiTranslate=\"artemisApp.examManagement.checklist.descriptionItem.testRun\"></span>\r\n                            <hr />\r\n                            <ul class=\"list-unstyled\">\r\n                                @if (examChecklist) {\r\n                                    <li class=\"list-group-item border-1\">\r\n                                        <span jhiTranslate=\"artemisApp.examManagement.checklist.textitems.testruns\"></span>\r\n                                        {{ examChecklist.numberOfTestRuns }}\r\n                                    </li>\r\n                                }\r\n                            </ul>\r\n                        </td>\r\n                        <td>\r\n                            <a [routerLink]=\"getExamRoutesByIdentifier('test-runs')\" class=\"btn btn-info\">\r\n                                <fa-icon [icon]=\"faUser\" />\r\n                                <span jhiTranslate=\"artemisApp.examManagement.testRun.testRun\"></span>\r\n                            </a>\r\n                        </td>\r\n                    </tr>\r\n                    @if (!isTestExam) {\r\n                        <tr>\r\n                            <td>3</td>\r\n                            <td>\r\n                                <span jhiTranslate=\"artemisApp.examManagement.checklist.tableItem.register\"></span>\r\n                            </td>\r\n                            <td>\r\n                                <span jhiTranslate=\"artemisApp.examManagement.checklist.descriptionItem.register\"></span>\r\n                                <hr />\r\n                                <ul class=\"list-unstyled\">\r\n                                    <li class=\"list-group-item border-1\">\r\n                                        <span>\r\n                                            <jhi-checklist-check [checkAttribute]=\"!!exam.numberOfExamUsers && exam.numberOfExamUsers! > 0\" data-testid=\"check-least-one-student\" />\r\n                                            <span jhiTranslate=\"artemisApp.examManagement.checklist.textitems.leastonestudent\"></span>\r\n                                        </span>\r\n                                    </li>\r\n                                    <li class=\"list-group-item border-1\">\r\n                                        <span jhiTranslate=\"artemisApp.examManagement.checklist.textitems.studentsregistered\"></span>\r\n                                        <span> {{ exam.numberOfExamUsers }} </span>\r\n                                    </li>\r\n                                </ul>\r\n                            </td>\r\n                            <td>\r\n                                <a [routerLink]=\"getExamRoutesByIdentifier('students')\" class=\"btn btn-info\" data-testid=\"students-button-register\">\r\n                                    <fa-icon [icon]=\"faUser\" />\r\n                                    <span jhiTranslate=\"artemisApp.examManagement.students\"></span>\r\n                                </a>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>4</td>\r\n                            <td>\r\n                                <span jhiTranslate=\"artemisApp.examManagement.checklist.tableItem.generateStudentExams\"></span>\r\n                            </td>\r\n                            <td>\r\n                                <span jhiTranslate=\"artemisApp.examManagement.checklist.descriptionItem.generateStudentExams\"></span>\r\n                                <hr />\r\n                                <ul class=\"list-unstyled\">\r\n                                    <li class=\"list-group-item border-1\">\r\n                                        <span>\r\n                                            <jhi-checklist-check [checkAttribute]=\"allExamsGenerated\" data-testid=\"check-all-exams-generated\" />\r\n                                            <span jhiTranslate=\"artemisApp.examManagement.checklist.textitems.allexamsgenerated\"></span>\r\n                                        </span>\r\n                                    </li>\r\n                                </ul>\r\n                            </td>\r\n                            <td>\r\n                                <a [routerLink]=\"getExamRoutesByIdentifier('student-exams')\" class=\"btn btn-primary\" data-testid=\"student-exams-button-generate\">\r\n                                    <fa-icon [icon]=\"faEye\" />\r\n                                    <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.examManagement.studentExams\"></span>\r\n                                </a>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>5</td>\r\n                            <td>\r\n                                <span jhiTranslate=\"artemisApp.examManagement.checklist.tableItem.prepareExerciseStart\"></span>\r\n                            </td>\r\n                            <td>\r\n                                <span jhiTranslate=\"artemisApp.examManagement.checklist.descriptionItem.prepareExerciseStart\"></span>\r\n                                <hr />\r\n                                <ul class=\"list-unstyled\">\r\n                                    @if (examChecklist) {\r\n                                        <li class=\"list-group-item border-1\">\r\n                                            <jhi-checklist-check\r\n                                                [checkAttribute]=\"!!examChecklist.allExamExercisesAllStudentsPrepared && this.allExamsGenerated\"\r\n                                                data-testid=\"check-all-exercises-prepared\"\r\n                                            />\r\n                                            <span jhiTranslate=\"artemisApp.examManagement.checklist.textitems.allExercisesPrepared\"></span>\r\n                                        </li>\r\n                                    }\r\n                                </ul>\r\n                            </td>\r\n                            <td>\r\n                                <a [routerLink]=\"getExamRoutesByIdentifier('student-exams')\" class=\"btn btn-primary\" data-testid=\"student-exams-button-prepare-start\">\r\n                                    <fa-icon [icon]=\"faEye\" />\r\n                                    <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.examManagement.studentExams\"></span>\r\n                                </a>\r\n                            </td>\r\n                        </tr>\r\n                    }\r\n                    <tr>\r\n                        <td>{{ isTestExam ? 3 : 6 }}</td>\r\n                        <td>\r\n                            <span jhiTranslate=\"artemisApp.examManagement.checklist.tableItem.examDetails\"></span>\r\n                        </td>\r\n                        <td>\r\n                            <span jhiTranslate=\"artemisApp.examManagement.checklist.descriptionItem.examDetails\"></span>\r\n                            @if (isTestExam) {\r\n                                <hr />\r\n                                <span>{{ 'artemisApp.examManagement.checklist.testExam.detailsHintForTestExams' | artemisTranslate }} :</span>\r\n                                <!-- Additional hints for test exams, as several steps are automated compared to the normal exam and therefore do not need to be performed by the user -->\r\n                                <ul class=\"list-unstyled\">\r\n                                    <li class=\"list-group-item border-1\">\r\n                                        <span>\r\n                                            <jhi-checklist-check [checkAttribute]=\"true\" />\r\n                                            <span jhiTranslate=\"artemisApp.examManagement.checklist.testExam.studentRegistration\"></span>\r\n                                        </span>\r\n                                    </li>\r\n                                    <li class=\"list-group-item border-1\">\r\n                                        <span>\r\n                                            <jhi-checklist-check [checkAttribute]=\"true\" />\r\n                                            <span jhiTranslate=\"artemisApp.studentExams.studentExamStatusTestExam\"></span>\r\n                                        </span>\r\n                                    </li>\r\n                                    <li class=\"list-group-item border-1\">\r\n                                        <span>\r\n                                            <jhi-checklist-check [checkAttribute]=\"true\" />\r\n                                            <span jhiTranslate=\"artemisApp.examManagement.checklist.testExam.instantResults\"></span>\r\n                                        </span>\r\n                                    </li>\r\n                                </ul>\r\n                            }\r\n                        </td>\r\n                        <td>\r\n                            <a id=\"editButton_table\" [routerLink]=\"getExamRoutesByIdentifier('edit')\" class=\"btn btn-warning\">\r\n                                <fa-icon [icon]=\"faWrench\" />&nbsp;<span jhiTranslate=\"entity.action.edit\"></span>\r\n                            </a>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <hr />\r\n        <h3 jhiTranslate=\"artemisApp.examStatus.conduction.{{ isTestExam ? 'testExam.' : '' }}examConduction\"></h3>\r\n        <b\r\n            jhiTranslate=\"artemisApp.examManagement.checklist.conductionPlannedFromTo\"\r\n            [translateValues]=\"{\r\n                from: exam.startDate! | artemisDate,\r\n                to: exam.endDate! | artemisDate,\r\n            }\"\r\n        ></b>\r\n        <div class=\"table-responsive\">\r\n            <table class=\"table table-striped\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                            <span>#</span>\r\n                        </th>\r\n                        <th>\r\n                            <span jhiTranslate=\"artemisApp.examManagement.checklist.checklistItem\"></span>\r\n                        </th>\r\n                        <th>\r\n                            <span jhiTranslate=\"artemisApp.examManagement.checklist.description\"></span>\r\n                        </th>\r\n                        <th>\r\n                            <span jhiTranslate=\"artemisApp.examManagement.checklist.goTo\"></span>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>1</td>\r\n                        <td>\r\n                            <span jhiTranslate=\"artemisApp.examManagement.checklist.tableItem.conductExam\"></span>\r\n                        </td>\r\n                        <td>\r\n                            <span jhiTranslate=\"artemisApp.examManagement.checklist.descriptionItem.conductExam\"></span>\r\n                            <hr />\r\n                            <!-- Display number of registered students -->\r\n                            @if (exam.numberOfExamUsers) {\r\n                                <div>\r\n                                    <span>{{ 'artemisApp.examManagement.checklist.textitems.studentsregistered' | artemisTranslate }} {{ exam.numberOfExamUsers! }}</span>\r\n                                    <hr />\r\n                                </div>\r\n                            }\r\n                            <!-- Display started exams-->\r\n                            @if (\r\n                                examChecklist && examChecklist.numberOfGeneratedStudentExams !== null && examChecklist.numberOfGeneratedStudentExams !== 0 && numberOfStarted > 0\r\n                            ) {\r\n                                <div>\r\n                                    <span>{{ 'artemisApp.examManagement.checklist.textitems.startedExam' | artemisTranslate }} :</span>\r\n                                    <div class=\"pt-2\">\r\n                                        <jhi-progress-bar\r\n                                            [denominator]=\"examChecklist.numberOfGeneratedStudentExams!\"\r\n                                            [numerator]=\"numberOfStarted\"\r\n                                            [percentage]=\"(100 * numberOfStarted) / examChecklist.numberOfGeneratedStudentExams!\"\r\n                                        />\r\n                                    </div>\r\n                                    <hr />\r\n                                </div>\r\n                            }\r\n                            <!-- Display submitted exams-->\r\n                            @if (\r\n                                examChecklist && examChecklist.numberOfGeneratedStudentExams !== null && examChecklist.numberOfGeneratedStudentExams !== 0 && numberOfSubmitted > 0\r\n                            ) {\r\n                                <div>\r\n                                    <span>{{ 'artemisApp.examManagement.checklist.textitems.submittedExam' | artemisTranslate }} :</span>\r\n                                    <div class=\"pt-2\">\r\n                                        <jhi-progress-bar\r\n                                            [denominator]=\"numberOfStarted\"\r\n                                            [numerator]=\"numberOfSubmitted!\"\r\n                                            [percentage]=\"(100 * numberOfSubmitted!) / numberOfStarted\"\r\n                                        />\r\n                                    </div>\r\n                                    <br />\r\n                                </div>\r\n                            }\r\n                            @if (examChecklist && numberOfSubmitted! === 0) {\r\n                                <div>\r\n                                    <span jhiTranslate=\"artemisApp.examManagement.checklist.textitems.noSubmissions\"></span>\r\n                                </div>\r\n                            }\r\n                        </td>\r\n                        <td>\r\n                            <a [routerLink]=\"getExamRoutesByIdentifier('student-exams')\" class=\"btn btn-primary\">\r\n                                <fa-icon [icon]=\"faEye\" />\r\n                                <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.examManagement.studentExams\"></span>\r\n                            </a>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>2</td>\r\n                        <td>\r\n                            <span jhiTranslate=\"artemisApp.examManagement.checklist.tableItem.editWorkingTime\"></span>\r\n                        </td>\r\n                        <td>\r\n                            <span jhiTranslate=\"artemisApp.examManagement.checklist.descriptionItem.editWorkingTime\"></span>\r\n                        </td>\r\n                        <td>\r\n                            <jhi-exam-edit-working-time [(exam)]=\"exam\" />\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>3</td>\r\n                        <td>\r\n                            <span jhiTranslate=\"artemisApp.examManagement.checklist.tableItem.createAnnouncement\"></span>\r\n                        </td>\r\n                        <td>\r\n                            <span jhiTranslate=\"artemisApp.examManagement.checklist.descriptionItem.createAnnouncement\"></span>\r\n                        </td>\r\n                        <td>\r\n                            <jhi-exam-live-announcement-create-button [exam]=\"exam\" />\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <hr />\r\n        @if (!isTestExam) {\r\n            <h3 jhiTranslate=\"artemisApp.examStatus.correction.examCorrection\"></h3>\r\n            <div class=\"table-responsive\">\r\n                <table class=\"table table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>\r\n                                <span>#</span>\r\n                            </th>\r\n                            <th>\r\n                                <span jhiTranslate=\"artemisApp.examManagement.checklist.checklistItem\"></span>\r\n                            </th>\r\n                            <th>\r\n                                <span jhiTranslate=\"artemisApp.examManagement.checklist.description\"></span>\r\n                            </th>\r\n                            <th>\r\n                                <span jhiTranslate=\"artemisApp.examManagement.checklist.goTo\"></span>\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>1</td>\r\n                            <td>\r\n                                <span jhiTranslate=\"artemisApp.examManagement.checklist.tableItem.suspiciousBehavior\"></span>\r\n                            </td>\r\n                            <td>\r\n                                <span jhiTranslate=\"artemisApp.examManagement.checklist.descriptionItem.suspiciousBehavior\"></span>\r\n                                <hr />\r\n                                <br />\r\n                            </td>\r\n                            <td>\r\n                                <a [routerLink]=\"['suspicious-behavior']\" class=\"btn btn-info\">\r\n                                    <fa-icon [icon]=\"faChartBar\" />\r\n                                    <span jhiTranslate=\"artemisApp.examManagement.suspiciousBehavior.title\"></span>\r\n                                </a>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>2</td>\r\n                            <td>\r\n                                <span jhiTranslate=\"artemisApp.examManagement.checklist.tableItem.assessAllSubmissions\"></span>\r\n                            </td>\r\n                            <td>\r\n                                <span jhiTranslate=\"artemisApp.examManagement.checklist.descriptionItem.assessAllSubmissions\"></span>\r\n                                <hr />\r\n                                <!-- Display assessment progress summed up over all exercises, by correction round -->\r\n                                @if (examChecklist && examChecklist.numberOfTotalExamAssessmentsFinishedByCorrectionRound !== null && numberOfSubmitted !== 0) {\r\n                                    <div>\r\n                                        @for (\r\n                                            finishedByCorrectionRound of examChecklist.numberOfTotalExamAssessmentsFinishedByCorrectionRound;\r\n                                            track finishedByCorrectionRound;\r\n                                            let index = $index\r\n                                        ) {\r\n                                            <div>\r\n                                                @if (index > 0) {\r\n                                                    <hr />\r\n                                                }\r\n                                                <span> {{ 'artemisApp.examManagement.checklist.textitems.correctionRound' | artemisTranslate }} {{ index + 1 }} : </span>\r\n                                                <div class=\"pt-2\">\r\n                                                    <jhi-progress-bar\r\n                                                        [denominator]=\"examChecklist.numberOfTotalParticipationsForAssessment\"\r\n                                                        [numerator]=\"finishedByCorrectionRound!\"\r\n                                                        [percentage]=\"(finishedByCorrectionRound! / examChecklist.numberOfTotalParticipationsForAssessment) * 100\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                }\r\n                                @if (examChecklist && numberOfSubmitted === 0) {\r\n                                    <div>\r\n                                        <span jhiTranslate=\"artemisApp.examManagement.checklist.textitems.noSubmissions\"></span>\r\n                                    </div>\r\n                                }\r\n                                <br />\r\n                            </td>\r\n                            <td>\r\n                                <a [routerLink]=\"getExamRoutesByIdentifier('assessment-dashboard')\" class=\"btn btn-primary\">\r\n                                    <fa-icon [icon]=\"faThList\" />\r\n                                    <span jhiTranslate=\"artemisApp.examManagement.assessmentDashboard\"></span>\r\n                                </a>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>3</td>\r\n                            <td>\r\n                                <span jhiTranslate=\"artemisApp.examManagement.checklist.tableItem.publishResults\"></span>\r\n                            </td>\r\n                            <td>\r\n                                <span jhiTranslate=\"artemisApp.examManagement.checklist.descriptionItem.publishResults\"></span>\r\n                                <hr />\r\n                                <ul class=\"list-unstyled\">\r\n                                    <li class=\"list-group-item border-1\">\r\n                                        <span>\r\n                                            <li class=\"list-group-item border-1\">\r\n                                                <jhi-checklist-check [checkAttribute]=\"!!exam.publishResultsDate\" data-testid=\"check-publishing-date-set\" />\r\n                                                <span jhiTranslate=\"artemisApp.examManagement.checklist.textitems.pulishingdateset\"></span>\r\n                                            </li>\r\n                                            @if (exam.publishResultsDate) {\r\n                                                <hr />\r\n                                                <div class=\"table-responsive\">\r\n                                                    <table class=\"table table-striped\">\r\n                                                        <thead>\r\n                                                            <tr>\r\n                                                                <th>\r\n                                                                    <span jhiTranslate=\"artemisApp.examManagement.checklist.textitems.assessmentCheckType\"></span>\r\n                                                                </th>\r\n                                                                <th>\r\n                                                                    <span jhiTranslate=\"artemisApp.examManagement.checklist.textitems.assessmentStatus\"></span>\r\n                                                                </th>\r\n                                                                <th>\r\n                                                                    <span jhiTranslate=\"artemisApp.examManagement.checklist.textitems.assessmentAction\"></span>\r\n                                                                </th>\r\n                                                            </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                            <tr>\r\n                                                                <th>\r\n                                                                    <span jhiTranslate=\"artemisApp.examManagement.checklist.textitems.checkUnfinishedAssessments\"></span>\r\n                                                                </th>\r\n                                                                <th>\r\n                                                                    <jhi-checklist-check\r\n                                                                        [checkAttribute]=\"!isExamOver || (isExamOver && !existsUnfinishedAssessments)\"\r\n                                                                        data-testid=\"check-unfinished-assessments\"\r\n                                                                    />\r\n                                                                </th>\r\n                                                                <th>\r\n                                                                    <button\r\n                                                                        [routerLink]=\"getExamRoutesByIdentifier('assessment-dashboard')\"\r\n                                                                        class=\"btn btn-primary\"\r\n                                                                        id=\"tutor-exam-dashboard-button_table_assessment_check\"\r\n                                                                        [disabled]=\"!isExamOver || isLoading || (isExamOver && !existsUnfinishedAssessments)\"\r\n                                                                    >\r\n                                                                        <fa-icon [icon]=\"faThList\" />\r\n                                                                        <span jhiTranslate=\"artemisApp.examManagement.assessmentDashboard\"></span>\r\n                                                                    </button>\r\n                                                                </th>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <th>\r\n                                                                    <span jhiTranslate=\"artemisApp.examManagement.checklist.textitems.checkUnassessedQuizzes\"></span>\r\n                                                                </th>\r\n                                                                <th>\r\n                                                                    @if (isEvaluatingQuizExercises) {\r\n                                                                        <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                                                                    } @else {\r\n                                                                        <jhi-checklist-check\r\n                                                                            [checkAttribute]=\"!isExamOver || (isExamOver && !existsUnassessedQuizzes)\"\r\n                                                                            data-testid=\"check-unassessed-quizzes\"\r\n                                                                        />\r\n                                                                    }\r\n                                                                </th>\r\n                                                                <th>\r\n                                                                    <button\r\n                                                                        id=\"evaluateQuizExercisesButton\"\r\n                                                                        class=\"btn btn-primary mt-1\"\r\n                                                                        (click)=\"evaluateQuizExercises()\"\r\n                                                                        [disabled]=\"\r\n                                                                            !isExamOver || isLoading || (isExamOver && (!existsUnassessedQuizzes || isEvaluatingQuizExercises))\r\n                                                                        \"\r\n                                                                    >\r\n                                                                        @if (isEvaluatingQuizExercises) {\r\n                                                                            <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                                                                        }\r\n                                                                        <span jhiTranslate=\"artemisApp.studentExams.evaluateQuizExercises\"></span>\r\n                                                                    </button>\r\n                                                                </th>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <th>\r\n                                                                    <span jhiTranslate=\"artemisApp.examManagement.checklist.textitems.checkUnsubmittedExercises\"></span>\r\n                                                                </th>\r\n                                                                <th>\r\n                                                                    @if (isAssessingUnsubmittedExams) {\r\n                                                                        <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                                                                    } @else {\r\n                                                                        <jhi-checklist-check\r\n                                                                            [checkAttribute]=\"!isExamOver || (isExamOver && !existsUnsubmittedExercises)\"\r\n                                                                            data-testid=\"check-unsubmitted-exercises\"\r\n                                                                        />\r\n                                                                    }\r\n                                                                </th>\r\n                                                                <th>\r\n                                                                    <button\r\n                                                                        class=\"btn btn-primary mt-1\"\r\n                                                                        id=\"assessUnsubmittedExamModelingAndTextParticipationsButton\"\r\n                                                                        (click)=\"assessUnsubmittedExamModelingAndTextParticipations()\"\r\n                                                                        [disabled]=\"\r\n                                                                            !isExamOver || isLoading || (isExamOver && (!existsUnsubmittedExercises || isAssessingUnsubmittedExams))\r\n                                                                        \"\r\n                                                                    >\r\n                                                                        @if (isAssessingUnsubmittedExams) {\r\n                                                                            <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                                                                        }\r\n                                                                        <span jhiTranslate=\"artemisApp.studentExams.assessUnsubmittedStudentExams\"></span>\r\n                                                                    </button>\r\n                                                                </th>\r\n                                                            </tr>\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            }\r\n                                        </span>\r\n                                    </li>\r\n                                </ul>\r\n                            </td>\r\n                            <td>\r\n                                <a id=\"editButton_publish\" [routerLink]=\"getExamRoutesByIdentifier('edit')\" class=\"btn btn-warning\">\r\n                                    <fa-icon [icon]=\"faWrench\" />&nbsp;<span jhiTranslate=\"entity.action.edit\"></span>\r\n                                </a>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>4</td>\r\n                            <td>\r\n                                <span jhiTranslate=\"artemisApp.examManagement.checklist.tableItem.examReview\"></span>\r\n                            </td>\r\n                            <td>\r\n                                <span jhiTranslate=\"artemisApp.examManagement.checklist.descriptionItem.examReview\"></span>\r\n                                <hr />\r\n                                <ul class=\"list-unstyled\">\r\n                                    <li class=\"list-group-item border-1\">\r\n                                        <span>\r\n                                            <jhi-checklist-check [checkAttribute]=\"!!exam.examStudentReviewStart\" data-testid=\"check-start-date-review-set\" />\r\n                                            <span jhiTranslate=\"artemisApp.examManagement.checklist.textitems.startdatereviewset\"></span>\r\n                                        </span>\r\n                                    </li>\r\n                                    <li class=\"list-group-item border-1\">\r\n                                        <span>\r\n                                            <jhi-checklist-check [checkAttribute]=\"!!exam.examStudentReviewEnd\" data-testid=\"check-end-date-review-set\" />\r\n                                            <span jhiTranslate=\"artemisApp.examManagement.checklist.textitems.enddatereviewset\"></span>\r\n                                        </span>\r\n                                    </li>\r\n                                </ul>\r\n                            </td>\r\n                            <td>\r\n                                <a id=\"editButton_review\" [routerLink]=\"getExamRoutesByIdentifier('edit')\" class=\"btn btn-warning\">\r\n                                    <fa-icon [icon]=\"faWrench\" />&nbsp;<span jhiTranslate=\"entity.action.edit\"></span>\r\n                                </a>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>5</td>\r\n                            <td>\r\n                                <span jhiTranslate=\"artemisApp.examManagement.checklist.tableItem.resolveComplaints\"></span>\r\n                            </td>\r\n                            <td>\r\n                                <span jhiTranslate=\"artemisApp.examManagement.checklist.descriptionItem.resolveComplaints\"></span>\r\n                                <hr />\r\n                                @if (examChecklist && examChecklist.numberOfAllComplaintsDone !== null && examChecklist.numberOfAllComplaints !== 0) {\r\n                                    <div>\r\n                                        <div class=\"pt-2\">\r\n                                            <jhi-progress-bar\r\n                                                [denominator]=\"examChecklist.numberOfAllComplaints!\"\r\n                                                [numerator]=\"examChecklist.numberOfAllComplaintsDone!\"\r\n                                                [percentage]=\"(examChecklist.numberOfAllComplaintsDone! / examChecklist.numberOfAllComplaints!) * 100\"\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                                @if (examChecklist && examChecklist.numberOfAllComplaints === 0) {\r\n                                    <div>\r\n                                        <span jhiTranslate=\"artemisApp.examManagement.checklist.textitems.noComplaints\"></span>\r\n                                    </div>\r\n                                }\r\n                                <br />\r\n                            </td>\r\n                            <td>\r\n                                <a [routerLink]=\"getExamRoutesByIdentifier('assessment-dashboard')\" class=\"btn btn-primary\" id=\"tutor-exam-dashboard-button_table_complaints\">\r\n                                    <fa-icon [icon]=\"faThList\" />\r\n                                    <span jhiTranslate=\"artemisApp.examManagement.assessmentDashboard\"></span>\r\n                                </a>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>6</td>\r\n                            <td>\r\n                                <span jhiTranslate=\"artemisApp.examManagement.checklist.tableItem.exportResults\"></span>\r\n                            </td>\r\n                            <td>\r\n                                <span jhiTranslate=\"artemisApp.examManagement.checklist.descriptionItem.exportResults\"></span>\r\n                            </td>\r\n                            <td>\r\n                                <a [routerLink]=\"getExamRoutesByIdentifier('scores')\" class=\"btn btn-info\" id=\"scores-button_publish_result\">\r\n                                    <fa-icon [icon]=\"faEye\" />\r\n                                    <span jhiTranslate=\"entity.action.scores\"></span>\r\n                                </a>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        }\r\n    </div>\r\n}\r\n", "import { Component, OnDestroy, OnInit, inject } from '@angular/core';\r\nimport { ActivatedRoute, Router, RouterLink } from '@angular/router';\r\nimport { SafeHtml } from '@angular/platform-browser';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { Observable, Subject, map } from 'rxjs';\r\nimport { Exam } from 'app/entities/exam/exam.model';\r\nimport { ActionType, EntitySummary } from 'app/shared/delete-dialog/delete-dialog.model';\r\nimport { ButtonSize } from 'app/shared/components/button.component';\r\nimport { ArtemisMarkdownService } from 'app/shared/markdown.service';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\nimport { ExamManagementService } from 'app/exam/manage/exam-management.service';\r\nimport dayjs from 'dayjs/esm';\r\nimport { faAward, faClipboard, faEye, faFlaskVial, faHeartBroken, faListAlt, faThList, faTrash, faUndo, faUser, faWrench } from '@fortawesome/free-solid-svg-icons';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { GradingSystemService } from 'app/grading-system/grading-system.service';\r\nimport { GradeType } from 'app/entities/grading-scale.model';\r\nimport { DetailOverviewListComponent, DetailOverviewSection, DetailType } from 'app/detail-overview-list/detail-overview-list.component';\r\nimport { ArtemisDurationFromSecondsPipe } from 'app/shared/pipes/artemis-duration-from-seconds.pipe';\r\nimport { scrollToTopOfPage } from 'app/shared/util/utils';\r\nimport { ExerciseType } from 'app/entities/exercise.model';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { DeleteButtonDirective } from 'app/shared/delete-dialog/delete-button.directive';\r\nimport { CourseExamArchiveButtonComponent } from 'app/shared/components/course-exam-archive-button/course-exam-archive-button.component';\r\nimport { ExamChecklistComponent } from './exam-checklist-component/exam-checklist.component';\r\n\r\n@Component({\r\n    selector: 'jhi-exam-detail',\r\n    templateUrl: './exam-detail.component.html',\r\n    imports: [TranslateDirective, RouterLink, FaIconComponent, DeleteButtonDirective, CourseExamArchiveButtonComponent, ExamChecklistComponent, DetailOverviewListComponent],\r\n    providers: [ArtemisDurationFromSecondsPipe],\r\n})\r\nexport class ExamDetailComponent implements OnInit, OnDestroy {\r\n    private route = inject(ActivatedRoute);\r\n    private artemisMarkdown = inject(ArtemisMarkdownService);\r\n    private accountService = inject(AccountService);\r\n    private examManagementService = inject(ExamManagementService);\r\n    private router = inject(Router);\r\n    private alertService = inject(AlertService);\r\n    private gradingSystemService = inject(GradingSystemService);\r\n    private artemisDurationFromSecondsPipe = inject(ArtemisDurationFromSecondsPipe);\r\n\r\n    exam: Exam;\r\n    formattedStartText?: SafeHtml;\r\n    formattedConfirmationStartText?: SafeHtml;\r\n    formattedEndText?: SafeHtml;\r\n    formattedConfirmationEndText?: SafeHtml;\r\n    isExamOver = true;\r\n    resetType = ActionType.Reset;\r\n    buttonSize = ButtonSize.MEDIUM;\r\n    private dialogErrorSource = new Subject<string>();\r\n    dialogError$ = this.dialogErrorSource.asObservable();\r\n\r\n    // Icons\r\n    faTrash = faTrash;\r\n    faUndo = faUndo;\r\n    faEye = faEye;\r\n    faWrench = faWrench;\r\n    faUser = faUser;\r\n    faListAlt = faListAlt;\r\n    faClipboard = faClipboard;\r\n    faThList = faThList;\r\n    faHeartBroken = faHeartBroken;\r\n    faAward = faAward;\r\n    faFlaskVial = faFlaskVial;\r\n\r\n    isAdmin = false;\r\n    canHaveBonus = false;\r\n\r\n    examDetailSections: DetailOverviewSection[];\r\n\r\n    /**\r\n     * Initialize the exam\r\n     */\r\n    ngOnInit(): void {\r\n        this.route.data.subscribe(({ exam }) => {\r\n            scrollToTopOfPage();\r\n            this.exam = exam;\r\n            this.formattedStartText = this.artemisMarkdown.safeHtmlForMarkdown(this.exam.startText);\r\n            this.formattedConfirmationStartText = this.artemisMarkdown.safeHtmlForMarkdown(this.exam.confirmationStartText);\r\n            this.formattedEndText = this.artemisMarkdown.safeHtmlForMarkdown(this.exam.endText);\r\n            this.formattedConfirmationEndText = this.artemisMarkdown.safeHtmlForMarkdown(this.exam.confirmationEndText);\r\n            this.isExamOver = !!this.exam.endDate?.isBefore(dayjs());\r\n            this.isAdmin = this.accountService.isAdmin();\r\n            this.getExamDetailSections();\r\n\r\n            this.gradingSystemService.findGradingScaleForExam(this.exam.course!.id!, this.exam.id!).subscribe((gradingSystemResponse) => {\r\n                if (gradingSystemResponse.body) {\r\n                    this.canHaveBonus = gradingSystemResponse.body.gradeType === GradeType.GRADE;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * unsubscribe on component destruction\r\n     */\r\n    ngOnDestroy() {\r\n        this.dialogErrorSource.unsubscribe();\r\n    }\r\n\r\n    getExamDetailSections() {\r\n        const exam = this.exam;\r\n        this.examDetailSections = [\r\n            {\r\n                headline: 'artemisApp.exam.detail.sections.general',\r\n                details: [\r\n                    { type: DetailType.Link, title: 'artemisApp.exam.course', data: { text: exam.course?.title, routerLink: ['/course-management', exam.course?.id] } },\r\n                    { type: DetailType.Text, title: 'artemisApp.exam.title', data: { text: exam.title } },\r\n                    { type: DetailType.Text, title: 'artemisApp.examManagement.examiner', data: { text: exam.examiner } },\r\n                    { type: DetailType.Text, title: 'artemisApp.examManagement.moduleNumber', data: { text: exam.moduleNumber } },\r\n                    { type: DetailType.Date, title: 'artemisApp.examManagement.visibleDate', data: { date: exam.visibleDate } },\r\n                    { type: DetailType.Date, title: 'artemisApp.exam.startDate', data: { date: exam.startDate } },\r\n                    { type: DetailType.Date, title: 'artemisApp.exam.endDate', data: { date: exam.endDate } },\r\n                    { type: DetailType.Date, title: 'artemisApp.exam.publishResultsDate', data: { date: exam.publishResultsDate } },\r\n                    { type: DetailType.Date, title: 'artemisApp.exam.examStudentReviewStart', data: { date: exam.examStudentReviewStart } },\r\n                    { type: DetailType.Date, title: 'artemisApp.exam.examStudentReviewEnd', data: { date: exam.examStudentReviewEnd } },\r\n                    { type: DetailType.Date, title: 'artemisApp.exam.exampleSolutionPublicationDate', data: { date: exam.exampleSolutionPublicationDate } },\r\n                    { type: DetailType.Text, title: 'artemisApp.exam.workingTime', data: { text: this.artemisDurationFromSecondsPipe.transform(exam.workingTime!, true) } },\r\n                    { type: DetailType.Text, title: 'artemisApp.examManagement.gracePeriod', data: { text: exam.gracePeriod } },\r\n                    { type: DetailType.Text, title: 'artemisApp.examManagement.maxPoints.title', data: { text: exam.examMaxPoints } },\r\n                    { type: DetailType.Text, title: 'artemisApp.examManagement.numberOfExercisesInExam', data: { text: exam.numberOfExercisesInExam } },\r\n                    { type: DetailType.Text, title: 'artemisApp.examManagement.numberOfCorrectionRoundsInExam', data: { text: exam.numberOfCorrectionRoundsInExam } },\r\n                    { type: DetailType.Boolean, title: 'artemisApp.examManagement.randomizeQuestionOrder', data: { boolean: exam.randomizeExerciseOrder } },\r\n                    { type: DetailType.Text, title: 'artemisApp.examManagement.examStudents.registeredStudents', data: { text: exam.numberOfExamUsers ?? 0 } },\r\n                    { type: DetailType.Markdown, title: 'artemisApp.examManagement.startText', data: { innerHtml: this.formattedStartText } },\r\n                    { type: DetailType.Markdown, title: 'artemisApp.examManagement.confirmationStartText', data: { innerHtml: this.formattedConfirmationStartText } },\r\n                    { type: DetailType.Markdown, title: 'artemisApp.examManagement.endText', data: { innerHtml: this.formattedEndText } },\r\n                    { type: DetailType.Markdown, title: 'artemisApp.examManagement.confirmationEndText', data: { innerHtml: this.formattedConfirmationEndText } },\r\n                ],\r\n            },\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Returns the route for exam components by identifier\r\n     */\r\n    getExamRoutesByIdentifier(identifier: string) {\r\n        return ['/course-management', this.exam.course?.id, 'exams', this.exam.id, identifier];\r\n    }\r\n\r\n    /**\r\n     * Reset an exam with examId by deleting all studentExams and participations\r\n     */\r\n    resetExam(): void {\r\n        this.examManagementService.reset(this.exam.course!.id!, this.exam.id!).subscribe({\r\n            next: (res: HttpResponse<Exam>) => {\r\n                this.dialogErrorSource.next('');\r\n                this.exam = res.body!;\r\n                this.alertService.success('artemisApp.examManagement.reset.success');\r\n            },\r\n            error: (error: HttpErrorResponse) => this.dialogErrorSource.next(error.message),\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Function is called when the delete button is pressed for an exam\r\n     * @param examId Id to be deleted\r\n     */\r\n    deleteExam(examId: number): void {\r\n        this.examManagementService.delete(this.exam.course!.id!, examId).subscribe({\r\n            next: () => {\r\n                this.dialogErrorSource.next('');\r\n                this.router.navigate(['/course-management', this.exam.course!.id!, 'exams']);\r\n            },\r\n            error: (error: HttpErrorResponse) => this.dialogErrorSource.next(error.message),\r\n        });\r\n    }\r\n\r\n    private getExistingSummaryEntries(): EntitySummary {\r\n        const numberOfProgrammingExerciseParticipations =\r\n            this.exam.exerciseGroups\r\n                ?.flatMap((exerciseGroup) => exerciseGroup.exercises)\r\n                .filter((exercise) => exercise?.type === ExerciseType.PROGRAMMING)\r\n                .map((exercise) => exercise?.numberOfParticipations ?? 0)\r\n                .reduce((repositorySum, numberOfParticipationsForRepository) => repositorySum + numberOfParticipationsForRepository, 0) ?? 0;\r\n\r\n        const numberOfExercisesPerType = new Map<ExerciseType, number>();\r\n        this.exam.exerciseGroups?.forEach((exerciseGroup) => {\r\n            exerciseGroup.exercises?.forEach((exercise) => {\r\n                if (exercise.type === undefined) {\r\n                    return;\r\n                }\r\n                const oldValue = numberOfExercisesPerType.get(exercise.type) ?? 0;\r\n                numberOfExercisesPerType.set(exercise.type, oldValue + 1);\r\n            });\r\n        });\r\n\r\n        const numberOfExerciseGroups = this.exam.exerciseGroups?.length ?? 0;\r\n        const isTestExam = this.exam.testExam ?? false;\r\n        const isTestCourse = this.exam.course?.testCourse ?? false;\r\n\r\n        return {\r\n            'artemisApp.examManagement.delete.summary.numberExerciseGroups': numberOfExerciseGroups,\r\n            'artemisApp.examManagement.delete.summary.numberProgrammingExercises': numberOfExercisesPerType.get(ExerciseType.PROGRAMMING),\r\n            'artemisApp.examManagement.delete.summary.numberModelingExercises': numberOfExercisesPerType.get(ExerciseType.MODELING),\r\n            'artemisApp.examManagement.delete.summary.numberTextExercises': numberOfExercisesPerType.get(ExerciseType.TEXT),\r\n            'artemisApp.examManagement.delete.summary.numberFileUploadExercises': numberOfExercisesPerType.get(ExerciseType.FILE_UPLOAD),\r\n            'artemisApp.examManagement.delete.summary.numberQuizExercises': numberOfExercisesPerType.get(ExerciseType.QUIZ),\r\n            'artemisApp.examManagement.delete.summary.numberRepositories': numberOfProgrammingExerciseParticipations,\r\n            'artemisApp.examManagement.delete.summary.isTestExam': isTestExam,\r\n            'artemisApp.examManagement.delete.summary.isTestCourse': isTestCourse,\r\n        };\r\n    }\r\n\r\n    fetchExamDeletionSummary(): Observable<EntitySummary> {\r\n        return this.examManagementService.getDeletionSummary(this.exam.course!.id!, this.exam.id!).pipe(\r\n            map((response) => {\r\n                const summary = response.body;\r\n\r\n                if (summary === null) {\r\n                    return {};\r\n                }\r\n\r\n                return {\r\n                    ...this.getExistingSummaryEntries(),\r\n                    'artemisApp.examManagement.delete.summary.numberBuilds': summary.numberOfBuilds,\r\n                    'artemisApp.examManagement.delete.summary.numberRegisteredStudents': summary.numberRegisteredStudents,\r\n                    'artemisApp.examManagement.delete.summary.numberNotStartedExams': summary.numberNotStartedExams,\r\n                    'artemisApp.examManagement.delete.summary.numberStartedExams': summary.numberStartedExams,\r\n                    'artemisApp.examManagement.delete.summary.numberSubmittedExams': summary.numberSubmittedExams,\r\n                    'artemisApp.examManagement.delete.summary.numberCommunicationPosts': summary.numberOfCommunicationPosts,\r\n                    'artemisApp.examManagement.delete.summary.numberAnswerPosts': summary.numberOfAnswerPosts,\r\n                };\r\n            }),\r\n        );\r\n    }\r\n}\r\n", "<div class=\"row justify-content-center\">\r\n    <div class=\"col-11\">\r\n        @if (exam) {\r\n            <div>\r\n                <h2 id=\"exam-detail-title\">\r\n                    @if (!exam.testExam) {\r\n                        <span class=\"badge bg-success\" jhiTranslate=\"artemisApp.examManagement.testExam.realExam\"></span>\r\n                    }\r\n                    @if (exam.testExam) {\r\n                        <span class=\"badge bg-primary\" jhiTranslate=\"artemisApp.examManagement.testExam.testExam\"></span>\r\n                    }\r\n                    {{ exam.title }}\r\n                </h2>\r\n                <hr />\r\n                @if (exam.course?.isAtLeastInstructor) {\r\n                    <div>\r\n                        <a id=\"exercises-button-groups\" type=\"submit\" [routerLink]=\"getExamRoutesByIdentifier('exercise-groups')\" class=\"btn btn-primary mt-1\">\r\n                            <fa-icon [icon]=\"faListAlt\" />\r\n                            <span jhiTranslate=\"artemisApp.examManagement.exerciseGroups\"></span>\r\n                        </a>\r\n                        <!-- Remove ngIf when Quiz Exam feature is fully implemented -->\r\n                        @if (false) {\r\n                            <a id=\"quiz-pool\" type=\"submit\" [routerLink]=\"getExamRoutesByIdentifier('quiz-pool')\" class=\"btn btn-primary mt-1\">\r\n                                <fa-icon [icon]=\"faListAlt\" />\r\n                                <span jhiTranslate=\"artemisApp.examManagement.quizPool\"></span>\r\n                            </a>\r\n                        }\r\n                        @if (!exam.testExam) {\r\n                            <a id=\"students-button\" [routerLink]=\"getExamRoutesByIdentifier('students')\" class=\"btn btn-info mt-1\">\r\n                                <fa-icon [icon]=\"faUser\" />\r\n                                <span jhiTranslate=\"artemisApp.examManagement.students\"></span>\r\n                            </a>\r\n                        }\r\n                        <a id=\"studentExamsButton\" [routerLink]=\"getExamRoutesByIdentifier('student-exams')\" class=\"btn btn-info mt-1\">\r\n                            <fa-icon [icon]=\"faEye\" />\r\n                            <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.examManagement.studentExams\"></span>\r\n                        </a>\r\n                        <a id=\"testrun-button\" [routerLink]=\"getExamRoutesByIdentifier('test-runs')\" class=\"btn btn-info mt-1\">\r\n                            <fa-icon [icon]=\"faFlaskVial\" />\r\n                            <span jhiTranslate=\"artemisApp.examManagement.testRun.testRun\"></span>\r\n                        </a>\r\n                        @if (!exam.testExam) {\r\n                            <a id=\"assessment-dashboard-button\" [routerLink]=\"getExamRoutesByIdentifier('assessment-dashboard')\" class=\"btn btn-primary mt-1\">\r\n                                <fa-icon [icon]=\"faThList\" />\r\n                                <span jhiTranslate=\"artemisApp.examManagement.assessmentDashboard\"></span>\r\n                            </a>\r\n                        }\r\n                        @if (!exam.testExam) {\r\n                            <a [routerLink]=\"getExamRoutesByIdentifier('grading-system')\" class=\"btn btn-info mt-1\">\r\n                                <fa-icon [icon]=\"faClipboard\" />\r\n                                <span jhiTranslate=\"artemisApp.examManagement.gradingSystem\"></span>\r\n                            </a>\r\n                        }\r\n                        @if (canHaveBonus) {\r\n                            <a [routerLink]=\"getExamRoutesByIdentifier('bonus')\" class=\"btn btn-info mt-1\">\r\n                                <fa-icon [icon]=\"faAward\" />\r\n                                <span jhiTranslate=\"artemisApp.examManagement.bonus\"></span>\r\n                            </a>\r\n                        }\r\n                        <a id=\"scores-button\" [routerLink]=\"getExamRoutesByIdentifier('scores')\" class=\"btn btn-info mt-1\">\r\n                            <fa-icon [icon]=\"faEye\" />\r\n                            <span jhiTranslate=\"entity.action.scores\"></span>\r\n                        </a>\r\n                        <a [routerLink]=\"getExamRoutesByIdentifier('plagiarism-cases')\" class=\"tab-item btn btn-info btn-md mt-1\">\r\n                            <fa-icon [icon]=\"faHeartBroken\" />\r\n                            <span jhiTranslate=\"artemisApp.plagiarism.cases.plagiarismCases\"></span>\r\n                        </a>\r\n                        <a id=\"editButton\" [routerLink]=\"getExamRoutesByIdentifier('edit')\" class=\"btn btn-warning mt-1\">\r\n                            <fa-icon [icon]=\"faWrench\" />&nbsp;<span jhiTranslate=\"entity.action.edit\"></span>\r\n                        </a>\r\n                        <button\r\n                            jhiDeleteButton\r\n                            [actionType]=\"resetType\"\r\n                            [buttonSize]=\"buttonSize\"\r\n                            [entityTitle]=\"exam.title || ''\"\r\n                            deleteQuestion=\"artemisApp.examManagement.reset.question\"\r\n                            deleteConfirmationText=\"artemisApp.examManagement.reset.typeNameToConfirm\"\r\n                            (delete)=\"resetExam()\"\r\n                            [dialogError]=\"dialogError$\"\r\n                            class=\"btn mt-1\"\r\n                            style=\"margin-right: 0 !important\"\r\n                        >\r\n                            <fa-icon [icon]=\"faUndo\" />\r\n                        </button>\r\n                        <button\r\n                            id=\"exam-delete\"\r\n                            jhiDeleteButton\r\n                            [buttonSize]=\"buttonSize\"\r\n                            [entityTitle]=\"exam.title || ''\"\r\n                            entitySummaryTitle=\"artemisApp.examManagement.delete.summary.title\"\r\n                            [fetchEntitySummary]=\"fetchExamDeletionSummary()\"\r\n                            deleteQuestion=\"artemisApp.examManagement.delete.question\"\r\n                            deleteConfirmationText=\"artemisApp.examManagement.delete.typeNameToConfirm\"\r\n                            (delete)=\"deleteExam(exam.id!)\"\r\n                            [dialogError]=\"dialogError$\"\r\n                            class=\"btn mt-1\"\r\n                        >\r\n                            <fa-icon [icon]=\"faTrash\" />\r\n                        </button>\r\n                        @if (exam && isExamOver && exam.course) {\r\n                            <div class=\"d-inline\">\r\n                                <jhi-course-exam-archive-button [archiveMode]=\"'Exam'\" [exam]=\"exam\" [course]=\"exam.course\" />\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                }\r\n                <hr />\r\n                @if (exam?.course?.isAtLeastInstructor) {\r\n                    <div>\r\n                        <jhi-exam-checklist [getExamRoutesByIdentifier]=\"getExamRoutesByIdentifier\" [exam]=\"exam\" />\r\n                    </div>\r\n                }\r\n                @if (examDetailSections) {\r\n                    <jhi-detail-overview-list [sections]=\"examDetailSections\" />\r\n                }\r\n            </div>\r\n        }\r\n    </div>\r\n</div>\r\n"],
  "mappings": "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",
  "names": ["ExerciseGroupVariantColumn", "indexExerciseGroup", "exerciseGroupTitle", "exerciseGroupPointsEqual", "indexExercise", "exerciseTitle", "exerciseType", "exerciseMaxPoints", "exerciseNumberOfParticipations", "noExercises", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "\u0275\u0275pipeBind1", "ctx_r0", "getIconTooltip", "ExerciseType", "QUIZ", "getIcon", "\u0275\u0275textInterpolate", "quizExamMaxPoints", "totalParticipants", "column_r2", "indexExerciseGroup", "faExclamationTriangle", "\u0275\u0275template", "ExamChecklistExerciseGroupTableComponent_For_44_Conditional_9_Conditional_3_Template", "ExamChecklistExerciseGroupTableComponent_For_44_Conditional_9_Conditional_4_Template", "\u0275\u0275textInterpolate1", "exerciseGroupTitle", "\u0275\u0275conditional", "noExercises", "exerciseGroupPointsEqual", "indexExercise", "exerciseType", "exerciseTitle", "exerciseMaxPoints", "exerciseNumberOfParticipations", "ExamChecklistExerciseGroupTableComponent_For_44_Conditional_5_Template", "ExamChecklistExerciseGroupTableComponent_For_44_Conditional_9_Template", "ExamChecklistExerciseGroupTableComponent_For_44_Conditional_13_Template", "ExamChecklistExerciseGroupTableComponent_For_44_Conditional_14_Template", "ExamChecklistExerciseGroupTableComponent_For_44_Conditional_18_Template", "ExamChecklistExerciseGroupTableComponent_For_44_Conditional_19_Template", "ExamChecklistExerciseGroupTableComponent_For_44_Conditional_23_Template", "ExamChecklistExerciseGroupTableComponent_For_44_Conditional_24_Template", "ExamChecklistExerciseGroupTableComponent_For_44_Conditional_28_Template", "ExamChecklistExerciseGroupTableComponent_For_44_Conditional_29_Template", "ExamChecklistExerciseGroupTableComponent", "exerciseGroups", "exerciseGroupVariantColumns", "ngOnChanges", "exerciseGroupIndex", "forEach", "exerciseGroup", "exerciseGroupVariantColumn", "ExerciseGroupVariantColumn", "title", "exercises", "length", "push", "maxPoints", "some", "exercise", "exerciseVariantIndex", "index", "exerciseVariantColumn", "type", "numberOfParticipations", "selectors", "inputs", "features", "\u0275\u0275NgOnChangesFeature", "decls", "vars", "consts", "template", "rf", "ctx", "ExamChecklistExerciseGroupTableComponent_Conditional_42_Template", "\u0275\u0275repeaterCreate", "ExamChecklistExerciseGroupTableComponent_For_44_Template", "\u0275\u0275repeaterTrackByIdentity", "\u0275\u0275repeater", "TranslateDirective", "NgbTooltip", "FaIconComponent", "NoDataComponent", "ArtemisTranslatePipe", "styles", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275property", "ctx_r1", "newWorkingTime", "oldWorkingTime", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "faSpinner", "faCheck", "ExamEditWorkingTimeDialogComponent", "activeModal", "inject", "NgbActiveModal", "examManagementService", "ExamManagementService", "exam", "examChange", "EventEmitter", "isLoading", "faBan", "workingTimeSeconds", "examWorkingTime", "undefined", "clear", "close", "confirmUpdateWorkingTime", "isWorkingTimeChangeValid", "updateWorkingTime", "course", "id", "subscribe", "next", "res", "body", "emit", "error", "Math", "abs", "selectors", "inputs", "outputs", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275listener", "i0", "\u0275\u0275restoreView", "_r1", "\u0275\u0275resetView", "\u0275\u0275twoWayListener", "$event", "\u0275\u0275twoWayBindingSet", "\u0275\u0275template", "ExamEditWorkingTimeDialogComponent_Conditional_22_Template", "ExamEditWorkingTimeDialogComponent_Conditional_45_Template", "ExamEditWorkingTimeDialogComponent_Conditional_46_Template", "\u0275\u0275twoWayProperty", "\u0275\u0275conditional", "\u0275\u0275pureFunction1", "_c0", "title", "\u0275\u0275styleProp", "editForm_r3", "invalid", "FormsModule", "\u0275NgNoValidate", "NgControlStatus", "NgControlStatusGroup", "NgModel", "NgForm", "TranslateDirective", "WorkingTimeControlComponent", "WorkingTimeChangeComponent", "ConfirmEntityNameComponent", "FaIconComponent", "encapsulation", "ExamEditWorkingTimeComponent", "modalService", "inject", "NgbModal", "alertService", "AlertService", "exam", "examChange", "EventEmitter", "faHourglassHalf", "workingTimeChangeAllowed", "modalRef", "timeoutRef", "subscription", "ngOnInit", "checkWorkingTimeChangeAllowed", "ngOnDestroy", "clearTimeout", "unsubscribe", "endDate", "subtract", "dayjs", "isBefore", "nextCheckTimeout", "diff", "setTimeout", "bind", "openDialog", "event", "preventDefault", "closeAll", "open", "ExamEditWorkingTimeDialogComponent", "size", "backdrop", "animation", "componentInstance", "subscribe", "emit", "from", "result", "undefined", "selectors", "inputs", "outputs", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275listener", "$event", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275property", "\u0275\u0275advance", "FaIconComponent", "TranslateDirective", "encapsulation", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "clear", "\u0275\u0275elementEnd", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275property", "announcement", "$event", "_r3", "textContentChanged", "\u0275\u0275template", "ExamLiveAnnouncementCreateModalComponent_Conditional_8_Conditional_10_Template", "textContent", "undefined", "actions", "\u0275\u0275conditional", "faSpinner", "ExamLiveAnnouncementCreateModalComponent_Conditional_10_Conditional_10_Template", "faCheckCircle", "_r4", "submitAnnouncement", "status", "ExamLiveAnnouncementCreateModalComponent", "activeModal", "inject", "NgbActiveModal", "examManagementService", "ExamManagementService", "BoldAction", "ItalicAction", "UnderlineAction", "CodeAction", "CodeBlockAction", "OrderedListAction", "courseId", "examId", "html", "createAnnouncement", "subscribe", "next", "event", "error", "id", "createdDate", "dayjs", "eventType", "ExamLiveEventType", "EXAM_WIDE_ANNOUNCEMENT", "text", "dismiss", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "ExamLiveAnnouncementCreateModalComponent_Conditional_6_Template", "ExamLiveAnnouncementCreateModalComponent_Conditional_8_Template", "ExamLiveAnnouncementCreateModalComponent_Conditional_9_Template", "ExamLiveAnnouncementCreateModalComponent_Conditional_10_Template", "ExamLiveAnnouncementCreateModalComponent_Conditional_15_Template", "\u0275\u0275classProp", "FormsModule", "\u0275NgNoValidate", "NgControlStatusGroup", "NgForm", "TranslateDirective", "MarkdownEditorMonacoComponent", "ExamLiveEventComponent", "FaIconComponent", "styles", "ExamLiveAnnouncementCreateButtonComponent", "modalService", "inject", "NgbModal", "alertService", "AlertService", "exam", "faBullhorn", "announcementCreationAllowed", "modalRef", "timeoutRef", "subscription", "ngOnInit", "checkAnnouncementCreationAllowed", "ngOnDestroy", "clearTimeout", "unsubscribe", "now", "dayjs", "visibleDate", "isBefore", "nextCheckTimeout", "diff", "setTimeout", "bind", "openDialog", "event", "preventDefault", "closeAll", "open", "ExamLiveAnnouncementCreateModalComponent", "size", "backdrop", "animation", "componentInstance", "examId", "id", "courseId", "course", "from", "result", "subscribe", "undefined", "selectors", "inputs", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275listener", "$event", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275property", "\u0275\u0275advance", "FaIconComponent", "TranslateDirective", "encapsulation", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275textInterpolate1", "\u0275\u0275pipeBind1", "ctx_r1", "examChecklist", "numberOfTestRuns", "\u0275\u0275property", "allExamExercisesAllStudentsPrepared", "allExamsGenerated", "\u0275\u0275template", "ExamChecklistComponent_Conditional_0_Conditional_166_Conditional_109_Template", "exam", "numberOfExamUsers", "getExamRoutesByIdentifier", "faUser", "faEye", "\u0275\u0275conditional", "\u0275\u0275textInterpolate2", "numberOfGeneratedStudentExams", "numberOfStarted", "numberOfSubmitted", "ExamChecklistComponent_Conditional_0_Conditional_321_Conditional_83_For_4_Conditional_3_Template", "\u0275$index_893_r4", "numberOfTotalParticipationsForAssessment", "finishedByCorrectionRound_r3", "\u0275\u0275repeaterCreate", "ExamChecklistComponent_Conditional_0_Conditional_321_Conditional_83_For_4_Template", "\u0275\u0275repeaterTrackByIdentity", "\u0275\u0275repeater", "numberOfTotalExamAssessmentsFinishedByCorrectionRound", "isExamOver", "existsUnassessedQuizzes", "existsUnsubmittedExercises", "ExamChecklistComponent_Conditional_0_Conditional_321_Conditional_128_Conditional_62_Template", "ExamChecklistComponent_Conditional_0_Conditional_321_Conditional_128_Conditional_63_Template", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r5", "\u0275\u0275nextContext", "\u0275\u0275resetView", "evaluateQuizExercises", "ExamChecklistComponent_Conditional_0_Conditional_321_Conditional_128_Conditional_69_Template", "ExamChecklistComponent_Conditional_0_Conditional_321_Conditional_128_Conditional_84_Template", "ExamChecklistComponent_Conditional_0_Conditional_321_Conditional_128_Conditional_85_Template", "assessUnsubmittedExamModelingAndTextParticipations", "ExamChecklistComponent_Conditional_0_Conditional_321_Conditional_128_Conditional_91_Template", "existsUnfinishedAssessments", "isLoading", "faThList", "isEvaluatingQuizExercises", "isAssessingUnsubmittedExams", "numberOfAllComplaints", "numberOfAllComplaintsDone", "ExamChecklistComponent_Conditional_0_Conditional_321_Conditional_83_Template", "ExamChecklistComponent_Conditional_0_Conditional_321_Conditional_84_Template", "ExamChecklistComponent_Conditional_0_Conditional_321_Conditional_128_Template", "ExamChecklistComponent_Conditional_0_Conditional_321_Conditional_211_Template", "ExamChecklistComponent_Conditional_0_Conditional_321_Conditional_212_Template", "\u0275\u0275pureFunction0", "_c2", "faChartBar", "publishResultsDate", "faWrench", "examStudentReviewStart", "examStudentReviewEnd", "ExamChecklistComponent_Conditional_0_Conditional_8_Template", "ExamChecklistComponent_Conditional_0_Conditional_9_Template", "ExamChecklistComponent_Conditional_0_Conditional_152_Template", "ExamChecklistComponent_Conditional_0_Conditional_166_Template", "ExamChecklistComponent_Conditional_0_Conditional_181_Template", "ExamChecklistComponent_Conditional_0_Conditional_255_Template", "ExamChecklistComponent_Conditional_0_Conditional_256_Template", "ExamChecklistComponent_Conditional_0_Conditional_257_Template", "ExamChecklistComponent_Conditional_0_Conditional_258_Template", "\u0275\u0275twoWayListener", "$event", "_r1", "i0", "\u0275\u0275twoWayBindingSet", "ExamChecklistComponent_Conditional_0_Conditional_321_Template", "\u0275\u0275propertyInterpolate1", "isTestExam", "exerciseGroups", "length", "countMandatoryExercises", "tmp_6_0", "numberOfExercisesInExam", "undefined", "\u0275\u0275propertyInterpolate", "hasOptionalExercises", "allGroupsContainExercise", "pointsExercisesEqual", "totalPoints", "tmp_11_0", "quizExamMaxPoints", "_c0", "faListAlt", "\u0275\u0275textInterpolate", "\u0275\u0275pureFunction2", "_c1", "startDate", "endDate", "\u0275\u0275twoWayProperty", "ExamChecklistComponent", "examChecklistService", "inject", "ExamChecklistService", "websocketService", "WebsocketService", "examManagementService", "ExamManagementService", "alertService", "AlertService", "studentExamService", "StudentExamService", "longestWorkingTimeSub", "longestWorkingTime", "examPreparationFinished", "dialogErrorSource", "Subject", "dialogError$", "asObservable", "ngOnInit", "submittedTopic", "getSubmittedTopic", "subscribe", "receive", "startedTopic", "getStartedTopic", "course", "id", "getLongestWorkingTimeForExam", "res", "calculateIsExamOver", "ngOnChanges", "testExam", "checkPointsExercisesEqual", "checkTotalPointsMandatory", "checkEachGroupContainsExercise", "filter", "group", "isMandatory", "getExamStatistics", "examStats", "checkAllExamsGenerated", "numberOfExamsStarted", "numberOfExamsSubmitted", "lastAssessmentFinished", "last", "ngOnDestroy", "unsubscribe", "next", "success", "number", "body", "error", "message", "captureException", "Error", "dayjs", "add", "gracePeriod", "isBefore", "selectors", "inputs", "features", "\u0275\u0275NgOnChangesFeature", "decls", "vars", "consts", "template", "rf", "ctx", "ExamChecklistComponent_Conditional_0_Template", "isAtLeastInstructor", "TranslateDirective", "ChecklistCheckComponent", "ExamChecklistExerciseGroupTableComponent", "RouterLink", "FaIconComponent", "ProgressBarComponent", "ExamEditWorkingTimeComponent", "ExamLiveAnnouncementCreateButtonComponent", "ArtemisDatePipe", "ArtemisTranslatePipe", "encapsulation", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "ctx_r1", "getExamRoutesByIdentifier", "faListAlt", "faUser", "faThList", "faClipboard", "faAward", "exam", "course", "\u0275\u0275template", "ExamDetailComponent_Conditional_4_Conditional_11_Conditional_11_Template", "ExamDetailComponent_Conditional_4_Conditional_11_Conditional_12_Template", "ExamDetailComponent_Conditional_4_Conditional_11_Conditional_27_Template", "ExamDetailComponent_Conditional_4_Conditional_11_Conditional_28_Template", "ExamDetailComponent_Conditional_4_Conditional_11_Conditional_29_Template", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "resetExam", "deleteExam", "id", "ExamDetailComponent_Conditional_4_Conditional_11_Conditional_61_Template", "\u0275\u0275conditional", "testExam", "faEye", "faFlaskVial", "canHaveBonus", "faHeartBroken", "faWrench", "resetType", "buttonSize", "title", "dialogError$", "faUndo", "fetchExamDeletionSummary", "faTrash", "isExamOver", "examDetailSections", "ExamDetailComponent_Conditional_4_Conditional_5_Template", "ExamDetailComponent_Conditional_4_Conditional_6_Template", "ExamDetailComponent_Conditional_4_Conditional_11_Template", "ExamDetailComponent_Conditional_4_Conditional_14_Template", "ExamDetailComponent_Conditional_4_Conditional_15_Template", "\u0275\u0275textInterpolate1", "isAtLeastInstructor", "ExamDetailComponent", "route", "inject", "ActivatedRoute", "artemisMarkdown", "ArtemisMarkdownService", "accountService", "AccountService", "examManagementService", "ExamManagementService", "router", "Router", "alertService", "AlertService", "gradingSystemService", "GradingSystemService", "artemisDurationFromSecondsPipe", "ArtemisDurationFromSecondsPipe", "formattedStartText", "formattedConfirmationStartText", "formattedEndText", "formattedConfirmationEndText", "ActionType", "Reset", "ButtonSize", "MEDIUM", "dialogErrorSource", "Subject", "asObservable", "isAdmin", "ngOnInit", "data", "subscribe", "scrollToTopOfPage", "safeHtmlForMarkdown", "startText", "confirmationStartText", "endText", "confirmationEndText", "endDate", "isBefore", "dayjs", "getExamDetailSections", "findGradingScaleForExam", "gradingSystemResponse", "body", "gradeType", "GradeType", "GRADE", "ngOnDestroy", "unsubscribe", "headline", "details", "type", "DetailType", "Link", "text", "routerLink", "Text", "examiner", "moduleNumber", "Date", "date", "visibleDate", "startDate", "publishResultsDate", "examStudentReviewStart", "examStudentReviewEnd", "exampleSolutionPublicationDate", "transform", "workingTime", "gracePeriod", "examMaxPoints", "numberOfExercisesInExam", "numberOfCorrectionRoundsInExam", "Boolean", "boolean", "randomizeExerciseOrder", "numberOfExamUsers", "Markdown", "innerHtml", "identifier", "reset", "next", "res", "success", "error", "message", "examId", "delete", "navigate", "getExistingSummaryEntries", "numberOfProgrammingExerciseParticipations", "exerciseGroups", "flatMap", "exerciseGroup", "exercises", "filter", "exercise", "ExerciseType", "PROGRAMMING", "map", "numberOfParticipations", "reduce", "repositorySum", "numberOfParticipationsForRepository", "numberOfExercisesPerType", "Map", "forEach", "undefined", "oldValue", "get", "set", "numberOfExerciseGroups", "length", "isTestExam", "isTestCourse", "testCourse", "MODELING", "TEXT", "FILE_UPLOAD", "QUIZ", "getDeletionSummary", "pipe", "response", "summary", "__spreadProps", "__spreadValues", "numberOfBuilds", "numberRegisteredStudents", "numberNotStartedExams", "numberStartedExams", "numberSubmittedExams", "numberOfCommunicationPosts", "numberOfAnswerPosts", "selectors", "features", "\u0275\u0275ProvidersFeature", "decls", "vars", "consts", "template", "rf", "ctx", "ExamDetailComponent_Conditional_4_Template", "TranslateDirective", "RouterLink", "FaIconComponent", "DeleteButtonDirective", "CourseExamArchiveButtonComponent", "ExamChecklistComponent", "DetailOverviewListComponent", "encapsulation"]
}
