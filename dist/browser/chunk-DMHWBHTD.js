import{a as U}from"./chunk-57BCHYEO.js";import{b as S}from"./chunk-IJRVZ46L.js";import{a as F}from"./chunk-SUUJN3EQ.js";import{b as y,d as g}from"./chunk-MBS3WUDO.js";import{a as u}from"./chunk-5JBXU6VG.js";import{c as a}from"./chunk-CK7FH6VF.js";import{a as b}from"./chunk-G3JOQOSD.js";import{a as m}from"./chunk-5YQ3ACZE.js";import{O as $}from"./chunk-IOA4DPXY.js";import{Ea as f,ya as v,z as o}from"./chunk-5LC5EQRR.js";import{h as I,j as x}from"./chunk-3E746U5Y.js";var R=I(U());var _=(()=>{class l{http=f($);exerciseService=f(a);fileService=f(F);resourceUrl="api/quiz/quiz-exercises";create(e,r){let s=a.convertExerciseDatesFromClient(e);s.categories=a.stringifyExerciseCategories(s);let t=new FormData;return t.append("exercise",m(s)),r.forEach((i,n)=>{t.append("files",i,n)}),this.http.post(this.resourceUrl,t,{observe:"response"}).pipe(o(i=>this.exerciseService.processExerciseEntityResponse(i)))}import(e,r){let s=a.convertExerciseDatesFromClient(e);s=a.setBonusPointsConstrainedByIncludedInOverallScore(s),s.categories=a.stringifyExerciseCategories(s);let t=new FormData;return t.append("exercise",m(s)),r.forEach((i,n)=>{t.append("files",i,n)}),this.http.post(`${this.resourceUrl}/import/${e.id}`,t,{observe:"response"}).pipe(o(i=>this.exerciseService.processExerciseEntityResponse(i)))}update(e,r,s,t){let i=b(t),n=a.convertExerciseDatesFromClient(r);n.categories=a.stringifyExerciseCategories(n);let c=new FormData;return c.append("exercise",m(n)),s.forEach((h,p)=>{c.append("files",h,p)}),this.http.put(this.resourceUrl+"/"+e,c,{params:i,observe:"response"}).pipe(o(h=>this.exerciseService.processExerciseEntityResponse(h)))}find(e){return this.http.get(`${this.resourceUrl}/${e}`,{observe:"response"}).pipe(o(r=>this.exerciseService.processExerciseEntityResponse(r)))}recalculate(e){return this.http.get(`${this.resourceUrl}/${e}/recalculate-statistics`,{observe:"response"}).pipe(o(r=>this.exerciseService.processExerciseEntityResponse(r)))}findForCourse(e){return this.http.get(`api/quiz/courses/${e}/quiz-exercises`,{observe:"response"}).pipe(o(r=>this.exerciseService.processExerciseEntityArrayResponse(r)))}findForExam(e){return this.http.get(`api/exam/exams/${e}/quiz-exercises`,{observe:"response"}).pipe(o(r=>this.exerciseService.processExerciseEntityArrayResponse(r)))}findForStudent(e){return this.http.get(`${this.resourceUrl}/${e}/for-student`,{observe:"response"}).pipe(o(r=>this.exerciseService.processExerciseEntityResponse(r)))}openForPractice(e){return this.http.put(`${this.resourceUrl}/${e}/open-for-practice`,null,{observe:"response"}).pipe(o(r=>this.exerciseService.processExerciseEntityResponse(r)))}start(e){return this.http.put(`${this.resourceUrl}/${e}/start-now`,null,{observe:"response"}).pipe(o(r=>this.exerciseService.processExerciseEntityResponse(r)))}end(e){return this.http.put(`${this.resourceUrl}/${e}/end-now`,null,{observe:"response"}).pipe(o(r=>this.exerciseService.processExerciseEntityResponse(r)))}setVisible(e){return this.http.put(`${this.resourceUrl}/${e}/set-visible`,null,{observe:"response"}).pipe(o(r=>this.exerciseService.processExerciseEntityResponse(r)))}startBatch(e){return this.http.put(`${this.resourceUrl}/${e}/start-batch`,null,{observe:"response"})}addBatch(e){return this.http.put(`${this.resourceUrl}/${e}/add-batch`,null,{observe:"response"})}query(){return this.http.get(this.resourceUrl,{observe:"response"}).pipe(o(e=>this.exerciseService.processExerciseEntityArrayResponse(e)))}delete(e){return this.http.delete(`${this.resourceUrl}/${e}`,{observe:"response"})}join(e,r){return this.http.post(`${this.resourceUrl}/${e}/join`,{password:r},{observe:"response"})}exportQuiz(e,r,s){let t=[];e.forEach(i=>{(r===!0||i.exportQuiz)&&(i.quizQuestionStatistic=void 0,i.exercise=void 0,t.push(i))}),t.length!==0&&this.exportAssetsFromAllQuestions(t,s??"quiz")}exportAssetsFromAllQuestions(e,r){let s=new R.default,t=[],i=JSON.stringify(e),n=new Blob([i],{type:"application/json"});if(e.forEach((c,h)=>{if(c.type===S.DRAG_AND_DROP){if(c.backgroundFilePath){let p=c.backgroundFilePath,d=p.split(".").last();t.push(this.fetchFilePromise(`q${h}_background.${d}`,s,p))}c.dragItems&&c.dragItems?.forEach((p,d)=>{if(p.pictureFilePath){let E=p.pictureFilePath,P=E.split(".").last();t.push(this.fetchFilePromise(`q${h}_dragItem-${d}.${P}`,s,E))}})}this.findImagesInMarkdown(JSON.stringify(c)).forEach(p=>{t.push(this.fetchFilePromise(`q${h}_${p[1]}`,s,p[2]))})}),t.length===0){y(n,(r??"quiz")+".json");return}s.file((r??"quiz")+".json",n),g(s,t,r)}findImagesInMarkdown(e){let r=/!\[(.+?)\]\((.+?)\)/g;return[...e.matchAll(r)]}fetchFilePromise(e,r,s){return x(this,null,function*(){return this.fileService.getFile(s).then(t=>{r.file(e,t)}).catch(t=>{throw new Error(`File with name: ${e} at path: ${s} could not be fetched`+t)})})}getStatus(e){return e.quizStarted?e.quizEnded?e.isOpenForPractice?u.OPEN_FOR_PRACTICE:u.CLOSED:e.quizBatches&&e.quizBatches.some(r=>r.started)?u.ACTIVE:u.VISIBLE:u.INVISIBLE}static \u0275fac=function(r){return new(r||l)};static \u0275prov=v({token:l,factory:l.\u0275fac,providedIn:"root"})}return l})();export{_ as a};
//# sourceMappingURL=chunk-DMHWBHTD.js.map
