{"version":3,"sources":["node_modules/monaco-editor/esm/vs/basic-languages/graphql/graphql.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.2(404545bded1df6ffa41ea0af4e8ddb219018c6c1)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/graphql/graphql.ts\nvar conf = {\n  comments: {\n    lineComment: \"#\"\n  },\n  brackets: [[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]],\n  autoClosingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"\"\"',\n    close: '\"\"\"',\n    notIn: [\"string\", \"comment\"]\n  }, {\n    open: '\"',\n    close: '\"',\n    notIn: [\"string\", \"comment\"]\n  }],\n  surroundingPairs: [{\n    open: \"{\",\n    close: \"}\"\n  }, {\n    open: \"[\",\n    close: \"]\"\n  }, {\n    open: \"(\",\n    close: \")\"\n  }, {\n    open: '\"\"\"',\n    close: '\"\"\"'\n  }, {\n    open: '\"',\n    close: '\"'\n  }],\n  folding: {\n    offSide: true\n  }\n};\nvar language = {\n  // Set defaultToken to invalid to see what you do not tokenize yet\n  defaultToken: \"invalid\",\n  tokenPostfix: \".gql\",\n  keywords: [\"null\", \"true\", \"false\", \"query\", \"mutation\", \"subscription\", \"extend\", \"schema\", \"directive\", \"scalar\", \"type\", \"interface\", \"union\", \"enum\", \"input\", \"implements\", \"fragment\", \"on\"],\n  typeKeywords: [\"Int\", \"Float\", \"String\", \"Boolean\", \"ID\"],\n  directiveLocations: [\"SCHEMA\", \"SCALAR\", \"OBJECT\", \"FIELD_DEFINITION\", \"ARGUMENT_DEFINITION\", \"INTERFACE\", \"UNION\", \"ENUM\", \"ENUM_VALUE\", \"INPUT_OBJECT\", \"INPUT_FIELD_DEFINITION\", \"QUERY\", \"MUTATION\", \"SUBSCRIPTION\", \"FIELD\", \"FRAGMENT_DEFINITION\", \"FRAGMENT_SPREAD\", \"INLINE_FRAGMENT\", \"VARIABLE_DEFINITION\"],\n  operators: [\"=\", \"!\", \"?\", \":\", \"&\", \"|\"],\n  // we include these common regular expressions\n  symbols: /[=!?:&|]+/,\n  // https://facebook.github.io/graphql/draft/#sec-String-Value\n  escapes: /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9A-Fa-f]{4})/,\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [\n    // fields and argument names\n    [/[a-z_][\\w$]*/, {\n      cases: {\n        \"@keywords\": \"keyword\",\n        \"@default\": \"key.identifier\"\n      }\n    }],\n    // identify typed input variables\n    [/[$][\\w$]*/, {\n      cases: {\n        \"@keywords\": \"keyword\",\n        \"@default\": \"argument.identifier\"\n      }\n    }],\n    // to show class names nicely\n    [/[A-Z][\\w\\$]*/, {\n      cases: {\n        \"@typeKeywords\": \"keyword\",\n        \"@default\": \"type.identifier\"\n      }\n    }],\n    // whitespace\n    {\n      include: \"@whitespace\"\n    },\n    // delimiters and operators\n    [/[{}()\\[\\]]/, \"@brackets\"], [/@symbols/, {\n      cases: {\n        \"@operators\": \"operator\",\n        \"@default\": \"\"\n      }\n    }],\n    // @ annotations.\n    // As an example, we emit a debugging log message on these tokens.\n    // Note: message are supressed during the first load -- change some lines to see them.\n    [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, {\n      token: \"annotation\",\n      log: \"annotation token: $0\"\n    }],\n    // numbers\n    [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"], [/0[xX][0-9a-fA-F]+/, \"number.hex\"], [/\\d+/, \"number\"],\n    // delimiter: after number because of .\\d floats\n    [/[;,.]/, \"delimiter\"], [/\"\"\"/, {\n      token: \"string\",\n      next: \"@mlstring\",\n      nextEmbedded: \"markdown\"\n    }],\n    // strings\n    [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"],\n    // non-teminated string\n    [/\"/, {\n      token: \"string.quote\",\n      bracket: \"@open\",\n      next: \"@string\"\n    }]],\n    mlstring: [[/[^\"]+/, \"string\"], ['\"\"\"', {\n      token: \"string\",\n      next: \"@pop\",\n      nextEmbedded: \"@pop\"\n    }]],\n    string: [[/[^\\\\\"]+/, \"string\"], [/@escapes/, \"string.escape\"], [/\\\\./, \"string.escape.invalid\"], [/\"/, {\n      token: \"string.quote\",\n      bracket: \"@close\",\n      next: \"@pop\"\n    }]],\n    whitespace: [[/[ \\t\\r\\n]+/, \"\"], [/#.*$/, \"comment\"]]\n  }\n};\nexport { conf, language };"],"mappings":"4BAQA,IAAIA,EAAO,CACT,SAAU,CACR,YAAa,GACf,EACA,SAAU,CAAC,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,CAAC,EAC7C,iBAAkB,CAAC,CACjB,KAAM,IACN,MAAO,GACT,EAAG,CACD,KAAM,IACN,MAAO,GACT,EAAG,CACD,KAAM,IACN,MAAO,GACT,EAAG,CACD,KAAM,MACN,MAAO,MACP,MAAO,CAAC,SAAU,SAAS,CAC7B,EAAG,CACD,KAAM,IACN,MAAO,IACP,MAAO,CAAC,SAAU,SAAS,CAC7B,CAAC,EACD,iBAAkB,CAAC,CACjB,KAAM,IACN,MAAO,GACT,EAAG,CACD,KAAM,IACN,MAAO,GACT,EAAG,CACD,KAAM,IACN,MAAO,GACT,EAAG,CACD,KAAM,MACN,MAAO,KACT,EAAG,CACD,KAAM,IACN,MAAO,GACT,CAAC,EACD,QAAS,CACP,QAAS,EACX,CACF,EACIC,EAAW,CAEb,aAAc,UACd,aAAc,OACd,SAAU,CAAC,OAAQ,OAAQ,QAAS,QAAS,WAAY,eAAgB,SAAU,SAAU,YAAa,SAAU,OAAQ,YAAa,QAAS,OAAQ,QAAS,aAAc,WAAY,IAAI,EACjM,aAAc,CAAC,MAAO,QAAS,SAAU,UAAW,IAAI,EACxD,mBAAoB,CAAC,SAAU,SAAU,SAAU,mBAAoB,sBAAuB,YAAa,QAAS,OAAQ,aAAc,eAAgB,yBAA0B,QAAS,WAAY,eAAgB,QAAS,sBAAuB,kBAAmB,kBAAmB,qBAAqB,EACpT,UAAW,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,GAAG,EAExC,QAAS,YAET,QAAS,qCAET,UAAW,CACT,KAAM,CAEN,CAAC,eAAgB,CACf,MAAO,CACL,YAAa,UACb,WAAY,gBACd,CACF,CAAC,EAED,CAAC,YAAa,CACZ,MAAO,CACL,YAAa,UACb,WAAY,qBACd,CACF,CAAC,EAED,CAAC,eAAgB,CACf,MAAO,CACL,gBAAiB,UACjB,WAAY,iBACd,CACF,CAAC,EAED,CACE,QAAS,aACX,EAEA,CAAC,aAAc,WAAW,EAAG,CAAC,WAAY,CACxC,MAAO,CACL,aAAc,WACd,WAAY,EACd,CACF,CAAC,EAID,CAAC,yBAA0B,CACzB,MAAO,aACP,IAAK,sBACP,CAAC,EAED,CAAC,2BAA4B,cAAc,EAAG,CAAC,oBAAqB,YAAY,EAAG,CAAC,MAAO,QAAQ,EAEnG,CAAC,QAAS,WAAW,EAAG,CAAC,MAAO,CAC9B,MAAO,SACP,KAAM,YACN,aAAc,UAChB,CAAC,EAED,CAAC,kBAAmB,gBAAgB,EAEpC,CAAC,IAAK,CACJ,MAAO,eACP,QAAS,QACT,KAAM,SACR,CAAC,CAAC,EACF,SAAU,CAAC,CAAC,QAAS,QAAQ,EAAG,CAAC,MAAO,CACtC,MAAO,SACP,KAAM,OACN,aAAc,MAChB,CAAC,CAAC,EACF,OAAQ,CAAC,CAAC,UAAW,QAAQ,EAAG,CAAC,WAAY,eAAe,EAAG,CAAC,MAAO,uBAAuB,EAAG,CAAC,IAAK,CACrG,MAAO,eACP,QAAS,SACT,KAAM,MACR,CAAC,CAAC,EACF,WAAY,CAAC,CAAC,aAAc,EAAE,EAAG,CAAC,OAAQ,SAAS,CAAC,CACtD,CACF","names":["conf","language"],"x_google_ignoreList":[0]}