{
  "version": 3,
  "sources": ["src/main/webapp/app/exercises/file-upload/participate/file-upload-submission.component.ts", "src/main/webapp/app/exercises/file-upload/participate/file-upload-submission.component.html"],
  "sourcesContent": ["import { Component, ElementRef, Input, OnInit, ViewChild, inject } from '@angular/core';\r\nimport { UpperCasePipe } from '@angular/common';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { HeaderParticipationPageComponent } from 'app/exercises/shared/exercise-headers/header-participation-page.component';\r\nimport { RatingComponent } from 'app/exercises/shared/rating/rating.component';\r\nimport dayjs from 'dayjs/esm';\r\nimport { StudentParticipation } from 'app/entities/participation/student-participation.model';\r\nimport { FileUploadSubmissionService } from 'app/exercises/file-upload/participate/file-upload-submission.service';\r\nimport { MAX_SUBMISSION_FILE_SIZE } from 'app/shared/constants/input.constants';\r\nimport { FileUploadAssessmentService } from 'app/exercises/file-upload/assess/file-upload-assessment.service';\r\nimport { omit } from 'lodash-es';\r\nimport { ParticipationWebsocketService } from 'app/overview/participation-websocket.service';\r\nimport { FileUploadExercise } from 'app/entities/file-upload-exercise.model';\r\nimport { ComponentCanDeactivate } from 'app/shared/guard/can-deactivate.model';\r\nimport { FileService } from 'app/shared/http/file.service';\r\nimport { FileUploadSubmission } from 'app/entities/file-upload-submission.model';\r\nimport { getExerciseDueDate, hasExerciseDueDatePassed } from 'app/exercises/shared/exercise/exercise.utils';\r\nimport { ButtonType } from 'app/shared/components/button.component';\r\nimport { Result } from 'app/entities/result.model';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\nimport { getFirstResultWithComplaint, getLatestSubmissionResult } from 'app/entities/submission.model';\r\nimport { addParticipationToResult, getManualUnreferencedFeedback } from 'app/exercises/shared/result/result.utils';\r\nimport { Feedback, checkSubsequentFeedbackInAssessment } from 'app/entities/feedback.model';\r\nimport { onError } from 'app/shared/util/global.utils';\r\nimport { getCourseFromExercise } from 'app/entities/exercise.model';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { faListAlt } from '@fortawesome/free-regular-svg-icons';\r\nimport { faDownload } from '@fortawesome/free-solid-svg-icons';\r\nimport { ButtonComponent } from 'app/shared/components/button.component';\r\nimport { ResizeableContainerComponent } from 'app/shared/resizeable-container/resizeable-container.component';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { ExerciseActionButtonComponent } from 'app/shared/components/exercise-action-button.component';\r\nimport { AdditionalFeedbackComponent } from 'app/shared/additional-feedback/additional-feedback.component';\r\nimport { ComplaintsStudentViewComponent } from 'app/complaints/complaints-for-students/complaints-student-view.component';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\nimport { ArtemisTimeAgoPipe } from 'app/shared/pipes/artemis-time-ago.pipe';\r\nimport { HtmlForMarkdownPipe } from 'app/shared/pipes/html-for-markdown.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-file-upload-submission',\r\n    templateUrl: './file-upload-submission.component.html',\r\n    imports: [\r\n        HeaderParticipationPageComponent,\r\n        ButtonComponent,\r\n        ResizeableContainerComponent,\r\n        TranslateDirective,\r\n        ExerciseActionButtonComponent,\r\n        AdditionalFeedbackComponent,\r\n        RatingComponent,\r\n        ComplaintsStudentViewComponent,\r\n        FaIconComponent,\r\n        UpperCasePipe,\r\n        ArtemisTranslatePipe,\r\n        ArtemisTimeAgoPipe,\r\n        HtmlForMarkdownPipe,\r\n    ],\r\n})\r\nexport class FileUploadSubmissionComponent implements OnInit, ComponentCanDeactivate {\r\n    private route = inject(ActivatedRoute);\r\n    private fileUploadSubmissionService = inject(FileUploadSubmissionService);\r\n    private alertService = inject(AlertService);\r\n    private fileService = inject(FileService);\r\n    private participationWebsocketService = inject(ParticipationWebsocketService);\r\n    private fileUploadAssessmentService = inject(FileUploadAssessmentService);\r\n    private accountService = inject(AccountService);\r\n\r\n    readonly addParticipationToResult = addParticipationToResult;\r\n    @ViewChild('fileInput', { static: false }) fileInput: ElementRef;\r\n\r\n    @Input() participationId?: number;\r\n    @Input() displayHeader = true;\r\n    @Input() expandProblemStatement = true;\r\n    @Input() displayedInExamSummary = false;\r\n\r\n    @Input() inputExercise?: FileUploadExercise;\r\n    @Input() inputSubmission?: FileUploadSubmission;\r\n    @Input() inputParticipation?: StudentParticipation;\r\n\r\n    submission?: FileUploadSubmission;\r\n    submittedFileName: string;\r\n    submittedFileExtension: string;\r\n    fileUploadExercise: FileUploadExercise;\r\n    participation: StudentParticipation;\r\n    result: Result;\r\n    resultWithComplaint?: Result;\r\n    submissionFile?: File;\r\n    course?: Course;\r\n    // indicates if the assessment due date is in the past. the assessment will not be loaded and displayed to the student if it is not.\r\n    isAfterAssessmentDueDate: boolean;\r\n    isSaving: boolean;\r\n    isOwnerOfParticipation: boolean;\r\n    examMode = false;\r\n\r\n    acceptedFileExtensions: string;\r\n\r\n    isLate: boolean; // indicates if the submission is late\r\n\r\n    faDownload = faDownload;\r\n    readonly ButtonType = ButtonType;\r\n\r\n    // Icons\r\n    farListAlt = faListAlt;\r\n\r\n    /**\r\n     * Initializes data for file upload editor\r\n     */\r\n    ngOnInit() {\r\n        if (this.inputValuesArePresent()) {\r\n            this.setupComponentWithInputValues();\r\n        } else {\r\n            const participationId = this.participationId ?? Number(this.route.snapshot.paramMap.get('participationId'));\r\n            if (Number.isNaN(participationId)) {\r\n                return this.alertService.error('artemisApp.fileUploadExercise.error');\r\n            }\r\n            this.fileUploadSubmissionService.getDataForFileUploadEditor(participationId).subscribe({\r\n                next: (submission: FileUploadSubmission) => {\r\n                    // reconnect participation <--> result\r\n                    const tmpResult = getLatestSubmissionResult(submission);\r\n                    if (tmpResult) {\r\n                        submission.participation!.results = [tmpResult!];\r\n                    }\r\n                    this.participation = <StudentParticipation>submission.participation;\r\n\r\n                    // reconnect participation <--> submission\r\n                    this.participation.submissions = [<FileUploadSubmission>omit(submission, 'participation')];\r\n\r\n                    this.submission = submission;\r\n                    this.result = tmpResult!;\r\n                    this.resultWithComplaint = getFirstResultWithComplaint(submission);\r\n                    this.fileUploadExercise = this.participation.exercise as FileUploadExercise;\r\n                    this.examMode = !!this.fileUploadExercise.exerciseGroup;\r\n                    this.fileUploadExercise.studentParticipations = [this.participation];\r\n                    this.course = getCourseFromExercise(this.fileUploadExercise);\r\n\r\n                    // checks if the student started the exercise after the due date\r\n                    this.isLate =\r\n                        this.fileUploadExercise &&\r\n                        !!this.fileUploadExercise.dueDate &&\r\n                        !!this.participation.initializationDate &&\r\n                        dayjs(this.participation.initializationDate).isAfter(getExerciseDueDate(this.fileUploadExercise, this.participation));\r\n\r\n                    this.acceptedFileExtensions = this.fileUploadExercise\r\n                        .filePattern!.split(',')\r\n                        .map((extension) => `.${extension}`)\r\n                        .join(',');\r\n                    this.isAfterAssessmentDueDate = !this.fileUploadExercise.assessmentDueDate || dayjs().isAfter(this.fileUploadExercise.assessmentDueDate);\r\n\r\n                    if (this.submission?.submitted) {\r\n                        this.setSubmittedFile();\r\n                    }\r\n                    if (this.submission?.submitted && this.result?.completionDate) {\r\n                        this.fileUploadAssessmentService.getAssessment(this.submission.id!).subscribe((assessmentResult: Result) => {\r\n                            this.result = assessmentResult;\r\n                        });\r\n                    }\r\n                    this.isOwnerOfParticipation = this.accountService.isOwnerOfParticipation(this.participation);\r\n                },\r\n                error: (error: HttpErrorResponse) => onError(this.alertService, error),\r\n            });\r\n        }\r\n    }\r\n\r\n    private inputValuesArePresent(): boolean {\r\n        return !!(this.inputExercise || this.inputSubmission || this.inputParticipation);\r\n    }\r\n\r\n    /**\r\n     * Uses values directly passed to this component instead of subscribing to a participation to save resources\r\n     *\r\n     * <i>e.g. used within {@link ExamResultSummaryComponent} and the respective {@link ModelingExamSummaryComponent}\r\n     * as directly after the exam no grading is present and only the student solution shall be displayed </i>\r\n     * @private\r\n     */\r\n    private setupComponentWithInputValues() {\r\n        if (this.inputExercise) {\r\n            this.fileUploadExercise = this.inputExercise;\r\n        }\r\n        if (this.inputSubmission) {\r\n            this.submission = this.inputSubmission;\r\n        }\r\n        if (this.inputParticipation) {\r\n            this.participation = this.inputParticipation;\r\n        }\r\n\r\n        if (this.submission?.submitted) {\r\n            this.setSubmittedFile();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Uploads a submission file and submits File Upload Exercise\r\n     */\r\n    public submitExercise() {\r\n        if (this.isSaving) {\r\n            // don't execute the function if it is already currently executing\r\n            return;\r\n        }\r\n\r\n        const file = this.submissionFile;\r\n        if (!this.submission || !file) {\r\n            return;\r\n        }\r\n        this.isSaving = true;\r\n        this.fileUploadSubmissionService.update(this.submission!, this.fileUploadExercise.id!, file).subscribe({\r\n            next: (res) => {\r\n                this.submission = res.body!;\r\n                this.participation = this.submission.participation as StudentParticipation;\r\n                // reconnect so that the submission status is displayed correctly in the result.component\r\n                this.submission.participation!.submissions = [this.submission];\r\n                this.participationWebsocketService.addParticipation(this.participation, this.fileUploadExercise);\r\n                this.fileUploadExercise.studentParticipations = [this.participation];\r\n                this.result = getLatestSubmissionResult(this.submission)!;\r\n                this.setSubmittedFile();\r\n                if (this.isActive) {\r\n                    this.alertService.success('artemisApp.fileUploadExercise.submitSuccessful');\r\n                } else {\r\n                    this.alertService.warning('artemisApp.fileUploadExercise.submitDueDateMissed');\r\n                }\r\n                this.isSaving = false;\r\n            },\r\n            error: (error: HttpErrorResponse) => {\r\n                this.submission!.submitted = false;\r\n                const serverError = error.headers.get('X-artemisApp-error');\r\n                if (serverError) {\r\n                    this.alertService.error(serverError, { fileName: file.name });\r\n                } else {\r\n                    this.alertService.error('artemisApp.fileUploadSubmission.fileUploadError', { fileName: file.name });\r\n                }\r\n                this.fileInput.nativeElement.value = '';\r\n                this.submissionFile = undefined;\r\n                this.isSaving = false;\r\n            },\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Sets file submission for exercise\r\n     * @param event {object} Event object which contains the uploaded file\r\n     */\r\n    setFileSubmissionForExercise(event: any): void {\r\n        if (event.target.files.length) {\r\n            const fileList: FileList = event.target.files;\r\n            const submissionFile = fileList[0];\r\n            const allowedFileExtensions = this.fileUploadExercise.filePattern!.split(',');\r\n            if (!allowedFileExtensions.some((extension) => submissionFile.name.toLowerCase().endsWith(extension))) {\r\n                this.alertService.error('artemisApp.fileUploadSubmission.fileExtensionError');\r\n            } else if (submissionFile.size > MAX_SUBMISSION_FILE_SIZE) {\r\n                this.alertService.error('artemisApp.fileUploadSubmission.fileTooBigError', { fileName: submissionFile.name });\r\n            } else {\r\n                this.submissionFile = submissionFile;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check whether or not a result exists and if, returns the unreferenced feedback of it\r\n     */\r\n    get unreferencedFeedback(): Feedback[] | undefined {\r\n        if (this.result?.feedbacks) {\r\n            checkSubsequentFeedbackInAssessment(this.result.feedbacks);\r\n            return getManualUnreferencedFeedback(this.result.feedbacks);\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    private setSubmittedFile() {\r\n        // clear submitted file so that it is not displayed in the input (this might be confusing)\r\n        this.submissionFile = undefined;\r\n        this.submittedFileName = '';\r\n        this.submittedFileExtension = '';\r\n        if (this.submission?.filePath) {\r\n            const filePath = this.submission!.filePath!.split('/');\r\n            this.submittedFileName = filePath.last()!;\r\n            const fileName = this.submittedFileName.split('.');\r\n            this.submittedFileExtension = fileName.last()!;\r\n        }\r\n    }\r\n\r\n    downloadFile(filePath: string) {\r\n        this.fileService.downloadFile(filePath);\r\n    }\r\n\r\n    /**\r\n     * Returns false if user selected a file, but didn't submit the exercise, true otherwise.\r\n     */\r\n    canDeactivate(): boolean {\r\n        return !(this.submission && !this.submission.submitted && this.submissionFile);\r\n    }\r\n\r\n    /**\r\n     * The exercise is still active if it's due date hasn't passed yet.\r\n     */\r\n    get isActive(): boolean {\r\n        return !this.examMode && this.fileUploadExercise && !hasExerciseDueDatePassed(this.fileUploadExercise, this.participation);\r\n    }\r\n\r\n    get submitButtonTooltip(): string {\r\n        if (!this.submissionFile) {\r\n            return 'artemisApp.fileUploadSubmission.selectFile';\r\n        }\r\n\r\n        if (!this.isLate) {\r\n            if (this.isActive && !this.fileUploadExercise.dueDate) {\r\n                return 'entity.action.submitNoDueDateTooltip';\r\n            } else if (this.isActive) {\r\n                return 'entity.action.submitTooltip';\r\n            } else {\r\n                return 'entity.action.dueDateMissedTooltip';\r\n            }\r\n        }\r\n\r\n        return 'entity.action.submitDueDateMissedTooltip';\r\n    }\r\n}\r\n", "@if (displayHeader) {\r\n    <jhi-header-participation-page class=\"d-block mb-4\" [exercise]=\"fileUploadExercise\" [participation]=\"participation\">\r\n        <span pagetitle>\r\n            {{ 'artemisApp.fileUploadSubmission.fileUpload' | artemisTranslate }}:\r\n            <span class=\"font-weight-normal\">{{ examMode ? fileUploadExercise?.exerciseGroup?.title : fileUploadExercise?.title }}</span>\r\n        </span>\r\n        <ng-container submitbutton>\r\n            @if (isOwnerOfParticipation) {\r\n                <jhi-button\r\n                    id=\"submit\"\r\n                    [disabled]=\"(!isActive && !isLate) || !submission || !submissionFile || !!result\"\r\n                    [title]=\"!isLate ? 'entity.action.submit' : 'entity.action.submitDueDateMissed'\"\r\n                    (onClick)=\"submitExercise()\"\r\n                    [btnType]=\"!isLate ? ButtonType.PRIMARY : ButtonType.WARNING\"\r\n                    [tooltip]=\"submitButtonTooltip\"\r\n                    [isLoading]=\"isSaving\"\r\n                />\r\n            }\r\n        </ng-container>\r\n    </jhi-header-participation-page>\r\n}\r\n@if (fileUploadExercise) {\r\n    <jhi-resizeable-container [isExerciseParticipation]=\"true\" [expandProblemStatement]=\"expandProblemStatement\">\r\n        <!--region Left Panel-->\r\n        <div left-body class=\"px-2 pb-2 w-100\">\r\n            <div class=\"row\">\r\n                @if ((isActive || isLate) && !result && fileUploadExercise && submission && isOwnerOfParticipation) {\r\n                    <div class=\"col-12 col-md-6\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"fileUploadInput\" class=\"form-control-label\" jhiTranslate=\"artemisApp.fileUploadSubmission.selectFile\"></label>\r\n                            <div class=\"input-group background-file\">\r\n                                <div class=\"custom-file overflow-ellipsis\">\r\n                                    <input #fileInput id=\"fileUploadInput\" type=\"file\" class=\"custom-file-input\" (change)=\"setFileSubmissionForExercise($event)\" />\r\n                                </div>\r\n                            </div>\r\n                            <p class=\"d-inline-block\" jhiTranslate=\"artemisApp.fileUploadExercise.supportedFileExtensions\"></p>\r\n                            @for (extension of fileUploadExercise.filePattern!.split(','); track extension) {\r\n                                <div class=\"d-inline-block\">\r\n                                    <span class=\"ms-1 badge bg-info\">\r\n                                        {{ extension | uppercase }}\r\n                                    </span>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n            @if (submittedFileName && submission?.filePath) {\r\n                <div class=\"card-text\">\r\n                    @if (!displayedInExamSummary) {\r\n                        <h6>\r\n                            {{ 'artemisApp.fileUploadSubmission.submittedFile' | artemisTranslate: { filename: submittedFileName } }}\r\n                            <span> {{ submission!.submissionDate! | artemisTimeAgo }}</span>\r\n                        </h6>\r\n                    } @else {\r\n                        <h5 jhiTranslate=\"artemisApp.exam.examSummary.yourSubmission\"></h5>\r\n                        <span jhiTranslate=\"artemisApp.fileUploadSubmission.submittedFile\" [translateValues]=\"{ filename: submittedFileName }\"></span>\r\n                    }\r\n                    <br />\r\n                    <div class=\"mt-2\">\r\n                        <button\r\n                            jhi-exercise-action-button\r\n                            [smallButton]=\"true\"\r\n                            [buttonIcon]=\"faDownload\"\r\n                            [buttonLabel]=\"'artemisApp.fileUploadSubmission.download' | artemisTranslate\"\r\n                            (click)=\"downloadFile(submission!.filePath!)\"\r\n                        ></button>\r\n                        @if (submittedFileExtension) {\r\n                            <span class=\"ms-2 badge bg-info\">\r\n                                {{ submittedFileExtension | uppercase }}\r\n                            </span>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            }\r\n            @if (result && result.feedbacks && result.feedbacks.length && result.feedbacks.length > 0) {\r\n                <div>\r\n                    <br />\r\n                    <h5><span jhiTranslate=\"artemisApp.fileUploadExercise.assessedSubmission\"></span>:</h5>\r\n                    <div class=\"row\">\r\n                        @if (unreferencedFeedback?.length && unreferencedFeedback!.length! > 0) {\r\n                            <jhi-additional-feedback class=\"col-xl-8 alert unreferencedFeedback\" [feedback]=\"unreferencedFeedback!\" [additional]=\"false\" [course]=\"course\" />\r\n                        }\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        @if (isOwnerOfParticipation) {\r\n                            <jhi-rating class=\"mt-2 alert alert-info\" [result]=\"addParticipationToResult(result, participation)\" />\r\n                        }\r\n                    </div>\r\n                </div>\r\n            }\r\n            @if (fileUploadExercise && result && participation && isAfterAssessmentDueDate && !examMode) {\r\n                <jhi-complaint-student-view [result]=\"resultWithComplaint ? resultWithComplaint : result\" [participation]=\"participation\" [exercise]=\"fileUploadExercise\" />\r\n            }\r\n        </div>\r\n        <!--endregion-->\r\n        <!--region Right Panel-->\r\n        <fa-icon right-header [icon]=\"farListAlt\" />&nbsp;\r\n        <span id=\"problem-statement\" right-header jhiTranslate=\"artemisApp.exercise.problemStatement\"></span>\r\n        <p right-body class=\"mb-3 markdown-preview\">\r\n            @if (fileUploadExercise!.problemStatement) {\r\n                <span [innerHTML]=\"fileUploadExercise!.problemStatement! | htmlForMarkdown\"></span>\r\n            }\r\n        </p>\r\n        <!--endregion-->\r\n    </jhi-resizeable-container>\r\n}\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "submitExercise", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "isActive", "isLate", "submission", "submissionFile", "result", "ButtonType", "WARNING", "PRIMARY", "submitButtonTooltip", "isSaving", "\u0275\u0275elementContainerStart", "\u0275\u0275template", "FileUploadSubmissionComponent_Conditional_0_Conditional_12_Template", "fileUploadExercise", "participation", "\u0275\u0275textInterpolate1", "\u0275\u0275pipeBind1", "\u0275\u0275textInterpolate", "examMode", "exerciseGroup", "title", "\u0275\u0275conditional", "isOwnerOfParticipation", "extension_r4", "\u0275\u0275element", "$event", "_r3", "setFileSubmissionForExercise", "\u0275\u0275repeaterCreate", "FileUploadSubmissionComponent_Conditional_1_Conditional_8_For_19_Template", "\u0275\u0275repeaterTrackByIdentity", "\u0275\u0275repeater", "filePattern", "split", "\u0275\u0275pipeBind2", "\u0275\u0275pureFunction1", "_c1", "submittedFileName", "submissionDate", "submittedFileExtension", "FileUploadSubmissionComponent_Conditional_1_Conditional_10_Conditional_3_Template", "FileUploadSubmissionComponent_Conditional_1_Conditional_10_Conditional_4_Template", "_r5", "downloadFile", "filePath", "FileUploadSubmissionComponent_Conditional_1_Conditional_10_Conditional_12_Template", "displayedInExamSummary", "faDownload", "unreferencedFeedback", "course", "addParticipationToResult", "FileUploadSubmissionComponent_Conditional_1_Conditional_11_Conditional_11_Template", "FileUploadSubmissionComponent_Conditional_1_Conditional_11_Conditional_15_Template", "length", "resultWithComplaint", "problemStatement", "\u0275\u0275sanitizeHtml", "FileUploadSubmissionComponent_Conditional_1_Conditional_8_Template", "FileUploadSubmissionComponent_Conditional_1_Conditional_10_Template", "FileUploadSubmissionComponent_Conditional_1_Conditional_11_Template", "FileUploadSubmissionComponent_Conditional_1_Conditional_12_Template", "FileUploadSubmissionComponent_Conditional_1_Conditional_22_Template", "expandProblemStatement", "feedbacks", "isAfterAssessmentDueDate", "farListAlt", "FileUploadSubmissionComponent", "route", "inject", "ActivatedRoute", "fileUploadSubmissionService", "FileUploadSubmissionService", "alertService", "AlertService", "fileService", "FileService", "participationWebsocketService", "ParticipationWebsocketService", "fileUploadAssessmentService", "FileUploadAssessmentService", "accountService", "AccountService", "fileInput", "participationId", "displayHeader", "inputExercise", "inputSubmission", "inputParticipation", "acceptedFileExtensions", "faListAlt", "ngOnInit", "inputValuesArePresent", "setupComponentWithInputValues", "Number", "snapshot", "paramMap", "get", "isNaN", "error", "getDataForFileUploadEditor", "subscribe", "next", "tmpResult", "getLatestSubmissionResult", "results", "submissions", "omit", "getFirstResultWithComplaint", "exercise", "studentParticipations", "getCourseFromExercise", "dueDate", "initializationDate", "dayjs", "isAfter", "getExerciseDueDate", "map", "extension", "join", "assessmentDueDate", "submitted", "setSubmittedFile", "completionDate", "getAssessment", "id", "assessmentResult", "onError", "file", "update", "res", "body", "addParticipation", "success", "warning", "serverError", "headers", "fileName", "name", "nativeElement", "value", "undefined", "event", "target", "files", "some", "toLowerCase", "endsWith", "size", "MAX_SUBMISSION_FILE_SIZE", "checkSubsequentFeedbackInAssessment", "getManualUnreferencedFeedback", "last", "canDeactivate", "hasExerciseDueDatePassed", "selectors", "viewQuery", "rf", "ctx", "FileUploadSubmissionComponent_Conditional_0_Template", "FileUploadSubmissionComponent_Conditional_1_Template", "HeaderParticipationPageComponent", "ButtonComponent", "ResizeableContainerComponent", "TranslateDirective", "ExerciseActionButtonComponent", "AdditionalFeedbackComponent", "RatingComponent", "ComplaintsStudentViewComponent", "FaIconComponent", "UpperCasePipe", "ArtemisTranslatePipe", "ArtemisTimeAgoPipe", "HtmlForMarkdownPipe", "encapsulation"]
}
