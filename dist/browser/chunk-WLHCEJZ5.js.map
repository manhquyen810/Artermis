{
  "version": 3,
  "sources": ["src/main/webapp/app/course/tutorial-groups/tutorial-groups-management/tutorial-groups-configuration/crud/tutorial-groups-configuration-form/tutorial-groups-configuration-form.component.ts", "src/main/webapp/app/course/tutorial-groups/tutorial-groups-management/tutorial-groups-configuration/crud/tutorial-groups-configuration-form/tutorial-groups-configuration-form.component.html"],
  "sourcesContent": ["import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, OnInit, Output, inject } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { faCalendarAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Course, isMessagingEnabled } from 'app/entities/course.model';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { OwlDateTimeModule } from '@danielmoncada/angular-datetime-picker';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { ArtemisDateRangePipe } from 'app/shared/pipes/artemis-date-range.pipe';\r\nimport { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\r\n\r\nexport interface TutorialGroupsConfigurationFormData {\r\n    period?: Date[];\r\n    usePublicTutorialGroupChannels?: boolean;\r\n    useTutorialGroupChannels?: boolean;\r\n}\r\n\r\n@Component({\r\n    selector: 'jhi-tutorial-groups-configuration-form',\r\n    templateUrl: './tutorial-groups-configuration-form.component.html',\r\n    styleUrls: ['./tutorial-groups-configuration-form.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    imports: [FormsModule, ReactiveFormsModule, TranslateDirective, OwlDateTimeModule, FaIconComponent, ArtemisDateRangePipe],\r\n    providers: [ArtemisDatePipe],\r\n})\r\nexport class TutorialGroupsConfigurationFormComponent implements OnInit, OnChanges {\r\n    private fb = inject(FormBuilder);\r\n\r\n    @Input()\r\n    formData: TutorialGroupsConfigurationFormData = {\r\n        period: undefined,\r\n        usePublicTutorialGroupChannels: false,\r\n        useTutorialGroupChannels: false,\r\n    };\r\n    @Input() isEditMode = false;\r\n    @Output() formSubmitted: EventEmitter<TutorialGroupsConfigurationFormData> = new EventEmitter<TutorialGroupsConfigurationFormData>();\r\n\r\n    @Input()\r\n    course: Course;\r\n\r\n    faCalendarAlt = faCalendarAlt;\r\n\r\n    readonly isMessagingEnabled = isMessagingEnabled;\r\n\r\n    existingChannelSetting?: boolean;\r\n\r\n    form: FormGroup;\r\n\r\n    get periodControl() {\r\n        return this.form.get('period');\r\n    }\r\n\r\n    get useTutorialGroupChannelsControl() {\r\n        return this.form.get('useTutorialGroupChannels');\r\n    }\r\n\r\n    get usePublicTutorialGroupChannelsControl() {\r\n        return this.form.get('usePublicTutorialGroupChannels');\r\n    }\r\n\r\n    get isSubmitPossible() {\r\n        return !this.form.invalid;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.initializeForm();\r\n    }\r\n    ngOnChanges() {\r\n        this.initializeForm();\r\n        if (this.isEditMode && this.formData) {\r\n            this.setFormValues(this.formData);\r\n        }\r\n    }\r\n    private setFormValues(formData: TutorialGroupsConfigurationFormData) {\r\n        this.existingChannelSetting = formData.useTutorialGroupChannels;\r\n        this.form.patchValue(formData);\r\n    }\r\n\r\n    get showChannelDeletionWarning() {\r\n        if (!this.isEditMode) {\r\n            return false;\r\n        }\r\n        if (this.existingChannelSetting === undefined) {\r\n            return false;\r\n        }\r\n        return this.existingChannelSetting && this.useTutorialGroupChannelsControl?.value === false;\r\n    }\r\n\r\n    private initializeForm() {\r\n        if (this.form) {\r\n            return;\r\n        }\r\n\r\n        this.form = this.fb.group({\r\n            period: [undefined, Validators.required],\r\n            useTutorialGroupChannels: [false],\r\n            usePublicTutorialGroupChannels: [false],\r\n        });\r\n    }\r\n\r\n    submitForm() {\r\n        this.formSubmitted.emit({ ...this.form.value });\r\n    }\r\n\r\n    get isPeriodInvalid() {\r\n        if (this.periodControl) {\r\n            return this.periodControl.invalid && (this.periodControl.touched || this.periodControl.dirty);\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    markPeriodAsTouched() {\r\n        if (this.periodControl) {\r\n            this.periodControl.markAsTouched();\r\n        }\r\n    }\r\n}\r\n", "<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        @if (form) {\r\n            <form class=\"row\" [formGroup]=\"form\" (ngSubmit)=\"submitForm()\">\r\n                <!-- Period -->\r\n                <div class=\"col-auto\">\r\n                    <label class=\"form-label\" for=\"period\" jhiTranslate=\"artemisApp.forms.configurationForm.periodInput.label\"></label>\r\n                    <div class=\"input-group\">\r\n                        <input\r\n                            name=\"period\"\r\n                            id=\"period\"\r\n                            required\r\n                            [class.is-invalid]=\"isPeriodInvalid\"\r\n                            (focus)=\"markPeriodAsTouched()\"\r\n                            [value]=\"periodControl?.value | artemisDateRange: 'long-date' : undefined : true\"\r\n                            [owlDateTimeTrigger]=\"period\"\r\n                            readonly\r\n                            class=\"form-control\"\r\n                        />\r\n                        <input formControlName=\"period\" [owlDateTime]=\"period\" class=\"date-time-picker-anchor\" [selectMode]=\"'range'\" />\r\n                        <button type=\"button\" class=\"btn btn-secondary\" [owlDateTimeTrigger]=\"period\">\r\n                            <fa-icon [icon]=\"faCalendarAlt\" />\r\n                        </button>\r\n                        <owl-date-time [firstDayOfWeek]=\"1\" [pickerType]=\"'calendar'\" #period />\r\n                    </div>\r\n                    <div class=\"form-text\" jhiTranslate=\"artemisApp.forms.configurationForm.periodInput.explanation\"></div>\r\n                    @if (periodControl?.invalid && (periodControl?.dirty || periodControl?.touched)) {\r\n                        <div class=\"alert alert-danger\">\r\n                            @if (periodControl?.errors?.owlRequiredDateTimeRange || periodControl?.errors?.required) {\r\n                                <div jhiTranslate=\"artemisApp.forms.configurationForm.periodInput.requiredValidationError\"></div>\r\n                            }\r\n                            @if (periodControl?.errors?.owlDateTimeParse) {\r\n                                <div jhiTranslate=\"artemisApp.forms.configurationForm.periodInput.parseError\"></div>\r\n                            }\r\n                            @if (periodControl?.errors?.owlDateTimeRange) {\r\n                                <div jhiTranslate=\"artemisApp.forms.configurationForm.periodInput.invalidRangeError\"></div>\r\n                            }\r\n                        </div>\r\n                    }\r\n                    <!-- Do not show options if the course has communication disabled -->\r\n                    <div [hidden]=\"!isMessagingEnabled(course)\">\r\n                        <div class=\"form-check\">\r\n                            <input class=\"form-check-input\" type=\"checkbox\" formControlName=\"useTutorialGroupChannels\" id=\"useTutorialGroupChannels\" />\r\n                            <label\r\n                                class=\"form-check-label\"\r\n                                for=\"useTutorialGroupChannels\"\r\n                                jhiTranslate=\"artemisApp.forms.configurationForm.useTutorialGroupChannelsInput.label\"\r\n                            ></label>\r\n                            <small\r\n                                id=\"channelHelp\"\r\n                                class=\"form-text text-body-secondary d-block\"\r\n                                jhiTranslate=\"artemisApp.forms.configurationForm.useTutorialGroupChannelsInput.explanation\"\r\n                            ></small>\r\n                            @if (showChannelDeletionWarning) {\r\n                                <div\r\n                                    class=\"alert alert-danger\"\r\n                                    role=\"alert\"\r\n                                    id=\"channelDeletionWarning\"\r\n                                    jhiTranslate=\"artemisApp.forms.configurationForm.useTutorialGroupChannelsInput.channelDeletionWarning\"\r\n                                ></div>\r\n                            }\r\n                        </div>\r\n                        <!--Public Channel / Private Channel -->\r\n                        <div class=\"form-group\" [hidden]=\"!useTutorialGroupChannelsControl?.value\">\r\n                            <label class=\"d-block\" jhiTranslate=\"artemisApp.dialogs.createChannel.channelForm.isPublicInput.label\"></label>\r\n                            <div class=\"btn-group\" role=\"group\">\r\n                                <input formControlName=\"usePublicTutorialGroupChannels\" type=\"radio\" class=\"btn-check\" id=\"public\" autocomplete=\"off\" checked [value]=\"true\" />\r\n                                <label class=\"btn btn-outline-secondary\" for=\"public\" jhiTranslate=\"artemisApp.dialogs.createChannel.channelForm.isPublicInput.public\"></label>\r\n                                <input formControlName=\"usePublicTutorialGroupChannels\" type=\"radio\" class=\"btn-check\" id=\"private\" autocomplete=\"off\" [value]=\"false\" />\r\n                                <label class=\"btn btn-outline-secondary\" for=\"private\" jhiTranslate=\"artemisApp.dialogs.createChannel.channelForm.isPublicInput.private\"></label>\r\n                            </div>\r\n                            <small\r\n                                id=\"isPublicHelp\"\r\n                                class=\"form-text text-body-secondary d-block\"\r\n                                jhiTranslate=\"artemisApp.dialogs.createChannel.channelForm.isPublicInput.explanation\"\r\n                            ></small>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row mt-2\">\r\n                    <div class=\"col-12\">\r\n                        <button id=\"submitButton\" class=\"btn btn-primary\" type=\"submit\" [disabled]=\"!isSubmitPossible\">\r\n                            <span jhiTranslate=\"{{ isEditMode ? 'global.generic.edit' : 'global.generic.create' }}\"></span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        }\r\n    </div>\r\n</div>\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275elementStart", "\u0275\u0275template", "TutorialGroupsConfigurationFormComponent_Conditional_4_Conditional_26_Conditional_3_Template", "TutorialGroupsConfigurationFormComponent_Conditional_4_Conditional_26_Conditional_4_Template", "TutorialGroupsConfigurationFormComponent_Conditional_4_Conditional_26_Conditional_5_Template", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275conditional", "ctx_r1", "periodControl", "errors", "owlRequiredDateTimeRange", "required", "owlDateTimeParse", "owlDateTimeRange", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "submitForm", "markPeriodAsTouched", "TutorialGroupsConfigurationFormComponent_Conditional_4_Conditional_26_Template", "TutorialGroupsConfigurationFormComponent_Conditional_4_Conditional_37_Template", "\u0275\u0275property", "form", "\u0275\u0275classProp", "isPeriodInvalid", "\u0275\u0275pipeBind4", "value", "undefined", "period_r3", "faCalendarAlt", "invalid", "dirty", "touched", "isMessagingEnabled", "course", "showChannelDeletionWarning", "useTutorialGroupChannelsControl", "isSubmitPossible", "\u0275\u0275propertyInterpolate", "isEditMode", "TutorialGroupsConfigurationFormComponent", "fb", "inject", "FormBuilder", "formData", "period", "usePublicTutorialGroupChannels", "useTutorialGroupChannels", "formSubmitted", "EventEmitter", "existingChannelSetting", "get", "usePublicTutorialGroupChannelsControl", "ngOnInit", "initializeForm", "ngOnChanges", "setFormValues", "patchValue", "group", "Validators", "emit", "__spreadValues", "markAsTouched", "selectors", "inputs", "outputs", "features", "\u0275\u0275ProvidersFeature", "ArtemisDatePipe", "\u0275\u0275NgOnChangesFeature", "decls", "vars", "consts", "template", "rf", "ctx", "TutorialGroupsConfigurationFormComponent_Conditional_4_Template", "FormsModule", "\u0275NgNoValidate", "DefaultValueAccessor", "CheckboxControlValueAccessor", "RadioControlValueAccessor", "NgControlStatus", "NgControlStatusGroup", "ReactiveFormsModule", "FormGroupDirective", "FormControlName", "TranslateDirective", "OwlDateTimeModule", "OwlDateTimeTriggerDirective", "OwlDateTimeInputDirective", "OwlDateTimeComponent", "FaIconComponent", "ArtemisDateRangePipe", "styles", "changeDetection"]
}
