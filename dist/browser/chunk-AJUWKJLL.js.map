{
  "version": 3,
  "sources": ["src/main/webapp/app/shared/statistics-graph/statistics-score-distribution-graph.component.ts", "src/main/webapp/app/shared/statistics-graph/statistics-score-distribution-graph.component.html", "src/main/webapp/app/exercises/shared/statistics/exercise-statistics.component.ts", "src/main/webapp/app/exercises/shared/statistics/exercise-statistics.component.html"],
  "sourcesContent": ["import { Component, Input, OnInit, inject } from '@angular/core';\r\nimport { round } from 'app/shared/util/utils';\r\nimport { GraphColors } from 'app/entities/statistics.model';\r\nimport { axisTickFormattingWithPercentageSign } from 'app/shared/statistics-graph/statistics-graph.utils';\r\nimport { BarChartModule, Color, ScaleType } from '@swimlane/ngx-charts';\r\nimport { ExerciseType } from 'app/entities/exercise.model';\r\nimport { ArtemisNavigationUtilService } from 'app/utils/navigation.utils';\r\nimport { TranslateDirective } from '../language/translate.directive';\r\n\r\n@Component({\r\n    selector: 'jhi-statistics-score-distribution-graph',\r\n    templateUrl: './statistics-score-distribution-graph.component.html',\r\n    styleUrls: ['../chart/vertical-bar-chart.scss'],\r\n    imports: [TranslateDirective, BarChartModule],\r\n})\r\nexport class StatisticsScoreDistributionGraphComponent implements OnInit {\r\n    private navigationService = inject(ArtemisNavigationUtilService);\r\n\r\n    @Input()\r\n    averageScoreOfExercise: number | undefined;\r\n    @Input()\r\n    scoreDistribution: number[] | undefined;\r\n    @Input()\r\n    numberOfExerciseScores: number | undefined;\r\n    @Input()\r\n    exerciseType: ExerciseType;\r\n    @Input()\r\n    courseId: number;\r\n    @Input()\r\n    exerciseId: number;\r\n\r\n    // ngx\r\n    ngxData: any[] = [];\r\n    ngxColor: Color = {\r\n        name: 'Statistics',\r\n        selectable: true,\r\n        group: ScaleType.Ordinal,\r\n        domain: [GraphColors.DARK_BLUE],\r\n    };\r\n    yAxisTickFormatting = axisTickFormattingWithPercentageSign;\r\n\r\n    // Data\r\n    barChartLabels: string[] = [];\r\n    relativeChartData: number[] = [];\r\n\r\n    ngOnInit(): void {\r\n        this.initializeChart();\r\n    }\r\n\r\n    private initializeChart(): void {\r\n        this.barChartLabels = ['[0, 10)', '[10, 20)', '[20, 30)', '[30, 40)', '[40, 50)', '[50, 60)', '[60, 70)', '[70, 80)', '[80, 90)', '[90, 100]'];\r\n        if (this.numberOfExerciseScores && this.numberOfExerciseScores > 0) {\r\n            this.relativeChartData = [];\r\n            for (const value of this.scoreDistribution!) {\r\n                this.relativeChartData.push(round((value * 100) / this.numberOfExerciseScores));\r\n            }\r\n        } else {\r\n            this.relativeChartData = new Array(10).fill(0);\r\n        }\r\n        this.ngxData = this.relativeChartData.map((data, index) => ({ name: this.barChartLabels[index], value: data }));\r\n    }\r\n\r\n    /**\r\n     * Finds given the distribution bucket the corresponding absolute value\r\n     * @param bucket the distribution bucket to determine the absolute Value for\r\n     * @returns amount of submissions that achieved a score in the buckets range\r\n     */\r\n    lookUpAbsoluteValue(bucket: string) {\r\n        const index = this.barChartLabels.indexOf(bucket);\r\n        return this.scoreDistribution![index];\r\n    }\r\n\r\n    /**\r\n     * Handles the event if a user clicks on a certain chart bar\r\n     * @param event the event passed by ngx-charts\r\n     */\r\n    selectChartBar(event: any): void {\r\n        const index = this.barChartLabels.indexOf(event.name);\r\n        const route = [`/course-management/${this.courseId}/${this.exerciseType}-exercises/${this.exerciseId}/scores`];\r\n        this.navigationService.routeInNewTab(route, { queryParams: { scoreRangeFilter: index } });\r\n    }\r\n}\r\n", "<div class=\"row mb-3\">\r\n    <div class=\"col-xl-2\">\r\n        <h3 jhiTranslate=\"statistics.score_distribution\"></h3>\r\n    </div>\r\n    <div #containerRef class=\"col-xl-9\">\r\n        <ngx-charts-bar-vertical\r\n            [roundEdges]=\"false\"\r\n            [view]=\"[containerRef.offsetWidth, 250]\"\r\n            [results]=\"ngxData\"\r\n            [scheme]=\"ngxColor\"\r\n            [xAxis]=\"true\"\r\n            [yAxis]=\"true\"\r\n            [yScaleMax]=\"100\"\r\n            [showDataLabel]=\"true\"\r\n            [yAxisTickFormatting]=\"yAxisTickFormatting\"\r\n            (select)=\"selectChartBar($event)\"\r\n        >\r\n            <ng-template #tooltipTemplate let-model=\"model\">\r\n                <b>{{ model.name }}</b> <br />\r\n                <span>{{ lookUpAbsoluteValue(model.name) }}</span>\r\n            </ng-template>\r\n        </ngx-charts-bar-vertical>\r\n    </div>\r\n</div>\r\n", "import { Component, OnInit, inject } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { Graphs, SpanType, StatisticsView } from 'app/entities/statistics.model';\r\nimport { Subscription } from 'rxjs';\r\nimport { StatisticsService } from 'app/shared/statistics-graph/statistics.service';\r\nimport { ExerciseManagementStatisticsDto } from 'app/exercises/shared/statistics/exercise-management-statistics-dto';\r\nimport { Exercise, getCourseFromExercise } from 'app/entities/exercise.model';\r\nimport { ExerciseService } from 'app/exercises/shared/exercise/exercise.service';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { ExerciseDetailStatisticsComponent } from './exercise-detail-statistics.component';\r\nimport { StatisticsScoreDistributionGraphComponent } from 'app/shared/statistics-graph/statistics-score-distribution-graph.component';\r\nimport { StatisticsGraphComponent } from 'app/shared/statistics-graph/statistics-graph.component';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-exercise-statistics',\r\n    templateUrl: './exercise-statistics.component.html',\r\n    styleUrls: ['../../../course/manage/course-management-statistics.component.scss'],\r\n    imports: [TranslateDirective, ExerciseDetailStatisticsComponent, StatisticsScoreDistributionGraphComponent, StatisticsGraphComponent, ArtemisTranslatePipe],\r\n})\r\nexport class ExerciseStatisticsComponent implements OnInit {\r\n    private service = inject(StatisticsService);\r\n    private route = inject(ActivatedRoute);\r\n    private exerciseService = inject(ExerciseService);\r\n\r\n    // html properties\r\n    SpanType = SpanType;\r\n    graphTypes = [Graphs.SUBMISSIONS, Graphs.ACTIVE_USERS, Graphs.ACTIVE_TUTORS, Graphs.CREATED_RESULTS, Graphs.CREATED_FEEDBACKS];\r\n    currentSpan: SpanType = SpanType.WEEK;\r\n    statisticsView: StatisticsView = StatisticsView.EXERCISE;\r\n    paramSub: Subscription;\r\n\r\n    exercise: Exercise;\r\n    course: Course;\r\n    exerciseStatistics: ExerciseManagementStatisticsDto;\r\n\r\n    ngOnInit() {\r\n        let exerciseId = 0;\r\n        this.paramSub = this.route.params.subscribe((params) => {\r\n            exerciseId = params['exerciseId'];\r\n        });\r\n        this.exerciseService.find(exerciseId).subscribe((exerciseResponse: HttpResponse<Exercise>) => {\r\n            this.exercise = exerciseResponse.body!;\r\n            this.course = getCourseFromExercise(this.exercise)!;\r\n        });\r\n        this.service.getExerciseStatistics(exerciseId).subscribe((res: ExerciseManagementStatisticsDto) => {\r\n            this.exerciseStatistics = res;\r\n        });\r\n    }\r\n\r\n    onTabChanged(span: SpanType): void {\r\n        this.currentSpan = span;\r\n    }\r\n}\r\n", "@if (exercise) {\r\n    <div>\r\n        <h2 class=\"row mb-5 col-md-2\" id=\"statistics-page-heading\" jhiTranslate=\"exercise-statistics.title\"></h2>\r\n        <div class=\"mb-3 d-flex justify-content-around\">\r\n            <jhi-exercise-detail-statistics [exercise]=\"exercise\" [doughnutStats]=\"exerciseStatistics\" [exerciseType]=\"exercise.type!\" />\r\n        </div>\r\n        @if (exerciseStatistics) {\r\n            <jhi-statistics-score-distribution-graph\r\n                [averageScoreOfExercise]=\"exerciseStatistics?.averageScoreOfExercise\"\r\n                [scoreDistribution]=\"exerciseStatistics?.scoreDistribution\"\r\n                [numberOfExerciseScores]=\"exerciseStatistics?.numberOfExerciseScores\"\r\n                [exerciseType]=\"exercise.type!\"\r\n                [courseId]=\"course.id!\"\r\n                [exerciseId]=\"exercise.id!\"\r\n            />\r\n        }\r\n        <div class=\"separator w-100 mb-4\"></div>\r\n        <div class=\"row mb-5\">\r\n            <div class=\"offset-md-2 col-md-9 btn-group btn-group-toggle\" data-toggle=\"buttons\">\r\n                <label class=\"btn btn-secondary\" [class.active]=\"currentSpan === SpanType.DAY\">\r\n                    <input type=\"radio\" name=\"options\" id=\"option1\" (click)=\"onTabChanged(SpanType.DAY)\" />{{ 'statistics.span.day' | artemisTranslate }}\r\n                </label>\r\n                <label class=\"btn btn-secondary\" [class.active]=\"currentSpan === SpanType.WEEK\">\r\n                    <input type=\"radio\" name=\"options\" id=\"option2\" checked (click)=\"onTabChanged(SpanType.WEEK)\" />{{ 'statistics.span.week' | artemisTranslate }}\r\n                </label>\r\n                <label class=\"btn btn-secondary\" [class.active]=\"currentSpan === SpanType.MONTH\">\r\n                    <input type=\"radio\" name=\"options\" id=\"option3\" (click)=\"onTabChanged(SpanType.MONTH)\" />{{ 'statistics.span.month' | artemisTranslate }}\r\n                </label>\r\n                <label class=\"btn btn-secondary\" [class.active]=\"currentSpan === SpanType.QUARTER\">\r\n                    <input type=\"radio\" name=\"options\" id=\"option4\" (click)=\"onTabChanged(SpanType.QUARTER)\" />{{ 'statistics.span.quarter' | artemisTranslate }}\r\n                </label>\r\n                <label class=\"btn btn-secondary\" [class.active]=\"currentSpan === SpanType.YEAR\">\r\n                    <input type=\"radio\" name=\"options\" id=\"option5\" (click)=\"onTabChanged(SpanType.YEAR)\" />{{ 'statistics.span.year' | artemisTranslate }}\r\n                </label>\r\n            </div>\r\n        </div>\r\n        @for (graph of graphTypes; track graph; let i = $index) {\r\n            <div id=\"exercise-statistics-graph-{{ i }}\" class=\"graph\">\r\n                @if (i !== 0) {\r\n                    <hr />\r\n                }\r\n                <jhi-statistics-graph [graphType]=\"graph\" [currentSpan]=\"currentSpan\" [statisticsView]=\"statisticsView\" [entityId]=\"exercise.id!\" />\r\n            </div>\r\n        }\r\n    </div>\r\n}\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275textInterpolate", "model_r2", "name", "ctx_r2", "lookUpAbsoluteValue", "StatisticsScoreDistributionGraphComponent", "navigationService", "inject", "ArtemisNavigationUtilService", "averageScoreOfExercise", "scoreDistribution", "numberOfExerciseScores", "exerciseType", "courseId", "exerciseId", "ngxData", "ngxColor", "selectable", "group", "ScaleType", "Ordinal", "domain", "GraphColors", "DARK_BLUE", "yAxisTickFormatting", "axisTickFormattingWithPercentageSign", "barChartLabels", "relativeChartData", "ngOnInit", "initializeChart", "value", "push", "round", "Array", "fill", "map", "data", "index", "bucket", "indexOf", "selectChartBar", "event", "route", "routeInNewTab", "queryParams", "scoreRangeFilter", "selectors", "inputs", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275listener", "$event", "i0", "\u0275\u0275restoreView", "_r1", "\u0275\u0275resetView", "\u0275\u0275template", "StatisticsScoreDistributionGraphComponent_ng_template_12_Template", "\u0275\u0275templateRefExtractor", "\u0275\u0275property", "\u0275\u0275pureFunction1", "_c0", "containerRef_r4", "offsetWidth", "TranslateDirective", "BarChartModule", "BarVerticalComponent", "styles", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275property", "ctx_r1", "exerciseStatistics", "averageScoreOfExercise", "scoreDistribution", "numberOfExerciseScores", "exercise", "type", "course", "id", "\u0275\u0275elementStart", "\u0275\u0275template", "ExerciseStatisticsComponent_Conditional_0_For_50_Conditional_3_Template", "\u0275\u0275elementEnd", "\u0275\u0275propertyInterpolate1", "\u0275$index_72_r4", "\u0275\u0275conditional", "graph_r3", "currentSpan", "statisticsView", "ExerciseStatisticsComponent_Conditional_0_Conditional_10_Template", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "onTabChanged", "SpanType", "DAY", "WEEK", "MONTH", "QUARTER", "YEAR", "\u0275\u0275repeaterCreate", "ExerciseStatisticsComponent_Conditional_0_For_50_Template", "\u0275\u0275repeaterTrackByIdentity", "\u0275\u0275classProp", "\u0275\u0275textInterpolate1", "\u0275\u0275pipeBind1", "\u0275\u0275repeater", "graphTypes", "ExerciseStatisticsComponent", "service", "inject", "StatisticsService", "route", "ActivatedRoute", "exerciseService", "ExerciseService", "Graphs", "SUBMISSIONS", "ACTIVE_USERS", "ACTIVE_TUTORS", "CREATED_RESULTS", "CREATED_FEEDBACKS", "StatisticsView", "EXERCISE", "paramSub", "ngOnInit", "exerciseId", "params", "subscribe", "find", "exerciseResponse", "body", "getCourseFromExercise", "getExerciseStatistics", "res", "span", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "ExerciseStatisticsComponent_Conditional_0_Template", "TranslateDirective", "ExerciseDetailStatisticsComponent", "StatisticsScoreDistributionGraphComponent", "StatisticsGraphComponent", "ArtemisTranslatePipe", "styles"]
}
