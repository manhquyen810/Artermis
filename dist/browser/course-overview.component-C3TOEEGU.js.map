{"version":3,"sources":["src/main/webapp/app/overview/course-unenrollment-modal.component.ts","src/main/webapp/app/overview/course-unenrollment-modal.component.html","node_modules/@angular/material/fesm2022/sidenav.mjs","src/main/webapp/app/overview/course-overview.component.ts","src/main/webapp/app/overview/course-overview.component.html"],"sourcesContent":["import { Component, OnInit, inject } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { faXmark } from '@fortawesome/free-solid-svg-icons';\r\nimport dayjs from 'dayjs/esm';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { CourseManagementService } from 'app/course/manage/course-management.service';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { AbstractControl, FormControl, FormGroup, FormsModule, ReactiveFormsModule, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\r\nimport { TranslateDirective } from '../shared/language/translate.directive';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\r\nimport { ArtemisTranslatePipe } from '../shared/pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-course-unenrollment-modal',\r\n    templateUrl: './course-unenrollment-modal.component.html',\r\n    imports: [TranslateDirective, FormsModule, ReactiveFormsModule, FaIconComponent, ArtemisDatePipe, ArtemisTranslatePipe],\r\n})\r\nexport class CourseUnenrollmentModalComponent implements OnInit {\r\n    private activeModal = inject(NgbActiveModal);\r\n    private courseService = inject(CourseManagementService);\r\n    private alertService = inject(AlertService);\r\n    private router = inject(Router);\r\n\r\n    public course: Course;\r\n    confirmationForm: FormGroup;\r\n\r\n    // Icons\r\n    faXmark = faXmark;\r\n\r\n    ngOnInit(): void {\r\n        this.confirmationForm = new FormGroup({\r\n            confirmationInput: new FormControl('', Validators.compose([Validators.required, this.confirmationInputValidator()])),\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Returns true if the student will be able to enroll again, otherwise false.\r\n     */\r\n    get canEnrollAgain() {\r\n        return this.course.enrollmentEnabled && dayjs().isBefore(this.course.enrollmentEndDate);\r\n    }\r\n\r\n    /**\r\n     * Returns true if the input matches the course title, otherwise false.\r\n     */\r\n    get isValidInput() {\r\n        return this.course && this.confirmationForm && this.confirmationForm.controls[`confirmationInput`].value === this.course.title;\r\n    }\r\n\r\n    /**\r\n     * Method is called when the process is canceled.\r\n     */\r\n    onCancel(): void {\r\n        this.close();\r\n    }\r\n\r\n    /**\r\n     * Method is called when the student decides to unenroll.\r\n     */\r\n    onUnenroll(): void {\r\n        this.close();\r\n        this.courseService.unenrollFromCourse(this.course.id!).subscribe({\r\n            next: () => {\r\n                this.alertService.success('artemisApp.courseOverview.exerciseList.details.unenrollmentModal.unenrollmentSuccessful');\r\n                this.router.navigate(['/']);\r\n            },\r\n            error: (error: string) => {\r\n                this.alertService.error(error);\r\n            },\r\n        });\r\n    }\r\n\r\n    private close(): void {\r\n        this.activeModal.close();\r\n    }\r\n\r\n    private confirmationInputValidator(): ValidatorFn {\r\n        return (control: AbstractControl): ValidationErrors | null => {\r\n            const invalid = !this.isValidInput;\r\n            return invalid ? { invalidInput: { value: control.value } } : null;\r\n        };\r\n    }\r\n}\r\n","<div class=\"modal-header\">\r\n    <h4 class=\"modal-title\" jhiTranslate=\"artemisApp.courseOverview.exerciseList.details.unenrollmentModal.title\"></h4>\r\n</div>\r\n<div class=\"modal-body\">\r\n    <div class=\"unenrollment-info\">\r\n        <div>\r\n            {{ 'artemisApp.courseOverview.exerciseList.details.unenrollmentModal.confirmationQuestion' | artemisTranslate }}\r\n            <b>{{ course?.title }}</b> ?\r\n        </div>\r\n        @if (!canEnrollAgain) {\r\n            <div jhiTranslate=\"artemisApp.courseOverview.exerciseList.details.unenrollmentModal.reenrollmentNotPossible\"></div>\r\n        }\r\n        @if (canEnrollAgain) {\r\n            <div>\r\n                {{ 'artemisApp.courseOverview.exerciseList.details.unenrollmentModal.reenrollmentPossible' | artemisTranslate }}\r\n                <b>{{ course?.enrollmentEndDate | artemisDate }}</b>\r\n            </div>\r\n        }\r\n    </div>\r\n    <form class=\"unenrollment-confirmation\" [formGroup]=\"confirmationForm\" style=\"margin-top: 1rem\">\r\n        <label class=\"form-control-label\" for=\"field_confirmation_input\" jhiTranslate=\"artemisApp.courseOverview.exerciseList.details.unenrollmentModal.confirmationInput\"></label>\r\n        <input type=\"text\" class=\"form-control\" name=\"confirmationInput\" id=\"field_confirmation_input\" formControlName=\"confirmationInput\" required />\r\n    </form>\r\n</div>\r\n<div class=\"modal-footer\">\r\n    <button class=\"btn btn-outline-secondary\" id=\"course-unenrollment-cancel-button\" (click)=\"onCancel()\">\r\n        <fa-icon [icon]=\"faXmark\" />\r\n        <span class=\"d-sm-inline\" jhiTranslate=\"artemisApp.courseOverview.exerciseList.details.unenrollmentModal.cancelButton\"></span>\r\n    </button>\r\n    <button class=\"btn btn-danger\" id=\"course-unenrollment-accept-button\" [disabled]=\"!isValidInput\" (click)=\"onUnenroll()\">\r\n        <span class=\"d-sm-inline\" jhiTranslate=\"artemisApp.courseOverview.exerciseList.details.unenrollmentModal.acceptButton\"></span>\r\n    </button>\r\n</div>\r\n","import { CdkScrollable, ScrollDispatcher, ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, ChangeDetectorRef, ElementRef, NgZone, Component, ChangeDetectionStrategy, ViewEncapsulation, Renderer2, EventEmitter, Injector, afterNextRender, Input, Output, ViewChild, ANIMATION_MODULE_TYPE, QueryList, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { FocusTrapFactory, FocusMonitor, InteractivityChecker } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { filter, map, mapTo, takeUntil, take, startWith, debounceTime } from 'rxjs/operators';\n\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * @docs-private\n */\nconst _c0 = [\"*\"];\nconst _c1 = [\"content\"];\nconst _c2 = [[[\"mat-drawer\"]], [[\"mat-drawer-content\"]], \"*\"];\nconst _c3 = [\"mat-drawer\", \"mat-drawer-content\", \"*\"];\nfunction MatDrawerContainer_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵlistener(\"click\", function MatDrawerContainer_Conditional_0_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._onBackdropClicked());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r1._isShowingBackdrop());\n  }\n}\nfunction MatDrawerContainer_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-drawer-content\");\n    i0.ɵɵprojection(1, 2);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c4 = [[[\"mat-sidenav\"]], [[\"mat-sidenav-content\"]], \"*\"];\nconst _c5 = [\"mat-sidenav\", \"mat-sidenav-content\", \"*\"];\nfunction MatSidenavContainer_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵlistener(\"click\", function MatSidenavContainer_Conditional_0_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._onBackdropClicked());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r1._isShowingBackdrop());\n  }\n}\nfunction MatSidenavContainer_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-sidenav-content\");\n    i0.ɵɵprojection(1, 2);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c6 = \".mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color, var(--mat-sys-on-background));background-color:var(--mat-sidenav-content-background-color, var(--mat-sys-background));box-sizing:border-box;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color, color-mix(in srgb, var(--mat-sys-neutral-variant20) 40%, transparent))}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}@media(forced-colors: active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-content.mat-drawer-content-hidden{opacity:0}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;color:var(--mat-sidenav-container-text-color, var(--mat-sys-on-surface-variant));box-shadow:var(--mat-sidenav-container-elevation-shadow, none);background-color:var(--mat-sidenav-container-background-color, var(--mat-sys-surface));border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));width:var(--mat-sidenav-container-width, 360px);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}@media(forced-colors: active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media(forced-colors: active){[dir=rtl] .mat-drawer,.mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-transition .mat-drawer{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-drawer:not(.mat-drawer-opened):not(.mat-drawer-animating){visibility:hidden;box-shadow:none}.mat-drawer:not(.mat-drawer-opened):not(.mat-drawer-animating) .mat-drawer-inner-container{display:none}.mat-drawer.mat-drawer-opened.mat-drawer-opened{transform:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color, transparent);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color, transparent);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color, transparent);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color, transparent);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto}.mat-sidenav-fixed{position:fixed}\";\nfunction throwMatDuplicatedDrawerError(position) {\n  throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/** Configures whether drawers should use auto sizing by default. */\nconst MAT_DRAWER_DEFAULT_AUTOSIZE = /*#__PURE__*/new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n  providedIn: 'root',\n  factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY\n});\n/**\n * Used to provide a drawer container to a drawer while avoiding circular references.\n * @docs-private\n */\nconst MAT_DRAWER_CONTAINER = /*#__PURE__*/new InjectionToken('MAT_DRAWER_CONTAINER');\n/** @docs-private */\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n  return false;\n}\nlet MatDrawerContent = /*#__PURE__*/(() => {\n  class MatDrawerContent extends CdkScrollable {\n    _platform = inject(Platform);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _container = inject(MatDrawerContainer);\n    constructor() {\n      const elementRef = inject(ElementRef);\n      const scrollDispatcher = inject(ScrollDispatcher);\n      const ngZone = inject(NgZone);\n      super(elementRef, scrollDispatcher, ngZone);\n    }\n    ngAfterContentInit() {\n      this._container._contentMarginChanges.subscribe(() => {\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n    /** Determines whether the content element should be hidden from the user. */\n    _shouldBeHidden() {\n      // In some modes the content is pushed based on the width of the opened sidenavs, however on\n      // the server we can't measure the sidenav so the margin is always zero. This can cause the\n      // content to jump around when it's rendered on the server and hydrated on the client. We\n      // avoid it by hiding the content on the initial render and then showing it once the sidenav\n      // has been measured on the client.\n      if (this._platform.isBrowser) {\n        return false;\n      }\n      const {\n        start,\n        end\n      } = this._container;\n      return start != null && start.mode !== 'over' && start.opened || end != null && end.mode !== 'over' && end.opened;\n    }\n    static ɵfac = function MatDrawerContent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatDrawerContent)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatDrawerContent,\n      selectors: [[\"mat-drawer-content\"]],\n      hostAttrs: [1, \"mat-drawer-content\"],\n      hostVars: 6,\n      hostBindings: function MatDrawerContent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n          i0.ɵɵclassProp(\"mat-drawer-content-hidden\", ctx._shouldBeHidden());\n        }\n      },\n      features: [i0.ɵɵProvidersFeature([{\n        provide: CdkScrollable,\n        useExisting: MatDrawerContent\n      }]), i0.ɵɵInheritDefinitionFeature],\n      ngContentSelectors: _c0,\n      decls: 1,\n      vars: 0,\n      template: function MatDrawerContent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵprojection(0);\n        }\n      },\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return MatDrawerContent;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\nlet MatDrawer = /*#__PURE__*/(() => {\n  class MatDrawer {\n    _elementRef = inject(ElementRef);\n    _focusTrapFactory = inject(FocusTrapFactory);\n    _focusMonitor = inject(FocusMonitor);\n    _platform = inject(Platform);\n    _ngZone = inject(NgZone);\n    _renderer = inject(Renderer2);\n    _interactivityChecker = inject(InteractivityChecker);\n    _doc = inject(DOCUMENT, {\n      optional: true\n    });\n    _container = inject(MAT_DRAWER_CONTAINER, {\n      optional: true\n    });\n    _focusTrap = null;\n    _elementFocusedBeforeDrawerWasOpened = null;\n    _eventCleanups;\n    /** Whether the view of the component has been attached. */\n    _isAttached;\n    /** Anchor node used to restore the drawer to its initial position. */\n    _anchor;\n    /** The side that the drawer is attached to. */\n    get position() {\n      return this._position;\n    }\n    set position(value) {\n      // Make sure we have a valid value.\n      value = value === 'end' ? 'end' : 'start';\n      if (value !== this._position) {\n        // Static inputs in Ivy are set before the element is in the DOM.\n        if (this._isAttached) {\n          this._updatePositionInParent(value);\n        }\n        this._position = value;\n        this.onPositionChanged.emit();\n      }\n    }\n    _position = 'start';\n    /** Mode of the drawer; one of 'over', 'push' or 'side'. */\n    get mode() {\n      return this._mode;\n    }\n    set mode(value) {\n      this._mode = value;\n      this._updateFocusTrapState();\n      this._modeChanged.next();\n    }\n    _mode = 'over';\n    /** Whether the drawer can be closed with the escape key or by clicking on the backdrop. */\n    get disableClose() {\n      return this._disableClose;\n    }\n    set disableClose(value) {\n      this._disableClose = coerceBooleanProperty(value);\n    }\n    _disableClose = false;\n    /**\n     * Whether the drawer should focus the first focusable element automatically when opened.\n     * Defaults to false in when `mode` is set to `side`, otherwise defaults to `true`. If explicitly\n     * enabled, focus will be moved into the sidenav in `side` mode as well.\n     * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or AutoFocusTarget\n     * instead.\n     */\n    get autoFocus() {\n      const value = this._autoFocus;\n      // Note that usually we don't allow autoFocus to be set to `first-tabbable` in `side` mode,\n      // because we don't know how the sidenav is being used, but in some cases it still makes\n      // sense to do it. The consumer can explicitly set `autoFocus`.\n      if (value == null) {\n        if (this.mode === 'side') {\n          return 'dialog';\n        } else {\n          return 'first-tabbable';\n        }\n      }\n      return value;\n    }\n    set autoFocus(value) {\n      if (value === 'true' || value === 'false' || value == null) {\n        value = coerceBooleanProperty(value);\n      }\n      this._autoFocus = value;\n    }\n    _autoFocus;\n    /**\n     * Whether the drawer is opened. We overload this because we trigger an event when it\n     * starts or end.\n     */\n    get opened() {\n      return this._opened;\n    }\n    set opened(value) {\n      this.toggle(coerceBooleanProperty(value));\n    }\n    _opened = false;\n    /** How the sidenav was opened (keypress, mouse click etc.) */\n    _openedVia;\n    /** Emits whenever the drawer has started animating. */\n    _animationStarted = new Subject();\n    /** Emits whenever the drawer is done animating. */\n    _animationEnd = new Subject();\n    /** Event emitted when the drawer open state is changed. */\n    openedChange =\n    // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n    new EventEmitter(/* isAsync */true);\n    /** Event emitted when the drawer has been opened. */\n    _openedStream = this.openedChange.pipe(filter(o => o), map(() => {}));\n    /** Event emitted when the drawer has started opening. */\n    openedStart = this._animationStarted.pipe(filter(() => this.opened), mapTo(undefined));\n    /** Event emitted when the drawer has been closed. */\n    _closedStream = this.openedChange.pipe(filter(o => !o), map(() => {}));\n    /** Event emitted when the drawer has started closing. */\n    closedStart = this._animationStarted.pipe(filter(() => !this.opened), mapTo(undefined));\n    /** Emits when the component is destroyed. */\n    _destroyed = new Subject();\n    /** Event emitted when the drawer's position changes. */\n    // tslint:disable-next-line:no-output-on-prefix\n    onPositionChanged = new EventEmitter();\n    /** Reference to the inner element that contains all the content. */\n    _content;\n    /**\n     * An observable that emits when the drawer mode changes. This is used by the drawer container to\n     * to know when to when the mode changes so it can adapt the margins on the content.\n     */\n    _modeChanged = new Subject();\n    _injector = inject(Injector);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    constructor() {\n      this.openedChange.pipe(takeUntil(this._destroyed)).subscribe(opened => {\n        if (opened) {\n          if (this._doc) {\n            this._elementFocusedBeforeDrawerWasOpened = this._doc.activeElement;\n          }\n          this._takeFocus();\n        } else if (this._isFocusWithinDrawer()) {\n          this._restoreFocus(this._openedVia || 'program');\n        }\n      });\n      /**\n       * Listen to `keydown` events outside the zone so that change detection is not run every\n       * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n       * and we don't have close disabled.\n       */\n      this._ngZone.runOutsideAngular(() => {\n        const element = this._elementRef.nativeElement;\n        fromEvent(element, 'keydown').pipe(filter(event => {\n          return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n        }), takeUntil(this._destroyed)).subscribe(event => this._ngZone.run(() => {\n          this.close();\n          event.stopPropagation();\n          event.preventDefault();\n        }));\n        this._eventCleanups = [this._renderer.listen(element, 'transitionrun', this._handleTransitionEvent), this._renderer.listen(element, 'transitionend', this._handleTransitionEvent), this._renderer.listen(element, 'transitioncancel', this._handleTransitionEvent)];\n      });\n      this._animationEnd.subscribe(() => {\n        this.openedChange.emit(this._opened);\n      });\n    }\n    /**\n     * Focuses the provided element. If the element is not focusable, it will add a tabIndex\n     * attribute to forcefully focus it. The attribute is removed after focus is moved.\n     * @param element The element to focus.\n     */\n    _forceFocus(element, options) {\n      if (!this._interactivityChecker.isFocusable(element)) {\n        element.tabIndex = -1;\n        // The tabindex attribute should be removed to avoid navigating to that element again\n        this._ngZone.runOutsideAngular(() => {\n          const callback = () => {\n            cleanupBlur();\n            cleanupMousedown();\n            element.removeAttribute('tabindex');\n          };\n          const cleanupBlur = this._renderer.listen(element, 'blur', callback);\n          const cleanupMousedown = this._renderer.listen(element, 'mousedown', callback);\n        });\n      }\n      element.focus(options);\n    }\n    /**\n     * Focuses the first element that matches the given selector within the focus trap.\n     * @param selector The CSS selector for the element to set focus to.\n     */\n    _focusByCssSelector(selector, options) {\n      let elementToFocus = this._elementRef.nativeElement.querySelector(selector);\n      if (elementToFocus) {\n        this._forceFocus(elementToFocus, options);\n      }\n    }\n    /**\n     * Moves focus into the drawer. Note that this works even if\n     * the focus trap is disabled in `side` mode.\n     */\n    _takeFocus() {\n      if (!this._focusTrap) {\n        return;\n      }\n      const element = this._elementRef.nativeElement;\n      // When autoFocus is not on the sidenav, if the element cannot be focused or does\n      // not exist, focus the sidenav itself so the keyboard navigation still works.\n      // We need to check that `focus` is a function due to Universal.\n      switch (this.autoFocus) {\n        case false:\n        case 'dialog':\n          return;\n        case true:\n        case 'first-tabbable':\n          afterNextRender(() => {\n            const hasMovedFocus = this._focusTrap.focusInitialElement();\n            if (!hasMovedFocus && typeof element.focus === 'function') {\n              element.focus();\n            }\n          }, {\n            injector: this._injector\n          });\n          break;\n        case 'first-heading':\n          this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role=\"heading\"]');\n          break;\n        default:\n          this._focusByCssSelector(this.autoFocus);\n          break;\n      }\n    }\n    /**\n     * Restores focus to the element that was originally focused when the drawer opened.\n     * If no element was focused at that time, the focus will be restored to the drawer.\n     */\n    _restoreFocus(focusOrigin) {\n      if (this.autoFocus === 'dialog') {\n        return;\n      }\n      if (this._elementFocusedBeforeDrawerWasOpened) {\n        this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, focusOrigin);\n      } else {\n        this._elementRef.nativeElement.blur();\n      }\n      this._elementFocusedBeforeDrawerWasOpened = null;\n    }\n    /** Whether focus is currently within the drawer. */\n    _isFocusWithinDrawer() {\n      const activeEl = this._doc.activeElement;\n      return !!activeEl && this._elementRef.nativeElement.contains(activeEl);\n    }\n    ngAfterViewInit() {\n      this._isAttached = true;\n      // Only update the DOM position when the sidenav is positioned at\n      // the end since we project the sidenav before the content by default.\n      if (this._position === 'end') {\n        this._updatePositionInParent('end');\n      }\n      // Needs to happen after the position is updated\n      // so the focus trap anchors are in the right place.\n      if (this._platform.isBrowser) {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        this._updateFocusTrapState();\n      }\n    }\n    ngOnDestroy() {\n      this._eventCleanups.forEach(cleanup => cleanup());\n      this._focusTrap?.destroy();\n      this._anchor?.remove();\n      this._anchor = null;\n      this._animationStarted.complete();\n      this._animationEnd.complete();\n      this._modeChanged.complete();\n      this._destroyed.next();\n      this._destroyed.complete();\n    }\n    /**\n     * Open the drawer.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n    open(openedVia) {\n      return this.toggle(true, openedVia);\n    }\n    /** Close the drawer. */\n    close() {\n      return this.toggle(false);\n    }\n    /** Closes the drawer with context that the backdrop was clicked. */\n    _closeViaBackdropClick() {\n      // If the drawer is closed upon a backdrop click, we always want to restore focus. We\n      // don't need to check whether focus is currently in the drawer, as clicking on the\n      // backdrop causes blurs the active element.\n      return this._setOpen(/* isOpen */false, /* restoreFocus */true, 'mouse');\n    }\n    /**\n     * Toggle this drawer.\n     * @param isOpen Whether the drawer should be open.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n    toggle(isOpen = !this.opened, openedVia) {\n      // If the focus is currently inside the drawer content and we are closing the drawer,\n      // restore the focus to the initially focused element (when the drawer opened).\n      if (isOpen && openedVia) {\n        this._openedVia = openedVia;\n      }\n      const result = this._setOpen(isOpen, /* restoreFocus */!isOpen && this._isFocusWithinDrawer(), this._openedVia || 'program');\n      if (!isOpen) {\n        this._openedVia = null;\n      }\n      return result;\n    }\n    /**\n     * Toggles the opened state of the drawer.\n     * @param isOpen Whether the drawer should open or close.\n     * @param restoreFocus Whether focus should be restored on close.\n     * @param focusOrigin Origin to use when restoring focus.\n     */\n    _setOpen(isOpen, restoreFocus, focusOrigin) {\n      if (isOpen === this._opened) {\n        return Promise.resolve(isOpen ? 'open' : 'close');\n      }\n      this._opened = isOpen;\n      if (this._container?._transitionsEnabled) {\n        // Note: it's importatnt to set this as early as possible,\n        // otherwise the animation can look glitchy in some cases.\n        this._setIsAnimating(true);\n      } else {\n        // Simulate the animation events if animations are disabled.\n        setTimeout(() => {\n          this._animationStarted.next();\n          this._animationEnd.next();\n        });\n      }\n      this._elementRef.nativeElement.classList.toggle('mat-drawer-opened', isOpen);\n      if (!isOpen && restoreFocus) {\n        this._restoreFocus(focusOrigin);\n      }\n      // Needed to ensure that the closing sequence fires off correctly.\n      this._changeDetectorRef.markForCheck();\n      this._updateFocusTrapState();\n      return new Promise(resolve => {\n        this.openedChange.pipe(take(1)).subscribe(open => resolve(open ? 'open' : 'close'));\n      });\n    }\n    /** Toggles whether the drawer is currently animating. */\n    _setIsAnimating(isAnimating) {\n      this._elementRef.nativeElement.classList.toggle('mat-drawer-animating', isAnimating);\n    }\n    _getWidth() {\n      return this._elementRef.nativeElement.offsetWidth || 0;\n    }\n    /** Updates the enabled state of the focus trap. */\n    _updateFocusTrapState() {\n      if (this._focusTrap) {\n        // Trap focus only if the backdrop is enabled. Otherwise, allow end user to interact with the\n        // sidenav content.\n        this._focusTrap.enabled = !!this._container?.hasBackdrop && this.opened;\n      }\n    }\n    /**\n     * Updates the position of the drawer in the DOM. We need to move the element around ourselves\n     * when it's in the `end` position so that it comes after the content and the visual order\n     * matches the tab order. We also need to be able to move it back to `start` if the sidenav\n     * started off as `end` and was changed to `start`.\n     */\n    _updatePositionInParent(newPosition) {\n      // Don't move the DOM node around on the server, because it can throw off hydration.\n      if (!this._platform.isBrowser) {\n        return;\n      }\n      const element = this._elementRef.nativeElement;\n      const parent = element.parentNode;\n      if (newPosition === 'end') {\n        if (!this._anchor) {\n          this._anchor = this._doc.createComment('mat-drawer-anchor');\n          parent.insertBefore(this._anchor, element);\n        }\n        parent.appendChild(element);\n      } else if (this._anchor) {\n        this._anchor.parentNode.insertBefore(element, this._anchor);\n      }\n    }\n    /** Event handler for animation events. */\n    _handleTransitionEvent = event => {\n      const element = this._elementRef.nativeElement;\n      if (event.target === element) {\n        this._ngZone.run(() => {\n          if (event.type === 'transitionrun') {\n            this._animationStarted.next(event);\n          } else {\n            // Don't toggle the animating state on `transitioncancel` since another animation should\n            // start afterwards. This prevents the drawer from blinking if an animation is interrupted.\n            if (event.type === 'transitionend') {\n              this._setIsAnimating(false);\n            }\n            this._animationEnd.next(event);\n          }\n        });\n      }\n    };\n    static ɵfac = function MatDrawer_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatDrawer)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatDrawer,\n      selectors: [[\"mat-drawer\"]],\n      viewQuery: function MatDrawer_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c1, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        }\n      },\n      hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\"],\n      hostVars: 11,\n      hostBindings: function MatDrawer_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"align\", null);\n          i0.ɵɵstyleProp(\"visibility\", !ctx._container && !ctx.opened ? \"hidden\" : null);\n          i0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\");\n        }\n      },\n      inputs: {\n        position: \"position\",\n        mode: \"mode\",\n        disableClose: \"disableClose\",\n        autoFocus: \"autoFocus\",\n        opened: \"opened\"\n      },\n      outputs: {\n        openedChange: \"openedChange\",\n        _openedStream: \"opened\",\n        openedStart: \"openedStart\",\n        _closedStream: \"closed\",\n        closedStart: \"closedStart\",\n        onPositionChanged: \"positionChanged\"\n      },\n      exportAs: [\"matDrawer\"],\n      ngContentSelectors: _c0,\n      decls: 3,\n      vars: 0,\n      consts: [[\"content\", \"\"], [\"cdkScrollable\", \"\", 1, \"mat-drawer-inner-container\"]],\n      template: function MatDrawer_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"div\", 1, 0);\n          i0.ɵɵprojection(2);\n          i0.ɵɵelementEnd();\n        }\n      },\n      dependencies: [CdkScrollable],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return MatDrawer;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nlet MatDrawerContainer = /*#__PURE__*/(() => {\n  class MatDrawerContainer {\n    _dir = inject(Directionality, {\n      optional: true\n    });\n    _element = inject(ElementRef);\n    _ngZone = inject(NgZone);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _animationMode = inject(ANIMATION_MODULE_TYPE, {\n      optional: true\n    });\n    _transitionsEnabled = false;\n    /** All drawers in the container. Includes drawers from inside nested containers. */\n    _allDrawers;\n    /** Drawers that belong to this container. */\n    _drawers = new QueryList();\n    _content;\n    _userContent;\n    /** The drawer child with the `start` position. */\n    get start() {\n      return this._start;\n    }\n    /** The drawer child with the `end` position. */\n    get end() {\n      return this._end;\n    }\n    /**\n     * Whether to automatically resize the container whenever\n     * the size of any of its drawers changes.\n     *\n     * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n     * the drawers on every change detection cycle. Can be configured globally via the\n     * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n     */\n    get autosize() {\n      return this._autosize;\n    }\n    set autosize(value) {\n      this._autosize = coerceBooleanProperty(value);\n    }\n    _autosize = inject(MAT_DRAWER_DEFAULT_AUTOSIZE);\n    /**\n     * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n     * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n     * mode as well.\n     */\n    get hasBackdrop() {\n      return this._drawerHasBackdrop(this._start) || this._drawerHasBackdrop(this._end);\n    }\n    set hasBackdrop(value) {\n      this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n    }\n    _backdropOverride;\n    /** Event emitted when the drawer backdrop is clicked. */\n    backdropClick = new EventEmitter();\n    /** The drawer at the start/end position, independent of direction. */\n    _start;\n    _end;\n    /**\n     * The drawer at the left/right. When direction changes, these will change as well.\n     * They're used as aliases for the above to set the left/right style properly.\n     * In LTR, _left == _start and _right == _end.\n     * In RTL, _left == _end and _right == _start.\n     */\n    _left;\n    _right;\n    /** Emits when the component is destroyed. */\n    _destroyed = new Subject();\n    /** Emits on every ngDoCheck. Used for debouncing reflows. */\n    _doCheckSubject = new Subject();\n    /**\n     * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n     * drawer is open. We use margin rather than transform even for push mode because transform breaks\n     * fixed position elements inside of the transformed element.\n     */\n    _contentMargins = {\n      left: null,\n      right: null\n    };\n    _contentMarginChanges = new Subject();\n    /** Reference to the CdkScrollable instance that wraps the scrollable content. */\n    get scrollable() {\n      return this._userContent || this._content;\n    }\n    _injector = inject(Injector);\n    constructor() {\n      const platform = inject(Platform);\n      const viewportRuler = inject(ViewportRuler);\n      // If a `Dir` directive exists up the tree, listen direction changes\n      // and update the left/right properties to point to the proper start/end.\n      this._dir?.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n        this._validateDrawers();\n        this.updateContentMargins();\n      });\n      // Since the minimum width of the sidenav depends on the viewport width,\n      // we need to recompute the margins if the viewport changes.\n      viewportRuler.change().pipe(takeUntil(this._destroyed)).subscribe(() => this.updateContentMargins());\n      if (this._animationMode !== 'NoopAnimations' && platform.isBrowser) {\n        this._ngZone.runOutsideAngular(() => {\n          // Enable the animations after a delay in order to skip\n          // the initial transition if a drawer is open by default.\n          setTimeout(() => {\n            this._element.nativeElement.classList.add('mat-drawer-transition');\n            this._transitionsEnabled = true;\n          }, 200);\n        });\n      }\n    }\n    ngAfterContentInit() {\n      this._allDrawers.changes.pipe(startWith(this._allDrawers), takeUntil(this._destroyed)).subscribe(drawer => {\n        this._drawers.reset(drawer.filter(item => !item._container || item._container === this));\n        this._drawers.notifyOnChanges();\n      });\n      this._drawers.changes.pipe(startWith(null)).subscribe(() => {\n        this._validateDrawers();\n        this._drawers.forEach(drawer => {\n          this._watchDrawerToggle(drawer);\n          this._watchDrawerPosition(drawer);\n          this._watchDrawerMode(drawer);\n        });\n        if (!this._drawers.length || this._isDrawerOpen(this._start) || this._isDrawerOpen(this._end)) {\n          this.updateContentMargins();\n        }\n        this._changeDetectorRef.markForCheck();\n      });\n      // Avoid hitting the NgZone through the debounce timeout.\n      this._ngZone.runOutsideAngular(() => {\n        this._doCheckSubject.pipe(debounceTime(10),\n        // Arbitrary debounce time, less than a frame at 60fps\n        takeUntil(this._destroyed)).subscribe(() => this.updateContentMargins());\n      });\n    }\n    ngOnDestroy() {\n      this._contentMarginChanges.complete();\n      this._doCheckSubject.complete();\n      this._drawers.destroy();\n      this._destroyed.next();\n      this._destroyed.complete();\n    }\n    /** Calls `open` of both start and end drawers */\n    open() {\n      this._drawers.forEach(drawer => drawer.open());\n    }\n    /** Calls `close` of both start and end drawers */\n    close() {\n      this._drawers.forEach(drawer => drawer.close());\n    }\n    /**\n     * Recalculates and updates the inline styles for the content. Note that this should be used\n     * sparingly, because it causes a reflow.\n     */\n    updateContentMargins() {\n      // 1. For drawers in `over` mode, they don't affect the content.\n      // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n      //    left margin (for left drawer) or right margin (for right the drawer).\n      // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n      //    adding to the left or right margin and simultaneously subtracting the same amount of\n      //    margin from the other side.\n      let left = 0;\n      let right = 0;\n      if (this._left && this._left.opened) {\n        if (this._left.mode == 'side') {\n          left += this._left._getWidth();\n        } else if (this._left.mode == 'push') {\n          const width = this._left._getWidth();\n          left += width;\n          right -= width;\n        }\n      }\n      if (this._right && this._right.opened) {\n        if (this._right.mode == 'side') {\n          right += this._right._getWidth();\n        } else if (this._right.mode == 'push') {\n          const width = this._right._getWidth();\n          right += width;\n          left -= width;\n        }\n      }\n      // If either `right` or `left` is zero, don't set a style to the element. This\n      // allows users to specify a custom size via CSS class in SSR scenarios where the\n      // measured widths will always be zero. Note that we reset to `null` here, rather\n      // than below, in order to ensure that the types in the `if` below are consistent.\n      left = left || null;\n      right = right || null;\n      if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n        this._contentMargins = {\n          left,\n          right\n        };\n        // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n        // to do it only when something changed, otherwise we can end up hitting the zone too often.\n        this._ngZone.run(() => this._contentMarginChanges.next(this._contentMargins));\n      }\n    }\n    ngDoCheck() {\n      // If users opted into autosizing, do a check every change detection cycle.\n      if (this._autosize && this._isPushed()) {\n        // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n        this._ngZone.runOutsideAngular(() => this._doCheckSubject.next());\n      }\n    }\n    /**\n     * Subscribes to drawer events in order to set a class on the main container element when the\n     * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     */\n    _watchDrawerToggle(drawer) {\n      drawer._animationStarted.pipe(takeUntil(this._drawers.changes)).subscribe(() => {\n        this.updateContentMargins();\n        this._changeDetectorRef.markForCheck();\n      });\n      if (drawer.mode !== 'side') {\n        drawer.openedChange.pipe(takeUntil(this._drawers.changes)).subscribe(() => this._setContainerClass(drawer.opened));\n      }\n    }\n    /**\n     * Subscribes to drawer onPositionChanged event in order to\n     * re-validate drawers when the position changes.\n     */\n    _watchDrawerPosition(drawer) {\n      // NOTE: We need to wait for the microtask queue to be empty before validating,\n      // since both drawers may be swapping positions at the same time.\n      drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe(() => {\n        afterNextRender({\n          read: () => this._validateDrawers()\n        }, {\n          injector: this._injector\n        });\n      });\n    }\n    /** Subscribes to changes in drawer mode so we can run change detection. */\n    _watchDrawerMode(drawer) {\n      drawer._modeChanged.pipe(takeUntil(merge(this._drawers.changes, this._destroyed))).subscribe(() => {\n        this.updateContentMargins();\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n    /** Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element. */\n    _setContainerClass(isAdd) {\n      const classList = this._element.nativeElement.classList;\n      const className = 'mat-drawer-container-has-open';\n      if (isAdd) {\n        classList.add(className);\n      } else {\n        classList.remove(className);\n      }\n    }\n    /** Validate the state of the drawer children components. */\n    _validateDrawers() {\n      this._start = this._end = null;\n      // Ensure that we have at most one start and one end drawer.\n      this._drawers.forEach(drawer => {\n        if (drawer.position == 'end') {\n          if (this._end != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatDuplicatedDrawerError('end');\n          }\n          this._end = drawer;\n        } else {\n          if (this._start != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatDuplicatedDrawerError('start');\n          }\n          this._start = drawer;\n        }\n      });\n      this._right = this._left = null;\n      // Detect if we're LTR or RTL.\n      if (this._dir && this._dir.value === 'rtl') {\n        this._left = this._end;\n        this._right = this._start;\n      } else {\n        this._left = this._start;\n        this._right = this._end;\n      }\n    }\n    /** Whether the container is being pushed to the side by one of the drawers. */\n    _isPushed() {\n      return this._isDrawerOpen(this._start) && this._start.mode != 'over' || this._isDrawerOpen(this._end) && this._end.mode != 'over';\n    }\n    _onBackdropClicked() {\n      this.backdropClick.emit();\n      this._closeModalDrawersViaBackdrop();\n    }\n    _closeModalDrawersViaBackdrop() {\n      // Close all open drawers where closing is not disabled and the mode is not `side`.\n      [this._start, this._end].filter(drawer => drawer && !drawer.disableClose && this._drawerHasBackdrop(drawer)).forEach(drawer => drawer._closeViaBackdropClick());\n    }\n    _isShowingBackdrop() {\n      return this._isDrawerOpen(this._start) && this._drawerHasBackdrop(this._start) || this._isDrawerOpen(this._end) && this._drawerHasBackdrop(this._end);\n    }\n    _isDrawerOpen(drawer) {\n      return drawer != null && drawer.opened;\n    }\n    // Whether argument drawer should have a backdrop when it opens\n    _drawerHasBackdrop(drawer) {\n      if (this._backdropOverride == null) {\n        return !!drawer && drawer.mode !== 'side';\n      }\n      return this._backdropOverride;\n    }\n    static ɵfac = function MatDrawerContainer_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatDrawerContainer)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatDrawerContainer,\n      selectors: [[\"mat-drawer-container\"]],\n      contentQueries: function MatDrawerContainer_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MatDrawerContent, 5);\n          i0.ɵɵcontentQuery(dirIndex, MatDrawer, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._content = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n        }\n      },\n      viewQuery: function MatDrawerContainer_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(MatDrawerContent, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._userContent = _t.first);\n        }\n      },\n      hostAttrs: [1, \"mat-drawer-container\"],\n      hostVars: 2,\n      hostBindings: function MatDrawerContainer_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n        }\n      },\n      inputs: {\n        autosize: \"autosize\",\n        hasBackdrop: \"hasBackdrop\"\n      },\n      outputs: {\n        backdropClick: \"backdropClick\"\n      },\n      exportAs: [\"matDrawerContainer\"],\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_DRAWER_CONTAINER,\n        useExisting: MatDrawerContainer\n      }])],\n      ngContentSelectors: _c3,\n      decls: 4,\n      vars: 2,\n      consts: [[1, \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\"], [1, \"mat-drawer-backdrop\", 3, \"click\"]],\n      template: function MatDrawerContainer_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef(_c2);\n          i0.ɵɵtemplate(0, MatDrawerContainer_Conditional_0_Template, 1, 2, \"div\", 0);\n          i0.ɵɵprojection(1);\n          i0.ɵɵprojection(2, 1);\n          i0.ɵɵtemplate(3, MatDrawerContainer_Conditional_3_Template, 2, 0, \"mat-drawer-content\");\n        }\n        if (rf & 2) {\n          i0.ɵɵconditional(ctx.hasBackdrop ? 0 : -1);\n          i0.ɵɵadvance(3);\n          i0.ɵɵconditional(!ctx._content ? 3 : -1);\n        }\n      },\n      dependencies: [MatDrawerContent],\n      styles: [\".mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color, var(--mat-sys-on-background));background-color:var(--mat-sidenav-content-background-color, var(--mat-sys-background));box-sizing:border-box;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color, color-mix(in srgb, var(--mat-sys-neutral-variant20) 40%, transparent))}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}@media(forced-colors: active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-content.mat-drawer-content-hidden{opacity:0}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;color:var(--mat-sidenav-container-text-color, var(--mat-sys-on-surface-variant));box-shadow:var(--mat-sidenav-container-elevation-shadow, none);background-color:var(--mat-sidenav-container-background-color, var(--mat-sys-surface));border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));width:var(--mat-sidenav-container-width, 360px);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}@media(forced-colors: active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media(forced-colors: active){[dir=rtl] .mat-drawer,.mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-left-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-bottom-right-radius:var(--mat-sidenav-container-shape, var(--mat-sys-corner-large));border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-transition .mat-drawer{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-drawer:not(.mat-drawer-opened):not(.mat-drawer-animating){visibility:hidden;box-shadow:none}.mat-drawer:not(.mat-drawer-opened):not(.mat-drawer-animating) .mat-drawer-inner-container{display:none}.mat-drawer.mat-drawer-opened.mat-drawer-opened{transform:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color, transparent);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color, transparent);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color, transparent);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color, transparent);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto}.mat-sidenav-fixed{position:fixed}\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return MatDrawerContainer;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatSidenavContent = /*#__PURE__*/(() => {\n  class MatSidenavContent extends MatDrawerContent {\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵMatSidenavContent_BaseFactory;\n      return function MatSidenavContent_Factory(__ngFactoryType__) {\n        return (ɵMatSidenavContent_BaseFactory || (ɵMatSidenavContent_BaseFactory = i0.ɵɵgetInheritedFactory(MatSidenavContent)))(__ngFactoryType__ || MatSidenavContent);\n      };\n    })();\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatSidenavContent,\n      selectors: [[\"mat-sidenav-content\"]],\n      hostAttrs: [1, \"mat-drawer-content\", \"mat-sidenav-content\"],\n      features: [i0.ɵɵProvidersFeature([{\n        provide: CdkScrollable,\n        useExisting: MatSidenavContent\n      }]), i0.ɵɵInheritDefinitionFeature],\n      ngContentSelectors: _c0,\n      decls: 1,\n      vars: 0,\n      template: function MatSidenavContent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵprojection(0);\n        }\n      },\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return MatSidenavContent;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatSidenav = /*#__PURE__*/(() => {\n  class MatSidenav extends MatDrawer {\n    /** Whether the sidenav is fixed in the viewport. */\n    get fixedInViewport() {\n      return this._fixedInViewport;\n    }\n    set fixedInViewport(value) {\n      this._fixedInViewport = coerceBooleanProperty(value);\n    }\n    _fixedInViewport = false;\n    /**\n     * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n     * mode.\n     */\n    get fixedTopGap() {\n      return this._fixedTopGap;\n    }\n    set fixedTopGap(value) {\n      this._fixedTopGap = coerceNumberProperty(value);\n    }\n    _fixedTopGap = 0;\n    /**\n     * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n     * fixed mode.\n     */\n    get fixedBottomGap() {\n      return this._fixedBottomGap;\n    }\n    set fixedBottomGap(value) {\n      this._fixedBottomGap = coerceNumberProperty(value);\n    }\n    _fixedBottomGap = 0;\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵMatSidenav_BaseFactory;\n      return function MatSidenav_Factory(__ngFactoryType__) {\n        return (ɵMatSidenav_BaseFactory || (ɵMatSidenav_BaseFactory = i0.ɵɵgetInheritedFactory(MatSidenav)))(__ngFactoryType__ || MatSidenav);\n      };\n    })();\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatSidenav,\n      selectors: [[\"mat-sidenav\"]],\n      hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\", \"mat-sidenav\"],\n      hostVars: 15,\n      hostBindings: function MatSidenav_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"align\", null);\n          i0.ɵɵstyleProp(\"top\", ctx.fixedInViewport ? ctx.fixedTopGap : null, \"px\")(\"bottom\", ctx.fixedInViewport ? ctx.fixedBottomGap : null, \"px\");\n          i0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-sidenav-fixed\", ctx.fixedInViewport);\n        }\n      },\n      inputs: {\n        fixedInViewport: \"fixedInViewport\",\n        fixedTopGap: \"fixedTopGap\",\n        fixedBottomGap: \"fixedBottomGap\"\n      },\n      exportAs: [\"matSidenav\"],\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MatDrawer,\n        useExisting: MatSidenav\n      }]), i0.ɵɵInheritDefinitionFeature],\n      ngContentSelectors: _c0,\n      decls: 3,\n      vars: 0,\n      consts: [[\"content\", \"\"], [\"cdkScrollable\", \"\", 1, \"mat-drawer-inner-container\"]],\n      template: function MatSidenav_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"div\", 1, 0);\n          i0.ɵɵprojection(2);\n          i0.ɵɵelementEnd();\n        }\n      },\n      dependencies: [CdkScrollable],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return MatSidenav;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatSidenavContainer = /*#__PURE__*/(() => {\n  class MatSidenavContainer extends MatDrawerContainer {\n    _allDrawers = undefined;\n    // We need an initializer here to avoid a TS error.\n    _content = undefined;\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵMatSidenavContainer_BaseFactory;\n      return function MatSidenavContainer_Factory(__ngFactoryType__) {\n        return (ɵMatSidenavContainer_BaseFactory || (ɵMatSidenavContainer_BaseFactory = i0.ɵɵgetInheritedFactory(MatSidenavContainer)))(__ngFactoryType__ || MatSidenavContainer);\n      };\n    })();\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatSidenavContainer,\n      selectors: [[\"mat-sidenav-container\"]],\n      contentQueries: function MatSidenavContainer_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MatSidenavContent, 5);\n          i0.ɵɵcontentQuery(dirIndex, MatSidenav, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._content = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n        }\n      },\n      hostAttrs: [1, \"mat-drawer-container\", \"mat-sidenav-container\"],\n      hostVars: 2,\n      hostBindings: function MatSidenavContainer_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n        }\n      },\n      exportAs: [\"matSidenavContainer\"],\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_DRAWER_CONTAINER,\n        useExisting: MatSidenavContainer\n      }, {\n        provide: MatDrawerContainer,\n        useExisting: MatSidenavContainer\n      }]), i0.ɵɵInheritDefinitionFeature],\n      ngContentSelectors: _c5,\n      decls: 4,\n      vars: 2,\n      consts: [[1, \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\"], [1, \"mat-drawer-backdrop\", 3, \"click\"]],\n      template: function MatSidenavContainer_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef(_c4);\n          i0.ɵɵtemplate(0, MatSidenavContainer_Conditional_0_Template, 1, 2, \"div\", 0);\n          i0.ɵɵprojection(1);\n          i0.ɵɵprojection(2, 1);\n          i0.ɵɵtemplate(3, MatSidenavContainer_Conditional_3_Template, 2, 0, \"mat-sidenav-content\");\n        }\n        if (rf & 2) {\n          i0.ɵɵconditional(ctx.hasBackdrop ? 0 : -1);\n          i0.ɵɵadvance(3);\n          i0.ɵɵconditional(!ctx._content ? 3 : -1);\n        }\n      },\n      dependencies: [MatSidenavContent],\n      styles: [_c6],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return MatSidenavContainer;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatSidenavModule = /*#__PURE__*/(() => {\n  class MatSidenavModule {\n    static ɵfac = function MatSidenavModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatSidenavModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatSidenavModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [MatCommonModule, CdkScrollableModule, CdkScrollableModule, MatCommonModule]\n    });\n  }\n  return MatSidenavModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Animations used by the Material drawers.\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst matDrawerAnimations = {\n  // Represents\n  // trigger('transform', [\n  //   // We remove the `transform` here completely, rather than setting it to zero, because:\n  //   // 1. Having a transform can cause elements with ripples or an animated\n  //   //    transform to shift around in Chrome with an RTL layout (see #10023).\n  //   // 2. 3d transforms causes text to appear blurry on IE and Edge.\n  //   state(\n  //     'open, open-instant',\n  //     style({\n  //       'transform': 'none',\n  //       'visibility': 'visible',\n  //     }),\n  //   ),\n  //   state(\n  //     'void',\n  //     style({\n  //       // Avoids the shadow showing up when closed in SSR.\n  //       'box-shadow': 'none',\n  //       'visibility': 'hidden',\n  //     }),\n  //   ),\n  //   transition('void => open-instant', animate('0ms')),\n  //   transition(\n  //     'void <=> open, open-instant => void',\n  //     animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'),\n  //   ),\n  // ])\n  /** Animation that slides a drawer in and out. */\n  transformDrawer: {\n    type: 7,\n    name: 'transform',\n    definitions: [{\n      type: 0,\n      name: 'open, open-instant',\n      styles: {\n        type: 6,\n        styles: {\n          transform: 'none',\n          visibility: 'visible'\n        },\n        offset: null\n      }\n    }, {\n      type: 0,\n      name: 'void',\n      styles: {\n        type: 6,\n        styles: {\n          'box-shadow': 'none',\n          visibility: 'hidden'\n        },\n        offset: null\n      }\n    }, {\n      type: 1,\n      expr: 'void => open-instant',\n      animation: {\n        type: 4,\n        styles: null,\n        timings: '0ms'\n      },\n      options: null\n    }, {\n      type: 1,\n      expr: 'void <=> open, open-instant => void',\n      animation: {\n        type: 4,\n        styles: null,\n        timings: '400ms cubic-bezier(0.25, 0.8, 0.25, 1)'\n      },\n      options: null\n    }],\n    options: {}\n  }\n};\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DRAWER_DEFAULT_AUTOSIZE, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent, MatSidenavModule, matDrawerAnimations, throwMatDuplicatedDrawerError };\n","import { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport {\r\n    AfterViewInit,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    EmbeddedViewRef,\r\n    HostListener,\r\n    OnDestroy,\r\n    OnInit,\r\n    QueryList,\r\n    TemplateRef,\r\n    ViewChild,\r\n    ViewChildren,\r\n    ViewContainerRef,\r\n    inject,\r\n} from '@angular/core';\r\nimport { ActivatedRoute, Router, RouterLink, RouterLinkActive, RouterOutlet } from '@angular/router';\r\nimport {\r\n    IconDefinition,\r\n    faChalkboardUser,\r\n    faChartBar,\r\n    faChartColumn,\r\n    faChevronLeft,\r\n    faChevronRight,\r\n    faCircleNotch,\r\n    faClipboard,\r\n    faComments,\r\n    faDoorOpen,\r\n    faEllipsis,\r\n    faEye,\r\n    faFlag,\r\n    faGraduationCap,\r\n    faListAlt,\r\n    faNetworkWired,\r\n    faPersonChalkboard,\r\n    faQuestion,\r\n    faSync,\r\n    faTable,\r\n    faTimes,\r\n    faWrench,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { NgbDropdown, NgbDropdownButtonItem, NgbDropdownItem, NgbDropdownMenu, NgbDropdownToggle, NgbModal, NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AlertService, AlertType } from 'app/core/util/alert.service';\r\nimport { WebsocketService } from 'app/core/websocket/websocket.service';\r\nimport { CourseAccessStorageService } from 'app/course/course-access-storage.service';\r\nimport { CourseStorageService } from 'app/course/manage/course-storage.service';\r\nimport { Course, isCommunicationEnabled, isMessagingEnabled } from 'app/entities/course.model';\r\nimport { QuizExercise } from 'app/entities/quiz/quiz-exercise.model';\r\nimport { TeamAssignmentPayload } from 'app/entities/team.model';\r\nimport { CourseExerciseService } from 'app/exercises/shared/course-exercises/course-exercise.service';\r\nimport { TeamService } from 'app/exercises/shared/team/team.service';\r\nimport { FeatureToggle } from 'app/shared/feature-toggle/feature-toggle.service';\r\nimport { CachingStrategy } from 'app/shared/image/secured-image.component';\r\nimport { ProfileService } from 'app/shared/layouts/profiles/profile.service';\r\nimport { MetisConversationService } from 'app/shared/metis/metis-conversation.service';\r\nimport { ArtemisServerDateService } from 'app/shared/server-date.service';\r\nimport { BarControlConfiguration, BarControlConfigurationProvider } from 'app/shared/tab-bar/tab-bar';\r\nimport dayjs from 'dayjs/esm';\r\nimport { Observable, Subject, Subscription, catchError, firstValueFrom, map, of, takeUntil, throwError } from 'rxjs';\r\nimport { facSidebar } from 'app/icons/icons';\r\nimport { CourseManagementService } from '../course/manage/course-management.service';\r\nimport { CourseExercisesComponent } from './course-exercises/course-exercises.component';\r\nimport { CourseLecturesComponent } from './course-lectures/course-lectures.component';\r\nimport { CourseExamsComponent } from './course-exams/course-exams.component';\r\nimport { CourseTutorialGroupsComponent } from './course-tutorial-groups/course-tutorial-groups.component';\r\nimport { ExamParticipationService } from 'app/exam/participate/exam-participation.service';\r\nimport { CourseConversationsComponent } from 'app/overview/course-conversations/course-conversations.component';\r\nimport { sortCourses } from 'app/shared/util/course.util';\r\nimport { CourseUnenrollmentModalComponent } from './course-unenrollment-modal.component';\r\nimport { LtiService } from 'app/shared/service/lti.service';\r\nimport { CourseSidebarService } from 'app/overview/course-sidebar.service';\r\nimport { PROFILE_ATLAS } from 'app/app.constants';\r\nimport { NgClass, NgStyle, NgTemplateOutlet, SlicePipe } from '@angular/common';\r\nimport { MatSidenav, MatSidenavContainer, MatSidenavContent } from '@angular/material/sidenav';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { TranslateDirective } from '../shared/language/translate.directive';\r\nimport { SecuredImageComponent } from '../shared/image/secured-image.component';\r\nimport { OrionFilterDirective } from '../shared/orion/orion-filter.directive';\r\nimport { FeatureToggleHideDirective } from '../shared/feature-toggle/feature-toggle-hide.directive';\r\n\r\ninterface CourseActionItem {\r\n    title: string;\r\n    icon?: IconDefinition;\r\n    translation: string;\r\n    action?: (item?: CourseActionItem) => void;\r\n}\r\n\r\ninterface SidebarItem {\r\n    routerLink: string;\r\n    icon?: IconDefinition;\r\n    title: string;\r\n    testId?: string;\r\n    translation: string;\r\n    hasInOrionProperty?: boolean;\r\n    showInOrionWindow?: boolean;\r\n    guidedTour?: boolean;\r\n    featureToggle?: FeatureToggle;\r\n    hidden: boolean;\r\n}\r\n\r\n@Component({\r\n    selector: 'jhi-course-overview',\r\n    templateUrl: './course-overview.component.html',\r\n    styleUrls: ['course-overview.scss', 'course-overview.component.scss'],\r\n    providers: [MetisConversationService],\r\n    imports: [\r\n        NgClass,\r\n        MatSidenavContainer,\r\n        MatSidenav,\r\n        NgbDropdown,\r\n        NgbDropdownToggle,\r\n        NgTemplateOutlet,\r\n        NgbDropdownMenu,\r\n        NgbDropdownButtonItem,\r\n        NgbDropdownItem,\r\n        FaIconComponent,\r\n        TranslateDirective,\r\n        NgbTooltip,\r\n        MatSidenavContent,\r\n        NgStyle,\r\n        RouterLink,\r\n        RouterOutlet,\r\n        SecuredImageComponent,\r\n        OrionFilterDirective,\r\n        RouterLinkActive,\r\n        FeatureToggleHideDirective,\r\n        SlicePipe,\r\n    ],\r\n})\r\nexport class CourseOverviewComponent implements OnInit, OnDestroy, AfterViewInit {\r\n    private courseService = inject(CourseManagementService);\r\n    private courseExerciseService = inject(CourseExerciseService);\r\n    private courseStorageService = inject(CourseStorageService);\r\n    private route = inject(ActivatedRoute);\r\n    private teamService = inject(TeamService);\r\n    private websocketService = inject(WebsocketService);\r\n    private serverDateService = inject(ArtemisServerDateService);\r\n    private alertService = inject(AlertService);\r\n    private changeDetectorRef = inject(ChangeDetectorRef);\r\n    private metisConversationService = inject(MetisConversationService);\r\n    private router = inject(Router);\r\n    private courseAccessStorageService = inject(CourseAccessStorageService);\r\n    private profileService = inject(ProfileService);\r\n    private modalService = inject(NgbModal);\r\n    private examParticipationService = inject(ExamParticipationService);\r\n    private ltiService = inject(LtiService);\r\n\r\n    private ngUnsubscribe = new Subject<void>();\r\n    private closeSidebarEventSubscription: Subscription;\r\n    private openSidebarEventSubscription: Subscription;\r\n    private toggleSidebarEventSubscription: Subscription;\r\n\r\n    // course id of the course that is currently displayed\r\n    private courseId: number;\r\n    private subscription: Subscription;\r\n    dashboardSubscription: Subscription;\r\n    // currently displayed course\r\n    course?: Course;\r\n    // all courses of the current user, used for the dropdown menu\r\n    courses?: Course[];\r\n    refreshingCourse = false;\r\n    private teamAssignmentUpdateListener: Subscription;\r\n    private quizExercisesChannel: string;\r\n    hasUnreadMessages: boolean;\r\n    communicationRouteLoaded: boolean;\r\n    atlasEnabled = false;\r\n    isProduction = true;\r\n    isTestServer = false;\r\n    pageTitle: string;\r\n    hasSidebar = false;\r\n    sidebarItems: SidebarItem[];\r\n    courseActionItems: CourseActionItem[];\r\n    isNotManagementView: boolean;\r\n    canUnenroll: boolean;\r\n    isNavbarCollapsed = false;\r\n    isSidebarCollapsed = false;\r\n    profileSubscription?: Subscription;\r\n    showRefreshButton = false;\r\n    isExamStarted = false;\r\n    private examStartedSubscription: Subscription;\r\n    readonly MIN_DISPLAYED_COURSES: number = 6;\r\n    isShownViaLti = false;\r\n    private ltiSubscription: Subscription;\r\n\r\n    // Properties to track hidden items for dropdown menu\r\n    anyItemHidden = false;\r\n    hiddenItems: SidebarItem[] = [];\r\n    readonly WINDOW_OFFSET: number = 300;\r\n    readonly ITEM_HEIGHT: number = 38;\r\n\r\n    private conversationServiceInstantiated = false;\r\n    private checkedForUnreadMessages = false;\r\n    activatedComponentReference: CourseExercisesComponent | CourseLecturesComponent | CourseExamsComponent | CourseTutorialGroupsComponent | CourseConversationsComponent;\r\n\r\n    // Rendered embedded view for controls in the bar so we can destroy it if needed\r\n    private controlsEmbeddedView?: EmbeddedViewRef<any>;\r\n    // Subscription for the course fetching\r\n    private loadCourseSubscription?: Subscription;\r\n    // Subscription to listen to changes on the control configuration\r\n    private controlsSubscription?: Subscription;\r\n    // Subscription to listen for the ng-container for controls to be mounted\r\n    private vcSubscription?: Subscription;\r\n    // The current controls template from the sub-route component to render\r\n    private controls?: TemplateRef<any>;\r\n    // The current controls configuration from the sub-route component\r\n    public controlConfiguration?: BarControlConfiguration;\r\n\r\n    // ng-container mount point extracted from our own template so we can render sth in it\r\n    @ViewChild('controlsViewContainer', { read: ViewContainerRef }) controlsViewContainer: ViewContainerRef;\r\n    // Using a list query to be able to listen for changes (late mount); need both as this only returns native nodes\r\n    @ViewChildren('controlsViewContainer') controlsViewContainerAsList: QueryList<ViewContainerRef>;\r\n\r\n    @ViewChild('itemsDrop', { static: true }) itemsDrop: NgbDropdown;\r\n\r\n    // Icons\r\n    faTimes = faTimes;\r\n    faEye = faEye;\r\n    faWrench = faWrench;\r\n    faTable = faTable;\r\n    faFlag = faFlag;\r\n    faListAlt = faListAlt;\r\n    faChartBar = faChartBar;\r\n    faClipboard = faClipboard;\r\n    faSync = faSync;\r\n    faCircleNotch = faCircleNotch;\r\n    faChevronRight = faChevronRight;\r\n    faChevronLeft = faChevronLeft;\r\n    facSidebar = facSidebar;\r\n    faEllipsis = faEllipsis;\r\n    faQuestion = faQuestion;\r\n    faChartColumn = faChartColumn;\r\n\r\n    FeatureToggle = FeatureToggle;\r\n    CachingStrategy = CachingStrategy;\r\n\r\n    readonly isMessagingEnabled = isMessagingEnabled;\r\n    readonly isCommunicationEnabled = isCommunicationEnabled;\r\n\r\n    private courseSidebarService: CourseSidebarService = inject(CourseSidebarService);\r\n\r\n    async ngOnInit() {\r\n        this.openSidebarEventSubscription = this.courseSidebarService.openSidebar$.subscribe(() => {\r\n            this.isSidebarCollapsed = true;\r\n        });\r\n\r\n        this.closeSidebarEventSubscription = this.courseSidebarService.closeSidebar$.subscribe(() => {\r\n            this.isSidebarCollapsed = false;\r\n        });\r\n\r\n        this.toggleSidebarEventSubscription = this.courseSidebarService.toggleSidebar$.subscribe(() => {\r\n            this.isSidebarCollapsed = this.activatedComponentReference?.isCollapsed ?? !this.isSidebarCollapsed;\r\n        });\r\n        this.subscription = this.route.params.subscribe((params) => {\r\n            this.courseId = Number(params.courseId);\r\n        });\r\n        this.profileSubscription = this.profileService.getProfileInfo()?.subscribe((profileInfo) => {\r\n            this.isProduction = profileInfo?.inProduction;\r\n            this.isTestServer = profileInfo.testServer ?? false;\r\n            this.atlasEnabled = profileInfo.activeProfiles.includes(PROFILE_ATLAS);\r\n        });\r\n        this.examStartedSubscription = this.examParticipationService.examIsStarted$.subscribe((isStarted) => {\r\n            this.isExamStarted = isStarted;\r\n        });\r\n        this.getCollapseStateFromStorage();\r\n        this.course = this.courseStorageService.getCourse(this.courseId);\r\n        this.isNotManagementView = !this.router.url.startsWith('/course-management');\r\n        // Notify the course access storage service that the course has been accessed\r\n        // If course is not active, it means that it is accessed from course archive, which should not\r\n        // be stored in local storage and therefore displayed in recently accessed\r\n        if (this.course && this.isCourseActive(this.course)) {\r\n            this.courseAccessStorageService.onCourseAccessed(\r\n                this.courseId,\r\n                CourseAccessStorageService.STORAGE_KEY,\r\n                CourseAccessStorageService.MAX_DISPLAYED_RECENTLY_ACCESSED_COURSES_OVERVIEW,\r\n            );\r\n            this.courseAccessStorageService.onCourseAccessed(\r\n                this.courseId,\r\n                CourseAccessStorageService.STORAGE_KEY_DROPDOWN,\r\n                CourseAccessStorageService.MAX_DISPLAYED_RECENTLY_ACCESSED_COURSES_DROPDOWN,\r\n            );\r\n        }\r\n\r\n        await firstValueFrom(this.loadCourse());\r\n        await this.initAfterCourseLoad();\r\n        this.sidebarItems = this.getSidebarItems();\r\n        this.courseActionItems = this.getCourseActionItems();\r\n        this.updateVisibleNavbarItems(window.innerHeight);\r\n        await this.updateRecentlyAccessedCourses();\r\n        this.isSidebarCollapsed = this.activatedComponentReference?.isCollapsed ?? false;\r\n        this.ltiSubscription = this.ltiService.isShownViaLti$.subscribe((isShownViaLti) => {\r\n            this.isShownViaLti = isShownViaLti;\r\n        });\r\n    }\r\n\r\n    /** Listen window resize event by height */\r\n    @HostListener('window: resize', ['$event'])\r\n    onResize() {\r\n        if (this.itemsDrop) {\r\n            this.updateVisibleNavbarItems(window.innerHeight);\r\n            if (!this.anyItemHidden) this.itemsDrop.close();\r\n        }\r\n    }\r\n\r\n    /** Update sidebar item's hidden property based on the window height to display three-dots */\r\n    updateVisibleNavbarItems(height: number) {\r\n        const threshold = this.calculateThreshold();\r\n        this.applyThreshold(threshold, height);\r\n    }\r\n\r\n    /**  Applies the visibility threshold to sidebar items, determining which items should be hidden.*/\r\n    private applyThreshold(threshold: number, height: number) {\r\n        this.anyItemHidden = false;\r\n        this.hiddenItems = [];\r\n        // Reverse the sidebar items to remove items starting from the bottom\r\n        const reversedSidebarItems = [...this.sidebarItems].reverse();\r\n        reversedSidebarItems.forEach((item, index) => {\r\n            const currentThreshold = threshold - index * this.ITEM_HEIGHT;\r\n            item.hidden = height <= currentThreshold;\r\n            if (item.hidden) {\r\n                this.anyItemHidden = true;\r\n                this.hiddenItems.unshift(item);\r\n            }\r\n        });\r\n    }\r\n\r\n    /** Calculate threshold levels based on the number of entries in the sidebar */\r\n    calculateThreshold(): number {\r\n        return this.sidebarItems.length * this.ITEM_HEIGHT + this.WINDOW_OFFSET;\r\n    }\r\n\r\n    /** initialize courses attribute by retrieving all courses from the server */\r\n    async updateRecentlyAccessedCourses() {\r\n        this.dashboardSubscription = this.courseService.findAllForDropdown().subscribe({\r\n            next: (res: HttpResponse<Course[]>) => {\r\n                if (res.body) {\r\n                    const courses: Course[] = [];\r\n                    res.body?.forEach((course) => {\r\n                        courses.push(course);\r\n                    });\r\n                    this.courses = sortCourses(courses);\r\n                    if (this.courses.length > this.MIN_DISPLAYED_COURSES) {\r\n                        const lastAccessedCourseIds = this.courseAccessStorageService.getLastAccessedCourses(CourseAccessStorageService.STORAGE_KEY_DROPDOWN);\r\n                        this.courses = this.courses.filter((course) => lastAccessedCourseIds.includes(course.id!));\r\n                    }\r\n                    this.courses = this.courses.filter((course) => course.id !== this.courseId);\r\n                }\r\n            },\r\n        });\r\n    }\r\n\r\n    /** Navigate to a new Course */\r\n    switchCourse(course: Course) {\r\n        this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\r\n            this.router.navigate(['courses', course.id, 'exercises']);\r\n        });\r\n    }\r\n\r\n    getCourseActionItems(): CourseActionItem[] {\r\n        const courseActionItems = [];\r\n        this.canUnenroll = this.canStudentUnenroll() && !this.course?.isAtLeastTutor;\r\n        if (this.canUnenroll) {\r\n            const unenrollItem: CourseActionItem = this.getUnenrollItem();\r\n            courseActionItems.push(unenrollItem);\r\n        }\r\n        return courseActionItems;\r\n    }\r\n\r\n    getSidebarItems(): SidebarItem[] {\r\n        const sidebarItems = this.getDefaultItems();\r\n        if (this.course?.lectures) {\r\n            const lecturesItem: SidebarItem = this.getLecturesItems();\r\n            sidebarItems.splice(-1, 0, lecturesItem);\r\n        }\r\n        if (this.course?.exams && this.hasVisibleExams()) {\r\n            const examsItem: SidebarItem = this.getExamsItems();\r\n            sidebarItems.unshift(examsItem);\r\n        }\r\n        if (isCommunicationEnabled(this.course)) {\r\n            const communicationsItem: SidebarItem = this.getCommunicationsItems();\r\n            sidebarItems.push(communicationsItem);\r\n        }\r\n\r\n        if (this.hasTutorialGroups()) {\r\n            const tutorialGroupsItem: SidebarItem = this.getTutorialGroupsItems();\r\n            sidebarItems.push(tutorialGroupsItem);\r\n        }\r\n\r\n        if (this.atlasEnabled && this.hasCompetencies()) {\r\n            const competenciesItem: SidebarItem = this.getCompetenciesItems();\r\n            sidebarItems.push(competenciesItem);\r\n            if (this.course?.learningPathsEnabled) {\r\n                const learningPathItem: SidebarItem = this.getLearningPathItems();\r\n                sidebarItems.push(learningPathItem);\r\n            }\r\n        }\r\n\r\n        if (this.course?.faqEnabled) {\r\n            const faqItem: SidebarItem = this.getFaqItem();\r\n            sidebarItems.push(faqItem);\r\n        }\r\n\r\n        return sidebarItems;\r\n    }\r\n\r\n    getUnenrollItem() {\r\n        const unenrollItem: CourseActionItem = {\r\n            title: 'Unenroll',\r\n            icon: faDoorOpen,\r\n            translation: 'artemisApp.courseOverview.exerciseList.details.unenrollmentButton',\r\n            action: () => this.openUnenrollStudentModal(),\r\n        };\r\n        return unenrollItem;\r\n    }\r\n\r\n    getLecturesItems() {\r\n        const lecturesItem: SidebarItem = {\r\n            routerLink: 'lectures',\r\n            icon: faChalkboardUser,\r\n            title: 'Lectures',\r\n            translation: 'artemisApp.courseOverview.menu.lectures',\r\n            hasInOrionProperty: true,\r\n            showInOrionWindow: false,\r\n            hidden: false,\r\n        };\r\n        return lecturesItem;\r\n    }\r\n\r\n    getExamsItems() {\r\n        const examsItem: SidebarItem = {\r\n            routerLink: 'exams',\r\n            icon: faGraduationCap,\r\n            title: 'Exams',\r\n            testId: 'exam-tab',\r\n            translation: 'artemisApp.courseOverview.menu.exams',\r\n            hasInOrionProperty: true,\r\n            showInOrionWindow: false,\r\n            hidden: false,\r\n        };\r\n        return examsItem;\r\n    }\r\n\r\n    getCommunicationsItems() {\r\n        const communicationsItem: SidebarItem = {\r\n            routerLink: 'communication',\r\n            icon: faComments,\r\n            title: 'Communication',\r\n            translation: 'artemisApp.courseOverview.menu.communication',\r\n            hasInOrionProperty: true,\r\n            showInOrionWindow: false,\r\n            hidden: false,\r\n        };\r\n        return communicationsItem;\r\n    }\r\n\r\n    getTutorialGroupsItems() {\r\n        const tutorialGroupsItem: SidebarItem = {\r\n            routerLink: 'tutorial-groups',\r\n            icon: faPersonChalkboard,\r\n            title: 'Tutorials',\r\n            translation: 'artemisApp.courseOverview.menu.tutorialGroups',\r\n            hasInOrionProperty: true,\r\n            showInOrionWindow: false,\r\n            featureToggle: FeatureToggle.TutorialGroups,\r\n            hidden: false,\r\n        };\r\n        return tutorialGroupsItem;\r\n    }\r\n\r\n    getCompetenciesItems() {\r\n        const competenciesItem: SidebarItem = {\r\n            routerLink: 'competencies',\r\n            icon: faFlag,\r\n            title: 'Competencies',\r\n            translation: 'artemisApp.courseOverview.menu.competencies',\r\n            hasInOrionProperty: true,\r\n            showInOrionWindow: false,\r\n            hidden: false,\r\n        };\r\n        return competenciesItem;\r\n    }\r\n\r\n    getLearningPathItems() {\r\n        const learningPathItem: SidebarItem = {\r\n            routerLink: 'learning-path',\r\n            icon: faNetworkWired,\r\n            title: 'Learning Path',\r\n            translation: 'artemisApp.courseOverview.menu.learningPath',\r\n            hasInOrionProperty: true,\r\n            showInOrionWindow: false,\r\n            featureToggle: FeatureToggle.LearningPaths,\r\n            hidden: false,\r\n        };\r\n        return learningPathItem;\r\n    }\r\n\r\n    getDashboardItems() {\r\n        const dashboardItem: SidebarItem = {\r\n            routerLink: 'dashboard',\r\n            icon: faChartBar,\r\n            title: 'Dashboard',\r\n            translation: 'artemisApp.courseOverview.menu.dashboard',\r\n            hasInOrionProperty: false,\r\n            showInOrionWindow: false,\r\n            featureToggle: FeatureToggle.StudentCourseAnalyticsDashboard,\r\n            hidden: false,\r\n        };\r\n        return dashboardItem;\r\n    }\r\n\r\n    getFaqItem() {\r\n        const faqItem: SidebarItem = {\r\n            routerLink: 'faq',\r\n            icon: faQuestion,\r\n            title: 'FAQs',\r\n            translation: 'artemisApp.courseOverview.menu.faq',\r\n            hasInOrionProperty: false,\r\n            showInOrionWindow: false,\r\n            hidden: false,\r\n        };\r\n        return faqItem;\r\n    }\r\n\r\n    getDefaultItems() {\r\n        const items = [];\r\n        if (this.course?.studentCourseAnalyticsDashboardEnabled) {\r\n            const dashboardItem: SidebarItem = this.getDashboardItems();\r\n            items.push(dashboardItem);\r\n        }\r\n        const exercisesItem: SidebarItem = {\r\n            routerLink: 'exercises',\r\n            icon: faListAlt,\r\n            title: 'Exercises',\r\n            translation: 'artemisApp.courseOverview.menu.exercises',\r\n            hidden: false,\r\n        };\r\n\r\n        const statisticsItem: SidebarItem = {\r\n            routerLink: 'statistics',\r\n            icon: faChartColumn,\r\n            title: 'Statistics',\r\n            translation: 'artemisApp.courseOverview.menu.statistics',\r\n            hasInOrionProperty: true,\r\n            showInOrionWindow: false,\r\n            guidedTour: true,\r\n            hidden: false,\r\n        };\r\n\r\n        return items.concat([exercisesItem, statisticsItem]);\r\n    }\r\n\r\n    async initAfterCourseLoad() {\r\n        await this.subscribeToTeamAssignmentUpdates();\r\n        this.subscribeForQuizChanges();\r\n    }\r\n\r\n    private setUpConversationService() {\r\n        if (!isMessagingEnabled(this.course) && !isCommunicationEnabled(this.course)) {\r\n            return;\r\n        }\r\n\r\n        if (!this.conversationServiceInstantiated && this.communicationRouteLoaded) {\r\n            this.metisConversationService\r\n                .setUpConversationService(this.course!)\r\n                .pipe(takeUntil(this.ngUnsubscribe))\r\n                .subscribe({\r\n                    complete: () => {\r\n                        this.conversationServiceInstantiated = true;\r\n                        // service is fully set up, now we can subscribe to the respective observables\r\n                        this.subscribeToHasUnreadMessages();\r\n                    },\r\n                });\r\n        } else if (!this.checkedForUnreadMessages && isMessagingEnabled(this.course)) {\r\n            this.metisConversationService.checkForUnreadMessages(this.course!);\r\n            this.subscribeToHasUnreadMessages();\r\n            this.checkedForUnreadMessages = true;\r\n        }\r\n    }\r\n\r\n    canStudentUnenroll(): boolean {\r\n        return !!this.course?.unenrollmentEnabled && dayjs().isBefore(this.course?.unenrollmentEndDate);\r\n    }\r\n\r\n    courseActionItemClick(item?: CourseActionItem) {\r\n        if (item?.action) {\r\n            item.action(item);\r\n        }\r\n    }\r\n\r\n    openUnenrollStudentModal() {\r\n        const modalRef = this.modalService.open(CourseUnenrollmentModalComponent, { size: 'xl' });\r\n        modalRef.componentInstance.course = this.course;\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        // Check if controls mount point is available, if not, wait for it\r\n        if (this.controlsViewContainer) {\r\n            this.tryRenderControls();\r\n        } else {\r\n            this.vcSubscription = this.controlsViewContainerAsList.changes.subscribe(() => this.tryRenderControls());\r\n        }\r\n    }\r\n\r\n    private subscribeToHasUnreadMessages() {\r\n        this.metisConversationService.hasUnreadMessages$.pipe().subscribe((hasUnreadMessages: boolean) => {\r\n            this.hasUnreadMessages = hasUnreadMessages ?? false;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Accepts a component reference of the subcomponent rendered based on the current route.\r\n     * If it provides a controlsConfiguration, we try to render the controls component\r\n     * @param componentRef the sub route component that has been mounted into the router outlet\r\n     */\r\n    onSubRouteActivate(componentRef: any) {\r\n        this.getPageTitle();\r\n        this.getShowRefreshButton();\r\n        this.communicationRouteLoaded = this.route.snapshot.firstChild?.routeConfig?.path === 'communication';\r\n\r\n        this.setUpConversationService();\r\n\r\n        this.hasSidebar = this.getHasSidebar();\r\n\r\n        if (componentRef.controlConfiguration) {\r\n            const provider = componentRef as BarControlConfigurationProvider;\r\n            this.controlConfiguration = provider.controlConfiguration as BarControlConfiguration;\r\n            this.controlsSubscription =\r\n                this.controlConfiguration.subject?.subscribe(async (controls: TemplateRef<any>) => {\r\n                    this.controls = controls;\r\n                    this.tryRenderControls();\r\n                    await firstValueFrom(provider.controlsRendered);\r\n                    this.tryRenderControls();\r\n                }) || undefined;\r\n        }\r\n        if (\r\n            componentRef instanceof CourseExercisesComponent ||\r\n            componentRef instanceof CourseLecturesComponent ||\r\n            componentRef instanceof CourseTutorialGroupsComponent ||\r\n            componentRef instanceof CourseExamsComponent ||\r\n            componentRef instanceof CourseConversationsComponent\r\n        ) {\r\n            this.activatedComponentReference = componentRef;\r\n        }\r\n\r\n        // Since we change the pageTitle + might be pulling data upwards during a render cycle, we need to re-run change detection\r\n        this.changeDetectorRef.detectChanges();\r\n\r\n        this.isSidebarCollapsed = this.activatedComponentReference?.isCollapsed ?? false;\r\n    }\r\n\r\n    toggleSidebar() {\r\n        if (!this.activatedComponentReference) {\r\n            return;\r\n        }\r\n        const childRouteComponent = this.activatedComponentReference;\r\n        childRouteComponent.toggleSidebar();\r\n        this.isSidebarCollapsed = childRouteComponent.isCollapsed;\r\n    }\r\n\r\n    @HostListener('window:keydown.Control.Shift.b', ['$event'])\r\n    onKeyDownControlShiftB(event: KeyboardEvent) {\r\n        event.preventDefault();\r\n        this.toggleSidebar();\r\n    }\r\n\r\n    getPageTitle(): void {\r\n        const routePageTitle: string = this.route.snapshot.firstChild?.data?.pageTitle;\r\n        this.pageTitle = routePageTitle?.substring(routePageTitle.indexOf('.') + 1);\r\n    }\r\n\r\n    getShowRefreshButton(): void {\r\n        this.showRefreshButton = this.route.snapshot.firstChild?.data?.showRefreshButton ?? false;\r\n    }\r\n\r\n    getHasSidebar(): boolean {\r\n        return this.route.snapshot.firstChild?.data?.hasSidebar;\r\n    }\r\n\r\n    /**\r\n     * Removes the controls component from the DOM and cancels the listener for controls changes.\r\n     * Called by the router outlet as soon as the currently mounted component is removed\r\n     */\r\n    onSubRouteDeactivate() {\r\n        this.removeCurrentControlsView();\r\n        this.controls = undefined;\r\n        this.controlConfiguration = undefined;\r\n        this.controlsSubscription?.unsubscribe();\r\n        this.changeDetectorRef.detectChanges();\r\n    }\r\n\r\n    private removeCurrentControlsView() {\r\n        this.controlsEmbeddedView?.detach();\r\n        this.controlsEmbeddedView?.destroy();\r\n    }\r\n\r\n    /**\r\n     * Mounts the controls as specified by the currently mounted sub-route component to the ng-container in the top bar\r\n     * if all required data is available.\r\n     */\r\n    tryRenderControls() {\r\n        if (this.controlConfiguration && this.controls && this.controlsViewContainer) {\r\n            this.removeCurrentControlsView();\r\n            this.controlsEmbeddedView = this.controlsViewContainer.createEmbeddedView(this.controls);\r\n            this.controlsEmbeddedView.detectChanges();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Determines whether the user can register for the course by trying to fetch the for-registration version\r\n     */\r\n    canRegisterForCourse(): Observable<boolean> {\r\n        return this.courseService.findOneForRegistration(this.courseId).pipe(\r\n            map(() => true),\r\n            catchError((error: HttpErrorResponse) => {\r\n                if (error.status === 403) {\r\n                    return of(false);\r\n                } else {\r\n                    return throwError(() => error);\r\n                }\r\n            }),\r\n        );\r\n    }\r\n\r\n    redirectToCourseRegistrationPage() {\r\n        this.router.navigate(['courses', this.courseId, 'register']);\r\n    }\r\n\r\n    redirectToCourseRegistrationPageIfCanRegisterOrElseThrow(error: Error): void {\r\n        this.canRegisterForCourse().subscribe((canRegister) => {\r\n            if (canRegister) {\r\n                this.redirectToCourseRegistrationPage();\r\n            } else {\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Fetch the course from the server including all exercises, lectures, exams and competencies\r\n     * @param refresh Whether this is a force refresh (displays loader animation)\r\n     */\r\n    loadCourse(refresh = false): Observable<void> {\r\n        this.refreshingCourse = refresh;\r\n        const observable = this.courseService.findOneForDashboard(this.courseId).pipe(\r\n            map((res: HttpResponse<Course>) => {\r\n                if (res.body) {\r\n                    this.course = res.body;\r\n                }\r\n\r\n                this.setUpConversationService();\r\n\r\n                setTimeout(() => (this.refreshingCourse = false), 500); // ensure min animation duration\r\n            }),\r\n            // catch 403 errors where registration is possible\r\n            catchError((error: HttpErrorResponse) => {\r\n                if (error.status === 403) {\r\n                    this.redirectToCourseRegistrationPageIfCanRegisterOrElseThrow(error);\r\n                    // Emit a default value, for example `undefined`\r\n                    return of(undefined);\r\n                } else {\r\n                    return throwError(() => error);\r\n                }\r\n            }),\r\n            // handle other errors\r\n            catchError((error: HttpErrorResponse) => {\r\n                const errorMessage = error.headers.get('X-artemisApp-message')!;\r\n                this.alertService.addAlert({\r\n                    type: AlertType.DANGER,\r\n                    message: errorMessage,\r\n                    disableTranslation: true,\r\n                });\r\n                return throwError(() => error);\r\n            }),\r\n        );\r\n        // Start fetching, even if we don't subscribe to the result.\r\n        // This enables just calling this method to refresh the course, without subscribing to it:\r\n        this.loadCourseSubscription?.unsubscribe();\r\n        if (refresh) {\r\n            this.loadCourseSubscription = observable.subscribe();\r\n        }\r\n        return observable;\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.teamAssignmentUpdateListener) {\r\n            this.teamAssignmentUpdateListener.unsubscribe();\r\n        }\r\n        if (this.quizExercisesChannel) {\r\n            this.websocketService.unsubscribe(this.quizExercisesChannel);\r\n        }\r\n        this.loadCourseSubscription?.unsubscribe();\r\n        this.controlsSubscription?.unsubscribe();\r\n        this.vcSubscription?.unsubscribe();\r\n        this.subscription?.unsubscribe();\r\n        this.profileSubscription?.unsubscribe();\r\n        this.examStartedSubscription?.unsubscribe();\r\n        this.dashboardSubscription?.unsubscribe();\r\n        this.closeSidebarEventSubscription?.unsubscribe();\r\n        this.openSidebarEventSubscription?.unsubscribe();\r\n        this.toggleSidebarEventSubscription?.unsubscribe();\r\n        this.ngUnsubscribe.next();\r\n        this.ngUnsubscribe.complete();\r\n        this.ltiSubscription?.unsubscribe();\r\n    }\r\n\r\n    subscribeForQuizChanges() {\r\n        // subscribe to quizzes which get visible\r\n        if (!this.quizExercisesChannel) {\r\n            this.quizExercisesChannel = '/topic/courses/' + this.courseId + '/quizExercises';\r\n\r\n            // quizExercise channel => react to changes made to quizExercise (e.g. start date)\r\n            this.websocketService.subscribe(this.quizExercisesChannel);\r\n            this.websocketService.receive(this.quizExercisesChannel).subscribe((quizExercise: QuizExercise) => {\r\n                quizExercise = this.courseExerciseService.convertExerciseDatesFromServer(quizExercise);\r\n                // the quiz was set to visible or started, we should add it to the exercise list and display it at the top\r\n                if (this.course && this.course.exercises) {\r\n                    this.course.exercises = this.course.exercises.filter((exercise) => exercise.id !== quizExercise.id);\r\n                    this.course.exercises.push(quizExercise);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * check if there is at least one exam which should be shown\r\n     */\r\n    hasVisibleExams(): boolean {\r\n        if (this.course?.exams) {\r\n            for (const exam of this.course.exams) {\r\n                if (exam.visibleDate && dayjs(exam.visibleDate).isBefore(this.serverDateService.now())) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Check if the course has any competencies or prerequisites\r\n     */\r\n    hasCompetencies(): boolean {\r\n        return !!(this.course?.numberOfCompetencies || this.course?.numberOfPrerequisites);\r\n    }\r\n\r\n    /**\r\n     * Check if the course has a tutorial groups\r\n     */\r\n    hasTutorialGroups(): boolean {\r\n        return !!this.course?.numberOfTutorialGroups;\r\n    }\r\n\r\n    /**\r\n     * Receives team assignment changes and updates related attributes of the affected exercise\r\n     */\r\n    async subscribeToTeamAssignmentUpdates() {\r\n        const teamAssignmentUpdates = await this.teamService.teamAssignmentUpdates;\r\n        this.teamAssignmentUpdateListener = teamAssignmentUpdates.subscribe((teamAssignment: TeamAssignmentPayload) => {\r\n            const exercise = this.course?.exercises?.find((courseExercise) => courseExercise.id === teamAssignment.exerciseId);\r\n            if (exercise) {\r\n                exercise.studentAssignedTeamId = teamAssignment.teamId;\r\n                exercise.studentParticipations = teamAssignment.studentParticipations;\r\n            }\r\n        });\r\n    }\r\n\r\n    @HostListener('window:keydown.Control.m', ['$event'])\r\n    onKeyDownControlM(event: KeyboardEvent) {\r\n        event.preventDefault();\r\n        this.toggleCollapseState();\r\n    }\r\n\r\n    getCollapseStateFromStorage() {\r\n        const storedCollapseState: string | null = localStorage.getItem('navbar.collapseState');\r\n        if (storedCollapseState) this.isNavbarCollapsed = JSON.parse(storedCollapseState);\r\n    }\r\n\r\n    toggleCollapseState() {\r\n        this.isNavbarCollapsed = !this.isNavbarCollapsed;\r\n        localStorage.setItem('navbar.collapseState', JSON.stringify(this.isNavbarCollapsed));\r\n    }\r\n\r\n    /**\r\n     * A course is active if the end date is after the current date or\r\n     * end date is not set at all\r\n     *\r\n     * @param course The given course to be checked if it is active\r\n     * @returns true if the course is active, otherwise false\r\n     */\r\n    isCourseActive(course: Course): boolean {\r\n        return course.endDate ? dayjs(course.endDate).isAfter(dayjs()) : true;\r\n    }\r\n}\r\n","<!-- @if can't be used for isShownViaLti as it removes the element from the DOM, disrupting dropdown stability for the More-Menu. -->\r\n<div class=\"sidebar-wrapper\" [ngClass]=\"{ 'd-none': isShownViaLti }\">\r\n    <div class=\"vw-100 bg-body\">\r\n        <mat-sidenav-container\r\n            class=\"vw-100\"\r\n            [ngClass]=\"{\r\n                'exam-wrapper exam-is-active': isExamStarted,\r\n                'exam-height-dev': isExamStarted && (!isProduction || isTestServer),\r\n                'sidenav-height-dev': !isProduction || isTestServer,\r\n                'container-closed': isNavbarCollapsed,\r\n            }\"\r\n        >\r\n            <mat-sidenav\r\n                disableClose\r\n                [ngClass]=\"{ 'sidenav-height-dev': !isProduction || isTestServer }\"\r\n                class=\"module-bg rounded-3\"\r\n                opened=\"true\"\r\n                mode=\"side\"\r\n                [hidden]=\"isExamStarted\"\r\n            >\r\n                <div class=\"sidebar-container d-flex h-100 justify-content-between flex-column\" [ngClass]=\"{ collapsed: isNavbarCollapsed }\">\r\n                    <div>\r\n                        <!-- Course Icon + Title -->\r\n                        <div id=\"container\" class=\"d-flex p-3 align-items-center text-decoration-none\" [title]=\"course?.title\">\r\n                            <div ngbDropdown container=\"body\" class=\"d-flex\">\r\n                                @if (course) {\r\n                                    @if (courses?.length) {\r\n                                        <div ngbDropdownToggle class=\"pointer\">\r\n                                            <ng-template *ngTemplateOutlet=\"courseImage; context: { $implicit: course.courseIcon, courseTitle: course.title }\" />\r\n                                        </div>\r\n                                    } @else {\r\n                                        <ng-template *ngTemplateOutlet=\"courseImage; context: { $implicit: course.courseIcon, courseTitle: course.title }\" />\r\n                                    }\r\n                                }\r\n\r\n                                <div ngbDropdownMenu class=\"dropdown-menu py-1 ms-n2\">\r\n                                    @for (course of courses; track course) {\r\n                                        <button ngbDropdownItem (click)=\"switchCourse(course)\" class=\"d-flex align-items-center py-1 px-2\">\r\n                                            <ng-template *ngTemplateOutlet=\"courseImage; context: { $implicit: course.courseIcon, courseTitle: course.title }\" />\r\n                                            <div class=\"h6 fw-normal mb-0 course-title text-wrap\">{{ course?.title }}</div>\r\n                                        </button>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            @if (!isNavbarCollapsed) {\r\n                                <div id=\"test-course-title\" class=\"course-title h6 mb-0 fw-bold text-body auto-collapse\">{{ course?.title }}</div>\r\n                            }\r\n                        </div>\r\n                        <!-- NavItems -->\r\n                        <div>\r\n                            <hr class=\"mt-0\" />\r\n                            <ul ngbDropdown #itemsDrop=\"ngbDropdown\" container=\"body\" placement=\"right\" class=\"navbar-nav justify-content-end flex-grow-1 text-decoration-none\">\r\n                                @for (sidebarItem of sidebarItems; track sidebarItem) {\r\n                                    <li class=\"nav-item\" [hidden]=\"sidebarItem.hidden\">\r\n                                        @if (sidebarItem.hasInOrionProperty && sidebarItem.showInOrionWindow !== undefined) {\r\n                                            <ng-template *ngTemplateOutlet=\"navItemOrionFilter; context: { $implicit: sidebarItem, iconTextTemplate: navIconAndText }\" />\r\n                                        } @else {\r\n                                            <ng-template *ngTemplateOutlet=\"navItem; context: { $implicit: sidebarItem, iconTextTemplate: navIconAndText }\" />\r\n                                        }\r\n                                    </li>\r\n                                }\r\n                                <li ngbDropdownToggle class=\"nav-item\">\r\n                                    <div [hidden]=\"!anyItemHidden\" class=\"three-dots nav-link px-3\">\r\n                                        <fa-icon [fixedWidth]=\"true\" [icon]=\"faEllipsis\" class=\"ms-2 me-3\" />\r\n                                        <span\r\n                                            class=\"more\"\r\n                                            [ngClass]=\"{ 'auto-collapse': !isNavbarCollapsed, 'sidebar-collapsed-course-overview': isNavbarCollapsed }\"\r\n                                            [jhiTranslate]=\"'artemisApp.courseOverview.menu.more'\"\r\n                                        ></span>\r\n                                    </div>\r\n                                </li>\r\n                                <div ngbDropdownMenu class=\"dropdown-content\" [ngClass]=\"{ fixedContentSize: hiddenItems.length >= 4 }\">\r\n                                    @for (hiddenItem of hiddenItems; track hiddenItem) {\r\n                                        <li class=\"nav-item\">\r\n                                            @if (hiddenItem.hasInOrionProperty && hiddenItem.showInOrionWindow !== undefined) {\r\n                                                <ng-template *ngTemplateOutlet=\"navItemOrionFilter; context: { $implicit: hiddenItem, iconTextTemplate: navIconAndTextHidden }\" />\r\n                                            } @else {\r\n                                                <ng-template *ngTemplateOutlet=\"navItem; context: { $implicit: hiddenItem, iconTextTemplate: navIconAndTextHidden }\" />\r\n                                            }\r\n                                        </li>\r\n                                    }\r\n                                    @if (courseActionItems?.length && anyItemHidden) {\r\n                                        @for (courseActionItem of courseActionItems; track courseActionItem) {\r\n                                            <li class=\"nav-item\">\r\n                                                <a\r\n                                                    class=\"nav-link nav-link-sidebar px-3 py-2\"\r\n                                                    [ngClass]=\"{ collapsed: isNavbarCollapsed }\"\r\n                                                    (click)=\"courseActionItemClick(courseActionItem)\"\r\n                                                    [title]=\"courseActionItem.title\"\r\n                                                >\r\n                                                    <ng-template *ngTemplateOutlet=\"navIconAndTextHidden; context: { $implicit: courseActionItem }\" />\r\n                                                </a>\r\n                                            </li>\r\n                                        }\r\n                                    }\r\n                                </div>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <!-- Course Action Items  -->\r\n                    <div>\r\n                        @if (courseActionItems?.length && !anyItemHidden) {\r\n                            <div ngbDropdown placement=\"top\" class=\"navbar-nav mb-2\">\r\n                                <li class=\"nav-item\">\r\n                                    @for (courseActionItem of courseActionItems; track courseActionItem) {\r\n                                        <a\r\n                                            class=\"nav-link nav-link-sidebar px-3\"\r\n                                            [ngClass]=\"{ collapsed: isNavbarCollapsed }\"\r\n                                            (click)=\"courseActionItemClick(courseActionItem)\"\r\n                                            [title]=\"courseActionItem.title\"\r\n                                        >\r\n                                            <ng-template *ngTemplateOutlet=\"navIconAndText; context: { $implicit: courseActionItem }\" />\r\n                                        </a>\r\n                                    }\r\n                                </li>\r\n                            </div>\r\n                        }\r\n                        <!-- Collapse Chevron -->\r\n                        <div\r\n                            class=\"double-arrow mb-2\"\r\n                            [ngClass]=\"{ 'menu-closed': isNavbarCollapsed }\"\r\n                            [ngbTooltip]=\"(isNavbarCollapsed ? 'Expand' : 'Collapse') + ' Menu (Ctrl + M)'\"\r\n                            (click)=\"toggleCollapseState()\"\r\n                        >\r\n                            <div class=\"double-arrow-icon\" [attr.aria-expanded]=\"!isNavbarCollapsed\" aria-controls=\"collapseBasic\">\r\n                                <fa-icon class=\"me-negative fa-xs\" [icon]=\"faChevronRight\" />\r\n                                <fa-icon class=\"fa-xs\" [icon]=\"faChevronRight\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </mat-sidenav>\r\n            <mat-sidenav-content\r\n                [ngClass]=\"{\r\n                    'exam-wrapper': isExamStarted,\r\n                    'exam-height-dev': isExamStarted && (!isProduction || isTestServer),\r\n                    'sidenav-height-dev': !isProduction || isTestServer,\r\n                }\"\r\n            >\r\n                @if (course) {\r\n                    <div\r\n                        id=\"course-title-bar-test\"\r\n                        class=\"h5 module-bg m-2 mt-0 px-3 py-2 rounded rounded-3 justify-content-between sticky-top\"\r\n                        [ngStyle]=\"{ display: isExamStarted ? 'none' : 'flex' }\"\r\n                    >\r\n                        <div class=\"align-self-center d-flex\">\r\n                            @if (hasSidebar) {\r\n                                <button\r\n                                    [ngbTooltip]=\"'Toggle Sidebar (⇧ + Ctrl + B)'\"\r\n                                    [ngClass]=\"{ 'is-collapsed': isSidebarCollapsed, 'is-communication-module': pageTitle === 'communication' }\"\r\n                                    triggers=\"hover\"\r\n                                    class=\"btn btn-sidebar-collapse me-3 btn-sm rounded-3\"\r\n                                    (click)=\"toggleSidebar()\"\r\n                                >\r\n                                    <fa-icon [fixedWidth]=\"true\" [icon]=\"facSidebar\" class=\"text-secondary d-flex justify-content-center align-items-center\" size=\"lg\" />\r\n                                    <div class=\"btn-sidebar-collapse-chevron d-flex gap-1\">\r\n                                        <fa-icon\r\n                                            [fixedWidth]=\"true\"\r\n                                            [icon]=\"faChevronRight\"\r\n                                            class=\"text-secondary btn-sidebar-collapse-chevron-start d-flex justify-content-center align-items-center\"\r\n                                            size=\"xs\"\r\n                                        />\r\n                                        <fa-icon [fixedWidth]=\"true\" [icon]=\"faChevronRight\" class=\"text-secondary d-flex justify-content-center align-items-center\" size=\"xs\" />\r\n                                    </div>\r\n                                </button>\r\n                            }\r\n                            <div class=\"align-self-center\" [jhiTranslate]=\"'artemisApp.courseOverview.menu.' + pageTitle\"></div>\r\n                        </div>\r\n                        <div class=\"d-flex gap-2\">\r\n                            @if (isNotManagementView && course.isAtLeastTutor) {\r\n                                <div id=\"manage-button\">\r\n                                    <a\r\n                                        class=\"btn btn-sm btn-outline-secondary\"\r\n                                        [ngClass]=\"{ 'd-none d-sm-block': pageTitle === 'communication' }\"\r\n                                        [routerLink]=\"['/course-management', course.id]\"\r\n                                        jhiTranslate=\"artemisApp.courseOverview.manage\"\r\n                                    ></a>\r\n                                </div>\r\n                            }\r\n                            @if (showRefreshButton) {\r\n                                <button class=\"btn btn-sm btn-outline-primary\" (click)=\"loadCourse(true)\" [disabled]=\"refreshingCourse\">\r\n                                    <fa-icon [icon]=\"faSync\" [animation]=\"refreshingCourse ? 'spin' : undefined\" />\r\n                                    <span class=\"d-none d-sm-inline\" jhiTranslate=\"artemisApp.exercise.refresh\">Refresh</span>\r\n                                </button>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div\r\n                        class=\"course-body-container\"\r\n                        [ngClass]=\"{\r\n                            'module-bg p-3 rounded rounded-3 scrollable-content': !hasSidebar,\r\n                            'content-height-dev': !isProduction || isTestServer,\r\n                            'mx-2': !isExamStarted,\r\n                        }\"\r\n                    >\r\n                        @if (!hasSidebar) {\r\n                            <ng-container class=\"d-flex ms-auto\" #controlsViewContainer />\r\n                        }\r\n                        <!-- Check for !isLTI to render the router outlet only once and avoid side effects on route updates. -->\r\n                        @if (!isShownViaLti) {\r\n                            <ng-template *ngTemplateOutlet=\"routerOutlet\" />\r\n                        }\r\n                    </div>\r\n                }\r\n            </mat-sidenav-content>\r\n        </mat-sidenav-container>\r\n    </div>\r\n</div>\r\n<div class=\"course-body-container\" [ngClass]=\"{ 'd-none': !isShownViaLti }\">\r\n    @if (!hasSidebar) {\r\n        <ng-container class=\"d-flex ms-auto\" #controlsViewContainer />\r\n    }\r\n    <!-- Check isLTI to render the router outlet only once and avoid side effects on route updates. -->\r\n    @if (isShownViaLti) {\r\n        <ng-template *ngTemplateOutlet=\"routerOutlet\" />\r\n    }\r\n</div>\r\n\r\n<!-- TEMPLATES -->\r\n\r\n<ng-template #routerOutlet>\r\n    <router-outlet (activate)=\"onSubRouteActivate($event)\" (deactivate)=\"onSubRouteDeactivate()\" />\r\n    <div class=\"refresh-overlay\" [class.active]=\"refreshingCourse\">\r\n        <fa-icon size=\"lg\" [icon]=\"faCircleNotch\" animation=\"spin\" />\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #courseImage let-courseImage let-courseTitle=\"courseTitle\">\r\n    @if (courseImage) {\r\n        <div class=\"d-flex align-items-center justify-content-center\">\r\n            <jhi-secured-image [src]=\"courseImage\" />\r\n        </div>\r\n    } @else {\r\n        <div class=\"course-circle d-flex align-items-center justify-content-center\">\r\n            <span class=\"fs-4\">{{ courseTitle | slice: 0 : 1 }}</span>\r\n        </div>\r\n    }\r\n</ng-template>\r\n\r\n<ng-template #navIconAndText let-sidebarItem>\r\n    @if (sidebarItem.icon) {\r\n        <fa-icon [fixedWidth]=\"true\" [icon]=\"sidebarItem.icon\" class=\"ms-2 me-3\" />\r\n    }\r\n    @if (!isNavbarCollapsed) {\r\n        <span class=\"auto-collapse\" [jhiTranslate]=\"sidebarItem.translation\"></span>\r\n    }\r\n</ng-template>\r\n\r\n<ng-template #navIconAndTextHidden let-sidebarItem>\r\n    @if (sidebarItem.icon) {\r\n        <fa-icon [fixedWidth]=\"true\" [icon]=\"sidebarItem.icon\" class=\"ms-2 me-3\" />\r\n        <span [jhiTranslate]=\"sidebarItem.translation\"></span>\r\n    }\r\n</ng-template>\r\n\r\n<ng-template #navItemOrionFilter let-sidebarItem let-iconTextTemplate=\"iconTextTemplate\">\r\n    <a\r\n        class=\"nav-link nav-link-sidebar px-3 py-2\"\r\n        [id]=\"sidebarItem.testId ?? ''\"\r\n        [ngClass]=\"{\r\n            'guided-tour': sidebarItem.guidedTour,\r\n            newMessage: hasUnreadMessages && sidebarItem.title === 'Communication',\r\n            collapsed: isNavbarCollapsed,\r\n        }\"\r\n        jhiOrionFilter\r\n        [showInOrionWindow]=\"sidebarItem.showInOrionWindow\"\r\n        [routerLink]=\"sidebarItem.routerLink\"\r\n        routerLinkActive=\"active\"\r\n        [jhiFeatureToggleHide]=\"sidebarItem.featureToggle\"\r\n        [title]=\"sidebarItem.title\"\r\n        (click)=\"itemsDrop?.close()\"\r\n    >\r\n        <ng-template *ngTemplateOutlet=\"iconTextTemplate; context: { $implicit: sidebarItem }\" />\r\n    </a>\r\n</ng-template>\r\n\r\n<ng-template #navItem let-sidebarItem let-iconTextTemplate=\"iconTextTemplate\">\r\n    <a\r\n        class=\"nav-link nav-link-sidebar px-3 py-2\"\r\n        [id]=\"sidebarItem.testId ?? ''\"\r\n        [ngClass]=\"{\r\n            'guided-tour': sidebarItem.guidedTour,\r\n            newMessage: !communicationRouteLoaded && hasUnreadMessages && sidebarItem.title === 'Communication',\r\n            collapsed: isNavbarCollapsed,\r\n        }\"\r\n        [routerLink]=\"sidebarItem.routerLink\"\r\n        routerLinkActive=\"active\"\r\n        [jhiFeatureToggleHide]=\"sidebarItem.featureToggle\"\r\n        [title]=\"sidebarItem.title\"\r\n        (click)=\"itemsDrop?.close()\"\r\n    >\r\n        <ng-template *ngTemplateOutlet=\"iconTextTemplate; context: { $implicit: sidebarItem }\" />\r\n    </a>\r\n</ng-template>\r\n"],"mappings":"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","names":["ɵɵtext","ɵɵelement","ɵɵelementStart","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","ɵɵtextInterpolate","ctx_r0","course","enrollmentEndDate","CourseUnenrollmentModalComponent","activeModal","inject","NgbActiveModal","courseService","CourseManagementService","alertService","AlertService","router","Router","confirmationForm","faXmark","ngOnInit","FormGroup","confirmationInput","FormControl","Validators","compose","required","confirmationInputValidator","canEnrollAgain","enrollmentEnabled","dayjs","isBefore","isValidInput","controls","value","title","onCancel","close","onUnenroll","unenrollFromCourse","id","subscribe","next","success","navigate","error","control","invalidInput","selectors","decls","vars","consts","template","rf","ctx","ɵɵtemplate","CourseUnenrollmentModalComponent_Conditional_16_Template","CourseUnenrollmentModalComponent_Conditional_17_Template","ɵɵlistener","ɵɵconditional","ɵɵproperty","TranslateDirective","FormsModule","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","ReactiveFormsModule","FormGroupDirective","FormControlName","FaIconComponent","ArtemisDatePipe","ArtemisTranslatePipe","encapsulation","_c0","_c1","_c2","_c3","MatDrawerContainer_Conditional_0_Template","rf","ctx","_r1","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","ɵɵrestoreView","ctx_r1","ɵɵnextContext","ɵɵresetView","ɵɵelementEnd","ɵɵclassProp","MatDrawerContainer_Conditional_3_Template","ɵɵprojection","_c4","_c5","MatSidenavContainer_Conditional_0_Template","MatSidenavContainer_Conditional_3_Template","_c6","MAT_DRAWER_DEFAULT_AUTOSIZE","InjectionToken","MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY","MAT_DRAWER_CONTAINER","MatDrawerContent","CdkScrollable","inject","Platform","ChangeDetectorRef","MatDrawerContainer","elementRef","ElementRef","scrollDispatcher","ScrollDispatcher","ngZone","NgZone","start","end","__ngFactoryType__","ɵɵdefineComponent","rf","ctx","ɵɵstyleProp","ɵɵclassProp","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","_c0","ɵɵprojectionDef","ɵɵprojection","MatDrawer","FocusTrapFactory","FocusMonitor","Renderer2","InteractivityChecker","DOCUMENT","value","coerceBooleanProperty","Subject","EventEmitter","filter","o","map","mapTo","Injector","takeUntil","opened","element","fromEvent","event","hasModifierKey","options","callback","cleanupBlur","cleanupMousedown","selector","elementToFocus","afterNextRender","focusOrigin","activeEl","cleanup","openedVia","isOpen","result","restoreFocus","resolve","take","open","isAnimating","newPosition","parent","ɵɵviewQuery","_c1","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵattribute","ɵɵelementStart","ɵɵelementEnd","Directionality","ANIMATION_MODULE_TYPE","QueryList","platform","viewportRuler","ViewportRuler","startWith","drawer","item","debounceTime","left","right","width","merge","isAdd","classList","className","dirIndex","ɵɵcontentQuery","_c3","_c2","ɵɵtemplate","MatDrawerContainer_Conditional_0_Template","MatDrawerContainer_Conditional_3_Template","ɵɵconditional","ɵɵadvance","MatSidenavContent","ɵMatSidenavContent_BaseFactory","ɵɵgetInheritedFactory","MatSidenav","coerceNumberProperty","ɵMatSidenav_BaseFactory","MatSidenavContainer","ɵMatSidenavContainer_BaseFactory","_c5","_c4","MatSidenavContainer_Conditional_0_Template","MatSidenavContainer_Conditional_3_Template","_c6","ɵɵtemplate","CourseOverviewComponent_Conditional_18_Conditional_1_3_ng_template_0_Template","ɵɵtext","ɵɵelementStart","CourseOverviewComponent_Conditional_18_Conditional_1_3_Template","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","courseImage_r3","ɵɵpureFunction2","_c10","ctx_r1","course","courseIcon","title","CourseOverviewComponent_Conditional_18_Conditional_2_1_ng_template_0_Template","CourseOverviewComponent_Conditional_18_Conditional_2_1_Template","CourseOverviewComponent_Conditional_18_Conditional_1_Template","CourseOverviewComponent_Conditional_18_Conditional_2_Template","ɵɵconditional","courses","length","CourseOverviewComponent_For_22_3_ng_template_0_Template","ɵɵlistener","course_r5","ɵɵrestoreView","_r4","$implicit","ɵɵnextContext","ɵɵresetView","switchCourse","CourseOverviewComponent_For_22_3_Template","ɵɵtextInterpolate","CourseOverviewComponent_For_36_Conditional_3_1_ng_template_0_Template","CourseOverviewComponent_For_36_Conditional_3_1_Template","navItemOrionFilter_r8","_c11","sidebarItem_r6","navIconAndText_r7","CourseOverviewComponent_For_36_Conditional_4_1_ng_template_0_Template","CourseOverviewComponent_For_36_Conditional_4_1_Template","navItem_r9","CourseOverviewComponent_For_36_Conditional_3_Template","CourseOverviewComponent_For_36_Conditional_4_Template","hidden","hasInOrionProperty","showInOrionWindow","undefined","CourseOverviewComponent_For_50_Conditional_3_1_ng_template_0_Template","CourseOverviewComponent_For_50_Conditional_3_1_Template","hiddenItem_r10","navIconAndTextHidden_r11","CourseOverviewComponent_For_50_Conditional_4_1_ng_template_0_Template","CourseOverviewComponent_For_50_Conditional_4_1_Template","CourseOverviewComponent_For_50_Conditional_3_Template","CourseOverviewComponent_For_50_Conditional_4_Template","CourseOverviewComponent_Conditional_51_For_2_5_ng_template_0_Template","courseActionItem_r13","_r12","courseActionItemClick","CourseOverviewComponent_Conditional_51_For_2_5_Template","ɵɵpureFunction1","_c5","isNavbarCollapsed","_c12","ɵɵrepeaterCreate","CourseOverviewComponent_Conditional_51_For_2_Template","ɵɵrepeaterTrackByIdentity","ɵɵrepeater","courseActionItems","CourseOverviewComponent_Conditional_59_For_6_3_ng_template_0_Template","courseActionItem_r15","_r14","CourseOverviewComponent_Conditional_59_For_6_3_Template","CourseOverviewComponent_Conditional_59_For_6_Template","_r16","toggleSidebar","ɵɵelement","_c15","isSidebarCollapsed","pageTitle","facSidebar","faChevronRight","_c16","_c17","id","_r17","loadCourse","refreshingCourse","faSync","ɵɵelementContainer","CourseOverviewComponent_Conditional_75_Conditional_18_1_ng_template_0_Template","CourseOverviewComponent_Conditional_75_Conditional_18_1_Template","routerOutlet_r18","CourseOverviewComponent_Conditional_75_Conditional_5_Template","CourseOverviewComponent_Conditional_75_Conditional_11_Template","CourseOverviewComponent_Conditional_75_Conditional_12_Template","CourseOverviewComponent_Conditional_75_Conditional_17_Template","CourseOverviewComponent_Conditional_75_Conditional_18_Template","_c13","isExamStarted","hasSidebar","isNotManagementView","isAtLeastTutor","showRefreshButton","ɵɵpureFunction3","_c14","isProduction","isTestServer","isShownViaLti","CourseOverviewComponent_Conditional_83_1_ng_template_0_Template","CourseOverviewComponent_Conditional_83_1_Template","$event","_r19","onSubRouteActivate","onSubRouteDeactivate","ɵɵclassProp","faCircleNotch","courseImage_r20","ɵɵpipeBind3","courseTitle_r21","CourseOverviewComponent_ng_template_89_Conditional_1_Template","CourseOverviewComponent_ng_template_89_Conditional_2_Template","sidebarItem_r22","icon","translation","CourseOverviewComponent_ng_template_92_Conditional_1_Template","CourseOverviewComponent_ng_template_92_Conditional_2_Template","sidebarItem_r23","CourseOverviewComponent_ng_template_95_Conditional_1_Template","CourseOverviewComponent_ng_template_98_3_ng_template_0_Template","_r24","itemsDrop_r25","ɵɵreference","close","CourseOverviewComponent_ng_template_98_3_Template","tmp_10_0","sidebarItem_r26","testId","_c18","guidedTour","hasUnreadMessages","routerLink","featureToggle","iconTextTemplate_r27","CourseOverviewComponent_ng_template_101_3_ng_template_0_Template","_r28","CourseOverviewComponent_ng_template_101_3_Template","sidebarItem_r29","communicationRouteLoaded","iconTextTemplate_r30","CourseOverviewComponent","courseService","inject","CourseManagementService","courseExerciseService","CourseExerciseService","courseStorageService","CourseStorageService","route","ActivatedRoute","teamService","TeamService","websocketService","WebsocketService","serverDateService","ArtemisServerDateService","alertService","AlertService","changeDetectorRef","ChangeDetectorRef","metisConversationService","MetisConversationService","router","Router","courseAccessStorageService","CourseAccessStorageService","profileService","ProfileService","modalService","NgbModal","examParticipationService","ExamParticipationService","ltiService","LtiService","ngUnsubscribe","Subject","closeSidebarEventSubscription","openSidebarEventSubscription","toggleSidebarEventSubscription","courseId","subscription","dashboardSubscription","teamAssignmentUpdateListener","quizExercisesChannel","atlasEnabled","sidebarItems","canUnenroll","profileSubscription","examStartedSubscription","MIN_DISPLAYED_COURSES","ltiSubscription","anyItemHidden","hiddenItems","WINDOW_OFFSET","ITEM_HEIGHT","conversationServiceInstantiated","checkedForUnreadMessages","activatedComponentReference","controlsEmbeddedView","loadCourseSubscription","controlsSubscription","vcSubscription","controls","controlConfiguration","controlsViewContainer","controlsViewContainerAsList","itemsDrop","faTimes","faEye","faWrench","faTable","faFlag","faListAlt","faChartBar","faClipboard","faChevronLeft","faEllipsis","faQuestion","faChartColumn","FeatureToggle","CachingStrategy","isMessagingEnabled","isCommunicationEnabled","courseSidebarService","CourseSidebarService","ngOnInit","__async","openSidebar$","subscribe","closeSidebar$","toggleSidebar$","isCollapsed","params","Number","getProfileInfo","profileInfo","inProduction","testServer","activeProfiles","includes","PROFILE_ATLAS","examIsStarted$","isStarted","getCollapseStateFromStorage","getCourse","url","startsWith","isCourseActive","onCourseAccessed","STORAGE_KEY","MAX_DISPLAYED_RECENTLY_ACCESSED_COURSES_OVERVIEW","STORAGE_KEY_DROPDOWN","MAX_DISPLAYED_RECENTLY_ACCESSED_COURSES_DROPDOWN","firstValueFrom","initAfterCourseLoad","getSidebarItems","getCourseActionItems","updateVisibleNavbarItems","window","innerHeight","updateRecentlyAccessedCourses","isShownViaLti$","onResize","height","threshold","calculateThreshold","applyThreshold","reverse","forEach","item","index","currentThreshold","unshift","findAllForDropdown","next","res","body","push","sortCourses","lastAccessedCourseIds","getLastAccessedCourses","filter","navigateByUrl","skipLocationChange","then","navigate","canStudentUnenroll","unenrollItem","getUnenrollItem","getDefaultItems","lectures","lecturesItem","getLecturesItems","splice","exams","hasVisibleExams","examsItem","getExamsItems","communicationsItem","getCommunicationsItems","hasTutorialGroups","tutorialGroupsItem","getTutorialGroupsItems","hasCompetencies","competenciesItem","getCompetenciesItems","learningPathsEnabled","learningPathItem","getLearningPathItems","faqEnabled","faqItem","getFaqItem","faDoorOpen","action","openUnenrollStudentModal","faChalkboardUser","faGraduationCap","faComments","faPersonChalkboard","TutorialGroups","faNetworkWired","LearningPaths","getDashboardItems","StudentCourseAnalyticsDashboard","items","studentCourseAnalyticsDashboardEnabled","dashboardItem","exercisesItem","statisticsItem","concat","subscribeToTeamAssignmentUpdates","subscribeForQuizChanges","setUpConversationService","pipe","takeUntil","complete","subscribeToHasUnreadMessages","checkForUnreadMessages","unenrollmentEnabled","dayjs","isBefore","unenrollmentEndDate","modalRef","open","CourseUnenrollmentModalComponent","size","componentInstance","ngAfterViewInit","tryRenderControls","changes","hasUnreadMessages$","componentRef","getPageTitle","getShowRefreshButton","snapshot","firstChild","routeConfig","path","getHasSidebar","provider","subject","controlsRendered","CourseExercisesComponent","CourseLecturesComponent","CourseTutorialGroupsComponent","CourseExamsComponent","CourseConversationsComponent","detectChanges","childRouteComponent","onKeyDownControlShiftB","event","preventDefault","routePageTitle","data","substring","indexOf","removeCurrentControlsView","unsubscribe","detach","destroy","createEmbeddedView","canRegisterForCourse","findOneForRegistration","map","catchError","error","status","of","throwError","redirectToCourseRegistrationPage","redirectToCourseRegistrationPageIfCanRegisterOrElseThrow","canRegister","refresh","observable","findOneForDashboard","setTimeout","errorMessage","headers","get","addAlert","type","AlertType","DANGER","message","disableTranslation","ngOnDestroy","receive","quizExercise","convertExerciseDatesFromServer","exercises","exercise","exam","visibleDate","now","numberOfCompetencies","numberOfPrerequisites","numberOfTutorialGroups","teamAssignmentUpdates","teamAssignment","find","courseExercise","exerciseId","studentAssignedTeamId","teamId","studentParticipations","onKeyDownControlM","toggleCollapseState","storedCollapseState","localStorage","getItem","JSON","parse","setItem","stringify","endDate","isAfter","selectors","viewQuery","rf","ctx","ViewContainerRef","ɵɵresolveWindow","decls","vars","consts","template","CourseOverviewComponent_Conditional_18_Template","CourseOverviewComponent_For_22_Template","CourseOverviewComponent_Conditional_25_Template","CourseOverviewComponent_For_36_Template","CourseOverviewComponent_For_50_Template","CourseOverviewComponent_Conditional_51_Template","CourseOverviewComponent_Conditional_59_Template","i0","_r1","CourseOverviewComponent_Conditional_75_Template","CourseOverviewComponent_Conditional_82_Template","CourseOverviewComponent_Conditional_83_Template","CourseOverviewComponent_ng_template_86_Template","ɵɵtemplateRefExtractor","CourseOverviewComponent_ng_template_89_Template","CourseOverviewComponent_ng_template_92_Template","CourseOverviewComponent_ng_template_95_Template","CourseOverviewComponent_ng_template_98_Template","CourseOverviewComponent_ng_template_101_Template","_c2","ɵɵpureFunction4","_c3","_c4","_c6","_c7","_c8","_c9","NgClass","MatSidenavContainer","MatSidenav","NgbDropdown","NgbDropdownToggle","NgTemplateOutlet","NgbDropdownMenu","NgbDropdownButtonItem","NgbDropdownItem","FaIconComponent","TranslateDirective","NgbTooltip","MatSidenavContent","NgStyle","RouterLink","RouterOutlet","SecuredImageComponent","OrionFilterDirective","RouterLinkActive","FeatureToggleHideDirective","SlicePipe","styles"],"x_google_ignoreList":[2]}