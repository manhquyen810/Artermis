{
  "version": 3,
  "sources": ["src/main/webapp/app/lecture/lecture-unit/lecture-unit-management/onlineUnit.service.ts", "src/main/webapp/app/lecture/lecture-unit/lecture-unit-management/online-unit-form/online-unit-form.component.ts", "src/main/webapp/app/lecture/lecture-unit/lecture-unit-management/online-unit-form/online-unit-form.component.html"],
  "sourcesContent": ["import { HttpClient, HttpParams, HttpResponse } from '@angular/common/http';\r\nimport { Injectable, inject } from '@angular/core';\r\nimport { OnlineUnit } from 'app/entities/lecture-unit/onlineUnit.model';\r\nimport { LectureUnitService } from 'app/lecture/lecture-unit/lecture-unit-management/lectureUnit.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { OnlineResourceDTO } from 'app/lecture/lecture-unit/lecture-unit-management/online-resource-dto.model';\r\n\r\ntype EntityResponseType = HttpResponse<OnlineUnit>;\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class OnlineUnitService {\r\n    private httpClient = inject(HttpClient);\r\n    private lectureUnitService = inject(LectureUnitService);\r\n\r\n    private resourceURL = 'api/lecture';\r\n\r\n    create(onlineUnit: OnlineUnit, lectureId: number): Observable<EntityResponseType> {\r\n        return this.httpClient\r\n            .post<OnlineUnit>(`${this.resourceURL}/lectures/${lectureId}/online-units`, onlineUnit, { observe: 'response' })\r\n            .pipe(map((res: EntityResponseType) => this.lectureUnitService.convertLectureUnitResponseDatesFromServer(res)));\r\n    }\r\n\r\n    findById(onlineUnitId: number, lectureId: number) {\r\n        return this.httpClient\r\n            .get<OnlineUnit>(`${this.resourceURL}/lectures/${lectureId}/online-units/${onlineUnitId}`, { observe: 'response' })\r\n            .pipe(map((res: EntityResponseType) => this.lectureUnitService.convertLectureUnitResponseDatesFromServer(res)));\r\n    }\r\n\r\n    update(onlineUnit: OnlineUnit, lectureId: number): Observable<EntityResponseType> {\r\n        return this.httpClient\r\n            .put<OnlineUnit>(`${this.resourceURL}/lectures/${lectureId}/online-units`, onlineUnit, { observe: 'response' })\r\n            .pipe(map((res: EntityResponseType) => this.lectureUnitService.convertLectureUnitResponseDatesFromServer(res)));\r\n    }\r\n\r\n    /**\r\n     * Get the online resource (meta title and description) of the specified link\r\n     * @param link The link from which to fetch the website's meta information\r\n     */\r\n    getOnlineResource(link: string): Observable<HttpResponse<OnlineResourceDTO>> {\r\n        let params = new HttpParams();\r\n        params = params.set('link', String(link));\r\n        return this.httpClient.get<OnlineResourceDTO>(`${this.resourceURL}/lectures/online-units/fetch-online-resource`, {\r\n            observe: 'response',\r\n            params,\r\n        });\r\n    }\r\n}\r\n", "import dayjs from 'dayjs/esm';\r\nimport { Component, OnChanges, computed, inject, input, output, viewChild } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { faArrowLeft, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { map } from 'rxjs';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { OnlineResourceDTO } from 'app/lecture/lecture-unit/lecture-unit-management/online-resource-dto.model';\r\nimport { OnlineUnitService } from 'app/lecture/lecture-unit/lecture-unit-management/onlineUnit.service';\r\nimport { CompetencyLectureUnitLink } from 'app/entities/competency.model';\r\nimport { toSignal } from '@angular/core/rxjs-interop';\r\nimport { FormDateTimePickerComponent } from 'app/shared/date-time-picker/date-time-picker.component';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { CompetencySelectionComponent } from 'app/shared/competency-selection/competency-selection.component';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\nexport interface OnlineUnitFormData {\r\n    name?: string;\r\n    description?: string;\r\n    releaseDate?: dayjs.Dayjs;\r\n    source?: string;\r\n    competencyLinks?: CompetencyLectureUnitLink[];\r\n}\r\n\r\nfunction urlValidator(control: AbstractControl) {\r\n    let validUrl = true;\r\n\r\n    try {\r\n        new URL(control.value);\r\n    } catch {\r\n        validUrl = false;\r\n    }\r\n\r\n    return validUrl ? null : { invalidUrl: true };\r\n}\r\n\r\n@Component({\r\n    selector: 'jhi-online-unit-form',\r\n    templateUrl: './online-unit-form.component.html',\r\n    imports: [FormsModule, ReactiveFormsModule, TranslateDirective, FormDateTimePickerComponent, CompetencySelectionComponent, FaIconComponent, ArtemisTranslatePipe],\r\n})\r\nexport class OnlineUnitFormComponent implements OnChanges {\r\n    protected readonly faArrowLeft = faArrowLeft;\r\n    protected readonly faTimes = faTimes;\r\n\r\n    formData = input<OnlineUnitFormData>();\r\n    isEditMode = input<boolean>(false);\r\n\r\n    formSubmitted = output<OnlineUnitFormData>();\r\n\r\n    hasCancelButton = input<boolean>(false);\r\n    onCancel = output<void>();\r\n\r\n    datePickerComponent = viewChild(FormDateTimePickerComponent);\r\n\r\n    urlValidator = urlValidator;\r\n\r\n    private readonly formBuilder = inject(FormBuilder);\r\n    private readonly onlineUnitService = inject(OnlineUnitService);\r\n\r\n    form: FormGroup = this.formBuilder.group({\r\n        name: [undefined, [Validators.required, Validators.maxLength(255)]],\r\n        description: [undefined, [Validators.maxLength(1000)]],\r\n        releaseDate: [undefined],\r\n        source: [undefined, [Validators.required, this.urlValidator]],\r\n        competencyLinks: [undefined as CompetencyLectureUnitLink[] | undefined],\r\n    });\r\n\r\n    private readonly statusChanges = toSignal(this.form.statusChanges ?? 'INVALID');\r\n    isFormValid = computed(() => this.statusChanges() === 'VALID' && this.datePickerComponent()?.isValid());\r\n\r\n    get nameControl() {\r\n        return this.form.get('name');\r\n    }\r\n\r\n    get descriptionControl() {\r\n        return this.form.get('description');\r\n    }\r\n\r\n    get releaseDateControl() {\r\n        return this.form.get('releaseDate');\r\n    }\r\n\r\n    get sourceControl() {\r\n        return this.form.get('source');\r\n    }\r\n\r\n    ngOnChanges() {\r\n        if (this.isEditMode() && this.formData()) {\r\n            this.setFormValues(this.formData()!);\r\n        }\r\n    }\r\n\r\n    private setFormValues(formData: OnlineUnitFormData) {\r\n        this.form.patchValue(formData);\r\n    }\r\n\r\n    /**\r\n     * When the link is changed, fetch the website's metadata and update the form\r\n     */\r\n    onLinkChanged(): void {\r\n        const value = this.sourceControl?.value;\r\n\r\n        // If the link does not start with any HTTP protocol then add it\r\n        const regex = /https?:\\/\\//;\r\n        if (value && !value.match(regex)) {\r\n            this.sourceControl?.setValue('https://' + value);\r\n        }\r\n\r\n        if (this.sourceControl?.valid) {\r\n            this.onlineUnitService\r\n                .getOnlineResource(this.sourceControl.value)\r\n                .pipe(map((response: HttpResponse<OnlineResourceDTO>) => response.body!))\r\n                .subscribe({\r\n                    next: (onlineResource) => {\r\n                        const updateForm = {\r\n                            name: onlineResource.title || undefined,\r\n                            description: onlineResource.description || undefined,\r\n                        };\r\n                        this.form.patchValue(updateForm);\r\n                    },\r\n                });\r\n        }\r\n    }\r\n\r\n    submitForm() {\r\n        const onlineUnitFormData: OnlineUnitFormData = { ...this.form.value };\r\n        this.formSubmitted.emit(onlineUnitFormData);\r\n    }\r\n\r\n    cancelForm() {\r\n        this.onCancel.emit();\r\n    }\r\n}\r\n", "<form class=\"container\">\r\n    @if (form) {\r\n        <form [formGroup]=\"form\" (ngSubmit)=\"submitForm()\">\r\n            <div class=\"form-group\">\r\n                <label class=\"required\" for=\"source\">{{ 'artemisApp.onlineUnit.createOnlineUnit.source' | artemisTranslate }}*</label>\r\n                <input\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    id=\"source\"\r\n                    formControlName=\"source\"\r\n                    [placeholder]=\"'artemisApp.onlineUnit.createOnlineUnit.sourcePlaceHolder' | artemisTranslate\"\r\n                    (change)=\"onLinkChanged()\"\r\n                />\r\n                <small id=\"urlHelperExplanation\" class=\"form-text text-body-secondary\" jhiTranslate=\"artemisApp.onlineUnit.createOnlineUnit.urlHelperPlaceholder\"></small>\r\n                @if (sourceControl?.invalid && (sourceControl?.dirty || sourceControl?.touched)) {\r\n                    <div class=\"alert alert-danger\">\r\n                        @if (sourceControl?.errors?.required) {\r\n                            <div jhiTranslate=\"artemisApp.onlineUnit.createOnlineUnit.sourceRequiredValidationError\"></div>\r\n                        }\r\n                        @if (sourceControl?.errors?.invalidUrl) {\r\n                            <div jhiTranslate=\"artemisApp.onlineUnit.createOnlineUnit.sourceURLValidationError\"></div>\r\n                        }\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label class=\"required\" for=\"name\">{{ 'artemisApp.onlineUnit.createOnlineUnit.name' | artemisTranslate }} *</label>\r\n                <input\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    id=\"name\"\r\n                    formControlName=\"name\"\r\n                    [placeholder]=\"'artemisApp.onlineUnit.createOnlineUnit.namePlaceHolder' | artemisTranslate\"\r\n                />\r\n                @if (nameControl?.invalid && (nameControl?.dirty || nameControl?.touched)) {\r\n                    <div class=\"alert alert-danger\">\r\n                        @if (nameControl?.errors?.required) {\r\n                            <div jhiTranslate=\"artemisApp.onlineUnit.createOnlineUnit.nameRequiredValidationError\"></div>\r\n                        }\r\n                        @if (nameControl?.errors?.maxlength) {\r\n                            <div jhiTranslate=\"artemisApp.onlineUnit.createOnlineUnit.nameMaxLengthValidationError\"></div>\r\n                        }\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"description\" jhiTranslate=\"artemisApp.onlineUnit.createOnlineUnit.description\"></label>\r\n                <textarea\r\n                    class=\"form-control\"\r\n                    id=\"description\"\r\n                    rows=\"3\"\r\n                    formControlName=\"description\"\r\n                    [placeholder]=\"'artemisApp.onlineUnit.createOnlineUnit.descriptionPlaceHolder' | artemisTranslate\"\r\n                ></textarea>\r\n                @if (descriptionControl?.invalid && (descriptionControl?.dirty || descriptionControl?.touched)) {\r\n                    <div class=\"alert alert-danger\">\r\n                        @if (descriptionControl?.errors?.maxlength) {\r\n                            <div jhiTranslate=\"artemisApp.onlineUnit.createOnlineUnit.descriptionMaxLengthValidationError\"></div>\r\n                        }\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <jhi-date-time-picker [labelName]=\"'artemisApp.lectureUnit.releaseDate' | artemisTranslate\" formControlName=\"releaseDate\" />\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <jhi-competency-selection\r\n                    id=\"competencies\"\r\n                    [labelName]=\"'artemisApp.competency.link.title' | artemisTranslate\"\r\n                    [labelTooltip]=\"'artemisApp.competency.link.lectureUnit' | artemisTranslate\"\r\n                    formControlName=\"competencyLinks\"\r\n                />\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <button id=\"submitButton\" class=\"btn btn-primary\" type=\"submit\" [disabled]=\"!isFormValid()\">\r\n                        <span jhiTranslate=\"entity.action.submit\"></span>\r\n                    </button>\r\n                    @if (hasCancelButton()) {\r\n                        <button type=\"button\" (click)=\"cancelForm()\" class=\"btn btn-secondary\">\r\n                            <fa-icon [icon]=\"faTimes\" />&nbsp;<span jhiTranslate=\"entity.action.cancel\"></span>\r\n                        </button>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </form>\r\n    }\r\n</form>\r\n"],
  "mappings": "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",
  "names": ["OnlineUnitService", "httpClient", "inject", "HttpClient", "lectureUnitService", "LectureUnitService", "resourceURL", "create", "onlineUnit", "lectureId", "post", "observe", "pipe", "map", "res", "convertLectureUnitResponseDatesFromServer", "findById", "onlineUnitId", "get", "update", "put", "getOnlineResource", "link", "params", "HttpParams", "set", "String", "factory", "\u0275fac", "providedIn", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275elementStart", "\u0275\u0275template", "OnlineUnitFormComponent_Conditional_2_Conditional_14_Conditional_3_Template", "OnlineUnitFormComponent_Conditional_2_Conditional_14_Conditional_4_Template", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275conditional", "ctx_r1", "sourceControl", "errors", "required", "invalidUrl", "OnlineUnitFormComponent_Conditional_2_Conditional_25_Conditional_3_Template", "OnlineUnitFormComponent_Conditional_2_Conditional_25_Conditional_4_Template", "nameControl", "maxlength", "OnlineUnitFormComponent_Conditional_2_Conditional_34_Conditional_3_Template", "descriptionControl", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r3", "\u0275\u0275nextContext", "\u0275\u0275resetView", "cancelForm", "\u0275\u0275property", "faTimes", "_r1", "submitForm", "onLinkChanged", "OnlineUnitFormComponent_Conditional_2_Conditional_14_Template", "OnlineUnitFormComponent_Conditional_2_Conditional_25_Template", "OnlineUnitFormComponent_Conditional_2_Conditional_34_Template", "OnlineUnitFormComponent_Conditional_2_Conditional_58_Template", "form", "\u0275\u0275textInterpolate1", "\u0275\u0275pipeBind1", "invalid", "dirty", "touched", "isFormValid", "hasCancelButton", "urlValidator", "control", "validUrl", "URL", "value", "OnlineUnitFormComponent", "faArrowLeft", "formData", "input", "isEditMode", "formSubmitted", "output", "onCancel", "datePickerComponent", "viewChild", "FormDateTimePickerComponent", "formBuilder", "inject", "FormBuilder", "onlineUnitService", "OnlineUnitService", "group", "name", "undefined", "Validators", "maxLength", "description", "releaseDate", "source", "competencyLinks", "statusChanges", "toSignal", "computed", "isValid", "get", "releaseDateControl", "ngOnChanges", "setFormValues", "patchValue", "regex", "match", "setValue", "valid", "getOnlineResource", "pipe", "map", "response", "body", "subscribe", "next", "onlineResource", "updateForm", "title", "onlineUnitFormData", "__spreadValues", "emit", "selectors", "viewQuery", "rf", "ctx", "OnlineUnitFormComponent_Conditional_2_Template", "FormsModule", "\u0275NgNoValidate", "DefaultValueAccessor", "NgControlStatus", "NgControlStatusGroup", "NgForm", "ReactiveFormsModule", "FormGroupDirective", "FormControlName", "TranslateDirective", "CompetencySelectionComponent", "FaIconComponent", "ArtemisTranslatePipe", "encapsulation"]
}
