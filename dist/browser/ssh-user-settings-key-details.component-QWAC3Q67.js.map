{
  "version": 3,
  "sources": ["src/main/webapp/app/shared/user-settings/ssh-settings/details/ssh-user-settings-key-details.component.ts", "src/main/webapp/app/shared/user-settings/ssh-settings/details/ssh-user-settings-key-details.component.html"],
  "sourcesContent": ["import { Component, OnDestroy, OnInit, inject } from '@angular/core';\r\nimport { DocumentationLinkComponent } from 'app/shared/components/documentation-link/documentation-link.component';\r\nimport { FormDateTimePickerComponent } from 'app/shared/date-time-picker/date-time-picker.component';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\nimport { Subject, Subscription, concatMap, filter, tap } from 'rxjs';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { faEdit, faSave } from '@fortawesome/free-solid-svg-icons';\r\nimport { DocumentationType } from 'app/shared/components/documentation-button/documentation-button.component';\r\nimport { ButtonComponent, ButtonSize, ButtonType } from 'app/shared/components/button.component';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { getOS } from 'app/shared/util/os-detector.util';\r\nimport { UserSshPublicKey } from 'app/entities/programming/user-ssh-public-key.model';\r\nimport dayjs from 'dayjs/esm';\r\nimport { SshUserSettingsService } from 'app/shared/user-settings/ssh-settings/ssh-user-settings.service';\r\nimport { DateTimePickerType } from 'app/shared/date-time-picker/date-time-picker.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-account-information',\r\n    templateUrl: './ssh-user-settings-key-details.component.html',\r\n    styleUrls: ['../../user-settings.scss', '../ssh-user-settings.component.scss'],\r\n    imports: [TranslateDirective, DocumentationLinkComponent, FormsModule, FormDateTimePickerComponent, ButtonComponent, ArtemisDatePipe, ArtemisTranslatePipe],\r\n})\r\nexport class SshUserSettingsKeyDetailsComponent implements OnInit, OnDestroy {\r\n    private sshUserSettingsService = inject(SshUserSettingsService);\r\n    readonly route = inject(ActivatedRoute);\r\n    readonly router = inject(Router);\r\n    readonly alertService = inject(AlertService);\r\n\r\n    readonly documentationType: DocumentationType = 'SshSetup';\r\n    readonly invalidKeyFormat = 'invalidKeyFormat';\r\n    readonly keyAlreadyExists = 'keyAlreadyExists';\r\n    readonly keyLabelTooLong = 'keyLabelTooLong';\r\n\r\n    protected readonly faEdit = faEdit;\r\n    protected readonly faSave = faSave;\r\n    protected readonly ButtonType = ButtonType;\r\n    protected readonly ButtonSize = ButtonSize;\r\n\r\n    subscription: Subscription;\r\n\r\n    // state change variables\r\n    isCreateMode = false; // true when creating new key, false when viewing existing key\r\n    isLoading = true;\r\n\r\n    copyInstructions = '';\r\n    selectedOption: string = 'doNotUseExpiration';\r\n\r\n    // Key details from input fields\r\n    displayedKeyLabel = '';\r\n    displayedSshKey = '';\r\n    displayedKeyHash = '';\r\n    hasExpired? = false;\r\n    displayedExpiryDate?: dayjs.Dayjs;\r\n    isExpiryDateValid = false;\r\n    displayCreationDate: dayjs.Dayjs;\r\n    displayedLastUsedDate?: dayjs.Dayjs;\r\n    currentDate: dayjs.Dayjs;\r\n\r\n    private dialogErrorSource = new Subject<string>();\r\n    dialogError$ = this.dialogErrorSource.asObservable();\r\n\r\n    ngOnInit() {\r\n        this.setMessageBasedOnOS(getOS());\r\n        this.currentDate = dayjs();\r\n\r\n        this.subscription = this.route.params\r\n            .pipe(\r\n                filter((params) => {\r\n                    const keyId = Number(params['keyId']);\r\n                    if (keyId) {\r\n                        this.isCreateMode = false;\r\n                        return true;\r\n                    } else {\r\n                        this.isLoading = false;\r\n                        this.isCreateMode = true;\r\n                        return false;\r\n                    }\r\n                }),\r\n                concatMap((params) => {\r\n                    return this.sshUserSettingsService.getSshPublicKey(Number(params['keyId']));\r\n                }),\r\n                tap((publicKey: UserSshPublicKey) => {\r\n                    this.displayedSshKey = publicKey.publicKey;\r\n                    this.displayedKeyLabel = publicKey.label;\r\n                    this.displayedKeyHash = publicKey.keyHash;\r\n                    this.displayCreationDate = publicKey.creationDate;\r\n                    this.displayedExpiryDate = publicKey.expiryDate;\r\n                    this.displayedLastUsedDate = publicKey.lastUsedDate;\r\n                    this.hasExpired = publicKey.expiryDate && dayjs().isAfter(dayjs(publicKey.expiryDate));\r\n                    this.isLoading = false;\r\n                }),\r\n            )\r\n            .subscribe();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscription.unsubscribe();\r\n    }\r\n\r\n    saveSshKey() {\r\n        const newUserSshKey = {\r\n            label: this.displayedKeyLabel,\r\n            publicKey: this.displayedSshKey,\r\n            expiryDate: this.displayedExpiryDate,\r\n        } as UserSshPublicKey;\r\n        this.sshUserSettingsService.addNewSshPublicKey(newUserSshKey).subscribe({\r\n            next: () => {\r\n                this.alertService.success('artemisApp.userSettings.sshSettingsPage.saveSuccess');\r\n                this.goBack();\r\n            },\r\n            error: (error) => {\r\n                const errorKey = error.error.errorKey;\r\n                if ([this.invalidKeyFormat, this.keyAlreadyExists, this.keyLabelTooLong].indexOf(errorKey) > -1) {\r\n                    this.alertService.error(`artemisApp.userSettings.sshSettingsPage.${errorKey}`);\r\n                } else {\r\n                    this.alertService.error('artemisApp.userSettings.sshSettingsPage.saveFailure');\r\n                }\r\n            },\r\n        });\r\n    }\r\n\r\n    goBack() {\r\n        this.router.navigate(['/user-settings/ssh']);\r\n    }\r\n\r\n    validateExpiryDate() {\r\n        this.isExpiryDateValid = !!this.displayedExpiryDate?.isValid();\r\n    }\r\n\r\n    private setMessageBasedOnOS(os: string): void {\r\n        switch (os) {\r\n            case 'Windows':\r\n                this.copyInstructions = 'cat ~/.ssh/id_ed25519.pub | clip';\r\n                break;\r\n            case 'MacOS':\r\n                this.copyInstructions = 'pbcopy < ~/.ssh/id_ed25519.pub';\r\n                break;\r\n            case 'Linux':\r\n                this.copyInstructions = 'xclip -selection clipboard < ~/.ssh/id_ed25519.pub';\r\n                break;\r\n            case 'Android':\r\n                this.copyInstructions = 'termux-clipboard-set < ~/.ssh/id_ed25519.pub';\r\n                break;\r\n            default:\r\n                this.copyInstructions = 'Ctrl + C';\r\n        }\r\n    }\r\n\r\n    protected readonly DateTimePickerType = DateTimePickerType;\r\n}\r\n", "@if (isLoading) {\r\n    <h1 jhiTranslate=\"artemisApp.userSettings.sshSettings\"></h1>\r\n} @else {\r\n    @if (!isCreateMode) {\r\n        <h1 jhiTranslate=\"artemisApp.userSettings.sshSettingsPage.sshKeyDetails\"></h1>\r\n    } @else {\r\n        <h1 jhiTranslate=\"artemisApp.userSettings.sshSettingsPage.addNewSshKey\"></h1>\r\n    }\r\n\r\n    <div class=\"list-group d-block\">\r\n        <!-- Viewing existing key and creating a new key -->\r\n        <div class=\"list-group-item\">\r\n            <div class=\"d-flex flex-wrap\">\r\n                <p>\r\n                    <span class=\"large-text\" jhiTranslate=\"artemisApp.userSettings.sshSettingsPage.whatToUseSSHForInfo\"></span>\r\n                    <jhi-documentation-link [documentationType]=\"documentationType\" [displayString]=\"'artemisApp.userSettings.sshSettingsPage.learnMore'\" />\r\n                </p>\r\n            </div>\r\n\r\n            @if (isCreateMode) {\r\n                <div>\r\n                    <p class=\"large-text\" jhiTranslate=\"artemisApp.userSettings.sshSettingsPage.key\"></p>\r\n                </div>\r\n            } @else {\r\n                <div>\r\n                    <p class=\"large-text\">{{ displayedKeyLabel }}</p>\r\n                </div>\r\n            }\r\n            <div>\r\n                <textarea class=\"form-control\" rows=\"10\" [readonly]=\"!isCreateMode\" [(ngModel)]=\"displayedSshKey\" data-testid=\"sshKeyField\"></textarea>\r\n            </div>\r\n\r\n            <!-- input fields for key creation -->\r\n            @if (isCreateMode) {\r\n                <div class=\"d-flex flex-wrap mb-4\">\r\n                    <p class=\"small-text\">\r\n                        <span jhiTranslate=\"artemisApp.userSettings.sshSettingsPage.alreadyHaveKey\"> </span>\r\n                        <code> {{ copyInstructions }} </code>\r\n                    </p>\r\n                </div>\r\n\r\n                <div class=\"mb-4\">\r\n                    <p class=\"large-text\" jhiTranslate=\"artemisApp.userSettings.sshSettingsPage.label\"></p>\r\n                    <textarea class=\"form-control small-text-area\" rows=\"1\" [readonly]=\"!isCreateMode\" [(ngModel)]=\"displayedKeyLabel\" maxlength=\"50\">></textarea>\r\n                    <p class=\"small-text\">\r\n                        <span jhiTranslate=\"artemisApp.userSettings.sshSettingsPage.commentUsedAsLabel\"> </span>\r\n                    </p>\r\n                </div>\r\n\r\n                <!-- Expiry date settings -->\r\n                <div>\r\n                    <span class=\"large-text\" jhiTranslate=\"artemisApp.userSettings.sshSettingsPage.expiry.title\"></span>\r\n                    <p jhiTranslate=\"artemisApp.userSettings.sshSettingsPage.expiry.info\"></p>\r\n                </div>\r\n                <div>\r\n                    <label class=\"form-check-label\">\r\n                        <input class=\"form-check-input\" type=\"radio\" name=\"activationOption\" [(ngModel)]=\"selectedOption\" value=\"doNotUseExpiration\" />\r\n                        <span jhiTranslate=\"artemisApp.userSettings.sshSettingsPage.expiry.doNotExpire\"></span>\r\n                    </label>\r\n                </div>\r\n                <div>\r\n                    <label class=\"form-check-label\">\r\n                        <input class=\"form-check-input\" type=\"radio\" name=\"activationOption\" [(ngModel)]=\"selectedOption\" value=\"useExpiration\" />\r\n                        <span jhiTranslate=\"artemisApp.userSettings.sshSettingsPage.expiry.expireAutomatically\"></span>\r\n                    </label>\r\n                </div>\r\n\r\n                <!-- expiry date date picker -->\r\n                @if (selectedOption === 'useExpiration') {\r\n                    <div class=\"mt-4\">\r\n                        <div class=\"col-sm-4\">\r\n                            <jhi-date-time-picker\r\n                                labelName=\"{{ 'artemisApp.userSettings.sshSettingsPage.expiryDate' | artemisTranslate }}\"\r\n                                [(ngModel)]=\"displayedExpiryDate\"\r\n                                [pickerType]=\"DateTimePickerType.CALENDAR\"\r\n                                [shouldDisplayTimeZoneWarning]=\"false\"\r\n                                [min]=\"currentDate\"\r\n                                [requiredField]=\"true\"\r\n                                (valueChange)=\"validateExpiryDate()\"\r\n                                name=\"expiryDate\"\r\n                                id=\"expiryDate\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                }\r\n            } @else {\r\n                <!-- View for viewing key details -->\r\n                @if (displayCreationDate) {\r\n                    <div class=\"text-and-date large-text mt-4\">\r\n                        <div jhiTranslate=\"artemisApp.userSettings.sshSettingsPage.createdOn\"></div>\r\n                        <div>\r\n                            {{ displayCreationDate | artemisDate: 'long-date' }}\r\n                        </div>\r\n                    </div>\r\n                }\r\n                @if (displayedLastUsedDate) {\r\n                    <div class=\"text-and-date large-text mt-2\">\r\n                        <div jhiTranslate=\"artemisApp.userSettings.sshSettingsPage.lastUsedOn\"></div>\r\n                        <div>\r\n                            {{ displayedLastUsedDate | artemisDate: 'long-date' }}\r\n                        </div>\r\n                    </div>\r\n                }\r\n                @if (displayedExpiryDate) {\r\n                    <div class=\"text-and-date large-text mt-2\">\r\n                        <div jhiTranslate=\"artemisApp.userSettings.sshSettingsPage.{{ hasExpired ? 'hasExpiredOn' : 'expiresOn' }}\"></div>\r\n                        <div>\r\n                            {{ displayedExpiryDate | artemisDate: 'long-date' }}\r\n                        </div>\r\n                    </div>\r\n                }\r\n            }\r\n            <div class=\"col col-auto text-right mt-4\">\r\n                @if (isCreateMode) {\r\n                    <div class=\"btn-group\" role=\"group\" aria-label=\"Actions\">\r\n                        <jhi-button\r\n                            [disabled]=\"\r\n                                !(displayedSshKey && ((selectedOption === 'useExpiration' && displayedExpiryDate && isExpiryDateValid) || selectedOption !== 'useExpiration'))\r\n                            \"\r\n                            [btnType]=\"ButtonType.PRIMARY\"\r\n                            [btnSize]=\"ButtonSize.SMALL\"\r\n                            [icon]=\"faSave\"\r\n                            [title]=\"'artemisApp.userSettings.sshSettingsPage.saveSshKey'\"\r\n                            (onClick)=\"saveSshKey()\"\r\n                            data-testid=\"saveSshKeyButton\"\r\n                        />\r\n                    </div>\r\n                }\r\n                <div class=\"btn-group\" role=\"group\" aria-label=\"Actions\">\r\n                    <jhi-button\r\n                        [btnType]=\"ButtonType.PRIMARY\"\r\n                        [btnSize]=\"ButtonSize.SMALL\"\r\n                        [title]=\"isCreateMode ? 'artemisApp.userSettings.sshSettingsPage.cancelSavingSshKey' : 'artemisApp.userSettings.sshSettingsPage.back'\"\r\n                        (onClick)=\"goBack()\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n"],
  "mappings": "+3CCCIA,EAAA,EAAA;KAAA,EAAAC,EAAA,EAAA,KAAA,CAAA,EACJD,EAAA,EAAA;CAAA,0BAEQA,EAAA,EAAA;SAAA,EAAAC,EAAA,EAAA,KAAA,EAAA,EACJD,EAAA,EAAA;KAAA,0BACIA,EAAA,EAAA;SAAA,EAAAC,EAAA,EAAA,KAAA,EAAA,EACJD,EAAA,EAAA;KAAA,0BAaYA,EAAA,EAAA;iBAAA,EAAAE,EAAA,EAAA,KAAA,EACIF,EAAA,EAAA;qBAAA,EAAAC,EAAA,EAAA,IAAA,EAAA,EACJD,EAAA,EAAA;iBAAA,EAAAG,EAAA,EACJH,EAAA,EAAA;aAAA,6BACIA,EAAA,EAAA;iBAAA,EAAAE,EAAA,EAAA,KAAA,EACIF,EAAA,EAAA;qBAAA,EAAAE,EAAA,EAAA,IAAA,EAAA,EAAsBF,EAAA,CAAA,EAAuBG,EAAA,EACjDH,EAAA,EAAA;iBAAA,EAAAG,EAAA,EACJH,EAAA,EAAA;aAAA,mBAF8BI,EAAA,CAAA,EAAAC,EAAAC,EAAAC,iBAAA,sCA4CtBP,EAAA,EAAA;qBAAA,EAAAE,EAAA,EAAA,MAAA,EAAA,EACIF,EAAA,EAAA;yBAAA,EAAAE,EAAA,EAAA,MAAA,EAAA,EACIF,EAAA,EAAA;6BAAA,EAAAE,EAAA,EAAA,uBAAA,EAAA,0BAEIM,EAAA,gBAAA,SAAAC,EAAA,CAAAC,EAAAC,CAAA,EAAA,IAAAL,EAAAM,EAAA,CAAA,EAAAC,OAAAC,EAAAR,EAAAS,oBAAAN,CAAA,IAAAH,EAAAS,oBAAAN,GAAAO,EAAAP,CAAA,CAAA,CAAA,EAKAQ,EAAA,cAAA,UAAA,CAAAP,EAAAC,CAAA,EAAA,IAAAL,EAAAM,EAAA,CAAA,EAAA,OAAAI,EAAeV,EAAAY,mBAAA,CAAoB,CAAA,CAAA,EAPvCf,EAAA,EAWJH,EAAA,EAAA;yBAAA,EAAAG,EAAA,EACJH,EAAA,EAAA;qBAAA,EAAAG,EAAA,EACJH,EAAA,EAAA;iBAAA,qBAZgBI,EAAA,CAAA,EAAAe,EAAA,YAAAC,EAAA,EAAA,EAAA,oDAAA,CAAA,EACAC,EAAA,UAAAf,EAAAS,mBAAA,EACAO,EAAA,aAAAhB,EAAAiB,mBAAAC,QAAA,EAA0C,+BAAA,EAAA,EACJ,MAAAlB,EAAAmB,WAAA,EACnB,gBAAA,EAAA,sCA1CnCzB,EAAA,EAAA;iBAAA,EAAAE,EAAA,EAAA,MAAA,EAAA,EACIF,EAAA,EAAA;qBAAA,EAAAE,EAAA,EAAA,IAAA,EAAA,EACIF,EAAA,EAAA;yBAAA,EAAAE,EAAA,EAAA,OAAA,EAAA,EAA6EF,EAAA,EAAA,GAAA,EAAAG,EAAA,EAC7EH,EAAA,EAAA;yBAAA,EAAAE,EAAA,EAAA,MAAA,EAAOF,EAAA,CAAA,EAAuBG,EAAA,EAClCH,EAAA,GAAA;qBAAA,EAAAG,EAAA,EACJH,EAAA,GAAA;iBAAA,EAAAG,EAAA,EAEAH,EAAA,GAAA;;iBAAA,EAAAE,EAAA,GAAA,MAAA,EAAA,EACIF,EAAA,GAAA;qBAAA,EAAAC,EAAA,GAAA,IAAA,EAAA,EACAD,EAAA,GAAA;qBAAA,EAAAE,EAAA,GAAA,WAAA,EAAA,EAAmFM,EAAA,gBAAA,SAAAC,EAAA,CAAAC,EAAAgB,CAAA,EAAA,IAAApB,EAAAM,EAAA,CAAA,EAAAC,OAAAC,EAAAR,EAAAC,kBAAAE,CAAA,IAAAH,EAAAC,kBAAAE,GAAAO,EAAAP,CAAA,CAAA,CAAA,EAA+CT,EAAA,GAAA,GAAA,EAACG,EAAA,EACnIH,EAAA,GAAA;qBAAA,EAAAE,EAAA,GAAA,IAAA,EAAA,EACIF,EAAA,GAAA;yBAAA,EAAAE,EAAA,GAAA,OAAA,EAAA,EAAiFF,EAAA,GAAA,GAAA,EAAAG,EAAA,EACrFH,EAAA,GAAA;qBAAA,EAAAG,EAAA,EACJH,EAAA,GAAA;iBAAA,EAAAG,EAAA,EAEAH,EAAA,GAAA;;iBAAA,EACAA,EAAA,GAAA;iBAAA,EAAAE,EAAA,GAAA,KAAA,EACIF,EAAA,GAAA;qBAAA,EAAAC,EAAA,GAAA,OAAA,EAAA,EACAD,EAAA,GAAA;qBAAA,EAAAC,EAAA,GAAA,IAAA,EAAA,EACJD,EAAA,GAAA;iBAAA,EAAAG,EAAA,EACAH,EAAA,GAAA;iBAAA,EAAAE,EAAA,GAAA,KAAA,EACIF,EAAA,GAAA;qBAAA,EAAAE,EAAA,GAAA,QAAA,EAAA,EACIF,EAAA,GAAA;yBAAA,EAAAE,EAAA,GAAA,QAAA,EAAA,EAAqEM,EAAA,gBAAA,SAAAC,EAAA,CAAAC,EAAAgB,CAAA,EAAA,IAAApB,EAAAM,EAAA,CAAA,EAAAC,OAAAC,EAAAR,EAAAqB,eAAAlB,CAAA,IAAAH,EAAAqB,eAAAlB,GAAAO,EAAAP,CAAA,CAAA,CAAA,EAArEN,EAAA,EACAH,EAAA,GAAA;yBAAA,EAAAC,EAAA,GAAA,OAAA,EAAA,EACJD,EAAA,GAAA;qBAAA,EAAAG,EAAA,EACJH,EAAA,GAAA;iBAAA,EAAAG,EAAA,EACAH,EAAA,GAAA;iBAAA,EAAAE,EAAA,GAAA,KAAA,EACIF,EAAA,GAAA;qBAAA,EAAAE,EAAA,GAAA,QAAA,EAAA,EACIF,EAAA,GAAA;yBAAA,EAAAE,EAAA,GAAA,QAAA,EAAA,EAAqEM,EAAA,gBAAA,SAAAC,EAAA,CAAAC,EAAAgB,CAAA,EAAA,IAAApB,EAAAM,EAAA,CAAA,EAAAC,OAAAC,EAAAR,EAAAqB,eAAAlB,CAAA,IAAAH,EAAAqB,eAAAlB,GAAAO,EAAAP,CAAA,CAAA,CAAA,EAArEN,EAAA,EACAH,EAAA,GAAA;yBAAA,EAAAC,EAAA,GAAA,OAAA,EAAA,EACJD,EAAA,GAAA;qBAAA,EAAAG,EAAA,EACJH,EAAA,GAAA;iBAAA,EAAAG,EAAA,EAEAH,EAAA,GAAA;;iBAAA,EACAA,EAAA,GAAA;iBAAA,EAAA4B,EAAA,GAAAC,GAAA,GAAA,CAAA,qBA/BezB,EAAA,CAAA,EAAA0B,EAAA,IAAAxB,EAAAyB,iBAAA,GAAA,EAM6C3B,EAAA,CAAA,EAAAkB,EAAA,WAAA,CAAAhB,EAAA0B,YAAA,EAA2BX,EAAA,UAAAf,EAAAC,iBAAA,EAaVH,EAAA,EAAA,EAAAiB,EAAA,UAAAf,EAAAqB,cAAA,EAMAvB,EAAA,EAAA,EAAAiB,EAAA,UAAAf,EAAAqB,cAAA,EAM7EvB,EAAA,CAAA,EAAA6B,EAAA3B,EAAAqB,iBAAA,gBAAA,GAAA,EAAA,6BAoBI3B,EAAA,EAAA;qBAAA,EAAAE,EAAA,EAAA,MAAA,EAAA,EACIF,EAAA,EAAA;yBAAA,EAAAC,EAAA,EAAA,MAAA,EAAA,EACAD,EAAA,EAAA;yBAAA,EAAAE,EAAA,EAAA,KAAA,EACIF,EAAA,CAAA,qBACJG,EAAA,EACJH,EAAA,EAAA;qBAAA,EAAAG,EAAA,EACJH,EAAA,EAAA;iBAAA,mBAHYI,EAAA,CAAA,EAAA0B,EAAA;8BAAAI,EAAA,EAAA,EAAA5B,EAAA6B,oBAAA,WAAA,EAAA;yBAAA,6BAKRnC,EAAA,EAAA;qBAAA,EAAAE,EAAA,EAAA,MAAA,EAAA,EACIF,EAAA,EAAA;yBAAA,EAAAC,EAAA,EAAA,MAAA,EAAA,EACAD,EAAA,EAAA;yBAAA,EAAAE,EAAA,EAAA,KAAA,EACIF,EAAA,CAAA,qBACJG,EAAA,EACJH,EAAA,EAAA;qBAAA,EAAAG,EAAA,EACJH,EAAA,EAAA;iBAAA,mBAHYI,EAAA,CAAA,EAAA0B,EAAA;8BAAAI,EAAA,EAAA,EAAA5B,EAAA8B,sBAAA,WAAA,EAAA;yBAAA,6BAKRpC,EAAA,EAAA;qBAAA,EAAAE,EAAA,EAAA,MAAA,EAAA,EACIF,EAAA,EAAA;yBAAA,EAAAC,EAAA,EAAA,MAAA,EAAA,EACAD,EAAA,EAAA;yBAAA,EAAAE,EAAA,EAAA,KAAA,EACIF,EAAA,CAAA,qBACJG,EAAA,EACJH,EAAA,EAAA;qBAAA,EAAAG,EAAA,EACJH,EAAA,EAAA;iBAAA,mBALaI,EAAA,CAAA,EAAAiC,EAAA,eAAA,2CAAA/B,EAAAgC,WAAA,eAAA,YAAA,EAAA,EAEDlC,EAAA,CAAA,EAAA0B,EAAA;8BAAAI,EAAA,EAAA,EAAA5B,EAAAS,oBAAA,WAAA,EAAA;yBAAA,6BArBZf,EAAA,EAAA;iBAAA,EACAA,EAAA,EAAA;iBAAA,EAAA4B,EAAA,EAAAW,GAAA,GAAA,CAAA,EAA2B,EAAAC,GAAA,GAAA,CAAA,EAQE,EAAAC,GAAA,GAAA,CAAA,mBAR7BrC,EAAA,CAAA,EAAA6B,EAAA3B,EAAA6B,oBAAA,EAAA,EAAA,EAQA/B,EAAA,EAAA6B,EAAA3B,EAAA8B,sBAAA,EAAA,EAAA,EAQAhC,EAAA,EAAA6B,EAAA3B,EAAAS,oBAAA,EAAA,EAAA,sCAWIf,EAAA,EAAA;qBAAA,EAAAE,EAAA,EAAA,MAAA,CAAA,EACIF,EAAA,EAAA;yBAAA,EAAAE,EAAA,EAAA,aAAA,EAAA,EAQIe,EAAA,UAAA,UAAA,CAAAP,EAAAgC,CAAA,EAAA,IAAApC,EAAAM,EAAA,CAAA,EAAA,OAAAI,EAAWV,EAAAqC,WAAA,CAAY,CAAA,CAAA,EAR3BxC,EAAA,EAWJH,EAAA,EAAA;qBAAA,EAAAG,EAAA,EACJH,EAAA,EAAA;iBAAA,qBAXYI,EAAA,CAAA,EAAAkB,EAAA,WAAA,EAAAhB,EAAAsC,kBAAAtC,EAAAqB,iBAAA,iBAAArB,EAAAS,qBAAAT,EAAAuC,mBAAAvC,EAAAqB,iBAAA,iBAAA,EAEC,UAAArB,EAAAwC,WAAAC,OAAA,EAC6B,UAAAzC,EAAA0C,WAAAC,KAAA,EACF,OAAA3C,EAAA4C,MAAA,EACb,QAAA,oDAAA,sCAtHvClD,EAAA,EAAA;KAAA,EAAA4B,EAAA,EAAAuB,GAAA,EAAA,CAAA,EAAqB,EAAAC,GAAA,EAAA,CAAA,EAMrBlD,EAAA,EAAA,MAAA,CAAA,EACIF,EAAA,EAAA;SAAA,EACAA,EAAA,EAAA;SAAA,EAAAE,EAAA,EAAA,MAAA,CAAA,EACIF,EAAA,EAAA;aAAA,EAAAE,EAAA,EAAA,MAAA,CAAA,EACIF,EAAA,EAAA;iBAAA,EAAAE,EAAA,GAAA,GAAA,EACIF,EAAA,GAAA;qBAAA,EAAAC,EAAA,GAAA,OAAA,CAAA,EACAD,EAAA,GAAA;qBAAA,EAAAC,EAAA,GAAA,yBAAA,CAAA,EACJD,EAAA,GAAA;iBAAA,EAAAG,EAAA,EACJH,EAAA,GAAA;aAAA,EAAAG,EAAA,EAEAH,EAAA,GAAA;;aAAA,EAAA4B,EAAA,GAAAyB,GAAA,EAAA,CAAA,EAAoB,GAAAC,GAAA,EAAA,CAAA,EASpBpD,EAAA,GAAA,KAAA,EACIF,EAAA,GAAA;iBAAA,EAAAE,EAAA,GAAA,WAAA,CAAA,EAAoEM,EAAA,gBAAA,SAAAC,EAAA,CAAAC,EAAA6C,CAAA,EAAA,IAAAjD,EAAAM,EAAA,EAAAC,OAAAC,EAAAR,EAAAsC,gBAAAnC,CAAA,IAAAH,EAAAsC,gBAAAnC,GAAAO,EAAAP,CAAA,CAAA,CAAA,EAAwDN,EAAA,EAChIH,EAAA,GAAA;aAAA,EAAAG,EAAA,EAEAH,EAAA,GAAA;;aAAA,EACAA,EAAA,GAAA;aAAA,EAAA4B,EAAA,GAAA4B,GAAA,GAAA,CAAA,EAAoB,GAAAC,GAAA,EAAA,CAAA,EA+EpBvD,EAAA,GAAA,MAAA,CAAA,EACIF,EAAA,GAAA;iBAAA,EAAA4B,EAAA,GAAA8B,GAAA,EAAA,CAAA,EAeAxD,EAAA,GAAA,MAAA,CAAA,EACIF,EAAA,GAAA;qBAAA,EAAAE,EAAA,GAAA,aAAA,CAAA,EAIIe,EAAA,UAAA,UAAA,CAAAP,EAAA6C,CAAA,EAAA,IAAAjD,EAAAM,EAAA,EAAA,OAAAI,EAAWV,EAAAqD,OAAA,CAAQ,CAAA,CAAA,EAJvBxD,EAAA,EAMJH,EAAA,GAAA;iBAAA,EAAAG,EAAA,EACJH,EAAA,GAAA;aAAA,EAAAG,EAAA,EACJH,EAAA,GAAA;SAAA,EAAAG,EAAA,EACJH,EAAA,GAAA;KAAA,EAAAG,EAAA,EACJH,EAAA,GAAA;CAAA,oBAxIII,EAAA,EAAA6B,EAAA3B,EAAA0B,aAAA,EAAA,CAAA,EAYwC5B,EAAA,EAAA,EAAAkB,EAAA,oBAAAhB,EAAAsD,iBAAA,EAAuC,gBAAA,mDAAA,EAIvExD,EAAA,CAAA,EAAA6B,EAAA3B,EAAA0B,aAAA,GAAA,EAAA,EAU6C5B,EAAA,CAAA,EAAAkB,EAAA,WAAA,CAAAhB,EAAA0B,YAAA,EAA2BX,EAAA,UAAAf,EAAAsC,eAAA,EAIxExC,EAAA,CAAA,EAAA6B,EAAA3B,EAAA0B,aAAA,GAAA,EAAA,EAgFI5B,EAAA,CAAA,EAAA6B,EAAA3B,EAAA0B,aAAA,GAAA,EAAA,EAiBQ5B,EAAA,CAAA,EAAAkB,EAAA,UAAAhB,EAAAwC,WAAAC,OAAA,EAA8B,UAAAzC,EAAA0C,WAAAC,KAAA,EACF,QAAA3C,EAAA0B,aAAA,6DAAA,8CAAA,GD1GpD,IAAa6B,IAAkC,IAAA,CAAzC,MAAOA,CAAkC,CACnCC,uBAAyBC,EAAOC,CAAsB,EACrDC,MAAQF,EAAOG,CAAc,EAC7BC,OAASJ,EAAOK,CAAM,EACtBC,aAAeN,EAAOO,CAAY,EAElCV,kBAAuC,WACvCW,iBAAmB,mBACnBC,iBAAmB,mBACnBC,gBAAkB,kBAERC,OAASA,EACTxB,OAASA,EACTJ,WAAaA,EACbE,WAAaA,EAEhC2B,aAGA3C,aAAe,GACf4C,UAAY,GAEZ7C,iBAAmB,GACnBJ,eAAyB,qBAGzBpB,kBAAoB,GACpBqC,gBAAkB,GAClBiC,iBAAmB,GACnBvC,WAAc,GACdvB,oBACA8B,kBAAoB,GACpBV,oBACAC,sBACAX,YAEQqD,kBAAoB,IAAIC,EAChCC,aAAe,KAAKF,kBAAkBG,aAAY,EAElDC,UAAQ,CACJ,KAAKC,oBAAoBC,GAAK,CAAE,EAChC,KAAK3D,YAAc4D,EAAK,EAExB,KAAKV,aAAe,KAAKV,MAAMqB,OAC1BC,KACGC,EAAQF,GACUG,OAAOH,EAAO,KAAQ,GAEhC,KAAKtD,aAAe,GACb,KAEP,KAAK4C,UAAY,GACjB,KAAK5C,aAAe,GACb,GAEd,EACD0D,EAAWJ,GACA,KAAKxB,uBAAuB6B,gBAAgBF,OAAOH,EAAO,KAAQ,CAAC,CAC7E,EACDM,EAAKC,GAA+B,CAChC,KAAKjD,gBAAkBiD,EAAUA,UACjC,KAAKtF,kBAAoBsF,EAAUC,MACnC,KAAKjB,iBAAmBgB,EAAUE,QAClC,KAAK5D,oBAAsB0D,EAAUG,aACrC,KAAKjF,oBAAsB8E,EAAUI,WACrC,KAAK7D,sBAAwByD,EAAUK,aACvC,KAAK5D,WAAauD,EAAUI,YAAcZ,EAAK,EAAGc,QAAQd,EAAMQ,EAAUI,UAAU,CAAC,EACrF,KAAKrB,UAAY,EACrB,CAAC,CAAC,EAELwB,UAAS,CAClB,CAEAC,aAAW,CACP,KAAK1B,aAAa2B,YAAW,CACjC,CAEA3D,YAAU,CACN,IAAM4D,EAAgB,CAClBT,MAAO,KAAKvF,kBACZsF,UAAW,KAAKjD,gBAChBqD,WAAY,KAAKlF,qBAErB,KAAK+C,uBAAuB0C,mBAAmBD,CAAa,EAAEH,UAAU,CACpEK,KAAMA,IAAK,CACP,KAAKpC,aAAaqC,QAAQ,qDAAqD,EAC/E,KAAK/C,OAAM,CACf,EACAgD,MAAQA,GAAS,CACb,IAAMC,EAAWD,EAAMA,MAAMC,SACzB,CAAC,KAAKrC,iBAAkB,KAAKC,iBAAkB,KAAKC,eAAe,EAAEoC,QAAQD,CAAQ,EAAI,GACzF,KAAKvC,aAAasC,MAAM,2CAA2CC,CAAQ,EAAE,EAE7E,KAAKvC,aAAasC,MAAM,qDAAqD,CAErF,EACH,CACL,CAEAhD,QAAM,CACF,KAAKQ,OAAO2C,SAAS,CAAC,oBAAoB,CAAC,CAC/C,CAEA5F,oBAAkB,CACd,KAAK2B,kBAAoB,CAAC,CAAC,KAAK9B,qBAAqBgG,QAAO,CAChE,CAEQ5B,oBAAoB6B,EAAU,CAClC,OAAQA,EAAE,CACN,IAAK,UACD,KAAKjF,iBAAmB,mCACxB,MACJ,IAAK,QACD,KAAKA,iBAAmB,iCACxB,MACJ,IAAK,QACD,KAAKA,iBAAmB,qDACxB,MACJ,IAAK,UACD,KAAKA,iBAAmB,+CACxB,MACJ,QACI,KAAKA,iBAAmB,UAChC,CACJ,CAEmBR,mBAAqBA,8CA9H/BsC,EAAkC,2BAAlCA,EAAkCoD,UAAA,CAAA,CAAA,yBAAA,CAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,eAAA,qCAAA,EAAA,CAAA,EAAA,aAAA,SAAA,EAAA,CAAA,EAAA,iBAAA,EAAA,CAAA,EAAA,SAAA,WAAA,EAAA,CAAA,eAAA,8DAAA,EAAA,YAAA,EAAA,CAAA,EAAA,oBAAA,eAAA,EAAA,CAAA,OAAA,KAAA,cAAA,cAAA,EAAA,eAAA,EAAA,gBAAA,WAAA,SAAA,EAAA,CAAA,EAAA,MAAA,WAAA,aAAA,MAAA,EAAA,CAAA,OAAA,QAAA,aAAA,UAAA,EAAA,WAAA,EAAA,CAAA,EAAA,UAAA,UAAA,UAAA,OAAA,EAAA,CAAA,eAAA,uDAAA,EAAA,CAAA,eAAA,sDAAA,EAAA,CAAA,eAAA,8CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,SAAA,YAAA,MAAA,EAAA,CAAA,EAAA,YAAA,EAAA,CAAA,eAAA,wDAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,eAAA,gDAAA,EAAA,YAAA,EAAA,CAAA,OAAA,IAAA,YAAA,KAAA,EAAA,eAAA,kBAAA,EAAA,gBAAA,WAAA,SAAA,EAAA,CAAA,eAAA,4DAAA,EAAA,CAAA,eAAA,uDAAA,EAAA,YAAA,EAAA,CAAA,eAAA,qDAAA,EAAA,CAAA,EAAA,kBAAA,EAAA,CAAA,OAAA,QAAA,OAAA,mBAAA,QAAA,qBAAA,EAAA,mBAAA,EAAA,gBAAA,SAAA,EAAA,CAAA,eAAA,4DAAA,EAAA,CAAA,OAAA,QAAA,OAAA,mBAAA,QAAA,gBAAA,EAAA,mBAAA,EAAA,gBAAA,SAAA,EAAA,CAAA,eAAA,oEAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,OAAA,aAAA,KAAA,aAAA,EAAA,gBAAA,cAAA,YAAA,UAAA,aAAA,+BAAA,MAAA,eAAA,EAAA,CAAA,EAAA,gBAAA,aAAA,MAAA,EAAA,CAAA,eAAA,mDAAA,EAAA,CAAA,EAAA,gBAAA,aAAA,MAAA,EAAA,CAAA,eAAA,oDAAA,EAAA,CAAA,EAAA,cAAA,EAAA,CAAA,cAAA,mBAAA,EAAA,UAAA,WAAA,UAAA,UAAA,OAAA,OAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,GCzB/C1F,EAAA,EAAA4F,GAAA,EAAA,CAAA,EAAiB,EAAAC,GAAA,GAAA,EAAA,OAAjBxF,EAAAsF,EAAA3C,UAAA,EAAA,CAAA,iBDuBc8C,EAAoBC,GAA4BC,EAAWC,EAAAC,EAAAC,EAAAC,EAAAC,EAAEC,GAA6BC,EAAiBC,EAAiBC,CAAoB,EAAAC,OAAA,CAAA,8gBAAA,ynDAAA,CAAA,CAAA,SAEjJzE,CAAkC,GAAA",
  "names": ["\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275textInterpolate", "ctx_r1", "displayedKeyLabel", "\u0275\u0275twoWayListener", "$event", "\u0275\u0275restoreView", "_r4", "\u0275\u0275nextContext", "i0", "\u0275\u0275twoWayBindingSet", "displayedExpiryDate", "\u0275\u0275resetView", "\u0275\u0275listener", "validateExpiryDate", "\u0275\u0275propertyInterpolate", "\u0275\u0275pipeBind1", "\u0275\u0275twoWayProperty", "\u0275\u0275property", "DateTimePickerType", "CALENDAR", "currentDate", "_r3", "selectedOption", "\u0275\u0275template", "SshUserSettingsKeyDetailsComponent_Conditional_1_Conditional_26_Conditional_56_Template", "\u0275\u0275textInterpolate1", "copyInstructions", "isCreateMode", "\u0275\u0275conditional", "\u0275\u0275pipeBind2", "displayCreationDate", "displayedLastUsedDate", "\u0275\u0275propertyInterpolate1", "hasExpired", "SshUserSettingsKeyDetailsComponent_Conditional_1_Conditional_27_Conditional_2_Template", "SshUserSettingsKeyDetailsComponent_Conditional_1_Conditional_27_Conditional_3_Template", "SshUserSettingsKeyDetailsComponent_Conditional_1_Conditional_27_Conditional_4_Template", "_r5", "saveSshKey", "displayedSshKey", "isExpiryDateValid", "ButtonType", "PRIMARY", "ButtonSize", "SMALL", "faSave", "SshUserSettingsKeyDetailsComponent_Conditional_1_Conditional_1_Template", "SshUserSettingsKeyDetailsComponent_Conditional_1_Conditional_2_Template", "SshUserSettingsKeyDetailsComponent_Conditional_1_Conditional_18_Template", "SshUserSettingsKeyDetailsComponent_Conditional_1_Conditional_19_Template", "_r1", "SshUserSettingsKeyDetailsComponent_Conditional_1_Conditional_26_Template", "SshUserSettingsKeyDetailsComponent_Conditional_1_Conditional_27_Template", "SshUserSettingsKeyDetailsComponent_Conditional_1_Conditional_30_Template", "goBack", "documentationType", "SshUserSettingsKeyDetailsComponent", "sshUserSettingsService", "inject", "SshUserSettingsService", "route", "ActivatedRoute", "router", "Router", "alertService", "AlertService", "invalidKeyFormat", "keyAlreadyExists", "keyLabelTooLong", "faEdit", "subscription", "isLoading", "displayedKeyHash", "dialogErrorSource", "Subject", "dialogError$", "asObservable", "ngOnInit", "setMessageBasedOnOS", "getOS", "dayjs", "params", "pipe", "filter", "Number", "concatMap", "getSshPublicKey", "tap", "publicKey", "label", "keyHash", "creationDate", "expiryDate", "lastUsedDate", "isAfter", "subscribe", "ngOnDestroy", "unsubscribe", "newUserSshKey", "addNewSshPublicKey", "next", "success", "error", "errorKey", "indexOf", "navigate", "isValid", "os", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "SshUserSettingsKeyDetailsComponent_Conditional_0_Template", "SshUserSettingsKeyDetailsComponent_Conditional_1_Template", "TranslateDirective", "DocumentationLinkComponent", "FormsModule", "DefaultValueAccessor", "RadioControlValueAccessor", "NgControlStatus", "MaxLengthValidator", "NgModel", "FormDateTimePickerComponent", "ButtonComponent", "ArtemisDatePipe", "ArtemisTranslatePipe", "styles"]
}
