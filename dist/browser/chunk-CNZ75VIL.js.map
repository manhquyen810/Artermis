{
  "version": 3,
  "sources": ["src/main/webapp/app/course/competencies/prerequisite.service.ts"],
  "sourcesContent": ["import { HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { CompetencyImportResponseDTO, CompetencyWithTailRelationDTO, CourseCompetency, CourseCompetencyImportOptionsDTO } from 'app/entities/competency.model';\r\nimport { Prerequisite } from 'app/entities/prerequisite.model';\r\nimport { CourseCompetencyService } from 'app/course/competencies/course-competency.service';\r\n\r\ntype EntityResponseType = HttpResponse<Prerequisite>;\r\ntype EntityArrayResponseType = HttpResponse<Prerequisite[]>;\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class PrerequisiteService extends CourseCompetencyService {\r\n    getAllForCourse(courseId: number): Observable<EntityArrayResponseType> {\r\n        return this.httpClient.get<Prerequisite[]>(`${this.resourceURL}/courses/${courseId}/prerequisites`, { observe: 'response' }).pipe(\r\n            map((res: EntityArrayResponseType) => this.convertArrayResponseDatesFromServer(res)),\r\n            tap((res: EntityArrayResponseType) => res?.body?.forEach(this.sendTitlesToEntityTitleService.bind(this))),\r\n        );\r\n    }\r\n\r\n    findById(prerequisiteId: number, courseId: number) {\r\n        return this.httpClient.get<Prerequisite>(`${this.resourceURL}/courses/${courseId}/prerequisites/${prerequisiteId}`, { observe: 'response' }).pipe(\r\n            map((res: EntityResponseType) => {\r\n                this.convertCompetencyResponseFromServer(res);\r\n                this.sendTitlesToEntityTitleService(res?.body);\r\n                return res;\r\n            }),\r\n        );\r\n    }\r\n\r\n    create(prerequisite: Prerequisite, courseId: number): Observable<EntityResponseType> {\r\n        const copy = this.convertCompetencyFromClient(prerequisite);\r\n        return this.httpClient.post<Prerequisite>(`${this.resourceURL}/courses/${courseId}/prerequisites`, copy, { observe: 'response' });\r\n    }\r\n\r\n    createBulk(prerequisites: Prerequisite[], courseId: number) {\r\n        const copy = prerequisites.map((prerequisite) => this.convertCompetencyFromClient(prerequisite));\r\n        return this.httpClient.post<Prerequisite[]>(`${this.resourceURL}/courses/${courseId}/prerequisites/bulk`, copy, { observe: 'response' });\r\n    }\r\n\r\n    import(courseCompetency: CourseCompetency, courseId: number): Observable<EntityResponseType> {\r\n        return this.httpClient.post<Prerequisite>(`${this.resourceURL}/courses/${courseId}/prerequisites/import`, courseCompetency.id, { observe: 'response' });\r\n    }\r\n\r\n    importBulk(courseCompetencies: CourseCompetency[], courseId: number, importRelations: boolean) {\r\n        const courseCompetencyIds = courseCompetencies.map((competency) => competency.id);\r\n        return this.httpClient.post<Array<CompetencyWithTailRelationDTO>>(\r\n            `${this.resourceURL}/courses/${courseId}/prerequisites/import/bulk`,\r\n            {\r\n                importExercises: false,\r\n                importRelations: importRelations,\r\n                sourceCourseId: courseId,\r\n                importLectures: false,\r\n                competencyIds: courseCompetencyIds,\r\n            } as CourseCompetencyImportOptionsDTO,\r\n            {\r\n                observe: 'response',\r\n            },\r\n        );\r\n    }\r\n\r\n    importAll(courseId: number, sourceCourseId: number, importRelations: boolean) {\r\n        return this.httpClient.post<Array<CompetencyWithTailRelationDTO>>(\r\n            `${this.resourceURL}/courses/${courseId}/prerequisites/import-all`,\r\n            {\r\n                importLectures: false,\r\n                importRelations: importRelations,\r\n                importExercises: false,\r\n                sourceCourseId: sourceCourseId,\r\n            } as CourseCompetencyImportOptionsDTO,\r\n            {\r\n                observe: 'response',\r\n            },\r\n        );\r\n    }\r\n\r\n    importStandardizedCompetencies(competencyIdsToImport: number[], courseId: number) {\r\n        return this.httpClient.post<Array<CompetencyImportResponseDTO>>(`${this.resourceURL}/courses/${courseId}/prerequisites/import-standardized`, competencyIdsToImport, {\r\n            observe: 'response',\r\n        });\r\n    }\r\n\r\n    update(prerequisite: Prerequisite, courseId: number): Observable<EntityResponseType> {\r\n        const copy = this.convertCompetencyFromClient(prerequisite);\r\n        return this.httpClient.put(`${this.resourceURL}/courses/${courseId}/prerequisites`, copy, { observe: 'response' });\r\n    }\r\n\r\n    delete(prerequisiteId: number, courseId: number) {\r\n        return this.httpClient.delete(`${this.resourceURL}/courses/${courseId}/prerequisites/${prerequisiteId}`, { observe: 'response' });\r\n    }\r\n}\r\n"],
  "mappings": "wGAcA,IAAaA,GAAoB,IAAA,CAA3B,MAAOA,UAA4BC,CAAuB,CAC5DC,gBAAgBC,EAAgB,CAC5B,OAAO,KAAKC,WAAWC,IAAoB,GAAG,KAAKC,WAAW,YAAYH,CAAQ,iBAAkB,CAAEI,QAAS,UAAU,CAAE,EAAEC,KACzHC,EAAKC,GAAiC,KAAKC,oCAAoCD,CAAG,CAAC,EACnFE,EAAKF,GAAiCA,GAAKG,MAAMC,QAAQ,KAAKC,+BAA+BC,KAAK,IAAI,CAAC,CAAC,CAAC,CAEjH,CAEAC,SAASC,EAAwBf,EAAgB,CAC7C,OAAO,KAAKC,WAAWC,IAAkB,GAAG,KAAKC,WAAW,YAAYH,CAAQ,kBAAkBe,CAAc,GAAI,CAAEX,QAAS,UAAU,CAAE,EAAEC,KACzIC,EAAKC,IACD,KAAKS,oCAAoCT,CAAG,EAC5C,KAAKK,+BAA+BL,GAAKG,IAAI,EACtCH,EACV,CAAC,CAEV,CAEAU,OAAOC,EAA4BlB,EAAgB,CAC/C,IAAMmB,EAAO,KAAKC,4BAA4BF,CAAY,EAC1D,OAAO,KAAKjB,WAAWoB,KAAmB,GAAG,KAAKlB,WAAW,YAAYH,CAAQ,iBAAkBmB,EAAM,CAAEf,QAAS,UAAU,CAAE,CACpI,CAEAkB,WAAWC,EAA+BvB,EAAgB,CACtD,IAAMmB,EAAOI,EAAcjB,IAAKY,GAAiB,KAAKE,4BAA4BF,CAAY,CAAC,EAC/F,OAAO,KAAKjB,WAAWoB,KAAqB,GAAG,KAAKlB,WAAW,YAAYH,CAAQ,sBAAuBmB,EAAM,CAAEf,QAAS,UAAU,CAAE,CAC3I,CAEAoB,OAAOC,EAAoCzB,EAAgB,CACvD,OAAO,KAAKC,WAAWoB,KAAmB,GAAG,KAAKlB,WAAW,YAAYH,CAAQ,wBAAyByB,EAAiBC,GAAI,CAAEtB,QAAS,UAAU,CAAE,CAC1J,CAEAuB,WAAWC,EAAwC5B,EAAkB6B,EAAwB,CACzF,IAAMC,EAAsBF,EAAmBtB,IAAKyB,GAAeA,EAAWL,EAAE,EAChF,OAAO,KAAKzB,WAAWoB,KACnB,GAAG,KAAKlB,WAAW,YAAYH,CAAQ,6BACvC,CACIgC,gBAAiB,GACjBH,gBAAiBA,EACjBI,eAAgBjC,EAChBkC,eAAgB,GAChBC,cAAeL,GAEnB,CACI1B,QAAS,WACZ,CAET,CAEAgC,UAAUpC,EAAkBiC,EAAwBJ,EAAwB,CACxE,OAAO,KAAK5B,WAAWoB,KACnB,GAAG,KAAKlB,WAAW,YAAYH,CAAQ,4BACvC,CACIkC,eAAgB,GAChBL,gBAAiBA,EACjBG,gBAAiB,GACjBC,eAAgBA,GAEpB,CACI7B,QAAS,WACZ,CAET,CAEAiC,+BAA+BC,EAAiCtC,EAAgB,CAC5E,OAAO,KAAKC,WAAWoB,KAAyC,GAAG,KAAKlB,WAAW,YAAYH,CAAQ,qCAAsCsC,EAAuB,CAChKlC,QAAS,WACZ,CACL,CAEAmC,OAAOrB,EAA4BlB,EAAgB,CAC/C,IAAMmB,EAAO,KAAKC,4BAA4BF,CAAY,EAC1D,OAAO,KAAKjB,WAAWuC,IAAI,GAAG,KAAKrC,WAAW,YAAYH,CAAQ,iBAAkBmB,EAAM,CAAEf,QAAS,UAAU,CAAE,CACrH,CAEAqC,OAAO1B,EAAwBf,EAAgB,CAC3C,OAAO,KAAKC,WAAWwC,OAAO,GAAG,KAAKtC,WAAW,YAAYH,CAAQ,kBAAkBe,CAAc,GAAI,CAAEX,QAAS,UAAU,CAAE,CACpI,gEA7ESP,CAAmB,IAAA6C,GAAnB7C,CAAmB,CAAA,CAAA,GAAA,6BAAnBA,EAAmB8C,QAAnB9C,EAAmB+C,UAAAC,WAFhB,MAAM,CAAA,SAEThD,CAAoB,GAAA",
  "names": ["PrerequisiteService", "CourseCompetencyService", "getAllForCourse", "courseId", "httpClient", "get", "resourceURL", "observe", "pipe", "map", "res", "convertArrayResponseDatesFromServer", "tap", "body", "forEach", "sendTitlesToEntityTitleService", "bind", "findById", "prerequisiteId", "convertCompetencyResponseFromServer", "create", "prerequisite", "copy", "convertCompetencyFromClient", "post", "createBulk", "prerequisites", "import", "courseCompetency", "id", "importBulk", "courseCompetencies", "importRelations", "courseCompetencyIds", "competency", "importExercises", "sourceCourseId", "importLectures", "competencyIds", "importAll", "importStandardizedCompetencies", "competencyIdsToImport", "update", "put", "delete", "__ngFactoryType__", "factory", "\u0275fac", "providedIn"]
}
