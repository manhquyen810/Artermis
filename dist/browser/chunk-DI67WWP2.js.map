{
  "version": 3,
  "sources": ["src/main/webapp/app/course/competencies/forms/competency/competency-form.component.ts", "src/main/webapp/app/course/competencies/forms/competency/competency-form.component.html"],
  "sourcesContent": ["import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\r\nimport { CourseCompetencyFormComponent, CourseCompetencyFormData } from 'app/course/competencies/forms/course-competency-form.component';\r\n\r\nimport { CommonCourseCompetencyFormComponent } from 'app/course/competencies/forms/common-course-competency-form.component';\r\nimport { Competency } from 'app/entities/competency.model';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\n\r\n@Component({\r\n    selector: 'jhi-competency-form',\r\n    templateUrl: './competency-form.component.html',\r\n    styleUrls: ['./competency-form.component.scss'],\r\n    imports: [CommonCourseCompetencyFormComponent, FormsModule, ReactiveFormsModule, FontAwesomeModule, TranslateDirective],\r\n})\r\nexport class CompetencyFormComponent extends CourseCompetencyFormComponent implements OnInit, OnChanges {\r\n    @Input() formData: CourseCompetencyFormData = {\r\n        id: undefined,\r\n        title: undefined,\r\n        description: undefined,\r\n        softDueDate: undefined,\r\n        taxonomy: undefined,\r\n        masteryThreshold: undefined,\r\n        optional: false,\r\n    };\r\n    @Input() competency: Competency;\r\n\r\n    @Output() formSubmitted: EventEmitter<CourseCompetencyFormData> = new EventEmitter<CourseCompetencyFormData>();\r\n\r\n    ngOnChanges() {\r\n        this.initializeForm();\r\n        if (this.isEditMode && this.formData) {\r\n            this.setFormValues(this.formData);\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.initializeForm();\r\n    }\r\n\r\n    private setFormValues(formData: CourseCompetencyFormData) {\r\n        this.form.patchValue(formData);\r\n    }\r\n\r\n    submitForm() {\r\n        const competencyFormData: CourseCompetencyFormData = { ...this.form.value };\r\n        this.formSubmitted.emit(competencyFormData);\r\n    }\r\n}\r\n", "<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        @if (form) {\r\n            <form [formGroup]=\"form\" (ngSubmit)=\"submitForm()\">\r\n                <jhi-common-course-competency-form\r\n                    [formData]=\"formData\"\r\n                    [isEditMode]=\"isEditMode\"\r\n                    [isInConnectMode]=\"isInConnectMode\"\r\n                    [isInSingleLectureMode]=\"isInSingleLectureMode\"\r\n                    [lecturesOfCourseWithLectureUnits]=\"lecturesOfCourseWithLectureUnits\"\r\n                    [averageStudentScore]=\"averageStudentScore\"\r\n                    [form]=\"form\"\r\n                    [courseCompetency]=\"competency\"\r\n                />\r\n                <div>\r\n                    <button id=\"submitButton\" class=\"btn btn-primary me-2\" type=\"submit\" [disabled]=\"!isSubmitPossible\">\r\n                        <span jhiTranslate=\"entity.action.submit\"></span>\r\n                    </button>\r\n                    @if (hasCancelButton) {\r\n                        <button type=\"button\" (click)=\"cancelForm()\" class=\"btn btn-secondary\">\r\n                            <fa-icon [icon]=\"faTimes\" />&nbsp;<span jhiTranslate=\"entity.action.cancel\"></span>\r\n                        </button>\r\n                    }\r\n                </div>\r\n            </form>\r\n        }\r\n    </div>\r\n</div>\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r3", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "cancelForm", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "faTimes", "_r1", "submitForm", "\u0275\u0275template", "CompetencyFormComponent_Conditional_4_Conditional_12_Template", "form", "formData", "isEditMode", "isInConnectMode", "isInSingleLectureMode", "lecturesOfCourseWithLectureUnits", "averageStudentScore", "competency", "isSubmitPossible", "\u0275\u0275conditional", "hasCancelButton", "CompetencyFormComponent", "CourseCompetencyFormComponent", "id", "undefined", "title", "description", "softDueDate", "taxonomy", "masteryThreshold", "optional", "formSubmitted", "EventEmitter", "ngOnChanges", "initializeForm", "setFormValues", "ngOnInit", "patchValue", "competencyFormData", "__spreadValues", "value", "emit", "__ngFactoryType__", "selectors", "inputs", "outputs", "features", "\u0275\u0275InheritDefinitionFeature", "\u0275\u0275NgOnChangesFeature", "decls", "vars", "consts", "template", "rf", "ctx", "CompetencyFormComponent_Conditional_4_Template", "CommonCourseCompetencyFormComponent", "FormsModule", "\u0275NgNoValidate", "NgControlStatusGroup", "ReactiveFormsModule", "FormGroupDirective", "FontAwesomeModule", "FaIconComponent", "TranslateDirective", "styles"]
}
