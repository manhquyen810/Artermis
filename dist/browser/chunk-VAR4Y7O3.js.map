{
  "version": 3,
  "sources": ["src/main/webapp/app/overview/exercise-details/problem-statement/problem-statement.component.ts", "src/main/webapp/app/overview/exercise-details/problem-statement/problem-statement.component.html"],
  "sourcesContent": ["import { HttpResponse } from '@angular/common/http';\r\nimport { Component, Input, OnInit, inject } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Exercise, ExerciseType } from 'app/entities/exercise.model';\r\nimport { StudentParticipation } from 'app/entities/participation/student-participation.model';\r\nimport { ExerciseDetailsType, ExerciseService } from 'app/exercises/shared/exercise/exercise.service';\r\nimport { ParticipationService } from 'app/exercises/shared/participation/participation.service';\r\nimport { ProgrammingExerciseInstructionComponent } from 'app/exercises/programming/shared/instructions-render/programming-exercise-instruction.component';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { HtmlForMarkdownPipe } from 'app/shared/pipes/html-for-markdown.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-problem-statement',\r\n    templateUrl: './problem-statement.component.html',\r\n    styleUrls: ['../../course-overview.scss'],\r\n    imports: [ProgrammingExerciseInstructionComponent, TranslateDirective, HtmlForMarkdownPipe],\r\n})\r\nexport class ProblemStatementComponent implements OnInit {\r\n    private route = inject(ActivatedRoute);\r\n    private exerciseService = inject(ExerciseService);\r\n    private participationService = inject(ParticipationService);\r\n\r\n    @Input() public exercise?: Exercise;\r\n    @Input() participation?: StudentParticipation;\r\n\r\n    ngOnInit() {\r\n        this.route.params.subscribe((params) => {\r\n            const exerciseId = parseInt(params['exerciseId'], 10);\r\n            let participationId: number | undefined = undefined;\r\n            if (params['participationId']) {\r\n                participationId = parseInt(params['participationId'], 10);\r\n            }\r\n\r\n            if (!this.exercise) {\r\n                this.exerciseService.getExerciseDetails(exerciseId).subscribe((exerciseResponse: HttpResponse<ExerciseDetailsType>) => {\r\n                    this.exercise = exerciseResponse.body!.exercise;\r\n                });\r\n            }\r\n            if (!this.participation && participationId) {\r\n                this.participationService.find(participationId).subscribe((participationResponse) => {\r\n                    this.participation = participationResponse.body!;\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    get isProgrammingExercise(): boolean {\r\n        return this.exercise?.type === ExerciseType.PROGRAMMING;\r\n    }\r\n}\r\n", "@if (isProgrammingExercise && exercise) {\r\n    <div class=\"row mb-4\">\r\n        <jhi-programming-exercise-instructions [exercise]=\"exercise\" [participation]=\"participation!\" [personalParticipation]=\"true\" />\r\n    </div>\r\n} @else {\r\n    @if (exercise?.problemStatement) {\r\n        <div class=\"row mb-2 align-items-baseline\" id=\"problem-statement\">\r\n            <div class=\"col-12 col-md-12 markdown-preview problem-statement\">\r\n                <h3 jhiTranslate=\"artemisApp.courseOverview.exerciseDetails.problemStatement\"></h3>\r\n                <p [innerHTML]=\"exercise!.problemStatement! | htmlForMarkdown\"></p>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n"],
  "mappings": "iaCCIA,EAAA,EAAA;KAAA,EAAAC,EAAA,EAAA,MAAA,CAAA,EACID,EAAA,EAAA;SAAA,EAAAE,EAAA,EAAA,wCAAA,CAAA,EACJF,EAAA,EAAA;KAAA,EAAAG,EAAA,EACJH,EAAA,EAAA;CAAA,kBAF+CI,EAAA,CAAA,EAAAC,EAAA,WAAAC,EAAAC,QAAA,EAAqB,gBAAAD,EAAAE,aAAA,EAAiC,wBAAA,EAAA,4BAI7FR,EAAA,EAAA;SAAA,EAAAC,EAAA,EAAA,MAAA,CAAA,EACID,EAAA,EAAA;aAAA,EAAAC,EAAA,EAAA,MAAA,CAAA,EACID,EAAA,EAAA;iBAAA,EAAAE,EAAA,EAAA,KAAA,CAAA,EACAF,EAAA,EAAA;iBAAA,EAAAE,EAAA,EAAA,IAAA,CAAA,yBACJF,EAAA,EAAA;aAAA,EAAAG,EAAA,EACJH,EAAA,GAAA;SAAA,EAAAG,EAAA,EACJH,EAAA,GAAA;KAAA,mBAHeI,EAAA,CAAA,EAAAC,EAAA,YAAAI,EAAA,EAAA,EAAAH,EAAAC,SAAAG,gBAAA,EAAAC,CAAA,4BAJfX,EAAA,EAAA;KAAA,EAAAY,EAAA,EAAAC,EAAA,GAAA,CAAA,kBAAAT,EAAA,EAAAU,EAAAR,EAAAC,UAAA,MAAAD,EAAAC,SAAAG,iBAAA,EAAA,EAAA,GDYJ,IAAaK,GAAyB,IAAA,CAAhC,MAAOA,CAAyB,CAC1BC,MAAQC,EAAOC,CAAc,EAC7BC,gBAAkBF,EAAOG,CAAe,EACxCC,qBAAuBJ,EAAOK,CAAoB,EAE1Cf,SACPC,cAETe,UAAQ,CACJ,KAAKP,MAAMQ,OAAOC,UAAWD,GAAU,CACnC,IAAME,EAAaC,SAASH,EAAO,WAAe,EAAE,EAChDI,EACAJ,EAAO,kBACPI,EAAkBD,SAASH,EAAO,gBAAoB,EAAE,GAGvD,KAAKjB,UACN,KAAKY,gBAAgBU,mBAAmBH,CAAU,EAAED,UAAWK,GAAuD,CAClH,KAAKvB,SAAWuB,EAAiBC,KAAMxB,QAC3C,CAAC,EAED,CAAC,KAAKC,eAAiBoB,GACvB,KAAKP,qBAAqBW,KAAKJ,CAAe,EAAEH,UAAWQ,GAAyB,CAChF,KAAKzB,cAAgByB,EAAsBF,IAC/C,CAAC,CAET,CAAC,CACL,CAEA,IAAIG,uBAAqB,CACrB,OAAO,KAAK3B,UAAU4B,OAASC,EAAaC,WAChD,4CA/BStB,EAAyB,2BAAzBA,EAAyBuB,UAAA,CAAA,CAAA,uBAAA,CAAA,EAAAC,OAAA,CAAAhC,SAAA,WAAAC,cAAA,eAAA,EAAAgC,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,MAAA,MAAA,EAAA,CAAA,EAAA,WAAA,gBAAA,uBAAA,EAAA,CAAA,KAAA,oBAAA,EAAA,MAAA,OAAA,sBAAA,EAAA,CAAA,EAAA,SAAA,YAAA,mBAAA,mBAAA,EAAA,CAAA,eAAA,4DAAA,EAAA,CAAA,EAAA,WAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,GCjBtChC,EAAA,EAAAkC,EAAA,EAAA,CAAA,EAAyC,EAAAC,EAAA,EAAA,CAAA,OAAzCjC,EAAA+B,EAAAX,uBAAAW,EAAAtC,SAAA,EAAA,CAAA,iBDecyC,EAAyCC,EAAoBC,CAAmB,EAAAC,OAAA,CAAA,gqHAAA,CAAA,CAAA,SAEjFpC,CAAyB,GAAA",
  "names": ["\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "ctx_r0", "exercise", "participation", "\u0275\u0275pipeBind1", "problemStatement", "\u0275\u0275sanitizeHtml", "\u0275\u0275template", "ProblemStatementComponent_Conditional_1_Conditional_1_Template", "\u0275\u0275conditional", "ProblemStatementComponent", "route", "inject", "ActivatedRoute", "exerciseService", "ExerciseService", "participationService", "ParticipationService", "ngOnInit", "params", "subscribe", "exerciseId", "parseInt", "participationId", "getExerciseDetails", "exerciseResponse", "body", "find", "participationResponse", "isProgrammingExercise", "type", "ExerciseType", "PROGRAMMING", "selectors", "inputs", "decls", "vars", "consts", "template", "rf", "ctx", "ProblemStatementComponent_Conditional_0_Template", "ProblemStatementComponent_Conditional_1_Template", "ProgrammingExerciseInstructionComponent", "TranslateDirective", "HtmlForMarkdownPipe", "styles"]
}
