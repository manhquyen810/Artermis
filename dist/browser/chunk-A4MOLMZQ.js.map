{
  "version": 3,
  "sources": ["src/main/webapp/app/overview/result-history/result-history.component.ts", "src/main/webapp/app/overview/result-history/result-history.component.html"],
  "sourcesContent": ["import { Component, OnChanges, input } from '@angular/core';\r\nimport { Result } from 'app/entities/result.model';\r\nimport { Exercise, ExerciseType } from 'app/entities/exercise.model';\r\nimport { MissingResultInformation, evaluateTemplateStatus, getResultIconClass, getTextColorClass } from 'app/exercises/shared/result/result.utils';\r\nimport { NgClass, NgStyle } from '@angular/common';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { ResultComponent } from '../../exercises/shared/result/result.component';\r\n\r\nexport const MAX_RESULT_HISTORY_LENGTH = 5;\r\n\r\n// Modal -> Result details view\r\n@Component({\r\n    selector: 'jhi-result-history',\r\n    templateUrl: './result-history.component.html',\r\n    styleUrls: ['./result-history.scss'],\r\n    imports: [NgClass, FaIconComponent, ResultComponent, NgStyle],\r\n})\r\nexport class ResultHistoryComponent implements OnChanges {\r\n    readonly getTextColorClass = getTextColorClass;\r\n    readonly getResultIconClass = getResultIconClass;\r\n    readonly evaluateTemplateStatus = evaluateTemplateStatus;\r\n    readonly MissingResultInfo = MissingResultInformation;\r\n\r\n    results = input.required<Result[]>();\r\n    exercise = input<Exercise>();\r\n    selectedResultId = input<number>();\r\n\r\n    showPreviousDivider = false;\r\n    displayedResults: Result[];\r\n    movedLastRatedResult: boolean;\r\n\r\n    ngOnChanges() {\r\n        this.showPreviousDivider = this.results().length > MAX_RESULT_HISTORY_LENGTH;\r\n        if (this.exercise()?.type === ExerciseType.TEXT || this.exercise()?.type === ExerciseType.MODELING) {\r\n            this.displayedResults = this.results().filter((result) => result.successful !== undefined);\r\n        } else {\r\n            this.displayedResults = this.results();\r\n        }\r\n        const successfulResultsLength = this.displayedResults.length;\r\n        if (successfulResultsLength > MAX_RESULT_HISTORY_LENGTH) {\r\n            this.displayedResults = this.displayedResults.slice(successfulResultsLength - MAX_RESULT_HISTORY_LENGTH);\r\n            const lastRatedResult = this.results()\r\n                .filter((result) => result.rated)\r\n                .last();\r\n            if (!this.displayedResults.first()?.rated && lastRatedResult) {\r\n                this.displayedResults[0] = lastRatedResult;\r\n                this.movedLastRatedResult = true;\r\n            }\r\n        }\r\n    }\r\n}\r\n", "<div class=\"result-history-wrapper\">\r\n    <div class=\"result-history-element\" [class.previous-history-element]=\"showPreviousDivider\">\r\n        <div class=\"result-divider\"></div>\r\n    </div>\r\n    @for (result of displayedResults; track result; let i = $index) {\r\n        <div class=\"result-history-element\">\r\n            <div class=\"result-score\">\r\n                <div\r\n                    class=\"result-score-icon\"\r\n                    [ngClass]=\"\r\n                        result.id === selectedResultId()\r\n                            ? 'text-primary'\r\n                            : getTextColorClass(result, evaluateTemplateStatus(exercise(), result.participation, result, false, MissingResultInfo.NONE))\r\n                    \"\r\n                >\r\n                    <fa-icon [icon]=\"getResultIconClass(result, evaluateTemplateStatus(exercise(), result.participation, result, false, MissingResultInfo.NONE))\" size=\"xl\" />\r\n                </div>\r\n                <jhi-result\r\n                    class=\"result-score-info text-center\"\r\n                    [exercise]=\"exercise()\"\r\n                    [result]=\"result\"\r\n                    [participation]=\"result.participation!\"\r\n                    [showUngradedResults]=\"true\"\r\n                    [showBadge]=\"true\"\r\n                    [showIcon]=\"false\"\r\n                />\r\n            </div>\r\n            <div class=\"result-divider\" [ngStyle]=\"i === 0 && movedLastRatedResult ? { 'border-top': '1px dashed' } : {}\"></div>\r\n        </div>\r\n    }\r\n</div>\r\n"],
  "mappings": "ycCKQA,EAAA,EAAA;SAAA,EAAAC,EAAA,EAAA,MAAA,CAAA,EACID,EAAA,EAAA;aAAA,EAAAC,EAAA,EAAA,MAAA,CAAA,EACID,EAAA,EAAA;iBAAA,EAAAC,EAAA,EAAA,MAAA,CAAA,EAQID,EAAA,EAAA;qBAAA,EAAAE,EAAA,EAAA,UAAA,CAAA,EACJF,EAAA,EAAA;iBAAA,EAAAG,EAAA,EACAH,EAAA,EAAA;iBAAA,EAAAE,EAAA,GAAA,aAAA,CAAA,EASJF,EAAA,GAAA;aAAA,EAAAG,EAAA,EACAH,EAAA,GAAA;aAAA,EAAAE,EAAA,GAAA,MAAA,CAAA,EACJF,EAAA,GAAA;SAAA,EAAAG,EAAA,EACJH,EAAA,GAAA;KAAA,2CApBgBI,EAAA,CAAA,EAAAC,EAAA,UAAAC,EAAAC,KAAAC,EAAAC,iBAAA,EAAA,eAAAD,EAAAE,kBAAAJ,EAAAE,EAAAG,uBAAAH,EAAAI,SAAA,EAAAN,EAAAO,cAAAP,EAAA,GAAAE,EAAAM,kBAAAC,IAAA,CAAA,CAAA,EAMSX,EAAA,CAAA,EAAAC,EAAA,OAAAG,EAAAQ,mBAAAV,EAAAE,EAAAG,uBAAAH,EAAAI,SAAA,EAAAN,EAAAO,cAAAP,EAAA,GAAAE,EAAAM,kBAAAC,IAAA,CAAA,CAAA,EAITX,EAAA,CAAA,EAAAC,EAAA,WAAAG,EAAAI,SAAA,CAAA,EAAuB,SAAAN,CAAA,EACN,gBAAAA,EAAAO,aAAA,EACsB,sBAAA,EAAA,EACX,YAAA,EAAA,EACV,WAAA,EAAA,EAIET,EAAA,CAAA,EAAAC,EAAA,UAAAY,IAAA,GAAAT,EAAAU,qBAAAC,EAAA,EAAAC,CAAA,EAAAD,EAAA,GAAAE,CAAA,CAAA,GDnBjC,IAAMC,EAA4B,EAS5BC,GAAsB,IAAA,CAA7B,MAAOA,CAAsB,CACtBb,kBAAoBA,EACpBM,mBAAqBA,EACrBL,uBAAyBA,EACzBG,kBAAoBU,EAE7BC,QAAUC,EAAMC,SAAQ,EACxBf,SAAWc,EAAK,EAChBjB,iBAAmBiB,EAAK,EAExBE,oBAAsB,GACtBC,iBACAX,qBAEAY,aAAW,CACP,KAAKF,oBAAsB,KAAKH,QAAO,EAAGM,OAAST,EAC/C,KAAKV,SAAQ,GAAIoB,OAASC,EAAaC,MAAQ,KAAKtB,SAAQ,GAAIoB,OAASC,EAAaE,SACtF,KAAKN,iBAAmB,KAAKJ,QAAO,EAAGW,OAAQC,GAAWA,EAAOC,aAAeC,MAAS,EAEzF,KAAKV,iBAAmB,KAAKJ,QAAO,EAExC,IAAMe,EAA0B,KAAKX,iBAAiBE,OACtD,GAAIS,EAA0BlB,EAA2B,CACrD,KAAKO,iBAAmB,KAAKA,iBAAiBY,MAAMD,EAA0BlB,CAAyB,EACvG,IAAMoB,EAAkB,KAAKjB,QAAO,EAC/BW,OAAQC,GAAWA,EAAOM,KAAK,EAC/BC,KAAI,EACL,CAAC,KAAKf,iBAAiBgB,MAAK,GAAIF,OAASD,IACzC,KAAKb,iBAAiB,CAAC,EAAIa,EAC3B,KAAKxB,qBAAuB,GAEpC,CACJ,4CAhCSK,EAAsB,2BAAtBA,EAAsBuB,UAAA,CAAA,CAAA,oBAAA,CAAA,EAAAC,OAAA,CAAAtB,QAAA,CAAA,EAAA,SAAA,EAAAb,SAAA,CAAA,EAAA,UAAA,EAAAH,iBAAA,CAAA,EAAA,kBAAA,CAAA,EAAAuC,SAAA,CAAAC,CAAA,EAAAC,MAAA,GAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,wBAAA,EAAA,CAAA,EAAA,wBAAA,EAAA,CAAA,EAAA,gBAAA,EAAA,CAAA,EAAA,cAAA,EAAA,CAAA,EAAA,oBAAA,EAAA,SAAA,EAAA,CAAA,OAAA,KAAA,EAAA,MAAA,EAAA,CAAA,EAAA,oBAAA,cAAA,EAAA,WAAA,SAAA,gBAAA,sBAAA,YAAA,UAAA,EAAA,CAAA,EAAA,iBAAA,EAAA,SAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,ICjBnCrD,EAAA,EAAA,MAAA,CAAA,EACID,EAAA,EAAA;KAAA,EAAAC,EAAA,EAAA,MAAA,CAAA,EACID,EAAA,EAAA;SAAA,EAAAE,EAAA,EAAA,MAAA,CAAA,EACJF,EAAA,EAAA;KAAA,EAAAG,EAAA,EACAH,EAAA,EAAA;KAAA,EAAAwD,EAAA,EAAAC,EAAA,GAAA,GAAA,KAAA,KAAAC,CAAA,EA0BJvD,EAAA,EACAH,EAAA,EAAA;CAAA,SA9BwCI,EAAA,CAAA,EAAAuD,EAAA,2BAAAJ,EAAA3B,mBAAA,EAGpCxB,EAAA,CAAA,EAAAwD,EAAAL,EAAA1B,gBAAA,kBDWUgC,EAASC,EAAiBC,EAAiBC,CAAO,EAAAC,OAAA,CAAA,ujDAAA,CAAA,CAAA,SAEnD1C,CAAsB,GAAA",
  "names": ["\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "result_r1", "id", "ctx_r2", "selectedResultId", "getTextColorClass", "evaluateTemplateStatus", "exercise", "participation", "MissingResultInfo", "NONE", "getResultIconClass", "\u0275$index_11_r2", "movedLastRatedResult", "\u0275\u0275pureFunction0", "_c0", "_c1", "MAX_RESULT_HISTORY_LENGTH", "ResultHistoryComponent", "MissingResultInformation", "results", "input", "required", "showPreviousDivider", "displayedResults", "ngOnChanges", "length", "type", "ExerciseType", "TEXT", "MODELING", "filter", "result", "successful", "undefined", "successfulResultsLength", "slice", "lastRatedResult", "rated", "last", "first", "selectors", "inputs", "features", "\u0275\u0275NgOnChangesFeature", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275repeaterCreate", "ResultHistoryComponent_For_8_Template", "\u0275\u0275repeaterTrackByIdentity", "\u0275\u0275classProp", "\u0275\u0275repeater", "NgClass", "FaIconComponent", "ResultComponent", "NgStyle", "styles"]
}
