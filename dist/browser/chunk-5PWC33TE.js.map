{
  "version": 3,
  "sources": ["src/main/webapp/app/exercises/programming/shared/actions/programming-exercise-instructor-repo-download.component.ts", "src/main/webapp/app/exercises/programming/shared/actions/programming-exercise-instructor-repo-download.component.html"],
  "sourcesContent": ["import { Component, Input, inject } from '@angular/core';\r\nimport { ButtonSize, ButtonType } from 'app/shared/components/button.component';\r\nimport { FeatureToggle } from 'app/shared/feature-toggle/feature-toggle.service';\r\nimport { ProgrammingExerciseService } from 'app/exercises/programming/manage/services/programming-exercise.service';\r\nimport { downloadZipFileFromResponse } from 'app/shared/util/download.util';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { faDownload } from '@fortawesome/free-solid-svg-icons';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nimport { ButtonComponent } from 'app/shared/components/button.component';\r\nimport { RepositoryType } from 'app/exercises/programming/shared/code-editor/model/code-editor.model';\r\n\r\n@Component({\r\n    selector: 'jhi-programming-exercise-instructor-repo-download',\r\n    templateUrl: './programming-exercise-instructor-repo-download.component.html',\r\n    imports: [ButtonComponent],\r\n})\r\nexport class ProgrammingExerciseInstructorRepoDownloadComponent {\r\n    protected programmingExerciseService = inject(ProgrammingExerciseService);\r\n    protected alertService = inject(AlertService);\r\n\r\n    ButtonType = ButtonType;\r\n    ButtonSize = ButtonSize;\r\n    readonly FeatureToggle = FeatureToggle;\r\n\r\n    @Input() exerciseId: number;\r\n    @Input() repositoryType: RepositoryType;\r\n    @Input() auxiliaryRepositoryId: number;\r\n    @Input() buttonSize = ButtonSize.SMALL;\r\n    @Input() title = 'artemisApp.programmingExercise.export.downloadRepo';\r\n\r\n    // Icons\r\n    faDownload = faDownload;\r\n\r\n    exportRepository() {\r\n        if (this.exerciseId && this.repositoryType) {\r\n            this.programmingExerciseService\r\n                .exportInstructorRepository(this.exerciseId, this.repositoryType, this.auxiliaryRepositoryId)\r\n                .pipe(\r\n                    catchError((error) => {\r\n                        if (error.status === 500 || error.status === 404) {\r\n                            this.alertService.error('artemisApp.programmingExercise.export.errorMessageRepo');\r\n                        }\r\n                        // Return an observable of undefined so the subscribe method can continue\r\n                        return of(undefined);\r\n                    }),\r\n                )\r\n                .subscribe((response) => {\r\n                    if (response !== undefined) {\r\n                        downloadZipFileFromResponse(response);\r\n                        this.alertService.success('artemisApp.programmingExercise.export.successMessageRepo');\r\n                    }\r\n                });\r\n        }\r\n    }\r\n}\r\n", "<jhi-button\r\n    [disabled]=\"!exerciseId\"\r\n    [btnType]=\"ButtonType.INFO\"\r\n    [btnSize]=\"buttonSize\"\r\n    [shouldSubmit]=\"false\"\r\n    [featureToggle]=\"[FeatureToggle.ProgrammingExercises, FeatureToggle.Exports]\"\r\n    [icon]=\"faDownload\"\r\n    [title]=\"title\"\r\n    (onClick)=\"exportRepository()\"\r\n/>\r\n"],
  "mappings": "4XAiBaA,GAAkD,IAAA,CAAzD,MAAOA,CAAkD,CACjDC,2BAA6BC,EAAOC,CAA0B,EAC9DC,aAAeF,EAAOG,CAAY,EAE5CC,WAAaA,EACbC,WAAaA,EACJC,cAAgBA,EAEhBC,WACAC,eACAC,sBACAC,WAAaL,EAAWM,MACxBC,MAAQ,qDAGjBC,WAAaA,EAEbC,kBAAgB,CACR,KAAKP,YAAc,KAAKC,gBACxB,KAAKT,2BACAgB,2BAA2B,KAAKR,WAAY,KAAKC,eAAgB,KAAKC,qBAAqB,EAC3FO,KACGC,EAAYC,KACJA,EAAMC,SAAW,KAAOD,EAAMC,SAAW,MACzC,KAAKjB,aAAagB,MAAM,wDAAwD,EAG7EE,EAAGC,MAAS,EACtB,CAAC,EAELC,UAAWC,GAAY,CAChBA,IAAaF,SACbG,EAA4BD,CAAQ,EACpC,KAAKrB,aAAauB,QAAQ,0DAA0D,EAE5F,CAAC,CAEb,4CArCS3B,EAAkD,2BAAlDA,EAAkD4B,UAAA,CAAA,CAAA,mDAAA,CAAA,EAAAC,OAAA,CAAApB,WAAA,aAAAC,eAAA,iBAAAC,sBAAA,wBAAAC,WAAA,aAAAE,MAAA,OAAA,EAAAgB,MAAA,EAAAC,KAAA,GAAAC,OAAA,CAAA,CAAA,EAAA,UAAA,WAAA,UAAA,UAAA,eAAA,gBAAA,OAAA,OAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,ICjB/DE,EAAA,EAAA,aAAA,CAAA,EAQIC,EAAA,UAAA,UAAA,CAAA,OAAWF,EAAAnB,iBAAA,CAAkB,CAAA,EARjCsB,EAAA,EAUAC,EAAA,EAAA;CAAA,QATIC,EAAA,WAAA,CAAAL,EAAA1B,UAAA,EAAwB,UAAA0B,EAAA7B,WAAAmC,IAAA,EACG,UAAAN,EAAAvB,UAAA,EACL,eAAA,EAAA,EACA,gBAAA8B,EAAA,EAAAC,EAAAR,EAAA3B,cAAAoC,qBAAAT,EAAA3B,cAAAqC,OAAA,CAAA,EACuD,OAAAV,EAAApB,UAAA,EAC1D,QAAAoB,EAAArB,KAAA,iBDSTgC,CAAe,EAAAC,cAAA,CAAA,CAAA,SAEhB/C,CAAkD,GAAA",
  "names": ["ProgrammingExerciseInstructorRepoDownloadComponent", "programmingExerciseService", "inject", "ProgrammingExerciseService", "alertService", "AlertService", "ButtonType", "ButtonSize", "FeatureToggle", "exerciseId", "repositoryType", "auxiliaryRepositoryId", "buttonSize", "SMALL", "title", "faDownload", "exportRepository", "exportInstructorRepository", "pipe", "catchError", "error", "status", "of", "undefined", "subscribe", "response", "downloadZipFileFromResponse", "success", "selectors", "inputs", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275listener", "\u0275\u0275elementEnd", "\u0275\u0275text", "\u0275\u0275property", "INFO", "\u0275\u0275pureFunction2", "_c0", "ProgrammingExercises", "Exports", "ButtonComponent", "encapsulation"]
}
