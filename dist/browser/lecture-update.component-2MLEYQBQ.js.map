{
  "version": 3,
  "sources": ["src/main/webapp/app/lecture/lecture-title-channel-name.component.ts", "src/main/webapp/app/lecture/lecture-title-channel-name.component.html", "src/main/webapp/app/lecture/lecture-period/lecture-period.component.ts", "src/main/webapp/app/lecture/lecture-period/lecture-period.component.html", "src/main/webapp/app/lecture/lecture-units/lecture-units.component.ts", "src/main/webapp/app/lecture/lecture-units/lecture-units.component.html", "src/main/webapp/app/lecture/lecture-update.component.ts", "src/main/webapp/app/lecture/lecture-update.component.html"],
  "sourcesContent": ["import { Component, Input, OnInit, viewChild } from '@angular/core';\r\nimport { isCommunicationEnabled } from 'app/entities/course.model';\r\nimport { Lecture } from 'app/entities/lecture.model';\r\nimport { TitleChannelNameComponent } from 'app/shared/form/title-channel-name/title-channel-name.component';\r\n\r\n@Component({\r\n    selector: 'jhi-lecture-title-channel-name',\r\n    templateUrl: './lecture-title-channel-name.component.html',\r\n    imports: [TitleChannelNameComponent],\r\n})\r\nexport class LectureTitleChannelNameComponent implements OnInit {\r\n    @Input() lecture: Lecture;\r\n\r\n    titleChannelNameComponent = viewChild.required(TitleChannelNameComponent);\r\n\r\n    hideChannelNameInput = false;\r\n\r\n    ngOnInit() {\r\n        this.hideChannelNameInput = !this.requiresChannelName(this.lecture);\r\n    }\r\n\r\n    /**\r\n     * Determines whether the provided lecture should have a channel name. This is not the case, if messaging in the course is disabled.\r\n     * If messaging is enabled, a channel name should exist for newly created and imported lectures.\r\n     *\r\n     * @param lecture the lecture under consideration\r\n     * @return boolean true if the channel name is required, else false\r\n     */\r\n    private requiresChannelName(lecture: Lecture): boolean {\r\n        // not required if messaging and communication is disabled\r\n        if (!isCommunicationEnabled(lecture.course)) {\r\n            return false;\r\n        }\r\n\r\n        // required on create (messaging is enabled)\r\n        if (lecture.id === undefined) {\r\n            return true;\r\n        }\r\n\r\n        // when editing, it is required if the lecture has a channel\r\n        return lecture.channelName !== undefined;\r\n    }\r\n}\r\n", "<jhi-title-channel-name\r\n    [(title)]=\"lecture.title\"\r\n    [(channelName)]=\"lecture.channelName\"\r\n    channelNamePrefix=\"lecture-\"\r\n    [hideTitleLabel]=\"false\"\r\n    [emphasizeLabels]=\"false\"\r\n    [hideChannelName]=\"hideChannelNameInput\"\r\n    [initChannelName]=\"lecture.id === undefined\"\r\n/>\r\n", "import { Component, Input, Signal, computed, input, viewChildren } from '@angular/core';\r\nimport { Lecture } from 'app/entities/lecture.model';\r\nimport { FormDateTimePickerComponent } from 'app/shared/date-time-picker/date-time-picker.component';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-lecture-update-period',\r\n    templateUrl: './lecture-period.component.html',\r\n    imports: [TranslateDirective, FormDateTimePickerComponent, FormsModule, ArtemisTranslatePipe],\r\n})\r\nexport class LectureUpdatePeriodComponent {\r\n    lecture = input.required<Lecture>();\r\n    @Input() validateDatesFunction: () => void;\r\n\r\n    periodSectionDatepickers = viewChildren(FormDateTimePickerComponent);\r\n\r\n    isPeriodSectionValid: Signal<boolean> = computed(() => {\r\n        for (const periodSectionDatepicker of this.periodSectionDatepickers()) {\r\n            if (!periodSectionDatepicker.isValid()) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    });\r\n}\r\n", "<div>\r\n    <h3 id=\"artemisApp.lecture.sections.period\"><span jhiTranslate=\"artemisApp.lecture.sections.period\"></span></h3>\r\n    <p><span jhiTranslate=\"artemisApp.lecture.sections.periodDescription\"></span></p>\r\n    <div class=\"d-flex\">\r\n        <div class=\"form-group flex-grow-1\">\r\n            <jhi-date-time-picker\r\n                labelName=\"{{ 'artemisApp.lecture.visibleDate' | artemisTranslate }}\"\r\n                [(ngModel)]=\"lecture().visibleDate\"\r\n                (valueChange)=\"validateDatesFunction()\"\r\n                name=\"visibleDate\"\r\n                id=\"visible-date\"\r\n            />\r\n        </div>\r\n        <div class=\"form-group flex-grow-1 ms-3\">\r\n            <jhi-date-time-picker\r\n                labelName=\"{{ 'artemisApp.lecture.startDate' | artemisTranslate }}\"\r\n                [(ngModel)]=\"lecture().startDate\"\r\n                (valueChange)=\"validateDatesFunction()\"\r\n                name=\"startDate\"\r\n                id=\"start-date\"\r\n            />\r\n        </div>\r\n        <div class=\"form-group flex-grow-1 ms-3\">\r\n            <jhi-date-time-picker\r\n                labelName=\"{{ 'artemisApp.lecture.endDate' | artemisTranslate }}\"\r\n                [(ngModel)]=\"lecture().endDate\"\r\n                (valueChange)=\"validateDatesFunction()\"\r\n                name=\"endDate\"\r\n                id=\"end-date\"\r\n            />\r\n        </div>\r\n    </div>\r\n</div>\r\n", "import { Component, Input, OnInit, ViewChild, computed, inject, signal, viewChild } from '@angular/core';\r\nimport { Lecture } from 'app/entities/lecture.model';\r\nimport { TextUnit } from 'app/entities/lecture-unit/textUnit.model';\r\nimport { VideoUnit } from 'app/entities/lecture-unit/videoUnit.model';\r\nimport { OnlineUnit } from 'app/entities/lecture-unit/onlineUnit.model';\r\nimport { AttachmentUnit } from 'app/entities/lecture-unit/attachmentUnit.model';\r\nimport { TextUnitFormComponent, TextUnitFormData } from 'app/lecture/lecture-unit/lecture-unit-management/text-unit-form/text-unit-form.component';\r\nimport { VideoUnitFormComponent, VideoUnitFormData } from 'app/lecture/lecture-unit/lecture-unit-management/video-unit-form/video-unit-form.component';\r\nimport { OnlineUnitFormComponent, OnlineUnitFormData } from 'app/lecture/lecture-unit/lecture-unit-management/online-unit-form/online-unit-form.component';\r\nimport { AttachmentUnitFormComponent, AttachmentUnitFormData } from 'app/lecture/lecture-unit/lecture-unit-management/attachment-unit-form/attachment-unit-form.component';\r\nimport { LectureUnit, LectureUnitType } from 'app/entities/lecture-unit/lectureUnit.model';\r\nimport { onError } from 'app/shared/util/global.utils';\r\nimport { Attachment, AttachmentType } from 'app/entities/attachment.model';\r\nimport { objectToJsonBlob } from 'app/utils/blob-util';\r\nimport { LectureUnitManagementComponent } from 'app/lecture/lecture-unit/lecture-unit-management/lecture-unit-management.component';\r\nimport { TextUnitService } from 'app/lecture/lecture-unit/lecture-unit-management/textUnit.service';\r\nimport { VideoUnitService } from 'app/lecture/lecture-unit/lecture-unit-management/videoUnit.service';\r\nimport { OnlineUnitService } from 'app/lecture/lecture-unit/lecture-unit-management/onlineUnit.service';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { AttachmentUnitService } from 'app/lecture/lecture-unit/lecture-unit-management/attachmentUnit.service';\r\nimport dayjs from 'dayjs/esm';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { UnitCreationCardComponent } from '../lecture-unit/lecture-unit-management/unit-creation-card/unit-creation-card.component';\r\nimport { CreateExerciseUnitComponent } from '../lecture-unit/lecture-unit-management/create-exercise-unit/create-exercise-unit.component';\r\n\r\n@Component({\r\n    selector: 'jhi-lecture-update-units',\r\n    templateUrl: './lecture-units.component.html',\r\n    imports: [\r\n        TranslateDirective,\r\n        LectureUnitManagementComponent,\r\n        UnitCreationCardComponent,\r\n        TextUnitFormComponent,\r\n        VideoUnitFormComponent,\r\n        OnlineUnitFormComponent,\r\n        AttachmentUnitFormComponent,\r\n        CreateExerciseUnitComponent,\r\n    ],\r\n})\r\nexport class LectureUpdateUnitsComponent implements OnInit {\r\n    protected activatedRoute = inject(ActivatedRoute);\r\n    protected alertService = inject(AlertService);\r\n    protected textUnitService = inject(TextUnitService);\r\n    protected videoUnitService = inject(VideoUnitService);\r\n    protected onlineUnitService = inject(OnlineUnitService);\r\n    protected attachmentUnitService = inject(AttachmentUnitService);\r\n\r\n    @Input() lecture: Lecture;\r\n\r\n    @ViewChild(LectureUnitManagementComponent, { static: false }) unitManagementComponent: LectureUnitManagementComponent;\r\n\r\n    textUnitForm = viewChild(TextUnitFormComponent);\r\n    videoUnitForm = viewChild(VideoUnitFormComponent);\r\n    onlineUnitForm = viewChild(OnlineUnitFormComponent);\r\n    attachmentUnitForm = viewChild(AttachmentUnitFormComponent);\r\n    isUnitConfigurationValid = computed(() => {\r\n        return (\r\n            (this.textUnitForm()?.isFormValid() || !this.isTextUnitFormOpen()) &&\r\n            (this.videoUnitForm()?.isFormValid() || !this.isVideoUnitFormOpen()) &&\r\n            (this.onlineUnitForm()?.isFormValid() || !this.isOnlineUnitFormOpen()) &&\r\n            (this.attachmentUnitForm()?.isFormValid() || !this.isAttachmentUnitFormOpen())\r\n        );\r\n    });\r\n\r\n    isEditingLectureUnit: boolean;\r\n    isTextUnitFormOpen = signal<boolean>(false);\r\n    isExerciseUnitFormOpen = signal<boolean>(false);\r\n    isVideoUnitFormOpen = signal<boolean>(false);\r\n    isOnlineUnitFormOpen = signal<boolean>(false);\r\n    isAttachmentUnitFormOpen = signal<boolean>(false);\r\n\r\n    currentlyProcessedTextUnit: TextUnit;\r\n    currentlyProcessedVideoUnit: VideoUnit;\r\n    currentlyProcessedOnlineUnit: OnlineUnit;\r\n    currentlyProcessedAttachmentUnit: AttachmentUnit;\r\n    textUnitFormData: TextUnitFormData;\r\n    videoUnitFormData: VideoUnitFormData;\r\n    onlineUnitFormData: OnlineUnitFormData;\r\n    attachmentUnitFormData: AttachmentUnitFormData;\r\n\r\n    ngOnInit() {\r\n        this.activatedRoute.queryParams.subscribe((params) => {\r\n            // Checks if the exercise unit form should be opened initially, i.e. coming back from the exercise creation\r\n            if (params.shouldOpenCreateExercise) {\r\n                this.onCreateLectureUnit(LectureUnitType.EXERCISE);\r\n            }\r\n        });\r\n    }\r\n\r\n    onCreateLectureUnit(type: LectureUnitType) {\r\n        this.isEditingLectureUnit = false;\r\n        this.onCloseLectureUnitForms();\r\n        switch (type) {\r\n            case LectureUnitType.TEXT:\r\n                this.isTextUnitFormOpen.set(true);\r\n                break;\r\n            case LectureUnitType.EXERCISE:\r\n                this.isExerciseUnitFormOpen.set(true);\r\n                break;\r\n            case LectureUnitType.VIDEO:\r\n                this.isVideoUnitFormOpen.set(true);\r\n                break;\r\n            case LectureUnitType.ONLINE:\r\n                this.isOnlineUnitFormOpen.set(true);\r\n                break;\r\n            case LectureUnitType.ATTACHMENT:\r\n                this.isAttachmentUnitFormOpen.set(true);\r\n                break;\r\n        }\r\n    }\r\n\r\n    isAnyUnitFormOpen = computed(() => {\r\n        return this.isTextUnitFormOpen() || this.isVideoUnitFormOpen() || this.isOnlineUnitFormOpen() || this.isAttachmentUnitFormOpen() || this.isExerciseUnitFormOpen();\r\n    });\r\n\r\n    onCloseLectureUnitForms() {\r\n        this.isTextUnitFormOpen.set(false);\r\n        this.isVideoUnitFormOpen.set(false);\r\n        this.isOnlineUnitFormOpen.set(false);\r\n        this.isAttachmentUnitFormOpen.set(false);\r\n        this.isExerciseUnitFormOpen.set(false);\r\n    }\r\n\r\n    createEditTextUnit(formData: TextUnitFormData) {\r\n        if (!formData?.name) {\r\n            return;\r\n        }\r\n\r\n        const { name, releaseDate, content, competencyLinks } = formData;\r\n\r\n        this.currentlyProcessedTextUnit = this.isEditingLectureUnit ? this.currentlyProcessedTextUnit : new TextUnit();\r\n        this.currentlyProcessedTextUnit.name = name;\r\n        this.currentlyProcessedTextUnit.releaseDate = releaseDate;\r\n        this.currentlyProcessedTextUnit.content = content;\r\n        this.currentlyProcessedTextUnit.competencyLinks = competencyLinks;\r\n\r\n        (this.isEditingLectureUnit\r\n            ? this.textUnitService.update(this.currentlyProcessedTextUnit, this.lecture.id!)\r\n            : this.textUnitService.create(this.currentlyProcessedTextUnit!, this.lecture.id!)\r\n        ).subscribe({\r\n            next: () => {\r\n                this.onCloseLectureUnitForms();\r\n                this.unitManagementComponent.loadData();\r\n            },\r\n            error: (res: HttpErrorResponse) => onError(this.alertService, res),\r\n        });\r\n    }\r\n\r\n    createEditVideoUnit(formData: VideoUnitFormData) {\r\n        if (!formData?.name || !formData?.source) {\r\n            return;\r\n        }\r\n\r\n        const { name, description, releaseDate, source, competencyLinks } = formData;\r\n\r\n        this.currentlyProcessedVideoUnit = this.isEditingLectureUnit ? this.currentlyProcessedVideoUnit : new VideoUnit();\r\n        this.currentlyProcessedVideoUnit.name = name || undefined;\r\n        this.currentlyProcessedVideoUnit.releaseDate = releaseDate || undefined;\r\n        this.currentlyProcessedVideoUnit.description = description || undefined;\r\n        this.currentlyProcessedVideoUnit.source = source || undefined;\r\n        this.currentlyProcessedVideoUnit.competencyLinks = competencyLinks;\r\n\r\n        (this.isEditingLectureUnit\r\n            ? this.videoUnitService.update(this.currentlyProcessedVideoUnit, this.lecture.id!)\r\n            : this.videoUnitService.create(this.currentlyProcessedVideoUnit!, this.lecture.id!)\r\n        ).subscribe({\r\n            next: () => {\r\n                this.onCloseLectureUnitForms();\r\n                this.unitManagementComponent.loadData();\r\n            },\r\n            error: (res: HttpErrorResponse) => onError(this.alertService, res),\r\n        });\r\n    }\r\n\r\n    createEditOnlineUnit(formData: OnlineUnitFormData) {\r\n        if (!formData?.name || !formData?.source) {\r\n            return;\r\n        }\r\n\r\n        const { name, description, releaseDate, source, competencyLinks } = formData;\r\n\r\n        this.currentlyProcessedOnlineUnit = this.isEditingLectureUnit ? this.currentlyProcessedOnlineUnit : new OnlineUnit();\r\n        this.currentlyProcessedOnlineUnit.name = name || undefined;\r\n        this.currentlyProcessedOnlineUnit.releaseDate = releaseDate || undefined;\r\n        this.currentlyProcessedOnlineUnit.description = description || undefined;\r\n        this.currentlyProcessedOnlineUnit.source = source || undefined;\r\n        this.currentlyProcessedOnlineUnit.competencyLinks = competencyLinks || undefined;\r\n\r\n        (this.isEditingLectureUnit\r\n            ? this.onlineUnitService.update(this.currentlyProcessedOnlineUnit, this.lecture.id!)\r\n            : this.onlineUnitService.create(this.currentlyProcessedOnlineUnit!, this.lecture.id!)\r\n        ).subscribe({\r\n            next: () => {\r\n                this.onCloseLectureUnitForms();\r\n                this.unitManagementComponent.loadData();\r\n            },\r\n            error: (res: HttpErrorResponse) => onError(this.alertService, res),\r\n        });\r\n    }\r\n\r\n    createEditAttachmentUnit(attachmentUnitFormData: AttachmentUnitFormData): void {\r\n        if (!attachmentUnitFormData?.formProperties?.name || !attachmentUnitFormData?.fileProperties?.file || !attachmentUnitFormData?.fileProperties?.fileName) {\r\n            return;\r\n        }\r\n\r\n        const { description, name, releaseDate, updateNotificationText, competencyLinks } = attachmentUnitFormData.formProperties;\r\n        const { file, fileName } = attachmentUnitFormData.fileProperties;\r\n\r\n        this.currentlyProcessedAttachmentUnit = this.isEditingLectureUnit ? this.currentlyProcessedAttachmentUnit : new AttachmentUnit();\r\n        const attachmentToCreateOrEdit = this.isEditingLectureUnit ? this.currentlyProcessedAttachmentUnit.attachment! : new Attachment();\r\n\r\n        if (this.isEditingLectureUnit) {\r\n            // breaking the connection to prevent errors in deserialization. will be reconnected on the server side\r\n            this.currentlyProcessedAttachmentUnit.attachment = undefined;\r\n            attachmentToCreateOrEdit.attachmentUnit = undefined;\r\n        }\r\n\r\n        let notificationText: string | undefined;\r\n\r\n        if (updateNotificationText) {\r\n            notificationText = updateNotificationText;\r\n        }\r\n\r\n        if (name) {\r\n            attachmentToCreateOrEdit.name = name;\r\n        }\r\n        if (releaseDate) {\r\n            attachmentToCreateOrEdit.releaseDate = releaseDate;\r\n        }\r\n        attachmentToCreateOrEdit.attachmentType = AttachmentType.FILE;\r\n        attachmentToCreateOrEdit.version = 1;\r\n        attachmentToCreateOrEdit.uploadDate = dayjs();\r\n\r\n        if (description) {\r\n            this.currentlyProcessedAttachmentUnit.description = description;\r\n        }\r\n        this.currentlyProcessedAttachmentUnit.competencyLinks = competencyLinks;\r\n\r\n        const formData = new FormData();\r\n        formData.append('file', file, fileName);\r\n        formData.append('attachment', objectToJsonBlob(attachmentToCreateOrEdit));\r\n        formData.append('attachmentUnit', objectToJsonBlob(this.currentlyProcessedAttachmentUnit));\r\n\r\n        (this.isEditingLectureUnit\r\n            ? this.attachmentUnitService.update(this.lecture.id!, this.currentlyProcessedAttachmentUnit.id!, formData, notificationText)\r\n            : this.attachmentUnitService.create(formData, this.lecture.id!)\r\n        ).subscribe({\r\n            next: () => {\r\n                this.onCloseLectureUnitForms();\r\n                this.unitManagementComponent.loadData();\r\n            },\r\n            error: (res: HttpErrorResponse) => {\r\n                if (res.error?.params === 'file' && res?.error?.title) {\r\n                    this.alertService.error(res.error.title);\r\n                } else {\r\n                    onError(this.alertService, res);\r\n                }\r\n            },\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Called when all selected exercises were linked from the component\r\n     */\r\n    onExerciseUnitCreated() {\r\n        this.onCloseLectureUnitForms();\r\n        this.unitManagementComponent.loadData();\r\n    }\r\n\r\n    startEditLectureUnit(lectureUnit: LectureUnit) {\r\n        this.isEditingLectureUnit = true;\r\n\r\n        lectureUnit.lecture = new Lecture();\r\n        lectureUnit.lecture.id = this.lecture.id;\r\n        lectureUnit.lecture.course = this.lecture.course;\r\n\r\n        this.currentlyProcessedTextUnit = lectureUnit as TextUnit;\r\n        this.currentlyProcessedVideoUnit = lectureUnit as VideoUnit;\r\n        this.currentlyProcessedOnlineUnit = lectureUnit as OnlineUnit;\r\n        this.currentlyProcessedAttachmentUnit = lectureUnit as AttachmentUnit;\r\n\r\n        this.isTextUnitFormOpen.set(lectureUnit.type === LectureUnitType.TEXT);\r\n        this.isVideoUnitFormOpen.set(lectureUnit.type === LectureUnitType.VIDEO);\r\n        this.isExerciseUnitFormOpen.set(lectureUnit.type === LectureUnitType.EXERCISE);\r\n        this.isOnlineUnitFormOpen.set(lectureUnit.type === LectureUnitType.ONLINE);\r\n        this.isAttachmentUnitFormOpen.set(lectureUnit.type === LectureUnitType.ATTACHMENT);\r\n\r\n        switch (lectureUnit.type) {\r\n            case LectureUnitType.TEXT:\r\n                this.textUnitFormData = {\r\n                    name: this.currentlyProcessedTextUnit.name,\r\n                    releaseDate: this.currentlyProcessedTextUnit.releaseDate,\r\n                    content: this.currentlyProcessedTextUnit.content,\r\n                };\r\n                break;\r\n            case LectureUnitType.VIDEO:\r\n                this.videoUnitFormData = {\r\n                    name: this.currentlyProcessedVideoUnit.name,\r\n                    description: this.currentlyProcessedVideoUnit.description,\r\n                    releaseDate: this.currentlyProcessedVideoUnit.releaseDate,\r\n                    source: this.currentlyProcessedVideoUnit.source,\r\n                };\r\n                break;\r\n            case LectureUnitType.ONLINE:\r\n                this.onlineUnitFormData = {\r\n                    name: this.currentlyProcessedOnlineUnit.name,\r\n                    description: this.currentlyProcessedOnlineUnit.description,\r\n                    releaseDate: this.currentlyProcessedOnlineUnit.releaseDate,\r\n                    source: this.currentlyProcessedOnlineUnit.source,\r\n                };\r\n                break;\r\n            case LectureUnitType.ATTACHMENT:\r\n                this.attachmentUnitFormData = {\r\n                    formProperties: {\r\n                        name: this.currentlyProcessedAttachmentUnit.attachment!.name,\r\n                        description: this.currentlyProcessedAttachmentUnit.description,\r\n                        releaseDate: this.currentlyProcessedAttachmentUnit.attachment!.releaseDate,\r\n                        version: this.currentlyProcessedAttachmentUnit.attachment!.version,\r\n                    },\r\n                    fileProperties: {\r\n                        fileName: this.currentlyProcessedAttachmentUnit.attachment!.link,\r\n                    },\r\n                };\r\n                break;\r\n        }\r\n    }\r\n}\r\n", "<div>\r\n    <h3><span jhiTranslate=\"artemisApp.lecture.sections.units\"></span></h3>\r\n    <p><span jhiTranslate=\"artemisApp.lecture.sections.unitsDescription\"></span></p>\r\n    <jhi-lecture-unit-management\r\n        [lectureId]=\"this.lecture.id\"\r\n        [emitEditEvents]=\"true\"\r\n        (onEditLectureUnitClicked)=\"startEditLectureUnit($event)\"\r\n        [showCreationCard]=\"false\"\r\n        [showCompetencies]=\"false\"\r\n    />\r\n    <div class=\"form-group w-100 d-flex justify-content-start\">\r\n        <jhi-unit-creation-card [emitEvents]=\"true\" (onUnitCreationCardClicked)=\"onCreateLectureUnit($event)\" />\r\n    </div>\r\n    <div class=\"form-group\">\r\n        @if (isEditingLectureUnit) {\r\n            <h4><span jhiTranslate=\"artemisApp.lecture.editLectureUnit\"></span></h4>\r\n        } @else if (isAnyUnitFormOpen()) {\r\n            <h4><span jhiTranslate=\"artemisApp.lecture.newLectureUnit\"></span></h4>\r\n        }\r\n        @if (isTextUnitFormOpen()) {\r\n            <jhi-text-unit-form\r\n                [isEditMode]=\"isEditingLectureUnit\"\r\n                [hasCancelButton]=\"true\"\r\n                (onCancel)=\"onCloseLectureUnitForms()\"\r\n                (formSubmitted)=\"createEditTextUnit($event)\"\r\n                [formData]=\"textUnitFormData\"\r\n            />\r\n        }\r\n        @if (isVideoUnitFormOpen()) {\r\n            <jhi-video-unit-form\r\n                [isEditMode]=\"isEditingLectureUnit\"\r\n                [hasCancelButton]=\"true\"\r\n                (onCancel)=\"onCloseLectureUnitForms()\"\r\n                (formSubmitted)=\"createEditVideoUnit($event)\"\r\n                [formData]=\"videoUnitFormData\"\r\n            />\r\n        }\r\n        @if (isOnlineUnitFormOpen()) {\r\n            <jhi-online-unit-form\r\n                [isEditMode]=\"isEditingLectureUnit\"\r\n                [hasCancelButton]=\"true\"\r\n                (onCancel)=\"onCloseLectureUnitForms()\"\r\n                (formSubmitted)=\"createEditOnlineUnit($event)\"\r\n                [formData]=\"onlineUnitFormData\"\r\n            />\r\n        }\r\n        @if (isAttachmentUnitFormOpen()) {\r\n            <jhi-attachment-unit-form\r\n                [isEditMode]=\"isEditingLectureUnit\"\r\n                [hasCancelButton]=\"true\"\r\n                (onCancel)=\"onCloseLectureUnitForms()\"\r\n                (formSubmitted)=\"createEditAttachmentUnit($event)\"\r\n                [formData]=\"attachmentUnitFormData\"\r\n            />\r\n        }\r\n        @if (isExerciseUnitFormOpen()) {\r\n            <jhi-create-exercise-unit\r\n                [shouldNavigateOnSubmit]=\"false\"\r\n                (onExerciseUnitCreated)=\"onExerciseUnitCreated()\"\r\n                [lectureId]=\"lecture.id\"\r\n                [courseId]=\"lecture.course?.id\"\r\n                [hasCancelButton]=\"true\"\r\n                (onCancel)=\"onCloseLectureUnitForms()\"\r\n            />\r\n        }\r\n    </div>\r\n</div>\r\n", "import { Component, OnDestroy, OnInit, computed, effect, inject, model, signal, viewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { LectureService } from './lecture.service';\r\nimport { Lecture } from 'app/entities/lecture.model';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { onError } from 'app/shared/util/global.utils';\r\nimport { ArtemisNavigationUtilService } from 'app/utils/navigation.utils';\r\nimport { DocumentationType } from 'app/shared/components/documentation-button/documentation-button.component';\r\nimport { faBan, faPuzzlePiece, faQuestionCircle, faSave } from '@fortawesome/free-solid-svg-icons';\r\nimport { ACCEPTED_FILE_EXTENSIONS_FILE_BROWSER, ALLOWED_FILE_EXTENSIONS_HUMAN_READABLE } from 'app/shared/constants/file-extensions.constants';\r\nimport { FormulaAction } from 'app/shared/monaco-editor/model/actions/formula.action';\r\nimport { LectureTitleChannelNameComponent } from './lecture-title-channel-name.component';\r\nimport { LectureUpdatePeriodComponent } from 'app/lecture/lecture-period/lecture-period.component';\r\nimport dayjs, { Dayjs } from 'dayjs/esm';\r\nimport { FormDateTimePickerComponent } from 'app/shared/date-time-picker/date-time-picker.component';\r\nimport cloneDeep from 'lodash-es/cloneDeep';\r\nimport { FormSectionStatus, FormStatusBarComponent } from 'app/forms/form-status-bar/form-status-bar.component';\r\nimport { LectureAttachmentsComponent } from 'app/lecture/lecture-attachments.component';\r\nimport { LectureUpdateUnitsComponent } from 'app/lecture/lecture-units/lecture-units.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TranslateDirective } from '../shared/language/translate.directive';\r\nimport { DocumentationButtonComponent } from '../shared/components/documentation-button/documentation-button.component';\r\nimport { MarkdownEditorMonacoComponent } from '../shared/markdown-editor/monaco/markdown-editor-monaco.component';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ArtemisTranslatePipe } from '../shared/pipes/artemis-translate.pipe';\r\nimport { captureException } from '@sentry/angular';\r\n\r\n@Component({\r\n    selector: 'jhi-lecture-update',\r\n    templateUrl: './lecture-update.component.html',\r\n    styleUrls: ['./lecture-update.component.scss'],\r\n    imports: [\r\n        FormsModule,\r\n        TranslateDirective,\r\n        DocumentationButtonComponent,\r\n        FormStatusBarComponent,\r\n        LectureTitleChannelNameComponent,\r\n        MarkdownEditorMonacoComponent,\r\n        LectureUpdatePeriodComponent,\r\n        FaIconComponent,\r\n        LectureAttachmentsComponent,\r\n        LectureUpdateUnitsComponent,\r\n        NgbTooltip,\r\n        ArtemisTranslatePipe,\r\n    ],\r\n})\r\nexport class LectureUpdateComponent implements OnInit, OnDestroy {\r\n    protected readonly documentationType: DocumentationType = 'Lecture';\r\n    protected readonly faQuestionCircle = faQuestionCircle;\r\n    protected readonly faSave = faSave;\r\n    protected readonly faPuzzleProcess = faPuzzlePiece;\r\n    protected readonly faBan = faBan;\r\n\r\n    protected readonly allowedFileExtensions = ALLOWED_FILE_EXTENSIONS_HUMAN_READABLE;\r\n    protected readonly acceptedFileExtensionsFileBrowser = ACCEPTED_FILE_EXTENSIONS_FILE_BROWSER;\r\n\r\n    private readonly alertService = inject(AlertService);\r\n    private readonly lectureService = inject(LectureService);\r\n    private readonly activatedRoute = inject(ActivatedRoute);\r\n    private readonly navigationUtilService = inject(ArtemisNavigationUtilService);\r\n    private readonly router = inject(Router);\r\n\r\n    titleSection = viewChild.required(LectureTitleChannelNameComponent);\r\n    lecturePeriodSection = viewChild.required(LectureUpdatePeriodComponent);\r\n    attachmentsSection = viewChild(LectureAttachmentsComponent);\r\n    unitSection = viewChild(LectureUpdateUnitsComponent);\r\n    formStatusBar = viewChild(FormStatusBarComponent);\r\n\r\n    courseTitle = model<string>('');\r\n    lecture = signal<Lecture>(new Lecture());\r\n    lectureOnInit: Lecture;\r\n    isEditMode = signal<boolean>(false);\r\n    isSaving: boolean;\r\n    isProcessing: boolean;\r\n    processUnitMode: boolean;\r\n\r\n    formStatusSections: FormSectionStatus[];\r\n\r\n    courses: Course[];\r\n\r\n    domainActionsDescription = [new FormulaAction()];\r\n    file: File;\r\n    fileName: string;\r\n    fileInputTouched = false;\r\n\r\n    isNewlyCreatedExercise = false;\r\n\r\n    isChangeMadeToTitleOrPeriodSection = false;\r\n    shouldDisplayDismissWarning = true;\r\n\r\n    areSectionsValid = computed(() => {\r\n        return (\r\n            this.titleSection().titleChannelNameComponent().isFormValidSignal() &&\r\n            this.lecturePeriodSection().isPeriodSectionValid() &&\r\n            (this.unitSection()?.isUnitConfigurationValid() ?? true) &&\r\n            (this.attachmentsSection()?.isFormValid() ?? true)\r\n        );\r\n    });\r\n\r\n    private subscriptions = new Subscription();\r\n\r\n    constructor() {\r\n        effect(() => {\r\n            if (this.titleSection()?.titleChannelNameComponent() && this.lecturePeriodSection()) {\r\n                this.subscriptions.add(\r\n                    this.titleSection()!\r\n                        .titleChannelNameComponent()\r\n                        .titleChange.subscribe(() => {\r\n                            this.updateIsChangesMadeToTitleOrPeriodSection();\r\n                        }),\r\n                );\r\n                this.subscriptions.add(\r\n                    this.titleSection()!\r\n                        .titleChannelNameComponent()\r\n                        .channelNameChange.subscribe(() => {\r\n                            this.updateIsChangesMadeToTitleOrPeriodSection();\r\n                        }),\r\n                );\r\n                this.subscriptions.add(\r\n                    this.lecturePeriodSection()!\r\n                        .periodSectionDatepickers()\r\n                        .forEach((datepicker: FormDateTimePickerComponent) => {\r\n                            datepicker.valueChange.subscribe(() => {\r\n                                this.updateIsChangesMadeToTitleOrPeriodSection();\r\n                            });\r\n                        }),\r\n                );\r\n            }\r\n        });\r\n\r\n        effect(() => {\r\n            this.updateFormStatusBar();\r\n        });\r\n\r\n        effect(\r\n            function scrollToLastSectionAfterLectureCreation() {\r\n                if (this.unitSection() && this.isNewlyCreatedExercise) {\r\n                    this.isNewlyCreatedExercise = false;\r\n                    this.formStatusBar()?.scrollToHeadline('artemisApp.lecture.sections.period');\r\n                }\r\n            }.bind(this),\r\n        );\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.isSaving = false;\r\n        this.processUnitMode = false;\r\n        this.isProcessing = false;\r\n        this.activatedRoute.parent!.data.subscribe((data) => {\r\n            // Create a new lecture to use unless we fetch an existing lecture\r\n            const lecture = data['lecture'];\r\n            this.lecture.set(lecture ?? new Lecture());\r\n            const course = data['course'];\r\n            if (course) {\r\n                this.lecture().course = course;\r\n            }\r\n        });\r\n\r\n        this.isEditMode.set(!this.router.url.endsWith('/new'));\r\n        this.lectureOnInit = cloneDeep(this.lecture());\r\n        this.courseTitle.set(this.lecture().course?.title ?? '');\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscriptions.unsubscribe();\r\n    }\r\n\r\n    updateFormStatusBar() {\r\n        const updatedFormStatusSections: FormSectionStatus[] = [];\r\n\r\n        updatedFormStatusSections.push(\r\n            {\r\n                title: 'artemisApp.lecture.sections.title',\r\n                valid: Boolean(this.titleSection().titleChannelNameComponent().isFormValidSignal()),\r\n            },\r\n            {\r\n                title: 'artemisApp.lecture.sections.period',\r\n                valid: Boolean(this.lecturePeriodSection().isPeriodSectionValid()),\r\n            },\r\n        );\r\n\r\n        if (this.isEditMode()) {\r\n            updatedFormStatusSections.push(\r\n                {\r\n                    title: 'artemisApp.lecture.sections.attachments',\r\n                    valid: Boolean(this.attachmentsSection()?.isFormValid()),\r\n                },\r\n                {\r\n                    title: 'artemisApp.lecture.sections.units',\r\n                    valid: Boolean(this.unitSection()?.isUnitConfigurationValid()),\r\n                },\r\n            );\r\n        }\r\n\r\n        this.formStatusSections = updatedFormStatusSections;\r\n    }\r\n\r\n    isChangeMadeToTitleSection() {\r\n        return (\r\n            this.lecture().title !== this.lectureOnInit.title ||\r\n            this.lecture().channelName !== this.lectureOnInit.channelName ||\r\n            (this.lecture().description ?? '') !== (this.lectureOnInit.description ?? '')\r\n        );\r\n    }\r\n\r\n    isChangeMadeToPeriodSection() {\r\n        const { visibleDate, startDate, endDate } = this.lecture();\r\n        const { visibleDate: visibleDateOnInit, startDate: startDateOnInit, endDate: endDateOnInit } = this.lectureOnInit;\r\n\r\n        const isInvalid = (date: Dayjs | undefined) => !dayjs(date).isValid();\r\n        const isSame = (date1: Dayjs | undefined, date2: Dayjs | undefined) => dayjs(date1).isSame(dayjs(date2));\r\n\r\n        const emptyVisibleDateWasCleared = !visibleDateOnInit && isInvalid(visibleDate);\r\n        const emptyStartDateWasCleared = !startDateOnInit && isInvalid(startDate);\r\n        const emptyEndDateWasCleared = !endDateOnInit && isInvalid(endDate);\r\n\r\n        return (\r\n            (!isSame(visibleDate, visibleDateOnInit) && !emptyVisibleDateWasCleared) ||\r\n            (!isSame(startDate, startDateOnInit) && !emptyStartDateWasCleared) ||\r\n            (!isSame(endDate, endDateOnInit) && !emptyEndDateWasCleared)\r\n        );\r\n    }\r\n\r\n    protected updateIsChangesMadeToTitleOrPeriodSection() {\r\n        this.isChangeMadeToTitleOrPeriodSection = this.isChangeMadeToTitleSection() || this.isChangeMadeToPeriodSection();\r\n    }\r\n\r\n    /**\r\n     * Revert to the previous state, equivalent with pressing the back button on your browser\r\n     * Returns to the detail page if there is no previous state, and we edited an existing lecture\r\n     * Returns to the overview page if there is no previous state, and we created a new lecture\r\n     */\r\n    previousState() {\r\n        this.shouldDisplayDismissWarning = false;\r\n        this.navigationUtilService.navigateBackWithOptional(['course-management', this.lecture().course!.id!.toString(), 'lectures'], this.lecture().id?.toString());\r\n    }\r\n\r\n    /**\r\n     * Save the changes on a lecture\r\n     * This function is called by pressing save after creating or editing a lecture\r\n     */\r\n    save() {\r\n        this.shouldDisplayDismissWarning = false;\r\n        this.isSaving = true;\r\n        this.isProcessing = true;\r\n        if (this.lecture().id !== undefined) {\r\n            this.subscribeToSaveResponse(this.lectureService.update(this.lecture()));\r\n        } else {\r\n            // Newly created lectures must have a channel name, which cannot be undefined\r\n            this.subscribeToSaveResponse(this.lectureService.create(this.lecture()));\r\n        }\r\n    }\r\n\r\n    proceedToUnitSplit() {\r\n        this.save();\r\n    }\r\n\r\n    /**\r\n     * Activate or deactivate the processUnitMode mode for automatic lecture units creation.\r\n     * This function is called by checking Automatic unit processing checkbox when creating a new lecture\r\n     */\r\n    onSelectProcessUnit() {\r\n        this.processUnitMode = !this.processUnitMode;\r\n    }\r\n\r\n    onFileChange(event: Event): void {\r\n        const input = event.target as HTMLInputElement;\r\n        if (!input.files?.length) {\r\n            this.fileName = '';\r\n            return;\r\n        }\r\n        this.file = input.files[0];\r\n        this.fileName = this.file.name;\r\n    }\r\n\r\n    /**\r\n     * @callback callback after saving a lecture, handles appropriate action in case of error\r\n     * @param result The Http response from the server\r\n     */\r\n    protected subscribeToSaveResponse(result: Observable<HttpResponse<Lecture>>) {\r\n        result.subscribe({\r\n            next: (response: HttpResponse<Lecture>) => this.onSaveSuccess(response.body!),\r\n            error: (error: HttpErrorResponse) => this.onSaveError(error),\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Action on successful lecture creation or edit\r\n     */\r\n    protected onSaveSuccess(lecture: Lecture) {\r\n        this.isSaving = false;\r\n\r\n        if (!lecture.course?.id) {\r\n            captureException('Lecture has no course id: ' + lecture);\r\n            return;\r\n        }\r\n\r\n        if (this.processUnitMode) {\r\n            this.isProcessing = false;\r\n            this.alertService.success(`Lecture with title ${lecture.title} was successfully ${this.lecture().id !== undefined ? 'updated' : 'created'}.`);\r\n            this.router.navigate(['course-management', lecture.course.id, 'lectures', lecture.id, 'unit-management', 'attachment-units', 'process'], {\r\n                state: { file: this.file, fileName: this.fileName },\r\n            });\r\n        } else if (this.isEditMode()) {\r\n            this.router.navigate(['course-management', lecture.course.id, 'lectures', lecture.id]);\r\n        } else {\r\n            // after create we stay on the edit page, as now attachments and lecture units are available (we need the lecture id to save them)\r\n            this.isNewlyCreatedExercise = true;\r\n            this.isEditMode.set(true);\r\n            this.lectureOnInit = cloneDeep(lecture);\r\n            this.lecture.set(lecture);\r\n            this.updateIsChangesMadeToTitleOrPeriodSection();\r\n            window.history.replaceState({}, '', `course-management/${lecture.course.id}/lectures/${lecture.id}/edit`);\r\n            this.shouldDisplayDismissWarning = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Action on unsuccessful lecture creation or edit\r\n     * @param errorRes the errorRes handed to the alert service\r\n     */\r\n    protected onSaveError(errorRes: HttpErrorResponse) {\r\n        this.isSaving = false;\r\n\r\n        if (errorRes.error && errorRes.error.title) {\r\n            this.alertService.addErrorAlert(errorRes.error.title, errorRes.error.message, errorRes.error.params);\r\n        } else {\r\n            onError(this.alertService, errorRes);\r\n        }\r\n    }\r\n\r\n    onDatesValuesChanged() {\r\n        const startDate = this.lecture().startDate;\r\n        const endDate = this.lecture().endDate;\r\n        const visibleDate = this.lecture().visibleDate;\r\n\r\n        // Prevent endDate from being before startDate, if both dates are set\r\n        if (endDate && startDate?.isAfter(endDate)) {\r\n            this.lecture().endDate = startDate.clone();\r\n        }\r\n\r\n        // Prevent visibleDate from being after startDate, if both dates are set\r\n        if (visibleDate && startDate?.isBefore(visibleDate)) {\r\n            this.lecture().visibleDate = startDate.clone();\r\n        }\r\n    }\r\n}\r\n", "<div class=\"row justify-content-center\">\r\n    <div class=\"col-md-8\">\r\n        <form name=\"editForm\" role=\"form\" (ngSubmit)=\"save()\" #editForm=\"ngForm\">\r\n            <div class=\"d-flex\">\r\n                <div class=\"flex-grow-1\">\r\n                    <div class=\"d-flex align-items-center\">\r\n                        <h2 id=\"jhi-lecture-heading\" [jhiTranslate]=\"isEditMode() ? 'artemisApp.lecture.home.editLabel' : 'artemisApp.lecture.home.createLabel'\"></h2>\r\n                        <jhi-documentation-button [type]=\"documentationType\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <jhi-form-status-bar [formStatusSections]=\"formStatusSections\" />\r\n            <div>\r\n                <div>\r\n                    <h3 id=\"artemisApp.lecture.sections.title\"><span jhiTranslate=\"artemisApp.lecture.sections.title\"></span></h3>\r\n                    <p><span jhiTranslate=\"artemisApp.lecture.sections.titleDescription\"></span></p>\r\n                    @if (courseTitle()) {\r\n                        <div class=\"form-group\">\r\n                            <label class=\"form-control-label\" jhiTranslate=\"artemisApp.lecture.course\" for=\"field_course\"></label>\r\n                            <div class=\"d-flex\">\r\n                                <input id=\"field_course\" disabled type=\"text\" class=\"form-control\" name=\"course\" [(ngModel)]=\"courseTitle\" />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    <jhi-lecture-title-channel-name [lecture]=\"lecture()\" />\r\n                    @if (lecture()) {\r\n                        <div class=\"form-group\" id=\"field_description\">\r\n                            <label class=\"form-control-label\" jhiTranslate=\"artemisApp.lecture.description\" for=\"field_description\"></label>\r\n                            <jhi-markdown-editor-monaco\r\n                                class=\"markdown-editor\"\r\n                                [domainActions]=\"domainActionsDescription\"\r\n                                [(markdown)]=\"lecture().description\"\r\n                                (markdownChange)=\"updateIsChangesMadeToTitleOrPeriodSection()\"\r\n                            />\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <jhi-lecture-update-period [lecture]=\"lecture()\" [validateDatesFunction]=\"onDatesValuesChanged\" />\r\n                <div class=\"flex-grow-1 d-flex justify-content-end\">\r\n                    <button type=\"button\" id=\"cancel-save\" class=\"btn btn-secondary\" (click)=\"previousState()\">\r\n                        <fa-icon [icon]=\"faBan\" class=\"me-1\" /><span jhiTranslate=\"entity.action.cancel\"></span>\r\n                    </button>\r\n                    <button\r\n                        type=\"submit\"\r\n                        id=\"save-entity\"\r\n                        class=\"btn btn-primary ms-2\"\r\n                        [disabled]=\"editForm.form.invalid || isSaving || processUnitMode || !isChangeMadeToTitleOrPeriodSection || !areSectionsValid()\"\r\n                    >\r\n                        <fa-icon [icon]=\"faSave\" class=\"me-1\" /><span jhiTranslate=\"entity.action.save\"></span>\r\n                    </button>\r\n                </div>\r\n                @if (isEditMode()) {\r\n                    <div>\r\n                        <h3 id=\"artemisApp.lecture.sections.attachments\"><span jhiTranslate=\"artemisApp.lecture.sections.attachments\"></span></h3>\r\n                        <p id=\"artemisApp.lecture.sections.attachmentsDescription\">\r\n                            <span jhiTranslate=\"artemisApp.lecture.sections.attachmentsDescription\"></span>\r\n                        </p>\r\n                        <jhi-lecture-attachments [lectureId]=\"lecture().id\" [showHeader]=\"false\" />\r\n                    </div>\r\n                }\r\n            </div>\r\n            @if (isEditMode()) {\r\n                <div class=\"mt-3\">\r\n                    <jhi-lecture-update-units [lecture]=\"lecture()\" />\r\n                    <div class=\"py-2\">\r\n                        <input class=\"form-check-input\" type=\"checkbox\" name=\"processUnit\" (change)=\"onSelectProcessUnit()\" [disabled]=\"editForm.form.invalid || isSaving\" />\r\n                        <span class=\"px-1\" jhiTranslate=\"artemisApp.attachmentUnit.createAttachmentUnits.processAutomatically\"></span>\r\n                        <fa-icon [icon]=\"faQuestionCircle\" [ngbTooltip]=\"'artemisApp.attachmentUnit.createAttachmentUnits.lectureFileToolTip' | artemisTranslate\" />\r\n                    </div>\r\n                </div>\r\n            }\r\n            @if (processUnitMode) {\r\n                <div class=\"alert alert-warning mt-3\">\r\n                    <ul class=\"informative-text\">\r\n                        <li jhiTranslate=\"artemisApp.attachmentUnit.createAttachmentUnits.informativeText.firstLine\"></li>\r\n                        <li jhiTranslate=\"artemisApp.attachmentUnit.createAttachmentUnits.informativeText.secondLine\"></li>\r\n                        <li jhiTranslate=\"artemisApp.attachmentUnit.createAttachmentUnits.informativeText.note\"></li>\r\n                    </ul>\r\n                </div>\r\n            }\r\n            @if (processUnitMode) {\r\n                <div class=\"form-group\">\r\n                    <label>{{ 'artemisApp.attachmentUnit.createAttachmentUnit.file' | artemisTranslate }}*</label>\r\n                    <small id=\"fileHelp\" class=\"form-text text-body-secondary\" jhiTranslate=\"artemisApp.attachmentUnit.createAttachmentUnit.fileLimitation\"></small>\r\n                    <fa-icon\r\n                        [icon]=\"faQuestionCircle\"\r\n                        [ngbTooltip]=\"'artemisApp.attachmentUnit.createAttachmentUnit.fileLimitationTooltip' | artemisTranslate: { extensions: allowedFileExtensions }\"\r\n                    />\r\n                    <div class=\"input-group background-file\">\r\n                        <div class=\"custom-file overflow-ellipsis\">\r\n                            <input\r\n                                id=\"fileInput\"\r\n                                type=\"file\"\r\n                                class=\"custom-file-input file-input-margin\"\r\n                                [accept]=\"acceptedFileExtensionsFileBrowser\"\r\n                                (change)=\"onFileChange($event)\"\r\n                                aria-describedby=\"fileHelp\"\r\n                                [placeholder]=\"'artemisApp.attachmentUnit.createAttachmentUnit.chooseFile' | artemisTranslate\"\r\n                                (click)=\"fileInputTouched = true\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    @if (!fileName && fileInputTouched) {\r\n                        <div class=\"alert alert-danger\" jhiTranslate=\"artemisApp.attachmentUnit.createAttachmentUnit.fileRequiredValidationError\"></div>\r\n                    }\r\n                </div>\r\n            }\r\n            <div class=\"d-flex\">\r\n                @if (processUnitMode) {\r\n                    <div class=\"flex-grow-1 ms-3\">\r\n                        <div class=\"process-units-button\">\r\n                            <button\r\n                                type=\"button\"\r\n                                id=\"process-units-entity\"\r\n                                [disabled]=\"editForm.form.invalid || isSaving || !processUnitMode || isProcessing || !fileName\"\r\n                                class=\"btn btn-success\"\r\n                                (click)=\"proceedToUnitSplit()\"\r\n                            >\r\n                                <fa-icon [icon]=\"faPuzzleProcess\" class=\"me-1\" /><span jhiTranslate=\"artemisApp.attachmentUnit.createAttachmentUnits.processUnits\"></span>\r\n                                @if (isProcessing) {\r\n                                    <span class=\"spinner-border spinner-border-sm\"></span>\r\n                                }\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n"],
  "mappings": "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",
  "names": ["LectureTitleChannelNameComponent", "lecture", "titleChannelNameComponent", "viewChild", "required", "TitleChannelNameComponent", "hideChannelNameInput", "ngOnInit", "requiresChannelName", "isCommunicationEnabled", "course", "id", "undefined", "channelName", "selectors", "viewQuery", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275twoWayListener", "$event", "i0", "\u0275\u0275twoWayBindingSet", "title", "\u0275\u0275elementEnd", "\u0275\u0275text", "\u0275\u0275twoWayProperty", "\u0275\u0275property", "encapsulation", "LectureUpdatePeriodComponent", "lecture", "input", "required", "validateDatesFunction", "periodSectionDatepickers", "viewChildren", "FormDateTimePickerComponent", "isPeriodSectionValid", "computed", "periodSectionDatepicker", "isValid", "selectors", "viewQuery", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275twoWayListener", "$event", "i0", "\u0275\u0275twoWayBindingSet", "visibleDate", "\u0275\u0275listener", "startDate", "endDate", "\u0275\u0275advance", "\u0275\u0275propertyInterpolate", "\u0275\u0275pipeBind1", "\u0275\u0275twoWayProperty", "TranslateDirective", "FormsModule", "NgControlStatus", "NgModel", "ArtemisTranslatePipe", "encapsulation", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "onCloseLectureUnitForms", "$event", "createEditTextUnit", "\u0275\u0275advance", "\u0275\u0275property", "isEditingLectureUnit", "textUnitFormData", "_r3", "createEditVideoUnit", "videoUnitFormData", "_r4", "createEditOnlineUnit", "onlineUnitFormData", "_r5", "createEditAttachmentUnit", "attachmentUnitFormData", "_r6", "onExerciseUnitCreated", "lecture", "id", "course", "LectureUpdateUnitsComponent", "activatedRoute", "inject", "ActivatedRoute", "alertService", "AlertService", "textUnitService", "TextUnitService", "videoUnitService", "VideoUnitService", "onlineUnitService", "OnlineUnitService", "attachmentUnitService", "AttachmentUnitService", "unitManagementComponent", "textUnitForm", "viewChild", "TextUnitFormComponent", "videoUnitForm", "VideoUnitFormComponent", "onlineUnitForm", "OnlineUnitFormComponent", "attachmentUnitForm", "AttachmentUnitFormComponent", "isUnitConfigurationValid", "computed", "isFormValid", "isTextUnitFormOpen", "isVideoUnitFormOpen", "isOnlineUnitFormOpen", "isAttachmentUnitFormOpen", "signal", "isExerciseUnitFormOpen", "currentlyProcessedTextUnit", "currentlyProcessedVideoUnit", "currentlyProcessedOnlineUnit", "currentlyProcessedAttachmentUnit", "ngOnInit", "queryParams", "subscribe", "params", "shouldOpenCreateExercise", "onCreateLectureUnit", "LectureUnitType", "EXERCISE", "type", "TEXT", "set", "VIDEO", "ONLINE", "ATTACHMENT", "isAnyUnitFormOpen", "formData", "name", "releaseDate", "content", "competencyLinks", "TextUnit", "update", "create", "next", "loadData", "error", "res", "onError", "source", "description", "VideoUnit", "undefined", "OnlineUnit", "formProperties", "fileProperties", "file", "fileName", "updateNotificationText", "AttachmentUnit", "attachmentToCreateOrEdit", "attachment", "Attachment", "attachmentUnit", "notificationText", "attachmentType", "version", "uploadDate", "dayjs", "FormData", "append", "objectToJsonBlob", "title", "startEditLectureUnit", "lectureUnit", "Lecture", "link", "selectors", "viewQuery", "rf", "ctx", "LectureUnitManagementComponent", "\u0275\u0275template", "LectureUpdateUnitsComponent_Conditional_17_Template", "LectureUpdateUnitsComponent_Conditional_18_Template", "LectureUpdateUnitsComponent_Conditional_19_Template", "LectureUpdateUnitsComponent_Conditional_20_Template", "LectureUpdateUnitsComponent_Conditional_21_Template", "LectureUpdateUnitsComponent_Conditional_22_Template", "LectureUpdateUnitsComponent_Conditional_23_Template", "\u0275\u0275conditional", "TranslateDirective", "UnitCreationCardComponent", "CreateExerciseUnitComponent", "encapsulation", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275twoWayListener", "$event", "\u0275\u0275restoreView", "_r2", "ctx_r2", "\u0275\u0275nextContext", "i0", "\u0275\u0275twoWayBindingSet", "courseTitle", "\u0275\u0275resetView", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275twoWayProperty", "_r4", "lecture", "description", "\u0275\u0275listener", "updateIsChangesMadeToTitleOrPeriodSection", "\u0275\u0275property", "domainActionsDescription", "id", "_r5", "onSelectProcessUnit", "editForm_r6", "form", "invalid", "isSaving", "faQuestionCircle", "\u0275\u0275pipeBind1", "_r7", "onFileChange", "fileInputTouched", "\u0275\u0275template", "LectureUpdateComponent_Conditional_58_Conditional_21_Template", "\u0275\u0275textInterpolate1", "\u0275\u0275pipeBind2", "\u0275\u0275pureFunction1", "_c0", "allowedFileExtensions", "acceptedFileExtensionsFileBrowser", "\u0275\u0275conditional", "fileName", "_r8", "proceedToUnitSplit", "LectureUpdateComponent_Conditional_61_Conditional_10_Template", "processUnitMode", "isProcessing", "faPuzzleProcess", "LectureUpdateComponent", "documentationType", "faSave", "faPuzzlePiece", "faBan", "ALLOWED_FILE_EXTENSIONS_HUMAN_READABLE", "ACCEPTED_FILE_EXTENSIONS_FILE_BROWSER", "alertService", "inject", "AlertService", "lectureService", "LectureService", "activatedRoute", "ActivatedRoute", "navigationUtilService", "ArtemisNavigationUtilService", "router", "Router", "titleSection", "viewChild", "required", "LectureTitleChannelNameComponent", "lecturePeriodSection", "LectureUpdatePeriodComponent", "attachmentsSection", "LectureAttachmentsComponent", "unitSection", "LectureUpdateUnitsComponent", "formStatusBar", "FormStatusBarComponent", "model", "signal", "Lecture", "lectureOnInit", "isEditMode", "formStatusSections", "courses", "FormulaAction", "file", "isNewlyCreatedExercise", "isChangeMadeToTitleOrPeriodSection", "shouldDisplayDismissWarning", "areSectionsValid", "computed", "titleChannelNameComponent", "isFormValidSignal", "isPeriodSectionValid", "isUnitConfigurationValid", "isFormValid", "subscriptions", "Subscription", "constructor", "effect", "add", "titleChange", "subscribe", "channelNameChange", "periodSectionDatepickers", "forEach", "datepicker", "valueChange", "updateFormStatusBar", "scrollToHeadline", "bind", "ngOnInit", "parent", "data", "set", "course", "url", "endsWith", "cloneDeep", "title", "ngOnDestroy", "unsubscribe", "updatedFormStatusSections", "push", "valid", "Boolean", "isChangeMadeToTitleSection", "channelName", "isChangeMadeToPeriodSection", "visibleDate", "startDate", "endDate", "visibleDateOnInit", "startDateOnInit", "endDateOnInit", "isInvalid", "date", "dayjs", "isValid", "isSame", "date1", "date2", "emptyVisibleDateWasCleared", "emptyStartDateWasCleared", "emptyEndDateWasCleared", "previousState", "navigateBackWithOptional", "toString", "save", "undefined", "subscribeToSaveResponse", "update", "create", "event", "input", "target", "files", "length", "name", "result", "next", "response", "onSaveSuccess", "body", "error", "onSaveError", "captureException", "success", "navigate", "state", "window", "history", "replaceState", "errorRes", "addErrorAlert", "message", "params", "onError", "onDatesValuesChanged", "isAfter", "clone", "isBefore", "selectors", "viewQuery", "rf", "ctx", "_r1", "LectureUpdateComponent_Conditional_32_Template", "LectureUpdateComponent_Conditional_35_Template", "LectureUpdateComponent_Conditional_54_Template", "LectureUpdateComponent_Conditional_56_Template", "LectureUpdateComponent_Conditional_57_Template", "LectureUpdateComponent_Conditional_58_Template", "LectureUpdateComponent_Conditional_61_Template", "FormsModule", "\u0275NgNoValidate", "DefaultValueAccessor", "NgControlStatus", "NgControlStatusGroup", "NgModel", "NgForm", "TranslateDirective", "DocumentationButtonComponent", "MarkdownEditorMonacoComponent", "FaIconComponent", "NgbTooltip", "ArtemisTranslatePipe", "styles"]
}
