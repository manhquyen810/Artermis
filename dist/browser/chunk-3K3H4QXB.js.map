{
  "version": 3,
  "sources": ["src/main/webapp/app/overview/discussion-section/discussion-section.component.ts", "src/main/webapp/app/overview/discussion-section/discussion-section.component.html", "src/main/webapp/app/shared/metis/course-discussion.directive.ts"],
  "sourcesContent": ["import { AfterViewInit, Component, ElementRef, OnDestroy, effect, inject, input, viewChild, viewChildren } from '@angular/core';\r\nimport interact from 'interactjs';\r\nimport { Exercise } from 'app/entities/exercise.model';\r\nimport { Lecture } from 'app/entities/lecture.model';\r\nimport { DisplayPriority, PageType, PostSortCriterion, SortDirection } from 'app/shared/metis/metis.util';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { Subject, combineLatest, map, takeUntil } from 'rxjs';\r\nimport { MetisService } from 'app/shared/metis/metis.service';\r\nimport { Post } from 'app/entities/metis/post.model';\r\nimport { PostCreateEditModalComponent } from 'app/shared/metis/posting-create-edit-modal/post-create-edit-modal/post-create-edit-modal.component';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { faArrowLeft, faChevronLeft, faChevronRight, faGripLinesVertical, faLongArrowRight } from '@fortawesome/free-solid-svg-icons';\r\nimport { CourseDiscussionDirective } from 'app/shared/metis/course-discussion.directive';\r\nimport { FormBuilder, FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Channel, ChannelDTO } from 'app/entities/metis/conversation/channel.model';\r\nimport { ChannelService } from 'app/shared/metis/conversations/channel.service';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { InfiniteScrollDirective } from 'ngx-infinite-scroll';\r\nimport { PostingThreadComponent } from 'app/shared/metis/posting-thread/posting-thread.component';\r\nimport { MessageInlineInputComponent } from 'app/shared/metis/message/message-inline-input/message-inline-input.component';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\nimport { NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ButtonComponent } from 'app/shared/components/button.component';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { toObservable } from '@angular/core/rxjs-interop';\r\n\r\n@Component({\r\n    selector: 'jhi-discussion-section',\r\n    templateUrl: './discussion-section.component.html',\r\n    styleUrls: ['./discussion-section.component.scss'],\r\n    imports: [\r\n        FontAwesomeModule,\r\n        InfiniteScrollDirective,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        PostingThreadComponent,\r\n        MessageInlineInputComponent,\r\n        ArtemisTranslatePipe,\r\n        TranslateDirective,\r\n        NgbTooltipModule,\r\n        ButtonComponent,\r\n    ],\r\n    providers: [MetisService],\r\n})\r\nexport class DiscussionSectionComponent extends CourseDiscussionDirective implements AfterViewInit, OnDestroy {\r\n    private channelService = inject(ChannelService);\r\n    private activatedRoute = inject(ActivatedRoute);\r\n    private router = inject(Router);\r\n    private formBuilder = inject(FormBuilder);\r\n\r\n    exercise = input<Exercise>();\r\n    lecture = input<Lecture>();\r\n\r\n    readonly postCreateEditModal = viewChild<PostCreateEditModalComponent>(PostCreateEditModalComponent);\r\n    readonly messages = viewChildren<ElementRef>('postingThread');\r\n    readonly messages$ = toObservable(this.messages);\r\n    readonly content = viewChild<ElementRef>('itemsContainer');\r\n\r\n    private ngUnsubscribe = new Subject<void>();\r\n    private previousScrollDistanceFromTop: number;\r\n    private page = 1;\r\n    private readonly PAGE_SIZE = 50;\r\n    private totalNumberOfPosts = 0;\r\n    // as set for the css class '.items-container'\r\n    private messagesContainerHeight = 700;\r\n    private viewChildrenInitialized = false;\r\n    currentSortDirection = SortDirection.DESCENDING;\r\n\r\n    channel: ChannelDTO;\r\n    noChannelAvailable: boolean;\r\n    collapsed = false;\r\n    currentPostId?: number;\r\n    currentPost?: Post;\r\n    shouldSendMessage: boolean;\r\n    readonly PAGE_TYPE = PageType.PAGE_SECTION;\r\n\r\n    // Icons\r\n    faChevronRight = faChevronRight;\r\n    faChevronLeft = faChevronLeft;\r\n    faGripLinesVertical = faGripLinesVertical;\r\n    faArrowLeft = faArrowLeft;\r\n    faLongArrowRight = faLongArrowRight;\r\n\r\n    constructor() {\r\n        super();\r\n        effect(() => this.loadData(this.exercise(), this.lecture()));\r\n    }\r\n\r\n    loadData(exercise?: Exercise, lecture?: Lecture): void {\r\n        this.paramSubscription = combineLatest({\r\n            params: this.activatedRoute.params,\r\n            queryParams: this.activatedRoute.queryParams,\r\n        }).subscribe((routeParams: { params: Params; queryParams: Params }) => {\r\n            this.currentPostId = +routeParams.queryParams.postId;\r\n            this.course = exercise?.course ?? lecture?.course;\r\n            this.metisService.setCourse(this.course);\r\n            this.metisService.setPageType(this.PAGE_TYPE);\r\n            if (routeParams.params.courseId) {\r\n                this.setChannel(routeParams.params.courseId);\r\n            } else if (this.course?.id) {\r\n                this.setChannel(this.course.id);\r\n            }\r\n            this.createEmptyPost();\r\n            this.resetFormGroup();\r\n        });\r\n        this.postsSubscription = this.metisService.posts.subscribe((posts: Post[]) => {\r\n            if (this.viewChildrenInitialized && this.content()) {\r\n                this.previousScrollDistanceFromTop = this.content()!.nativeElement.scrollHeight - this.content()!.nativeElement.scrollTop;\r\n            }\r\n            this.posts = posts\r\n                .slice()\r\n                .sort((a, b) => {\r\n                    if (a.displayPriority === DisplayPriority.PINNED && b.displayPriority !== DisplayPriority.PINNED) {\r\n                        return 1;\r\n                    }\r\n                    if (a.displayPriority !== DisplayPriority.PINNED && b.displayPriority === DisplayPriority.PINNED) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                })\r\n                .reverse();\r\n            this.isLoading = false;\r\n            if (this.currentPostId && this.posts.length > 0) {\r\n                this.currentPost = this.posts.find((post) => post.id === this.currentPostId);\r\n            }\r\n        });\r\n        this.metisService.totalNumberOfPosts.pipe(takeUntil(this.ngUnsubscribe)).subscribe((totalNumberOfPosts: number) => {\r\n            this.totalNumberOfPosts = totalNumberOfPosts;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * on leaving the page, the modal should be closed\r\n     */\r\n    ngOnDestroy(): void {\r\n        super.onDestroy();\r\n        this.postCreateEditModal()?.modalRef?.close();\r\n    }\r\n\r\n    /**\r\n     * on changing the sort direction via icon, the metis service is invoked to deliver the posts for the currently set context,\r\n     * sorted on the backend\r\n     */\r\n    onChangeSortDir(): void {\r\n        this.currentSortDirection = this.currentSortDirection === SortDirection.DESCENDING ? SortDirection.ASCENDING : SortDirection.DESCENDING;\r\n        this.onSelectContext();\r\n    }\r\n\r\n    /**\r\n     * Set the channel for the discussion section, either for a lecture or an exercise\r\n     * @param courseId\r\n     */\r\n    setChannel(courseId: number): void {\r\n        const getChannel = () => {\r\n            return {\r\n                next: (channel: ChannelDTO) => {\r\n                    this.channel = channel ?? undefined;\r\n                    this.resetFormGroup();\r\n                    this.setFilterAndSort();\r\n\r\n                    if (!this.channel?.id) {\r\n                        this.noChannelAvailable = true;\r\n                        this.collapsed = true;\r\n                        return;\r\n                    }\r\n\r\n                    this.metisService.getFilteredPosts(this.currentPostContextFilter, true, this.channel);\r\n\r\n                    this.createEmptyPost();\r\n                    this.resetFormGroup();\r\n                },\r\n            };\r\n        };\r\n\r\n        // Currently, an additional REST call is made to retrieve the channel associated with the lecture/exercise\r\n        // TODO: Add the channel to the response for loading the lecture/exercise\r\n        if (this.lecture()) {\r\n            this.channelService\r\n                .getChannelOfLecture(courseId, this.lecture()!.id!)\r\n                .pipe(map((res: HttpResponse<ChannelDTO>) => res.body))\r\n                .subscribe(getChannel());\r\n        } else if (this.exercise()) {\r\n            this.channelService\r\n                .getChannelOfExercise(courseId, this.exercise()!.id!)\r\n                .pipe(map((res: HttpResponse<ChannelDTO>) => res.body))\r\n                .subscribe(getChannel());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * invoke metis service to create an empty default post that is needed on initialization of a modal to create a post,\r\n     * this empty post has either exercise or lecture set as context, depending on if this component holds an exercise or a lecture reference\r\n     */\r\n    createEmptyPost(): void {\r\n        if (this.channel) {\r\n            const conversation = this.channel as Channel;\r\n            this.shouldSendMessage = false;\r\n            this.createdPost = this.metisService.createEmptyPostForContext(conversation);\r\n        } else {\r\n            this.createdPost = this.metisService.createEmptyPostForContext();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * makes discussion section expandable by configuring 'interact'\r\n     */\r\n    ngAfterViewInit(): void {\r\n        interact('.expanded-discussion')\r\n            .resizable({\r\n                edges: { left: '.draggable-left', right: false, bottom: false, top: false },\r\n                modifiers: [\r\n                    // Set maximum width\r\n                    interact.modifiers!.restrictSize({\r\n                        min: { width: 375, height: 0 },\r\n                        max: { width: 600, height: 4000 },\r\n                    }),\r\n                ],\r\n                inertia: true,\r\n            })\r\n            .on('resizestart', function (event: any) {\r\n                event.target.classList.add('card-resizable');\r\n            })\r\n            .on('resizeend', function (event: any) {\r\n                event.target.classList.remove('card-resizable');\r\n            })\r\n            .on('resizemove', function (event: any) {\r\n                const target = event.target;\r\n                target.style.width = event.rect.width + 'px';\r\n            });\r\n\r\n        this.messages$.pipe(takeUntil(this.ngUnsubscribe)).subscribe(() => {\r\n            this.handleScrollOnNewMessage();\r\n        });\r\n\r\n        this.viewChildrenInitialized = true;\r\n    }\r\n\r\n    handleScrollOnNewMessage = () => {\r\n        if ((this.posts.length > 0 && this.content()?.nativeElement.scrollTop === 0 && this.page === 1) || this.previousScrollDistanceFromTop === this.messagesContainerHeight) {\r\n            this.scrollToBottomOfMessages();\r\n        }\r\n    };\r\n\r\n    scrollToBottomOfMessages() {\r\n        if (this.viewChildrenInitialized && this.content()?.nativeElement) {\r\n            this.content()!.nativeElement.scrollTop = this.content()!.nativeElement.scrollHeight;\r\n        }\r\n    }\r\n\r\n    fetchNextPage() {\r\n        const morePostsAvailable = this.posts.length < this.totalNumberOfPosts;\r\n        if (morePostsAvailable) {\r\n            this.page += 1;\r\n            this.commandMetisToFetchPosts();\r\n        }\r\n        if (this.content()?.nativeElement) {\r\n            this.content()!.nativeElement.scrollTop = this.content()!.nativeElement.scrollTop + this.PAGE_SIZE;\r\n        }\r\n    }\r\n\r\n    public commandMetisToFetchPosts(forceUpdate = false) {\r\n        if (this.currentPostContextFilter) {\r\n            this.currentPostContextFilter = { ...this.currentPostContextFilter, page: this.page - 1 };\r\n            this.metisService.getFilteredPosts(this.currentPostContextFilter, forceUpdate, this.channel);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * sets the filter options after receiving user input\r\n     */\r\n    setFilterAndSort(): void {\r\n        this.page = 1;\r\n        this.scrollToBottomOfMessages();\r\n        this.currentPostContextFilter = {\r\n            courseId: undefined,\r\n            conversationId: this.channel?.id,\r\n            searchText: this.searchText?.trim(),\r\n            filterToUnresolved: this.formGroup.get('filterToUnresolved')?.value,\r\n            filterToOwn: this.formGroup.get('filterToOwn')?.value,\r\n            filterToAnsweredOrReacted: this.formGroup.get('filterToAnsweredOrReacted')?.value,\r\n            pagingEnabled: true,\r\n            page: 0,\r\n            pageSize: this.PAGE_SIZE,\r\n            postSortCriterion: PostSortCriterion.CREATION_DATE,\r\n            sortingOrder: this.currentSortDirection,\r\n        };\r\n    }\r\n\r\n    resetCurrentPost() {\r\n        this.currentPost = undefined;\r\n        this.currentPostId = undefined;\r\n        this.router.navigate([], {\r\n            queryParams: {\r\n                postId: this.currentPostId,\r\n            },\r\n            queryParamsHandling: 'merge',\r\n        });\r\n    }\r\n\r\n    /**\r\n     * by default, the form group fields are set to show all posts of the current exercise or lecture\r\n     */\r\n    resetFormGroup(): void {\r\n        this.formGroup = this.formBuilder.group({\r\n            conversationId: this.channel?.id,\r\n            exerciseId: this.exercise()?.id,\r\n            lectureId: this.lecture()?.id,\r\n            filterToUnresolved: false,\r\n            filterToOwn: false,\r\n            filterToAnsweredOrReacted: false,\r\n        });\r\n    }\r\n\r\n    toggleSendMessage(): void {\r\n        this.shouldSendMessage = !this.shouldSendMessage;\r\n    }\r\n}\r\n", "<!-- expanded posts -->\r\n@if (course) {\r\n    <div class=\"h-100\">\r\n        @if (!collapsed) {\r\n            <div class=\"postings-container expanded-discussion\">\r\n                <div class=\"draggable-left\">\r\n                    <fa-icon [icon]=\"faGripLinesVertical\" />\r\n                </div>\r\n                <div class=\"card mb-3\">\r\n                    <!-- header -->\r\n                    <div class=\"card-header text-white\" [ngbTooltip]=\"'artemisApp.metis.communication.hide' | artemisTranslate\" (click)=\"collapsed = true\">\r\n                        <div class=\"row flex-grow-1\">\r\n                            <div class=\"col\">\r\n                                <h5 class=\"mb-0 fw-medium\" jhiTranslate=\"artemisApp.metis.communication.label\"></h5>\r\n                            </div>\r\n                            <div class=\"col-auto\">\r\n                                <fa-icon [icon]=\"faChevronRight\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <!-- body -->\r\n                    @if (noChannelAvailable) {\r\n                        <div class=\"card-body\" jhiTranslate=\"artemisApp.metis.channel.noChannel\"></div>\r\n                    } @else {\r\n                        <div class=\"card-body pt-0\">\r\n                            @if (currentPost !== undefined) {\r\n                                <div class=\"my-2\">\r\n                                    <fa-icon [icon]=\"faArrowLeft\" (click)=\"resetCurrentPost()\" class=\"back-button me-2 clickable\" />\r\n                                    <span class=\"back-instruction\" jhiTranslate=\"artemisApp.metis.post.showAllPosts\"></span>\r\n                                    <jhi-posting-thread [post]=\"currentPost\" [showAnswers]=\"true\" [id]=\"'item-' + currentPost?.id\" [showChannelReference]=\"false\" />\r\n                                </div>\r\n                            } @else {\r\n                                <div class=\"row ps-0\">\r\n                                    <!-- search bar -->\r\n                                    <div class=\"input-group px-0 my-2\">\r\n                                        <input\r\n                                            id=\"search\"\r\n                                            name=\"searchText\"\r\n                                            [(ngModel)]=\"searchText\"\r\n                                            class=\"form-control\"\r\n                                            (keyup.enter)=\"onSelectContext()\"\r\n                                            placeholder=\"{{ 'artemisApp.metis.discussionSection.searchBarDefault' | artemisTranslate }}\"\r\n                                        />\r\n                                        <jhi-button [btnType]=\"ButtonType.SECONDARY\" [icon]=\"faTimes\" (onClick)=\"searchText = ''; onSelectContext()\" />\r\n                                        <jhi-button id=\"search-submit\" class=\"ms-1\" [icon]=\"faSearch\" (onClick)=\"onSelectContext()\" />\r\n                                    </div>\r\n                                </div>\r\n                                <form [formGroup]=\"formGroup\">\r\n                                    <!-- filter and sort controls -->\r\n                                    <div class=\"row justify-content-between\">\r\n                                        <!-- filter -->\r\n                                        <div class=\"col-auto\">\r\n                                            <div class=\"row\">\r\n                                                <!-- attribute filter -->\r\n                                                <div class=\"col-auto px-0 selection-prefix d-flex flex-wrap\">\r\n                                                    <fa-icon class=\"pe-2\" [icon]=\"faFilter\" />\r\n                                                    <div class=\"form-group pe-2\">\r\n                                                        <input\r\n                                                            class=\"form-check-input\"\r\n                                                            type=\"checkbox\"\r\n                                                            formControlName=\"filterToUnresolved\"\r\n                                                            name=\"filterToUnresolved\"\r\n                                                            id=\"filterToUnresolved\"\r\n                                                            (change)=\"onSelectContext()\"\r\n                                                        />\r\n                                                        <label for=\"filterToUnresolved\" class=\"p-0\" jhiTranslate=\"artemisApp.metis.overview.filterToUnresolved\"></label>\r\n                                                    </div>\r\n                                                    <div class=\"form-group pe-2\">\r\n                                                        <input\r\n                                                            class=\"form-check-input\"\r\n                                                            type=\"checkbox\"\r\n                                                            formControlName=\"filterToOwn\"\r\n                                                            name=\"filterToOwn\"\r\n                                                            id=\"filterToOwn\"\r\n                                                            (change)=\"onSelectContext()\"\r\n                                                        />\r\n                                                        <label for=\"filterToOwn\" class=\"p-0\" jhiTranslate=\"artemisApp.metis.overview.filterToOwn\"></label>\r\n                                                    </div>\r\n                                                    <div class=\"form-group pe-2\">\r\n                                                        <input\r\n                                                            class=\"form-check-input\"\r\n                                                            type=\"checkbox\"\r\n                                                            formControlName=\"filterToAnsweredOrReacted\"\r\n                                                            name=\"filterToAnsweredOrReacted\"\r\n                                                            id=\"filterToAnsweredOrReacted\"\r\n                                                            (change)=\"onSelectContext()\"\r\n                                                        />\r\n                                                        <label\r\n                                                            for=\"filterToAnsweredOrReacted\"\r\n                                                            class=\"p-0\"\r\n                                                            jhiTranslate=\"artemisApp.metis.overview.filterToAnsweredOrReacted\"\r\n                                                        ></label>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <!-- sort dropdown -->\r\n                                        <div class=\"col-auto ps-0\">\r\n                                            <div class=\"row align-items-baseline\">\r\n                                                <div class=\"col-auto pe-1\">\r\n                                                    <span jhiTranslate=\"artemisApp.metis.discussionSection.sortByDate\"></span>\r\n                                                </div>\r\n                                                @if (!currentSortDirection) {\r\n                                                    <div class=\"col-auto p-0 clickable\" (click)=\"onChangeSortDir()\">\r\n                                                        <fa-icon\r\n                                                            [icon]=\"faLongArrowRight\"\r\n                                                            [ngbTooltip]=\"'artemisApp.metis.discussionSection.defaultSortCriterion' | artemisTranslate\"\r\n                                                        />\r\n                                                    </div>\r\n                                                }\r\n                                                @if (currentSortDirection) {\r\n                                                    <div class=\"col-auto p-0 clickable\" (click)=\"onChangeSortDir()\">\r\n                                                        <fa-icon\r\n                                                            [icon]=\"currentSortDirection === SortDirection.ASCENDING ? faLongArrowAltUp : faLongArrowAltDown\"\r\n                                                            [ngbTooltip]=\"\r\n                                                                currentSortDirection === SortDirection.ASCENDING\r\n                                                                    ? ('artemisApp.metis.overview.sortAscending' | artemisTranslate)\r\n                                                                    : ('artemisApp.metis.overview.sortDescending' | artemisTranslate)\r\n                                                            \"\r\n                                                        />\r\n                                                    </div>\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                                <div class=\"bold-line row mt-1 mb-2\"></div>\r\n                                <div #itemsContainer class=\"items-container\" infinite-scroll [scrollWindow]=\"false\" (scrolledUp)=\"fetchNextPage()\">\r\n                                    @for (post of posts; track post.id) {\r\n                                        <jhi-posting-thread\r\n                                            #postingThread\r\n                                            [id]=\"'item-' + post.id\"\r\n                                            class=\"item\"\r\n                                            [post]=\"post\"\r\n                                            [showAnswers]=\"posts.length === 1\"\r\n                                            [showChannelReference]=\"false\"\r\n                                            [isCommunicationPage]=\"false\"\r\n                                        />\r\n                                    }\r\n                                </div>\r\n                            }\r\n                            <!-- loading posts -->\r\n                            @if (isLoading) {\r\n                                <div class=\"post-result-information row mt-2\">\r\n                                    <div class=\"col-12\" jhiTranslate=\"artemisApp.metis.discussionSection.loadingMessages\"></div>\r\n                                </div>\r\n                            }\r\n                            <!-- no posts -->\r\n                            @if (!isLoading && posts.length === 0) {\r\n                                <div class=\"post-result-information row mt-2\">\r\n                                    <div class=\"col-12\" jhiTranslate=\"artemisApp.metis.discussionSection.noMessages\"></div>\r\n                                </div>\r\n                            }\r\n                            <!-- new post button -->\r\n                            @if (createdPost && !isLoading && !channel.isArchived) {\r\n                                <div class=\"row mt-2\">\r\n                                    <div class=\"col-12\">\r\n                                        <button id=\"new-post\" class=\"btn btn-sm btn-primary\" (click)=\"toggleSendMessage()\">\r\n                                            @if (!shouldSendMessage) {\r\n                                                <fa-icon [icon]=\"faPlus\" />\r\n                                            }\r\n                                            @if (shouldSendMessage) {\r\n                                                <fa-icon [icon]=\"faTimes\" />\r\n                                            }\r\n                                            @if (!shouldSendMessage) {\r\n                                                <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.metis.newMessage\"></span>\r\n                                            }\r\n                                            @if (shouldSendMessage) {\r\n                                                <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.metis.collapseNewMessage\"></span>\r\n                                            }\r\n                                        </button>\r\n                                        @if (shouldSendMessage) {\r\n                                            <jhi-message-inline-input class=\"message-input\" [posting]=\"createdPost\" (onCreate)=\"createEmptyPost()\" />\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        } @else {\r\n            <div class=\"postings-container collapsed-discussion text-white\" (click)=\"collapsed = false\" [ngbTooltip]=\"'artemisApp.metis.communication.show' | artemisTranslate\">\r\n                <fa-icon class=\"expand-postings-icon\" [icon]=\"faChevronLeft\" />\r\n                <span class=\"h5\" jhiTranslate=\"artemisApp.metis.communication.label\"></span>\r\n                <fa-icon class=\"expand-postings-icon\" [icon]=\"faChevronLeft\" />\r\n            </div>\r\n        }\r\n        <!-- collapsed posts -->\r\n    </div>\r\n}\r\n", "import { Directive, inject } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { faFilter, faLongArrowAltDown, faLongArrowAltUp, faPlus, faSearch, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { PostContextFilter, PostSortCriterion, SortDirection } from 'app/shared/metis/metis.util';\r\nimport { ButtonType } from '../components/button.component';\r\nimport { Post } from 'app/entities/metis/post.model';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { Subscription } from 'rxjs';\r\nimport { MetisService } from 'app/shared/metis/metis.service';\r\n\r\n@Directive({\r\n    providers: [MetisService],\r\n})\r\nexport abstract class CourseDiscussionDirective {\r\n    protected metisService = inject(MetisService);\r\n\r\n    searchText?: string;\r\n    currentPostContextFilter: PostContextFilter;\r\n    formGroup: FormGroup;\r\n    readonly ButtonType = ButtonType;\r\n    course?: Course;\r\n    createdPost: Post;\r\n    posts: Post[] = [];\r\n    isLoading = true;\r\n\r\n    currentSortCriterion = PostSortCriterion.CREATION_DATE;\r\n    currentSortDirection?: SortDirection;\r\n    readonly SortBy = PostSortCriterion;\r\n    readonly SortDirection = SortDirection;\r\n\r\n    protected postsSubscription: Subscription;\r\n    protected paramSubscription: Subscription;\r\n\r\n    // Icons\r\n    faPlus = faPlus;\r\n    faTimes = faTimes;\r\n    faFilter = faFilter;\r\n    faSearch = faSearch;\r\n    faLongArrowAltUp = faLongArrowAltUp;\r\n    faLongArrowAltDown = faLongArrowAltDown;\r\n\r\n    /**\r\n     * on changing any filter, the metis service is invoked to deliver all posts for the\r\n     * currently set context, filtered on the server\r\n     */\r\n    onSelectContext(): void {\r\n        this.setFilterAndSort();\r\n        this.metisService.getFilteredPosts(this.currentPostContextFilter);\r\n    }\r\n\r\n    /**\r\n     * on leaving the page, should unsubscribe from subscriptions\r\n     */\r\n    onDestroy(): void {\r\n        this.paramSubscription?.unsubscribe();\r\n        this.postsSubscription?.unsubscribe();\r\n    }\r\n\r\n    abstract setFilterAndSort(): void;\r\n\r\n    abstract resetFormGroup(): void;\r\n}\r\n"],
  "mappings": "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",
  "names": ["import_interactjs", "CourseDiscussionDirective", "metisService", "inject", "MetisService", "searchText", "currentPostContextFilter", "formGroup", "ButtonType", "course", "createdPost", "posts", "isLoading", "currentSortCriterion", "PostSortCriterion", "CREATION_DATE", "currentSortDirection", "SortBy", "SortDirection", "postsSubscription", "paramSubscription", "faPlus", "faTimes", "faFilter", "faSearch", "faLongArrowAltUp", "faLongArrowAltDown", "onSelectContext", "setFilterAndSort", "getFilteredPosts", "onDestroy", "unsubscribe", "features", "\u0275\u0275ProvidersFeature", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275elementStart", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r3", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "resetCurrentPost", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "faArrowLeft", "currentPost", "id", "_r5", "onChangeSortDir", "faLongArrowRight", "\u0275\u0275pipeBind1", "_r6", "currentSortDirection", "SortDirection", "ASCENDING", "faLongArrowAltUp", "faLongArrowAltDown", "post_r7", "posts", "length", "\u0275\u0275twoWayListener", "$event", "_r4", "i0", "\u0275\u0275twoWayBindingSet", "searchText", "onSelectContext", "\u0275\u0275template", "DiscussionSectionComponent_Conditional_1_Conditional_3_Conditional_30_Conditional_4_Conditional_64_Template", "DiscussionSectionComponent_Conditional_1_Conditional_3_Conditional_30_Conditional_4_Conditional_65_Template", "fetchNextPage", "\u0275\u0275repeaterCreate", "DiscussionSectionComponent_Conditional_1_Conditional_3_Conditional_30_Conditional_4_For_76_Template", "_forTrack0", "\u0275\u0275propertyInterpolate", "\u0275\u0275twoWayProperty", "ButtonType", "SECONDARY", "faTimes", "faSearch", "formGroup", "faFilter", "\u0275\u0275conditional", "\u0275\u0275repeater", "faPlus", "_r9", "createEmptyPost", "createdPost", "_r8", "toggleSendMessage", "DiscussionSectionComponent_Conditional_1_Conditional_3_Conditional_30_Conditional_7_Conditional_7_Template", "DiscussionSectionComponent_Conditional_1_Conditional_3_Conditional_30_Conditional_7_Conditional_8_Template", "DiscussionSectionComponent_Conditional_1_Conditional_3_Conditional_30_Conditional_7_Conditional_9_Template", "DiscussionSectionComponent_Conditional_1_Conditional_3_Conditional_30_Conditional_7_Conditional_10_Template", "DiscussionSectionComponent_Conditional_1_Conditional_3_Conditional_30_Conditional_7_Conditional_12_Template", "shouldSendMessage", "DiscussionSectionComponent_Conditional_1_Conditional_3_Conditional_30_Conditional_3_Template", "DiscussionSectionComponent_Conditional_1_Conditional_3_Conditional_30_Conditional_4_Template", "DiscussionSectionComponent_Conditional_1_Conditional_3_Conditional_30_Conditional_5_Template", "DiscussionSectionComponent_Conditional_1_Conditional_3_Conditional_30_Conditional_6_Template", "DiscussionSectionComponent_Conditional_1_Conditional_3_Conditional_30_Conditional_7_Template", "undefined", "isLoading", "channel", "isArchived", "_r1", "collapsed", "DiscussionSectionComponent_Conditional_1_Conditional_3_Conditional_29_Template", "DiscussionSectionComponent_Conditional_1_Conditional_3_Conditional_30_Template", "faGripLinesVertical", "faChevronRight", "noChannelAvailable", "_r10", "faChevronLeft", "DiscussionSectionComponent_Conditional_1_Conditional_3_Template", "DiscussionSectionComponent_Conditional_1_Conditional_4_Template", "DiscussionSectionComponent", "CourseDiscussionDirective", "channelService", "inject", "ChannelService", "activatedRoute", "ActivatedRoute", "router", "Router", "formBuilder", "FormBuilder", "exercise", "input", "lecture", "postCreateEditModal", "viewChild", "PostCreateEditModalComponent", "messages", "viewChildren", "messages$", "toObservable", "content", "ngUnsubscribe", "Subject", "previousScrollDistanceFromTop", "page", "PAGE_SIZE", "totalNumberOfPosts", "messagesContainerHeight", "viewChildrenInitialized", "DESCENDING", "currentPostId", "PAGE_TYPE", "PageType", "PAGE_SECTION", "constructor", "effect", "loadData", "paramSubscription", "combineLatest", "params", "queryParams", "subscribe", "routeParams", "postId", "course", "metisService", "setCourse", "setPageType", "courseId", "setChannel", "resetFormGroup", "postsSubscription", "nativeElement", "scrollHeight", "scrollTop", "slice", "sort", "a", "b", "displayPriority", "DisplayPriority", "PINNED", "reverse", "find", "post", "pipe", "takeUntil", "ngOnDestroy", "onDestroy", "modalRef", "close", "getChannel", "next", "setFilterAndSort", "getFilteredPosts", "currentPostContextFilter", "getChannelOfLecture", "map", "res", "body", "getChannelOfExercise", "conversation", "createEmptyPostForContext", "ngAfterViewInit", "interact", "resizable", "edges", "left", "right", "bottom", "top", "modifiers", "restrictSize", "min", "width", "height", "max", "inertia", "on", "event", "target", "classList", "add", "remove", "style", "rect", "handleScrollOnNewMessage", "scrollToBottomOfMessages", "commandMetisToFetchPosts", "forceUpdate", "__spreadProps", "__spreadValues", "conversationId", "trim", "filterToUnresolved", "get", "value", "filterToOwn", "filterToAnsweredOrReacted", "pagingEnabled", "pageSize", "postSortCriterion", "PostSortCriterion", "CREATION_DATE", "sortingOrder", "navigate", "queryParamsHandling", "group", "exerciseId", "lectureId", "selectors", "viewQuery", "rf", "ctx", "MetisService", "\u0275\u0275InheritDefinitionFeature", "decls", "vars", "consts", "template", "DiscussionSectionComponent_Conditional_1_Template", "FontAwesomeModule", "FaIconComponent", "InfiniteScrollDirective", "FormsModule", "\u0275NgNoValidate", "DefaultValueAccessor", "CheckboxControlValueAccessor", "NgControlStatus", "NgControlStatusGroup", "NgModel", "ReactiveFormsModule", "FormGroupDirective", "FormControlName", "PostingThreadComponent", "MessageInlineInputComponent", "ArtemisTranslatePipe", "TranslateDirective", "NgbTooltipModule", "NgbTooltip", "ButtonComponent", "styles"]
}
