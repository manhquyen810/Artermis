import{a as f,b as d}from"./chunk-XBLNBTXN.js";import{a as g}from"./chunk-G3JOQOSD.js";import{b as m}from"./chunk-R5BZWVRQ.js";import{L as l,O as u}from"./chunk-IOA4DPXY.js";import{Ea as n,ra as c,ya as h,z as o}from"./chunk-5LC5EQRR.js";var U=(()=>{class s{http=n(u);entityTitleService=n(d);accountService=n(m);resourceUrlParticipations="api/programming/programming-exercise-participations/";resourceUrl="api/programming/programming-exercise/";getLatestResultWithFeedback(e,t=!1){let i=g({withSubmission:t});return this.http.get(this.resourceUrlParticipations+e+"/latest-result-with-feedbacks",{params:i}).pipe(c(r=>{r?.participation?.exercise&&(this.sendTitlesToEntityTitleService(r?.participation),this.accountService.setAccessRightsForExerciseAndReferencedCourse(r.participation.exercise))}))}getStudentParticipationWithLatestResult(e){return this.http.get(this.resourceUrlParticipations+e+"/student-participation-with-latest-result-and-feedbacks").pipe(c(t=>{t.exercise&&(this.sendTitlesToEntityTitleService(t),this.accountService.setAccessRightsForExerciseAndReferencedCourse(t.exercise))}))}getStudentParticipationWithAllResults(e){return this.http.get(this.resourceUrlParticipations+e+"/student-participation-with-all-results").pipe(c(t=>{t.exercise&&(this.sendTitlesToEntityTitleService(t),this.accountService.setAccessRightsForExerciseAndReferencedCourse(t.exercise))}))}checkIfParticipationHasResult(e){return this.http.get(this.resourceUrlParticipations+e+"/has-result")}resetRepository(e,t){let i=new l;return t&&(i=i.set("gradedParticipationId",t.toString())),this.http.put(`${this.resourceUrlParticipations}${e}/reset-repository`,null,{observe:"response",params:i})}sendTitlesToEntityTitleService(e){if(e?.exercise){let t=e.exercise;if(this.entityTitleService.setExerciseTitle(t),t.course){let i=t.course;this.entityTitleService.setTitle(f.COURSE,[i.id],i.title)}}}getParticipationRepositoryFilesWithContentAtCommit(e,t){return this.http.get(`${this.resourceUrlParticipations}${e}/files-content/${t}`).pipe(o(i=>i&&new Map(Object.entries(i))))}getParticipationRepositoryFilesWithContentAtCommitForCommitDetailsView(e,t,i,r){let a={};return r&&(a.repositoryType=r),t&&(a.participationId=t),this.http.get(`${this.resourceUrl}${e}/files-content-commit-details/${i}`,{params:a}).pipe(o(p=>p&&new Map(Object.entries(p))))}retrieveCommitsInfoForParticipation(e){return this.http.get(`${this.resourceUrlParticipations}${e}/commits-info`)}getVcsAccessLogForParticipation(e){return this.http.get(`${this.resourceUrlParticipations}${e}/vcs-access-log`,{observe:"response"}).pipe(o(t=>t.body??void 0))}getVcsAccessLogForRepository(e,t){let i={};return t&&(i.repositoryType=t),this.http.get(`${this.resourceUrl}${e}/vcs-access-log/${t}`,{observe:"response"}).pipe(o(r=>r.body??void 0))}retrieveCommitHistoryForParticipation(e){return this.http.get(`${this.resourceUrlParticipations}${e}/commit-history`)}retrieveCommitHistoryForTemplateSolutionOrTests(e,t){return this.http.get(`${this.resourceUrl}${e}/commit-history/${t}`)}retrieveCommitHistoryForAuxiliaryRepository(e,t){let i={};return i.repositoryId=t,this.http.get(`${this.resourceUrl}${e}/commit-history/AUXILIARY`,{params:i})}static \u0275fac=function(t){return new(t||s)};static \u0275prov=h({token:s,factory:s.\u0275fac,providedIn:"root"})}return s})();export{U as a};
//# sourceMappingURL=chunk-QU4DXSXD.js.map
