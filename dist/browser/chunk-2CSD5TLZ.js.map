{
  "version": 3,
  "sources": ["src/main/webapp/app/shared/service/locale-conversion.service.ts"],
  "sourcesContent": ["import { Injectable, inject } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class LocaleConversionService {\r\n    private translateService = inject(TranslateService);\r\n\r\n    locale = LocaleConversionService.getLang();\r\n    // default value, will be overridden by the current language of Artemis\r\n\r\n    constructor() {\r\n        this.locale = this.translateService.currentLang;\r\n    }\r\n\r\n    /**\r\n     * Convert a number value to a locale string.\r\n     * @param value\r\n     * @param maximumFractionDigits\r\n     */\r\n    toLocaleString(value: number, maximumFractionDigits = 1) {\r\n        const options: Intl.NumberFormatOptions = {\r\n            maximumFractionDigits,\r\n        };\r\n\r\n        if (isNaN(value)) {\r\n            return '-';\r\n        } else {\r\n            return value.toLocaleString(this.locale, options);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Convert a number value to a locale string with a % added at the end.\r\n     * @param value\r\n     * @param maximumFractionDigits\r\n     */\r\n    toLocalePercentageString(value: number, maximumFractionDigits = 1) {\r\n        const options: Intl.NumberFormatOptions = {\r\n            maximumFractionDigits,\r\n        };\r\n\r\n        if (isNaN(value)) {\r\n            return '-';\r\n        } else {\r\n            return value.toLocaleString(this.locale, options) + '%';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the language set by the user.\r\n     */\r\n    private static getLang() {\r\n        if (navigator.languages !== undefined) {\r\n            return navigator.languages[0];\r\n        } else {\r\n            return navigator.language;\r\n        }\r\n    }\r\n}\r\n"],
  "mappings": "yFAMA,IAAaA,GAAuB,IAAA,CAA9B,MAAOA,CAAuB,CACxBC,iBAAmBC,EAAOC,CAAgB,EAElDC,OAASJ,EAAwBK,QAAO,EAGxCC,aAAA,CACI,KAAKF,OAAS,KAAKH,iBAAiBM,WACxC,CAOAC,eAAeC,EAAeC,EAAwB,EAAC,CACnD,IAAMC,EAAoC,CACtCD,sBAAAA,GAGJ,OAAIE,MAAMH,CAAK,EACJ,IAEAA,EAAMD,eAAe,KAAKJ,OAAQO,CAAO,CAExD,CAOAE,yBAAyBJ,EAAeC,EAAwB,EAAC,CAC7D,IAAMC,EAAoC,CACtCD,sBAAAA,GAGJ,OAAIE,MAAMH,CAAK,EACJ,IAEAA,EAAMD,eAAe,KAAKJ,OAAQO,CAAO,EAAI,GAE5D,CAKQ,OAAON,SAAO,CAClB,OAAIS,UAAUC,YAAcC,OACjBF,UAAUC,UAAU,CAAC,EAErBD,UAAUG,QAEzB,4CArDSjB,EAAuB,6BAAvBA,EAAuBkB,QAAvBlB,EAAuBmB,UAAAC,WAFpB,MAAM,CAAA,SAETpB,CAAuB,GAAA",
  "names": ["LocaleConversionService", "translateService", "inject", "TranslateService", "locale", "getLang", "constructor", "currentLang", "toLocaleString", "value", "maximumFractionDigits", "options", "isNaN", "toLocalePercentageString", "navigator", "languages", "undefined", "language", "factory", "\u0275fac", "providedIn"]
}
