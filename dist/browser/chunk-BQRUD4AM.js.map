{
  "version": 3,
  "sources": ["src/main/webapp/app/shared/auth/has-any-authority.directive.ts"],
  "sourcesContent": ["import { Directive, Input, TemplateRef, ViewContainerRef, inject } from '@angular/core';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\n\r\n/**\r\n * @whatItDoes Conditionally includes an HTML element if current user has any\r\n * of the authorities in any course passed as the `expression`.\r\n *\r\n * @howToUse\r\n * ```\r\n *     <some-element *jhiHasAnyAuthority=\"Authority.ADMIN\">...</some-element>\r\n *\r\n *     <some-element *jhiHasAnyAuthority=\"[Authority.ADMIN, Authority.USER]\">...</some-element>\r\n * ```\r\n */\r\n@Directive({ selector: '[jhiHasAnyAuthority]' })\r\nexport class HasAnyAuthorityDirective {\r\n    private accountService = inject(AccountService);\r\n    private templateRef = inject<TemplateRef<any>>(TemplateRef);\r\n    private viewContainerRef = inject(ViewContainerRef);\r\n\r\n    private authorities: string[];\r\n\r\n    @Input()\r\n    set jhiHasAnyAuthority(value: string | string[]) {\r\n        this.authorities = typeof value === 'string' ? [<string>value] : <string[]>value;\r\n        this.updateView();\r\n        // Get notified each time authentication state changes.\r\n        this.accountService.getAuthenticationState().subscribe(() => this.updateView());\r\n    }\r\n\r\n    private updateView(): void {\r\n        this.accountService.hasAnyAuthority(this.authorities).then((result) => {\r\n            this.viewContainerRef.clear();\r\n            if (result) {\r\n                this.viewContainerRef.createEmbeddedView(this.templateRef);\r\n            }\r\n        });\r\n    }\r\n}\r\n"],
  "mappings": "yGAeA,IAAaA,GAAwB,IAAA,CAA/B,MAAOA,CAAwB,CACzBC,eAAiBC,EAAOC,CAAc,EACtCC,YAAcF,EAAyBG,CAAW,EAClDC,iBAAmBJ,EAAOK,CAAgB,EAE1CC,YAER,IACIC,mBAAmBC,EAAwB,CAC3C,KAAKF,YAAc,OAAOE,GAAU,SAAW,CAASA,CAAK,EAAcA,EAC3E,KAAKC,WAAU,EAEf,KAAKV,eAAeW,uBAAsB,EAAGC,UAAU,IAAM,KAAKF,WAAU,CAAE,CAClF,CAEQA,YAAU,CACd,KAAKV,eAAea,gBAAgB,KAAKN,WAAW,EAAEO,KAAMC,GAAU,CAClE,KAAKV,iBAAiBW,MAAK,EACvBD,GACA,KAAKV,iBAAiBY,mBAAmB,KAAKd,WAAW,CAEjE,CAAC,CACL,4CAtBSJ,EAAwB,2BAAxBA,EAAwBmB,UAAA,CAAA,CAAA,GAAA,qBAAA,EAAA,CAAA,EAAAC,OAAA,CAAAX,mBAAA,oBAAA,CAAA,CAAA,SAAxBT,CAAwB,GAAA",
  "names": ["HasAnyAuthorityDirective", "accountService", "inject", "AccountService", "templateRef", "TemplateRef", "viewContainerRef", "ViewContainerRef", "authorities", "jhiHasAnyAuthority", "value", "updateView", "getAuthenticationState", "subscribe", "hasAnyAuthority", "then", "result", "clear", "createEmbeddedView", "selectors", "inputs"]
}
