{
  "version": 3,
  "sources": ["src/main/webapp/app/lecture/lecture-unit/lecture-unit-management/unit-creation-card/unit-creation-card.component.ts", "src/main/webapp/app/lecture/lecture-unit/lecture-unit-management/unit-creation-card/unit-creation-card.component.html", "src/main/webapp/app/lecture/lecture-unit/lecture-unit-management/lecture-unit-management.component.ts", "src/main/webapp/app/lecture/lecture-unit/lecture-unit-management/lecture-unit-management.component.html"],
  "sourcesContent": ["import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { faCheck, faFileUpload, faLink, faScroll, faVideo } from '@fortawesome/free-solid-svg-icons';\r\nimport { DocumentationType } from 'app/shared/components/documentation-button/documentation-button.component';\r\nimport { LectureUnitType } from 'app/entities/lecture-unit/lectureUnit.model';\r\nimport { RouterLink } from '@angular/router';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { DocumentationButtonComponent } from 'app/shared/components/documentation-button/documentation-button.component';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-unit-creation-card',\r\n    templateUrl: './unit-creation-card.component.html',\r\n    imports: [RouterLink, FaIconComponent, TranslateDirective, DocumentationButtonComponent, ArtemisTranslatePipe],\r\n})\r\nexport class UnitCreationCardComponent {\r\n    readonly documentationType: DocumentationType = 'Units';\r\n\r\n    @Input() emitEvents = false;\r\n\r\n    @Output()\r\n    onUnitCreationCardClicked: EventEmitter<LectureUnitType> = new EventEmitter<LectureUnitType>();\r\n\r\n    unitType = LectureUnitType;\r\n\r\n    // Icons\r\n    faCheck = faCheck;\r\n    faVideo = faVideo;\r\n    faFileUpload = faFileUpload;\r\n    faScroll = faScroll;\r\n    faLink = faLink;\r\n\r\n    onButtonClicked(type: LectureUnitType) {\r\n        if (this.emitEvents) {\r\n            this.onUnitCreationCardClicked.emit(type);\r\n            return;\r\n        }\r\n    }\r\n}\r\n", "<div class=\"container\" id=\"unit-creation\">\r\n    <div class=\"d-flex justify-content-center flex-wrap gap-1 align-items-center\">\r\n        <div class=\"text-center text-primary me-2\">{{ 'artemisApp.lectureUnit.unitCreationCard.title' | artemisTranslate }}:</div>\r\n        <div class=\"d-flex justify-content-center flex-wrap gap-1 align-items-center\">\r\n            @if (!this.emitEvents) {\r\n                <a type=\"button\" id=\"createTextUnitButton\" class=\"btn btn-sm btn-primary ms-1\" [routerLink]=\"['./', 'text-units', 'create']\">\r\n                    <fa-icon [icon]=\"faScroll\" />&nbsp;<span jhiTranslate=\"artemisApp.lectureUnit.unitCreationCard.text\"></span>\r\n                </a>\r\n                <a type=\"button\" id=\"createExerciseUnitButton\" class=\"btn btn-sm btn-primary ms-1\" [routerLink]=\"['./', 'exercise-units', 'create']\">\r\n                    <fa-icon [icon]=\"faCheck\" />&nbsp;<span jhiTranslate=\"artemisApp.lectureUnit.unitCreationCard.exercise\"></span>\r\n                </a>\r\n                <a type=\"button\" id=\"createVideoUnitButton\" class=\"btn btn-sm btn-primary ms-1\" [routerLink]=\"['./', 'video-units', 'create']\">\r\n                    <fa-icon [icon]=\"faVideo\" />&nbsp;<span jhiTranslate=\"artemisApp.lectureUnit.unitCreationCard.video\"></span>\r\n                </a>\r\n                <a type=\"button\" id=\"createOnlineUnitButton\" class=\"btn btn-sm btn-primary ms-1\" [routerLink]=\"['./', 'online-units', 'create']\">\r\n                    <fa-icon [icon]=\"faLink\" />&nbsp;<span jhiTranslate=\"artemisApp.lectureUnit.unitCreationCard.online\"></span>\r\n                </a>\r\n                <a type=\"button\" id=\"createAttachmentUnitButton\" class=\"btn btn-sm btn-primary ms-1\" [routerLink]=\"['./', 'attachment-units', 'create']\">\r\n                    <fa-icon [icon]=\"faFileUpload\" />&nbsp;<span jhiTranslate=\"artemisApp.lectureUnit.unitCreationCard.attachment\"></span>\r\n                </a>\r\n            } @else {\r\n                <button type=\"button\" id=\"createTextUnitButton\" class=\"btn btn-sm btn-primary ms-1\" (click)=\"onButtonClicked(unitType.TEXT)\">\r\n                    <fa-icon [icon]=\"faScroll\" />&nbsp;<span jhiTranslate=\"artemisApp.lectureUnit.unitCreationCard.text\"></span>\r\n                </button>\r\n                <button type=\"button\" id=\"createExerciseUnitButton\" class=\"btn btn-sm btn-primary ms-1\" (click)=\"onButtonClicked(unitType.EXERCISE)\">\r\n                    <fa-icon [icon]=\"faCheck\" />&nbsp;<span jhiTranslate=\"artemisApp.lectureUnit.unitCreationCard.exercise\"></span>\r\n                </button>\r\n                <button type=\"button\" id=\"createVideoUnitButton\" class=\"btn btn-sm btn-primary ms-1\" (click)=\"onButtonClicked(unitType.VIDEO)\">\r\n                    <fa-icon [icon]=\"faVideo\" />&nbsp;<span jhiTranslate=\"artemisApp.lectureUnit.unitCreationCard.video\"></span>\r\n                </button>\r\n                <button type=\"button\" id=\"createOnlineUnitButton\" class=\"btn btn-sm btn-primary ms-1\" (click)=\"onButtonClicked(unitType.ONLINE)\">\r\n                    <fa-icon [icon]=\"faLink\" />&nbsp;<span jhiTranslate=\"artemisApp.lectureUnit.unitCreationCard.online\"></span>\r\n                </button>\r\n                <button type=\"button\" id=\"createAttachmentUnitButton\" class=\"btn btn-sm btn-primary ms-1\" (click)=\"onButtonClicked(unitType.ATTACHMENT)\">\r\n                    <fa-icon [icon]=\"faFileUpload\" />&nbsp;<span jhiTranslate=\"artemisApp.lectureUnit.unitCreationCard.attachment\"></span>\r\n                </button>\r\n            }\r\n        </div>\r\n        <jhi-documentation-button [type]=\"documentationType\" />\r\n    </div>\r\n</div>\r\n", "import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, inject } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, Router, RouterLink } from '@angular/router';\r\nimport { Lecture } from 'app/entities/lecture.model';\r\nimport { LectureService } from 'app/lecture/lecture.service';\r\nimport { debounceTime, filter, finalize, map } from 'rxjs/operators';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { LectureUnit, LectureUnitType } from 'app/entities/lecture-unit/lectureUnit.model';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { onError } from 'app/shared/util/global.utils';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { LectureUnitService } from 'app/lecture/lecture-unit/lecture-unit-management/lectureUnit.service';\r\nimport { ActionType } from 'app/shared/delete-dialog/delete-dialog.model';\r\nimport { AttachmentUnit, IngestionState } from 'app/entities/lecture-unit/attachmentUnit.model';\r\nimport { ExerciseUnit } from 'app/entities/lecture-unit/exerciseUnit.model';\r\nimport { IconDefinition, faCheckCircle, faEye, faFileExport, faPencilAlt, faRepeat, faSpinner, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { CdkDrag, CdkDragDrop, CdkDropList, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { PROFILE_IRIS } from 'app/app.constants';\r\nimport { ProfileService } from 'app/shared/layouts/profiles/profile.service';\r\nimport { IrisSettingsService } from 'app/iris/settings/shared/iris-settings.service';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { UnitCreationCardComponent } from './unit-creation-card/unit-creation-card.component';\r\nimport { AttachmentUnitComponent } from 'app/overview/course-lectures/attachment-unit/attachment-unit.component';\r\nimport { ExerciseUnitComponent } from 'app/overview/course-lectures/exercise-unit/exercise-unit.component';\r\nimport { VideoUnitComponent } from 'app/overview/course-lectures/video-unit/video-unit.component';\r\nimport { TextUnitComponent } from 'app/overview/course-lectures/text-unit/text-unit.component';\r\nimport { OnlineUnitComponent } from 'app/overview/course-lectures/online-unit/online-unit.component';\r\nimport { CompetenciesPopoverComponent } from 'app/course/competencies/competencies-popover/competencies-popover.component';\r\nimport { NgClass } from '@angular/common';\r\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { DeleteButtonDirective } from 'app/shared/delete-dialog/delete-button.directive';\r\nimport { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-lecture-unit-management',\r\n    templateUrl: './lecture-unit-management.component.html',\r\n    styleUrls: ['./lecture-unit-management.component.scss'],\r\n    imports: [\r\n        TranslateDirective,\r\n        UnitCreationCardComponent,\r\n        CdkDropList,\r\n        CdkDrag,\r\n        AttachmentUnitComponent,\r\n        ExerciseUnitComponent,\r\n        VideoUnitComponent,\r\n        TextUnitComponent,\r\n        OnlineUnitComponent,\r\n        CompetenciesPopoverComponent,\r\n        NgClass,\r\n        NgbTooltip,\r\n        FaIconComponent,\r\n        RouterLink,\r\n        DeleteButtonDirective,\r\n        ArtemisDatePipe,\r\n        ArtemisTranslatePipe,\r\n    ],\r\n})\r\nexport class LectureUnitManagementComponent implements OnInit, OnDestroy {\r\n    protected readonly faTrash = faTrash;\r\n    protected readonly faPencilAlt = faPencilAlt;\r\n    protected readonly faEye = faEye;\r\n    protected readonly faFileExport = faFileExport;\r\n    protected readonly faRepeat = faRepeat;\r\n    protected readonly faCheckCircle = faCheckCircle;\r\n    protected readonly faSpinner = faSpinner;\r\n\r\n    protected readonly LectureUnitType = LectureUnitType;\r\n    protected readonly ActionType = ActionType;\r\n\r\n    private readonly activatedRoute = inject(ActivatedRoute);\r\n    private readonly router = inject(Router);\r\n    private readonly lectureService = inject(LectureService);\r\n    private readonly alertService = inject(AlertService);\r\n    private readonly profileService = inject(ProfileService);\r\n    private readonly irisSettingsService = inject(IrisSettingsService);\r\n    protected readonly lectureUnitService = inject(LectureUnitService);\r\n\r\n    @Input() showCreationCard = true;\r\n    @Input() showCompetencies = true;\r\n    @Input() emitEditEvents = false;\r\n\r\n    @Input() lectureId: number | undefined;\r\n\r\n    @Output()\r\n    onEditLectureUnitClicked: EventEmitter<LectureUnit> = new EventEmitter<LectureUnit>();\r\n\r\n    lectureUnits: LectureUnit[] = [];\r\n    lecture: Lecture;\r\n    isLoading = false;\r\n    updateOrderSubject: Subject<any>;\r\n    viewButtonAvailable: Record<number, boolean> = {};\r\n\r\n    private updateOrderSubjectSubscription: Subscription;\r\n    private navigationEndSubscription: Subscription;\r\n    private activatedRouteSubscription?: Subscription;\r\n    private profileInfoSubscription: Subscription;\r\n\r\n    private dialogErrorSource = new Subject<string>();\r\n    dialogError$ = this.dialogErrorSource.asObservable();\r\n    irisEnabled = false;\r\n    lectureIngestionEnabled = false;\r\n    routerEditLinksBase: { [key: string]: string } = {\r\n        [LectureUnitType.ATTACHMENT]: 'attachment-units',\r\n        [LectureUnitType.VIDEO]: 'video-units',\r\n        [LectureUnitType.TEXT]: 'text-units',\r\n        [LectureUnitType.ONLINE]: 'online-units',\r\n    };\r\n\r\n    ngOnInit(): void {\r\n        this.navigationEndSubscription = this.router.events.pipe(filter((value) => value instanceof NavigationEnd)).subscribe(() => {\r\n            this.loadData();\r\n        });\r\n\r\n        this.updateOrderSubject = new Subject();\r\n        this.activatedRouteSubscription = this.activatedRoute?.parent?.params.subscribe((params) => {\r\n            this.lectureId ??= +params['lectureId'];\r\n            if (this.lectureId) {\r\n                // TODO: the lecture (without units) is already available through the lecture.route.ts resolver, it's not really good that we load it twice\r\n                this.loadData();\r\n            }\r\n        });\r\n\r\n        // debounceTime limits the amount of put requests sent for updating the lecture unit order\r\n        this.updateOrderSubjectSubscription = this.updateOrderSubject.pipe(debounceTime(1000)).subscribe(() => {\r\n            this.updateOrder();\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.updateOrder();\r\n        this.updateOrderSubjectSubscription.unsubscribe();\r\n        this.dialogErrorSource.unsubscribe();\r\n        this.navigationEndSubscription.unsubscribe();\r\n        this.profileInfoSubscription?.unsubscribe();\r\n        this.activatedRouteSubscription?.unsubscribe();\r\n    }\r\n\r\n    loadData() {\r\n        this.isLoading = true;\r\n        // TODO: we actually would like to have the lecture with all units! Posts and competencies are not required here\r\n        // we could also simply load all units for the lecture (as the lecture is already available through the route, see TODO above)\r\n        this.lectureService\r\n            .findWithDetails(this.lectureId!)\r\n            .pipe(\r\n                map((response: HttpResponse<Lecture>) => response.body!),\r\n                finalize(() => {\r\n                    this.isLoading = false;\r\n                }),\r\n            )\r\n            .subscribe({\r\n                next: (lecture) => {\r\n                    this.lecture = lecture;\r\n                    if (lecture?.lectureUnits) {\r\n                        this.lectureUnits = lecture?.lectureUnits;\r\n                        this.lectureUnits.forEach((lectureUnit) => {\r\n                            this.viewButtonAvailable[lectureUnit.id!] = this.isViewButtonAvailable(lectureUnit);\r\n                        });\r\n                        this.initializeProfileInfo();\r\n                        if (this.lectureIngestionEnabled) {\r\n                            this.updateIngestionStates();\r\n                        }\r\n                    } else {\r\n                        this.lectureUnits = [];\r\n                    }\r\n                },\r\n                error: (errorResponse: HttpErrorResponse) => onError(this.alertService, errorResponse),\r\n            });\r\n    }\r\n\r\n    updateOrder() {\r\n        if (this.lectureId === undefined || isNaN(this.lectureId)) {\r\n            return;\r\n        }\r\n\r\n        this.lectureUnitService\r\n            .updateOrder(this.lectureId!, this.lectureUnits)\r\n            .pipe(map((response: HttpResponse<LectureUnit[]>) => response.body!))\r\n            .subscribe({\r\n                error: (errorResponse: HttpErrorResponse) => onError(this.alertService, errorResponse),\r\n            });\r\n    }\r\n\r\n    initializeProfileInfo() {\r\n        this.profileInfoSubscription = this.profileService.getProfileInfo().subscribe(async (profileInfo) => {\r\n            this.irisEnabled = profileInfo.activeProfiles.includes(PROFILE_IRIS);\r\n            if (this.irisEnabled && this.lecture.course && this.lecture.course.id) {\r\n                this.irisSettingsService.getCombinedCourseSettings(this.lecture.course.id).subscribe((settings) => {\r\n                    this.lectureIngestionEnabled = settings?.irisLectureIngestionSettings?.enabled || false;\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    drop(event: CdkDragDrop<LectureUnit[]>) {\r\n        moveItemInArray(this.lectureUnits, event.previousIndex, event.currentIndex);\r\n        this.updateOrderSubject.next('');\r\n    }\r\n\r\n    identify(index: number, lectureUnit: LectureUnit) {\r\n        return `${index}-${lectureUnit.id}`;\r\n    }\r\n\r\n    getDeleteQuestionKey(lectureUnit: LectureUnit) {\r\n        switch (lectureUnit.type) {\r\n            case LectureUnitType.EXERCISE:\r\n                return 'artemisApp.exerciseUnit.delete.question';\r\n            case LectureUnitType.ATTACHMENT:\r\n                return 'artemisApp.attachmentUnit.delete.question';\r\n            case LectureUnitType.VIDEO:\r\n                return 'artemisApp.videoUnit.delete.question';\r\n            case LectureUnitType.TEXT:\r\n                return 'artemisApp.textUnit.delete.question';\r\n            case LectureUnitType.ONLINE:\r\n                return 'artemisApp.onlineUnit.delete.question';\r\n            default:\r\n                return '';\r\n        }\r\n    }\r\n\r\n    getDeleteConfirmationTextKey(lectureUnit: LectureUnit) {\r\n        switch (lectureUnit.type) {\r\n            case LectureUnitType.EXERCISE:\r\n                return 'artemisApp.exerciseUnit.delete.typeNameToConfirm';\r\n            case LectureUnitType.ATTACHMENT:\r\n                return 'artemisApp.attachmentUnit.delete.typeNameToConfirm';\r\n            case LectureUnitType.VIDEO:\r\n                return 'artemisApp.videoUnit.delete.typeNameToConfirm';\r\n            case LectureUnitType.TEXT:\r\n                return 'artemisApp.textUnit.delete.typeNameToConfirm';\r\n            case LectureUnitType.ONLINE:\r\n                return 'artemisApp.onlineUnit.delete.typeNameToConfirm';\r\n            default:\r\n                return '';\r\n        }\r\n    }\r\n\r\n    getActionType(lectureUnit: LectureUnit) {\r\n        if (lectureUnit.type === LectureUnitType.EXERCISE) {\r\n            return ActionType.Unlink;\r\n        } else {\r\n            return ActionType.Delete;\r\n        }\r\n    }\r\n\r\n    deleteLectureUnit(lectureUnitId: number) {\r\n        this.lectureUnitService.delete(lectureUnitId, this.lectureId!).subscribe({\r\n            next: () => {\r\n                this.dialogErrorSource.next('');\r\n                this.loadData();\r\n            },\r\n            error: (error: HttpErrorResponse) => this.dialogErrorSource.next(error.message),\r\n        });\r\n    }\r\n\r\n    isViewButtonAvailable(lectureUnit: LectureUnit): boolean {\r\n        switch (lectureUnit!.type) {\r\n            case LectureUnitType.ATTACHMENT: {\r\n                const attachmentUnit = <AttachmentUnit>lectureUnit;\r\n                return attachmentUnit.attachment?.link?.endsWith('.pdf') ?? false;\r\n            }\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    editButtonAvailable(lectureUnit: LectureUnit) {\r\n        switch (lectureUnit?.type) {\r\n            case LectureUnitType.ATTACHMENT:\r\n            case LectureUnitType.TEXT:\r\n            case LectureUnitType.VIDEO:\r\n            case LectureUnitType.ONLINE:\r\n                return true;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    onEditButtonClicked(lectureUnit: LectureUnit) {\r\n        this.onEditLectureUnitClicked.emit(lectureUnit);\r\n    }\r\n\r\n    getLectureUnitReleaseDate(lectureUnit: LectureUnit) {\r\n        switch (lectureUnit.type) {\r\n            case LectureUnitType.ATTACHMENT:\r\n                return (<AttachmentUnit>lectureUnit)?.attachment?.releaseDate || undefined;\r\n            case LectureUnitType.EXERCISE:\r\n                return (<ExerciseUnit>lectureUnit)?.exercise?.releaseDate || undefined;\r\n            default:\r\n                return lectureUnit.releaseDate || undefined;\r\n        }\r\n    }\r\n\r\n    getAttachmentVersion(lectureUnit: LectureUnit) {\r\n        switch (lectureUnit.type) {\r\n            case LectureUnitType.ATTACHMENT:\r\n                return (<AttachmentUnit>lectureUnit)?.attachment?.version || undefined;\r\n            default:\r\n                return undefined;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Fetches the ingestion state for each lecture unit asynchronously and updates the lecture unit object.\r\n     */\r\n    updateIngestionStates() {\r\n        this.lectureUnitService.getIngestionState(this.lecture.course!.id!, this.lecture.id!).subscribe({\r\n            next: (res: HttpResponse<Record<number, IngestionState>>) => {\r\n                if (res.body) {\r\n                    const ingestionStatesMap = res.body;\r\n                    this.lectureUnits.forEach((lectureUnit) => {\r\n                        if (lectureUnit.id) {\r\n                            const ingestionState = ingestionStatesMap[lectureUnit.id];\r\n                            if (ingestionState !== undefined) {\r\n                                (<AttachmentUnit>lectureUnit).pyrisIngestionState = ingestionState;\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            },\r\n            error: () => {\r\n                this.alertService.error('artemisApp.iris.ingestionAlert.pyrisError');\r\n            },\r\n        });\r\n    }\r\n\r\n    onIngestButtonClicked(lectureUnitId: number) {\r\n        const unitIndex: number = this.lectureUnits.findIndex((unit) => unit.id === lectureUnitId);\r\n        if (unitIndex > -1) {\r\n            const unit: AttachmentUnit = this.lectureUnits[unitIndex];\r\n            unit.pyrisIngestionState = IngestionState.IN_PROGRESS;\r\n            this.lectureUnits[unitIndex] = unit;\r\n        }\r\n        this.lectureUnitService.ingestLectureUnitInPyris(lectureUnitId, this.lecture.id!).subscribe({\r\n            next: () => this.alertService.success('artemisApp.iris.ingestionAlert.lectureUnitSuccess'),\r\n            error: (error) => {\r\n                if (error.status === 400) {\r\n                    this.alertService.error('artemisApp.iris.ingestionAlert.lectureUnitError');\r\n                } else if (error.status === 503) {\r\n                    this.alertService.error('artemisApp.iris.ingestionAlert.pyrisUnavailable');\r\n                } else {\r\n                    this.alertService.error('artemisApp.iris.ingestionAlert.pyrisError');\r\n                }\r\n            },\r\n        });\r\n    }\r\n\r\n    getIcon(attachmentUnit: AttachmentUnit): IconDefinition {\r\n        switch (attachmentUnit.pyrisIngestionState) {\r\n            case IngestionState.NOT_STARTED:\r\n                return this.faFileExport;\r\n            case IngestionState.IN_PROGRESS:\r\n                return this.faSpinner;\r\n            case IngestionState.DONE:\r\n                return this.faCheckCircle;\r\n            case IngestionState.ERROR:\r\n                return this.faRepeat;\r\n            default:\r\n                return this.faFileExport;\r\n        }\r\n    }\r\n}\r\n", "@if (isLoading) {\r\n    <div class=\"d-flex justify-content-center\">\r\n        <div class=\"spinner-border\" role=\"status\">\r\n            <span class=\"sr-only\" jhiTranslate=\"loading\"></span>\r\n        </div>\r\n    </div>\r\n}\r\n@if (!isLoading && lecture) {\r\n    <div>\r\n        <!-- Lecture Unit Rows-->\r\n        @if (showCreationCard) {\r\n            <div class=\"w-100 d-flex justify-content-end\" [class.justify-content-center]=\"!lectureUnits?.length\">\r\n                <jhi-unit-creation-card />\r\n            </div>\r\n        }\r\n        <div class=\"component-container\" cdkDropList (cdkDropListDropped)=\"drop($event)\">\r\n            @for (lectureUnit of lectureUnits; track identify(i, lectureUnit); let i = $index) {\r\n                <div class=\"lecture-unit-container\" [class.attachment]=\"lectureUnit.type === LectureUnitType.ATTACHMENT\" cdkDrag>\r\n                    <div class=\"custom-handle d-none d-sm-flex\">\r\n                        <svg viewBox=\"3 1 5 13\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <circle cx=\"4.5\" cy=\"2.5\" r=\".6\" fill=\"currentColor\" />\r\n                            <circle cx=\"4.5\" cy=\"4.5\" r=\".6\" fill=\"currentColor\" />\r\n                            <circle cx=\"4.5\" cy=\"6.499\" r=\".6\" fill=\"currentColor\" />\r\n                            <circle cx=\"4.5\" cy=\"8.499\" r=\".6\" fill=\"currentColor\" />\r\n                            <circle cx=\"4.5\" cy=\"10.498\" r=\".6\" fill=\"currentColor\" />\r\n                            <circle cx=\"4.5\" cy=\"12.498\" r=\".6\" fill=\"currentColor\" />\r\n                            <circle cx=\"6.5\" cy=\"2.5\" r=\".6\" fill=\"currentColor\" />\r\n                            <circle cx=\"6.5\" cy=\"4.5\" r=\".6\" fill=\"currentColor\" />\r\n                            <circle cx=\"6.5\" cy=\"6.499\" r=\".6\" fill=\"currentColor\" />\r\n                            <circle cx=\"6.5\" cy=\"8.499\" r=\".6\" fill=\"currentColor\" />\r\n                            <circle cx=\"6.5\" cy=\"10.498\" r=\".6\" fill=\"currentColor\" />\r\n                            <circle cx=\"6.5\" cy=\"12.498\" r=\".6\" fill=\"currentColor\" />\r\n                        </svg>\r\n                    </div>\r\n                    <div class=\"lecture-unit-type-container\">\r\n                        <div class=\"unit-badges d-flex flex-column gap-1\">\r\n                            <div class=\"badge bg-info\">\r\n                                {{\r\n                                    getLectureUnitReleaseDate(lectureUnit)\r\n                                        ? ('artemisApp.lectureUnit.details.releaseDateSet' | artemisTranslate) + (getLectureUnitReleaseDate(lectureUnit) | artemisDate)\r\n                                        : ('artemisApp.lectureUnit.details.releaseDateNotSet' | artemisTranslate)\r\n                                }}\r\n                            </div>\r\n                            @if (lectureUnit.type === LectureUnitType.ATTACHMENT) {\r\n                                <div class=\"badge bg-info attachment-badge\">\r\n                                    {{ ('artemisApp.lectureUnit.details.attachmentVersion' | artemisTranslate) + getAttachmentVersion(lectureUnit) }}\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        <div class=\"mt-2\">\r\n                            @switch (lectureUnit.type) {\r\n                                @case (LectureUnitType.ATTACHMENT) {\r\n                                    <jhi-attachment-unit [lectureUnit]=\"lectureUnit\" [isPresentationMode]=\"true\" />\r\n                                }\r\n                                @case (LectureUnitType.EXERCISE) {\r\n                                    <jhi-exercise-unit [exerciseUnit]=\"lectureUnit\" [isPresentationMode]=\"true\" [course]=\"lecture.course!\" />\r\n                                }\r\n                                @case (LectureUnitType.VIDEO) {\r\n                                    <jhi-video-unit [lectureUnit]=\"lectureUnit\" [isPresentationMode]=\"true\" />\r\n                                }\r\n                                @case (LectureUnitType.TEXT) {\r\n                                    <jhi-text-unit [lectureUnit]=\"lectureUnit\" [isPresentationMode]=\"true\" />\r\n                                }\r\n                                @case (LectureUnitType.ONLINE) {\r\n                                    <jhi-online-unit [lectureUnit]=\"lectureUnit\" [isPresentationMode]=\"true\" />\r\n                                }\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"d-flex gap-1 flex-column justify-content-center col-3 col-sm-2 col-lg-1\" role=\"group\">\r\n                        @if (this.lectureIngestionEnabled && lectureUnit.type === LectureUnitType.ATTACHMENT) {\r\n                            <div class=\"d-flex gap-1 w-100\">\r\n                                @if (lecture.course?.id && showCompetencies) {\r\n                                    <jhi-competencies-popover\r\n                                        class=\"flex-grow-1\"\r\n                                        [courseId]=\"lecture.course!.id!\"\r\n                                        [competencyLinks]=\"lectureUnit.competencyLinks || []\"\r\n                                        [navigateTo]=\"'competencyManagement'\"\r\n                                    />\r\n                                }\r\n                                <button\r\n                                    type=\"button\"\r\n                                    class=\"btn btn-primary btn-sm flex-grow-1\"\r\n                                    [ngClass]=\"{\r\n                                        error: getIcon(lectureUnit) === faRepeat,\r\n                                        'btn-success': getIcon(lectureUnit) === faCheckCircle,\r\n                                    }\"\r\n                                    (click)=\"onIngestButtonClicked(lectureUnit.id!)\"\r\n                                    [ngbTooltip]=\"'entity.action.sendToIris' | artemisTranslate\"\r\n                                >\r\n                                    <fa-icon [icon]=\"getIcon(lectureUnit)\" />\r\n                                </button>\r\n                            </div>\r\n                        } @else {\r\n                            <div class=\"d-flex gap-1 w-100\">\r\n                                @if (lecture.course?.id && showCompetencies) {\r\n                                    <jhi-competencies-popover\r\n                                        class=\"flex-grow-1\"\r\n                                        [courseId]=\"lecture.course!.id!\"\r\n                                        [competencyLinks]=\"lectureUnit.competencyLinks || []\"\r\n                                        [navigateTo]=\"'competencyManagement'\"\r\n                                    />\r\n                                }\r\n                            </div>\r\n                        }\r\n                        @if (viewButtonAvailable[lectureUnit.id!]) {\r\n                            <a\r\n                                type=\"button\"\r\n                                class=\"btn btn-primary btn-sm flex-grow-1\"\r\n                                [routerLink]=\"['/course-management', lecture.course?.id, 'lectures', lecture.id, 'unit-management', 'attachment-units', lectureUnit.id, 'view']\"\r\n                                [ngbTooltip]=\"'entity.action.view' | artemisTranslate\"\r\n                            >\r\n                                <fa-icon [icon]=\"faEye\" />\r\n                            </a>\r\n                        }\r\n                        <div class=\"d-flex gap-1 w-100\">\r\n                            @if (this.emitEditEvents) {\r\n                                @if (editButtonAvailable(lectureUnit)) {\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        class=\"btn btn-primary btn-sm edit flex-grow-1\"\r\n                                        (click)=\"onEditButtonClicked(lectureUnit)\"\r\n                                        [ngbTooltip]=\"'entity.action.edit' | artemisTranslate\"\r\n                                    >\r\n                                        <fa-icon [icon]=\"faPencilAlt\" />\r\n                                    </button>\r\n                                }\r\n                            } @else {\r\n                                @if (editButtonAvailable(lectureUnit)) {\r\n                                    <a\r\n                                        type=\"button\"\r\n                                        class=\"btn btn-primary btn-sm edit flex-grow-1\"\r\n                                        [routerLink]=\"['./', routerEditLinksBase[lectureUnit.type!], lectureUnit.id, 'edit']\"\r\n                                        [ngbTooltip]=\"'entity.action.edit' | artemisTranslate\"\r\n                                    >\r\n                                        <fa-icon [icon]=\"faPencilAlt\" />\r\n                                    </a>\r\n                                }\r\n                            }\r\n                            @if (lecture.isAtLeastInstructor) {\r\n                                <button\r\n                                    type=\"button\"\r\n                                    class=\"btn btn-danger btn-sm flex-grow-1\"\r\n                                    jhiDeleteButton\r\n                                    [renderButtonStyle]=\"false\"\r\n                                    [renderButtonText]=\"false\"\r\n                                    [ngbTooltip]=\"'entity.action.' + getActionType(lectureUnit) | artemisTranslate\"\r\n                                    [actionType]=\"getActionType(lectureUnit)\"\r\n                                    [entityTitle]=\"lectureUnitService.getLectureUnitName(lectureUnit) || ''\"\r\n                                    [deleteQuestion]=\"getDeleteQuestionKey(lectureUnit)\"\r\n                                    [deleteConfirmationText]=\"getDeleteConfirmationTextKey(lectureUnit)\"\r\n                                    (delete)=\"deleteLectureUnit(lectureUnit.id!)\"\r\n                                    [dialogError]=\"dialogError$\"\r\n                                >\r\n                                    <fa-icon [icon]=\"faTrash\" />\r\n                                </button>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "\u0275\u0275pureFunction0", "_c0", "ctx_r0", "faScroll", "_c1", "faCheck", "_c2", "faVideo", "_c3", "faLink", "_c4", "faFileUpload", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r2", "\u0275\u0275nextContext", "\u0275\u0275resetView", "onButtonClicked", "unitType", "TEXT", "EXERCISE", "VIDEO", "ONLINE", "ATTACHMENT", "UnitCreationCardComponent", "documentationType", "emitEvents", "onUnitCreationCardClicked", "EventEmitter", "LectureUnitType", "type", "emit", "selectors", "inputs", "outputs", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275template", "UnitCreationCardComponent_Conditional_10_Template", "UnitCreationCardComponent_Conditional_11_Template", "\u0275\u0275textInterpolate1", "\u0275\u0275pipeBind1", "\u0275\u0275conditional", "RouterLink", "FaIconComponent", "TranslateDirective", "DocumentationButtonComponent", "ArtemisTranslatePipe", "encapsulation", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275classProp", "ctx_r1", "lectureUnits", "length", "\u0275\u0275textInterpolate1", "\u0275\u0275pipeBind1", "getAttachmentVersion", "lectureUnit_r3", "\u0275\u0275property", "lecture", "course", "id", "competencyLinks", "\u0275\u0275pureFunction0", "_c1", "\u0275\u0275template", "LectureUnitManagementComponent_Conditional_1_For_8_Conditional_57_Conditional_3_Template", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r4", "\u0275\u0275nextContext", "$implicit", "\u0275\u0275resetView", "onIngestButtonClicked", "\u0275\u0275conditional", "showCompetencies", "\u0275\u0275pureFunction2", "_c0", "getIcon", "faRepeat", "faCheckCircle", "LectureUnitManagementComponent_Conditional_1_For_8_Conditional_58_Conditional_3_Template", "\u0275\u0275pureFunction3", "_c2", "faEye", "_r5", "onEditButtonClicked", "faPencilAlt", "LectureUnitManagementComponent_Conditional_1_For_8_Conditional_62_Conditional_1_Template", "editButtonAvailable", "_c3", "routerEditLinksBase", "type", "LectureUnitManagementComponent_Conditional_1_For_8_Conditional_63_Conditional_1_Template", "_r6", "deleteLectureUnit", "getActionType", "lectureUnitService", "getLectureUnitName", "getDeleteQuestionKey", "getDeleteConfirmationTextKey", "dialogError$", "faTrash", "LectureUnitManagementComponent_Conditional_1_For_8_Conditional_43_Template", "LectureUnitManagementComponent_Conditional_1_For_8_Case_47_Template", "LectureUnitManagementComponent_Conditional_1_For_8_Case_48_Template", "LectureUnitManagementComponent_Conditional_1_For_8_Case_49_Template", "LectureUnitManagementComponent_Conditional_1_For_8_Case_50_Template", "LectureUnitManagementComponent_Conditional_1_For_8_Case_51_Template", "LectureUnitManagementComponent_Conditional_1_For_8_Conditional_57_Template", "LectureUnitManagementComponent_Conditional_1_For_8_Conditional_58_Template", "LectureUnitManagementComponent_Conditional_1_For_8_Conditional_59_Template", "LectureUnitManagementComponent_Conditional_1_For_8_Conditional_62_Template", "LectureUnitManagementComponent_Conditional_1_For_8_Conditional_63_Template", "LectureUnitManagementComponent_Conditional_1_For_8_Conditional_64_Template", "LectureUnitType", "ATTACHMENT", "getLectureUnitReleaseDate", "tmp_15_0", "EXERCISE", "VIDEO", "TEXT", "ONLINE", "lectureIngestionEnabled", "viewButtonAvailable", "emitEditEvents", "isAtLeastInstructor", "LectureUnitManagementComponent_Conditional_1_Conditional_4_Template", "$event", "_r1", "drop", "\u0275\u0275repeaterCreate", "LectureUnitManagementComponent_Conditional_1_For_8_Template", "\u0275\u0275componentInstance", "identify", "showCreationCard", "\u0275\u0275repeater", "LectureUnitManagementComponent", "faFileExport", "faSpinner", "ActionType", "activatedRoute", "inject", "ActivatedRoute", "router", "Router", "lectureService", "LectureService", "alertService", "AlertService", "profileService", "ProfileService", "irisSettingsService", "IrisSettingsService", "LectureUnitService", "lectureId", "onEditLectureUnitClicked", "EventEmitter", "isLoading", "updateOrderSubject", "updateOrderSubjectSubscription", "navigationEndSubscription", "activatedRouteSubscription", "profileInfoSubscription", "dialogErrorSource", "Subject", "asObservable", "irisEnabled", "ngOnInit", "events", "pipe", "filter", "value", "NavigationEnd", "subscribe", "loadData", "parent", "params", "debounceTime", "updateOrder", "ngOnDestroy", "unsubscribe", "findWithDetails", "map", "response", "body", "finalize", "next", "forEach", "lectureUnit", "isViewButtonAvailable", "initializeProfileInfo", "updateIngestionStates", "error", "errorResponse", "onError", "undefined", "isNaN", "getProfileInfo", "profileInfo", "__async", "activeProfiles", "includes", "PROFILE_IRIS", "getCombinedCourseSettings", "settings", "irisLectureIngestionSettings", "enabled", "event", "moveItemInArray", "previousIndex", "currentIndex", "index", "Unlink", "Delete", "lectureUnitId", "delete", "message", "attachment", "link", "endsWith", "emit", "releaseDate", "exercise", "version", "getIngestionState", "res", "ingestionStatesMap", "ingestionState", "pyrisIngestionState", "unitIndex", "findIndex", "unit", "IngestionState", "IN_PROGRESS", "ingestLectureUnitInPyris", "success", "status", "attachmentUnit", "NOT_STARTED", "DONE", "ERROR", "selectors", "inputs", "outputs", "decls", "vars", "consts", "template", "rf", "ctx", "LectureUnitManagementComponent_Conditional_0_Template", "LectureUnitManagementComponent_Conditional_1_Template", "TranslateDirective", "UnitCreationCardComponent", "CdkDropList", "CdkDrag", "AttachmentUnitComponent", "ExerciseUnitComponent", "VideoUnitComponent", "TextUnitComponent", "OnlineUnitComponent", "CompetenciesPopoverComponent", "NgClass", "NgbTooltip", "FaIconComponent", "RouterLink", "DeleteButtonDirective", "ArtemisDatePipe", "ArtemisTranslatePipe", "styles"]
}
