{
  "version": 3,
  "sources": ["src/main/webapp/app/exercises/quiz/manage/statistics/drag-and-drop-question-statistic/drag-and-drop-question-statistic.component.ts", "src/main/webapp/app/exercises/quiz/manage/statistics/drag-and-drop-question-statistic/drag-and-drop-question-statistic.component.html"],
  "sourcesContent": ["import { Component, ViewEncapsulation, inject } from '@angular/core';\r\nimport { DragItemComponent } from 'app/exercises/quiz/shared/questions/drag-and-drop-question/drag-item.component';\r\nimport { QuizStatisticUtil } from 'app/exercises/quiz/shared/quiz-statistic-util.service';\r\nimport { DragAndDropQuestionUtil } from 'app/exercises/quiz/shared/drag-and-drop-question-util.service';\r\nimport { ArtemisMarkdownService } from 'app/shared/markdown.service';\r\nimport { DragAndDropQuestion } from 'app/entities/quiz/drag-and-drop-question.model';\r\nimport { DragAndDropQuestionStatistic } from 'app/entities/quiz/drag-and-drop-question-statistic.model';\r\nimport { DropLocation } from 'app/entities/quiz/drop-location.model';\r\nimport { QuizExercise } from 'app/entities/quiz/quiz-exercise.model';\r\nimport { QuestionStatisticComponent, blueColor, greenColor } from 'app/exercises/quiz/manage/statistics/question-statistic.component';\r\nimport { faCheckCircle, faSync, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { BarChartModule } from '@swimlane/ngx-charts';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { SecuredImageComponent } from 'app/shared/image/secured-image.component';\r\nimport { NgStyle } from '@angular/common';\r\nimport { QuizStatisticsFooterComponent } from '../quiz-statistics-footer/quiz-statistics-footer.component';\r\n\r\n@Component({\r\n    selector: 'jhi-drag-and-drop-question-statistic',\r\n    templateUrl: './drag-and-drop-question-statistic.component.html',\r\n    providers: [QuizStatisticUtil, DragAndDropQuestionUtil],\r\n    styleUrls: [\r\n        '../../../../../shared/chart/vertical-bar-chart.scss',\r\n        '../quiz-point-statistic/quiz-point-statistic.component.scss',\r\n        './drag-and-drop-question-statistic.component.scss',\r\n    ],\r\n    encapsulation: ViewEncapsulation.None,\r\n    imports: [TranslateDirective, BarChartModule, FaIconComponent, SecuredImageComponent, NgStyle, DragItemComponent, QuizStatisticsFooterComponent],\r\n})\r\nexport class DragAndDropQuestionStatisticComponent extends QuestionStatisticComponent {\r\n    private dragAndDropQuestionUtil = inject(DragAndDropQuestionUtil);\r\n    private artemisMarkdown = inject(ArtemisMarkdownService);\r\n\r\n    declare question: DragAndDropQuestion;\r\n\r\n    // Icons\r\n    faSync = faSync;\r\n    faCheckCircle = faCheckCircle;\r\n    faTimesCircle = faTimesCircle;\r\n\r\n    loadQuiz(quiz: QuizExercise, refresh: boolean) {\r\n        const updatedQuestion = super.loadQuizCommon(quiz);\r\n        if (!updatedQuestion) {\r\n            return;\r\n        }\r\n        // load Layout only at the opening (not if the websocket refreshed the data)\r\n        if (!refresh) {\r\n            this.questionTextRendered = this.artemisMarkdown.safeHtmlForMarkdown(this.question.text);\r\n            this.loadLayout();\r\n        }\r\n        this.loadData();\r\n    }\r\n\r\n    /**\r\n     * build the Chart-Layout based on the Json-entity (questionStatistic)\r\n     */\r\n    loadLayout() {\r\n        this.orderDropLocationByPos();\r\n        this.resetLabelsColors();\r\n\r\n        // set label and background color based on the dropLocations\r\n        this.question.dropLocations!.forEach((_dropLocation, i) => {\r\n            this.labels.push(this.getLetter(i) + '.');\r\n            this.solutionLabels.push(this.getLetter(i) + '.');\r\n            this.backgroundColors.push(blueColor);\r\n            this.backgroundSolutionColors.push(greenColor);\r\n        });\r\n\r\n        this.addLastBarLayout(this.question.dropLocations!.length);\r\n        this.loadInvalidLayout(this.question.dropLocations!);\r\n    }\r\n\r\n    /**\r\n     * load the Data from the Json-entity to the chart: myChart\r\n     */\r\n    loadData() {\r\n        this.resetData();\r\n\r\n        // set data based on the dropLocations for each dropLocation\r\n        this.question.dropLocations!.forEach((dropLocation) => {\r\n            // eslint-disable-next-line @typescript-eslint/no-non-null-asserted-optional-chain\r\n            const dropLocationCounter = (this.questionStatistic as DragAndDropQuestionStatistic).dropLocationCounters?.find(\r\n                (dlCounter) => dropLocation.id === dlCounter.dropLocation!.id,\r\n            )!;\r\n            this.addData(dropLocationCounter.ratedCounter!, dropLocationCounter.unRatedCounter!);\r\n        });\r\n        this.updateData();\r\n    }\r\n\r\n    /**\r\n     * order DropLocations by Position\r\n     */\r\n    orderDropLocationByPos() {\r\n        let change = true;\r\n        while (change) {\r\n            change = false;\r\n            if (this.question.dropLocations && this.question.dropLocations.length > 0) {\r\n                for (let i = 0; i < this.question.dropLocations.length - 1; i++) {\r\n                    if (this.question.dropLocations[i].posX! > this.question.dropLocations[i + 1].posX!) {\r\n                        // switch DropLocations\r\n                        const temp = this.question.dropLocations[i];\r\n                        this.question.dropLocations[i] = this.question.dropLocations[i + 1];\r\n                        this.question.dropLocations[i + 1] = temp;\r\n                        change = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the drag item that was mapped to the given drop location in the sample solution\r\n     *\r\n     * @param dropLocation the drop location that the drag item should be mapped to\r\n     * @return the mapped drag item, or undefined if no drag item has been mapped to this location\r\n     */\r\n    correctDragItemForDropLocation(dropLocation: DropLocation) {\r\n        const currMapping = this.dragAndDropQuestionUtil.solve(this.question, undefined).filter((mapping) => mapping.dropLocation!.id === dropLocation.id)[0];\r\n        return currMapping.dragItem;\r\n    }\r\n}\r\n", "@if (quizExercise) {\r\n    <div class=\"row\">\r\n        <div class=\"col-md-8 offset-md-2 text-center\">\r\n            @if (quizExercise.title !== question.title) {\r\n                <h3>{{ quizExercise.title }}</h3>\r\n            }\r\n            <div class=\"row\">\r\n                @if (question) {\r\n                    <div class=\"col\">\r\n                        <h3>\r\n                            {{ question.title }}\r\n                            @if (question.invalid) {\r\n                                <span class=\"invalid-question\" jhiTranslate=\"artemisApp.showStatistic.invalid\"></span>\r\n                            }\r\n                        </h3>\r\n                        <h4 [innerHTML]=\"questionTextRendered\"></h4>\r\n                        <div #containerRef>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-7 text-start\">\r\n                                    <p id=\"text\" class=\"chart-title-text\">\r\n                                        @if (rated) {\r\n                                            <span jhiTranslate=\"artemisApp.showStatistic.questionStatistic.titleRated\"></span>\r\n                                        }\r\n                                        @if (!rated) {\r\n                                            <span jhiTranslate=\"artemisApp.showStatistic.questionStatistic.titleUnrated\"></span>\r\n                                        }\r\n                                    </p>\r\n                                </div>\r\n                                <div class=\"col-md-5 text-end\">\r\n                                    <p class=\"chart-title-text\">\r\n                                        <span>{{ participants }} </span><span jhiTranslate=\"artemisApp.showStatistic.participants\"></span>\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                            <ngx-charts-bar-vertical\r\n                                [view]=\"[containerRef.offsetWidth, 525]\"\r\n                                [results]=\"ngxData\"\r\n                                [scheme]=\"ngxColor\"\r\n                                [showDataLabel]=\"true\"\r\n                                [showXAxisLabel]=\"true\"\r\n                                [showYAxisLabel]=\"true\"\r\n                                [xAxisLabel]=\"xAxisLabel\"\r\n                                [yAxisLabel]=\"yAxisLabel\"\r\n                                [xAxis]=\"true\"\r\n                                [yAxis]=\"true\"\r\n                                [yScaleMax]=\"maxScale\"\r\n                                [tooltipDisabled]=\"true\"\r\n                                [rotateXAxisTicks]=\"false\"\r\n                                [maxXAxisTickLength]=\"17\"\r\n                                [dataLabelFormatting]=\"bindFormatting\"\r\n                                [roundEdges]=\"false\"\r\n                            />\r\n                            <div class=\"col-md-12 text-center button-row\">\r\n                                <button (click)=\"switchSolution()\" type=\"button\" class=\"btn btn-primary show-solution\">\r\n                                    @if (showSolution) {\r\n                                        <fa-icon [icon]=\"faCheckCircle\" />\r\n                                    }\r\n                                    &nbsp;\r\n                                    @if (!showSolution) {\r\n                                        <fa-icon [icon]=\"faTimesCircle\" />\r\n                                    }\r\n                                    &nbsp;\r\n                                    @if (showSolution) {\r\n                                        <span jhiTranslate=\"artemisApp.showStatistic.dragAndDropQuestionStatistic.hideSampleSolution\"></span>\r\n                                    }\r\n                                    @if (!showSolution) {\r\n                                        <span jhiTranslate=\"artemisApp.showStatistic.dragAndDropQuestionStatistic.showSampleSolution\"></span>\r\n                                    }\r\n                                </button>\r\n                                <button (click)=\"switchRated()\" type=\"button\" class=\"btn btn-primary\">\r\n                                    <fa-icon [icon]=\"faSync\" />&nbsp;\r\n                                    @if (rated) {\r\n                                        <span jhiTranslate=\"artemisApp.showStatistic.switchToUnrated\"></span>\r\n                                    }\r\n                                    @if (!rated) {\r\n                                        <span jhiTranslate=\"artemisApp.showStatistic.switchToRated\"></span>\r\n                                    }\r\n                                </button>\r\n                            </div>\r\n                            <p>&nbsp;</p>\r\n                            <div class=\"drag-and-drop-quizStatistic-picture col-md-8 offset-md-2\">\r\n                                @if (question.backgroundFilePath) {\r\n                                    <jhi-secured-image [src]=\"question.backgroundFilePath\" />\r\n                                }\r\n                                <div class=\"click-layer\">\r\n                                    @if (!showSolution) {\r\n                                        <div>\r\n                                            @for (dropLocation of question.dropLocations; track dropLocation; let i = $index) {\r\n                                                <div\r\n                                                    id=\"drop-location\"\r\n                                                    class=\"drop-location\"\r\n                                                    [ngStyle]=\"{\r\n                                                        top: dropLocation.posY! / 2 + '%',\r\n                                                        left: dropLocation.posX! / 2 + '%',\r\n                                                        width: dropLocation.width! / 2 + '%',\r\n                                                        height: dropLocation.height! / 2 + '%',\r\n                                                    }\"\r\n                                                >\r\n                                                    <div class=\"letter\">\r\n                                                        <span>{{ getLetter(i) + '.' }}</span>\r\n                                                    </div>\r\n                                                    @if (dropLocation.invalid) {\r\n                                                        <div class=\"invalid\">\r\n                                                            <span jhiTranslate=\"artemisApp.showStatistic.invalid\"></span>\r\n                                                        </div>\r\n                                                    }\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                    }\r\n                                    @if (showSolution) {\r\n                                        <div>\r\n                                            @for (dropLocation of question.dropLocations; track dropLocation; let i = $index) {\r\n                                                <div\r\n                                                    class=\"drop-location solution\"\r\n                                                    [ngStyle]=\"{\r\n                                                        top: dropLocation.posY! / 2 + '%',\r\n                                                        left: dropLocation.posX! / 2 + '%',\r\n                                                        width: dropLocation.width! / 2 + '%',\r\n                                                        height: dropLocation.height! / 2 + '%',\r\n                                                    }\"\r\n                                                >\r\n                                                    <div class=\"letter-solution\">\r\n                                                        <span>{{ getLetter(i) + '.' }}</span>\r\n                                                    </div>\r\n                                                    @if (dropLocation.invalid) {\r\n                                                        <div class=\"invalid\">\r\n                                                            <span jhiTranslate=\"artemisApp.showStatistic.invalid\"></span>\r\n                                                        </div>\r\n                                                    }\r\n                                                    @if (correctDragItemForDropLocation(dropLocation)) {\r\n                                                        <jhi-drag-item [dragItem]=\"correctDragItemForDropLocation(dropLocation)!\" [clickDisabled]=\"true\" [minWidth]=\"'100%'\" />\r\n                                                    }\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            @if (!showSolution) {\r\n                                <div class=\"drag-and-drop-quizStatistic-picture\">\r\n                                    <h4>Drag-Items:</h4>\r\n                                    @if (question.dragItems && question.dragItems.length) {\r\n                                        <div class=\"drag-items\">\r\n                                            @for (dragItem of question.dragItems; track dragItem) {\r\n                                                <jhi-drag-item [dragItem]=\"dragItem\" [invalid]=\"!!dragItem.invalid\" [clickDisabled]=\"true\" [minWidth]=\"'100%'\" />\r\n                                            }\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n        <jhi-quiz-statistics-footer />\r\n    </div>\r\n}\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275textInterpolate", "ctx_r0", "quizExercise", "title", "\u0275\u0275element", "\u0275\u0275property", "faCheckCircle", "faTimesCircle", "question", "backgroundFilePath", "\u0275\u0275template", "DragAndDropQuestionStatisticComponent_Conditional_0_Conditional_8_Conditional_60_For_4_Conditional_9_Template", "\u0275\u0275pureFunction4", "_c1", "dropLocation_r3", "posY", "posX", "width", "height", "getLetter", "\u0275$index_142_r4", "\u0275\u0275conditional", "invalid", "\u0275\u0275repeaterCreate", "DragAndDropQuestionStatisticComponent_Conditional_0_Conditional_8_Conditional_60_For_4_Template", "\u0275\u0275repeaterTrackByIdentity", "\u0275\u0275repeater", "dropLocations", "correctDragItemForDropLocation", "dropLocation_r5", "DragAndDropQuestionStatisticComponent_Conditional_0_Conditional_8_Conditional_61_For_4_Conditional_9_Template", "DragAndDropQuestionStatisticComponent_Conditional_0_Conditional_8_Conditional_61_For_4_Conditional_10_Template", "\u0275$index_171_r6", "DragAndDropQuestionStatisticComponent_Conditional_0_Conditional_8_Conditional_61_For_4_Template", "dragItem_r7", "DragAndDropQuestionStatisticComponent_Conditional_0_Conditional_8_Conditional_64_Conditional_6_For_4_Template", "dragItems", "DragAndDropQuestionStatisticComponent_Conditional_0_Conditional_8_Conditional_64_Conditional_6_Template", "length", "DragAndDropQuestionStatisticComponent_Conditional_0_Conditional_8_Conditional_5_Template", "DragAndDropQuestionStatisticComponent_Conditional_0_Conditional_8_Conditional_18_Template", "DragAndDropQuestionStatisticComponent_Conditional_0_Conditional_8_Conditional_19_Template", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r2", "\u0275\u0275nextContext", "\u0275\u0275resetView", "switchSolution", "DragAndDropQuestionStatisticComponent_Conditional_0_Conditional_8_Conditional_39_Template", "DragAndDropQuestionStatisticComponent_Conditional_0_Conditional_8_Conditional_40_Template", "DragAndDropQuestionStatisticComponent_Conditional_0_Conditional_8_Conditional_41_Template", "DragAndDropQuestionStatisticComponent_Conditional_0_Conditional_8_Conditional_42_Template", "switchRated", "DragAndDropQuestionStatisticComponent_Conditional_0_Conditional_8_Conditional_48_Template", "DragAndDropQuestionStatisticComponent_Conditional_0_Conditional_8_Conditional_49_Template", "DragAndDropQuestionStatisticComponent_Conditional_0_Conditional_8_Conditional_57_Template", "DragAndDropQuestionStatisticComponent_Conditional_0_Conditional_8_Conditional_60_Template", "DragAndDropQuestionStatisticComponent_Conditional_0_Conditional_8_Conditional_61_Template", "DragAndDropQuestionStatisticComponent_Conditional_0_Conditional_8_Conditional_64_Template", "\u0275\u0275textInterpolate1", "questionTextRendered", "\u0275\u0275sanitizeHtml", "rated", "participants", "\u0275\u0275pureFunction1", "_c0", "containerRef_r8", "offsetWidth", "ngxData", "ngxColor", "xAxisLabel", "yAxisLabel", "maxScale", "bindFormatting", "showSolution", "faSync", "DragAndDropQuestionStatisticComponent_Conditional_0_Conditional_5_Template", "DragAndDropQuestionStatisticComponent_Conditional_0_Conditional_8_Template", "DragAndDropQuestionStatisticComponent", "QuestionStatisticComponent", "dragAndDropQuestionUtil", "inject", "DragAndDropQuestionUtil", "artemisMarkdown", "ArtemisMarkdownService", "loadQuiz", "quiz", "refresh", "loadQuizCommon", "safeHtmlForMarkdown", "text", "loadLayout", "loadData", "orderDropLocationByPos", "resetLabelsColors", "forEach", "_dropLocation", "i", "labels", "push", "solutionLabels", "backgroundColors", "blueColor", "backgroundSolutionColors", "greenColor", "addLastBarLayout", "loadInvalidLayout", "resetData", "dropLocation", "dropLocationCounter", "questionStatistic", "dropLocationCounters", "find", "dlCounter", "id", "addData", "ratedCounter", "unRatedCounter", "updateData", "change", "temp", "solve", "undefined", "filter", "mapping", "dragItem", "__ngFactoryType__", "selectors", "features", "\u0275\u0275ProvidersFeature", "QuizStatisticUtil", "\u0275\u0275InheritDefinitionFeature", "decls", "vars", "consts", "template", "rf", "ctx", "DragAndDropQuestionStatisticComponent_Conditional_0_Template", "TranslateDirective", "BarChartModule", "BarVerticalComponent", "FaIconComponent", "SecuredImageComponent", "NgStyle", "DragItemComponent", "QuizStatisticsFooterComponent", "styles", "encapsulation"]
}
