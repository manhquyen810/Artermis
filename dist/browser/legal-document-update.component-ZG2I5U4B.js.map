{
  "version": 3,
  "sources": ["src/main/webapp/app/admin/legal/unsaved-changes-warning/unsaved-changes-warning.component.ts", "src/main/webapp/app/admin/legal/unsaved-changes-warning/unsaved-changes-warning.component.html", "src/main/webapp/app/admin/legal/legal-document-update.component.ts", "src/main/webapp/app/admin/legal/legal-document-update.component.html"],
  "sourcesContent": ["import { Component, Input, inject } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { ButtonComponent } from 'app/shared/components/button.component';\r\n\r\n@Component({\r\n    selector: 'jhi-unsaved-changes-warning',\r\n    templateUrl: './unsaved-changes-warning.component.html',\r\n    imports: [FormsModule, TranslateDirective, ButtonComponent],\r\n})\r\nexport class UnsavedChangesWarningComponent {\r\n    private activeModal = inject(NgbActiveModal);\r\n\r\n    @Input() textMessage: string;\r\n\r\n    /**\r\n     * Closes the modal in which the warning is shown and discards the changes\r\n     *\r\n     */\r\n    discardContent() {\r\n        this.activeModal.close();\r\n    }\r\n\r\n    /**\r\n     * Closes the modal in which the warning is shown\r\n     */\r\n    continueEditing() {\r\n        this.activeModal.dismiss('cancel');\r\n    }\r\n}\r\n", "<form>\r\n    <div class=\"modal-header\">\r\n        <button id=\"close-modal-btn\" type=\"button\" class=\"btn-close\" data-dismiss=\"modal\" aria-hidden=\"true\" (click)=\"continueEditing()\"></button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <h5 jhiTranslate=\"{{ textMessage }}\"></h5>\r\n        <div>\r\n            <jhi-button id=\"discard-content-btn\" (click)=\"discardContent()\" [title]=\"'entity.action.discardChanges'\">Discard</jhi-button>\r\n            <jhi-button id=\"continue-editing-btn\" (click)=\"continueEditing()\" [title]=\"'entity.action.goBack'\">Go back</jhi-button>\r\n        </div>\r\n    </div>\r\n</form>\r\n", "import { AfterContentChecked, ChangeDetectorRef, Component, OnInit, ViewChild, inject } from '@angular/core';\r\nimport { faBan, faCheckCircle, faCircleNotch, faExclamationTriangle, faSave } from '@fortawesome/free-solid-svg-icons';\r\nimport { LegalDocumentService } from 'app/shared/service/legal-document.service';\r\nimport { NgbModal, NgbModalRef, NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { UnsavedChangesWarningComponent } from 'app/admin/legal/unsaved-changes-warning/unsaved-changes-warning.component';\r\nimport { LegalDocument, LegalDocumentLanguage, LegalDocumentType } from 'app/entities/legal-document.model';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Observable, tap } from 'rxjs';\r\nimport { JhiLanguageHelper } from 'app/core/language/language.helper';\r\nimport { MarkdownEditorHeight, MarkdownEditorMonacoComponent } from 'app/shared/markdown-editor/monaco/markdown-editor-monaco.component';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { ModePickerComponent } from 'app/exercises/shared/mode-picker/mode-picker.component';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-privacy-statement-update-component',\r\n    styleUrls: ['./legal-document-update.component.scss'],\r\n    templateUrl: './legal-document-update.component.html',\r\n    imports: [TranslateDirective, MarkdownEditorMonacoComponent, FaIconComponent, NgbTooltip, ModePickerComponent, ArtemisTranslatePipe],\r\n})\r\nexport class LegalDocumentUpdateComponent implements OnInit, AfterContentChecked {\r\n    private legalDocumentService = inject(LegalDocumentService);\r\n    private modalService = inject(NgbModal);\r\n    private route = inject(ActivatedRoute);\r\n    private languageHelper = inject(JhiLanguageHelper);\r\n    private changeDetectorRef = inject(ChangeDetectorRef);\r\n\r\n    readonly SUPPORTED_LANGUAGES: LegalDocumentLanguage[] = [LegalDocumentLanguage.GERMAN, LegalDocumentLanguage.ENGLISH];\r\n    readonly faBan = faBan;\r\n    readonly faSave = faSave;\r\n    readonly faExclamationTriangle = faExclamationTriangle;\r\n    readonly faCheckCircle = faCheckCircle;\r\n    readonly faCircleNotch = faCircleNotch;\r\n    readonly LANGUAGE_OPTIONS = this.SUPPORTED_LANGUAGES.map((language) => ({\r\n        value: language,\r\n        labelKey: 'artemisApp.legal.language.' + language,\r\n        btnClass: 'btn-primary',\r\n    }));\r\n    readonly DEFAULT_LANGUAGE = LegalDocumentLanguage.GERMAN;\r\n    readonly MAX_HEIGHT = MarkdownEditorHeight.EXTRA_LARGE;\r\n    readonly MIN_HEIGHT = MarkdownEditorHeight.MEDIUM;\r\n\r\n    legalDocument: LegalDocument;\r\n    legalDocumentType: LegalDocumentType = LegalDocumentType.PRIVACY_STATEMENT;\r\n    unsavedChanges = false;\r\n    isSaving = false;\r\n    @ViewChild(MarkdownEditorMonacoComponent, { static: false }) markdownEditor: MarkdownEditorMonacoComponent;\r\n\r\n    currentContentTrimmed = '';\r\n    currentLanguage = this.DEFAULT_LANGUAGE;\r\n    unsavedChangesWarning: NgbModalRef;\r\n    titleKey: string;\r\n\r\n    ngOnInit() {\r\n        // Tap the URL to determine, if it's the imprint or the privacy statement\r\n        // we need the parent URL, because the imprint and privacy statement are children of the admin component and their path is specified there because they are lazy loaded\r\n        this.route.url\r\n            .pipe(\r\n                tap((segments) => {\r\n                    this.legalDocumentType = segments.some((segment) => segment.path === 'imprint') ? LegalDocumentType.IMPRINT : LegalDocumentType.PRIVACY_STATEMENT;\r\n                }),\r\n            )\r\n            .subscribe();\r\n        if (this.legalDocumentType === LegalDocumentType.IMPRINT) {\r\n            this.titleKey = 'artemisApp.legal.imprint.updateImprint';\r\n        } else {\r\n            this.titleKey = 'artemisApp.legal.privacyStatement.updatePrivacyStatement';\r\n        }\r\n        this.languageHelper.updateTitle(this.titleKey);\r\n\r\n        this.legalDocument = new LegalDocument(this.legalDocumentType, this.DEFAULT_LANGUAGE);\r\n        this.getLegalDocumentForUpdate(this.legalDocumentType, this.DEFAULT_LANGUAGE).subscribe((document) => {\r\n            this.legalDocument = document;\r\n        });\r\n    }\r\n\r\n    private getLegalDocumentForUpdate(type: LegalDocumentType, language: LegalDocumentLanguage): Observable<LegalDocument> {\r\n        if (type === LegalDocumentType.PRIVACY_STATEMENT) {\r\n            return this.legalDocumentService.getPrivacyStatementForUpdate(language);\r\n        } else {\r\n            return this.legalDocumentService.getImprintForUpdate(language);\r\n        }\r\n    }\r\n\r\n    updateLegalDocument() {\r\n        this.isSaving = true;\r\n        this.legalDocument.text = this.currentContentTrimmed;\r\n        if (this.legalDocumentType === LegalDocumentType.PRIVACY_STATEMENT) {\r\n            this.legalDocumentService.updatePrivacyStatement(this.legalDocument).subscribe((statement) => {\r\n                this.setUpdatedDocument(statement);\r\n            });\r\n        } else {\r\n            this.legalDocumentService.updateImprint(this.legalDocument).subscribe((imprint) => {\r\n                this.setUpdatedDocument(imprint);\r\n            });\r\n        }\r\n    }\r\n\r\n    private setUpdatedDocument(updatedDocument: LegalDocument) {\r\n        this.legalDocument = updatedDocument;\r\n        this.unsavedChanges = false;\r\n        this.isSaving = false;\r\n    }\r\n\r\n    onContentChanged(content: string) {\r\n        this.currentContentTrimmed = content.trim();\r\n        this.unsavedChanges = content !== this.legalDocument.text;\r\n    }\r\n\r\n    onLanguageChange(legalDocumentLanguage: LegalDocumentLanguage) {\r\n        if (this.unsavedChanges) {\r\n            this.showWarning(legalDocumentLanguage);\r\n        } else {\r\n            this.currentLanguage = legalDocumentLanguage;\r\n            this.getLegalDocumentForUpdate(this.legalDocumentType, legalDocumentLanguage).subscribe((document) => {\r\n                this.legalDocument = document;\r\n                this.markdownEditor.markdown = this.legalDocument.text;\r\n                // Ensure the new text is parsed and displayed in the preview\r\n                this.markdownEditor.parseMarkdown();\r\n                this.unsavedChanges = false;\r\n            });\r\n        }\r\n    }\r\n\r\n    showWarning(legalDocumentLanguage: LegalDocumentLanguage) {\r\n        this.unsavedChangesWarning = this.modalService.open(UnsavedChangesWarningComponent, { size: 'lg', backdrop: 'static' });\r\n        if (this.legalDocumentType === LegalDocumentType.PRIVACY_STATEMENT) {\r\n            this.unsavedChangesWarning.componentInstance.textMessage = 'artemisApp.legal.privacyStatement.unsavedChangesWarning';\r\n        } else if (this.legalDocumentType === LegalDocumentType.IMPRINT) {\r\n            this.unsavedChangesWarning.componentInstance.textMessage = 'artemisApp.legal.imprint.unsavedChangesWarning';\r\n        } else {\r\n            throw new Error('Unknown legal document type!');\r\n        }\r\n\r\n        this.unsavedChangesWarning.result\r\n            .then(() => {\r\n                this.unsavedChanges = false;\r\n                this.onLanguageChange(legalDocumentLanguage);\r\n            })\r\n            .catch(() => {\r\n                //ignore, just prevents the console from logging an error about a rejected promise\r\n            });\r\n    }\r\n\r\n    /**\r\n     * This lifecycle hook is required to avoid causing \"Expression has changed after it was checked\"-error when dismissing all changes in the markdown editor\r\n     * on dismissing the unsaved changes warning modal -> we do not want to store changes in the legal document that are not saved\r\n     * */\r\n    ngAfterContentChecked() {\r\n        this.changeDetectorRef.detectChanges();\r\n    }\r\n}\r\n", "<div class=\"legal-document-container\">\r\n    <div>\r\n        <h2>\r\n            <span id=\"legal-document-update-heading\" data-cy=\"legalDocumentPageHeading\" jhiTranslate=\"{{ titleKey }}\"></span>\r\n        </h2>\r\n        <jhi-markdown-editor-monaco\r\n            [markdown]=\"legalDocument.text\"\r\n            (markdownChange)=\"onContentChanged($event)\"\r\n            [resizableMinHeight]=\"MIN_HEIGHT\"\r\n            [resizableMaxHeight]=\"MAX_HEIGHT\"\r\n            [initialEditorHeight]=\"MIN_HEIGHT\"\r\n            [enableFileUpload]=\"false\"\r\n            class=\"markdown-editor\"\r\n        />\r\n        <div>\r\n            @if (!unsavedChanges && !isSaving) {\r\n                <div>\r\n                    <fa-icon [icon]=\"faCheckCircle\" class=\"text-success me-1\" ngbTooltip=\"{{ 'artemisApp.legal.savedTooltip' | artemisTranslate }}\" />\r\n                    <span class=\"text-info\" jhiTranslate=\"artemisApp.legal.saved\"></span>\r\n                </div>\r\n            }\r\n            @if (unsavedChanges && !isSaving) {\r\n                <div>\r\n                    <fa-icon [icon]=\"faExclamationTriangle\" class=\"text-warning me-1\" ngbTooltip=\"{{ 'artemisApp.legal.unsavedTooltip' | artemisTranslate }}\" />\r\n                    <span class=\"text-info\" jhiTranslate=\"artemisApp.legal.unsaved\"></span>\r\n                </div>\r\n            }\r\n            @if (isSaving) {\r\n                <div>\r\n                    <fa-icon [icon]=\"faCircleNotch\" class=\"me-1\" ngbTooltip=\"{{ 'artemisApp.legal.savingTooltip' | artemisTranslate }}\" />\r\n                    <span class=\"text-info\" jhiTranslate=\"artemisApp.legal.saving\"></span>\r\n                </div>\r\n            }\r\n        </div>\r\n        <div class=\"btn-below-editor\">\r\n            <button type=\"submit\" (click)=\"updateLegalDocument()\" class=\"btn btn-primary\" id=\"update-legal-document-btn\" [disabled]=\"!currentContentTrimmed || isSaving\">\r\n                <fa-icon [icon]=\"faSave\" />\r\n                <span jhiTranslate=\"entity.action.save\"></span>\r\n            </button>\r\n            <jhi-mode-picker [options]=\"LANGUAGE_OPTIONS\" [value]=\"currentLanguage\" (valueChange)=\"onLanguageChange($event!)\" />\r\n        </div>\r\n    </div>\r\n</div>\r\n"],
  "mappings": "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",
  "names": ["UnsavedChangesWarningComponent", "activeModal", "inject", "NgbActiveModal", "textMessage", "discardContent", "close", "continueEditing", "dismiss", "selectors", "inputs", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275listener", "\u0275\u0275elementEnd", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275propertyInterpolate", "\u0275\u0275property", "FormsModule", "\u0275NgNoValidate", "NgControlStatusGroup", "NgForm", "TranslateDirective", "ButtonComponent", "encapsulation", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275propertyInterpolate", "\u0275\u0275pipeBind1", "\u0275\u0275property", "ctx_r0", "faCheckCircle", "faExclamationTriangle", "faCircleNotch", "LegalDocumentUpdateComponent", "legalDocumentService", "inject", "LegalDocumentService", "modalService", "NgbModal", "route", "ActivatedRoute", "languageHelper", "JhiLanguageHelper", "changeDetectorRef", "ChangeDetectorRef", "SUPPORTED_LANGUAGES", "LegalDocumentLanguage", "GERMAN", "ENGLISH", "faBan", "faSave", "LANGUAGE_OPTIONS", "map", "language", "value", "labelKey", "btnClass", "DEFAULT_LANGUAGE", "MAX_HEIGHT", "MarkdownEditorHeight", "EXTRA_LARGE", "MIN_HEIGHT", "MEDIUM", "legalDocument", "legalDocumentType", "LegalDocumentType", "PRIVACY_STATEMENT", "unsavedChanges", "isSaving", "markdownEditor", "currentContentTrimmed", "currentLanguage", "unsavedChangesWarning", "titleKey", "ngOnInit", "url", "pipe", "tap", "segments", "some", "segment", "path", "IMPRINT", "subscribe", "updateTitle", "LegalDocument", "getLegalDocumentForUpdate", "document", "type", "getPrivacyStatementForUpdate", "getImprintForUpdate", "updateLegalDocument", "text", "updatePrivacyStatement", "statement", "setUpdatedDocument", "updateImprint", "imprint", "updatedDocument", "onContentChanged", "content", "trim", "onLanguageChange", "legalDocumentLanguage", "showWarning", "markdown", "parseMarkdown", "open", "UnsavedChangesWarningComponent", "size", "backdrop", "componentInstance", "textMessage", "Error", "result", "then", "catch", "ngAfterContentChecked", "detectChanges", "selectors", "viewQuery", "rf", "ctx", "MarkdownEditorMonacoComponent", "\u0275\u0275listener", "$event", "\u0275\u0275template", "LegalDocumentUpdateComponent_Conditional_13_Template", "LegalDocumentUpdateComponent_Conditional_14_Template", "LegalDocumentUpdateComponent_Conditional_15_Template", "\u0275\u0275conditional", "TranslateDirective", "FaIconComponent", "NgbTooltip", "ModePickerComponent", "ArtemisTranslatePipe", "styles"]
}
