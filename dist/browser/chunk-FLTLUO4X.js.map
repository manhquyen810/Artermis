{
  "version": 3,
  "sources": ["src/main/webapp/app/exercises/programming/shared/actions/programming-exercise-student-trigger-build-button.component.ts", "src/main/webapp/app/exercises/programming/shared/actions/programming-exercise-trigger-build-button.component.html"],
  "sourcesContent": ["import { Component, Input, inject } from '@angular/core';\r\nimport { ProgrammingExerciseTriggerBuildButtonComponent } from './programming-exercise-trigger-build-button.component';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nimport { SubmissionType } from 'app/entities/submission.model';\r\nimport { faRedo } from '@fortawesome/free-solid-svg-icons';\r\nimport { ButtonComponent } from 'app/shared/components/button.component';\r\n\r\n@Component({\r\n    selector: 'jhi-programming-exercise-student-trigger-build-button',\r\n    templateUrl: './programming-exercise-trigger-build-button.component.html',\r\n    imports: [ButtonComponent],\r\n})\r\nexport class ProgrammingExerciseStudentTriggerBuildButtonComponent extends ProgrammingExerciseTriggerBuildButtonComponent {\r\n    private alertService = inject(AlertService);\r\n    @Input() triggerLastGraded = false;\r\n\r\n    // Icons\r\n    faRedo = faRedo;\r\n\r\n    constructor() {\r\n        super();\r\n        this.personalParticipation = true;\r\n    }\r\n\r\n    triggerBuild = (event: any) => {\r\n        // The button might be placed in other elements that have a click listener, so catch the click here.\r\n        event.stopPropagation();\r\n        const triggerAction = this.participationHasLatestSubmissionWithoutResult ? super.triggerFailed(this.triggerLastGraded) : super.triggerWithType(SubmissionType.MANUAL);\r\n        triggerAction\r\n            .pipe(\r\n                catchError(() => {\r\n                    this.alertService.error('artemisApp.programmingExercise.resubmitUnsuccessful');\r\n                    return of(undefined);\r\n                }),\r\n            )\r\n            .subscribe();\r\n    };\r\n}\r\n", "@if (participationBuildCanBeTriggered && (showForSuccessfulSubmissions || participationHasLatestSubmissionWithoutResult)) {\r\n    <jhi-button\r\n        [btnSize]=\"btnSize\"\r\n        [btnType]=\"participationHasLatestSubmissionWithoutResult ? ButtonType.ERROR : ButtonType.PRIMARY\"\r\n        [icon]=\"faRedo\"\r\n        [disabled]=\"isRetrievingBuildStatus\"\r\n        [isLoading]=\"isBuilding\"\r\n        (onClick)=\"triggerBuild($event)\"\r\n        [tooltip]=\"participationHasLatestSubmissionWithoutResult ? 'artemisApp.programmingExercise.resubmitOnFailedSubmission' : 'artemisApp.programmingExercise.resubmit'\"\r\n        [featureToggle]=\"FeatureToggle.ProgrammingExercises\"\r\n    />\r\n}\r\n"],
  "mappings": "qWCCIA,EAAA,EAAA;KAAA,EAAAC,EAAA,EAAA,aAAA,CAAA,EAMIC,EAAA,UAAA,SAAAC,EAAA,CAAAC,EAAAC,CAAA,EAAA,IAAAC,EAAAC,EAAA,EAAA,OAAAC,EAAWF,EAAAG,aAAAN,CAAA,CAAoB,CAAA,CAAA,EANnCO,EAAA,EAUJV,EAAA,EAAA;CAAA,oBATQW,EAAA,EAAAC,EAAA,UAAAN,EAAAO,OAAA,EAAmB,UAAAP,EAAAQ,8CAAAR,EAAAS,WAAAC,MAAAV,EAAAS,WAAAE,OAAA,EAC8E,OAAAX,EAAAY,MAAA,EAClF,WAAAZ,EAAAa,uBAAA,EACqB,YAAAb,EAAAc,UAAA,EACZ,UAAAd,EAAAQ,8CAAA,4DAAA,yCAAA,EAE2I,gBAAAR,EAAAe,cAAAC,oBAAA,GDM3K,IAAaC,GAAsD,IAAA,CAA7D,MAAOA,UAA8DC,CAA8C,CAC7GC,aAAeC,EAAOC,CAAY,EACjCC,kBAAoB,GAG7BV,OAASA,EAETW,aAAA,CACI,MAAK,EACL,KAAKC,sBAAwB,EACjC,CAEArB,aAAgBsB,GAAc,CAE1BA,EAAMC,gBAAe,GACC,KAAKlB,8CAAgD,MAAMmB,cAAc,KAAKL,iBAAiB,EAAI,MAAMM,gBAAe,QAAA,GAEzIC,KACGC,EAAW,KACP,KAAKX,aAAaY,MAAM,qDAAqD,EACtEC,EAAGC,MAAS,EACtB,CAAC,EAELC,UAAS,CAClB,6CAxBSjB,EAAqD,2BAArDA,EAAqDkB,UAAA,CAAA,CAAA,uDAAA,CAAA,EAAAC,OAAA,CAAAd,kBAAA,mBAAA,EAAAe,SAAA,CAAAC,CAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,UAAA,UAAA,UAAA,OAAA,WAAA,YAAA,UAAA,eAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,GCdlEE,EAAA,EAAAC,EAAA,EAAA,CAAA,OAAAC,EAAAH,EAAAI,mCAAAJ,EAAAK,8BAAAL,EAAApC,+CAAA,EAAA,EAAA,iBDYc0C,CAAe,EAAAC,cAAA,CAAA,CAAA,SAEhBlC,CAAsD,GAAA",
  "names": ["\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275listener", "$event", "\u0275\u0275restoreView", "_r1", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "triggerBuild", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "btnSize", "participationHasLatestSubmissionWithoutResult", "ButtonType", "ERROR", "PRIMARY", "faRedo", "isRetrievingBuildStatus", "isBuilding", "FeatureToggle", "ProgrammingExercises", "ProgrammingExerciseStudentTriggerBuildButtonComponent", "ProgrammingExerciseTriggerBuildButtonComponent", "alertService", "inject", "AlertService", "triggerLastGraded", "constructor", "personalParticipation", "event", "stopPropagation", "triggerFailed", "triggerWithType", "pipe", "catchError", "error", "of", "undefined", "subscribe", "selectors", "inputs", "features", "\u0275\u0275InheritDefinitionFeature", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275template", "ProgrammingExerciseStudentTriggerBuildButtonComponent_Conditional_0_Template", "\u0275\u0275conditional", "participationBuildCanBeTriggered", "showForSuccessfulSubmissions", "ButtonComponent", "encapsulation"]
}
