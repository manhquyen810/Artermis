{
  "version": 3,
  "sources": ["src/main/webapp/app/entities/exercise-filter.model.ts", "src/main/webapp/app/course/manage/course-management-exercises-search.component.ts", "src/main/webapp/app/course/manage/course-management-exercises-search.component.html", "src/main/webapp/app/course/manage/course-exercise-card.component.ts", "src/main/webapp/app/course/manage/course-exercise-card.component.html", "src/main/webapp/app/exercises/programming/manage/programming-exercise-create-buttons.component.ts", "src/main/webapp/app/exercises/programming/manage/programming-exercise-create-buttons.component.html", "src/main/webapp/app/exercises/shared/exercise/exercise.component.ts", "src/main/webapp/app/exercises/programming/manage/programming-exercise-edit-selected.component.ts", "src/main/webapp/app/exercises/programming/manage/programming-exercise-edit-selected.component.html", "src/main/webapp/app/exercises/programming/manage/grading/programming-exercise-grading-dirty-warning.component.ts", "src/main/webapp/app/exercises/programming/manage/programming-exercise.component.ts", "src/main/webapp/app/exercises/programming/manage/programming-exercise.component.html", "src/main/webapp/app/exercises/quiz/manage/quiz-exercise-create-buttons.component.ts", "src/main/webapp/app/exercises/quiz/manage/quiz-exercise-create-buttons.component.html", "src/main/webapp/app/exercises/quiz/manage/quiz-exercise.component.ts", "src/main/webapp/app/exercises/quiz/manage/quiz-exercise.component.html", "src/main/webapp/app/exercises/shared/manage/exercise-create-buttons.component.ts", "src/main/webapp/app/exercises/shared/manage/exercise-create-buttons.component.html", "src/main/webapp/app/exercises/modeling/manage/modeling-exercise.component.ts", "src/main/webapp/app/exercises/modeling/manage/modeling-exercise.component.html", "src/main/webapp/app/exercises/text/manage/text-exercise/text-exercise-row-buttons.component.ts", "src/main/webapp/app/exercises/text/manage/text-exercise/text-exercise-row-buttons.component.html", "src/main/webapp/app/exercises/text/manage/text-exercise/text-exercise.component.ts", "src/main/webapp/app/exercises/text/manage/text-exercise/text-exercise.component.html", "src/main/webapp/app/exercises/file-upload/manage/file-upload-exercise.component.ts", "src/main/webapp/app/exercises/file-upload/manage/file-upload-exercise.component.html", "src/main/webapp/app/course/manage/course-management-exercises.component.ts", "src/main/webapp/app/course/manage/course-management-exercises.component.html", "src/main/webapp/app/orion/management/orion-programming-exercise.component.ts", "src/main/webapp/app/orion/management/orion-programming-exercise.component.html", "src/main/webapp/app/orion/management/orion-course-management-exercises.component.ts"],
  "sourcesContent": ["import { Exercise } from 'app/entities/exercise.model';\r\nimport { ExerciseCategory } from 'app/entities/exercise-category.model';\r\n\r\nexport class ExerciseFilter {\r\n    exerciseNameSearch: string;\r\n    exerciseCategorySearch: string;\r\n    exerciseTypeSearch: string;\r\n\r\n    constructor(exerciseNameSearch = '', exerciseCategorySearch = '', exerciseTypeSearch = 'all') {\r\n        this.exerciseNameSearch = exerciseNameSearch.toLowerCase();\r\n        this.exerciseCategorySearch = exerciseCategorySearch.toLowerCase();\r\n        this.exerciseTypeSearch = exerciseTypeSearch;\r\n    }\r\n\r\n    /**\r\n     * Check if the exercise filter is in its default state (no exercise will be filtered by it)\r\n     */\r\n    isEmpty(): boolean {\r\n        return this.exerciseNameSearch === '' && this.exerciseCategorySearch === '' && this.exerciseTypeSearch === 'all';\r\n    }\r\n\r\n    /**\r\n     * Checks if an exercise should be included by this filter\r\n     * @param exercise The exercise to check\r\n     */\r\n    matchesExercise(exercise: Exercise): boolean {\r\n        const nameMatches: boolean = this.exerciseNameSearch === '' || exercise.title!.toLowerCase().includes(this.exerciseNameSearch);\r\n        const categoryMatches: boolean = this.exerciseCategorySearch === '' || (exercise.categories?.some((category) => this.matchesTag(category)) ?? false);\r\n        const typeMatches: boolean = this.exerciseTypeSearch === 'all' || exercise.type === this.exerciseTypeSearch;\r\n        return nameMatches && categoryMatches && typeMatches;\r\n    }\r\n\r\n    private matchesTag(category: ExerciseCategory): boolean {\r\n        return category.category!.toLowerCase().includes(this.exerciseCategorySearch);\r\n    }\r\n}\r\n", "import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { ExerciseFilter } from 'app/entities/exercise-filter.model';\r\nimport { exerciseTypes } from 'app/entities/exercise.model';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-course-management-exercises-search',\r\n    templateUrl: './course-management-exercises-search.component.html',\r\n    styleUrls: ['./course-management-exercises-search.component.scss'],\r\n    imports: [TranslateDirective, FormsModule, ArtemisTranslatePipe],\r\n})\r\nexport class CourseManagementExercisesSearchComponent implements OnInit {\r\n    typeOptions: string[];\r\n    exerciseNameSearch: string;\r\n    exerciseCategorySearch: string;\r\n    exerciseTypeSearch: string;\r\n    @Output() exerciseFilter = new EventEmitter<ExerciseFilter>();\r\n\r\n    /**\r\n     * Initializes the attributes to match an empty filter\r\n     */\r\n    ngOnInit(): void {\r\n        const filter = new ExerciseFilter();\r\n        this.exerciseNameSearch = filter.exerciseNameSearch;\r\n        this.exerciseCategorySearch = filter.exerciseCategorySearch;\r\n        this.exerciseTypeSearch = filter.exerciseTypeSearch;\r\n        this.typeOptions = ['all'];\r\n        this.typeOptions.push(...exerciseTypes);\r\n    }\r\n\r\n    /**\r\n     * Sends an updated filter through the event emitter\r\n     * Triggered every time the type dropdown is changed or when the user manually presses Enter or the search button\r\n     */\r\n    sendUpdate() {\r\n        this.exerciseFilter.emit(new ExerciseFilter(this.exerciseNameSearch, this.exerciseCategorySearch, this.exerciseTypeSearch));\r\n    }\r\n\r\n    /**\r\n     * Resets all inputs to default values\r\n     */\r\n    reset() {\r\n        const filter = new ExerciseFilter();\r\n        this.exerciseNameSearch = filter.exerciseNameSearch;\r\n        this.exerciseCategorySearch = filter.exerciseCategorySearch;\r\n        this.exerciseTypeSearch = filter.exerciseTypeSearch;\r\n        this.sendUpdate();\r\n    }\r\n}\r\n", "<div class=\"card search-card\">\r\n    <div class=\"card-header\">\r\n        <h5 class=\"mb-0\" jhiTranslate=\"artemisApp.course.exercise.search.cardTitle\"></h5>\r\n    </div>\r\n    <div class=\"card-body\">\r\n        <div class=\"form-group\">\r\n            <label for=\"exercise-search-input\" jhiTranslate=\"artemisApp.course.exercise.search.labelExerciseName\"></label>\r\n            <input\r\n                id=\"exercise-search-input\"\r\n                type=\"search\"\r\n                class=\"form-control\"\r\n                [placeholder]=\"'artemisApp.course.exercise.search.fieldExerciseName' | artemisTranslate\"\r\n                [(ngModel)]=\"exerciseNameSearch\"\r\n                (keydown.enter)=\"sendUpdate()\"\r\n            />\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"form-group col\">\r\n                <label for=\"exercise-search-category-input\" jhiTranslate=\"artemisApp.course.exercise.search.labelExerciseCategory\"></label>\r\n                <input\r\n                    id=\"exercise-search-category-input\"\r\n                    type=\"text\"\r\n                    class=\"form-control form-control\"\r\n                    [placeholder]=\"'artemisApp.course.exercise.search.fieldExerciseCategory' | artemisTranslate\"\r\n                    [(ngModel)]=\"exerciseCategorySearch\"\r\n                    (keydown.enter)=\"sendUpdate()\"\r\n                />\r\n            </div>\r\n            <div class=\"form-group col\">\r\n                <label for=\"exercise-search-type-input\" jhiTranslate=\"artemisApp.course.exercise.search.labelExerciseType\"></label>\r\n                <select id=\"exercise-search-type-input\" class=\"form-select\" [(ngModel)]=\"exerciseTypeSearch\" (ngModelChange)=\"sendUpdate()\">\r\n                    @for (optionValue of typeOptions; track optionValue) {\r\n                        <option [value]=\"optionValue\">\r\n                            {{ 'artemisApp.course.exercise.search.type.' + optionValue | artemisTranslate }}\r\n                        </option>\r\n                    }\r\n                </select>\r\n            </div>\r\n        </div>\r\n        <div class=\"gap-2 d-flex\">\r\n            <button\r\n                id=\"resetFilterButton\"\r\n                class=\"btn btn-secondary offset-6 col-3\"\r\n                type=\"button\"\r\n                (click)=\"reset()\"\r\n                jhiTranslate=\"artemisApp.course.exercise.search.resetButton\"\r\n            ></button>\r\n            <button id=\"saveFilterButton\" class=\"btn btn-primary col-3\" type=\"button\" (click)=\"sendUpdate()\" jhiTranslate=\"artemisApp.course.exercise.search.searchButton\"></button>\r\n        </div>\r\n    </div>\r\n</div>\r\n", "import { Component, Input } from '@angular/core';\r\nimport { faAngleDown, faAngleRight } from '@fortawesome/free-solid-svg-icons';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { NgbCollapse } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'jhi-course-exercise-card',\r\n    templateUrl: './course-exercise-card.component.html',\r\n    styleUrls: ['./course-exercise-card.component.scss', '../../exercises/quiz/shared/quiz.scss'],\r\n    imports: [TranslateDirective, FaIconComponent, NgbCollapse],\r\n})\r\nexport class CourseExerciseCardComponent {\r\n    @Input() headingJhiTranslate: string;\r\n    @Input() exerciseCount: number;\r\n    @Input() course: Course;\r\n    isCollapsed = false;\r\n\r\n    // Icons\r\n    faAngleRight = faAngleRight;\r\n    faAngleDown = faAngleDown;\r\n}\r\n", "<div class=\"question card\">\r\n    <div class=\"question-options card-header\">\r\n        <h5 class=\"mb-0\">\r\n            <span> {{ exerciseCount }} </span>\r\n            <span [jhiTranslate]=\"headingJhiTranslate\"></span>\r\n        </h5>\r\n        @if (course?.isAtLeastEditor) {\r\n            <div class=\"ms-auto\">\r\n                <ng-content select=\"[exerciseCreateButtons]\" />\r\n            </div>\r\n        }\r\n        <button class=\"btn question-collapse\" (click)=\"isCollapsed = !isCollapsed\" [attr.aria-expanded]=\"!isCollapsed\" [attr.aria-controls]=\"'collapseQuestion'\">\r\n            <fa-icon size=\"2x\" [icon]=\"isCollapsed ? faAngleRight : faAngleDown\" />\r\n        </button>\r\n    </div>\r\n    <div class=\"card-body question-card-body\" [ngbCollapse]=\"isCollapsed\">\r\n        <ng-content select=\"[exercises]\" />\r\n    </div>\r\n</div>\r\n", "import { Component, Input, inject } from '@angular/core';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { FeatureToggle } from 'app/shared/feature-toggle/feature-toggle.service';\r\nimport { faFileImport, faKeyboard, faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { ExerciseImportWrapperComponent } from 'app/exercises/shared/import/exercise-import-wrapper/exercise-import-wrapper.component';\r\nimport { ExerciseType } from 'app/entities/exercise.model';\r\nimport { ProgrammingExercise } from 'app/entities/programming/programming-exercise.model';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Router, RouterLink } from '@angular/router';\r\nimport { FeatureToggleLinkDirective } from 'app/shared/feature-toggle/feature-toggle-link.directive';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { FeatureToggleDirective } from 'app/shared/feature-toggle/feature-toggle.directive';\r\n\r\n@Component({\r\n    selector: 'jhi-programming-exercise-create-buttons',\r\n    templateUrl: './programming-exercise-create-buttons.component.html',\r\n    imports: [FeatureToggleLinkDirective, RouterLink, FaIconComponent, TranslateDirective, FeatureToggleDirective],\r\n})\r\nexport class ProgrammingExerciseCreateButtonsComponent {\r\n    private router = inject(Router);\r\n    private modalService = inject(NgbModal);\r\n\r\n    readonly FeatureToggle = FeatureToggle;\r\n\r\n    @Input()\r\n    course: Course;\r\n\r\n    faPlus = faPlus;\r\n    faFileImport = faFileImport;\r\n    faKeyboard = faKeyboard;\r\n\r\n    openImportModal() {\r\n        const modalRef = this.modalService.open(ExerciseImportWrapperComponent, { size: 'lg', backdrop: 'static' });\r\n        modalRef.componentInstance.exerciseType = ExerciseType.PROGRAMMING;\r\n        modalRef.result.then((result: ProgrammingExercise) => {\r\n            //when the file is uploaded we set the id to undefined.\r\n            if (result.id === undefined) {\r\n                this.router.navigate(['course-management', this.course.id, 'programming-exercises', 'import-from-file'], {\r\n                    state: {\r\n                        programmingExerciseForImportFromFile: result,\r\n                    },\r\n                });\r\n            } else {\r\n                this.router.navigate(['course-management', this.course.id, 'programming-exercises', 'import', result.id]);\r\n            }\r\n        });\r\n    }\r\n}\r\n", "<div class=\"d-flex flex-wrap justify-content-end\">\r\n    <button\r\n        id=\"create-programming-exercise\"\r\n        class=\"btn btn-primary jh-create-entity create-programming-exercise text-truncate mb-1 me-1\"\r\n        [jhiFeatureToggleLink]=\"FeatureToggle.ProgrammingExercises\"\r\n        [routerLink]=\"['/course-management', course.id, 'programming-exercises', 'new']\"\r\n        queryParamsHandling=\"merge\"\r\n    >\r\n        <fa-icon [icon]=\"faPlus\" />\r\n        <span class=\"hidden-sm-down\" jhiTranslate=\"artemisApp.programmingExercise.home.createLabel\"></span>\r\n        <fa-icon [icon]=\"faKeyboard\" />\r\n    </button>\r\n    <button\r\n        id=\"import-programming-exercise\"\r\n        class=\"btn btn-primary jh-create-entity import-programming-exercise text-truncate mb-1 me-1\"\r\n        [jhiFeatureToggle]=\"FeatureToggle.ProgrammingExercises\"\r\n        (click)=\"openImportModal()\"\r\n    >\r\n        <fa-icon [icon]=\"faFileImport\" />\r\n        <span class=\"hidden-sm-down\" jhiTranslate=\"artemisApp.programmingExercise.home.importLabel\"></span>\r\n        <fa-icon [icon]=\"faKeyboard\" />\r\n    </button>\r\n</div>\r\n", "import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, inject } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Observable, Subject, Subscription, merge } from 'rxjs';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { CourseManagementService } from 'app/course/manage/course-management.service';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { EventManager } from 'app/core/util/event-manager.service';\r\nimport { ExerciseFilter } from 'app/entities/exercise-filter.model';\r\nimport { Exercise } from 'app/entities/exercise.model';\r\n\r\ninterface DeletionServiceInterface {\r\n    delete: (id: number) => Observable<HttpResponse<any>>;\r\n}\r\n\r\n@Component({\r\n    template: '',\r\n})\r\nexport abstract class ExerciseComponent implements OnInit, OnDestroy {\r\n    protected eventManager = inject(EventManager);\r\n    private courseService = inject(CourseManagementService);\r\n    private route = inject(ActivatedRoute);\r\n\r\n    private eventSubscriber: Subscription;\r\n    @Input() embedded = false;\r\n    @Input() course: Course;\r\n    filter: ExerciseFilter;\r\n    @Output() exerciseCount = new EventEmitter<number>();\r\n    @Output() filteredExerciseCount = new EventEmitter<number>();\r\n    showHeading: boolean;\r\n    courseId: number;\r\n    predicate: string = 'id';\r\n    reverse = true;\r\n\r\n    selectedExercises: Exercise[] = [];\r\n    allChecked = false;\r\n\r\n    // These two variables are used to emit errors to the delete dialog\r\n    protected dialogErrorSource = new Subject<string>();\r\n    dialogError$ = this.dialogErrorSource.asObservable();\r\n\r\n    protected abstract get exercises(): Exercise[];\r\n\r\n    /**\r\n     * Fetches an exercise from the server (and if needed the course as well)\r\n     */\r\n    ngOnInit(): void {\r\n        this.showHeading = this.embedded;\r\n        this.load();\r\n        this.registerChangeInExercises();\r\n        this.filter = new ExerciseFilter();\r\n    }\r\n\r\n    /**\r\n     * Unsubscribes from all subscriptions\r\n     */\r\n    ngOnDestroy() {\r\n        this.eventManager.destroy(this.eventSubscriber);\r\n        this.dialogErrorSource.unsubscribe();\r\n    }\r\n\r\n    @Input()\r\n    set exerciseFilter(value: ExerciseFilter) {\r\n        this.filter = value;\r\n        this.applyFilter();\r\n    }\r\n\r\n    protected load(): void {\r\n        if (!this.course?.id) {\r\n            this.courseId = Number(this.route.snapshot.paramMap.get('courseId'));\r\n            this.loadCourse();\r\n        } else {\r\n            this.courseId = this.course.id;\r\n            this.loadExercises();\r\n        }\r\n    }\r\n\r\n    private loadCourse(): void {\r\n        this.courseService.find(this.courseId).subscribe((courseResponse) => {\r\n            this.course = courseResponse.body!;\r\n            this.loadExercises();\r\n        });\r\n    }\r\n\r\n    protected abstract loadExercises(): void;\r\n\r\n    protected abstract applyFilter(): void;\r\n\r\n    protected emitExerciseCount(count: number): void {\r\n        this.exerciseCount.emit(count);\r\n    }\r\n\r\n    protected emitFilteredExerciseCount(count: number): void {\r\n        this.filteredExerciseCount.emit(count);\r\n    }\r\n\r\n    protected abstract getChangeEventName(): string;\r\n\r\n    private registerChangeInExercises() {\r\n        this.eventSubscriber = this.eventManager.subscribe(this.getChangeEventName(), () => this.load());\r\n    }\r\n\r\n    /**\r\n     * Deletes all the given exercises (does not work for programming exercises)\r\n     * @param exercisesToDelete the exercise objects which are to be deleted\r\n     * @param exerciseService service that is used to delete the exercise\r\n     */\r\n    deleteMultipleExercises(exercisesToDelete: Exercise[], exerciseService: DeletionServiceInterface) {\r\n        const deletionObservables = exercisesToDelete.map((exercise) => exerciseService.delete(exercise.id!));\r\n        return merge(...deletionObservables).subscribe({\r\n            next: () => {\r\n                this.eventManager.broadcast({\r\n                    name: this.getChangeEventName(),\r\n                    content: 'Deleted selected Exercises',\r\n                });\r\n                this.dialogErrorSource.next('');\r\n            },\r\n            error: (error: HttpErrorResponse) => this.dialogErrorSource.next(error.message),\r\n        });\r\n    }\r\n\r\n    toggleExercise(exercise: Exercise) {\r\n        const exerciseIndex = this.selectedExercises.indexOf(exercise);\r\n        if (exerciseIndex !== -1) {\r\n            this.selectedExercises.splice(exerciseIndex, 1);\r\n        } else {\r\n            this.selectedExercises.push(exercise);\r\n        }\r\n        this.allChecked = this.selectedExercises.length === this.exercises.length;\r\n    }\r\n\r\n    toggleMultipleExercises(exercises: Exercise[]) {\r\n        this.selectedExercises = [];\r\n        if (!this.allChecked) {\r\n            this.selectedExercises = this.selectedExercises.concat(exercises);\r\n        }\r\n        this.allChecked = this.selectedExercises.length === this.exercises.length;\r\n    }\r\n\r\n    isExerciseSelected(exercise: Exercise) {\r\n        return this.selectedExercises.includes(exercise);\r\n    }\r\n}\r\n", "import { Component, OnInit, inject } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { ProgrammingExercise } from 'app/entities/programming/programming-exercise.model';\r\nimport { ProgrammingExerciseService } from 'app/exercises/programming/manage/services/programming-exercise.service';\r\nimport { AlertService, AlertType } from 'app/core/util/alert.service';\r\nimport { faSave } from '@fortawesome/free-solid-svg-icons';\r\nimport { ExerciseService } from 'app/exercises/shared/exercise/exercise.service';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HelpIconComponent } from 'app/shared/components/help-icon.component';\r\nimport { ProgrammingExerciseLifecycleComponent } from '../shared/lifecycle/programming-exercise-lifecycle.component';\r\nimport { ButtonComponent } from 'app/shared/components/button.component';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\n\r\n@Component({\r\n    selector: 'jhi-programming-exercise-edit-selected',\r\n    templateUrl: './programming-exercise-edit-selected.component.html',\r\n    imports: [TranslateDirective, FormsModule, HelpIconComponent, ProgrammingExerciseLifecycleComponent, ButtonComponent, FaIconComponent],\r\n})\r\nexport class ProgrammingExerciseEditSelectedComponent implements OnInit {\r\n    private activeModal = inject(NgbActiveModal);\r\n    private translateService = inject(TranslateService);\r\n    private alertService = inject(AlertService);\r\n    private programmingExerciseService = inject(ProgrammingExerciseService);\r\n    private exerciseService = inject(ExerciseService);\r\n\r\n    newProgrammingExercise: ProgrammingExercise;\r\n    selectedProgrammingExercises: ProgrammingExercise[];\r\n\r\n    isSaving = false;\r\n    savedExercises = 0;\r\n    failedExercises: string[] = [];\r\n    failureOccurred = false;\r\n    private translationBasePath = 'artemisApp.programmingExercise.';\r\n    notificationText?: string;\r\n\r\n    // Icons\r\n    faSave = faSave;\r\n\r\n    ngOnInit(): void {\r\n        this.notificationText = undefined;\r\n        this.newProgrammingExercise = new ProgrammingExercise(undefined, undefined);\r\n    }\r\n\r\n    saveAll() {\r\n        // If no release date is set, we warn the user.\r\n        if (!this.newProgrammingExercise.releaseDate) {\r\n            const confirmNoReleaseDate = this.translateService.instant(\r\n                this.translationBasePath + (this.newProgrammingExercise.startDate ? 'noReleaseDateWarning' : 'noReleaseAndStartDateWarning'),\r\n            );\r\n            if (!window.confirm(confirmNoReleaseDate)) {\r\n                return;\r\n            }\r\n        }\r\n        this.isSaving = true;\r\n\r\n        if (this.exerciseService.hasExampleSolutionPublicationDateWarning(this.newProgrammingExercise)) {\r\n            this.alertService.addAlert({\r\n                type: AlertType.WARNING,\r\n                message: 'artemisApp.exercise.exampleSolutionPublicationDateWarning',\r\n            });\r\n        }\r\n\r\n        this.selectedProgrammingExercises.forEach((programmingExercise) => {\r\n            programmingExercise = this.setNewValues(programmingExercise);\r\n            const requestOptions = {} as any;\r\n            if (this.notificationText) {\r\n                requestOptions.notificationText = this.notificationText;\r\n            }\r\n            this.subscribeToSaveResponse(programmingExercise.title, this.programmingExerciseService.updateTimeline(programmingExercise, requestOptions));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Replace the programming exercise values with the new given ones\r\n     * @param programmingExercise to update\r\n     * @return the programming exercise with updated values\r\n     */\r\n    setNewValues(programmingExercise: ProgrammingExercise) {\r\n        programmingExercise.releaseDate = this.newProgrammingExercise.releaseDate;\r\n        programmingExercise.startDate = this.newProgrammingExercise.startDate;\r\n        programmingExercise.dueDate = this.newProgrammingExercise.dueDate;\r\n        programmingExercise.buildAndTestStudentSubmissionsAfterDueDate = this.newProgrammingExercise.buildAndTestStudentSubmissionsAfterDueDate;\r\n        programmingExercise.assessmentType = this.newProgrammingExercise.assessmentType;\r\n        programmingExercise.assessmentDueDate = this.newProgrammingExercise.assessmentDueDate;\r\n        programmingExercise.exampleSolutionPublicationDate = this.newProgrammingExercise.exampleSolutionPublicationDate;\r\n        return programmingExercise;\r\n    }\r\n\r\n    private subscribeToSaveResponse(exerciseTitle: string | undefined, result: Observable<HttpResponse<ProgrammingExercise>>) {\r\n        result.subscribe({\r\n            next: () => this.onSaveSuccess(),\r\n            error: (res: HttpErrorResponse) => this.onSaveError(res, exerciseTitle),\r\n        });\r\n    }\r\n\r\n    private onSaveSuccess() {\r\n        this.savedExercises++;\r\n        if (this.savedExercises === this.selectedProgrammingExercises.length) {\r\n            this.isSaving = false;\r\n            if (!this.failureOccurred) {\r\n                this.activeModal.close();\r\n            }\r\n        }\r\n    }\r\n\r\n    private onSaveError(error: HttpErrorResponse, exerciseTitle?: string | undefined) {\r\n        exerciseTitle = exerciseTitle ?? 'undefined exercise';\r\n        this.failureOccurred = true;\r\n        this.failedExercises.push(exerciseTitle);\r\n        this.savedExercises++;\r\n        if (this.savedExercises === this.selectedProgrammingExercises.length) {\r\n            this.isSaving = false;\r\n        }\r\n        window.scrollTo(0, 0);\r\n    }\r\n\r\n    closeModal() {\r\n        this.activeModal.close();\r\n    }\r\n\r\n    /**\r\n     * Closes the modal in which the import component is opened by dismissing it\r\n     */\r\n    clear() {\r\n        this.activeModal.dismiss('cancel');\r\n    }\r\n}\r\n", "<div>\r\n    <div class=\"modal-header\">\r\n        <h4 class=\"modal-title\" jhiTranslate=\"entity.action.editSelected\"></h4>\r\n        <button type=\"button\" class=\"btn-close\" data-dismiss=\"modal\" aria-hidden=\"true\" (click)=\"clear()\"></button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        @if (failureOccurred) {\r\n            <div class=\"row justify-content-center\">\r\n                <span class=\"mb-1\" jhiTranslate=\"artemisApp.programmingExercise.editSelectedModal.errorOccurred\"></span>\r\n                <div class=\"table-responsive m-2 p-1\">\r\n                    <table class=\"table table-striped\">\r\n                        <tbody>\r\n                            @for (failedExercise of failedExercises; track failedExercise) {\r\n                                <tr>\r\n                                    <td>{{ failedExercise }}</td>\r\n                                </tr>\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <button type=\"button\" class=\"btn ms-2 btn-primary\" (click)=\"closeModal()\" jhiTranslate=\"artemisApp.programmingExercise.editSelectedModal.errorReadButton\"></button>\r\n            </div>\r\n        }\r\n        @if (!failureOccurred) {\r\n            <div class=\"row justify-content-center\">\r\n                <div class=\"col-lg-8 col-sm-12\">\r\n                    <span style=\"font-weight: bold\" jhiTranslate=\"artemisApp.programmingExercise.editSelectedModal.currentlyEdited\"></span>\r\n                    <div class=\"table-responsive m-2 p-1\">\r\n                        <table class=\"table table-striped\">\r\n                            <tbody>\r\n                                @for (programmingExercise of selectedProgrammingExercises; track programmingExercise) {\r\n                                    <tr>\r\n                                        <td>{{ programmingExercise.title }}</td>\r\n                                    </tr>\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <div class=\"form-group-narrow\">\r\n                        <label class=\"form-control-label\" jhiTranslate=\"artemisApp.exercise.notificationText\" for=\"field_notification_text\"></label>\r\n                        <input minlength=\"3\" type=\"text\" class=\"form-control\" name=\"notificationText\" id=\"field_notification_text\" [(ngModel)]=\"notificationText\" />\r\n                    </div>\r\n                    <form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"saveAll()\">\r\n                        <div class=\"form-group-narrow mt-2\">\r\n                            <div>\r\n                                <label class=\"label-narrow label-timeline\" jhiTranslate=\"artemisApp.programmingExercise.timeline.timelineLabel\" for=\"timeline\"></label>\r\n                                <jhi-help-icon text=\"artemisApp.programmingExercise.timeline.timelineTooltip\" />\r\n                            </div>\r\n                            <jhi-programming-exercise-lifecycle id=\"timeline\" [exercise]=\"newProgrammingExercise\" [isExamMode]=\"false\" />\r\n                            <jhi-button class=\"text-center\" id=\"save-entity\" [icon]=\"faSave\" [title]=\"'entity.action.save'\" [isLoading]=\"isSaving\">\r\n                                <fa-icon [icon]=\"faSave\" />\r\n                                <span jhiTranslate=\"entity.action.save\"></span>\r\n                            </jhi-button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        }\r\n    </div>\r\n</div>\r\n", "import { Component, Input, OnChanges, OnDestroy, SimpleChanges, inject } from '@angular/core';\r\nimport { ProgrammingExerciseWebsocketService } from 'app/exercises/programming/manage/services/programming-exercise-websocket.service';\r\nimport { tap } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n/**\r\n * Two status indicators for the test case table:\r\n * - Are there unsaved changes?\r\n * - Have test cases been changed but the student submissions were not triggered?\r\n */\r\n@Component({\r\n    selector: 'jhi-programming-exercise-grading-dirty-warning',\r\n    template: `\r\n        @if (hasUpdatedGradingConfig) {\r\n            <fa-icon\r\n                [icon]=\"faExclamationTriangle\"\r\n                class=\"text-warning\"\r\n                size=\"2x\"\r\n                ngbTooltip=\"{{ 'artemisApp.programmingExercise.configureGrading.updatedGradingConfigTooltip' | artemisTranslate }}\"\r\n            />\r\n        }\r\n    `,\r\n    imports: [FaIconComponent, NgbTooltip, ArtemisTranslatePipe],\r\n})\r\nexport class ProgrammingExerciseGradingDirtyWarningComponent implements OnChanges, OnDestroy {\r\n    private programmingExerciseWebsocketService = inject(ProgrammingExerciseWebsocketService);\r\n\r\n    @Input() programmingExerciseId: number;\r\n    @Input() hasUpdatedGradingConfigInitialValue: boolean;\r\n\r\n    hasUpdatedGradingConfig?: boolean;\r\n    testCaseStateSubscription: Subscription;\r\n\r\n    // Icons\r\n    faExclamationTriangle = faExclamationTriangle;\r\n\r\n    /**\r\n     * Set the initial updated test case value on the first change of the property.\r\n     * Subscribe for the test case state. This component is only visible if the programming exercise has updated (= dirty) test cases.\r\n     *\r\n     * @param changes\r\n     */\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        // When the programming exercise changes, both set the hasUpdatedTestCases property to undefined and set up a subscription.\r\n        if (this.programmingExerciseId && changes.programmingExerciseId.previousValue !== this.programmingExerciseId) {\r\n            this.hasUpdatedGradingConfig = undefined;\r\n            this.unsubscribeSubscriptions();\r\n            this.testCaseStateSubscription = this.programmingExerciseWebsocketService\r\n                .getTestCaseState(this.programmingExerciseId)\r\n                .pipe(\r\n                    tap((hasUpdatedTestCases: boolean) => {\r\n                        this.hasUpdatedGradingConfig = hasUpdatedTestCases;\r\n                    }),\r\n                )\r\n                .subscribe();\r\n        }\r\n        // On the first change of the updatedTestCasesInitialValue property, use it to initialize hasUpdatedTestCases.\r\n        if (\r\n            changes.hasUpdatedTestCasesInitialValue &&\r\n            changes.hasUpdatedTestCasesInitialValue.currentValue !== undefined &&\r\n            changes.hasUpdatedTestCasesInitialValue.isFirstChange()\r\n        ) {\r\n            this.hasUpdatedGradingConfig = this.hasUpdatedGradingConfigInitialValue;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Angular life cycle hook\r\n     * in this case if there is a subscription for the TestCaseState, unsubscribe\r\n     */\r\n    ngOnDestroy(): void {\r\n        this.unsubscribeSubscriptions();\r\n    }\r\n\r\n    /**\r\n     * If there is an existing subscription, unsubscribe.\r\n     */\r\n    private unsubscribeSubscriptions() {\r\n        if (this.testCaseStateSubscription) {\r\n            this.testCaseStateSubscription.unsubscribe();\r\n        }\r\n    }\r\n}\r\n", "import { Component, Input, OnDestroy, OnInit, inject } from '@angular/core';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { ExerciseScoresExportButtonComponent } from 'app/exercises/shared/exercise-scores/exercise-scores-export-button.component';\r\nimport { merge } from 'rxjs';\r\nimport { ProgrammingExercise } from 'app/entities/programming/programming-exercise.model';\r\nimport { ProgrammingExerciseService } from './services/programming-exercise.service';\r\nimport { ExerciseComponent } from 'app/exercises/shared/exercise/exercise.component';\r\nimport { ActionType } from 'app/shared/delete-dialog/delete-dialog.model';\r\nimport { onError } from 'app/shared/util/global.utils';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FeatureToggle } from 'app/shared/feature-toggle/feature-toggle.service';\r\nimport { ExerciseService } from 'app/exercises/shared/exercise/exercise.service';\r\nimport { SortService } from 'app/shared/service/sort.service';\r\nimport { ProgrammingExerciseEditSelectedComponent } from 'app/exercises/programming/manage/programming-exercise-edit-selected.component';\r\nimport { ProgrammingExerciseParticipationType } from 'app/entities/programming/programming-exercise-participation.model';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { createBuildPlanUrl } from 'app/exercises/programming/shared/utils/programming-exercise.utils';\r\nimport { ProfileService } from 'app/shared/layouts/profiles/profile.service';\r\nimport { ConsistencyCheckComponent } from 'app/shared/consistency-check/consistency-check.component';\r\nimport {\r\n    faBook,\r\n    faCheckDouble,\r\n    faDownload,\r\n    faFileSignature,\r\n    faListAlt,\r\n    faPencilAlt,\r\n    faPlus,\r\n    faSort,\r\n    faTable,\r\n    faTrash,\r\n    faUndo,\r\n    faUsers,\r\n    faWrench,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { CourseExerciseService } from 'app/exercises/shared/course-exercises/course-exercise.service';\r\nimport { downloadZipFileFromResponse } from 'app/shared/util/download.util';\r\nimport { PROFILE_LOCALCI, PROFILE_LOCALVC, PROFILE_THEIA } from 'app/app.constants';\r\nimport { SortDirective } from 'app/shared/sort/sort.directive';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SortByDirective } from 'app/shared/sort/sort-by.directive';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { RouterLink } from '@angular/router';\r\nimport { ProgrammingExerciseGradingDirtyWarningComponent } from './grading/programming-exercise-grading-dirty-warning.component';\r\nimport { ProgrammingExerciseInstructorStatusComponent } from './status/programming-exercise-instructor-status.component';\r\nimport { ExerciseCategoriesComponent } from 'app/shared/exercise-categories/exercise-categories.component';\r\nimport { FeatureToggleLinkDirective } from 'app/shared/feature-toggle/feature-toggle-link.directive';\r\nimport { ProgrammingExerciseResetButtonDirective } from './reset/programming-exercise-reset-button.directive';\r\nimport { FeatureToggleDirective } from 'app/shared/feature-toggle/feature-toggle.directive';\r\nimport { DeleteButtonDirective } from 'app/shared/delete-dialog/delete-button.directive';\r\nimport { ProgrammingAssessmentRepoExportButtonComponent } from '../assess/repo-export/programming-assessment-repo-export-button.component';\r\nimport { SlicePipe } from '@angular/common';\r\nimport { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\r\nimport { RepositoryType } from 'app/exercises/programming/shared/code-editor/model/code-editor.model';\r\n\r\n@Component({\r\n    selector: 'jhi-programming-exercise',\r\n    templateUrl: './programming-exercise.component.html',\r\n    imports: [\r\n        SortDirective,\r\n        FormsModule,\r\n        SortByDirective,\r\n        TranslateDirective,\r\n        FaIconComponent,\r\n        RouterLink,\r\n        ProgrammingExerciseGradingDirtyWarningComponent,\r\n        ProgrammingExerciseInstructorStatusComponent,\r\n        ExerciseCategoriesComponent,\r\n        FeatureToggleLinkDirective,\r\n        ProgrammingExerciseResetButtonDirective,\r\n        FeatureToggleDirective,\r\n        DeleteButtonDirective,\r\n        ProgrammingAssessmentRepoExportButtonComponent,\r\n        ExerciseScoresExportButtonComponent,\r\n        SlicePipe,\r\n        ArtemisDatePipe,\r\n        // TODO: the extension point for Orion does not work with Angular 19, we need to find a different solution\r\n        // ExtensionPointDirective,\r\n    ],\r\n})\r\nexport class ProgrammingExerciseComponent extends ExerciseComponent implements OnInit, OnDestroy {\r\n    protected exerciseService = inject(ExerciseService); // needed in html code\r\n    private programmingExerciseService = inject(ProgrammingExerciseService);\r\n    private courseExerciseService = inject(CourseExerciseService);\r\n    private accountService = inject(AccountService);\r\n    private alertService = inject(AlertService);\r\n    private modalService = inject(NgbModal);\r\n    private sortService = inject(SortService);\r\n    private profileService = inject(ProfileService);\r\n\r\n    @Input() programmingExercises: ProgrammingExercise[] = [];\r\n    filteredProgrammingExercises: ProgrammingExercise[];\r\n    readonly ActionType = ActionType;\r\n    FeatureToggle = FeatureToggle;\r\n    solutionParticipationType = ProgrammingExerciseParticipationType.SOLUTION;\r\n    templateParticipationType = ProgrammingExerciseParticipationType.TEMPLATE;\r\n    // Used to make the repository links download the repositories instead of linking to GitLab.\r\n    localVCEnabled = false;\r\n    localCIEnabled = false;\r\n    onlineIdeEnabled = false;\r\n\r\n    // extension points, see shared/extension-point\r\n    // TODO: the extension point for Orion does not work with Angular 19, we need to find a different solution\r\n    // @ContentChild('overrideRepositoryAndBuildPlan') overrideRepositoryAndBuildPlan: TemplateRef<any>;\r\n    // @ContentChild('overrideButtons') overrideButtons: TemplateRef<any>;\r\n    private buildPlanLinkTemplate: string;\r\n    protected readonly RepositoryType = RepositoryType;\r\n\r\n    // Icons\r\n    faSort = faSort;\r\n    faPlus = faPlus;\r\n    faDownload = faDownload;\r\n    faUndo = faUndo;\r\n    faBook = faBook;\r\n    faWrench = faWrench;\r\n    faCheckDouble = faCheckDouble;\r\n    faUsers = faUsers;\r\n    faTable = faTable;\r\n    faTrash = faTrash;\r\n    faListAlt = faListAlt;\r\n    faPencilAlt = faPencilAlt;\r\n    faFileSignature = faFileSignature;\r\n\r\n    protected get exercises() {\r\n        return this.programmingExercises;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n    }\r\n\r\n    protected loadExercises(): void {\r\n        this.courseExerciseService.findAllProgrammingExercisesForCourse(this.courseId).subscribe({\r\n            next: (res: HttpResponse<ProgrammingExercise[]>) => {\r\n                this.programmingExercises = res.body!;\r\n                this.profileService.getProfileInfo().subscribe((profileInfo) => {\r\n                    this.buildPlanLinkTemplate = profileInfo.buildPlanURLTemplate;\r\n                    this.localVCEnabled = profileInfo.activeProfiles.includes(PROFILE_LOCALVC);\r\n                    this.localCIEnabled = profileInfo.activeProfiles.includes(PROFILE_LOCALCI);\r\n                    this.onlineIdeEnabled = profileInfo.activeProfiles.includes(PROFILE_THEIA);\r\n                });\r\n                // reconnect exercise with course\r\n                this.programmingExercises.forEach((exercise) => {\r\n                    exercise.course = this.course;\r\n                    this.accountService.setAccessRightsForExercise(exercise);\r\n                    if (exercise.projectKey) {\r\n                        if (exercise.solutionParticipation?.buildPlanId) {\r\n                            exercise.solutionParticipation.buildPlanUrl = createBuildPlanUrl(\r\n                                this.buildPlanLinkTemplate,\r\n                                exercise.projectKey,\r\n                                exercise.solutionParticipation.buildPlanId,\r\n                            );\r\n                        }\r\n                        if (exercise.templateParticipation?.buildPlanId) {\r\n                            exercise.templateParticipation.buildPlanUrl = createBuildPlanUrl(\r\n                                this.buildPlanLinkTemplate,\r\n                                exercise.projectKey,\r\n                                exercise.templateParticipation.buildPlanId,\r\n                            );\r\n                        }\r\n                    }\r\n                    this.selectedExercises = [];\r\n                });\r\n                this.applyFilter();\r\n                this.emitExerciseCount(this.programmingExercises.length);\r\n            },\r\n            error: (res: HttpErrorResponse) => onError(this.alertService, res),\r\n        });\r\n    }\r\n\r\n    protected applyFilter(): void {\r\n        this.filteredProgrammingExercises = this.programmingExercises.filter((exercise) => this.filter.matchesExercise(exercise));\r\n        this.emitFilteredExerciseCount(this.filteredProgrammingExercises.length);\r\n    }\r\n\r\n    trackId(_index: number, item: ProgrammingExercise) {\r\n        return item.id;\r\n    }\r\n\r\n    /**\r\n     * Deletes programming exercise\r\n     * @param programmingExerciseId the id of the programming exercise that we want to delete\r\n     * @param event contains additional checks for deleting exercise\r\n     */\r\n    deleteProgrammingExercise(programmingExerciseId: number, event: { [key: string]: boolean }) {\r\n        return this.programmingExerciseService.delete(programmingExerciseId, event.deleteStudentReposBuildPlans, event.deleteBaseReposBuildPlans).subscribe({\r\n            next: () => {\r\n                this.eventManager.broadcast({\r\n                    name: 'programmingExerciseListModification',\r\n                    content: 'Deleted an programmingExercise',\r\n                });\r\n                this.dialogErrorSource.next('');\r\n            },\r\n            error: (error: HttpErrorResponse) => this.dialogErrorSource.next(error.message),\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Deletes all the given programming exercises\r\n     * @param exercisesToDelete the exercise objects which are to be deleted\r\n     * @param event contains additional checks which are performed for all these exercises\r\n     */\r\n    deleteMultipleProgrammingExercises(exercisesToDelete: ProgrammingExercise[], event: { [key: string]: boolean }) {\r\n        const deletionObservables = exercisesToDelete.map((exercise) =>\r\n            this.programmingExerciseService.delete(exercise.id!, event.deleteStudentReposBuildPlans, event.deleteBaseReposBuildPlans),\r\n        );\r\n        return merge(...deletionObservables).subscribe({\r\n            next: () => {\r\n                this.eventManager.broadcast({\r\n                    name: 'programmingExerciseListModification',\r\n                    content: 'Deleted selected programmingExercises',\r\n                });\r\n                this.dialogErrorSource.next('');\r\n            },\r\n            error: (error: HttpErrorResponse) => this.dialogErrorSource.next(error.message),\r\n        });\r\n    }\r\n\r\n    protected getChangeEventName(): string {\r\n        return 'programmingExerciseListModification';\r\n    }\r\n\r\n    sortRows() {\r\n        this.sortService.sortByProperty(this.programmingExercises, this.predicate, this.reverse);\r\n        this.applyFilter();\r\n    }\r\n\r\n    openEditSelectedModal() {\r\n        const modalRef = this.modalService.open(ProgrammingExerciseEditSelectedComponent, {\r\n            size: 'xl',\r\n            backdrop: 'static',\r\n        });\r\n        modalRef.componentInstance.selectedProgrammingExercises = this.selectedExercises;\r\n        modalRef.closed.subscribe(() => {\r\n            location.reload();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Opens modal and executes a consistency check for the selected exercises\r\n     */\r\n    checkConsistencies() {\r\n        const modalRef = this.modalService.open(ConsistencyCheckComponent, { keyboard: true, size: 'lg' });\r\n        modalRef.componentInstance.exercisesToCheck = this.selectedExercises;\r\n    }\r\n\r\n    /**\r\n     * Downloads the instructor repository. Used when the \"localvc\" profile is active.\r\n     * For the local VCS, linking to an external site displaying the repository does not work.\r\n     * Instead, the repository is downloaded.\r\n     *\r\n     * @param programmingExerciseId\r\n     * @param repositoryType\r\n     */\r\n    downloadRepository(programmingExerciseId: number | undefined, repositoryType: RepositoryType) {\r\n        if (programmingExerciseId) {\r\n            // Repository type cannot be 'AUXILIARY' as auxiliary repositories are currently not supported for the local VCS.\r\n            this.programmingExerciseService.exportInstructorRepository(programmingExerciseId, repositoryType, undefined).subscribe((response: HttpResponse<Blob>) => {\r\n                downloadZipFileFromResponse(response);\r\n                this.alertService.success('artemisApp.programmingExercise.export.successMessageRepos');\r\n            });\r\n        }\r\n    }\r\n}\r\n", "@if (programmingExercises && filteredProgrammingExercises.length > 0) {\r\n    <div class=\"table-responsive\">\r\n        <table class=\"table table-striped\">\r\n            <thead>\r\n                <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"reverse\" (sortChange)=\"sortRows()\">\r\n                    @if (course.isAtLeastEditor) {\r\n                        <th class=\"d-md-table-cell\">\r\n                            <input class=\"form-check-input\" type=\"checkbox\" (change)=\"toggleMultipleExercises(programmingExercises)\" [ngModel]=\"allChecked\" />\r\n                        </th>\r\n                    }\r\n                    <th class=\"d-md-table-cell\" jhiSortBy=\"id\"><span jhiTranslate=\"global.field.id\"></span>&nbsp;<fa-icon [icon]=\"faSort\" /></th>\r\n                    <th jhiSortBy=\"title\"><span jhiTranslate=\"artemisApp.exercise.title\"></span>&nbsp;<fa-icon [icon]=\"faSort\" /></th>\r\n                    <th class=\"d-md-table-cell\" jhiSortBy=\"shortName\"><span jhiTranslate=\"artemisApp.exercise.shortName\"></span>&nbsp;<fa-icon [icon]=\"faSort\" /></th>\r\n                    <th jhiSortBy=\"releaseDate\"><span jhiTranslate=\"artemisApp.exercise.release\"></span>&nbsp;<fa-icon [icon]=\"faSort\" /></th>\r\n                    <th jhiSortBy=\"dueDate\"><span jhiTranslate=\"artemisApp.exercise.due\"></span>&nbsp;<fa-icon [icon]=\"faSort\" /></th>\r\n                    <th class=\"d-md-table-cell\" jhiSortBy=\"maxPoints\"><span jhiTranslate=\"artemisApp.exercise.points\"></span>&nbsp;<fa-icon [icon]=\"faSort\" /></th>\r\n                    <th jhiSortBy=\"bonusPoints\"><span jhiTranslate=\"artemisApp.exercise.bonus\"></span>&nbsp;<fa-icon [icon]=\"faSort\" /></th>\r\n                    <th jhiSortBy=\"includedInOverallScore\"><span jhiTranslate=\"artemisApp.exercise.includedCompletely\"></span>&nbsp;<fa-icon [icon]=\"faSort\" /></th>\r\n                    <!-- TODO: the extension point for Orion does not work with Angular 19, we need to find a different solution -->\r\n                    <!--                    <th *jhiExtensionPoint=\"overrideRepositoryAndBuildPlan\"><span jhiTranslate=\"artemisApp.programmingExercise.repositories\"></span></th>-->\r\n                    <!--                    @if (!localVCEnabled) {-->\r\n                    <!--                        <th *jhiExtensionPoint=\"overrideRepositoryAndBuildPlan\"><span jhiTranslate=\"artemisApp.programmingExercise.buildplans\"></span>&nbsp;</th>-->\r\n                    <!--                    }-->\r\n                    <th class=\"d-md-table-cell\">\r\n                        <span jhiTranslate=\"artemisApp.exercise.mode\"></span>\r\n                    </th>\r\n                    @if (course.presentationScore) {\r\n                        <th class=\"d-md-table-cell\" jhiSortBy=\"presentationScoreEnabled\">\r\n                            <span jhiTranslate=\"artemisApp.exercise.presentationScoreEnabled.title\"></span>&nbsp;<fa-icon [icon]=\"faSort\" />\r\n                        </th>\r\n                    }\r\n                    <th class=\"d-md-table-cell\"><span jhiTranslate=\"artemisApp.exercise.categories\"></span></th>\r\n                    <th></th>\r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n                @for (programmingExercise of filteredProgrammingExercises; track trackId($index, programmingExercise)) {\r\n                    <tr id=\"exercise-card-{{ programmingExercise.id }}\">\r\n                        @if (programmingExercise.isAtLeastEditor) {\r\n                            <td class=\"d-md-table-cell\">\r\n                                <input\r\n                                    class=\"form-check-input\"\r\n                                    type=\"checkbox\"\r\n                                    (change)=\"toggleExercise(programmingExercise)\"\r\n                                    [ngModel]=\"isExerciseSelected(programmingExercise)\"\r\n                                />\r\n                            </td>\r\n                        }\r\n                        <td class=\"d-md-table-cell\">\r\n                            @if (programmingExercise.isAtLeastTutor) {\r\n                                <a [routerLink]=\"['/course-management', courseId, 'programming-exercises', programmingExercise.id]\">\r\n                                    {{ programmingExercise.id }}\r\n                                </a>\r\n                            } @else {\r\n                                {{ programmingExercise.id }}\r\n                            }\r\n                        </td>\r\n                        <td>\r\n                            @if (programmingExercise.isAtLeastTutor) {\r\n                                <a [routerLink]=\"['/course-management', courseId, 'programming-exercises', programmingExercise.id]\">\r\n                                    {{ programmingExercise.title }}\r\n                                </a>\r\n                            } @else {\r\n                                {{ programmingExercise.title }}\r\n                            }\r\n\r\n                            <jhi-programming-exercise-grading-dirty-warning\r\n                                class=\"ms-2\"\r\n                                [programmingExerciseId]=\"programmingExercise.id!\"\r\n                                [hasUpdatedGradingConfigInitialValue]=\"!!programmingExercise.testCasesChanged\"\r\n                            />\r\n                        </td>\r\n                        <td class=\"d-md-table-cell\">{{ programmingExercise.shortName | slice: 0 : 15 }}{{ (programmingExercise.shortName?.length ?? 0) > 15 ? '...' : '' }}</td>\r\n                        <td>{{ programmingExercise.releaseDate | artemisDate }}</td>\r\n                        <td>{{ programmingExercise.dueDate | artemisDate }}</td>\r\n                        <td class=\"d-md-table-cell\">{{ programmingExercise.maxPoints }}</td>\r\n                        <td>{{ programmingExercise.bonusPoints }}</td>\r\n                        <td>{{ exerciseService.isIncludedInScore(programmingExercise) }}</td>\r\n                        <!-- TODO: the extension point for Orion does not work with Angular 19, we need to find a different solution -->\r\n                        <!--                        <td *jhiExtensionPoint=\"overrideRepositoryAndBuildPlan\">-->\r\n                        <td>\r\n                            <div class=\"d-flex justify-content-between\">\r\n                                @if (programmingExercise.templateParticipation && programmingExercise.templateParticipation.repositoryUri) {\r\n                                    <span>\r\n                                        <!--Checks if the programming exercise has a setup with VCS and CI, if this not the case\r\n                             the links are disabled--->\r\n                                        @if (!localVCEnabled) {\r\n                                            <a href=\"{{ programmingExercise.templateParticipation!.repositoryUri! }}\" target=\"_blank\">Template</a>\r\n                                        } @else {\r\n                                            <a [routerLink]=\"\" (click)=\"downloadRepository(programmingExercise.id, RepositoryType.TEMPLATE)\"\r\n                                                ><fa-icon [icon]=\"faDownload\" /> Template</a\r\n                                            >\r\n                                        }\r\n                                    </span>\r\n                                }\r\n                                @if (programmingExercise.templateParticipation?.results?.length) {\r\n                                    <jhi-programming-exercise-instructor-status\r\n                                        [participationType]=\"templateParticipationType\"\r\n                                        [participation]=\"programmingExercise.templateParticipation!\"\r\n                                        [exercise]=\"programmingExercise\"\r\n                                    />\r\n                                }\r\n                            </div>\r\n                            <div class=\"d-flex justify-content-between\">\r\n                                @if (programmingExercise.solutionParticipation?.repositoryUri) {\r\n                                    <span>\r\n                                        @if (!localVCEnabled) {\r\n                                            <a href=\"{{ programmingExercise.solutionParticipation!.repositoryUri! }}\" target=\"_blank\">Solution</a>\r\n                                        } @else {\r\n                                            <a [routerLink]=\"\" (click)=\"downloadRepository(programmingExercise.id, RepositoryType.SOLUTION)\"\r\n                                                ><fa-icon [icon]=\"faDownload\" /> Solution</a\r\n                                            >\r\n                                        }\r\n                                    </span>\r\n                                }\r\n                                @if (programmingExercise.solutionParticipation?.results?.length) {\r\n                                    <jhi-programming-exercise-instructor-status\r\n                                        [participationType]=\"solutionParticipationType\"\r\n                                        [participation]=\"programmingExercise.solutionParticipation!\"\r\n                                        [exercise]=\"programmingExercise\"\r\n                                    />\r\n                                }\r\n                            </div>\r\n                            <div>\r\n                                @if (programmingExercise.testRepositoryUri) {\r\n                                    <span>\r\n                                        @if (!localVCEnabled) {\r\n                                            <a href=\"{{ programmingExercise.testRepositoryUri }}\" target=\"_blank\">Test</a>\r\n                                        } @else {\r\n                                            <a [routerLink]=\"\" (click)=\"downloadRepository(programmingExercise.id, RepositoryType.TESTS)\"><fa-icon [icon]=\"faDownload\" /> Test</a>\r\n                                        }\r\n                                    </span>\r\n                                }\r\n                            </div>\r\n                        </td>\r\n                        @if (!localVCEnabled) {\r\n                            <!-- TODO: the extension point for Orion does not work with Angular 19, we need to find a different solution -->\r\n                            <!--                            <td *jhiExtensionPoint=\"overrideRepositoryAndBuildPlan\">-->\r\n                            <td>\r\n                                @if (programmingExercise.templateParticipation?.buildPlanId) {\r\n                                    <span> <a target=\"_blank\" rel=\"noreferrer\" href=\"{{ programmingExercise.templateParticipation!.buildPlanUrl }}\">Template</a> </span>\r\n                                }\r\n                                @if (programmingExercise.solutionParticipation?.buildPlanId) {\r\n                                    <span> <a target=\"_blank\" rel=\"noreferrer\" href=\"{{ programmingExercise.solutionParticipation!.buildPlanUrl }}\">Solution</a> </span>\r\n                                }\r\n                            </td>\r\n                        }\r\n                        <td class=\"d-md-table-cell\">\r\n                            <div class=\"d-flex justify-content-between\">\r\n                                <span class=\"colon-suffix\" [jhiTranslate]=\"'artemisApp.programmingExercise.offlineIde'\"></span>\r\n                                <span [jhiTranslate]=\"programmingExercise.allowOfflineIde ? 'artemisApp.exercise.yes' : 'artemisApp.exercise.no'\"></span>\r\n                            </div>\r\n                            <div class=\"d-flex justify-content-between\">\r\n                                <span class=\"colon-suffix\" [jhiTranslate]=\"'artemisApp.programmingExercise.onlineEditor'\"></span>\r\n                                <span [jhiTranslate]=\"programmingExercise.allowOnlineEditor ? 'artemisApp.exercise.yes' : 'artemisApp.exercise.no'\"></span>\r\n                            </div>\r\n                            @if (onlineIdeEnabled) {\r\n                                <div class=\"d-flex justify-content-between\">\r\n                                    <span class=\"colon-suffix\" [jhiTranslate]=\"'artemisApp.programmingExercise.onlineIde'\"></span>\r\n                                    <span [jhiTranslate]=\"programmingExercise.allowOnlineIde ? 'artemisApp.exercise.yes' : 'artemisApp.exercise.no'\"></span>\r\n                                </div>\r\n                            }\r\n                        </td>\r\n                        @if (course.presentationScore) {\r\n                            <td class=\"d-md-table-cell\">{{ programmingExercise.presentationScoreEnabled }}</td>\r\n                        }\r\n                        <td class=\"d-md-table-cell\">\r\n                            <jhi-exercise-categories [exercise]=\"programmingExercise\" />\r\n                        </td>\r\n                        <!-- TODO: the extension point for Orion does not work with Angular 19, we need to find a different solution -->\r\n                        <!--                        <td *jhiExtensionPoint=\"overrideButtons; context: { exercise: programmingExercise }\" class=\"text-end\">-->\r\n                        <td class=\"text-end\">\r\n                            <div class=\"btn-group flex-btn-group-container\">\r\n                                <div class=\"btn-group-vertical me-1 mb-auto\">\r\n                                    @if (programmingExercise.teamMode && programmingExercise.isAtLeastTutor) {\r\n                                        <a [routerLink]=\"['/course-management', courseId, 'exercises', programmingExercise.id, 'teams']\" class=\"btn btn-primary btn-sm me-1 mb-1\">\r\n                                            <fa-icon [icon]=\"faUsers\" />\r\n                                            <span class=\"d-md-inline\" jhiTranslate=\"artemisApp.exercise.teams\"></span>\r\n                                        </a>\r\n                                    }\r\n                                </div>\r\n                                <div class=\"btn-group-vertical me-1\">\r\n                                    @if (programmingExercise.isAtLeastTutor) {\r\n                                        <a\r\n                                            [routerLink]=\"['/course-management', courseId, 'programming-exercises', programmingExercise.id, 'participations']\"\r\n                                            class=\"btn btn-primary btn-sm me-1 mb-1\"\r\n                                            style=\"display: flex; justify-content: center; align-items: center\"\r\n                                        >\r\n                                            <div>\r\n                                                <fa-icon [icon]=\"faListAlt\" />\r\n                                                <span class=\"d-md-inline\" jhiTranslate=\"artemisApp.exercise.participations\"></span>\r\n                                            </div>\r\n                                        </a>\r\n                                    }\r\n                                    @if (programmingExercise.isAtLeastTutor) {\r\n                                        <a\r\n                                            [routerLink]=\"['/course-management', courseId, 'programming-exercises', programmingExercise.id, 'scores']\"\r\n                                            class=\"btn btn-info btn-sm me-1 mb-1\"\r\n                                        >\r\n                                            <div>\r\n                                                <fa-icon [icon]=\"faTable\" />\r\n                                                <span class=\"d-md-inline\" jhiTranslate=\"entity.action.scores\"></span>\r\n                                            </div>\r\n                                        </a>\r\n                                    }\r\n                                </div>\r\n                                <div class=\"btn-group-vertical me-1\">\r\n                                    @if (programmingExercise.isAtLeastEditor) {\r\n                                        <a\r\n                                            [jhiFeatureToggleLink]=\"FeatureToggle.ProgrammingExercises\"\r\n                                            [routerLink]=\"['/course-management', courseId, 'programming-exercises', programmingExercise.id, 'grading', 'test-cases']\"\r\n                                            class=\"btn btn-warning btn-sm me-1 mb-1\"\r\n                                            style=\"display: flex; justify-content: center; align-items: center\"\r\n                                        >\r\n                                            <div>\r\n                                                <fa-icon [icon]=\"faFileSignature\" />\r\n                                                <span class=\"d-md-inline\" jhiTranslate=\"artemisApp.programmingExercise.configureGrading.shortTitle\"></span>\r\n                                            </div>\r\n                                        </a>\r\n                                    }\r\n                                </div>\r\n                                <div class=\"btn-group-vertical me-1\">\r\n                                    @if (programmingExercise.isAtLeastEditor && programmingExercise.templateParticipation) {\r\n                                        <a\r\n                                            [jhiFeatureToggleLink]=\"FeatureToggle.ProgrammingExercises\"\r\n                                            [attr.disabled]=\"false\"\r\n                                            [routerLink]=\"[\r\n                                                '/course-management',\r\n                                                courseId,\r\n                                                'programming-exercises',\r\n                                                programmingExercise.id,\r\n                                                'code-editor',\r\n                                                RepositoryType.TEMPLATE,\r\n                                                programmingExercise.templateParticipation.id,\r\n                                            ]\"\r\n                                            class=\"btn btn-warning btn-sm me-1 mb-1\"\r\n                                            style=\"display: flex; justify-content: center; align-items: center\"\r\n                                        >\r\n                                            <div>\r\n                                                <fa-icon [icon]=\"faPencilAlt\" />\r\n                                                <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.editInEditor\"></span>\r\n                                            </div>\r\n                                        </a>\r\n                                    }\r\n                                    @if (programmingExercise.isAtLeastEditor) {\r\n                                        <a\r\n                                            [routerLink]=\"['/course-management', courseId, 'programming-exercises', programmingExercise.id, 'edit']\"\r\n                                            class=\"btn btn-warning btn-sm me-1 mb-1\"\r\n                                            style=\"display: flex; justify-content: center; align-items: center\"\r\n                                        >\r\n                                            <div>\r\n                                                <fa-icon [icon]=\"faWrench\" />\r\n                                                <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.edit\"></span>\r\n                                            </div>\r\n                                        </a>\r\n                                    }\r\n                                </div>\r\n                                <div class=\"btn-group-vertical me-1\">\r\n                                    @if (programmingExercise.isAtLeastEditor) {\r\n                                        <button\r\n                                            [jhiFeatureToggle]=\"FeatureToggle.ProgrammingExercises\"\r\n                                            jhiProgrammingExerciseResetButton\r\n                                            [programmingExercise]=\"programmingExercise\"\r\n                                            class=\"mb-1\"\r\n                                        >\r\n                                            <fa-icon [icon]=\"faUndo\" />\r\n                                            <span jhiTranslate=\"entity.action.reset\"></span>\r\n                                        </button>\r\n                                    }\r\n                                    @if (programmingExercise.isAtLeastInstructor) {\r\n                                        <button\r\n                                            [jhiFeatureToggle]=\"FeatureToggle.ProgrammingExercises\"\r\n                                            jhiDeleteButton\r\n                                            [entityTitle]=\"programmingExercise.title!\"\r\n                                            deleteQuestion=\"{{\r\n                                                localVCEnabled ? 'artemisApp.programmingExercise.delete.questionLocalVC.single' : 'artemisApp.programmingExercise.delete.question'\r\n                                            }}\"\r\n                                            (delete)=\"deleteProgrammingExercise(programmingExercise.id!, $event)\"\r\n                                            [dialogError]=\"dialogError$\"\r\n                                            [additionalChecks]=\"\r\n                                                localCIEnabled\r\n                                                    ? {}\r\n                                                    : {\r\n                                                          deleteStudentReposBuildPlans: 'artemisApp.programmingExercise.delete.studentReposBuildPlans',\r\n                                                          deleteBaseReposBuildPlans: 'artemisApp.programmingExercise.delete.baseReposBuildPlans',\r\n                                                      }\r\n                                            \"\r\n                                            deleteConfirmationText=\"artemisApp.exercise.delete.typeNameToConfirm\"\r\n                                            class=\"mb-1\"\r\n                                            id=\"delete-exercise\"\r\n                                        >\r\n                                            <fa-icon [icon]=\"faTrash\" />\r\n                                        </button>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                }\r\n            </tbody>\r\n        </table>\r\n        @if (selectedExercises.length > 0) {\r\n            <div>\r\n                <button type=\"submit\" (click)=\"openEditSelectedModal()\" class=\"btn btn-warning btn-sm me-1\">\r\n                    <fa-icon [icon]=\"faWrench\" />\r\n                    <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.editSelected\"></span>\r\n                </button>\r\n                @if (course.isAtLeastInstructor) {\r\n                    <jhi-programming-assessment-repo-export [programmingExercises]=\"selectedExercises\" class=\"me-1\" />\r\n                }\r\n                @if (course.isAtLeastInstructor) {\r\n                    <jhi-exercise-scores-export-button [exercises]=\"selectedExercises\" />\r\n                }\r\n                @if (course.isAtLeastInstructor) {\r\n                    <button (click)=\"checkConsistencies()\" class=\"btn btn-outline-primary btn-sm me-1\">\r\n                        <fa-icon [icon]=\"faCheckDouble\" />\r\n                        <span jhiTranslate=\"artemisApp.consistencyCheck.button\"></span>\r\n                    </button>\r\n                }\r\n                @if (course.isAtLeastInstructor) {\r\n                    <button\r\n                        [jhiFeatureToggle]=\"FeatureToggle.ProgrammingExercises\"\r\n                        jhiDeleteButton\r\n                        [entityTitle]=\"'Multiple Programming Exercises'\"\r\n                        deleteQuestion=\"{{\r\n                            localVCEnabled ? 'artemisApp.programmingExercise.delete.questionLocalVC.multiple' : 'artemisApp.exerciseActions.deleteMultipleExercisesQuestion'\r\n                        }}\"\r\n                        (delete)=\"deleteMultipleProgrammingExercises(selectedExercises, $event)\"\r\n                        [requireConfirmationOnlyForAdditionalChecks]=\"true\"\r\n                        [additionalChecks]=\"\r\n                            localCIEnabled\r\n                                ? {}\r\n                                : {\r\n                                      deleteStudentReposBuildPlans: 'artemisApp.programmingExercise.delete.studentReposBuildPlans',\r\n                                      deleteBaseReposBuildPlans: 'artemisApp.programmingExercise.delete.baseReposBuildPlans',\r\n                                  }\r\n                        \"\r\n                        class=\"me-1\"\r\n                        id=\"delete-exercises\"\r\n                        [dialogError]=\"dialogError$\"\r\n                    >\r\n                        <fa-icon [icon]=\"faTrash\" />\r\n                    </button>\r\n                }\r\n            </div>\r\n        }\r\n    </div>\r\n}\r\n", "import { Component, Input, inject } from '@angular/core';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { faCheckDouble, faFileExport, faFileImport, faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { ExerciseImportWrapperComponent } from 'app/exercises/shared/import/exercise-import-wrapper/exercise-import-wrapper.component';\r\nimport { ExerciseType } from 'app/entities/exercise.model';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Router, RouterLink } from '@angular/router';\r\nimport { QuizExercise } from 'app/entities/quiz/quiz-exercise.model';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\n\r\n@Component({\r\n    selector: 'jhi-quiz-exercise-create-buttons',\r\n    templateUrl: './quiz-exercise-create-buttons.component.html',\r\n    imports: [RouterLink, FaIconComponent, TranslateDirective],\r\n})\r\nexport class QuizExerciseCreateButtonsComponent {\r\n    private router = inject(Router);\r\n    private modalService = inject(NgbModal);\r\n\r\n    @Input() course: Course;\r\n\r\n    @Input() quizExercisesCount: number;\r\n\r\n    faPlus = faPlus;\r\n    faFileImport = faFileImport;\r\n    faFileExport = faFileExport;\r\n    faCheckDouble = faCheckDouble;\r\n\r\n    /**\r\n     * Opens the import modal for a quiz exercise\r\n     */\r\n    openImportModal() {\r\n        const modalRef = this.modalService.open(ExerciseImportWrapperComponent, { size: 'lg', backdrop: 'static' });\r\n        modalRef.componentInstance.exerciseType = ExerciseType.QUIZ;\r\n        modalRef.result.then((result: QuizExercise) => {\r\n            this.router.navigate(['course-management', this.course.id, 'quiz-exercises', result.id, 'import']);\r\n        });\r\n    }\r\n}\r\n", "<div class=\"d-flex flex-wrap justify-content-end\">\r\n    <button\r\n        class=\"btn btn-primary jh-create-entity create-quiz-exercise text-truncate mb-1 me-1\"\r\n        [routerLink]=\"['/course-management', course.id, 'quiz-exercises', 'new']\"\r\n        queryParamsHandling=\"merge\"\r\n        id=\"create-quiz-button\"\r\n    >\r\n        <fa-icon [icon]=\"faPlus\" />\r\n        <span jhiTranslate=\"artemisApp.quizExercise.home.createLabel\"></span>\r\n        <fa-icon [icon]=\"faCheckDouble\" />\r\n    </button>\r\n    <button id=\"import-quiz-exercise\" class=\"btn btn-primary jh-create-entity create-quiz-exercise text-truncate mb-1 me-1\" (click)=\"openImportModal()\">\r\n        <fa-icon [icon]=\"faFileImport\" />\r\n        <span class=\"hidden-sm-down\" jhiTranslate=\"artemisApp.quizExercise.home.importLabel\"></span>\r\n        <fa-icon [icon]=\"faCheckDouble\" />\r\n    </button>\r\n    @if (quizExercisesCount) {\r\n        <button class=\"btn btn-primary jh-create-entity create-quiz-exercise text-truncate mb-1 me-1\" [routerLink]=\"['/course-management', course.id, 'quiz-exercises', 'export']\">\r\n            <fa-icon [icon]=\"faFileExport\" />\r\n            <span jhiTranslate=\"artemisApp.quizExercise.home.exportLabel\"></span>\r\n            <fa-icon [icon]=\"faCheckDouble\" />\r\n        </button>\r\n    }\r\n</div>\r\n", "import { Component, Input, inject } from '@angular/core';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { QuizExercise, QuizMode, QuizStatus } from 'app/entities/quiz/quiz-exercise.model';\r\nimport { QuizExerciseService } from './quiz-exercise.service';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\nimport { ExerciseComponent } from 'app/exercises/shared/exercise/exercise.component';\r\nimport { ActionType } from 'app/shared/delete-dialog/delete-dialog.model';\r\nimport { SortService } from 'app/shared/service/sort.service';\r\nimport { ExerciseService } from 'app/exercises/shared/exercise/exercise.service';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { faSort, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { isQuizEditable } from 'app/exercises/quiz/shared/quiz-manage-util.service';\r\nimport { SortDirective } from 'app/shared/sort/sort.directive';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SortByDirective } from 'app/shared/sort/sort-by.directive';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { RouterLink } from '@angular/router';\r\nimport { QuizExerciseLifecycleButtonsComponent } from './quiz-exercise-lifecycle-buttons.component';\r\nimport { ExerciseCategoriesComponent } from 'app/shared/exercise-categories/exercise-categories.component';\r\nimport { QuizExerciseManageButtonsComponent } from './quiz-exercise-manage-buttons.component';\r\nimport { DeleteButtonDirective } from 'app/shared/delete-dialog/delete-button.directive';\r\nimport { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-quiz-exercise',\r\n    templateUrl: './quiz-exercise.component.html',\r\n    imports: [\r\n        SortDirective,\r\n        FormsModule,\r\n        SortByDirective,\r\n        TranslateDirective,\r\n        FaIconComponent,\r\n        RouterLink,\r\n        QuizExerciseLifecycleButtonsComponent,\r\n        ExerciseCategoriesComponent,\r\n        QuizExerciseManageButtonsComponent,\r\n        DeleteButtonDirective,\r\n        ArtemisDatePipe,\r\n    ],\r\n})\r\nexport class QuizExerciseComponent extends ExerciseComponent {\r\n    protected exerciseService = inject(ExerciseService); // needed in html code\r\n    protected quizExerciseService = inject(QuizExerciseService); // needed in html code\r\n    private accountService = inject(AccountService);\r\n    private alertService = inject(AlertService);\r\n    private sortService = inject(SortService);\r\n\r\n    readonly ActionType = ActionType;\r\n    readonly QuizStatus = QuizStatus;\r\n    readonly QuizMode = QuizMode;\r\n\r\n    @Input() quizExercises: QuizExercise[] = [];\r\n    filteredQuizExercises: QuizExercise[] = [];\r\n\r\n    // Icons\r\n    faSort = faSort;\r\n    faTrash = faTrash;\r\n\r\n    protected get exercises() {\r\n        return this.quizExercises;\r\n    }\r\n\r\n    protected loadExercises(): void {\r\n        this.quizExerciseService.findForCourse(this.courseId).subscribe({\r\n            next: (res: HttpResponse<QuizExercise[]>) => {\r\n                this.quizExercises = res.body!;\r\n                // reconnect exercise with course\r\n                this.quizExercises.forEach((exercise) => {\r\n                    exercise.course = this.course;\r\n                    exercise.isAtLeastTutor = this.accountService.isAtLeastTutorInCourse(exercise.course);\r\n                    exercise.isAtLeastEditor = this.accountService.isAtLeastEditorInCourse(exercise.course);\r\n                    exercise.isAtLeastInstructor = this.accountService.isAtLeastInstructorInCourse(exercise.course);\r\n                    exercise.quizBatches = exercise.quizBatches?.sort((a, b) => (a.id ?? 0) - (b.id ?? 0));\r\n                    exercise.isEditable = isQuizEditable(exercise);\r\n                    this.selectedExercises = [];\r\n                });\r\n                this.setQuizExercisesStatus();\r\n                this.emitExerciseCount(this.quizExercises.length);\r\n                this.applyFilter();\r\n            },\r\n            error: (res: HttpErrorResponse) => this.onError(res),\r\n        });\r\n    }\r\n\r\n    protected applyFilter(): void {\r\n        this.filteredQuizExercises = this.quizExercises.filter((exercise) => this.filter.matchesExercise(exercise));\r\n        this.emitFilteredExerciseCount(this.filteredQuizExercises.length);\r\n    }\r\n\r\n    /**\r\n     * Get the id of the quiz exercise\r\n     * @param _index the index of the quiz (not used at the moment)\r\n     * @param item the quiz exercise of which the id should be returned\r\n     */\r\n    trackId(_index: number, item: QuizExercise) {\r\n        return item.id!;\r\n    }\r\n\r\n    protected getChangeEventName(): string {\r\n        return 'quizExerciseListModification';\r\n    }\r\n\r\n    private onError(error: HttpErrorResponse) {\r\n        this.alertService.error(error.headers.get('X-artemisApp-error')!);\r\n    }\r\n\r\n    /**\r\n     * Convert seconds to full minutes\r\n     * @param seconds the number of seconds\r\n     * @returns the number of full minutes\r\n     */\r\n    fullMinutesForSeconds(seconds: number) {\r\n        return Math.floor(seconds / 60);\r\n    }\r\n\r\n    /**\r\n     * Set the quiz exercise status for all quiz exercises.\r\n     */\r\n    setQuizExercisesStatus() {\r\n        this.quizExercises.forEach((quizExercise) => (quizExercise.status = this.quizExerciseService.getStatus(quizExercise)));\r\n    }\r\n\r\n    /**\r\n     * Do not load all quizExercise if only one has changed\r\n     *\r\n     * @param quizExerciseId\r\n     */\r\n    loadOne(quizExerciseId: number) {\r\n        this.quizExerciseService.find(quizExerciseId).subscribe((res: HttpResponse<QuizExercise>) => {\r\n            this.handleNewQuizExercise(res.body!);\r\n        });\r\n    }\r\n\r\n    handleNewQuizExercise(newQuizExercise: QuizExercise) {\r\n        const index = this.quizExercises.findIndex((quizExercise) => quizExercise.id === newQuizExercise.id);\r\n        newQuizExercise.isAtLeastTutor = this.accountService.isAtLeastTutorInCourse(newQuizExercise.course);\r\n        newQuizExercise.isAtLeastEditor = this.accountService.isAtLeastEditorInCourse(newQuizExercise.course);\r\n        newQuizExercise.isAtLeastInstructor = this.accountService.isAtLeastInstructorInCourse(newQuizExercise.course);\r\n        newQuizExercise.status = this.quizExerciseService.getStatus(newQuizExercise);\r\n        newQuizExercise.quizBatches = newQuizExercise.quizBatches?.sort((a, b) => (a.id ?? 0) - (b.id ?? 0));\r\n        newQuizExercise.isEditable = isQuizEditable(newQuizExercise);\r\n        if (index === -1) {\r\n            this.quizExercises.push(newQuizExercise);\r\n        } else {\r\n            this.quizExercises[index] = newQuizExercise;\r\n        }\r\n        this.applyFilter();\r\n    }\r\n\r\n    public sortRows() {\r\n        this.sortService.sortByProperty(this.quizExercises, this.predicate, this.reverse);\r\n        this.applyFilter();\r\n    }\r\n}\r\n", "@if (quizExercises && filteredQuizExercises.length > 0) {\r\n    <div class=\"table-responsive\">\r\n        <table class=\"table table-striped\">\r\n            <thead>\r\n                <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"reverse\" (sortChange)=\"sortRows()\">\r\n                    @if (course.isAtLeastInstructor) {\r\n                        <th class=\"d-md-table-cell\">\r\n                            <input class=\"form-check-input\" type=\"checkbox\" (change)=\"toggleMultipleExercises(quizExercises)\" [ngModel]=\"allChecked\" />\r\n                        </th>\r\n                    }\r\n                    <th jhiSortBy=\"id\"><span jhiTranslate=\"global.field.id\"></span>&nbsp;<fa-icon [icon]=\"faSort\" /></th>\r\n                    <th jhiSortBy=\"title\"><span jhiTranslate=\"artemisApp.exercise.title\"></span>&nbsp;<fa-icon [icon]=\"faSort\" /></th>\r\n                    <th jhiSortBy=\"status\"><span jhiTranslate=\"artemisApp.quizExercise.status\"></span>&nbsp;<fa-icon [icon]=\"faSort\" /></th>\r\n                    <th jhiSortBy=\"releaseDate\"><span jhiTranslate=\"artemisApp.exercise.release\"></span>&nbsp;<fa-icon [icon]=\"faSort\" /></th>\r\n                    <!-- releaseDate works similar to Exam.visibleDate -->\r\n                    <th jhiSortBy=\"startTime\"><span jhiTranslate=\"artemisApp.exercise.start\"></span>&nbsp;<fa-icon [icon]=\"faSort\" /></th>\r\n                    <!-- startTime works similar to Exam.startDate -->\r\n                    <th jhiSortBy=\"dueDate\"><span jhiTranslate=\"artemisApp.exercise.due\"></span>&nbsp;<fa-icon [icon]=\"faSort\" /></th>\r\n                    <th jhiSortBy=\"duration\"><span jhiTranslate=\"artemisApp.quizExercise.duration\"></span>&nbsp;<fa-icon [icon]=\"faSort\" /></th>\r\n                    <th jhiSortBy=\"maxPoints\"><span jhiTranslate=\"artemisApp.exercise.points\"></span>&nbsp;<fa-icon [icon]=\"faSort\" /></th>\r\n                    <th jhiSortBy=\"includedInOverallScore\"><span jhiTranslate=\"artemisApp.exercise.includedCompletely\"></span>&nbsp;<fa-icon [icon]=\"faSort\" /></th>\r\n                    <th jhiTranslate=\"artemisApp.quizExercise.quizLifecycle\"></th>\r\n                    <th class=\"d-md-table-cell\"><span jhiTranslate=\"artemisApp.exercise.categories\"></span></th>\r\n                    <th></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                @for (quizExercise of filteredQuizExercises; track trackId($index, quizExercise)) {\r\n                    <tr id=\"exercise-card-{{ quizExercise.id }}\">\r\n                        @if (quizExercise.isAtLeastInstructor) {\r\n                            <td class=\"d-md-table-cell\">\r\n                                <input class=\"form-check-input\" type=\"checkbox\" (change)=\"toggleExercise(quizExercise)\" [ngModel]=\"isExerciseSelected(quizExercise)\" />\r\n                            </td>\r\n                        }\r\n                        @if (quizExercise.isAtLeastTutor) {\r\n                            <td>\r\n                                <a [routerLink]=\"['/course-management', quizExercise.course?.id, 'quiz-exercises', quizExercise.id]\">{{ quizExercise.id }} </a>\r\n                            </td>\r\n                            <td>\r\n                                <a [routerLink]=\"['/course-management', quizExercise.course?.id, 'quiz-exercises', quizExercise.id]\">\r\n                                    {{ quizExercise.title }}\r\n                                </a>\r\n                            </td>\r\n                        } @else {\r\n                            <td>{{ quizExercise.id }}</td>\r\n                            <td>{{ quizExercise.title }}</td>\r\n                        }\r\n                        <td>\r\n                            @if (quizExercise.status === QuizStatus.CLOSED) {\r\n                                <span jhiTranslate=\"artemisApp.quizExercise.quizStatus.closed\"></span>\r\n                            }\r\n                            @if (quizExercise.status === QuizStatus.INVISIBLE) {\r\n                                <span jhiTranslate=\"artemisApp.quizExercise.quizStatus.invisible\"></span>\r\n                            }\r\n                            @if (quizExercise.status === QuizStatus.VISIBLE) {\r\n                                <span jhiTranslate=\"artemisApp.quizExercise.quizStatus.visible\"></span>\r\n                            }\r\n                            @if (quizExercise.status === QuizStatus.ACTIVE) {\r\n                                <span jhiTranslate=\"artemisApp.quizExercise.quizStatus.active\"></span>\r\n                            }\r\n                            @if (quizExercise.status === QuizStatus.OPEN_FOR_PRACTICE) {\r\n                                <span jhiTranslate=\"artemisApp.quizExercise.quizStatus.openForPractice\"></span>\r\n                            }\r\n                        </td>\r\n                        <td>{{ quizExercise.releaseDate ? (quizExercise.releaseDate | artemisDate: 'long' : true) : '-' }}</td>\r\n                        <td>{{ quizExercise.quizBatches?.[0]?.startTime ? (quizExercise.quizBatches![0]!.startTime | artemisDate: 'long' : true) : '-' }}</td>\r\n                        <td>{{ quizExercise.dueDate ? (quizExercise.dueDate | artemisDate: 'long' : true) : '-' }}</td>\r\n                        <td>\r\n                            {{ fullMinutesForSeconds(quizExercise.duration!) }}\r\n                            <span jhiTranslate=\"{{ quizExercise.duration! % 60 ? 'artemisApp.quizExercise.minutesShort' : 'artemisApp.quizExercise.minutes' }}\"></span>\r\n                            @if (quizExercise.duration! % 60) {\r\n                                <span>\r\n                                    {{ quizExercise.duration! % 60 }}\r\n                                    <span jhiTranslate=\"artemisApp.quizExercise.secondsShort\"></span>\r\n                                </span>\r\n                            }\r\n                        </td>\r\n                        <td>{{ quizExercise.maxPoints }}</td>\r\n                        <td>{{ exerciseService.isIncludedInScore(quizExercise) }}</td>\r\n                        <td class=\"text-end\">\r\n                            <div>\r\n                                <jhi-quiz-exercise-lifecycle-buttons\r\n                                    [quizExercise]=\"quizExercise\"\r\n                                    (loadOne)=\"loadOne($event)\"\r\n                                    (handleNewQuizExercise)=\"handleNewQuizExercise($event)\"\r\n                                />\r\n                            </div>\r\n                        </td>\r\n                        <td class=\"d-md-table-cell\"><jhi-exercise-categories [exercise]=\"quizExercise\" /></td>\r\n                        <td class=\"text-end\">\r\n                            <jhi-quiz-exercise-manage-buttons [quizExercise]=\"quizExercise\" />\r\n                        </td>\r\n                    </tr>\r\n                }\r\n            </tbody>\r\n        </table>\r\n        @if (selectedExercises.length > 0) {\r\n            <div>\r\n                @if (course.isAtLeastInstructor) {\r\n                    <button\r\n                        jhiDeleteButton\r\n                        [entityTitle]=\"'Delete All Quiz Exercises'\"\r\n                        deleteQuestion=\"artemisApp.exerciseActions.deleteMultipleExercisesQuestion\"\r\n                        (delete)=\"deleteMultipleExercises(selectedExercises, quizExerciseService)\"\r\n                        [dialogError]=\"dialogError$\"\r\n                        id=\"delete-all-quiz\"\r\n                        class=\"mb-1\"\r\n                    >\r\n                        <fa-icon [icon]=\"faTrash\" />\r\n                    </button>\r\n                }\r\n            </div>\r\n        }\r\n    </div>\r\n}\r\n", "import { Component, Input, OnInit, inject } from '@angular/core';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { faFileImport, faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { ExerciseImportWrapperComponent } from 'app/exercises/shared/import/exercise-import-wrapper/exercise-import-wrapper.component';\r\nimport { getIcon } from 'app/entities/exercise.model';\r\nimport { Exercise, ExerciseType } from 'app/entities/exercise.model';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Router, RouterLink } from '@angular/router';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\n\r\n@Component({\r\n    selector: 'jhi-exercise-create-buttons',\r\n    templateUrl: './exercise-create-buttons.component.html',\r\n    imports: [RouterLink, FaIconComponent, TranslateDirective],\r\n})\r\nexport class ExerciseCreateButtonsComponent implements OnInit {\r\n    private router = inject(Router);\r\n    private modalService = inject(NgbModal);\r\n\r\n    @Input() course: Course;\r\n    @Input() exerciseType: ExerciseType;\r\n\r\n    translationLabel: string;\r\n\r\n    faPlus = faPlus;\r\n    faFileImport = faFileImport;\r\n\r\n    getExerciseTypeIcon = getIcon;\r\n\r\n    ngOnInit(): void {\r\n        if (this.exerciseType === ExerciseType.FILE_UPLOAD) {\r\n            this.translationLabel = 'fileUpload';\r\n        } else {\r\n            this.translationLabel = this.exerciseType;\r\n        }\r\n    }\r\n\r\n    openImportModal() {\r\n        const modalRef = this.modalService.open(ExerciseImportWrapperComponent, { size: 'lg', backdrop: 'static' });\r\n        modalRef.componentInstance.exerciseType = this.exerciseType;\r\n        modalRef.result.then((result: Exercise) => {\r\n            this.router.navigate(['course-management', this.course.id, this.exerciseType + '-exercises', result.id, 'import']);\r\n        });\r\n    }\r\n}\r\n", "@if (course?.isAtLeastEditor) {\r\n    <div class=\"d-flex flex-wrap justify-content-end\">\r\n        <button\r\n            [id]=\"'create-' + exerciseType + '-exercise'\"\r\n            class=\"btn btn-primary jh-create-entity text-truncate mb-1 me-1\"\r\n            [routerLink]=\"['/course-management', course.id, this.exerciseType + '-exercises', 'new']\"\r\n            queryParamsHandling=\"merge\"\r\n        >\r\n            <fa-icon [icon]=\"faPlus\" />\r\n            <span [jhiTranslate]=\"'artemisApp.' + translationLabel + 'Exercise.home.createLabel'\">Create new Exercise</span>\r\n            <fa-icon [icon]=\"getExerciseTypeIcon(exerciseType)\" />\r\n        </button>\r\n        <button [id]=\"'import-' + exerciseType + '-exercise'\" class=\"btn btn-primary jh-create-entity text-truncate mb-1 me-1\" (click)=\"openImportModal()\">\r\n            <fa-icon [icon]=\"faFileImport\" />\r\n            <span [jhiTranslate]=\"'artemisApp.' + translationLabel + 'Exercise.home.importLabel'\">Import Exercise</span>\r\n            <fa-icon [icon]=\"getExerciseTypeIcon(exerciseType)\" />\r\n        </button>\r\n    </div>\r\n}\r\n", "import { Component, Input, inject } from '@angular/core';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { ModelingExercise } from 'app/entities/modeling-exercise.model';\r\nimport { ModelingExerciseService } from './modeling-exercise.service';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\nimport { ExerciseComponent } from 'app/exercises/shared/exercise/exercise.component';\r\nimport { onError } from 'app/shared/util/global.utils';\r\nimport { SortService } from 'app/shared/service/sort.service';\r\nimport { ExerciseService } from 'app/exercises/shared/exercise/exercise.service';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { faBook, faPlus, faSort, faTable, faTimes, faTrash, faUsers, faWrench } from '@fortawesome/free-solid-svg-icons';\r\nimport { faListAlt } from '@fortawesome/free-regular-svg-icons';\r\nimport { CourseExerciseService } from 'app/exercises/shared/course-exercises/course-exercise.service';\r\nimport { SortDirective } from 'app/shared/sort/sort.directive';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SortByDirective } from 'app/shared/sort/sort-by.directive';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { RouterLink } from '@angular/router';\r\nimport { ExerciseCategoriesComponent } from 'app/shared/exercise-categories/exercise-categories.component';\r\nimport { DeleteButtonDirective } from 'app/shared/delete-dialog/delete-button.directive';\r\nimport { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-modeling-exercise',\r\n    templateUrl: './modeling-exercise.component.html',\r\n    imports: [SortDirective, FormsModule, SortByDirective, TranslateDirective, FaIconComponent, RouterLink, ExerciseCategoriesComponent, DeleteButtonDirective, ArtemisDatePipe],\r\n})\r\nexport class ModelingExerciseComponent extends ExerciseComponent {\r\n    protected exerciseService = inject(ExerciseService); // needed in html code\r\n    protected modelingExerciseService = inject(ModelingExerciseService); // needed in html code\r\n    private courseExerciseService = inject(CourseExerciseService);\r\n    private alertService = inject(AlertService);\r\n    private accountService = inject(AccountService);\r\n    private sortService = inject(SortService);\r\n\r\n    @Input() modelingExercises: ModelingExercise[] = [];\r\n    filteredModelingExercises: ModelingExercise[];\r\n    // Icons\r\n    faPlus = faPlus;\r\n    faSort = faSort;\r\n    faTable = faTable;\r\n    farListAlt = faListAlt;\r\n    faBook = faBook;\r\n    faUsers = faUsers;\r\n    faWrench = faWrench;\r\n    faTimes = faTimes;\r\n    faTrash = faTrash;\r\n\r\n    protected get exercises() {\r\n        return this.modelingExercises;\r\n    }\r\n\r\n    protected loadExercises(): void {\r\n        this.courseExerciseService.findAllModelingExercisesForCourse(this.courseId).subscribe({\r\n            next: (res: HttpResponse<ModelingExercise[]>) => {\r\n                this.modelingExercises = res.body!;\r\n                // reconnect exercise with course\r\n                this.modelingExercises.forEach((exercise) => {\r\n                    exercise.course = this.course;\r\n                    this.accountService.setAccessRightsForExercise(exercise);\r\n                    this.selectedExercises = [];\r\n                });\r\n                this.applyFilter();\r\n                this.emitExerciseCount(this.modelingExercises.length);\r\n            },\r\n            error: (res: HttpErrorResponse) => onError(this.alertService, res),\r\n        });\r\n    }\r\n\r\n    protected applyFilter(): void {\r\n        this.filteredModelingExercises = this.modelingExercises.filter((exercise) => this.filter.matchesExercise(exercise));\r\n        this.emitFilteredExerciseCount(this.filteredModelingExercises.length);\r\n    }\r\n\r\n    /**\r\n     * Returns the unique identifier for items in the collection\r\n     * @param _index of a modeling exercise in the collection\r\n     * @param item current modeling exercise\r\n     */\r\n    trackId(_index: number, item: ModelingExercise) {\r\n        return item.id;\r\n    }\r\n\r\n    /**\r\n     * Deletes modeling exercise\r\n     * @param modelingExerciseId id of the exercise that will be deleted\r\n     */\r\n    deleteModelingExercise(modelingExerciseId: number) {\r\n        this.modelingExerciseService.delete(modelingExerciseId).subscribe({\r\n            next: () => {\r\n                this.eventManager.broadcast({\r\n                    name: 'modelingExerciseListModification',\r\n                    content: 'Deleted an modelingExercise',\r\n                });\r\n                this.dialogErrorSource.next('');\r\n            },\r\n            error: (error: HttpErrorResponse) => this.dialogErrorSource.next(error.message),\r\n        });\r\n    }\r\n\r\n    protected getChangeEventName(): string {\r\n        return 'modelingExerciseListModification';\r\n    }\r\n\r\n    sortRows() {\r\n        this.sortService.sortByProperty(this.modelingExercises, this.predicate, this.reverse);\r\n        this.applyFilter();\r\n    }\r\n\r\n    /**\r\n     * Used in the template for jhiSort\r\n     */\r\n    callback() {}\r\n}\r\n", "@if (modelingExercises && filteredModelingExercises.length > 0) {\r\n    <div class=\"table-responsive\">\r\n        <table class=\"table table-striped\">\r\n            <thead>\r\n                <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"reverse\" (sortChange)=\"sortRows()\">\r\n                    @if (course.isAtLeastInstructor) {\r\n                        <th class=\"d-md-table-cell\">\r\n                            <input class=\"form-check-input\" type=\"checkbox\" (change)=\"toggleMultipleExercises(modelingExercises)\" [ngModel]=\"allChecked\" />\r\n                        </th>\r\n                    }\r\n                    <th jhiSortBy=\"id\"><span jhiTranslate=\"global.field.id\"></span>&nbsp;<fa-icon [icon]=\"faSort\" /></th>\r\n                    <th jhiSortBy=\"title\"><span jhiTranslate=\"artemisApp.exercise.title\"></span>&nbsp;<fa-icon [icon]=\"faSort\" /></th>\r\n                    <th jhiSortBy=\"releaseDate\"><span jhiTranslate=\"artemisApp.exercise.release\"></span>&nbsp;<fa-icon [icon]=\"faSort\" /></th>\r\n                    <th jhiSortBy=\"dueDate\"><span jhiTranslate=\"artemisApp.exercise.due\"></span>&nbsp;<fa-icon [icon]=\"faSort\" /></th>\r\n                    <th jhiSortBy=\"assessmentDueDate\"><span jhiTranslate=\"artemisApp.exercise.assessmentDue\"></span>&nbsp;<fa-icon [icon]=\"faSort\" /></th>\r\n                    <th jhiSortBy=\"maxPoints\"><span jhiTranslate=\"artemisApp.exercise.points\"></span>&nbsp;<fa-icon [icon]=\"faSort\" /></th>\r\n                    <th jhiSortBy=\"bonusPoints\"><span jhiTranslate=\"artemisApp.exercise.bonus\"></span>&nbsp;<fa-icon [icon]=\"faSort\" /></th>\r\n                    <th jhiSortBy=\"includedInOverallScore\"><span jhiTranslate=\"artemisApp.exercise.includedCompletely\"></span>&nbsp;<fa-icon [icon]=\"faSort\" /></th>\r\n                    @if (course.presentationScore) {\r\n                        <th jhiSortBy=\"presentationScoreEnabled\">\r\n                            <span jhiTranslate=\"artemisApp.exercise.presentationScoreEnabled.title\"></span>&nbsp;<fa-icon [icon]=\"faSort\" />\r\n                        </th>\r\n                    }\r\n                    <th><span jhiTranslate=\"artemisApp.modelingExercise.diagramType\"></span></th>\r\n                    <th class=\"d-md-table-cell\"><span jhiTranslate=\"artemisApp.exercise.categories\"></span></th>\r\n                    <th></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                @for (modelingExercise of filteredModelingExercises; track trackId($index, modelingExercise)) {\r\n                    <tr id=\"{{ 'exercise-card-' + modelingExercise.id }}\">\r\n                        @if (course.isAtLeastInstructor) {\r\n                            <td class=\"d-md-table-cell\">\r\n                                <input class=\"form-check-input\" type=\"checkbox\" (change)=\"toggleExercise(modelingExercise)\" [ngModel]=\"isExerciseSelected(modelingExercise)\" />\r\n                            </td>\r\n                        }\r\n                        <td>\r\n                            @if (modelingExercise.isAtLeastTutor) {\r\n                                <a [routerLink]=\"['/course-management', modelingExercise.course?.id, 'modeling-exercises', modelingExercise.id]\">\r\n                                    {{ modelingExercise.id }}\r\n                                </a>\r\n                            } @else {\r\n                                {{ modelingExercise.id }}\r\n                            }\r\n                        </td>\r\n                        <td id=\"modeling-exercise-{{ modelingExercise.id }}-title\">\r\n                            @if (modelingExercise.isAtLeastTutor) {\r\n                                <a [routerLink]=\"['/course-management', modelingExercise.course?.id, 'modeling-exercises', modelingExercise.id]\">\r\n                                    {{ modelingExercise.title }}\r\n                                </a>\r\n                            } @else {\r\n                                {{ modelingExercise.title }}\r\n                            }\r\n                        </td>\r\n                        <td id=\"modeling-exercise-{{ modelingExercise.id }}-releaseDate\">{{ modelingExercise.releaseDate | artemisDate }}</td>\r\n                        <td id=\"modeling-exercise-{{ modelingExercise.id }}-dueDate\">{{ modelingExercise.dueDate | artemisDate }}</td>\r\n                        <td id=\"modeling-exercise-{{ modelingExercise.id }}-assessmentDueDate\">{{ modelingExercise.assessmentDueDate | artemisDate }}</td>\r\n                        <td id=\"modeling-exercise-{{ modelingExercise.id }}-maxPoints\">{{ modelingExercise.maxPoints }}</td>\r\n                        <td id=\"modeling-exercise-{{ modelingExercise.id }}-bonusPoints\">{{ modelingExercise.bonusPoints }}</td>\r\n                        <td id=\"modeling-exercise-{{ modelingExercise.id }}-included\">{{ exerciseService.isIncludedInScore(modelingExercise) }}</td>\r\n                        @if (course.presentationScore) {\r\n                            <td>{{ modelingExercise.presentationScoreEnabled }}</td>\r\n                        }\r\n                        <td jhiTranslate=\"{{ 'artemisApp.DiagramType.' + modelingExercise.diagramType }}\">{{ modelingExercise.diagramType }}</td>\r\n                        <td class=\"d-md-table-cell\"><jhi-exercise-categories [exercise]=\"modelingExercise\" /></td>\r\n                        <td class=\"text-end\">\r\n                            <div class=\"btn-group flex-btn-group-container\">\r\n                                <!-- Participations -->\r\n                                @if (modelingExercise.isAtLeastTutor) {\r\n                                    <a\r\n                                        [routerLink]=\"['/course-management', courseId, 'modeling-exercises', modelingExercise.id, 'participations']\"\r\n                                        class=\"btn btn-primary btn-sm me-1\"\r\n                                    >\r\n                                        <fa-icon [icon]=\"farListAlt\" />\r\n                                        <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.exercise.participations\"></span>\r\n                                    </a>\r\n                                }\r\n                                <!-- Scores -->\r\n                                @if (modelingExercise.isAtLeastTutor) {\r\n                                    <a\r\n                                        [routerLink]=\"['/course-management', modelingExercise.course?.id, 'modeling-exercises', modelingExercise.id, 'scores']\"\r\n                                        class=\"btn btn-info btn-sm me-1\"\r\n                                    >\r\n                                        <fa-icon [icon]=\"faTable\" />\r\n                                        <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.scores\"></span>\r\n                                    </a>\r\n                                }\r\n                                <!-- Example Submission -->\r\n                                @if (modelingExercise.isAtLeastEditor) {\r\n                                    <a\r\n                                        [routerLink]=\"['/course-management', courseId, 'modeling-exercises', modelingExercise.id, 'example-submissions']\"\r\n                                        class=\"btn btn-success btn-sm me-1\"\r\n                                    >\r\n                                        <fa-icon [icon]=\"faBook\" />\r\n                                        <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.exampleSubmissions\"></span>\r\n                                    </a>\r\n                                }\r\n                                <!-- Teams -->\r\n                                @if (modelingExercise.teamMode && modelingExercise.isAtLeastTutor) {\r\n                                    <a\r\n                                        [routerLink]=\"['/course-management', modelingExercise.course?.id, 'exercises', modelingExercise.id, 'teams']\"\r\n                                        class=\"btn btn-primary btn-sm me-1\"\r\n                                    >\r\n                                        <fa-icon [icon]=\"faUsers\" />\r\n                                        <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.exercise.teams\"></span>\r\n                                    </a>\r\n                                }\r\n                                <!-- Edit -->\r\n                                @if (modelingExercise.isAtLeastEditor) {\r\n                                    <a\r\n                                        [routerLink]=\"['/course-management', modelingExercise.course?.id, 'modeling-exercises', modelingExercise.id, 'edit']\"\r\n                                        class=\"btn btn-warning btn-sm me-1\"\r\n                                    >\r\n                                        <fa-icon [icon]=\"faWrench\" />\r\n                                        <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.edit\"></span>\r\n                                    </a>\r\n                                }\r\n                                <!-- Delete -->\r\n                                @if (modelingExercise.isAtLeastInstructor) {\r\n                                    <button\r\n                                        id=\"delete-exercise\"\r\n                                        jhiDeleteButton\r\n                                        [entityTitle]=\"modelingExercise.title || ''\"\r\n                                        deleteQuestion=\"artemisApp.exercise.delete.question\"\r\n                                        deleteConfirmationText=\"artemisApp.exercise.delete.typeNameToConfirm\"\r\n                                        (delete)=\"deleteModelingExercise(modelingExercise.id!)\"\r\n                                        [dialogError]=\"dialogError$\"\r\n                                    >\r\n                                        <fa-icon [icon]=\"faTrash\" />\r\n                                    </button>\r\n                                }\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                }\r\n            </tbody>\r\n        </table>\r\n        @if (selectedExercises.length > 0) {\r\n            <div>\r\n                @if (course.isAtLeastInstructor) {\r\n                    <button\r\n                        jhiDeleteButton\r\n                        [entityTitle]=\"'Delete All Modeling Exercises'\"\r\n                        deleteQuestion=\"artemisApp.exerciseActions.deleteMultipleExercisesQuestion\"\r\n                        (delete)=\"deleteMultipleExercises(selectedExercises, modelingExerciseService)\"\r\n                        [dialogError]=\"dialogError$\"\r\n                        id=\"delete-all-quiz\"\r\n                        class=\"mb-1\"\r\n                    >\r\n                        <fa-icon [icon]=\"faTrash\" />\r\n                    </button>\r\n                }\r\n            </div>\r\n        }\r\n    </div>\r\n}\r\n", "import { Component, Input, inject } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Subject } from 'rxjs';\r\nimport { TextExerciseService } from 'app/exercises/text/manage/text-exercise/text-exercise.service';\r\nimport { TextExercise } from 'app/entities/text/text-exercise.model';\r\nimport { EventManager } from 'app/core/util/event-manager.service';\r\nimport { faBook, faTable, faTrash, faUsers, faWrench } from '@fortawesome/free-solid-svg-icons';\r\nimport { faListAlt } from '@fortawesome/free-regular-svg-icons';\r\nimport { RouterLink } from '@angular/router';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { DeleteButtonDirective } from 'app/shared/delete-dialog/delete-button.directive';\r\n\r\n@Component({\r\n    selector: 'jhi-text-exercise-row-buttons',\r\n    templateUrl: './text-exercise-row-buttons.component.html',\r\n    imports: [RouterLink, FaIconComponent, TranslateDirective, DeleteButtonDirective],\r\n})\r\nexport class TextExerciseRowButtonsComponent {\r\n    private eventManager = inject(EventManager);\r\n    private textExerciseService = inject(TextExerciseService);\r\n\r\n    @Input() courseId: number;\r\n    @Input() exercise: TextExercise;\r\n    private dialogErrorSource = new Subject<string>();\r\n    dialogError$ = this.dialogErrorSource.asObservable();\r\n\r\n    // Icons\r\n    faTrash = faTrash;\r\n    faBook = faBook;\r\n    faWrench = faWrench;\r\n    faUsers = faUsers;\r\n    faTable = faTable;\r\n    farListAlt = faListAlt;\r\n\r\n    deleteExercise() {\r\n        this.textExerciseService.delete(this.exercise.id!).subscribe({\r\n            next: () => {\r\n                this.eventManager.broadcast({\r\n                    name: 'textExerciseListModification',\r\n                    content: 'Deleted a textExercise',\r\n                });\r\n                this.dialogErrorSource.next('');\r\n            },\r\n            error: (error: HttpErrorResponse) => this.dialogErrorSource.next(error.message),\r\n        });\r\n    }\r\n}\r\n", "<div class=\"btn-group flex-btn-group-container\">\r\n    <!-- Participations -->\r\n    @if (exercise.isAtLeastTutor) {\r\n        <a [routerLink]=\"['/course-management', courseId, exercise.type + '-exercises', exercise.id, 'participations']\" class=\"btn btn-primary btn-sm me-1\">\r\n            <fa-icon [icon]=\"farListAlt\" />\r\n            <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.exercise.participations\"></span>\r\n        </a>\r\n    }\r\n    <!-- Scores -->\r\n    @if (exercise.isAtLeastTutor) {\r\n        <a [routerLink]=\"['/course-management', courseId, exercise.type + '-exercises', exercise.id, 'scores']\" class=\"btn btn-info btn-sm me-1\">\r\n            <fa-icon [icon]=\"faTable\" />\r\n            <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.scores\"></span>\r\n        </a>\r\n    }\r\n    <!-- Example Submission -->\r\n    @if (exercise.isAtLeastEditor) {\r\n        <a [routerLink]=\"['/course-management', courseId, exercise.type + '-exercises', exercise.id, 'example-submissions']\" class=\"btn btn-success btn-sm me-1\">\r\n            <fa-icon [icon]=\"faBook\" />\r\n            <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.exampleSubmissions\"></span>\r\n        </a>\r\n    }\r\n    <!-- Teams -->\r\n    @if (exercise.teamMode && exercise.isAtLeastTutor) {\r\n        <a [routerLink]=\"['/course-management', courseId, 'exercises', exercise.id, 'teams']\" class=\"btn btn-primary btn-sm me-1\">\r\n            <fa-icon [icon]=\"faUsers\" />\r\n            <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.exercise.teams\"></span>\r\n        </a>\r\n    }\r\n    <!-- Edit -->\r\n    @if (exercise.isAtLeastEditor) {\r\n        <a [routerLink]=\"['/course-management', courseId, exercise.type + '-exercises', exercise.id, 'edit']\" class=\"btn btn-warning btn-sm me-1\">\r\n            <fa-icon [icon]=\"faWrench\" />\r\n            <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.edit\"></span>\r\n        </a>\r\n    }\r\n    <!-- Delete -->\r\n    @if (exercise.isAtLeastInstructor) {\r\n        <button\r\n            id=\"delete-exercise\"\r\n            jhiDeleteButton\r\n            [entityTitle]=\"exercise.title || ''\"\r\n            deleteQuestion=\"artemisApp.exercise.delete.question\"\r\n            deleteConfirmationText=\"artemisApp.exercise.delete.typeNameToConfirm\"\r\n            (delete)=\"deleteExercise()\"\r\n            [dialogError]=\"dialogError$\"\r\n        >\r\n            <fa-icon [icon]=\"faTrash\" />\r\n        </button>\r\n    }\r\n</div>\r\n", "import { Component, Input, inject } from '@angular/core';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { ExerciseType } from 'app/entities/exercise.model';\r\nimport { TextExercise } from 'app/entities/text/text-exercise.model';\r\nimport { TextExerciseService } from './text-exercise.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Router, RouterLink } from '@angular/router';\r\nimport { ExerciseComponent } from 'app/exercises/shared/exercise/exercise.component';\r\nimport { onError } from 'app/shared/util/global.utils';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\nimport { SortService } from 'app/shared/service/sort.service';\r\nimport { ExerciseService } from 'app/exercises/shared/exercise/exercise.service';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { faPlus, faSort, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { CourseExerciseService } from 'app/exercises/shared/course-exercises/course-exercise.service';\r\nimport { ExerciseImportWrapperComponent } from 'app/exercises/shared/import/exercise-import-wrapper/exercise-import-wrapper.component';\r\nimport { SortDirective } from 'app/shared/sort/sort.directive';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SortByDirective } from 'app/shared/sort/sort-by.directive';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { ExerciseCategoriesComponent } from 'app/shared/exercise-categories/exercise-categories.component';\r\nimport { TextExerciseRowButtonsComponent } from './text-exercise-row-buttons.component';\r\nimport { DeleteButtonDirective } from 'app/shared/delete-dialog/delete-button.directive';\r\nimport { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-text-exercise',\r\n    templateUrl: './text-exercise.component.html',\r\n    imports: [\r\n        SortDirective,\r\n        FormsModule,\r\n        SortByDirective,\r\n        TranslateDirective,\r\n        FaIconComponent,\r\n        RouterLink,\r\n        ExerciseCategoriesComponent,\r\n        TextExerciseRowButtonsComponent,\r\n        DeleteButtonDirective,\r\n        ArtemisDatePipe,\r\n    ],\r\n})\r\nexport class TextExerciseComponent extends ExerciseComponent {\r\n    protected exerciseService = inject(ExerciseService); // needed in html code\r\n    protected textExerciseService = inject(TextExerciseService); // needed in html code\r\n    private router = inject(Router);\r\n    private courseExerciseService = inject(CourseExerciseService);\r\n    private modalService = inject(NgbModal);\r\n    private alertService = inject(AlertService);\r\n    private sortService = inject(SortService);\r\n    private accountService = inject(AccountService);\r\n\r\n    @Input() textExercises: TextExercise[] = [];\r\n    filteredTextExercises: TextExercise[] = [];\r\n\r\n    // Icons\r\n    faSort = faSort;\r\n    faPlus = faPlus;\r\n    faTrash = faTrash;\r\n\r\n    protected get exercises() {\r\n        return this.textExercises;\r\n    }\r\n\r\n    protected loadExercises(): void {\r\n        this.courseExerciseService.findAllTextExercisesForCourse(this.courseId).subscribe({\r\n            next: (res: HttpResponse<TextExercise[]>) => {\r\n                this.textExercises = res.body!;\r\n\r\n                // reconnect exercise with course\r\n                this.textExercises.forEach((exercise) => {\r\n                    exercise.course = this.course;\r\n                    this.accountService.setAccessRightsForExercise(exercise);\r\n                    this.selectedExercises = [];\r\n                });\r\n                this.applyFilter();\r\n                this.emitExerciseCount(this.textExercises.length);\r\n            },\r\n            error: (res: HttpErrorResponse) => onError(this.alertService, res),\r\n        });\r\n    }\r\n\r\n    protected applyFilter(): void {\r\n        this.filteredTextExercises = this.textExercises.filter((exercise) => this.filter.matchesExercise(exercise));\r\n        this.emitFilteredExerciseCount(this.filteredTextExercises.length);\r\n    }\r\n\r\n    /**\r\n     * Returns the unique identifier for items in the collection\r\n     * @param _index of a text exercise in the collection\r\n     * @param item current text exercise\r\n     */\r\n    trackId(_index: number, item: TextExercise) {\r\n        return item.id;\r\n    }\r\n\r\n    protected getChangeEventName(): string {\r\n        return 'textExerciseListModification';\r\n    }\r\n\r\n    sortRows() {\r\n        this.sortService.sortByProperty(this.textExercises, this.predicate, this.reverse);\r\n        this.applyFilter();\r\n    }\r\n\r\n    /**\r\n     * Used in the template for jhiSort\r\n     */\r\n    callback() {}\r\n\r\n    openImportModal() {\r\n        const modalRef = this.modalService.open(ExerciseImportWrapperComponent, { size: 'lg', backdrop: 'static' });\r\n        modalRef.componentInstance.exerciseType = ExerciseType.TEXT;\r\n        modalRef.result.then((result: TextExercise) => {\r\n            this.router.navigate(['course-management', this.courseId, 'text-exercises', result.id, 'import']);\r\n        });\r\n    }\r\n}\r\n", "@if (textExercises && filteredTextExercises.length > 0) {\r\n    <div class=\"table-responsive\">\r\n        <table class=\"table table-striped\">\r\n            <thead>\r\n                <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"reverse\" (sortChange)=\"sortRows()\">\r\n                    @if (course.isAtLeastInstructor) {\r\n                        <th class=\"d-md-table-cell\">\r\n                            <input class=\"form-check-input\" type=\"checkbox\" (change)=\"toggleMultipleExercises(textExercises)\" [ngModel]=\"allChecked\" />\r\n                        </th>\r\n                    }\r\n                    <th jhiSortBy=\"id\"><span jhiTranslate=\"global.field.id\"></span>&nbsp;<fa-icon [icon]=\"faSort\" /></th>\r\n                    <th jhiSortBy=\"title\"><span jhiTranslate=\"artemisApp.exercise.title\"></span>&nbsp;<fa-icon [icon]=\"faSort\" /></th>\r\n                    <th jhiSortBy=\"releaseDate\"><span jhiTranslate=\"artemisApp.exercise.release\"></span>&nbsp;<fa-icon [icon]=\"faSort\" /></th>\r\n                    <th jhiSortBy=\"dueDate\"><span jhiTranslate=\"artemisApp.exercise.due\"></span>&nbsp;<fa-icon [icon]=\"faSort\" /></th>\r\n                    <th jhiSortBy=\"assessmentDueDate\"><span jhiTranslate=\"artemisApp.exercise.assessmentDue\"></span>&nbsp;<fa-icon [icon]=\"faSort\" /></th>\r\n                    <th jhiSortBy=\"maxPoints\"><span jhiTranslate=\"artemisApp.exercise.points\"></span>&nbsp;<fa-icon [icon]=\"faSort\" /></th>\r\n                    <th jhiSortBy=\"bonusPoints\"><span jhiTranslate=\"artemisApp.exercise.bonus\"></span>&nbsp;<fa-icon [icon]=\"faSort\" /></th>\r\n                    <th jhiSortBy=\"includedInOverallScore\"><span jhiTranslate=\"artemisApp.exercise.includedCompletely\"></span>&nbsp;<fa-icon [icon]=\"faSort\" /></th>\r\n                    @if (course.presentationScore) {\r\n                        <th jhiSortBy=\"presentationScoreEnabled\">\r\n                            <span jhiTranslate=\"artemisApp.exercise.presentationScoreEnabled.title\"></span>&nbsp;<fa-icon [icon]=\"faSort\" />\r\n                        </th>\r\n                    }\r\n                    <th class=\"d-md-table-cell\"><span jhiTranslate=\"artemisApp.exercise.categories\"></span></th>\r\n                    <th></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody class=\"markdown-preview\">\r\n                @for (textExercise of filteredTextExercises; track trackId($index, textExercise)) {\r\n                    <tr id=\"exercise-card-{{ textExercise.id }}\">\r\n                        @if (course.isAtLeastInstructor) {\r\n                            <td class=\"d-md-table-cell\">\r\n                                <input class=\"form-check-input\" type=\"checkbox\" (change)=\"toggleExercise(textExercise)\" [ngModel]=\"isExerciseSelected(textExercise)\" />\r\n                            </td>\r\n                        }\r\n                        <td>\r\n                            @if (textExercise.isAtLeastTutor) {\r\n                                <a [routerLink]=\"['/course-management', course.id, 'text-exercises', textExercise.id]\">{{ textExercise.id }}</a>\r\n                            } @else {\r\n                                {{ textExercise.id }}\r\n                            }\r\n                        </td>\r\n                        <td>\r\n                            @if (textExercise.isAtLeastTutor) {\r\n                                <a [routerLink]=\"['/course-management', course.id, 'text-exercises', textExercise.id]\">{{ textExercise.title }}</a>\r\n                            } @else {\r\n                                {{ textExercise.title }}\r\n                            }\r\n                        </td>\r\n                        <td>{{ textExercise.releaseDate | artemisDate }}</td>\r\n                        <td>{{ textExercise.dueDate | artemisDate }}</td>\r\n                        <td>{{ textExercise.assessmentDueDate | artemisDate }}</td>\r\n                        <td>{{ textExercise.maxPoints }}</td>\r\n                        <td>{{ textExercise.bonusPoints }}</td>\r\n                        <td>{{ exerciseService.isIncludedInScore(textExercise) }}</td>\r\n                        @if (course.presentationScore) {\r\n                            <td>{{ textExercise.presentationScoreEnabled }}</td>\r\n                        }\r\n                        <td class=\"d-md-table-cell\"><jhi-exercise-categories [exercise]=\"textExercise\" /></td>\r\n                        <td class=\"text-end\">\r\n                            <jhi-text-exercise-row-buttons [courseId]=\"courseId\" [exercise]=\"textExercise\" />\r\n                        </td>\r\n                    </tr>\r\n                }\r\n            </tbody>\r\n        </table>\r\n        @if (selectedExercises.length > 0) {\r\n            <div>\r\n                @if (course.isAtLeastInstructor) {\r\n                    <button\r\n                        jhiDeleteButton\r\n                        [entityTitle]=\"'Delete All Text Exercises'\"\r\n                        deleteQuestion=\"artemisApp.exerciseActions.deleteMultipleExercisesQuestion\"\r\n                        (delete)=\"deleteMultipleExercises(selectedExercises, textExerciseService)\"\r\n                        [dialogError]=\"dialogError$\"\r\n                        id=\"delete-all-quiz\"\r\n                        class=\"mb-1\"\r\n                    >\r\n                        <fa-icon [icon]=\"faTrash\" />\r\n                    </button>\r\n                }\r\n            </div>\r\n        }\r\n    </div>\r\n}\r\n", "import { Component, Input, inject } from '@angular/core';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { filter } from 'rxjs/operators';\r\nimport { FileUploadExercise } from 'app/entities/file-upload-exercise.model';\r\nimport { FileUploadExerciseService } from './file-upload-exercise.service';\r\nimport { ExerciseComponent } from 'app/exercises/shared/exercise/exercise.component';\r\nimport { onError } from 'app/shared/util/global.utils';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\nimport { SortService } from 'app/shared/service/sort.service';\r\nimport { ExerciseService } from 'app/exercises/shared/exercise/exercise.service';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { faBook, faPlus, faSort, faTable, faTrash, faUsers, faWrench } from '@fortawesome/free-solid-svg-icons';\r\nimport { faListAlt } from '@fortawesome/free-regular-svg-icons';\r\nimport { CourseExerciseService } from 'app/exercises/shared/course-exercises/course-exercise.service';\r\nimport { SortDirective } from 'app/shared/sort/sort.directive';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SortByDirective } from 'app/shared/sort/sort-by.directive';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { RouterLink } from '@angular/router';\r\nimport { ExerciseCategoriesComponent } from 'app/shared/exercise-categories/exercise-categories.component';\r\nimport { DeleteButtonDirective } from 'app/shared/delete-dialog/delete-button.directive';\r\nimport { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-file-upload-exercise',\r\n    templateUrl: './file-upload-exercise.component.html',\r\n    imports: [SortDirective, FormsModule, SortByDirective, TranslateDirective, FaIconComponent, RouterLink, ExerciseCategoriesComponent, DeleteButtonDirective, ArtemisDatePipe],\r\n})\r\nexport class FileUploadExerciseComponent extends ExerciseComponent {\r\n    protected exerciseService = inject(ExerciseService); // needed in html code\r\n    protected fileUploadExerciseService = inject(FileUploadExerciseService); // needed in html code\r\n    private courseExerciseService = inject(CourseExerciseService);\r\n    private alertService = inject(AlertService);\r\n    private accountService = inject(AccountService);\r\n    private sortService = inject(SortService);\r\n\r\n    @Input() fileUploadExercises: FileUploadExercise[] = [];\r\n    filteredFileUploadExercises: FileUploadExercise[] = [];\r\n\r\n    // Icons\r\n    faSort = faSort;\r\n    faPlus = faPlus;\r\n    faTrash = faTrash;\r\n    faBook = faBook;\r\n    faWrench = faWrench;\r\n    faUsers = faUsers;\r\n    faTable = faTable;\r\n    farListAlt = faListAlt;\r\n\r\n    protected get exercises() {\r\n        return this.fileUploadExercises;\r\n    }\r\n\r\n    protected loadExercises(): void {\r\n        this.courseExerciseService\r\n            .findAllFileUploadExercisesForCourse(this.courseId)\r\n            .pipe(filter((res) => !!res.body))\r\n            .subscribe({\r\n                next: (res: HttpResponse<FileUploadExercise[]>) => {\r\n                    this.fileUploadExercises = res.body!;\r\n                    // reconnect exercise with course\r\n                    this.fileUploadExercises.forEach((exercise) => {\r\n                        exercise.course = this.course;\r\n                        this.accountService.setAccessRightsForExercise(exercise);\r\n                        this.selectedExercises = [];\r\n                    });\r\n                    this.emitExerciseCount(this.fileUploadExercises.length);\r\n                    this.applyFilter();\r\n                },\r\n                error: (res: HttpErrorResponse) => onError(this.alertService, res),\r\n            });\r\n    }\r\n\r\n    protected applyFilter(): void {\r\n        this.filteredFileUploadExercises = this.fileUploadExercises.filter((exercise) => this.filter.matchesExercise(exercise));\r\n        this.emitFilteredExerciseCount(this.filteredFileUploadExercises.length);\r\n    }\r\n\r\n    /**\r\n     * Returns the unique identifier for items in the collection\r\n     * @param _index of a file upload exercise in the collection\r\n     * @param item current file upload exercise\r\n     */\r\n    trackId(_index: number, item: FileUploadExercise) {\r\n        return item.id;\r\n    }\r\n\r\n    /**\r\n     * Deletes file upload exercise\r\n     * @param fileUploadExerciseId id of the exercise that will be deleted\r\n     */\r\n    deleteFileUploadExercise(fileUploadExerciseId: number) {\r\n        this.fileUploadExerciseService.delete(fileUploadExerciseId).subscribe({\r\n            next: () => {\r\n                this.eventManager.broadcast({\r\n                    name: 'fileUploadExerciseListModification',\r\n                    content: 'Deleted an fileUploadExercise',\r\n                });\r\n                this.dialogErrorSource.next('');\r\n            },\r\n            error: (error: HttpErrorResponse) => this.dialogErrorSource.next(error.message),\r\n        });\r\n    }\r\n\r\n    protected getChangeEventName(): string {\r\n        return 'fileUploadExerciseListModification';\r\n    }\r\n\r\n    sortRows() {\r\n        this.sortService.sortByProperty(this.fileUploadExercises, this.predicate, this.reverse);\r\n        this.applyFilter();\r\n    }\r\n\r\n    /**\r\n     * Used in the template for jhiSort\r\n     */\r\n    callback() {}\r\n}\r\n", "@if (fileUploadExercises && filteredFileUploadExercises.length > 0) {\r\n    <div class=\"table-responsive\">\r\n        <table class=\"table table-striped\">\r\n            <thead>\r\n                <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"reverse\" (sortChange)=\"sortRows()\">\r\n                    @if (course.isAtLeastInstructor) {\r\n                        <th class=\"d-md-table-cell\">\r\n                            <input class=\"form-check-input\" type=\"checkbox\" (change)=\"toggleMultipleExercises(fileUploadExercises)\" [ngModel]=\"allChecked\" />\r\n                        </th>\r\n                    }\r\n                    <th jhiSortBy=\"id\"><span jhiTranslate=\"global.field.id\"></span>&nbsp;<fa-icon [icon]=\"faSort\" /></th>\r\n                    <th jhiSortBy=\"title\"><span jhiTranslate=\"artemisApp.exercise.title\"></span>&nbsp;<fa-icon [icon]=\"faSort\" /></th>\r\n                    <th jhiSortBy=\"releaseDate\"><span jhiTranslate=\"artemisApp.exercise.release\"></span>&nbsp;<fa-icon [icon]=\"faSort\" /></th>\r\n                    <th jhiSortBy=\"dueDate\"><span jhiTranslate=\"artemisApp.exercise.due\"></span>&nbsp;<fa-icon [icon]=\"faSort\" /></th>\r\n                    <th jhiSortBy=\"assessmentDueDate\"><span jhiTranslate=\"artemisApp.exercise.assessmentDue\"></span>&nbsp;<fa-icon [icon]=\"faSort\" /></th>\r\n                    <th jhiSortBy=\"maxPoints\"><span jhiTranslate=\"artemisApp.exercise.points\"></span>&nbsp;<fa-icon [icon]=\"faSort\" /></th>\r\n                    <th jhiSortBy=\"bonusPoints\"><span jhiTranslate=\"artemisApp.exercise.bonus\"></span>&nbsp;<fa-icon [icon]=\"faSort\" /></th>\r\n                    <th jhiSortBy=\"includedInOverallScore\"><span jhiTranslate=\"artemisApp.exercise.includedCompletely\"></span>&nbsp;<fa-icon [icon]=\"faSort\" /></th>\r\n                    @if (course.presentationScore) {\r\n                        <th jhiSortBy=\"presentationScoreEnabled\">\r\n                            <span jhiTranslate=\"artemisApp.exercise.presentationScoreEnabled.title\"></span>&nbsp;<fa-icon [icon]=\"faSort\" />\r\n                        </th>\r\n                    }\r\n                    <th><span jhiTranslate=\"artemisApp.fileUploadExercise.filePattern\"></span></th>\r\n                    <th class=\"d-md-table-cell\"><span jhiTranslate=\"artemisApp.exercise.categories\"></span></th>\r\n                    <th></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody class=\"markdown-preview\">\r\n                @for (fileUploadExercise of filteredFileUploadExercises; track trackId($index, fileUploadExercise)) {\r\n                    <tr id=\"exercise-card-{{ fileUploadExercise.id }}\">\r\n                        @if (course.isAtLeastInstructor) {\r\n                            <td class=\"d-md-table-cell\">\r\n                                <input class=\"form-check-input\" type=\"checkbox\" (change)=\"toggleExercise(fileUploadExercise)\" [ngModel]=\"isExerciseSelected(fileUploadExercise)\" />\r\n                            </td>\r\n                        }\r\n                        <td>\r\n                            @if (fileUploadExercise.isAtLeastTutor) {\r\n                                <a [routerLink]=\"['/course-management', courseId, 'file-upload-exercises', fileUploadExercise.id]\">\r\n                                    {{ fileUploadExercise.id }}\r\n                                </a>\r\n                            } @else {\r\n                                {{ fileUploadExercise.id }}\r\n                            }\r\n                        </td>\r\n                        <td>\r\n                            @if (fileUploadExercise.isAtLeastTutor) {\r\n                                <a [routerLink]=\"['/course-management', courseId, 'file-upload-exercises', fileUploadExercise.id]\">\r\n                                    {{ fileUploadExercise.title }}\r\n                                </a>\r\n                            } @else {\r\n                                {{ fileUploadExercise.title }}\r\n                            }\r\n                        </td>\r\n                        <td>{{ fileUploadExercise.releaseDate | artemisDate }}</td>\r\n                        <td>{{ fileUploadExercise.dueDate | artemisDate }}</td>\r\n                        <td>{{ fileUploadExercise.assessmentDueDate | artemisDate }}</td>\r\n                        <td>{{ fileUploadExercise.maxPoints }}</td>\r\n                        <td>{{ fileUploadExercise.bonusPoints }}</td>\r\n                        <td>{{ exerciseService.isIncludedInScore(fileUploadExercise) }}</td>\r\n                        @if (course.presentationScore) {\r\n                            <td>{{ fileUploadExercise.presentationScoreEnabled }}</td>\r\n                        }\r\n                        <td>{{ fileUploadExercise.filePattern }}</td>\r\n                        <td class=\"d-md-table-cell\"><jhi-exercise-categories [exercise]=\"fileUploadExercise\" /></td>\r\n                        <td class=\"text-end\">\r\n                            <div class=\"btn-group flex-btn-group-container\">\r\n                                @if (fileUploadExercise.isAtLeastTutor) {\r\n                                    <a\r\n                                        [routerLink]=\"['/course-management', courseId, 'file-upload-exercises', fileUploadExercise.id, 'participations']\"\r\n                                        class=\"btn btn-primary btn-sm me-1\"\r\n                                    >\r\n                                        <fa-icon [icon]=\"farListAlt\" />\r\n                                        <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.exercise.participations\"></span>\r\n                                    </a>\r\n                                }\r\n                                @if (fileUploadExercise.isAtLeastTutor) {\r\n                                    <a [routerLink]=\"['/course-management', courseId, 'file-upload-exercises', fileUploadExercise.id, 'scores']\" class=\"btn btn-info btn-sm me-1\">\r\n                                        <fa-icon [icon]=\"faTable\" />\r\n                                        <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.scores\"></span>\r\n                                    </a>\r\n                                }\r\n                                @if (fileUploadExercise.teamMode && fileUploadExercise.isAtLeastTutor) {\r\n                                    <a [routerLink]=\"['/course-management', courseId, 'exercises', fileUploadExercise.id, 'teams']\" class=\"btn btn-primary btn-sm me-1\">\r\n                                        <fa-icon [icon]=\"faUsers\" />\r\n                                        <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.exercise.teams\"></span>\r\n                                    </a>\r\n                                }\r\n                                @if (fileUploadExercise.isAtLeastEditor) {\r\n                                    <a [routerLink]=\"['/course-management', courseId, 'file-upload-exercises', fileUploadExercise.id, 'edit']\" class=\"btn btn-warning btn-sm me-1\">\r\n                                        <fa-icon [icon]=\"faWrench\" />\r\n                                        <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.edit\"></span>\r\n                                    </a>\r\n                                }\r\n                                @if (fileUploadExercise.isAtLeastInstructor) {\r\n                                    <button\r\n                                        id=\"delete-exercise\"\r\n                                        jhiDeleteButton\r\n                                        [entityTitle]=\"fileUploadExercise.title!\"\r\n                                        deleteQuestion=\"artemisApp.exercise.delete.question\"\r\n                                        deleteConfirmationText=\"artemisApp.exercise.delete.typeNameToConfirm\"\r\n                                        (delete)=\"deleteFileUploadExercise(fileUploadExercise.id!)\"\r\n                                        [dialogError]=\"dialogError$\"\r\n                                    >\r\n                                        <fa-icon [icon]=\"faTrash\" />\r\n                                    </button>\r\n                                }\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                }\r\n            </tbody>\r\n        </table>\r\n        @if (selectedExercises.length > 0) {\r\n            <div>\r\n                @if (course.isAtLeastInstructor) {\r\n                    <button\r\n                        jhiDeleteButton\r\n                        [entityTitle]=\"'Delete All File Upload Exercises'\"\r\n                        deleteQuestion=\"artemisApp.exerciseActions.deleteMultipleExercisesQuestion\"\r\n                        (delete)=\"deleteMultipleExercises(selectedExercises, fileUploadExerciseService)\"\r\n                        [dialogError]=\"dialogError$\"\r\n                        id=\"delete-all-quiz\"\r\n                        class=\"mb-1\"\r\n                    >\r\n                        <fa-icon [icon]=\"faTrash\" />\r\n                    </button>\r\n                }\r\n            </div>\r\n        }\r\n    </div>\r\n}\r\n", "import { Component, OnInit, inject } from '@angular/core';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ExerciseFilter } from 'app/entities/exercise-filter.model';\r\nimport { DocumentationType } from 'app/shared/components/documentation-button/documentation-button.component';\r\nimport { ExerciseType } from 'app/entities/exercise.model';\r\nimport { DocumentationButtonComponent } from 'app/shared/components/documentation-button/documentation-button.component';\r\nimport { CourseManagementExercisesSearchComponent } from './course-management-exercises-search.component';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { CourseExerciseCardComponent } from './course-exercise-card.component';\r\nimport { ProgrammingExerciseCreateButtonsComponent } from 'app/exercises/programming/manage/programming-exercise-create-buttons.component';\r\nimport { ProgrammingExerciseComponent } from 'app/exercises/programming/manage/programming-exercise.component';\r\nimport { QuizExerciseCreateButtonsComponent } from 'app/exercises/quiz/manage/quiz-exercise-create-buttons.component';\r\nimport { QuizExerciseComponent } from 'app/exercises/quiz/manage/quiz-exercise.component';\r\nimport { ExerciseCreateButtonsComponent } from 'app/exercises/shared/manage/exercise-create-buttons.component';\r\nimport { ModelingExerciseComponent } from 'app/exercises/modeling/manage/modeling-exercise.component';\r\nimport { TextExerciseComponent } from 'app/exercises/text/manage/text-exercise/text-exercise.component';\r\nimport { FileUploadExerciseComponent } from 'app/exercises/file-upload/manage/file-upload-exercise.component';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-course-management-exercises',\r\n    templateUrl: './course-management-exercises.component.html',\r\n    imports: [\r\n        DocumentationButtonComponent,\r\n        CourseManagementExercisesSearchComponent,\r\n        TranslateDirective,\r\n        CourseExerciseCardComponent,\r\n        // TODO: the extension point for Orion does not work with Angular 19, we need to find a different solution\r\n        // ExtensionPointDirective,\r\n        ProgrammingExerciseCreateButtonsComponent,\r\n        ProgrammingExerciseComponent,\r\n        QuizExerciseCreateButtonsComponent,\r\n        QuizExerciseComponent,\r\n        ExerciseCreateButtonsComponent,\r\n        ModelingExerciseComponent,\r\n        TextExerciseComponent,\r\n        FileUploadExerciseComponent,\r\n        ArtemisTranslatePipe,\r\n    ],\r\n})\r\nexport class CourseManagementExercisesComponent implements OnInit {\r\n    readonly ExerciseType = ExerciseType;\r\n    readonly documentationType: DocumentationType = 'Exercise';\r\n\r\n    course: Course;\r\n    showSearch = false;\r\n    quizExercisesCount = 0;\r\n    textExercisesCount = 0;\r\n    programmingExercisesCount = 0;\r\n    modelingExercisesCount = 0;\r\n    fileUploadExercisesCount = 0;\r\n    filteredQuizExercisesCount = 0;\r\n    filteredTextExercisesCount = 0;\r\n    filteredProgrammingExercisesCount = 0;\r\n    filteredModelingExercisesCount = 0;\r\n    filteredFileUploadExercisesCount = 0;\r\n    exerciseFilter: ExerciseFilter;\r\n\r\n    // extension points, see shared/extension-point\r\n    // TODO: the extension point for Orion does not work with Angular 19, we need to find a different solution\r\n    // @ContentChild('overrideGenerateAndImportButton') overrideGenerateAndImportButton: TemplateRef<any>;\r\n    // @ContentChild('overrideProgrammingExerciseCard') overrideProgrammingExerciseCard: TemplateRef<any>;\r\n    // @ContentChild('overrideNonProgrammingExerciseCard') overrideNonProgrammingExerciseCard: TemplateRef<any>;\r\n\r\n    private readonly route = inject(ActivatedRoute);\r\n\r\n    /**\r\n     * initializes course\r\n     */\r\n    ngOnInit(): void {\r\n        this.route.parent!.data.subscribe(({ course }) => {\r\n            if (course) {\r\n                this.course = course;\r\n            }\r\n        });\r\n\r\n        this.exerciseFilter = new ExerciseFilter('');\r\n    }\r\n\r\n    /**\r\n     * Sets the (filtered) programming exercise count. Required to pass a callback to the\r\n     * overrideProgrammingExerciseCard extension since extensions don't support @Output\r\n     * @param count to set the programmingExerciseCount to\r\n     */\r\n    setProgrammingExerciseCount(count: number) {\r\n        this.programmingExercisesCount = count;\r\n    }\r\n    setFilteredProgrammingExerciseCount(count: number) {\r\n        this.filteredProgrammingExercisesCount = count;\r\n    }\r\n\r\n    /**\r\n     * Toggles the search bar\r\n     */\r\n    toggleSearch() {\r\n        this.showSearch = !this.showSearch;\r\n        // Reset the filter when the search bar is closed\r\n        if (!this.showSearch) {\r\n            this.exerciseFilter = new ExerciseFilter();\r\n        }\r\n    }\r\n\r\n    getExerciseCount(): number {\r\n        return this.quizExercisesCount + this.programmingExercisesCount + this.modelingExercisesCount + this.fileUploadExercisesCount + this.textExercisesCount;\r\n    }\r\n\r\n    getFilteredExerciseCount(): number {\r\n        return (\r\n            this.filteredProgrammingExercisesCount +\r\n            this.filteredQuizExercisesCount +\r\n            this.filteredModelingExercisesCount +\r\n            this.filteredTextExercisesCount +\r\n            this.filteredFileUploadExercisesCount\r\n        );\r\n    }\r\n\r\n    shouldHideExerciseCard(type: string): boolean {\r\n        return !['all', type].includes(this.exerciseFilter.exerciseTypeSearch);\r\n    }\r\n}\r\n", "@if (course) {\r\n    <div class=\"row\">\r\n        <div class=\"col d-flex align-items-center\">\r\n            <h3>\r\n                <span>\r\n                    {{ getExerciseCount() }}\r\n                    {{ 'artemisApp.course.exercises' | artemisTranslate }}\r\n                </span>\r\n            </h3>\r\n            <jhi-documentation-button [type]=\"documentationType\" />\r\n        </div>\r\n        <div class=\"col text-end align-self-center\">\r\n            <button id=\"toggleSearchButton\" class=\"btn btn-primary\" type=\"button\" (click)=\"toggleSearch()\">\r\n                {{ 'artemisApp.course.exercise.search.toggleButton.' + showSearch | artemisTranslate }}\r\n            </button>\r\n        </div>\r\n    </div>\r\n    @if (showSearch) {\r\n        <jhi-course-management-exercises-search (exerciseFilter)=\"exerciseFilter = $event\" />\r\n    }\r\n    @if (showSearch && getFilteredExerciseCount() === 0 && !exerciseFilter.isEmpty()) {\r\n        <div class=\"alert alert-secondary\" role=\"alert\" jhiTranslate=\"artemisApp.course.exercise.search.noResults\"></div>\r\n    }\r\n    <jhi-course-exercise-card\r\n        [headingJhiTranslate]=\"'artemisApp.course.programmingExercises'\"\r\n        [exerciseCount]=\"programmingExercisesCount\"\r\n        [hidden]=\"shouldHideExerciseCard('programming')\"\r\n        [course]=\"course\"\r\n    >\r\n        <!-- TODO: the extension point for Orion does not work with Angular 19, we need to find a different solution -->\r\n        <!--        <jhi-programming-exercise-create-buttons exerciseCreateButtons-->\r\n        <!--                                                 *jhiExtensionPoint=\"overrideGenerateAndImportButton\"-->\r\n        <!--                                                 [course]=\"course\" />-->\r\n        <jhi-programming-exercise-create-buttons exerciseCreateButtons [course]=\"course\" />\r\n        <!-- TODO: the extension point for Orion does not work with Angular 19, we need to find a different solution -->\r\n        <!--        <jhi-programming-exercise-->\r\n        <!--            exercises-->\r\n        <!--            *jhiExtensionPoint=\"-->\r\n        <!--                overrideProgrammingExerciseCard;-->\r\n        <!--                context: {-->\r\n        <!--                    embedded: true,-->\r\n        <!--                    course: course,-->\r\n        <!--                    programmingExerciseCountCallback: setProgrammingExerciseCount.bind(this),-->\r\n        <!--                    exerciseFilter: exerciseFilter,-->\r\n        <!--                    filteredProgrammingExercisesCountCallback: setFilteredProgrammingExerciseCount.bind(this),-->\r\n        <!--                }-->\r\n        <!--            \"-->\r\n        <!--            [embedded]=\"true\"-->\r\n        <!--            [course]=\"course\"-->\r\n        <!--            [exerciseFilter]=\"exerciseFilter\"-->\r\n        <!--            (exerciseCount)=\"programmingExercisesCount = $event\"-->\r\n        <!--            (filteredExerciseCount)=\"filteredProgrammingExercisesCount = $event\"-->\r\n        <!--        />-->\r\n        <jhi-programming-exercise\r\n            exercises\r\n            [embedded]=\"true\"\r\n            [course]=\"course\"\r\n            [exerciseFilter]=\"exerciseFilter\"\r\n            (exerciseCount)=\"programmingExercisesCount = $event\"\r\n            (filteredExerciseCount)=\"filteredProgrammingExercisesCount = $event\"\r\n        />\r\n    </jhi-course-exercise-card>\r\n    <!-- TODO: the extension point for Orion does not work with Angular 19, we need to find a different solution -->\r\n    <!--    <jhi-course-exercise-card-->\r\n    <!--        *jhiExtensionPoint=\"overrideNonProgrammingExerciseCard\"-->\r\n    <!--        [headingJhiTranslate]=\"'artemisApp.course.quizExercises'\"-->\r\n    <!--        [exerciseCount]=\"quizExercisesCount\"-->\r\n    <!--        [hidden]=\"shouldHideExerciseCard('quiz')\"-->\r\n    <!--        [course]=\"course\"-->\r\n    <!--    >-->\r\n    <jhi-course-exercise-card\r\n        [headingJhiTranslate]=\"'artemisApp.course.quizExercises'\"\r\n        [exerciseCount]=\"quizExercisesCount\"\r\n        [hidden]=\"shouldHideExerciseCard('quiz')\"\r\n        [course]=\"course\"\r\n    >\r\n        <jhi-quiz-exercise-create-buttons exerciseCreateButtons [course]=\"course\" [quizExercisesCount]=\"quizExercisesCount\" />\r\n        <jhi-quiz-exercise\r\n            exercises\r\n            [embedded]=\"true\"\r\n            [course]=\"course\"\r\n            [exerciseFilter]=\"exerciseFilter\"\r\n            (exerciseCount)=\"quizExercisesCount = $event\"\r\n            (filteredExerciseCount)=\"filteredQuizExercisesCount = $event\"\r\n        />\r\n    </jhi-course-exercise-card>\r\n    <!-- TODO: the extension point for Orion does not work with Angular 19, we need to find a different solution -->\r\n    <!--    <jhi-course-exercise-card-->\r\n    <!--        *jhiExtensionPoint=\"overrideNonProgrammingExerciseCard\"-->\r\n    <!--        [headingJhiTranslate]=\"'artemisApp.course.modelingExercises'\"-->\r\n    <!--        [exerciseCount]=\"modelingExercisesCount\"-->\r\n    <!--        [hidden]=\"shouldHideExerciseCard('modeling')\"-->\r\n    <!--        [course]=\"course\"-->\r\n    <!--    >-->\r\n    <jhi-course-exercise-card\r\n        [headingJhiTranslate]=\"'artemisApp.course.modelingExercises'\"\r\n        [exerciseCount]=\"modelingExercisesCount\"\r\n        [hidden]=\"shouldHideExerciseCard('modeling')\"\r\n        [course]=\"course\"\r\n    >\r\n        <jhi-exercise-create-buttons exerciseCreateButtons [course]=\"course\" [exerciseType]=\"ExerciseType.MODELING\" />\r\n        <jhi-modeling-exercise\r\n            exercises\r\n            [embedded]=\"true\"\r\n            [course]=\"course\"\r\n            [exerciseFilter]=\"exerciseFilter\"\r\n            (exerciseCount)=\"modelingExercisesCount = $event\"\r\n            (filteredExerciseCount)=\"filteredModelingExercisesCount = $event\"\r\n        />\r\n    </jhi-course-exercise-card>\r\n    <!-- TODO: the extension point for Orion does not work with Angular 19, we need to find a different solution -->\r\n    <!--    <jhi-course-exercise-card-->\r\n    <!--        *jhiExtensionPoint=\"overrideNonProgrammingExerciseCard\"-->\r\n    <!--        [headingJhiTranslate]=\"'artemisApp.course.textExercises'\"-->\r\n    <!--        [exerciseCount]=\"textExercisesCount\"-->\r\n    <!--        [hidden]=\"shouldHideExerciseCard('text')\"-->\r\n    <!--        [course]=\"course\"-->\r\n    <!--    >-->\r\n    <jhi-course-exercise-card\r\n        [headingJhiTranslate]=\"'artemisApp.course.textExercises'\"\r\n        [exerciseCount]=\"textExercisesCount\"\r\n        [hidden]=\"shouldHideExerciseCard('text')\"\r\n        [course]=\"course\"\r\n    >\r\n        <jhi-exercise-create-buttons exerciseCreateButtons [course]=\"course\" [exerciseType]=\"ExerciseType.TEXT\" />\r\n        <jhi-text-exercise\r\n            exercises\r\n            [embedded]=\"true\"\r\n            [course]=\"course\"\r\n            [exerciseFilter]=\"exerciseFilter\"\r\n            (exerciseCount)=\"textExercisesCount = $event\"\r\n            (filteredExerciseCount)=\"filteredTextExercisesCount = $event\"\r\n        />\r\n    </jhi-course-exercise-card>\r\n    <!-- TODO: the extension point for Orion does not work with Angular 19, we need to find a different solution -->\r\n    <!--    <jhi-course-exercise-card-->\r\n    <!--        *jhiExtensionPoint=\"overrideNonProgrammingExerciseCard\"-->\r\n    <!--        [headingJhiTranslate]=\"'artemisApp.course.fileUploadExercises'\"-->\r\n    <!--        [exerciseCount]=\"fileUploadExercisesCount\"-->\r\n    <!--        [hidden]=\"shouldHideExerciseCard('file-upload')\"-->\r\n    <!--        [course]=\"course\"-->\r\n    <!--    >-->\r\n    <jhi-course-exercise-card\r\n        [headingJhiTranslate]=\"'artemisApp.course.fileUploadExercises'\"\r\n        [exerciseCount]=\"fileUploadExercisesCount\"\r\n        [hidden]=\"shouldHideExerciseCard('file-upload')\"\r\n        [course]=\"course\"\r\n    >\r\n        <jhi-exercise-create-buttons exerciseCreateButtons [course]=\"course\" [exerciseType]=\"ExerciseType.FILE_UPLOAD\" />\r\n        <jhi-file-upload-exercise\r\n            exercises\r\n            [embedded]=\"true\"\r\n            [course]=\"course\"\r\n            [exerciseFilter]=\"exerciseFilter\"\r\n            (exerciseCount)=\"fileUploadExercisesCount = $event\"\r\n            (filteredExerciseCount)=\"filteredFileUploadExercisesCount = $event\"\r\n        />\r\n    </jhi-course-exercise-card>\r\n}\r\n", "import { Component, EventEmitter, Input, OnInit, Output, inject } from '@angular/core';\r\nimport { ProgrammingExercise } from 'app/entities/programming/programming-exercise.model';\r\nimport { OrionConnectorService } from 'app/shared/orion/orion-connector.service';\r\nimport { ExerciseView, OrionState } from 'app/shared/orion/orion';\r\nimport { Router } from '@angular/router';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { ProgrammingExerciseService } from 'app/exercises/programming/manage/services/programming-exercise.service';\r\nimport { ExerciseFilter } from 'app/entities/exercise-filter.model';\r\nimport { OrionButtonType } from 'app/shared/orion/orion-button/orion-button.component';\r\nimport { ProgrammingExerciseComponent } from 'app/exercises/programming/manage/programming-exercise.component';\r\nimport { OrionButtonComponent } from 'app/shared/orion/orion-button/orion-button.component';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-orion-programming-exercise',\r\n    templateUrl: './orion-programming-exercise.component.html',\r\n    imports: [ProgrammingExerciseComponent, OrionButtonComponent, ArtemisTranslatePipe],\r\n})\r\nexport class OrionProgrammingExerciseComponent implements OnInit {\r\n    private orionConnectorService = inject(OrionConnectorService);\r\n    private router = inject(Router);\r\n    private programmingExerciseService = inject(ProgrammingExerciseService);\r\n\r\n    @Input() embedded = false;\r\n    @Input() course: Course;\r\n    @Input() exerciseFilter: ExerciseFilter;\r\n    @Output() exerciseCount = new EventEmitter<number>();\r\n    @Output() filteredExerciseCount = new EventEmitter<number>();\r\n\r\n    readonly ExerciseView = ExerciseView;\r\n    protected readonly OrionButtonType = OrionButtonType;\r\n    orionState: OrionState;\r\n\r\n    ngOnInit() {\r\n        if (this.orionConnectorService && this.orionConnectorService.state()) {\r\n            this.orionConnectorService.state().subscribe((state) => {\r\n                this.orionState = state;\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Instructs Orion to download/open the exercise as instructor.\r\n     * Reloads the exercise from the programmingExerciseService to load all data, e.g. the auxiliary repositories which are not loaded in the overview\r\n     *\r\n     * @param programmingExercise to download/open\r\n     */\r\n    editInIDE(programmingExercise: ProgrammingExercise) {\r\n        this.programmingExerciseService.find(programmingExercise.id!).subscribe((res) => this.orionConnectorService.editExercise(res.body!));\r\n    }\r\n\r\n    /**\r\n     * Navigates to the ide code editor, should only be done if the exercise is already opened in the ide\r\n     *\r\n     * @param exercise to open\r\n     */\r\n    openOrionEditor(exercise: ProgrammingExercise) {\r\n        try {\r\n            this.router.navigate(['code-editor', 'ide', exercise.id, 'admin', exercise.templateParticipation?.id]);\r\n        } catch (error) {\r\n            this.orionConnectorService.log(error);\r\n        }\r\n    }\r\n}\r\n", "<jhi-programming-exercise\r\n    [embedded]=\"embedded\"\r\n    [course]=\"course\"\r\n    (exerciseCount)=\"exerciseCount.emit($event)\"\r\n    [exerciseFilter]=\"exerciseFilter\"\r\n    (filteredExerciseCount)=\"filteredExerciseCount.emit($event)\"\r\n>\r\n    <ng-template #overrideRepositoryAndBuildPlan />\r\n    <ng-template #overrideButtons let-exercise=\"exercise\">\r\n        <td class=\"align-middle\">\r\n            @if (orionState) {\r\n                @if (orionState.view === ExerciseView.INSTRUCTOR && orionState.opened === exercise.id && exercise.isAtLeastEditor && exercise.templateParticipation) {\r\n                    <jhi-ide-button\r\n                        buttonLabel=\"{{ 'artemisApp.programmingExercise.orion.openEditor' | artemisTranslate }}\"\r\n                        [buttonType]=\"OrionButtonType.Download\"\r\n                        [smallButton]=\"false\"\r\n                        (clickHandler)=\"openOrionEditor(exercise)\"\r\n                    />\r\n                } @else {\r\n                    @if (exercise.isAtLeastEditor && exercise.templateParticipation) {\r\n                        <jhi-ide-button\r\n                            [buttonLabel]=\"'entity.action.editInOrion' | artemisTranslate\"\r\n                            [buttonType]=\"OrionButtonType.Download\"\r\n                            [buttonLoading]=\"orionState.cloning\"\r\n                            [smallButton]=\"false\"\r\n                            (clickHandler)=\"editInIDE(exercise)\"\r\n                        />\r\n                    }\r\n                }\r\n            }\r\n        </td>\r\n    </ng-template>\r\n</jhi-programming-exercise>\r\n", "import { Component } from '@angular/core';\r\nimport { CourseManagementExercisesComponent } from '../../course/manage/course-management-exercises.component';\r\nimport { OrionProgrammingExerciseComponent } from './orion-programming-exercise.component';\r\n\r\n@Component({\r\n    selector: 'jhi-orion-course-management-exercises',\r\n    template: `\r\n        <jhi-course-management-exercises>\r\n            <ng-template #overrideGenerateAndImportButton />\r\n            <ng-template #overrideNonProgrammingExerciseCard />\r\n            <ng-template\r\n                #overrideProgrammingExerciseCard\r\n                let-course=\"course\"\r\n                let-embedded=\"embedded\"\r\n                let-programmingExerciseCountCallback=\"programmingExerciseCountCallback\"\r\n                let-exerciseFilter=\"exerciseFilter\"\r\n                let-filteredProgrammingExercisesCountCallback=\"filteredProgrammingExercisesCountCallback\"\r\n            >\r\n                <jhi-orion-programming-exercise\r\n                    [course]=\"course\"\r\n                    [embedded]=\"embedded\"\r\n                    (exerciseCount)=\"programmingExerciseCountCallback($event)\"\r\n                    [exerciseFilter]=\"exerciseFilter\"\r\n                    (filteredExerciseCount)=\"filteredProgrammingExercisesCountCallback($event)\"\r\n                />\r\n            </ng-template>\r\n        </jhi-course-management-exercises>\r\n    `,\r\n    imports: [CourseManagementExercisesComponent, OrionProgrammingExerciseComponent],\r\n})\r\nexport class OrionCourseManagementExercisesComponent {\r\n    // only overrides the programming exercise list with Orion's programming exercise list and suppresses the other exercises\r\n}\r\n"],
  "mappings": "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",
  "names": ["ExerciseFilter", "exerciseNameSearch", "exerciseCategorySearch", "exerciseTypeSearch", "constructor", "toLowerCase", "isEmpty", "matchesExercise", "exercise", "nameMatches", "title", "includes", "categoryMatches", "categories", "some", "category", "matchesTag", "typeMatches", "type", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "optionValue_r1", "\u0275\u0275textInterpolate1", "\u0275\u0275pipeBind1", "CourseManagementExercisesSearchComponent", "typeOptions", "exerciseNameSearch", "exerciseCategorySearch", "exerciseTypeSearch", "exerciseFilter", "EventEmitter", "ngOnInit", "filter", "ExerciseFilter", "push", "exerciseTypes", "sendUpdate", "emit", "reset", "selectors", "outputs", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275element", "\u0275\u0275twoWayListener", "$event", "i0", "\u0275\u0275twoWayBindingSet", "\u0275\u0275listener", "\u0275\u0275repeaterCreate", "CourseManagementExercisesSearchComponent_For_34_Template", "\u0275\u0275repeaterTrackByIdentity", "\u0275\u0275twoWayProperty", "\u0275\u0275repeater", "TranslateDirective", "FormsModule", "NgSelectOption", "\u0275NgSelectMultipleOption", "DefaultValueAccessor", "SelectControlValueAccessor", "NgControlStatus", "NgModel", "ArtemisTranslatePipe", "styles", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275projection", "\u0275\u0275elementEnd", "CourseExerciseCardComponent", "headingJhiTranslate", "exerciseCount", "course", "isCollapsed", "faAngleRight", "faAngleDown", "selectors", "inputs", "ngContentSelectors", "_c1", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275element", "\u0275\u0275template", "CourseExerciseCardComponent_Conditional_12_Template", "\u0275\u0275listener", "\u0275\u0275advance", "\u0275\u0275textInterpolate1", "\u0275\u0275property", "\u0275\u0275conditional", "isAtLeastEditor", "TranslateDirective", "FaIconComponent", "NgbCollapse", "styles", "ProgrammingExerciseCreateButtonsComponent", "router", "inject", "Router", "modalService", "NgbModal", "FeatureToggle", "course", "faPlus", "faFileImport", "faKeyboard", "openImportModal", "modalRef", "open", "ExerciseImportWrapperComponent", "size", "backdrop", "componentInstance", "exerciseType", "ExerciseType", "PROGRAMMING", "result", "then", "id", "undefined", "navigate", "state", "programmingExerciseForImportFromFile", "selectors", "inputs", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275listener", "\u0275\u0275advance", "\u0275\u0275property", "ProgrammingExercises", "\u0275\u0275pureFunction1", "_c0", "FeatureToggleLinkDirective", "RouterLink", "FaIconComponent", "TranslateDirective", "FeatureToggleDirective", "encapsulation", "ExerciseComponent", "eventManager", "inject", "EventManager", "courseService", "CourseManagementService", "route", "ActivatedRoute", "eventSubscriber", "embedded", "course", "filter", "exerciseCount", "EventEmitter", "filteredExerciseCount", "showHeading", "courseId", "predicate", "reverse", "selectedExercises", "allChecked", "dialogErrorSource", "Subject", "dialogError$", "asObservable", "ngOnInit", "load", "registerChangeInExercises", "ExerciseFilter", "ngOnDestroy", "destroy", "unsubscribe", "exerciseFilter", "value", "applyFilter", "id", "loadExercises", "Number", "snapshot", "paramMap", "get", "loadCourse", "find", "subscribe", "courseResponse", "body", "emitExerciseCount", "count", "emit", "emitFilteredExerciseCount", "getChangeEventName", "deleteMultipleExercises", "exercisesToDelete", "exerciseService", "deletionObservables", "map", "exercise", "delete", "merge", "next", "broadcast", "name", "content", "error", "message", "toggleExercise", "exerciseIndex", "indexOf", "splice", "push", "length", "exercises", "toggleMultipleExercises", "concat", "isExerciseSelected", "includes", "selectors", "inputs", "outputs", "decls", "vars", "template", "rf", "ctx", "encapsulation", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275textInterpolate", "failedExercise_r2", "\u0275\u0275element", "\u0275\u0275repeaterCreate", "ProgrammingExerciseEditSelectedComponent_Conditional_11_For_12_Template", "\u0275\u0275repeaterTrackByIdentity", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "ctx_r2", "\u0275\u0275nextContext", "\u0275\u0275resetView", "closeModal", "\u0275\u0275repeater", "failedExercises", "programmingExercise_r5", "title", "ProgrammingExerciseEditSelectedComponent_Conditional_12_For_14_Template", "\u0275\u0275twoWayListener", "$event", "_r4", "i0", "\u0275\u0275twoWayBindingSet", "notificationText", "saveAll", "selectedProgrammingExercises", "\u0275\u0275twoWayProperty", "\u0275\u0275property", "newProgrammingExercise", "faSave", "isSaving", "ProgrammingExerciseEditSelectedComponent", "activeModal", "inject", "NgbActiveModal", "translateService", "TranslateService", "alertService", "AlertService", "programmingExerciseService", "ProgrammingExerciseService", "exerciseService", "ExerciseService", "savedExercises", "failureOccurred", "translationBasePath", "ngOnInit", "undefined", "ProgrammingExercise", "releaseDate", "confirmNoReleaseDate", "instant", "startDate", "window", "confirm", "hasExampleSolutionPublicationDateWarning", "addAlert", "type", "AlertType", "WARNING", "message", "forEach", "programmingExercise", "setNewValues", "requestOptions", "subscribeToSaveResponse", "updateTimeline", "dueDate", "buildAndTestStudentSubmissionsAfterDueDate", "assessmentType", "assessmentDueDate", "exampleSolutionPublicationDate", "exerciseTitle", "result", "subscribe", "next", "onSaveSuccess", "error", "res", "onSaveError", "length", "close", "push", "scrollTo", "clear", "dismiss", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275template", "ProgrammingExerciseEditSelectedComponent_Conditional_11_Template", "ProgrammingExerciseEditSelectedComponent_Conditional_12_Template", "\u0275\u0275conditional", "TranslateDirective", "FormsModule", "\u0275NgNoValidate", "DefaultValueAccessor", "NgControlStatus", "NgControlStatusGroup", "MinLengthValidator", "NgModel", "NgForm", "HelpIconComponent", "ProgrammingExerciseLifecycleComponent", "ButtonComponent", "FaIconComponent", "encapsulation", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275propertyInterpolate", "\u0275\u0275pipeBind1", "\u0275\u0275property", "ctx_r0", "faExclamationTriangle", "ProgrammingExerciseGradingDirtyWarningComponent", "programmingExerciseWebsocketService", "inject", "ProgrammingExerciseWebsocketService", "programmingExerciseId", "hasUpdatedGradingConfigInitialValue", "hasUpdatedGradingConfig", "testCaseStateSubscription", "ngOnChanges", "changes", "previousValue", "undefined", "unsubscribeSubscriptions", "getTestCaseState", "pipe", "tap", "hasUpdatedTestCases", "subscribe", "hasUpdatedTestCasesInitialValue", "currentValue", "isFirstChange", "ngOnDestroy", "unsubscribe", "selectors", "inputs", "features", "\u0275\u0275NgOnChangesFeature", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275template", "ProgrammingExerciseGradingDirtyWarningComponent_Conditional_1_Template", "\u0275\u0275conditional", "FaIconComponent", "NgbTooltip", "ArtemisTranslatePipe", "encapsulation", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r3", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "toggleMultipleExercises", "programmingExercises", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "allChecked", "\u0275\u0275element", "faSort", "_r4", "programmingExercise_r5", "$implicit", "toggleExercise", "isExerciseSelected", "\u0275\u0275pureFunction2", "_c0", "courseId", "id", "\u0275\u0275textInterpolate1", "title", "\u0275\u0275propertyInterpolate", "templateParticipation", "repositoryUri", "\u0275\u0275sanitizeUrl", "_r6", "downloadRepository", "RepositoryType", "TEMPLATE", "faDownload", "\u0275\u0275template", "ProgrammingExerciseComponent_Conditional_0_For_71_Conditional_43_Conditional_4_Template", "ProgrammingExerciseComponent_Conditional_0_For_71_Conditional_43_Conditional_5_Template", "\u0275\u0275conditional", "localVCEnabled", "templateParticipationType", "solutionParticipation", "_r7", "SOLUTION", "ProgrammingExerciseComponent_Conditional_0_For_71_Conditional_48_Conditional_3_Template", "ProgrammingExerciseComponent_Conditional_0_For_71_Conditional_48_Conditional_4_Template", "solutionParticipationType", "testRepositoryUri", "_r8", "TESTS", "ProgrammingExerciseComponent_Conditional_0_For_71_Conditional_53_Conditional_3_Template", "ProgrammingExerciseComponent_Conditional_0_For_71_Conditional_53_Conditional_4_Template", "buildPlanUrl", "ProgrammingExerciseComponent_Conditional_0_For_71_Conditional_56_Conditional_5_Template", "ProgrammingExerciseComponent_Conditional_0_For_71_Conditional_56_Conditional_6_Template", "buildPlanId", "allowOnlineIde", "\u0275\u0275textInterpolate", "presentationScoreEnabled", "_c1", "faUsers", "_c2", "faListAlt", "_c3", "faTable", "FeatureToggle", "ProgrammingExercises", "_c4", "faFileSignature", "\u0275\u0275pureFunction4", "_c5", "faPencilAlt", "_c6", "faWrench", "faUndo", "$event", "_r9", "deleteProgrammingExercise", "dialogError$", "localCIEnabled", "\u0275\u0275pureFunction0", "_c7", "_c8", "faTrash", "ProgrammingExerciseComponent_Conditional_0_For_71_Conditional_3_Template", "ProgrammingExerciseComponent_Conditional_0_For_71_Conditional_6_Template", "ProgrammingExerciseComponent_Conditional_0_For_71_Conditional_7_Template", "ProgrammingExerciseComponent_Conditional_0_For_71_Conditional_11_Template", "ProgrammingExerciseComponent_Conditional_0_For_71_Conditional_12_Template", "ProgrammingExerciseComponent_Conditional_0_For_71_Conditional_43_Template", "ProgrammingExerciseComponent_Conditional_0_For_71_Conditional_44_Template", "ProgrammingExerciseComponent_Conditional_0_For_71_Conditional_48_Template", "ProgrammingExerciseComponent_Conditional_0_For_71_Conditional_49_Template", "ProgrammingExerciseComponent_Conditional_0_For_71_Conditional_53_Template", "ProgrammingExerciseComponent_Conditional_0_For_71_Conditional_56_Template", "ProgrammingExerciseComponent_Conditional_0_For_71_Conditional_73_Template", "ProgrammingExerciseComponent_Conditional_0_For_71_Conditional_75_Template", "ProgrammingExerciseComponent_Conditional_0_For_71_Conditional_89_Template", "ProgrammingExerciseComponent_Conditional_0_For_71_Conditional_93_Template", "ProgrammingExerciseComponent_Conditional_0_For_71_Conditional_94_Template", "ProgrammingExerciseComponent_Conditional_0_For_71_Conditional_98_Template", "ProgrammingExerciseComponent_Conditional_0_For_71_Conditional_102_Template", "ProgrammingExerciseComponent_Conditional_0_For_71_Conditional_103_Template", "ProgrammingExerciseComponent_Conditional_0_For_71_Conditional_107_Template", "ProgrammingExerciseComponent_Conditional_0_For_71_Conditional_108_Template", "\u0275\u0275propertyInterpolate1", "isAtLeastEditor", "isAtLeastTutor", "testCasesChanged", "\u0275\u0275textInterpolate2", "\u0275\u0275pipeBind3", "shortName", "tmp_17_0", "length", "undefined", "\u0275\u0275pipeBind1", "releaseDate", "dueDate", "maxPoints", "bonusPoints", "exerciseService", "isIncludedInScore", "results", "allowOfflineIde", "allowOnlineEditor", "onlineIdeEnabled", "course", "presentationScore", "teamMode", "isAtLeastInstructor", "selectedExercises", "_r11", "checkConsistencies", "faCheckDouble", "_r12", "deleteMultipleProgrammingExercises", "_r10", "openEditSelectedModal", "ProgrammingExerciseComponent_Conditional_0_Conditional_74_Conditional_10_Template", "ProgrammingExerciseComponent_Conditional_0_Conditional_74_Conditional_11_Template", "ProgrammingExerciseComponent_Conditional_0_Conditional_74_Conditional_12_Template", "ProgrammingExerciseComponent_Conditional_0_Conditional_74_Conditional_13_Template", "\u0275\u0275twoWayListener", "_r1", "i0", "\u0275\u0275twoWayBindingSet", "predicate", "reverse", "sortRows", "ProgrammingExerciseComponent_Conditional_0_Conditional_9_Template", "ProgrammingExerciseComponent_Conditional_0_Conditional_60_Template", "\u0275\u0275repeaterCreate", "ProgrammingExerciseComponent_Conditional_0_For_71_Template", "\u0275\u0275componentInstance", "trackId", "ProgrammingExerciseComponent_Conditional_0_Conditional_74_Template", "\u0275\u0275twoWayProperty", "\u0275\u0275repeater", "filteredProgrammingExercises", "ProgrammingExerciseComponent", "ExerciseComponent", "inject", "ExerciseService", "programmingExerciseService", "ProgrammingExerciseService", "courseExerciseService", "CourseExerciseService", "accountService", "AccountService", "alertService", "AlertService", "modalService", "NgbModal", "sortService", "SortService", "profileService", "ProfileService", "ActionType", "ProgrammingExerciseParticipationType", "buildPlanLinkTemplate", "faPlus", "faBook", "exercises", "ngOnInit", "loadExercises", "findAllProgrammingExercisesForCourse", "subscribe", "next", "res", "body", "getProfileInfo", "profileInfo", "buildPlanURLTemplate", "activeProfiles", "includes", "PROFILE_LOCALVC", "PROFILE_LOCALCI", "PROFILE_THEIA", "forEach", "exercise", "setAccessRightsForExercise", "projectKey", "createBuildPlanUrl", "applyFilter", "emitExerciseCount", "error", "onError", "filter", "matchesExercise", "emitFilteredExerciseCount", "_index", "item", "programmingExerciseId", "event", "delete", "deleteStudentReposBuildPlans", "deleteBaseReposBuildPlans", "eventManager", "broadcast", "name", "content", "dialogErrorSource", "message", "exercisesToDelete", "deletionObservables", "map", "merge", "getChangeEventName", "sortByProperty", "modalRef", "open", "ProgrammingExerciseEditSelectedComponent", "size", "backdrop", "componentInstance", "selectedProgrammingExercises", "closed", "location", "reload", "ConsistencyCheckComponent", "keyboard", "exercisesToCheck", "repositoryType", "exportInstructorRepository", "response", "downloadZipFileFromResponse", "success", "__ngFactoryType__", "selectors", "inputs", "features", "\u0275\u0275InheritDefinitionFeature", "decls", "vars", "consts", "template", "rf", "ctx", "ProgrammingExerciseComponent_Conditional_0_Template", "SortDirective", "FormsModule", "CheckboxControlValueAccessor", "NgControlStatus", "NgModel", "SortByDirective", "TranslateDirective", "FaIconComponent", "RouterLink", "ProgrammingExerciseGradingDirtyWarningComponent", "ProgrammingExerciseInstructorStatusComponent", "ExerciseCategoriesComponent", "FeatureToggleLinkDirective", "ProgrammingExerciseResetButtonDirective", "FeatureToggleDirective", "DeleteButtonDirective", "ProgrammingAssessmentRepoExportButtonComponent", "ExerciseScoresExportButtonComponent", "SlicePipe", "ArtemisDatePipe", "encapsulation", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "\u0275\u0275pureFunction1", "_c1", "ctx_r0", "course", "id", "faFileExport", "faCheckDouble", "QuizExerciseCreateButtonsComponent", "router", "inject", "Router", "modalService", "NgbModal", "quizExercisesCount", "faPlus", "faFileImport", "openImportModal", "modalRef", "open", "ExerciseImportWrapperComponent", "size", "backdrop", "componentInstance", "exerciseType", "ExerciseType", "QUIZ", "result", "then", "navigate", "selectors", "inputs", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275listener", "\u0275\u0275template", "QuizExerciseCreateButtonsComponent_Conditional_20_Template", "_c0", "\u0275\u0275conditional", "RouterLink", "FaIconComponent", "TranslateDirective", "encapsulation", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r3", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "toggleMultipleExercises", "quizExercises", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "allChecked", "_r5", "quizExercise_r6", "$implicit", "toggleExercise", "isExerciseSelected", "\u0275\u0275pureFunction2", "_c0", "course", "id", "\u0275\u0275textInterpolate1", "title", "\u0275\u0275textInterpolate", "\u0275\u0275element", "duration", "\u0275\u0275template", "QuizExerciseComponent_Conditional_0_For_69_Conditional_3_Template", "QuizExerciseComponent_Conditional_0_For_69_Conditional_4_Template", "QuizExerciseComponent_Conditional_0_For_69_Conditional_5_Template", "QuizExerciseComponent_Conditional_0_For_69_Conditional_8_Template", "QuizExerciseComponent_Conditional_0_For_69_Conditional_9_Template", "QuizExerciseComponent_Conditional_0_For_69_Conditional_10_Template", "QuizExerciseComponent_Conditional_0_For_69_Conditional_11_Template", "QuizExerciseComponent_Conditional_0_For_69_Conditional_12_Template", "QuizExerciseComponent_Conditional_0_For_69_Conditional_30_Template", "$event", "_r4", "loadOne", "handleNewQuizExercise", "\u0275\u0275propertyInterpolate1", "\u0275\u0275conditional", "isAtLeastInstructor", "isAtLeastTutor", "status", "QuizStatus", "CLOSED", "INVISIBLE", "VISIBLE", "ACTIVE", "OPEN_FOR_PRACTICE", "releaseDate", "\u0275\u0275pipeBind3", "quizBatches", "startTime", "dueDate", "fullMinutesForSeconds", "\u0275\u0275propertyInterpolate", "maxPoints", "exerciseService", "isIncludedInScore", "_r7", "deleteMultipleExercises", "selectedExercises", "quizExerciseService", "dialogError$", "faTrash", "QuizExerciseComponent_Conditional_0_Conditional_72_Conditional_3_Template", "\u0275\u0275twoWayListener", "_r1", "i0", "\u0275\u0275twoWayBindingSet", "predicate", "reverse", "sortRows", "QuizExerciseComponent_Conditional_0_Conditional_9_Template", "\u0275\u0275repeaterCreate", "QuizExerciseComponent_Conditional_0_For_69_Template", "\u0275\u0275componentInstance", "trackId", "QuizExerciseComponent_Conditional_0_Conditional_72_Template", "\u0275\u0275twoWayProperty", "faSort", "\u0275\u0275repeater", "filteredQuizExercises", "length", "QuizExerciseComponent", "ExerciseComponent", "inject", "ExerciseService", "QuizExerciseService", "accountService", "AccountService", "alertService", "AlertService", "sortService", "SortService", "ActionType", "QuizMode", "exercises", "loadExercises", "findForCourse", "courseId", "subscribe", "next", "res", "body", "forEach", "exercise", "isAtLeastTutorInCourse", "isAtLeastEditor", "isAtLeastEditorInCourse", "isAtLeastInstructorInCourse", "sort", "a", "b", "isEditable", "isQuizEditable", "setQuizExercisesStatus", "emitExerciseCount", "applyFilter", "error", "onError", "filter", "matchesExercise", "emitFilteredExerciseCount", "_index", "item", "getChangeEventName", "headers", "get", "seconds", "Math", "floor", "quizExercise", "getStatus", "quizExerciseId", "find", "newQuizExercise", "index", "findIndex", "push", "sortByProperty", "__ngFactoryType__", "selectors", "inputs", "features", "\u0275\u0275InheritDefinitionFeature", "decls", "vars", "consts", "template", "rf", "ctx", "QuizExerciseComponent_Conditional_0_Template", "SortDirective", "FormsModule", "CheckboxControlValueAccessor", "NgControlStatus", "NgModel", "SortByDirective", "TranslateDirective", "FaIconComponent", "RouterLink", "QuizExerciseLifecycleButtonsComponent", "ExerciseCategoriesComponent", "QuizExerciseManageButtonsComponent", "DeleteButtonDirective", "ArtemisDatePipe", "encapsulation", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "openImportModal", "\u0275\u0275advance", "\u0275\u0275property", "exerciseType", "\u0275\u0275pureFunction2", "_c0", "course", "id", "faPlus", "translationLabel", "getExerciseTypeIcon", "faFileImport", "ExerciseCreateButtonsComponent", "router", "inject", "Router", "modalService", "NgbModal", "getIcon", "ngOnInit", "ExerciseType", "FILE_UPLOAD", "modalRef", "open", "ExerciseImportWrapperComponent", "size", "backdrop", "componentInstance", "result", "then", "navigate", "selectors", "inputs", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275template", "ExerciseCreateButtonsComponent_Conditional_0_Template", "\u0275\u0275conditional", "isAtLeastEditor", "RouterLink", "FaIconComponent", "TranslateDirective", "encapsulation", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r3", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "toggleMultipleExercises", "modelingExercises", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "allChecked", "\u0275\u0275element", "faSort", "_r4", "modelingExercise_r5", "$implicit", "toggleExercise", "isExerciseSelected", "\u0275\u0275pureFunction2", "_c0", "course", "id", "\u0275\u0275textInterpolate1", "title", "\u0275\u0275textInterpolate", "presentationScoreEnabled", "_c1", "courseId", "farListAlt", "_c2", "faTable", "_c3", "faBook", "_c4", "faUsers", "_c5", "faWrench", "_r6", "deleteModelingExercise", "dialogError$", "faTrash", "\u0275\u0275template", "ModelingExerciseComponent_Conditional_0_For_64_Conditional_3_Template", "ModelingExerciseComponent_Conditional_0_For_64_Conditional_6_Template", "ModelingExerciseComponent_Conditional_0_For_64_Conditional_7_Template", "ModelingExerciseComponent_Conditional_0_For_64_Conditional_11_Template", "ModelingExerciseComponent_Conditional_0_For_64_Conditional_12_Template", "ModelingExerciseComponent_Conditional_0_For_64_Conditional_35_Template", "ModelingExerciseComponent_Conditional_0_For_64_Conditional_47_Template", "ModelingExerciseComponent_Conditional_0_For_64_Conditional_48_Template", "ModelingExerciseComponent_Conditional_0_For_64_Conditional_49_Template", "ModelingExerciseComponent_Conditional_0_For_64_Conditional_50_Template", "ModelingExerciseComponent_Conditional_0_For_64_Conditional_51_Template", "ModelingExerciseComponent_Conditional_0_For_64_Conditional_52_Template", "\u0275\u0275propertyInterpolate", "\u0275\u0275conditional", "isAtLeastInstructor", "isAtLeastTutor", "\u0275\u0275propertyInterpolate1", "\u0275\u0275pipeBind1", "releaseDate", "dueDate", "assessmentDueDate", "maxPoints", "bonusPoints", "exerciseService", "isIncludedInScore", "presentationScore", "diagramType", "isAtLeastEditor", "teamMode", "_r7", "deleteMultipleExercises", "selectedExercises", "modelingExerciseService", "ModelingExerciseComponent_Conditional_0_Conditional_67_Conditional_3_Template", "\u0275\u0275twoWayListener", "$event", "_r1", "i0", "\u0275\u0275twoWayBindingSet", "predicate", "reverse", "sortRows", "ModelingExerciseComponent_Conditional_0_Conditional_9_Template", "ModelingExerciseComponent_Conditional_0_Conditional_50_Template", "\u0275\u0275repeaterCreate", "ModelingExerciseComponent_Conditional_0_For_64_Template", "\u0275\u0275componentInstance", "trackId", "ModelingExerciseComponent_Conditional_0_Conditional_67_Template", "\u0275\u0275twoWayProperty", "\u0275\u0275repeater", "filteredModelingExercises", "length", "ModelingExerciseComponent", "ExerciseComponent", "inject", "ExerciseService", "ModelingExerciseService", "courseExerciseService", "CourseExerciseService", "alertService", "AlertService", "accountService", "AccountService", "sortService", "SortService", "faPlus", "faListAlt", "faTimes", "exercises", "loadExercises", "findAllModelingExercisesForCourse", "subscribe", "next", "res", "body", "forEach", "exercise", "setAccessRightsForExercise", "applyFilter", "emitExerciseCount", "error", "onError", "filter", "matchesExercise", "emitFilteredExerciseCount", "_index", "item", "modelingExerciseId", "delete", "eventManager", "broadcast", "name", "content", "dialogErrorSource", "message", "getChangeEventName", "sortByProperty", "callback", "__ngFactoryType__", "selectors", "inputs", "features", "\u0275\u0275InheritDefinitionFeature", "decls", "vars", "consts", "template", "rf", "ctx", "ModelingExerciseComponent_Conditional_0_Template", "SortDirective", "FormsModule", "CheckboxControlValueAccessor", "NgControlStatus", "NgModel", "SortByDirective", "TranslateDirective", "FaIconComponent", "RouterLink", "ExerciseCategoriesComponent", "DeleteButtonDirective", "ArtemisDatePipe", "encapsulation", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "\u0275\u0275pureFunction3", "_c0", "ctx_r0", "courseId", "exercise", "type", "id", "farListAlt", "_c1", "faTable", "_c2", "faBook", "\u0275\u0275pureFunction2", "_c3", "faUsers", "_c4", "faWrench", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r2", "\u0275\u0275nextContext", "\u0275\u0275resetView", "deleteExercise", "title", "dialogError$", "faTrash", "TextExerciseRowButtonsComponent", "eventManager", "inject", "EventManager", "textExerciseService", "TextExerciseService", "dialogErrorSource", "Subject", "asObservable", "faListAlt", "delete", "subscribe", "next", "broadcast", "name", "content", "error", "message", "selectors", "inputs", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275template", "TextExerciseRowButtonsComponent_Conditional_3_Template", "TextExerciseRowButtonsComponent_Conditional_4_Template", "TextExerciseRowButtonsComponent_Conditional_5_Template", "TextExerciseRowButtonsComponent_Conditional_6_Template", "TextExerciseRowButtonsComponent_Conditional_7_Template", "TextExerciseRowButtonsComponent_Conditional_8_Template", "\u0275\u0275conditional", "isAtLeastTutor", "isAtLeastEditor", "teamMode", "isAtLeastInstructor", "RouterLink", "FaIconComponent", "TranslateDirective", "DeleteButtonDirective", "encapsulation", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r3", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "toggleMultipleExercises", "textExercises", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "allChecked", "\u0275\u0275element", "faSort", "_r4", "textExercise_r5", "$implicit", "toggleExercise", "isExerciseSelected", "\u0275\u0275pureFunction2", "_c0", "course", "id", "\u0275\u0275textInterpolate", "\u0275\u0275textInterpolate1", "title", "presentationScoreEnabled", "\u0275\u0275template", "TextExerciseComponent_Conditional_0_For_61_Conditional_3_Template", "TextExerciseComponent_Conditional_0_For_61_Conditional_6_Template", "TextExerciseComponent_Conditional_0_For_61_Conditional_7_Template", "TextExerciseComponent_Conditional_0_For_61_Conditional_11_Template", "TextExerciseComponent_Conditional_0_For_61_Conditional_12_Template", "TextExerciseComponent_Conditional_0_For_61_Conditional_35_Template", "\u0275\u0275propertyInterpolate1", "\u0275\u0275conditional", "isAtLeastInstructor", "isAtLeastTutor", "\u0275\u0275pipeBind1", "releaseDate", "dueDate", "assessmentDueDate", "maxPoints", "bonusPoints", "exerciseService", "isIncludedInScore", "presentationScore", "courseId", "_r6", "deleteMultipleExercises", "selectedExercises", "textExerciseService", "dialogError$", "faTrash", "TextExerciseComponent_Conditional_0_Conditional_64_Conditional_3_Template", "\u0275\u0275twoWayListener", "$event", "_r1", "i0", "\u0275\u0275twoWayBindingSet", "predicate", "reverse", "sortRows", "TextExerciseComponent_Conditional_0_Conditional_9_Template", "TextExerciseComponent_Conditional_0_Conditional_50_Template", "\u0275\u0275repeaterCreate", "TextExerciseComponent_Conditional_0_For_61_Template", "\u0275\u0275componentInstance", "trackId", "TextExerciseComponent_Conditional_0_Conditional_64_Template", "\u0275\u0275twoWayProperty", "\u0275\u0275repeater", "filteredTextExercises", "length", "TextExerciseComponent", "ExerciseComponent", "inject", "ExerciseService", "TextExerciseService", "router", "Router", "courseExerciseService", "CourseExerciseService", "modalService", "NgbModal", "alertService", "AlertService", "sortService", "SortService", "accountService", "AccountService", "faPlus", "exercises", "loadExercises", "findAllTextExercisesForCourse", "subscribe", "next", "res", "body", "forEach", "exercise", "setAccessRightsForExercise", "applyFilter", "emitExerciseCount", "error", "onError", "filter", "matchesExercise", "emitFilteredExerciseCount", "_index", "item", "getChangeEventName", "sortByProperty", "callback", "openImportModal", "modalRef", "open", "ExerciseImportWrapperComponent", "size", "backdrop", "componentInstance", "exerciseType", "ExerciseType", "TEXT", "result", "then", "navigate", "__ngFactoryType__", "selectors", "inputs", "features", "\u0275\u0275InheritDefinitionFeature", "decls", "vars", "consts", "template", "rf", "ctx", "TextExerciseComponent_Conditional_0_Template", "SortDirective", "FormsModule", "CheckboxControlValueAccessor", "NgControlStatus", "NgModel", "SortByDirective", "TranslateDirective", "FaIconComponent", "RouterLink", "ExerciseCategoriesComponent", "TextExerciseRowButtonsComponent", "DeleteButtonDirective", "ArtemisDatePipe", "encapsulation", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r3", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "toggleMultipleExercises", "fileUploadExercises", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "allChecked", "\u0275\u0275element", "faSort", "_r4", "fileUploadExercise_r5", "$implicit", "toggleExercise", "isExerciseSelected", "\u0275\u0275pureFunction2", "_c0", "courseId", "id", "\u0275\u0275textInterpolate1", "title", "\u0275\u0275textInterpolate", "presentationScoreEnabled", "_c1", "farListAlt", "_c2", "faTable", "_c3", "faUsers", "_c4", "faWrench", "_r6", "deleteFileUploadExercise", "dialogError$", "faTrash", "\u0275\u0275template", "FileUploadExerciseComponent_Conditional_0_For_64_Conditional_3_Template", "FileUploadExerciseComponent_Conditional_0_For_64_Conditional_6_Template", "FileUploadExerciseComponent_Conditional_0_For_64_Conditional_7_Template", "FileUploadExerciseComponent_Conditional_0_For_64_Conditional_11_Template", "FileUploadExerciseComponent_Conditional_0_For_64_Conditional_12_Template", "FileUploadExerciseComponent_Conditional_0_For_64_Conditional_35_Template", "FileUploadExerciseComponent_Conditional_0_For_64_Conditional_46_Template", "FileUploadExerciseComponent_Conditional_0_For_64_Conditional_47_Template", "FileUploadExerciseComponent_Conditional_0_For_64_Conditional_48_Template", "FileUploadExerciseComponent_Conditional_0_For_64_Conditional_49_Template", "FileUploadExerciseComponent_Conditional_0_For_64_Conditional_50_Template", "\u0275\u0275propertyInterpolate1", "\u0275\u0275conditional", "course", "isAtLeastInstructor", "isAtLeastTutor", "\u0275\u0275pipeBind1", "releaseDate", "dueDate", "assessmentDueDate", "maxPoints", "bonusPoints", "exerciseService", "isIncludedInScore", "presentationScore", "filePattern", "teamMode", "isAtLeastEditor", "_r7", "deleteMultipleExercises", "selectedExercises", "fileUploadExerciseService", "FileUploadExerciseComponent_Conditional_0_Conditional_67_Conditional_3_Template", "\u0275\u0275twoWayListener", "$event", "_r1", "i0", "\u0275\u0275twoWayBindingSet", "predicate", "reverse", "sortRows", "FileUploadExerciseComponent_Conditional_0_Conditional_9_Template", "FileUploadExerciseComponent_Conditional_0_Conditional_50_Template", "\u0275\u0275repeaterCreate", "FileUploadExerciseComponent_Conditional_0_For_64_Template", "\u0275\u0275componentInstance", "trackId", "FileUploadExerciseComponent_Conditional_0_Conditional_67_Template", "\u0275\u0275twoWayProperty", "\u0275\u0275repeater", "filteredFileUploadExercises", "length", "FileUploadExerciseComponent", "ExerciseComponent", "inject", "ExerciseService", "FileUploadExerciseService", "courseExerciseService", "CourseExerciseService", "alertService", "AlertService", "accountService", "AccountService", "sortService", "SortService", "faPlus", "faBook", "faListAlt", "exercises", "loadExercises", "findAllFileUploadExercisesForCourse", "pipe", "filter", "res", "body", "subscribe", "next", "forEach", "exercise", "setAccessRightsForExercise", "emitExerciseCount", "applyFilter", "error", "onError", "matchesExercise", "emitFilteredExerciseCount", "_index", "item", "fileUploadExerciseId", "delete", "eventManager", "broadcast", "name", "content", "dialogErrorSource", "message", "getChangeEventName", "sortByProperty", "callback", "__ngFactoryType__", "selectors", "inputs", "features", "\u0275\u0275InheritDefinitionFeature", "decls", "vars", "consts", "template", "rf", "ctx", "FileUploadExerciseComponent_Conditional_0_Template", "SortDirective", "FormsModule", "CheckboxControlValueAccessor", "NgControlStatus", "NgModel", "SortByDirective", "TranslateDirective", "FaIconComponent", "RouterLink", "ExerciseCategoriesComponent", "DeleteButtonDirective", "ArtemisDatePipe", "encapsulation", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275listener", "$event", "\u0275\u0275restoreView", "_r3", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "exerciseFilter", "\u0275\u0275elementEnd", "\u0275\u0275element", "_r1", "toggleSearch", "\u0275\u0275template", "CourseManagementExercisesComponent_Conditional_0_Conditional_23_Template", "CourseManagementExercisesComponent_Conditional_0_Conditional_24_Template", "programmingExercisesCount", "filteredProgrammingExercisesCount", "quizExercisesCount", "filteredQuizExercisesCount", "modelingExercisesCount", "filteredModelingExercisesCount", "textExercisesCount", "filteredTextExercisesCount", "fileUploadExercisesCount", "filteredFileUploadExercisesCount", "\u0275\u0275advance", "\u0275\u0275textInterpolate2", "getExerciseCount", "\u0275\u0275pipeBind1", "\u0275\u0275property", "documentationType", "\u0275\u0275textInterpolate1", "showSearch", "\u0275\u0275conditional", "getFilteredExerciseCount", "isEmpty", "shouldHideExerciseCard", "course", "ExerciseType", "MODELING", "TEXT", "FILE_UPLOAD", "CourseManagementExercisesComponent", "route", "inject", "ActivatedRoute", "ngOnInit", "parent", "data", "subscribe", "ExerciseFilter", "setProgrammingExerciseCount", "count", "setFilteredProgrammingExerciseCount", "type", "includes", "exerciseTypeSearch", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "CourseManagementExercisesComponent_Conditional_0_Template", "DocumentationButtonComponent", "CourseManagementExercisesSearchComponent", "TranslateDirective", "CourseExerciseCardComponent", "ProgrammingExerciseCreateButtonsComponent", "ProgrammingExerciseComponent", "QuizExerciseCreateButtonsComponent", "QuizExerciseComponent", "ExerciseCreateButtonsComponent", "ModelingExerciseComponent", "TextExerciseComponent", "FileUploadExerciseComponent", "ArtemisTranslatePipe", "encapsulation", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r2", "exercise_r3", "\u0275\u0275nextContext", "exercise", "ctx_r3", "\u0275\u0275resetView", "openOrionEditor", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275propertyInterpolate", "\u0275\u0275pipeBind1", "\u0275\u0275property", "OrionButtonType", "Download", "_r5", "editInIDE", "orionState", "cloning", "\u0275\u0275template", "OrionProgrammingExerciseComponent_ng_template_5_Conditional_3_Conditional_2_Conditional_1_Template", "\u0275\u0275conditional", "isAtLeastEditor", "templateParticipation", "OrionProgrammingExerciseComponent_ng_template_5_Conditional_3_Conditional_1_Template", "OrionProgrammingExerciseComponent_ng_template_5_Conditional_3_Conditional_2_Template", "view", "ExerciseView", "INSTRUCTOR", "opened", "id", "OrionProgrammingExerciseComponent_ng_template_5_Conditional_3_Template", "OrionProgrammingExerciseComponent", "orionConnectorService", "inject", "OrionConnectorService", "router", "Router", "programmingExerciseService", "ProgrammingExerciseService", "embedded", "course", "exerciseFilter", "exerciseCount", "EventEmitter", "filteredExerciseCount", "ngOnInit", "state", "subscribe", "programmingExercise", "find", "res", "editExercise", "body", "navigate", "error", "log", "selectors", "inputs", "outputs", "decls", "vars", "consts", "template", "rf", "ctx", "$event", "i0", "_r1", "emit", "OrionProgrammingExerciseComponent_ng_template_2_Template", "\u0275\u0275templateRefExtractor", "OrionProgrammingExerciseComponent_ng_template_5_Template", "ProgrammingExerciseComponent", "OrionButtonComponent", "ArtemisTranslatePipe", "encapsulation", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275listener", "$event", "programmingExerciseCountCallback_r2", "\u0275\u0275restoreView", "_r1", "programmingExerciseCountCallback", "\u0275\u0275resetView", "filteredProgrammingExercisesCountCallback_r3", "filteredProgrammingExercisesCountCallback", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "course_r4", "embedded_r5", "exerciseFilter_r6", "OrionCourseManagementExercisesComponent", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275template", "OrionCourseManagementExercisesComponent_ng_template_3_Template", "\u0275\u0275templateRefExtractor", "OrionCourseManagementExercisesComponent_ng_template_6_Template", "OrionCourseManagementExercisesComponent_ng_template_9_Template", "CourseManagementExercisesComponent", "OrionProgrammingExerciseComponent", "encapsulation"]
}
