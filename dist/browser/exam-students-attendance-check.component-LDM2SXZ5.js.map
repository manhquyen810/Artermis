{
  "version": 3,
  "sources": ["src/main/webapp/app/exam/manage/students/verify-attendance-check/exam-students-attendance-check.component.ts", "src/main/webapp/app/exam/manage/students/verify-attendance-check/exam-students-attendance-check.component.html"],
  "sourcesContent": ["import { Component, OnDestroy, OnInit, ViewEncapsulation, inject } from '@angular/core';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { ExamUserAttendanceCheckDTO } from 'app/entities/exam/exam-users-attendance-check-dto.model';\r\nimport { SortService } from 'app/shared/service/sort.service';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ActionType } from 'app/shared/delete-dialog/delete-dialog.model';\r\nimport { Exam } from 'app/entities/exam/exam.model';\r\nimport { ExamManagementService } from 'app/exam/manage/exam-management.service';\r\nimport { ButtonSize, ButtonType } from 'app/shared/components/button.component';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { faCheck, faInfoCircle, faPlus, faSort, faTimes, faUpload, faXmark } from '@fortawesome/free-solid-svg-icons';\r\nimport dayjs from 'dayjs/esm';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { SortDirective } from 'app/shared/sort/sort.directive';\r\nimport { SortByDirective } from 'app/shared/sort/sort-by.directive';\r\n\r\n@Component({\r\n    selector: 'jhi-exam-students-attendance-check',\r\n    templateUrl: './exam-students-attendance-check.component.html',\r\n    encapsulation: ViewEncapsulation.None,\r\n    imports: [TranslateDirective, FaIconComponent, SortDirective, SortByDirective],\r\n})\r\nexport class ExamStudentsAttendanceCheckComponent implements OnInit, OnDestroy {\r\n    private route = inject(ActivatedRoute);\r\n    private alertService = inject(AlertService);\r\n    private examManagementService = inject(ExamManagementService);\r\n    private sortService = inject(SortService);\r\n\r\n    readonly ButtonType = ButtonType;\r\n    readonly ButtonSize = ButtonSize;\r\n    readonly ActionType = ActionType;\r\n    readonly MISSING_IMAGE = '/content/images/missing_image.png';\r\n\r\n    courseId: number;\r\n    exam: Exam;\r\n    predicate = 'id';\r\n    ascending = true;\r\n    isTestExam: boolean;\r\n    allExamUsersAttendanceCheck: ExamUserAttendanceCheckDTO[] = [];\r\n    filteredUsersSize = 0;\r\n    paramSub: Subscription;\r\n\r\n    private dialogErrorSource = new Subject<string>();\r\n    dialogError$ = this.dialogErrorSource.asObservable();\r\n\r\n    isLoading = false;\r\n    isSearching = false;\r\n    hasExamStarted = false;\r\n    hasExamEnded = false;\r\n    searchFailed = false;\r\n    searchNoResults = false;\r\n    isTransitioning = false;\r\n    rowClass?: string;\r\n\r\n    // Icons\r\n    faPlus = faPlus;\r\n    faInfoCircle = faInfoCircle;\r\n    faUpload = faUpload;\r\n    faCheck = faCheck;\r\n    faTimes = faTimes;\r\n    faXmark = faXmark;\r\n    faSort = faSort;\r\n\r\n    ngOnInit() {\r\n        this.isLoading = true;\r\n        this.courseId = Number(this.route.snapshot.paramMap.get('courseId'));\r\n        this.route.data.subscribe(({ exam }: { exam: Exam }) => {\r\n            this.exam = exam;\r\n            this.hasExamStarted = exam.startDate?.isBefore(dayjs()) || false;\r\n            this.hasExamEnded = exam.endDate?.isBefore(dayjs()) || false;\r\n            this.isTestExam = this.exam.testExam!;\r\n        });\r\n        if (this.hasExamStarted) {\r\n            this.examManagementService.verifyExamUserAttendance(this.courseId, this.exam.id!).subscribe({\r\n                next: (res: HttpResponse<ExamUserAttendanceCheckDTO[]>) => {\r\n                    this.allExamUsersAttendanceCheck = res.body!;\r\n                    this.isLoading = false;\r\n                },\r\n                error: (error: HttpErrorResponse) => this.onError(error.message),\r\n            });\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.dialogErrorSource.unsubscribe();\r\n    }\r\n\r\n    /**\r\n     * Show an error as an alert in the top of the editor html.\r\n     * Used by other components to display errors.\r\n     * The error must already be provided translated by the emitting component.\r\n     */\r\n    onError(error: string) {\r\n        this.alertService.error(error);\r\n        this.isTransitioning = false;\r\n        this.isLoading = false;\r\n    }\r\n\r\n    sortRows() {\r\n        this.sortService.sortByProperty(this.allExamUsersAttendanceCheck, this.predicate, this.ascending);\r\n    }\r\n}\r\n", "<div>\r\n    @if (isLoading) {\r\n        <div class=\"d-flex justify-content-center\">\r\n            <div class=\"spinner-border\" role=\"status\">\r\n                <span class=\"sr-only\" jhiTranslate=\"loading\"></span>\r\n            </div>\r\n        </div>\r\n    } @else {\r\n        <div class=\"d-flex border-bottom pb-2 mt-3\">\r\n            @if (!hasExamStarted) {\r\n                <div>\r\n                    <h3><span class=\"text-white badge bg-danger\" [jhiTranslate]=\"'artemisApp.examManagement.examStudents.examNotStarted'\">Exam have not started yet!</span></h3>\r\n                </div>\r\n            } @else {\r\n                @if (allExamUsersAttendanceCheck && allExamUsersAttendanceCheck.length > 0) {\r\n                    <div>\r\n                        <span [jhiTranslate]=\"'artemisApp.examManagement.examStudents.notCheckedStudents'\">Students who did not sign</span>:\r\n                        <span class=\"badge bg-danger text-white ms-1 px-2\" id=\"#registered-users\"> {{ allExamUsersAttendanceCheck.length }}</span>\r\n                    </div>\r\n                }\r\n                @if (!allExamUsersAttendanceCheck || allExamUsersAttendanceCheck.length === 0) {\r\n                    <div>\r\n                        <span class=\"fs-3\" [jhiTranslate]=\"'artemisApp.examManagement.examStudents.allStudentsCheckedPassed'\">All students passed</span>\r\n                        <fa-icon [icon]=\"faCheck\" style=\"color: green\" class=\"fa-2x ms-1\" />\r\n                    </div>\r\n                }\r\n            }\r\n        </div>\r\n    }\r\n    <div class=\"row\"></div>\r\n    <br />\r\n    @if (allExamUsersAttendanceCheck.length > 0 && !isLoading) {\r\n        <div class=\"table-responsive\" id=\"exams-table\">\r\n            <table class=\"table table-striped\">\r\n                <thead>\r\n                    <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"ascending\" (sortChange)=\"sortRows()\">\r\n                        <th class=\"d-md-table-cell\" jhiSortBy=\"id\">\r\n                            <span jhiTranslate=\"global.field.id\"></span>\r\n                            <fa-icon [icon]=\"faSort\" />\r\n                        </th>\r\n                        <th></th>\r\n                        <th class=\"d-md-table-cell\" jhiSortBy=\"login\">\r\n                            <span jhiTranslate=\"artemisApp.examManagement.examStudents.login\"></span>\r\n                            <fa-icon [icon]=\"faSort\" />\r\n                        </th>\r\n                        <th class=\"d-md-table-cell\" jhiSortBy=\"registrationNumber\">\r\n                            <span jhiTranslate=\"artemisApp.examManagement.examStudents.registrationNumber\"></span>\r\n                            <fa-icon [icon]=\"faSort\" />\r\n                        </th>\r\n                        <th class=\"d-md-table-cell\">\r\n                            <span jhiTranslate=\"artemisApp.examManagement.examStudents.attendanceChecks\"></span>\r\n                        </th>\r\n                        <th class=\"d-md-table-cell\">\r\n                            <span jhiTranslate=\"artemisApp.studentExams.started\"></span>\r\n                        </th>\r\n                        <th class=\"d-md-table-cell\">\r\n                            <span jhiTranslate=\"artemisApp.studentExams.submitted\"></span>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    @for (examUser of allExamUsersAttendanceCheck; track examUser) {\r\n                        <tr>\r\n                            <td class=\"d-md-table-cell\">\r\n                                <span>\r\n                                    {{ examUser.id }}\r\n                                </span>\r\n                            </td>\r\n                            <td class=\"d-md-table-cell\">\r\n                                <img class=\"img-fluid\" width=\"60\" [src]=\"examUser.studentImagePath ? examUser.studentImagePath : MISSING_IMAGE\" />\r\n                            </td>\r\n                            <td class=\"d-md-table-cell\">\r\n                                <span>\r\n                                    {{ examUser.login }}\r\n                                </span>\r\n                            </td>\r\n                            <td class=\"d-md-table-cell\">\r\n                                <span>\r\n                                    {{ examUser.registrationNumber }}\r\n                                </span>\r\n                            </td>\r\n                            <td class=\"d-md-table-cell\">\r\n                                @if (allExamUsersAttendanceCheck.length === 0 && examUser?.signingImagePath) {\r\n                                    <img class=\"img-fluid\" width=\"60\" [src]=\"examUser.signingImagePath\" />\r\n                                } @else {\r\n                                    <h3>\r\n                                        <span class=\"m-2\">\r\n                                            <fa-icon class=\"text-danger\" [icon]=\"faXmark\" />\r\n                                        </span>\r\n                                    </h3>\r\n                                }\r\n                            </td>\r\n                            <td class=\"d-md-table-cell\">\r\n                                <span jhiTranslate=\"{{ examUser?.started ? 'global.generic.yes' : 'global.generic.no' }}\"></span>\r\n                            </td>\r\n                            <td class=\"d-md-table-cell\">\r\n                                <span jhiTranslate=\"{{ examUser?.submitted ? 'global.generic.yes' : 'global.generic.no' }}\"></span>\r\n                            </td>\r\n                        </tr>\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    }\r\n</div>\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "\u0275\u0275textInterpolate1", "ctx_r0", "allExamUsersAttendanceCheck", "length", "faCheck", "\u0275\u0275template", "ExamStudentsAttendanceCheckComponent_Conditional_3_Conditional_4_Conditional_1_Template", "ExamStudentsAttendanceCheckComponent_Conditional_3_Conditional_4_Conditional_2_Template", "\u0275\u0275conditional", "ExamStudentsAttendanceCheckComponent_Conditional_3_Conditional_3_Template", "ExamStudentsAttendanceCheckComponent_Conditional_3_Conditional_4_Template", "hasExamStarted", "examUser_r3", "signingImagePath", "\u0275\u0275sanitizeUrl", "faXmark", "ExamStudentsAttendanceCheckComponent_Conditional_8_For_52_Conditional_28_Template", "ExamStudentsAttendanceCheckComponent_Conditional_8_For_52_Conditional_29_Template", "id", "studentImagePath", "MISSING_IMAGE", "login", "registrationNumber", "\u0275\u0275propertyInterpolate", "started", "submitted", "\u0275\u0275twoWayListener", "$event", "\u0275\u0275restoreView", "_r2", "\u0275\u0275nextContext", "i0", "\u0275\u0275twoWayBindingSet", "predicate", "\u0275\u0275resetView", "ascending", "\u0275\u0275listener", "sortRows", "\u0275\u0275repeaterCreate", "ExamStudentsAttendanceCheckComponent_Conditional_8_For_52_Template", "\u0275\u0275repeaterTrackByIdentity", "\u0275\u0275twoWayProperty", "faSort", "\u0275\u0275repeater", "ExamStudentsAttendanceCheckComponent", "route", "inject", "ActivatedRoute", "alertService", "AlertService", "examManagementService", "ExamManagementService", "sortService", "SortService", "ButtonType", "ButtonSize", "ActionType", "courseId", "exam", "isTestExam", "filteredUsersSize", "paramSub", "dialogErrorSource", "Subject", "dialogError$", "asObservable", "isLoading", "isSearching", "hasExamEnded", "searchFailed", "searchNoResults", "isTransitioning", "rowClass", "faPlus", "faInfoCircle", "faUpload", "faTimes", "ngOnInit", "Number", "snapshot", "paramMap", "get", "data", "subscribe", "startDate", "isBefore", "dayjs", "endDate", "testExam", "verifyExamUserAttendance", "next", "res", "body", "error", "onError", "message", "ngOnDestroy", "unsubscribe", "sortByProperty", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "ExamStudentsAttendanceCheckComponent_Conditional_2_Template", "ExamStudentsAttendanceCheckComponent_Conditional_3_Template", "ExamStudentsAttendanceCheckComponent_Conditional_8_Template", "TranslateDirective", "FaIconComponent", "SortDirective", "SortByDirective", "encapsulation"]
}
