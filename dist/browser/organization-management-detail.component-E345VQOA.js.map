{
  "version": 3,
  "sources": ["src/main/webapp/app/admin/organization-management/organization-management-detail.component.ts", "src/main/webapp/app/admin/organization-management/organization-management-detail.component.html"],
  "sourcesContent": ["import { Component, OnInit, ViewChild, inject } from '@angular/core';\r\nimport { ActivatedRoute, RouterLink } from '@angular/router';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Organization } from 'app/entities/organization.model';\r\nimport { OrganizationManagementService } from 'app/admin/organization-management/organization-management.service';\r\nimport { User } from 'app/core/user/user.model';\r\nimport { Observable, Subject, Subscription, of } from 'rxjs';\r\nimport { catchError, map, switchMap, tap } from 'rxjs/operators';\r\nimport { ActionType } from 'app/shared/delete-dialog/delete-dialog.model';\r\nimport { iconsAsHTML } from 'app/utils/icons.utils';\r\nimport { UserService } from 'app/core/user/user.service';\r\nimport { DataTableComponent } from 'app/shared/data-table/data-table.component';\r\nimport { faUserSlash } from '@fortawesome/free-solid-svg-icons';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { NgxDatatableModule } from '@siemens/ngx-datatable';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { DeleteButtonDirective } from 'app/shared/delete-dialog/delete-button.directive';\r\n\r\nconst cssClasses = {\r\n    alreadyMember: 'already-member',\r\n    newlyAddedMember: 'newly-added-member',\r\n};\r\n\r\n@Component({\r\n    selector: 'jhi-organization-management-detail',\r\n    templateUrl: './organization-management-detail.component.html',\r\n    imports: [TranslateDirective, RouterLink, DataTableComponent, NgxDatatableModule, FaIconComponent, DeleteButtonDirective],\r\n})\r\nexport class OrganizationManagementDetailComponent implements OnInit {\r\n    private organizationService = inject(OrganizationManagementService);\r\n    private userService = inject(UserService);\r\n    private route = inject(ActivatedRoute);\r\n\r\n    @ViewChild(DataTableComponent) dataTable: DataTableComponent;\r\n    organization: Organization;\r\n\r\n    readonly ActionType = ActionType;\r\n    private dialogErrorSource = new Subject<string>();\r\n    dialogError$ = this.dialogErrorSource.asObservable();\r\n    filteredUsersSize = 0;\r\n    paramSub: Subscription;\r\n\r\n    isLoading = false;\r\n    isSearching = false;\r\n    searchFailed = false;\r\n    searchNoResults = false;\r\n    isTransitioning = false;\r\n    rowClass: string | undefined = undefined;\r\n\r\n    // Icons\r\n    faUserSlash = faUserSlash;\r\n\r\n    /**\r\n     * Retrieve the organization from the organization management activated route data subscription\r\n     * and get the organization based on its id\r\n     */\r\n    ngOnInit() {\r\n        this.route.data.subscribe(({ organization }) => {\r\n            this.organization = new Organization();\r\n            if (organization) {\r\n                const organizationId = organization.body ? organization.body.id : organization.id;\r\n                this.organizationService.getOrganizationByIdWithUsersAndCourses(organizationId).subscribe((organizationWithUserAndCourses) => {\r\n                    this.organization = organizationWithUserAndCourses;\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Returns the unique identifier for items in the collection\r\n     * @param _index of a user in the collection\r\n     * @param item current user\r\n     */\r\n    trackIdentity(_index: number, item: User) {\r\n        return item.id ?? -1;\r\n    }\r\n\r\n    /**\r\n     * Receives the search text and filter results from DataTableComponent, modifies them and returns the result which will be used by ngbTypeahead.\r\n     *\r\n     * 1. Perform server-side search using the search text\r\n     * 2. Return results from server query that contain all users (instead of only the client-side users who are members already)\r\n     *\r\n     * @param stream$ stream of searches of the format {text, entities} where entities are the results\r\n     * @return stream of users for the autocomplete\r\n     */\r\n    searchAllUsers = (stream$: Observable<{ text: string; entities: User[] }>): Observable<User[]> => {\r\n        return stream$.pipe(\r\n            switchMap(({ text: loginOrName }) => {\r\n                this.searchFailed = false;\r\n                this.searchNoResults = false;\r\n                if (loginOrName.length < 3) {\r\n                    return of([]);\r\n                }\r\n                this.isSearching = true;\r\n                return this.userService\r\n                    .search(loginOrName)\r\n                    .pipe(map((usersResponse) => usersResponse.body!))\r\n                    .pipe(\r\n                        tap((users) => {\r\n                            if (users.length === 0) {\r\n                                this.searchNoResults = true;\r\n                            }\r\n                        }),\r\n                        catchError(() => {\r\n                            this.searchFailed = true;\r\n                            return of([]);\r\n                        }),\r\n                    );\r\n            }),\r\n            tap(() => {\r\n                this.isSearching = false;\r\n            }),\r\n            tap((users) => {\r\n                setTimeout(() => {\r\n                    for (let i = 0; i < this.dataTable.typeaheadButtons.length; i++) {\r\n                        if (this.organization.users === undefined) {\r\n                            this.organization.users = [];\r\n                        }\r\n                        const button = this.dataTable.typeaheadButtons[i];\r\n                        const isAlreadyInOrganization = this.organization.users!.map((user) => user.id).includes(users[i].id);\r\n                        const hasIcon = button.querySelector('fa-icon');\r\n                        if (!hasIcon) {\r\n                            button.insertAdjacentHTML('beforeend', iconsAsHTML[isAlreadyInOrganization ? 'users' : 'users-plus']);\r\n                        }\r\n                        if (isAlreadyInOrganization) {\r\n                            this.dataTable.typeaheadButtons[i].classList.add(cssClasses.alreadyMember);\r\n                        }\r\n                    }\r\n                });\r\n            }),\r\n        );\r\n    };\r\n\r\n    /**\r\n     * Remove user from organization\r\n     *\r\n     * @param user User that should be removed from the currently viewed organization\r\n     */\r\n    removeFromOrganization(user: User) {\r\n        if (user.login) {\r\n            this.organizationService.removeUserFromOrganization(this.organization.id!, user.login).subscribe({\r\n                next: () => {\r\n                    this.organization.users = this.organization.users!.filter((u) => u.login !== user.login);\r\n                    this.dialogErrorSource.next('');\r\n                },\r\n                error: (error: HttpErrorResponse) => this.dialogErrorSource.next(error.message),\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Load all users of the viewed organization\r\n     */\r\n    loadAll() {\r\n        this.isLoading = true;\r\n        this.route.data.subscribe(({ organization }) => {\r\n            this.organization = new Organization();\r\n            if (organization) {\r\n                const organizationId = organization.body ? organization.body.id : organization.id;\r\n                this.organizationService.getOrganizationByIdWithUsersAndCourses(organizationId).subscribe((organizationWithUserAndCourses) => {\r\n                    this.organization = organizationWithUserAndCourses;\r\n                    this.isLoading = false;\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Receives the user that was selected in the autocomplete and the callback from DataTableComponent.\r\n     * The callback inserts the search term of the selected entity into the search field and updates the displayed users.\r\n     *\r\n     * @param user The selected user from the autocomplete suggestions\r\n     * @param callback Function that can be called with the selected user to trigger the DataTableComponent default behavior\r\n     */\r\n    onAutocompleteSelect = (user: User, callback: (user: User) => void): void => {\r\n        // If the user is not part of this organization yet, perform the server call to add them\r\n        if (!this.organization.users!.map((u) => u.id).includes(user.id) && user.login) {\r\n            this.isTransitioning = true;\r\n            this.organizationService.addUserToOrganization(this.organization.id!, user.login).subscribe({\r\n                next: () => {\r\n                    this.isTransitioning = false;\r\n\r\n                    // Add newly added user to the list of all users in the organization\r\n                    this.organization.users!.push(user);\r\n\r\n                    // Hand back over to the data table for updating\r\n                    callback(user);\r\n\r\n                    // Flash green background color to signal to the user that this record was added\r\n                    this.flashRowClass(cssClasses.newlyAddedMember);\r\n                },\r\n                error: () => {\r\n                    this.isTransitioning = false;\r\n                },\r\n            });\r\n        } else {\r\n            // Hand back over to the data table\r\n            callback(user);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Converts a user object to a string that can be searched for. This is\r\n     * used by the autocomplete select inside the data table.\r\n     *\r\n     * @param user User\r\n     */\r\n    searchTextFromUser = (user: User): string => {\r\n        return user.login || '';\r\n    };\r\n\r\n    /**\r\n     * Computes the row class that is being added to all rows of the datatable\r\n     */\r\n    dataTableRowClass = () => {\r\n        return this.rowClass;\r\n    };\r\n\r\n    /**\r\n     * Can be used to highlight rows temporarily by flashing a certain css class\r\n     *\r\n     * @param className Name of the class to be applied to all rows\r\n     */\r\n    flashRowClass = (className: string) => {\r\n        this.rowClass = className;\r\n        setTimeout(() => (this.rowClass = undefined));\r\n    };\r\n\r\n    /**\r\n     * Update the number of filtered users\r\n     *\r\n     * @param filteredUsersSize Total number of users after filters have been applied\r\n     */\r\n    handleUsersSizeChange = (filteredUsersSize: number) => {\r\n        this.filteredUsersSize = filteredUsersSize;\r\n    };\r\n\r\n    /**\r\n     * Formats the results in the autocomplete overlay.\r\n     *\r\n     * @param user\r\n     */\r\n    searchResultFormatter = (user: User) => {\r\n        const { name, login } = user;\r\n        return `${name} (${login})`;\r\n    };\r\n}\r\n", "<div>\r\n    <h2>\r\n        <span jhiTranslate=\"artemisApp.organizationManagement.detail.title\"></span> [<b>{{ organization.name }}</b\r\n        >]\r\n    </h2>\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col\">\r\n                <dl class=\"row-md jh-entity-details\">\r\n                    <dt><span jhiTranslate=\"global.field.id\"></span></dt>\r\n                    <dd>{{ organization.id }}</dd>\r\n                    <dt><span jhiTranslate=\"artemisApp.organizationManagement.name\"></span></dt>\r\n                    <dd>{{ organization.name }}</dd>\r\n                    <dt><span jhiTranslate=\"artemisApp.organizationManagement.shortName\"></span></dt>\r\n                    <dd>{{ organization.shortName }}</dd>\r\n                    <dt><span jhiTranslate=\"artemisApp.organizationManagement.url\"></span></dt>\r\n                    <dd>{{ organization.url }}</dd>\r\n                    <dt><span jhiTranslate=\"artemisApp.organizationManagement.logoUrl\"></span></dt>\r\n                    <dd>{{ organization.logoUrl }}</dd>\r\n                    <dt><span jhiTranslate=\"artemisApp.organizationManagement.description\"></span></dt>\r\n                    <dd>{{ organization.description }}</dd>\r\n                    <dt><span jhiTranslate=\"artemisApp.organizationManagement.emailPattern\"></span></dt>\r\n                    <dd>{{ organization.emailPattern }}</dd>\r\n                </dl>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <h3>\r\n                <span jhiTranslate=\"artemisApp.organizationManagement.courses\"></span>\r\n            </h3>\r\n            <div class=\"table-responsive\">\r\n                <table class=\"table table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th><span jhiTranslate=\"global.field.id\"></span></th>\r\n                            <th><span jhiTranslate=\"artemisApp.course.title\"></span></th>\r\n                            <th><span jhiTranslate=\"artemisApp.course.shortName\"></span></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        @for (course of organization.courses; track course) {\r\n                            <tr>\r\n                                <td>\r\n                                    <a [routerLink]=\"['/course-management/', course.id]\">{{ course.id }}</a>\r\n                                </td>\r\n                                <td>\r\n                                    <span>{{ course.title }}</span>\r\n                                </td>\r\n                                <td>\r\n                                    <span>{{ course.shortName }}</span>\r\n                                </td>\r\n                            </tr>\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"container p-2\">\r\n        <h3>\r\n            <span jhiTranslate=\"artemisApp.organizationManagement.users\"></span>\r\n        </h3>\r\n        <jhi-data-table\r\n            [isLoading]=\"isLoading\"\r\n            [isSearching]=\"isSearching\"\r\n            [searchFailed]=\"searchFailed\"\r\n            [searchNoResults]=\"searchNoResults\"\r\n            [isTransitioning]=\"isTransitioning\"\r\n            entityType=\"user\"\r\n            [allEntities]=\"organization.users!\"\r\n            entitiesPerPageTranslation=\"artemisApp.organizationManagement.userSearch.usersPerPage\"\r\n            showAllEntitiesTranslation=\"artemisApp.organizationManagement.userSearch.showAllUsers\"\r\n            searchNoResultsTranslation=\"artemisApp.organizationManagement.userSearch.searchNoResults\"\r\n            searchPlaceholderTranslation=\"artemisApp.organizationManagement.userSearch.searchForUsers\"\r\n            [searchFields]=\"['login', 'name']\"\r\n            [searchTextFromEntity]=\"searchTextFromUser\"\r\n            [searchResultFormatter]=\"searchResultFormatter\"\r\n            [onSearchWrapper]=\"searchAllUsers\"\r\n            [onAutocompleteSelectWrapper]=\"onAutocompleteSelect\"\r\n            (entitiesSizeChange)=\"handleUsersSizeChange($event)\"\r\n        >\r\n            <ng-template let-settings=\"settings\" let-controls=\"controls\">\r\n                <ngx-datatable\r\n                    class=\"bootstrap\"\r\n                    [limit]=\"settings.limit\"\r\n                    [sortType]=\"settings.sortType\"\r\n                    [columnMode]=\"settings.columnMode\"\r\n                    [headerHeight]=\"settings.headerHeight\"\r\n                    [footerHeight]=\"settings.footerHeight\"\r\n                    [rowHeight]=\"settings.rowHeight\"\r\n                    [rows]=\"settings.rows\"\r\n                    [rowClass]=\"dataTableRowClass\"\r\n                    [scrollbarH]=\"settings.scrollbarH\"\r\n                >\r\n                    <ngx-datatable-column prop=\"\" [minWidth]=\"60\" [width]=\"80\" [maxWidth]=\"100\">\r\n                        <ng-template ngx-datatable-header-template>\r\n                            <span class=\"datatable-header-cell-wrapper\" (click)=\"controls.onSort('id')\">\r\n                                <span class=\"datatable-header-cell-label bold sortable\" jhiTranslate=\"global.field.id\"></span>\r\n                                <fa-icon [icon]=\"controls.iconForSortPropField('id')\" />\r\n                            </span>\r\n                        </ng-template>\r\n                        <ng-template ngx-datatable-cell-template let-value=\"value\">\r\n                            <a routerLink=\"/admin/user-management/{{ value?.login }}\"> {{ value.id }} </a>\r\n                        </ng-template>\r\n                    </ngx-datatable-column>\r\n                    <ngx-datatable-column prop=\"login\" [minWidth]=\"150\" [width]=\"200\" [maxWidth]=\"200\">\r\n                        <ng-template ngx-datatable-header-template>\r\n                            <span class=\"datatable-header-cell-wrapper\" (click)=\"controls.onSort('login')\">\r\n                                <span class=\"datatable-header-cell-label bold sortable\" jhiTranslate=\"artemisApp.userManagement.login\"></span>\r\n                                <fa-icon [icon]=\"controls.iconForSortPropField('login')\" />\r\n                            </span>\r\n                        </ng-template>\r\n                        <ng-template ngx-datatable-cell-template let-value=\"value\">\r\n                            <span>{{ value }}</span>\r\n                        </ng-template>\r\n                    </ngx-datatable-column>\r\n                    <ngx-datatable-column prop=\"name\" [minWidth]=\"150\" [width]=\"250\" [maxWidth]=\"250\">\r\n                        <ng-template ngx-datatable-header-template>\r\n                            <span class=\"datatable-header-cell-wrapper\" (click)=\"controls.onSort('name')\">\r\n                                <span class=\"datatable-header-cell-label bold sortable\" jhiTranslate=\"artemisApp.userManagement.name\"></span>\r\n                                <fa-icon [icon]=\"controls.iconForSortPropField('name')\" />\r\n                            </span>\r\n                        </ng-template>\r\n                        <ng-template ngx-datatable-cell-template let-value=\"value\">\r\n                            <span>{{ value }}</span>\r\n                        </ng-template>\r\n                    </ngx-datatable-column>\r\n                    <ngx-datatable-column prop=\"email\" [minWidth]=\"150\" [width]=\"250\">\r\n                        <ng-template ngx-datatable-header-template>\r\n                            <span class=\"datatable-header-cell-wrapper\" (click)=\"controls.onSort('email')\">\r\n                                <span class=\"datatable-header-cell-label bold sortable\" jhiTranslate=\"artemisApp.userManagement.email\"></span>\r\n                                <fa-icon [icon]=\"controls.iconForSortPropField('email')\" />\r\n                            </span>\r\n                        </ng-template>\r\n                        <ng-template ngx-datatable-cell-template let-value=\"value\">\r\n                            <span>{{ value }}</span>\r\n                        </ng-template>\r\n                    </ngx-datatable-column>\r\n                    <ngx-datatable-column prop=\"\" [minWidth]=\"150\" [width]=\"200\">\r\n                        <ng-template ngx-datatable-header-template />\r\n                        <ng-template ngx-datatable-cell-template let-value=\"value\">\r\n                            <div class=\"w-100 text-end\">\r\n                                <button\r\n                                    jhiDeleteButton\r\n                                    [actionType]=\"ActionType.Remove\"\r\n                                    [entityTitle]=\"value.login\"\r\n                                    deleteQuestion=\"artemisApp.organizationManagement.userSearch.removeFromOrganization.modalQuestion\"\r\n                                    (delete)=\"removeFromOrganization(value)\"\r\n                                    [dialogError]=\"dialogError$\"\r\n                                >\r\n                                    <fa-icon [icon]=\"faUserSlash\" class=\"me-1\" />\r\n                                </button>\r\n                            </div>\r\n                        </ng-template>\r\n                    </ngx-datatable-column>\r\n                </ngx-datatable>\r\n            </ng-template>\r\n        </jhi-data-table>\r\n    </div>\r\n</div>\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "\u0275\u0275pureFunction1", "_c1", "course_r1", "id", "\u0275\u0275textInterpolate", "title", "shortName", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r2", "controls_r3", "\u0275\u0275nextContext", "controls", "\u0275\u0275resetView", "onSort", "\u0275\u0275element", "iconForSortPropField", "\u0275\u0275propertyInterpolate1", "value_r4", "login", "\u0275\u0275textInterpolate1", "_r5", "value_r6", "_r7", "value_r8", "_r9", "value_r10", "value_r12", "_r11", "value", "ctx_r12", "removeFromOrganization", "ActionType", "Remove", "dialogError$", "faUserSlash", "\u0275\u0275template", "OrganizationManagementDetailComponent_ng_template_107_ng_template_5_Template", "OrganizationManagementDetailComponent_ng_template_107_ng_template_7_Template", "OrganizationManagementDetailComponent_ng_template_107_ng_template_12_Template", "OrganizationManagementDetailComponent_ng_template_107_ng_template_14_Template", "OrganizationManagementDetailComponent_ng_template_107_ng_template_19_Template", "OrganizationManagementDetailComponent_ng_template_107_ng_template_21_Template", "OrganizationManagementDetailComponent_ng_template_107_ng_template_26_Template", "OrganizationManagementDetailComponent_ng_template_107_ng_template_28_Template", "OrganizationManagementDetailComponent_ng_template_107_ng_template_33_Template", "OrganizationManagementDetailComponent_ng_template_107_ng_template_35_Template", "settings_r14", "limit", "sortType", "columnMode", "headerHeight", "footerHeight", "rowHeight", "rows", "dataTableRowClass", "scrollbarH", "cssClasses", "alreadyMember", "newlyAddedMember", "OrganizationManagementDetailComponent", "organizationService", "inject", "OrganizationManagementService", "userService", "UserService", "route", "ActivatedRoute", "dataTable", "organization", "dialogErrorSource", "Subject", "asObservable", "filteredUsersSize", "paramSub", "isLoading", "isSearching", "searchFailed", "searchNoResults", "isTransitioning", "rowClass", "undefined", "ngOnInit", "data", "subscribe", "Organization", "organizationId", "body", "getOrganizationByIdWithUsersAndCourses", "organizationWithUserAndCourses", "trackIdentity", "_index", "item", "searchAllUsers", "stream$", "pipe", "switchMap", "text", "loginOrName", "length", "of", "search", "map", "usersResponse", "tap", "users", "catchError", "setTimeout", "i", "typeaheadButtons", "button", "isAlreadyInOrganization", "user", "includes", "querySelector", "insertAdjacentHTML", "iconsAsHTML", "classList", "add", "removeUserFromOrganization", "next", "filter", "u", "error", "message", "loadAll", "onAutocompleteSelect", "callback", "addUserToOrganization", "push", "flashRowClass", "searchTextFromUser", "className", "handleUsersSizeChange", "searchResultFormatter", "name", "selectors", "viewQuery", "rf", "ctx", "DataTableComponent", "\u0275\u0275repeaterCreate", "OrganizationManagementDetailComponent_For_92_Template", "\u0275\u0275repeaterTrackByIdentity", "$event", "OrganizationManagementDetailComponent_ng_template_107_Template", "url", "logoUrl", "description", "emailPattern", "\u0275\u0275repeater", "courses", "\u0275\u0275pureFunction0", "_c0", "TranslateDirective", "RouterLink", "NgxDatatableModule", "DatatableComponent", "DataTableColumnDirective", "DataTableColumnHeaderDirective", "DataTableColumnCellDirective", "FaIconComponent", "DeleteButtonDirective", "encapsulation"]
}
