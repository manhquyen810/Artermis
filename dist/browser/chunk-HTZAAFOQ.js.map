{
  "version": 3,
  "sources": ["src/main/webapp/app/exercises/programming/shared/build-details/programming-exercise-build-plan-checkout-directories.component.ts", "src/main/webapp/app/exercises/programming/shared/build-details/programming-exercise-build-plan-checkout-directories.component.html", "src/main/webapp/app/exercises/programming/shared/build-details/programming-exercise-repository-and-build-plan-details.component.ts", "src/main/webapp/app/exercises/programming/shared/build-details/programming-exercise-repository-and-build-plan-details.component.html"],
  "sourcesContent": ["import { Component, Input } from '@angular/core';\r\nimport { BuildPlanCheckoutDirectoriesDTO } from 'app/entities/programming/build-plan-checkout-directories-dto';\r\nimport { AuxiliaryRepository } from 'app/entities/programming/programming-exercise-auxiliary-repository-model';\r\n\r\n@Component({\r\n    selector: 'jhi-programming-exercise-build-plan-checkout-directories',\r\n    templateUrl: './programming-exercise-build-plan-checkout-directories.component.html',\r\n    styleUrls: ['../../manage/programming-exercise-form.scss'],\r\n})\r\nexport class ProgrammingExerciseBuildPlanCheckoutDirectoriesComponent {\r\n    @Input() checkoutDirectories?: BuildPlanCheckoutDirectoriesDTO;\r\n    @Input() auxiliaryRepositories: AuxiliaryRepository[];\r\n\r\n    ROOT_DIRECTORY_PATH = '/';\r\n}\r\n", "@if (checkoutDirectories) {\r\n    <hr class=\"pt-0 pb-0 mt-1 mb-1\" />\r\n    <ul>\r\n        <li [class.invisible]=\"!checkoutDirectories.exerciseCheckoutDirectory\">\r\n            <code>{{ checkoutDirectories.exerciseCheckoutDirectory }} </code>\r\n        </li>\r\n        <li [class.invisible]=\"!checkoutDirectories.solutionCheckoutDirectory\">\r\n            <code>{{ checkoutDirectories.solutionCheckoutDirectory }} </code>\r\n        </li>\r\n        <li [class.invisible]=\"!checkoutDirectories.testCheckoutDirectory\">\r\n            <code> {{ checkoutDirectories.testCheckoutDirectory }} </code>\r\n        </li>\r\n        @for (auxiliaryRepository of auxiliaryRepositories; track auxiliaryRepository) {\r\n            <li>\r\n                <code>{{ ROOT_DIRECTORY_PATH }}{{ auxiliaryRepository.checkoutDirectory }} </code>\r\n            </li>\r\n        }\r\n    </ul>\r\n}\r\n", "import { Component, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges, inject } from '@angular/core';\r\nimport { getCourseFromExercise } from 'app/entities/exercise.model';\r\nimport type { ProgrammingExercise, ProgrammingLanguage } from 'app/entities/programming/programming-exercise.model';\r\nimport { ProgrammingExerciseBuildConfig } from 'app/entities/programming/programming-exercise-build.config';\r\nimport { ProgrammingExerciseService } from 'app/exercises/programming/manage/services/programming-exercise.service';\r\nimport { Subscription } from 'rxjs';\r\nimport type { CheckoutDirectoriesDto } from 'app/entities/programming/checkout-directories-dto';\r\n\r\nimport { ProgrammingExerciseBuildPlanCheckoutDirectoriesComponent } from 'app/exercises/programming/shared/build-details/programming-exercise-build-plan-checkout-directories.component';\r\nimport { BuildPlanCheckoutDirectoriesDTO } from 'app/entities/programming/build-plan-checkout-directories-dto';\r\nimport { HelpIconComponent } from 'app/shared/components/help-icon.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\n\r\n@Component({\r\n    selector: 'jhi-programming-exercise-repository-and-build-plan-details',\r\n    templateUrl: './programming-exercise-repository-and-build-plan-details.component.html',\r\n    styleUrls: ['../../manage/programming-exercise-form.scss'],\r\n    imports: [ProgrammingExerciseBuildPlanCheckoutDirectoriesComponent, HelpIconComponent, CommonModule, TranslateDirective],\r\n})\r\nexport class ProgrammingExerciseRepositoryAndBuildPlanDetailsComponent implements OnInit, OnChanges, OnDestroy {\r\n    private programmingExerciseService = inject(ProgrammingExerciseService);\r\n\r\n    @Input() programmingExercise: ProgrammingExercise;\r\n    @Input() programmingExerciseBuildConfig?: ProgrammingExerciseBuildConfig;\r\n    @Input() programmingLanguage?: ProgrammingLanguage;\r\n    @Input() isLocal: boolean;\r\n    @Input() checkoutSolutionRepository = true;\r\n    @Input() isCreateOrEdit = false;\r\n    @Input() isEditMode = false;\r\n    @Output() submissionBuildPlanEvent = new EventEmitter<BuildPlanCheckoutDirectoriesDTO>();\r\n\r\n    checkoutDirectorySubscription?: Subscription;\r\n\r\n    courseShortName?: string;\r\n    checkoutDirectories?: CheckoutDirectoriesDto;\r\n\r\n    ngOnInit() {\r\n        this.updateCourseShortName();\r\n\r\n        if (this.isLocal) {\r\n            this.updateCheckoutDirectories();\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        const isProgrammingLanguageUpdated = changes.programmingLanguage?.currentValue !== changes.programmingLanguage?.previousValue;\r\n        const isCheckoutSolutionRepositoryUpdated = changes.checkoutSolutionRepository?.currentValue !== changes.checkoutSolutionRepository?.previousValue;\r\n        if (this.isLocal && (isProgrammingLanguageUpdated || isCheckoutSolutionRepositoryUpdated)) {\r\n            if (this.isCreateOrEdit && !this.isEditMode) {\r\n                this.resetProgrammingExerciseBuildCheckoutPaths();\r\n            }\r\n            this.updateCheckoutDirectories();\r\n        }\r\n\r\n        const isBuildConfigChanged = this.isBuildConfigAvailable(this.programmingExercise.buildConfig);\r\n        if (this.isLocal && this.isCreateOrEdit && isBuildConfigChanged) {\r\n            this.checkoutDirectories = this.setCheckoutDirectoriesFromBuildConfig(this.checkoutDirectories);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.checkoutDirectorySubscription?.unsubscribe();\r\n    }\r\n\r\n    private updateCheckoutDirectories() {\r\n        if (!this.programmingLanguage) {\r\n            return;\r\n        }\r\n\r\n        this.checkoutDirectorySubscription?.unsubscribe(); // might be defined from previous method execution\r\n\r\n        const CHECKOUT_SOLUTION_REPOSITORY_DEFAULT = true;\r\n        this.checkoutDirectorySubscription = this.programmingExerciseService\r\n            .getCheckoutDirectoriesForProgrammingLanguage(this.programmingLanguage, this.checkoutSolutionRepository ?? CHECKOUT_SOLUTION_REPOSITORY_DEFAULT)\r\n            .subscribe((checkoutDirectories) => {\r\n                if ((this.isCreateOrEdit && !this.isEditMode) || !this.isBuildConfigAvailable(this.programmingExercise.buildConfig)) {\r\n                    this.checkoutDirectories = checkoutDirectories;\r\n                    this.submissionBuildPlanEvent.emit(checkoutDirectories.submissionBuildPlanCheckoutDirectories!);\r\n                } else {\r\n                    this.checkoutDirectories = this.setCheckoutDirectoriesFromBuildConfig(checkoutDirectories);\r\n                }\r\n            });\r\n    }\r\n\r\n    private setCheckoutDirectoriesFromBuildConfig(checkoutDirectories?: CheckoutDirectoriesDto): CheckoutDirectoriesDto | undefined {\r\n        if (this.programmingExercise.buildConfig || checkoutDirectories) {\r\n            checkoutDirectories = {\r\n                solutionBuildPlanCheckoutDirectories: {\r\n                    solutionCheckoutDirectory:\r\n                        this.addLeadingSlash(this.programmingExercise.buildConfig?.assignmentCheckoutPath) ||\r\n                        checkoutDirectories?.solutionBuildPlanCheckoutDirectories?.solutionCheckoutDirectory,\r\n                    testCheckoutDirectory:\r\n                        this.addLeadingSlash(this.programmingExercise.buildConfig?.testCheckoutPath) ||\r\n                        checkoutDirectories?.solutionBuildPlanCheckoutDirectories?.testCheckoutDirectory ||\r\n                        '/',\r\n                },\r\n                submissionBuildPlanCheckoutDirectories: {\r\n                    exerciseCheckoutDirectory:\r\n                        this.addLeadingSlash(this.programmingExercise.buildConfig?.assignmentCheckoutPath) ||\r\n                        checkoutDirectories?.submissionBuildPlanCheckoutDirectories?.exerciseCheckoutDirectory,\r\n                    solutionCheckoutDirectory:\r\n                        this.addLeadingSlash(this.programmingExercise.buildConfig?.solutionCheckoutPath) ||\r\n                        checkoutDirectories?.submissionBuildPlanCheckoutDirectories?.solutionCheckoutDirectory,\r\n                    testCheckoutDirectory:\r\n                        this.addLeadingSlash(this.programmingExercise.buildConfig?.testCheckoutPath) ||\r\n                        checkoutDirectories?.submissionBuildPlanCheckoutDirectories?.testCheckoutDirectory ||\r\n                        '/',\r\n                },\r\n            };\r\n        }\r\n        return checkoutDirectories;\r\n    }\r\n\r\n    private updateCourseShortName() {\r\n        if (!this.programmingExercise) {\r\n            return;\r\n        }\r\n        this.courseShortName = getCourseFromExercise(this.programmingExercise)?.shortName;\r\n    }\r\n\r\n    private addLeadingSlash(path?: string): string | undefined {\r\n        if (!path) {\r\n            return undefined;\r\n        }\r\n        return path.startsWith('/') ? path : `/${path}`;\r\n    }\r\n\r\n    private isBuildConfigAvailable(buildConfig?: ProgrammingExerciseBuildConfig): boolean {\r\n        return (\r\n            buildConfig !== undefined &&\r\n            ((buildConfig.assignmentCheckoutPath !== undefined && buildConfig.assignmentCheckoutPath.trim() !== '') ||\r\n                (buildConfig.testCheckoutPath !== undefined && buildConfig.testCheckoutPath.trim() !== '') ||\r\n                (buildConfig.solutionCheckoutPath !== undefined && buildConfig.solutionCheckoutPath.trim() !== ''))\r\n        );\r\n    }\r\n\r\n    private resetProgrammingExerciseBuildCheckoutPaths() {\r\n        this.programmingExercise.buildConfig!.assignmentCheckoutPath = undefined;\r\n        this.programmingExercise.buildConfig!.testCheckoutPath = undefined;\r\n        this.programmingExercise.buildConfig!.solutionCheckoutPath = undefined;\r\n    }\r\n}\r\n", "<div id=\"preview\" class=\"row ms-0 mt-1 mb-1 pt-1 pb-1\">\r\n    <div class=\"col-auto rounded pt-1 pb-1 preview-box\">\r\n        <div>\r\n            <div>\r\n                <span class=\"font-weight-bold\" jhiTranslate=\"artemisApp.programmingExercise.preview.repositories\"></span>\r\n            </div>\r\n            <hr class=\"pt-0 pb-0 mt-1 mb-1\" />\r\n            <ul>\r\n                <ng-container\r\n                    *ngTemplateOutlet=\"\r\n                        repositoryBadge;\r\n                        context: {\r\n                            helpIconText: 'artemisApp.programmingExercise.preview.templateRepoTooltip',\r\n                            trailingRepoSlug: '-exercise',\r\n                        }\r\n                    \"\r\n                />\r\n                <ng-container\r\n                    *ngTemplateOutlet=\"\r\n                        repositoryBadge;\r\n                        context: {\r\n                            helpIconText: 'artemisApp.programmingExercise.preview.solutionRepoTooltip',\r\n                            trailingRepoSlug: '-solution',\r\n                        }\r\n                    \"\r\n                />\r\n                <ng-container\r\n                    *ngTemplateOutlet=\"\r\n                        repositoryBadge;\r\n                        context: {\r\n                            helpIconText: 'artemisApp.programmingExercise.preview.testRepoTooltip',\r\n                            trailingRepoSlug: '-tests',\r\n                        }\r\n                    \"\r\n                />\r\n\r\n                @if (programmingExercise?.auxiliaryRepositories?.length) {\r\n                    @for (auxiliaryRepository of programmingExercise!.auxiliaryRepositories; track auxiliaryRepository) {\r\n                        <ng-container\r\n                            *ngTemplateOutlet=\"\r\n                                repositoryBadge;\r\n                                context: {\r\n                                    trailingRepoSlug: '-' + auxiliaryRepository.name,\r\n                                    isAuxRepo: true,\r\n                                }\r\n                            \"\r\n                        />\r\n                    }\r\n                }\r\n            </ul>\r\n        </div>\r\n    </div>\r\n    @if (!isLocal) {\r\n        <div class=\"col-auto rounded pt-1 pb-1 preview-box\">\r\n            <div>\r\n                <span class=\"font-weight-bold\" jhiTranslate=\"artemisApp.programmingExercise.preview.buildPlans\"></span>\r\n            </div>\r\n            <hr class=\"pt-0 pb-0 mt-1 mb-1\" />\r\n            <ul>\r\n                <ng-container\r\n                    *ngTemplateOutlet=\"\r\n                        repositoryBadge;\r\n                        context: {\r\n                            helpIconText: 'artemisApp.programmingExercise.preview.templateBuildPlanTooltip',\r\n                            trailingRepoSlug: '-BASE',\r\n                            isBuildPlan: true,\r\n                        }\r\n                    \"\r\n                />\r\n                <ng-container\r\n                    *ngTemplateOutlet=\"\r\n                        repositoryBadge;\r\n                        context: {\r\n                            helpIconText: 'artemisApp.programmingExercise.preview.solutionBuildPlanTooltip',\r\n                            trailingRepoSlug: '-SOLUTION',\r\n                            isBuildPlan: true,\r\n                        }\r\n                    \"\r\n                />\r\n            </ul>\r\n        </div>\r\n    } @else if (checkoutDirectories) {\r\n        <div class=\"col-auto rounded pt-1 pb-1 preview-box\" id=\"checkout-directory-preview-submission-build-plan\">\r\n            <div>\r\n                <span class=\"font-weight-bold\" jhiTranslate=\"artemisApp.programmingExercise.preview.submissionBuildPlan\"></span>\r\n                <jhi-help-icon text=\"artemisApp.programmingExercise.preview.templateBuildPlanTooltip\" />\r\n            </div>\r\n            <jhi-programming-exercise-build-plan-checkout-directories\r\n                [checkoutDirectories]=\"checkoutDirectories.submissionBuildPlanCheckoutDirectories\"\r\n                [auxiliaryRepositories]=\"programmingExercise.auxiliaryRepositories ?? []\"\r\n            />\r\n        </div>\r\n        <div class=\"col-auto rounded pt-1 pb-1 preview-box\" id=\"checkout-directory-preview-solution-build-plan\">\r\n            <div>\r\n                <span class=\"font-weight-bold\" jhiTranslate=\"artemisApp.programmingExercise.preview.solutionBuildPlan\"></span>\r\n                <jhi-help-icon text=\"artemisApp.programmingExercise.preview.solutionBuildPlanTooltip\" />\r\n            </div>\r\n            <jhi-programming-exercise-build-plan-checkout-directories\r\n                [checkoutDirectories]=\"checkoutDirectories.solutionBuildPlanCheckoutDirectories\"\r\n                [auxiliaryRepositories]=\"programmingExercise.auxiliaryRepositories ?? []\"\r\n            />\r\n        </div>\r\n    }\r\n</div>\r\n\r\n<ng-template #repositoryBadge let-helpIconText=\"helpIconText\" let-trailingRepoSlug=\"trailingRepoSlug\" let-isBuildPlan=\"isBuildPlan\" let-isAuxRepo=\"isAuxRepo\">\r\n    <li>\r\n        <code [class]=\"'text-white badge label-preview ' + (isBuildPlan ? ' text-uppercase' : 'text-lowercase') + (isAuxRepo ? ' bg-success' : ' bg-primary')\">\r\n            {{ courseShortName }}{{ programmingExercise?.shortName }}{{ trailingRepoSlug }}\r\n        </code>\r\n        @if (helpIconText) {\r\n            <jhi-help-icon [text]=\"helpIconText\" />\r\n        }\r\n    </li>\r\n</ng-template>\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275textInterpolate2", "ctx_r1", "ROOT_DIRECTORY_PATH", "auxiliaryRepository_r1", "checkoutDirectory", "\u0275\u0275element", "\u0275\u0275repeaterCreate", "ProgrammingExerciseBuildPlanCheckoutDirectoriesComponent_Conditional_0_For_24_Template", "\u0275\u0275repeaterTrackByIdentity", "\u0275\u0275classProp", "checkoutDirectories", "exerciseCheckoutDirectory", "\u0275\u0275textInterpolate1", "solutionCheckoutDirectory", "testCheckoutDirectory", "\u0275\u0275repeater", "auxiliaryRepositories", "ProgrammingExerciseBuildPlanCheckoutDirectoriesComponent", "selectors", "inputs", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275template", "ProgrammingExerciseBuildPlanCheckoutDirectoriesComponent_Conditional_0_Template", "\u0275\u0275conditional", "\u0275\u0275elementContainer", "\u0275\u0275text", "\u0275\u0275template", "ProgrammingExerciseRepositoryAndBuildPlanDetailsComponent_Conditional_21_For_2_ng_container_1_Template", "\u0275\u0275advance", "\u0275\u0275property", "repositoryBadge_r2", "\u0275\u0275pureFunction1", "_c3", "auxiliaryRepository_r1", "name", "\u0275\u0275repeaterCreate", "ProgrammingExerciseRepositoryAndBuildPlanDetailsComponent_Conditional_21_For_2_Template", "\u0275\u0275repeaterTrackByIdentity", "\u0275\u0275repeater", "ctx_r2", "programmingExercise", "auxiliaryRepositories", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "ProgrammingExerciseRepositoryAndBuildPlanDetailsComponent_Conditional_25_ng_container_12_Template", "ProgrammingExerciseRepositoryAndBuildPlanDetailsComponent_Conditional_25_ng_container_14_Template", "\u0275\u0275pureFunction0", "_c4", "_c5", "checkoutDirectories", "submissionBuildPlanCheckoutDirectories", "tmp_3_0", "undefined", "_c6", "solutionBuildPlanCheckoutDirectories", "tmp_5_0", "helpIconText_r4", "ProgrammingExerciseRepositoryAndBuildPlanDetailsComponent_ng_template_28_Conditional_6_Template", "\u0275\u0275classMap", "isBuildPlan_r6", "isAuxRepo_r7", "\u0275\u0275textInterpolate3", "courseShortName", "shortName", "trailingRepoSlug_r5", "\u0275\u0275conditional", "ProgrammingExerciseRepositoryAndBuildPlanDetailsComponent", "programmingExerciseService", "inject", "ProgrammingExerciseService", "programmingExerciseBuildConfig", "programmingLanguage", "isLocal", "checkoutSolutionRepository", "isCreateOrEdit", "isEditMode", "submissionBuildPlanEvent", "EventEmitter", "checkoutDirectorySubscription", "ngOnInit", "updateCourseShortName", "updateCheckoutDirectories", "ngOnChanges", "changes", "isProgrammingLanguageUpdated", "currentValue", "previousValue", "isCheckoutSolutionRepositoryUpdated", "resetProgrammingExerciseBuildCheckoutPaths", "isBuildConfigChanged", "isBuildConfigAvailable", "buildConfig", "setCheckoutDirectoriesFromBuildConfig", "ngOnDestroy", "unsubscribe", "CHECKOUT_SOLUTION_REPOSITORY_DEFAULT", "getCheckoutDirectoriesForProgrammingLanguage", "subscribe", "emit", "solutionCheckoutDirectory", "addLeadingSlash", "assignmentCheckoutPath", "testCheckoutDirectory", "testCheckoutPath", "exerciseCheckoutDirectory", "solutionCheckoutPath", "getCourseFromExercise", "path", "startsWith", "trim", "selectors", "inputs", "outputs", "features", "\u0275\u0275NgOnChangesFeature", "decls", "vars", "consts", "template", "rf", "ctx", "ProgrammingExerciseRepositoryAndBuildPlanDetailsComponent_ng_container_15_Template", "ProgrammingExerciseRepositoryAndBuildPlanDetailsComponent_ng_container_17_Template", "ProgrammingExerciseRepositoryAndBuildPlanDetailsComponent_ng_container_19_Template", "ProgrammingExerciseRepositoryAndBuildPlanDetailsComponent_Conditional_21_Template", "ProgrammingExerciseRepositoryAndBuildPlanDetailsComponent_Conditional_25_Template", "ProgrammingExerciseRepositoryAndBuildPlanDetailsComponent_Conditional_26_Template", "ProgrammingExerciseRepositoryAndBuildPlanDetailsComponent_ng_template_28_Template", "\u0275\u0275templateRefExtractor", "_c0", "_c1", "_c2", "length", "ProgrammingExerciseBuildPlanCheckoutDirectoriesComponent", "HelpIconComponent", "CommonModule", "NgTemplateOutlet", "TranslateDirective", "styles"]
}
