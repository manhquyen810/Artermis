{
  "version": 3,
  "sources": ["src/main/webapp/app/lecture/lecture-unit/lecture-unit-management/videoUnit.service.ts", "src/main/webapp/app/lecture/lecture-unit/lecture-unit-management/video-unit-form/video-unit-form.component.ts", "src/main/webapp/app/lecture/lecture-unit/lecture-unit-management/video-unit-form/video-unit-form.component.html"],
  "sourcesContent": ["import { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Injectable, inject } from '@angular/core';\r\nimport { VideoUnit } from 'app/entities/lecture-unit/videoUnit.model';\r\nimport { LectureUnitService } from 'app/lecture/lecture-unit/lecture-unit-management/lectureUnit.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\ntype EntityResponseType = HttpResponse<VideoUnit>;\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class VideoUnitService {\r\n    private httpClient = inject(HttpClient);\r\n    private lectureUnitService = inject(LectureUnitService);\r\n\r\n    private resourceURL = 'api/lecture';\r\n\r\n    create(videoUnit: VideoUnit, lectureId: number): Observable<EntityResponseType> {\r\n        return this.httpClient\r\n            .post<VideoUnit>(`${this.resourceURL}/lectures/${lectureId}/video-units`, videoUnit, { observe: 'response' })\r\n            .pipe(map((res: EntityResponseType) => this.lectureUnitService.convertLectureUnitResponseDatesFromServer(res)));\r\n    }\r\n\r\n    findById(videoUnitId: number, lectureId: number) {\r\n        return this.httpClient\r\n            .get<VideoUnit>(`${this.resourceURL}/lectures/${lectureId}/video-units/${videoUnitId}`, { observe: 'response' })\r\n            .pipe(map((res: EntityResponseType) => this.lectureUnitService.convertLectureUnitResponseDatesFromServer(res)));\r\n    }\r\n\r\n    update(videoUnit: VideoUnit, lectureId: number): Observable<EntityResponseType> {\r\n        return this.httpClient\r\n            .put<VideoUnit>(`${this.resourceURL}/lectures/${lectureId}/video-units`, videoUnit, { observe: 'response' })\r\n            .pipe(map((res: EntityResponseType) => this.lectureUnitService.convertLectureUnitResponseDatesFromServer(res)));\r\n    }\r\n}\r\n", "import dayjs from 'dayjs/esm';\r\nimport { Component, computed, effect, inject, input, output, untracked, viewChild } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, ValidationErrors, Validators } from '@angular/forms';\r\nimport urlParser from 'js-video-url-parser';\r\nimport { faArrowLeft, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { CompetencyLectureUnitLink } from 'app/entities/competency.model';\r\nimport { toSignal } from '@angular/core/rxjs-interop';\r\nimport { FormDateTimePickerComponent } from 'app/shared/date-time-picker/date-time-picker.component';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { CompetencySelectionComponent } from 'app/shared/competency-selection/competency-selection.component';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\nexport interface VideoUnitFormData {\r\n    name?: string;\r\n    description?: string;\r\n    releaseDate?: dayjs.Dayjs;\r\n    source?: string;\r\n    competencyLinks?: CompetencyLectureUnitLink[];\r\n}\r\n\r\nfunction isTumLiveUrl(url: URL): boolean {\r\n    return url.host === 'live.rbg.tum.de';\r\n}\r\n\r\nfunction isVideoOnlyTumUrl(url: URL): boolean {\r\n    return url?.searchParams.get('video_only') === '1';\r\n}\r\n\r\nfunction videoSourceTransformUrlValidator(control: AbstractControl): ValidationErrors | undefined {\r\n    const urlValue = control.value;\r\n    if (!urlValue) {\r\n        return undefined;\r\n    }\r\n    let parsedUrl, url;\r\n    try {\r\n        url = new URL(urlValue);\r\n        parsedUrl = urlParser.parse(urlValue);\r\n    } catch {\r\n        //intentionally empty\r\n    }\r\n    // The URL is valid if it's a TUM-Live URL or if it can be parsed by the js-video-url-parser.\r\n    if ((url && isTumLiveUrl(url)) || parsedUrl) {\r\n        return undefined;\r\n    }\r\n    return { invalidVideoUrl: true };\r\n}\r\n\r\nfunction videoSourceUrlValidator(control: AbstractControl): ValidationErrors | undefined {\r\n    let url;\r\n    try {\r\n        url = new URL(control.value);\r\n    } catch {\r\n        // intentionally empty\r\n    }\r\n    if (url && !(isTumLiveUrl(url) && !isVideoOnlyTumUrl(url))) {\r\n        return undefined;\r\n    }\r\n    return { invalidVideoUrl: true };\r\n}\r\n\r\n@Component({\r\n    selector: 'jhi-video-unit-form',\r\n    templateUrl: './video-unit-form.component.html',\r\n    imports: [FormsModule, ReactiveFormsModule, TranslateDirective, FormDateTimePickerComponent, CompetencySelectionComponent, FaIconComponent, ArtemisTranslatePipe],\r\n})\r\nexport class VideoUnitFormComponent {\r\n    protected readonly faTimes = faTimes;\r\n    protected readonly faArrowLeft = faArrowLeft;\r\n\r\n    private readonly formBuilder = inject(FormBuilder);\r\n\r\n    formData = input<VideoUnitFormData>();\r\n    isEditMode = input<boolean>(false);\r\n\r\n    formSubmitted = output<VideoUnitFormData>();\r\n\r\n    hasCancelButton = input<boolean>();\r\n    onCancel = output<void>();\r\n\r\n    datePickerComponent = viewChild(FormDateTimePickerComponent);\r\n\r\n    videoSourceUrlValidator = videoSourceUrlValidator;\r\n    videoSourceTransformUrlValidator = videoSourceTransformUrlValidator;\r\n\r\n    form: FormGroup = this.formBuilder.group({\r\n        name: [undefined as string | undefined, [Validators.required, Validators.maxLength(255)]],\r\n        description: [undefined as string | undefined, [Validators.maxLength(1000)]],\r\n        releaseDate: [undefined as dayjs.Dayjs | undefined],\r\n        source: [undefined as string | undefined, [Validators.required, this.videoSourceUrlValidator]],\r\n        urlHelper: [undefined as string | undefined, this.videoSourceTransformUrlValidator],\r\n        competencyLinks: [undefined as CompetencyLectureUnitLink[] | undefined],\r\n    });\r\n    private readonly statusChanges = toSignal(this.form.statusChanges ?? 'INVALID');\r\n    isFormValid = computed(() => this.statusChanges() === 'VALID' && this.datePickerComponent()?.isValid());\r\n\r\n    constructor() {\r\n        effect(() => {\r\n            if (this.isEditMode() && this.formData()) {\r\n                untracked(() => this.setFormValues(this.formData()!));\r\n            }\r\n        });\r\n    }\r\n\r\n    get nameControl() {\r\n        return this.form.get('name');\r\n    }\r\n\r\n    get descriptionControl() {\r\n        return this.form.get('description');\r\n    }\r\n\r\n    get releaseDateControl() {\r\n        return this.form.get('releaseDate');\r\n    }\r\n\r\n    get sourceControl() {\r\n        return this.form.get('source');\r\n    }\r\n\r\n    get urlHelperControl() {\r\n        return this.form.get('urlHelper');\r\n    }\r\n\r\n    private setFormValues(formData: VideoUnitFormData) {\r\n        this.form.patchValue(formData);\r\n    }\r\n\r\n    submitForm() {\r\n        const videoUnitFormData: VideoUnitFormData = { ...this.form.value };\r\n        this.formSubmitted.emit(videoUnitFormData);\r\n    }\r\n\r\n    get isTransformable() {\r\n        if (this.urlHelperControl!.value === undefined || this.urlHelperControl!.value === null || this.urlHelperControl!.value === '') {\r\n            return false;\r\n        } else {\r\n            return !this.urlHelperControl?.invalid;\r\n        }\r\n    }\r\n\r\n    setEmbeddedVideoUrl(event: any) {\r\n        event.stopPropagation();\r\n        this.sourceControl!.setValue(this.extractEmbeddedUrl(this.urlHelperControl!.value));\r\n    }\r\n\r\n    extractEmbeddedUrl(videoUrl: string) {\r\n        const url = new URL(videoUrl);\r\n        if (isTumLiveUrl(url)) {\r\n            url.searchParams.set('video_only', '1');\r\n            return url.toString();\r\n        }\r\n        return urlParser.create({\r\n            videoInfo: urlParser.parse(videoUrl)!,\r\n            format: 'embed',\r\n        });\r\n    }\r\n\r\n    cancelForm() {\r\n        this.onCancel.emit();\r\n    }\r\n}\r\n", "<form class=\"row\">\r\n    <div class=\"col-12\">\r\n        @if (form) {\r\n            <form [formGroup]=\"form\" (ngSubmit)=\"submitForm()\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"required\" for=\"name\">{{ 'artemisApp.videoUnit.createVideoUnit.name' | artemisTranslate }}*</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        class=\"form-control\"\r\n                        id=\"name\"\r\n                        formControlName=\"name\"\r\n                        [placeholder]=\"'artemisApp.videoUnit.createVideoUnit.namePlaceHolder' | artemisTranslate\"\r\n                    />\r\n                    @if (nameControl?.invalid && (nameControl?.dirty || nameControl?.touched)) {\r\n                        <div class=\"alert alert-danger\">\r\n                            @if (nameControl?.errors?.required) {\r\n                                <div jhiTranslate=\"artemisApp.videoUnit.createVideoUnit.nameRequiredValidationError\"></div>\r\n                            }\r\n                            @if (nameControl?.errors?.maxlength) {\r\n                                <div jhiTranslate=\"artemisApp.videoUnit.createVideoUnit.nameMaxLengthValidationError\"></div>\r\n                            }\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"description\" jhiTranslate=\"artemisApp.videoUnit.createVideoUnit.description\"></label>\r\n                    <textarea\r\n                        class=\"form-control\"\r\n                        id=\"description\"\r\n                        rows=\"3\"\r\n                        formControlName=\"description\"\r\n                        [placeholder]=\"'artemisApp.videoUnit.createVideoUnit.descriptionPlaceHolder' | artemisTranslate\"\r\n                    ></textarea>\r\n                    @if (descriptionControl?.invalid && (descriptionControl?.dirty || descriptionControl?.touched)) {\r\n                        <div class=\"alert alert-danger\">\r\n                            @if (descriptionControl?.errors?.maxlength) {\r\n                                <div jhiTranslate=\"artemisApp.videoUnit.createVideoUnit.descriptionMaxLengthValidationError\"></div>\r\n                            }\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <jhi-date-time-picker [labelName]=\"'artemisApp.lectureUnit.releaseDate' | artemisTranslate\" formControlName=\"releaseDate\" />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <jhi-competency-selection\r\n                        id=\"competencies\"\r\n                        [labelName]=\"'artemisApp.competency.link.title' | artemisTranslate\"\r\n                        [labelTooltip]=\"'artemisApp.competency.link.lectureUnit' | artemisTranslate\"\r\n                        formControlName=\"competencyLinks\"\r\n                    />\r\n                </div>\r\n                <div class=\"container\" style=\"padding: 0\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-4\">\r\n                            <label class=\"required\" for=\"source\">{{ 'artemisApp.videoUnit.createVideoUnit.source' | artemisTranslate }}*</label>\r\n                        </div>\r\n                        <div class=\"col-1\"></div>\r\n                        <div class=\"col-7\">\r\n                            <label for=\"urlHelper\" jhiTranslate=\"artemisApp.videoUnit.createVideoUnit.urlVideoHelper\"></label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-4\">\r\n                            <input\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                id=\"source\"\r\n                                formControlName=\"source\"\r\n                                [placeholder]=\"'artemisApp.videoUnit.createVideoUnit.sourcePlaceHolder' | artemisTranslate\"\r\n                            />\r\n                        </div>\r\n                        <div class=\"col-1 mx-auto text-center align-self-center\">\r\n                            <button id=\"transformButton\" type=\"button\" class=\"btn btn-sm btn-primary\" [disabled]=\"!isTransformable\" (click)=\"setEmbeddedVideoUrl($event)\">\r\n                                <fa-icon [icon]=\"faArrowLeft\" />\r\n                            </button>\r\n                        </div>\r\n                        <div class=\"col-7\">\r\n                            <input type=\"text\" class=\"form-control\" id=\"urlHelper\" formControlName=\"urlHelper\" aria-describedby=\"urlHelperExplanation\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-4\">\r\n                            @if (sourceControl?.invalid && (sourceControl?.dirty || sourceControl?.touched)) {\r\n                                <div class=\"alert alert-danger\">\r\n                                    @if (sourceControl?.errors?.required) {\r\n                                        <div jhiTranslate=\"artemisApp.videoUnit.createVideoUnit.sourceRequiredValidationError\"></div>\r\n                                    }\r\n                                    @if (sourceControl?.errors?.invalidVideoUrl) {\r\n                                        <div jhiTranslate=\"artemisApp.videoUnit.createVideoUnit.sourceURLValidationError\"></div>\r\n                                    }\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        <div class=\"col-1\"></div>\r\n                        <div class=\"col-7\">\r\n                            <small id=\"urlHelperExplanation\" class=\"form-text text-body-secondary\" jhiTranslate=\"artemisApp.videoUnit.createVideoUnit.urlHelperPlaceholder\"></small>\r\n                            @if (urlHelperControl?.invalid && (urlHelperControl?.dirty || urlHelperControl?.touched)) {\r\n                                <div class=\"alert alert-danger\">\r\n                                    @if (urlHelperControl?.errors?.invalidVideoUrl) {\r\n                                        <div jhiTranslate=\"artemisApp.videoUnit.createVideoUnit.urlHelperValidationError\"></div>\r\n                                    }\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <button id=\"submitButton\" class=\"btn btn-primary\" type=\"submit\" [disabled]=\"!isFormValid()\">\r\n                            <span jhiTranslate=\"entity.action.submit\"></span>\r\n                        </button>\r\n                        @if (hasCancelButton()) {\r\n                            <button type=\"button\" (click)=\"cancelForm()\" class=\"btn btn-secondary\">\r\n                                <fa-icon [icon]=\"faTimes\" />&nbsp;<span jhiTranslate=\"entity.action.cancel\"></span>\r\n                            </button>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        }\r\n    </div>\r\n</form>\r\n"],
  "mappings": "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",
  "names": ["VideoUnitService", "httpClient", "inject", "HttpClient", "lectureUnitService", "LectureUnitService", "resourceURL", "create", "videoUnit", "lectureId", "post", "observe", "pipe", "map", "res", "convertLectureUnitResponseDatesFromServer", "findById", "videoUnitId", "get", "update", "put", "factory", "\u0275fac", "providedIn", "import_js_video_url_parser", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275elementStart", "\u0275\u0275template", "VideoUnitFormComponent_Conditional_4_Conditional_12_Conditional_3_Template", "VideoUnitFormComponent_Conditional_4_Conditional_12_Conditional_4_Template", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275conditional", "ctx_r1", "nameControl", "errors", "required", "maxlength", "VideoUnitFormComponent_Conditional_4_Conditional_21_Conditional_3_Template", "descriptionControl", "VideoUnitFormComponent_Conditional_4_Conditional_81_Conditional_3_Template", "VideoUnitFormComponent_Conditional_4_Conditional_81_Conditional_4_Template", "sourceControl", "invalidVideoUrl", "VideoUnitFormComponent_Conditional_4_Conditional_89_Conditional_3_Template", "urlHelperControl", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r3", "\u0275\u0275nextContext", "\u0275\u0275resetView", "cancelForm", "\u0275\u0275property", "faTimes", "_r1", "submitForm", "VideoUnitFormComponent_Conditional_4_Conditional_12_Template", "VideoUnitFormComponent_Conditional_4_Conditional_21_Template", "$event", "setEmbeddedVideoUrl", "VideoUnitFormComponent_Conditional_4_Conditional_81_Template", "VideoUnitFormComponent_Conditional_4_Conditional_89_Template", "VideoUnitFormComponent_Conditional_4_Conditional_102_Template", "form", "\u0275\u0275textInterpolate1", "\u0275\u0275pipeBind1", "invalid", "dirty", "touched", "isTransformable", "faArrowLeft", "isFormValid", "hasCancelButton", "isTumLiveUrl", "url", "host", "isVideoOnlyTumUrl", "searchParams", "get", "videoSourceTransformUrlValidator", "control", "urlValue", "value", "parsedUrl", "URL", "urlParser", "parse", "videoSourceUrlValidator", "VideoUnitFormComponent", "formBuilder", "inject", "FormBuilder", "formData", "input", "isEditMode", "formSubmitted", "output", "onCancel", "datePickerComponent", "viewChild", "FormDateTimePickerComponent", "group", "name", "undefined", "Validators", "maxLength", "description", "releaseDate", "source", "urlHelper", "competencyLinks", "statusChanges", "toSignal", "computed", "isValid", "constructor", "effect", "untracked", "setFormValues", "releaseDateControl", "patchValue", "videoUnitFormData", "__spreadValues", "emit", "event", "stopPropagation", "setValue", "extractEmbeddedUrl", "videoUrl", "set", "toString", "create", "videoInfo", "format", "selectors", "viewQuery", "rf", "ctx", "VideoUnitFormComponent_Conditional_4_Template", "FormsModule", "\u0275NgNoValidate", "DefaultValueAccessor", "NgControlStatus", "NgControlStatusGroup", "NgForm", "ReactiveFormsModule", "FormGroupDirective", "FormControlName", "TranslateDirective", "CompetencySelectionComponent", "FaIconComponent", "ArtemisTranslatePipe", "encapsulation"]
}
