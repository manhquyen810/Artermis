{"version":3,"sources":["node_modules/diff-match-patch-typescript/dist/es/constants/index.js","node_modules/diff-match-patch-typescript/dist/es/types/DiffOperation.js","node_modules/diff-match-patch-typescript/dist/es/utils/math.js","node_modules/diff-match-patch-typescript/dist/es/utils/index.js","node_modules/diff-match-patch-typescript/dist/es/core/PatchObject.js","node_modules/diff-match-patch-typescript/dist/es/core/DiffMatchPatch.js","src/main/webapp/app/exercises/shared/feedback/feedback-suggestions-pending-confirmation-dialog/feedback-suggestions-pending-confirmation-dialog.component.ts","src/main/webapp/app/exercises/shared/feedback/feedback-suggestions-pending-confirmation-dialog/feedback-suggestions-pending-confirmation-dialog.component.html","src/main/webapp/app/exercises/programming/assess/code-editor-tutor-assessment-container.component.ts","src/main/webapp/app/exercises/programming/assess/code-editor-tutor-assessment-container.component.html","src/main/webapp/app/orion/assessment/orion-assessment-instructions.component.ts","src/main/webapp/app/orion/assessment/orion-tutor-assessment.component.ts","src/main/webapp/app/orion/assessment/orion-tutor-assessment.component.html","src/main/webapp/app/exercises/programming/manage/programming-exercise-resolve.service.ts","src/main/webapp/app/exercises/programming/shared/routes/programming-exercise-repository.route.ts"],"sourcesContent":["export const NON_ALPHA_NUMERIC_REGEX = /[^a-zA-Z0-9]/;\nexport const WHITESPACE_REGEX = /\\s/;\nexport const LINEBREAK_REGEX = /[\\r\\n]/;\nexport const BLANKLINE_END_REGEX = /\\n\\r?\\n$/;\nexport const BLANKLINE_START_REGEX = /^\\r?\\n\\r?\\n/;","export var DiffOperation = /*#__PURE__*/function (DiffOperation) {\n  DiffOperation[DiffOperation[\"DIFF_DELETE\"] = -1] = \"DIFF_DELETE\";\n  DiffOperation[DiffOperation[\"DIFF_INSERT\"] = 1] = \"DIFF_INSERT\";\n  DiffOperation[DiffOperation[\"DIFF_EQUAL\"] = 0] = \"DIFF_EQUAL\";\n  return DiffOperation;\n}(DiffOperation || {});","export function min(a, b) {\n  return a < b ? a : b;\n}\nexport function max(a, b) {\n  return a > b ? a : b;\n}","import * as m from \"./math\";\nexport const math = m;","import { DiffOperation } from \"../types\";\nexport class PatchObject {\n  diffs = [];\n  start1 = 0;\n  start2 = 0;\n  length1 = 0;\n  length2 = 0;\n  toString() {\n    let coords1;\n    let coords2;\n    if (this.length1 === 0) {\n      coords1 = this.start1 + \",0\";\n    } else if (this.length1 === 1) {\n      coords1 = this.start1 + 1;\n    } else {\n      coords1 = this.start1 + 1 + \",\" + this.length1;\n    }\n    if (this.length2 === 0) {\n      coords2 = this.start2 + \",0\";\n    } else if (this.length2 === 1) {\n      coords2 = this.start2 + 1;\n    } else {\n      coords2 = this.start2 + 1 + \",\" + this.length2;\n    }\n    const text = [\"@@ -\" + coords1 + \" +\" + coords2 + \" @@\\n\"];\n    let op;\n    for (let x = 0; x < this.diffs.length; x++) {\n      switch (this.diffs[x][0]) {\n        case DiffOperation.DIFF_INSERT:\n          op = \"+\";\n          break;\n        case DiffOperation.DIFF_DELETE:\n          op = \"-\";\n          break;\n        case DiffOperation.DIFF_EQUAL:\n          op = \" \";\n          break;\n      }\n      text[x + 1] = op + encodeURI(this.diffs[x][1]) + \"\\n\";\n    }\n    return text.join(\"\").replace(/%20/g, \" \");\n  }\n}","import { BLANKLINE_END_REGEX, BLANKLINE_START_REGEX, LINEBREAK_REGEX, NON_ALPHA_NUMERIC_REGEX, WHITESPACE_REGEX } from \"../constants\";\nimport { DiffOperation } from \"../types\";\nimport { math } from \"../utils\";\nimport { PatchObject } from \"./PatchObject\";\nexport class DiffMatchPatch {\n  diffTimeout = 1.0;\n  diffEditCost = 4;\n  matchThreshold = 0.5;\n  matchDistance = 1000;\n  patchDeleteThreshold = 0.5;\n  patchMargin = 4;\n  matchMaxBits = 32;\n  diff_main(text1, text2, optChecklines, optDeadline) {\n    if (typeof optDeadline === \"undefined\") {\n      if (this.diffTimeout <= 0) {\n        optDeadline = Number.MAX_VALUE;\n      } else {\n        optDeadline = Date.now() + this.diffTimeout * 1000;\n      }\n    }\n    const deadline = optDeadline;\n    if (text1 == null || text2 == null) {\n      throw new Error(\"Null input. (diff_main)\");\n    }\n    if (text1 === text2) {\n      if (text1) {\n        return [[DiffOperation.DIFF_EQUAL, text1]];\n      }\n      return [];\n    }\n    if (typeof optChecklines === \"undefined\") {\n      optChecklines = true;\n    }\n    const checklines = optChecklines;\n    let commonlength = this.diff_commonPrefix(text1, text2);\n    const commonprefix = text1.substring(0, commonlength);\n    text1 = text1.substring(commonlength);\n    text2 = text2.substring(commonlength);\n    commonlength = this.diff_commonSuffix(text1, text2);\n    const commonsuffix = text1.substring(text1.length - commonlength);\n    text1 = text1.substring(0, text1.length - commonlength);\n    text2 = text2.substring(0, text2.length - commonlength);\n    const diffs = this.diff_compute_(text1, text2, checklines, deadline);\n    if (commonprefix) {\n      diffs.unshift([DiffOperation.DIFF_EQUAL, commonprefix]);\n    }\n    if (commonsuffix) {\n      diffs.push([DiffOperation.DIFF_EQUAL, commonsuffix]);\n    }\n    this.diff_cleanupMerge(diffs);\n    return diffs;\n  }\n  diff_commonPrefix(text1, text2) {\n    if (!text1 || !text2 || text1.charAt(0) !== text2.charAt(0)) {\n      return 0;\n    }\n    let pointermin = 0;\n    let pointermax = math.min(text1.length, text2.length);\n    let pointermid = pointermax;\n    let pointerstart = 0;\n    while (pointermin < pointermid) {\n      if (text1.substring(pointerstart, pointermid) === text2.substring(pointerstart, pointermid)) {\n        pointermin = pointermid;\n        pointerstart = pointermin;\n      } else {\n        pointermax = pointermid;\n      }\n      pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n    }\n    return pointermid;\n  }\n  diff_commonSuffix(text1, text2) {\n    if (!text1 || !text2 || text1.charAt(text1.length - 1) !== text2.charAt(text2.length - 1)) {\n      return 0;\n    }\n    let pointermin = 0;\n    let pointermax = math.min(text1.length, text2.length);\n    let pointermid = pointermax;\n    let pointerend = 0;\n    while (pointermin < pointermid) {\n      if (text1.substring(text1.length - pointermid, text1.length - pointerend) === text2.substring(text2.length - pointermid, text2.length - pointerend)) {\n        pointermin = pointermid;\n        pointerend = pointermin;\n      } else {\n        pointermax = pointermid;\n      }\n      pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n    }\n    return pointermid;\n  }\n  diff_cleanupSemantic(diffs) {\n    let changes = false;\n    const equalities = [];\n    let equalitiesLength = 0;\n    let lastEquality = null;\n    let pointer = 0;\n    let lengthInsertions1 = 0;\n    let lengthDeletions1 = 0;\n    let lengthInsertions2 = 0;\n    let lengthDeletions2 = 0;\n    while (pointer < diffs.length) {\n      if (diffs[pointer][0] === DiffOperation.DIFF_EQUAL) {\n        equalities[equalitiesLength++] = pointer;\n        lengthInsertions1 = lengthInsertions2;\n        lengthDeletions1 = lengthDeletions2;\n        lengthInsertions2 = 0;\n        lengthDeletions2 = 0;\n        lastEquality = diffs[pointer][1];\n      } else {\n        if (diffs[pointer][0] === DiffOperation.DIFF_INSERT) {\n          lengthInsertions2 += diffs[pointer][1].length;\n        } else {\n          lengthDeletions2 += diffs[pointer][1].length;\n        }\n        if (lastEquality && lastEquality.length <= math.max(lengthInsertions1, lengthDeletions1) && lastEquality.length <= math.max(lengthInsertions2, lengthDeletions2)) {\n          diffs.splice(equalities[equalitiesLength - 1], 0, [DiffOperation.DIFF_DELETE, lastEquality]);\n          diffs[equalities[equalitiesLength - 1] + 1][0] = DiffOperation.DIFF_INSERT;\n          equalitiesLength--;\n          equalitiesLength--;\n          pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1;\n          lengthInsertions1 = 0;\n          lengthDeletions1 = 0;\n          lengthInsertions2 = 0;\n          lengthDeletions2 = 0;\n          lastEquality = null;\n          changes = true;\n        }\n      }\n      pointer++;\n    }\n    if (changes) {\n      this.diff_cleanupMerge(diffs);\n    }\n    this.diff_cleanupSemanticLossless(diffs);\n    pointer = 1;\n    while (pointer < diffs.length) {\n      if (diffs[pointer - 1][0] === DiffOperation.DIFF_DELETE && diffs[pointer][0] === DiffOperation.DIFF_INSERT) {\n        const deletion = diffs[pointer - 1][1];\n        const insertion = diffs[pointer][1];\n        const overlapLength1 = this.diff_commonOverlap_(deletion, insertion);\n        const overlapLength2 = this.diff_commonOverlap_(insertion, deletion);\n        if (overlapLength1 >= overlapLength2) {\n          if (overlapLength1 >= deletion.length / 2 || overlapLength1 >= insertion.length / 2) {\n            diffs.splice(pointer, 0, [DiffOperation.DIFF_EQUAL, insertion.substring(0, overlapLength1)]);\n            diffs[pointer - 1][1] = deletion.substring(0, deletion.length - overlapLength1);\n            diffs[pointer + 1][1] = insertion.substring(overlapLength1);\n            pointer++;\n          }\n        } else {\n          if (overlapLength2 >= deletion.length / 2 || overlapLength2 >= insertion.length / 2) {\n            diffs.splice(pointer, 0, [DiffOperation.DIFF_EQUAL, deletion.substring(0, overlapLength2)]);\n            diffs[pointer - 1][0] = DiffOperation.DIFF_INSERT;\n            diffs[pointer - 1][1] = insertion.substring(0, insertion.length - overlapLength2);\n            diffs[pointer + 1][0] = DiffOperation.DIFF_DELETE;\n            diffs[pointer + 1][1] = deletion.substring(overlapLength2);\n            pointer++;\n          }\n        }\n        pointer++;\n      }\n      pointer++;\n    }\n  }\n  diff_cleanupSemanticLossless(diffs) {\n    let pointer = 1;\n    while (pointer < diffs.length - 1) {\n      if (diffs[pointer - 1][0] === DiffOperation.DIFF_EQUAL && diffs[pointer + 1][0] === DiffOperation.DIFF_EQUAL) {\n        let equality1 = diffs[pointer - 1][1];\n        let edit = diffs[pointer][1];\n        let equality2 = diffs[pointer + 1][1];\n        const commonOffset = this.diff_commonSuffix(equality1, edit);\n        if (commonOffset) {\n          const commonString = edit.substring(edit.length - commonOffset);\n          equality1 = equality1.substring(0, equality1.length - commonOffset);\n          edit = commonString + edit.substring(0, edit.length - commonOffset);\n          equality2 = commonString + equality2;\n        }\n        let bestEquality1 = equality1;\n        let bestEdit = edit;\n        let bestEquality2 = equality2;\n        let bestScore = this.diff_cleanupSemanticScore_(equality1, edit) + this.diff_cleanupSemanticScore_(edit, equality2);\n        while (edit.charAt(0) === equality2.charAt(0)) {\n          equality1 += edit.charAt(0);\n          edit = edit.substring(1) + equality2.charAt(0);\n          equality2 = equality2.substring(1);\n          const score = this.diff_cleanupSemanticScore_(equality1, edit) + this.diff_cleanupSemanticScore_(edit, equality2);\n          if (score >= bestScore) {\n            bestScore = score;\n            bestEquality1 = equality1;\n            bestEdit = edit;\n            bestEquality2 = equality2;\n          }\n        }\n        if (diffs[pointer - 1][1] !== bestEquality1) {\n          if (bestEquality1) {\n            diffs[pointer - 1][1] = bestEquality1;\n          } else {\n            diffs.splice(pointer - 1, 1);\n            pointer--;\n          }\n          diffs[pointer][1] = bestEdit;\n          if (bestEquality2) {\n            diffs[pointer + 1][1] = bestEquality2;\n          } else {\n            diffs.splice(pointer + 1, 1);\n            pointer--;\n          }\n        }\n      }\n      pointer++;\n    }\n  }\n  diff_cleanupEfficiency(diffs) {\n    let changes = false;\n    const equalities = [];\n    let equalitiesLength = 0;\n    let lastEquality = null;\n    let pointer = 0;\n    let preIns = false;\n    let preDel = false;\n    let postIns = false;\n    let postDel = false;\n    while (pointer < diffs.length) {\n      if (diffs[pointer][0] === DiffOperation.DIFF_EQUAL) {\n        if (diffs[pointer][1].length < this.diffEditCost && (postIns || postDel)) {\n          equalities[equalitiesLength++] = pointer;\n          preIns = postIns;\n          preDel = postDel;\n          lastEquality = diffs[pointer][1];\n        } else {\n          equalitiesLength = 0;\n          lastEquality = null;\n        }\n        postIns = postDel = false;\n      } else {\n        if (diffs[pointer][0] === DiffOperation.DIFF_DELETE) {\n          postDel = true;\n        } else {\n          postIns = true;\n        }\n        if (lastEquality && (preIns && preDel && postIns && postDel || lastEquality.length < this.diffEditCost / 2 && Number(preIns) + Number(preDel) + Number(postIns) + Number(postDel) === 3)) {\n          diffs.splice(equalities[equalitiesLength - 1], 0, [DiffOperation.DIFF_DELETE, lastEquality]);\n          diffs[equalities[equalitiesLength - 1] + 1][0] = DiffOperation.DIFF_INSERT;\n          equalitiesLength--;\n          lastEquality = null;\n          if (preIns && preDel) {\n            postIns = postDel = true;\n            equalitiesLength = 0;\n          } else {\n            equalitiesLength--;\n            pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1;\n            postIns = postDel = false;\n          }\n          changes = true;\n        }\n      }\n      pointer++;\n    }\n    if (changes) {\n      this.diff_cleanupMerge(diffs);\n    }\n  }\n  diff_cleanupMerge(diffs) {\n    diffs.push([DiffOperation.DIFF_EQUAL, \"\"]);\n    let pointer = 0;\n    let countDelete = 0;\n    let countInsert = 0;\n    let textDelete = \"\";\n    let textInsert = \"\";\n    let commonlength;\n    while (pointer < diffs.length) {\n      switch (diffs[pointer][0]) {\n        case DiffOperation.DIFF_INSERT:\n          countInsert++;\n          textInsert += diffs[pointer][1];\n          pointer++;\n          break;\n        case DiffOperation.DIFF_DELETE:\n          countDelete++;\n          textDelete += diffs[pointer][1];\n          pointer++;\n          break;\n        case DiffOperation.DIFF_EQUAL:\n          if (countDelete + countInsert > 1) {\n            if (countDelete !== 0 && countInsert !== 0) {\n              commonlength = this.diff_commonPrefix(textInsert, textDelete);\n              if (commonlength !== 0) {\n                if (pointer - countDelete - countInsert > 0 && diffs[pointer - countDelete - countInsert - 1][0] === DiffOperation.DIFF_EQUAL) {\n                  diffs[pointer - countDelete - countInsert - 1][1] += textInsert.substring(0, commonlength);\n                } else {\n                  diffs.splice(0, 0, [DiffOperation.DIFF_EQUAL, textInsert.substring(0, commonlength)]);\n                  pointer++;\n                }\n                textInsert = textInsert.substring(commonlength);\n                textDelete = textDelete.substring(commonlength);\n              }\n              commonlength = this.diff_commonSuffix(textInsert, textDelete);\n              if (commonlength !== 0) {\n                diffs[pointer][1] = textInsert.substring(textInsert.length - commonlength) + diffs[pointer][1];\n                textInsert = textInsert.substring(0, textInsert.length - commonlength);\n                textDelete = textDelete.substring(0, textDelete.length - commonlength);\n              }\n            }\n            pointer -= countDelete + countInsert;\n            diffs.splice(pointer, countDelete + countInsert);\n            if (textDelete.length) {\n              diffs.splice(pointer, 0, [DiffOperation.DIFF_DELETE, textDelete]);\n              pointer++;\n            }\n            if (textInsert.length) {\n              diffs.splice(pointer, 0, [DiffOperation.DIFF_INSERT, textInsert]);\n              pointer++;\n            }\n            pointer++;\n          } else if (pointer !== 0 && diffs[pointer - 1][0] === DiffOperation.DIFF_EQUAL) {\n            diffs[pointer - 1][1] += diffs[pointer][1];\n            diffs.splice(pointer, 1);\n          } else {\n            pointer++;\n          }\n          countInsert = 0;\n          countDelete = 0;\n          textDelete = \"\";\n          textInsert = \"\";\n          break;\n      }\n    }\n    if (diffs[diffs.length - 1][1] === \"\") {\n      diffs.pop();\n    }\n    let changes = false;\n    pointer = 1;\n    while (pointer < diffs.length - 1) {\n      if (diffs[pointer - 1][0] === DiffOperation.DIFF_EQUAL && diffs[pointer + 1][0] === DiffOperation.DIFF_EQUAL) {\n        if (diffs[pointer][1].substring(diffs[pointer][1].length - diffs[pointer - 1][1].length) === diffs[pointer - 1][1]) {\n          diffs[pointer][1] = diffs[pointer - 1][1] + diffs[pointer][1].substring(0, diffs[pointer][1].length - diffs[pointer - 1][1].length);\n          diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n          diffs.splice(pointer - 1, 1);\n          changes = true;\n        } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) === diffs[pointer + 1][1]) {\n          diffs[pointer - 1][1] += diffs[pointer + 1][1];\n          diffs[pointer][1] = diffs[pointer][1].substring(diffs[pointer + 1][1].length) + diffs[pointer + 1][1];\n          diffs.splice(pointer + 1, 1);\n          changes = true;\n        }\n      }\n      pointer++;\n    }\n    if (changes) {\n      this.diff_cleanupMerge(diffs);\n    }\n  }\n  diff_xIndex(diffs, loc) {\n    let chars1 = 0;\n    let chars2 = 0;\n    let lastChars1 = 0;\n    let lastChars2 = 0;\n    let x;\n    for (x = 0; x < diffs.length; x++) {\n      if (diffs[x][0] !== DiffOperation.DIFF_INSERT) {\n        chars1 += diffs[x][1].length;\n      }\n      if (diffs[x][0] !== DiffOperation.DIFF_DELETE) {\n        chars2 += diffs[x][1].length;\n      }\n      if (chars1 > loc) {\n        break;\n      }\n      lastChars1 = chars1;\n      lastChars2 = chars2;\n    }\n    if (diffs.length !== x && diffs[x][0] === DiffOperation.DIFF_DELETE) {\n      return lastChars2;\n    }\n    return lastChars2 + (loc - lastChars1);\n  }\n  diff_prettyHtml(diffs) {\n    const html = [];\n    const patternAMP = /&/g;\n    const patternLT = /</g;\n    const patternGT = />/g;\n    const patternPARA = /\\n/g;\n    for (let x = 0; x < diffs.length; x++) {\n      const op = diffs[x][0];\n      const data = diffs[x][1];\n      const text = data.replace(patternAMP, \"&amp;\").replace(patternLT, \"&lt;\").replace(patternGT, \"&gt;\").replace(patternPARA, \"&para;<br>\");\n      switch (op) {\n        case DiffOperation.DIFF_INSERT:\n          html[x] = '<ins style=\"background:#e6ffe6;\">' + text + \"</ins>\";\n          break;\n        case DiffOperation.DIFF_DELETE:\n          html[x] = '<del style=\"background:#ffe6e6;\">' + text + \"</del>\";\n          break;\n        case DiffOperation.DIFF_EQUAL:\n          html[x] = \"<span>\" + text + \"</span>\";\n          break;\n      }\n    }\n    return html.join(\"\");\n  }\n  diff_text1(diffs) {\n    const text = [];\n    for (let x = 0; x < diffs.length; x++) {\n      if (diffs[x][0] !== DiffOperation.DIFF_INSERT) {\n        text[x] = diffs[x][1];\n      }\n    }\n    return text.join(\"\");\n  }\n  diff_text2(diffs) {\n    const text = [];\n    for (let x = 0; x < diffs.length; x++) {\n      if (diffs[x][0] !== DiffOperation.DIFF_DELETE) {\n        text[x] = diffs[x][1];\n      }\n    }\n    return text.join(\"\");\n  }\n  diff_levenshtein(diffs) {\n    let levenshtein = 0;\n    let insertions = 0;\n    let deletions = 0;\n    for (let x = 0; x < diffs.length; x++) {\n      const op = diffs[x][0];\n      const data = diffs[x][1];\n      switch (op) {\n        case DiffOperation.DIFF_INSERT:\n          insertions += data.length;\n          break;\n        case DiffOperation.DIFF_DELETE:\n          deletions += data.length;\n          break;\n        case DiffOperation.DIFF_EQUAL:\n          levenshtein += math.max(insertions, deletions);\n          insertions = 0;\n          deletions = 0;\n          break;\n      }\n    }\n    levenshtein += math.max(insertions, deletions);\n    return levenshtein;\n  }\n  diff_toDelta(diffs) {\n    const text = [];\n    for (let x = 0; x < diffs.length; x++) {\n      switch (diffs[x][0]) {\n        case DiffOperation.DIFF_INSERT:\n          text[x] = \"+\" + encodeURI(diffs[x][1]);\n          break;\n        case DiffOperation.DIFF_DELETE:\n          text[x] = \"-\" + diffs[x][1].length;\n          break;\n        case DiffOperation.DIFF_EQUAL:\n          text[x] = \"=\" + diffs[x][1].length;\n          break;\n      }\n    }\n    return text.join(\"\\t\").replace(/%20/g, \" \");\n  }\n  diff_fromDelta(text1, delta) {\n    const diffs = [];\n    let diffsLength = 0;\n    let pointer = 0;\n    const tokens = delta.split(/\\t/g);\n    for (let x = 0; x < tokens.length; x++) {\n      const param = tokens[x].substring(1);\n      switch (tokens[x].charAt(0)) {\n        case \"+\":\n          try {\n            diffs[diffsLength++] = [DiffOperation.DIFF_INSERT, decodeURI(param)];\n          } catch {\n            throw new Error(\"Illegal escape in diff_fromDelta: \" + param);\n          }\n          break;\n        case \"-\":\n        case \"=\":\n          const n = parseInt(param, 10);\n          if (isNaN(n) || n < 0) {\n            throw new Error(\"Invalid number in diff_fromDelta: \" + param);\n          }\n          const text = text1.substring(pointer, pointer += n);\n          if (tokens[x].charAt(0) === \"=\") {\n            diffs[diffsLength++] = [DiffOperation.DIFF_EQUAL, text];\n          } else {\n            diffs[diffsLength++] = [DiffOperation.DIFF_DELETE, text];\n          }\n          break;\n        default:\n          if (tokens[x]) {\n            throw new Error(\"Invalid diff operation in diff_fromDelta: \" + tokens[x]);\n          }\n      }\n    }\n    if (pointer !== text1.length) {\n      throw new Error(\"Delta length (\" + pointer + \") does not equal source text length (\" + text1.length + \")\");\n    }\n    return diffs;\n  }\n  diff_linesToChars(text1, text2) {\n    const lineArray = [];\n    const lineHash = {};\n    lineArray[0] = \"\";\n    const chars1 = this.diff_linesToCharsMunge_(text1, lineArray, lineHash, 40000);\n    const chars2 = this.diff_linesToCharsMunge_(text2, lineArray, lineHash, 65535);\n    return {\n      chars1,\n      chars2,\n      lineArray\n    };\n  }\n  diff_charsToLines(diffs, lineArray) {\n    for (let i = 0; i < diffs.length; i++) {\n      const chars = diffs[i][1];\n      const text = [];\n      for (let j = 0; j < chars.length; j++) {\n        text[j] = lineArray[chars.charCodeAt(j)];\n      }\n      diffs[i][1] = text.join(\"\");\n    }\n  }\n  match_main(text, pattern, loc) {\n    if (text == null || pattern == null || loc == null) {\n      throw new Error(\"Null input. (match_main)\");\n    }\n    loc = math.max(0, math.min(loc, text.length));\n    if (text === pattern) {\n      return 0;\n    } else if (!text.length) {\n      return -1;\n    } else if (text.substring(loc, loc + pattern.length) === pattern) {\n      return loc;\n    } else {\n      return this.match_bitap_(text, pattern, loc);\n    }\n  }\n  patch_make(a, optB, optC) {\n    let text1;\n    let diffs;\n    if (typeof a === \"string\" && typeof optB === \"string\" && typeof optC === \"undefined\") {\n      text1 = a;\n      diffs = this.diff_main(text1, optB, true);\n      if (diffs.length > 2) {\n        this.diff_cleanupSemantic(diffs);\n        this.diff_cleanupEfficiency(diffs);\n      }\n    } else if (a && typeof a === \"object\" && typeof optB === \"undefined\" && typeof optC === \"undefined\") {\n      diffs = a;\n      text1 = this.diff_text1(diffs);\n    } else if (typeof a === \"string\" && optB && typeof optB === \"object\" && typeof optC === \"undefined\") {\n      text1 = a;\n      diffs = optB;\n    } else if (typeof a === \"string\" && typeof optB === \"string\" && optC && typeof optC === \"object\") {\n      text1 = a;\n      diffs = optC;\n    } else {\n      throw new Error(\"Unknown call format to patch_make\");\n    }\n    if (diffs.length === 0) {\n      return [];\n    }\n    const patches = [];\n    let patch = new PatchObject();\n    let patchDiffLength = 0;\n    let charCount1 = 0;\n    let charCount2 = 0;\n    let prepatchText = text1;\n    let postpatchText = text1;\n    for (let x = 0; x < diffs.length; x++) {\n      const diffType = diffs[x][0];\n      const diffText = diffs[x][1];\n      if (!patchDiffLength && diffType !== DiffOperation.DIFF_EQUAL) {\n        patch.start1 = charCount1;\n        patch.start2 = charCount2;\n      }\n      switch (diffType) {\n        case DiffOperation.DIFF_INSERT:\n          patch.diffs[patchDiffLength++] = diffs[x];\n          patch.length2 += diffText.length;\n          postpatchText = postpatchText.substring(0, charCount2) + diffText + postpatchText.substring(charCount2);\n          break;\n        case DiffOperation.DIFF_DELETE:\n          patch.length1 += diffText.length;\n          patch.diffs[patchDiffLength++] = diffs[x];\n          postpatchText = postpatchText.substring(0, charCount2) + postpatchText.substring(charCount2 + diffText.length);\n          break;\n        case DiffOperation.DIFF_EQUAL:\n          if (diffText.length <= 2 * this.patchMargin && patchDiffLength && diffs.length !== x + 1) {\n            patch.diffs[patchDiffLength++] = diffs[x];\n            patch.length1 += diffText.length;\n            patch.length2 += diffText.length;\n          } else if (diffText.length >= 2 * this.patchMargin) {\n            if (patchDiffLength) {\n              this.patch_addContext_(patch, prepatchText);\n              patches.push(patch);\n              patch = new PatchObject();\n              patchDiffLength = 0;\n              prepatchText = postpatchText;\n              charCount1 = charCount2;\n            }\n          }\n          break;\n      }\n      if (diffType !== DiffOperation.DIFF_INSERT) {\n        charCount1 += diffText.length;\n      }\n      if (diffType !== DiffOperation.DIFF_DELETE) {\n        charCount2 += diffText.length;\n      }\n    }\n    if (patchDiffLength) {\n      this.patch_addContext_(patch, prepatchText);\n      patches.push(patch);\n    }\n    return patches;\n  }\n  patch_deepCopy(patches) {\n    const patchesCopy = [];\n    for (let x = 0; x < patches.length; x++) {\n      const patch = patches[x];\n      const patchCopy = new PatchObject();\n      for (let y = 0; y < patch.diffs.length; y++) {\n        patchCopy.diffs[y] = [patch.diffs[y][0], patch.diffs[y][1]];\n      }\n      patchCopy.start1 = patch.start1;\n      patchCopy.start2 = patch.start2;\n      patchCopy.length1 = patch.length1;\n      patchCopy.length2 = patch.length2;\n      patchesCopy[x] = patchCopy;\n    }\n    return patchesCopy;\n  }\n  patch_apply(patches, text) {\n    if (patches.length === 0) {\n      return [text, []];\n    }\n    patches = this.patch_deepCopy(patches);\n    const nullPadding = this.patch_addPadding(patches);\n    text = nullPadding + text + nullPadding;\n    this.patch_splitMax(patches);\n    let delta = 0;\n    const results = [];\n    for (let x = 0; x < patches.length; x++) {\n      const expectedLoc = patches[x].start2 + delta;\n      const text1 = this.diff_text1(patches[x].diffs);\n      let startLoc;\n      let endLoc = -1;\n      if (text1.length > this.matchMaxBits) {\n        startLoc = this.match_main(text, text1.substring(0, this.matchMaxBits), expectedLoc);\n        if (startLoc !== -1) {\n          endLoc = this.match_main(text, text1.substring(text1.length - this.matchMaxBits), expectedLoc + text1.length - this.matchMaxBits);\n          if (endLoc === -1 || startLoc >= endLoc) {\n            startLoc = -1;\n          }\n        }\n      } else {\n        startLoc = this.match_main(text, text1, expectedLoc);\n      }\n      if (startLoc === -1) {\n        results[x] = false;\n        delta -= patches[x].length2 - patches[x].length1;\n      } else {\n        results[x] = true;\n        delta = startLoc - expectedLoc;\n        let text2;\n        if (endLoc === -1) {\n          text2 = text.substring(startLoc, startLoc + text1.length);\n        } else {\n          text2 = text.substring(startLoc, endLoc + this.matchMaxBits);\n        }\n        if (text1 === text2) {\n          text = text.substring(0, startLoc) + this.diff_text2(patches[x].diffs) + text.substring(startLoc + text1.length);\n        } else {\n          const diffs = this.diff_main(text1, text2, false);\n          if (text1.length > this.matchMaxBits && this.diff_levenshtein(diffs) / text1.length > this.patchDeleteThreshold) {\n            results[x] = false;\n          } else {\n            this.diff_cleanupSemanticLossless(diffs);\n            let index1 = 0;\n            let index2 = 0;\n            for (let y = 0; y < patches[x].diffs.length; y++) {\n              const mod = patches[x].diffs[y];\n              if (mod[0] !== DiffOperation.DIFF_EQUAL) {\n                index2 = this.diff_xIndex(diffs, index1);\n              }\n              if (mod[0] === DiffOperation.DIFF_INSERT) {\n                text = text.substring(0, startLoc + index2) + mod[1] + text.substring(startLoc + index2);\n              } else if (mod[0] === DiffOperation.DIFF_DELETE) {\n                text = text.substring(0, startLoc + index2) + text.substring(startLoc + this.diff_xIndex(diffs, index1 + mod[1].length));\n              }\n              if (mod[0] !== DiffOperation.DIFF_DELETE) {\n                index1 += mod[1].length;\n              }\n            }\n          }\n        }\n      }\n    }\n    text = text.substring(nullPadding.length, text.length - nullPadding.length);\n    return [text, results];\n  }\n  patch_addPadding(patches) {\n    const paddingLength = this.patchMargin;\n    let nullPadding = \"\";\n    for (let x = 1; x <= paddingLength; x++) {\n      nullPadding += String.fromCharCode(x);\n    }\n    for (let x = 0; x < patches.length; x++) {\n      patches[x].start1 += paddingLength;\n      patches[x].start2 += paddingLength;\n    }\n    let patch = patches[0];\n    let diffs = patch.diffs;\n    if (diffs.length === 0 || diffs[0][0] !== DiffOperation.DIFF_EQUAL) {\n      diffs.unshift([DiffOperation.DIFF_EQUAL, nullPadding]);\n      patch.start1 -= paddingLength;\n      patch.start2 -= paddingLength;\n      patch.length1 += paddingLength;\n      patch.length2 += paddingLength;\n    } else if (paddingLength > diffs[0][1].length) {\n      const extraLength = paddingLength - diffs[0][1].length;\n      diffs[0][1] = nullPadding.substring(diffs[0][1].length) + diffs[0][1];\n      patch.start1 -= extraLength;\n      patch.start2 -= extraLength;\n      patch.length1 += extraLength;\n      patch.length2 += extraLength;\n    }\n    patch = patches[patches.length - 1];\n    diffs = patch.diffs;\n    if (diffs.length === 0 || diffs[diffs.length - 1][0] !== DiffOperation.DIFF_EQUAL) {\n      diffs.push([DiffOperation.DIFF_EQUAL, nullPadding]);\n      patch.length1 += paddingLength;\n      patch.length2 += paddingLength;\n    } else if (paddingLength > diffs[diffs.length - 1][1].length) {\n      const extraLength = paddingLength - diffs[diffs.length - 1][1].length;\n      diffs[diffs.length - 1][1] += nullPadding.substring(0, extraLength);\n      patch.length1 += extraLength;\n      patch.length2 += extraLength;\n    }\n    return nullPadding;\n  }\n  patch_splitMax(patches) {\n    const patchSize = this.matchMaxBits;\n    for (let x = 0; x < patches.length; x++) {\n      if (patches[x].length1 <= patchSize) {\n        continue;\n      }\n      const bigpatch = patches[x];\n      patches.splice(x--, 1);\n      let start1 = bigpatch.start1;\n      let start2 = bigpatch.start2;\n      let precontext = \"\";\n      while (bigpatch.diffs.length !== 0) {\n        const patch = new PatchObject();\n        let empty = true;\n        patch.start1 = start1 - precontext.length;\n        patch.start2 = start2 - precontext.length;\n        if (precontext !== \"\") {\n          patch.length1 = patch.length2 = precontext.length;\n          patch.diffs.push([DiffOperation.DIFF_EQUAL, precontext]);\n        }\n        while (bigpatch.diffs.length !== 0 && patch.length1 < patchSize - this.patchMargin) {\n          const diffType = bigpatch.diffs[0][0];\n          let diffText = bigpatch.diffs[0][1];\n          if (diffType === DiffOperation.DIFF_INSERT) {\n            patch.length2 += diffText.length;\n            start2 += diffText.length;\n            patch.diffs.push(bigpatch.diffs.shift());\n            empty = false;\n          } else if (diffType === DiffOperation.DIFF_DELETE && patch.diffs.length === 1 && patch.diffs[0][0] === DiffOperation.DIFF_EQUAL && diffText.length > 2 * patchSize) {\n            patch.length1 += diffText.length;\n            start1 += diffText.length;\n            empty = false;\n            patch.diffs.push([diffType, diffText]);\n            bigpatch.diffs.shift();\n          } else {\n            diffText = diffText.substring(0, patchSize - patch.length1 - this.patchMargin);\n            patch.length1 += diffText.length;\n            start1 += diffText.length;\n            if (diffType === DiffOperation.DIFF_EQUAL) {\n              patch.length2 += diffText.length;\n              start2 += diffText.length;\n            } else {\n              empty = false;\n            }\n            patch.diffs.push([diffType, diffText]);\n            if (diffText === bigpatch.diffs[0][1]) {\n              bigpatch.diffs.shift();\n            } else {\n              bigpatch.diffs[0][1] = bigpatch.diffs[0][1].substring(diffText.length);\n            }\n          }\n        }\n        precontext = this.diff_text2(patch.diffs);\n        precontext = precontext.substring(precontext.length - this.patchMargin);\n        const postcontext = this.diff_text1(bigpatch.diffs).substring(0, this.patchMargin);\n        if (postcontext !== \"\") {\n          patch.length1 += postcontext.length;\n          patch.length2 += postcontext.length;\n          if (patch.diffs.length !== 0 && patch.diffs[patch.diffs.length - 1][0] === DiffOperation.DIFF_EQUAL) {\n            patch.diffs[patch.diffs.length - 1][1] += postcontext;\n          } else {\n            patch.diffs.push([DiffOperation.DIFF_EQUAL, postcontext]);\n          }\n        }\n        if (!empty) {\n          patches.splice(++x, 0, patch);\n        }\n      }\n    }\n  }\n  patch_toText(patches) {\n    const text = [];\n    for (let x = 0; x < patches.length; x++) {\n      text[x] = patches[x];\n    }\n    return text.join(\"\");\n  }\n  patch_fromText(textline) {\n    const patches = [];\n    if (!textline) {\n      return patches;\n    }\n    const text = textline.split(\"\\n\");\n    let textPointer = 0;\n    const patchHeader = /^@@ -(\\d+),?(\\d*) \\+(\\d+),?(\\d*) @@$/;\n    while (textPointer < text.length) {\n      const m = text[textPointer].match(patchHeader);\n      if (!m) {\n        throw new Error(\"Invalid patch string: \" + text[textPointer]);\n      }\n      const patch = new PatchObject();\n      patches.push(patch);\n      patch.start1 = parseInt(m[1], 10);\n      if (m[2] === \"\") {\n        patch.start1--;\n        patch.length1 = 1;\n      } else if (m[2] === \"0\") {\n        patch.length1 = 0;\n      } else {\n        patch.start1--;\n        patch.length1 = parseInt(m[2], 10);\n      }\n      patch.start2 = parseInt(m[3], 10);\n      if (m[4] === \"\") {\n        patch.start2--;\n        patch.length2 = 1;\n      } else if (m[4] === \"0\") {\n        patch.length2 = 0;\n      } else {\n        patch.start2--;\n        patch.length2 = parseInt(m[4], 10);\n      }\n      textPointer++;\n      let sign;\n      let line;\n      let rawLine;\n      while (textPointer < text.length) {\n        sign = text[textPointer].charAt(0);\n        rawLine = text[textPointer].substring(1);\n        try {\n          line = decodeURI(rawLine);\n        } catch {\n          throw new Error(\"Illegal escape in patch_fromText: \" + rawLine);\n        }\n        if (sign === \"-\") {\n          patch.diffs.push([DiffOperation.DIFF_DELETE, line]);\n        } else if (sign === \"+\") {\n          patch.diffs.push([DiffOperation.DIFF_INSERT, line]);\n        } else if (sign === \" \") {\n          patch.diffs.push([DiffOperation.DIFF_EQUAL, line]);\n        } else if (sign === \"@\") {\n          break;\n        } else if (sign === \"\") {} else {\n          throw new Error('Invalid patch mode \"' + sign + '\" in: ' + line);\n        }\n        textPointer++;\n      }\n    }\n    return patches;\n  }\n  diff_compute_(text1, text2, checklines, deadline) {\n    let diffs;\n    if (!text1) {\n      return [[DiffOperation.DIFF_INSERT, text2]];\n    }\n    if (!text2) {\n      return [[DiffOperation.DIFF_DELETE, text1]];\n    }\n    const longtext = text1.length > text2.length ? text1 : text2;\n    const shorttext = text1.length > text2.length ? text2 : text1;\n    const i = longtext.indexOf(shorttext);\n    if (i !== -1) {\n      diffs = [[DiffOperation.DIFF_INSERT, longtext.substring(0, i)], [DiffOperation.DIFF_EQUAL, shorttext], [DiffOperation.DIFF_INSERT, longtext.substring(i + shorttext.length)]];\n      if (text1.length > text2.length) {\n        diffs[0][0] = DiffOperation.DIFF_DELETE;\n        diffs[2][0] = DiffOperation.DIFF_DELETE;\n      }\n      return diffs;\n    }\n    if (shorttext.length === 1) {\n      return [[DiffOperation.DIFF_DELETE, text1], [DiffOperation.DIFF_INSERT, text2]];\n    }\n    const hm = this.diff_halfMatch_(text1, text2);\n    if (hm) {\n      const text1A = hm[0];\n      const text1B = hm[1];\n      const text2A = hm[2];\n      const text2B = hm[3];\n      const midCommon = hm[4];\n      const diffsA = this.diff_main(text1A, text2A, checklines, deadline);\n      const diffsB = this.diff_main(text1B, text2B, checklines, deadline);\n      return diffsA.concat([[DiffOperation.DIFF_EQUAL, midCommon]], diffsB);\n    }\n    if (checklines && text1.length > 100 && text2.length > 100) {\n      return this.diff_lineMode_(text1, text2, deadline);\n    }\n    return this.diff_bisect_(text1, text2, deadline);\n  }\n  diff_lineMode_(text1, text2, deadline) {\n    const a = this.diff_linesToChars(text1, text2);\n    text1 = a.chars1;\n    text2 = a.chars2;\n    const linearray = a.lineArray;\n    const diffs = this.diff_main(text1, text2, false, deadline);\n    this.diff_charsToLines(diffs, linearray);\n    this.diff_cleanupSemantic(diffs);\n    diffs.push([DiffOperation.DIFF_EQUAL, \"\"]);\n    let pointer = 0;\n    let countDelete = 0;\n    let countInsert = 0;\n    let textDelete = \"\";\n    let textInsert = \"\";\n    while (pointer < diffs.length) {\n      switch (diffs[pointer][0]) {\n        case DiffOperation.DIFF_INSERT:\n          countInsert++;\n          textInsert += diffs[pointer][1];\n          break;\n        case DiffOperation.DIFF_DELETE:\n          countDelete++;\n          textDelete += diffs[pointer][1];\n          break;\n        case DiffOperation.DIFF_EQUAL:\n          if (countDelete >= 1 && countInsert >= 1) {\n            diffs.splice(pointer - countDelete - countInsert, countDelete + countInsert);\n            pointer = pointer - countDelete - countInsert;\n            const subDiff = this.diff_main(textDelete, textInsert, false, deadline);\n            for (let j = subDiff.length - 1; j >= 0; j--) {\n              diffs.splice(pointer, 0, subDiff[j]);\n            }\n            pointer = pointer + subDiff.length;\n          }\n          countInsert = 0;\n          countDelete = 0;\n          textDelete = \"\";\n          textInsert = \"\";\n          break;\n      }\n      pointer++;\n    }\n    diffs.pop();\n    return diffs;\n  }\n  diff_bisect_(text1, text2, deadline) {\n    const text1Length = text1.length;\n    const text2Length = text2.length;\n    const maxD = Math.ceil((text1Length + text2Length) / 2);\n    const vOffset = maxD;\n    const vLength = 2 * maxD;\n    const v1 = new Array(vLength);\n    const v2 = new Array(vLength);\n    for (let x = 0; x < vLength; x++) {\n      v1[x] = -1;\n      v2[x] = -1;\n    }\n    v1[vOffset + 1] = 0;\n    v2[vOffset + 1] = 0;\n    const delta = text1Length - text2Length;\n    const front = delta % 2 !== 0;\n    let k1Start = 0;\n    let k1End = 0;\n    let k2Start = 0;\n    let k2End = 0;\n    for (let d = 0; d < maxD; d++) {\n      if (Date.now() > deadline) {\n        break;\n      }\n      for (let k1 = -d + k1Start; k1 <= d - k1End; k1 += 2) {\n        const k1Offset = vOffset + k1;\n        let x1;\n        if (k1 === -d || k1 !== d && v1[k1Offset - 1] < v1[k1Offset + 1]) {\n          x1 = v1[k1Offset + 1];\n        } else {\n          x1 = v1[k1Offset - 1] + 1;\n        }\n        let y1 = x1 - k1;\n        while (x1 < text1Length && y1 < text2Length && text1.charAt(x1) === text2.charAt(y1)) {\n          x1++;\n          y1++;\n        }\n        v1[k1Offset] = x1;\n        if (x1 > text1Length) {\n          k1End += 2;\n        } else if (y1 > text2Length) {\n          k1Start += 2;\n        } else if (front) {\n          const k2Offset = vOffset + delta - k1;\n          if (k2Offset >= 0 && k2Offset < vLength && v2[k2Offset] !== -1) {\n            const x2 = text1Length - v2[k2Offset];\n            if (x1 >= x2) {\n              return this.diff_bisectSplit_(text1, text2, x1, y1, deadline);\n            }\n          }\n        }\n      }\n      for (let k2 = -d + k2Start; k2 <= d - k2End; k2 += 2) {\n        const k2Offset = vOffset + k2;\n        let x2;\n        if (k2 === -d || k2 !== d && v2[k2Offset - 1] < v2[k2Offset + 1]) {\n          x2 = v2[k2Offset + 1];\n        } else {\n          x2 = v2[k2Offset - 1] + 1;\n        }\n        let y2 = x2 - k2;\n        while (x2 < text1Length && y2 < text2Length && text1.charAt(text1Length - x2 - 1) === text2.charAt(text2Length - y2 - 1)) {\n          x2++;\n          y2++;\n        }\n        v2[k2Offset] = x2;\n        if (x2 > text1Length) {\n          k2End += 2;\n        } else if (y2 > text2Length) {\n          k2Start += 2;\n        } else if (!front) {\n          const k1Offset = vOffset + delta - k2;\n          if (k1Offset >= 0 && k1Offset < vLength && v1[k1Offset] !== -1) {\n            const x1 = v1[k1Offset];\n            const y1 = vOffset + x1 - k1Offset;\n            x2 = text1Length - x2;\n            if (x1 >= x2) {\n              return this.diff_bisectSplit_(text1, text2, x1, y1, deadline);\n            }\n          }\n        }\n      }\n    }\n    return [[DiffOperation.DIFF_DELETE, text1], [DiffOperation.DIFF_INSERT, text2]];\n  }\n  diff_bisectSplit_(text1, text2, x, y, deadline) {\n    const text1A = text1.substring(0, x);\n    const text2A = text2.substring(0, y);\n    const text1B = text1.substring(x);\n    const text2B = text2.substring(y);\n    const diffsA = this.diff_main(text1A, text2A, false, deadline);\n    const diffsB = this.diff_main(text1B, text2B, false, deadline);\n    return diffsA.concat(diffsB);\n  }\n  diff_linesToCharsMunge_(text, lineArray, lineHash, maxLines) {\n    let chars = \"\";\n    let lineStart = 0;\n    let lineEnd = -1;\n    let lineArrayLength = lineArray.length;\n    while (lineEnd < text.length - 1) {\n      lineEnd = text.indexOf(\"\\n\", lineStart);\n      if (lineEnd === -1) {\n        lineEnd = text.length - 1;\n      }\n      let line = text.substring(lineStart, lineEnd + 1);\n      if (lineHash.hasOwnProperty ? lineHash.hasOwnProperty(line) : lineHash[line] !== undefined) {\n        chars += String.fromCharCode(lineHash[line]);\n      } else {\n        if (lineArrayLength === maxLines) {\n          line = text.substring(lineStart);\n          lineEnd = text.length;\n        }\n        chars += String.fromCharCode(lineArrayLength);\n        lineHash[line] = lineArrayLength;\n        lineArray[lineArrayLength++] = line;\n      }\n      lineStart = lineEnd + 1;\n    }\n    return chars;\n  }\n  diff_commonOverlap_(text1, text2) {\n    const text1Length = text1.length;\n    const text2Length = text2.length;\n    if (text1Length === 0 || text2Length === 0) {\n      return 0;\n    }\n    if (text1Length > text2Length) {\n      text1 = text1.substring(text1Length - text2Length);\n    } else if (text1Length < text2Length) {\n      text2 = text2.substring(0, text1Length);\n    }\n    const textLength = math.min(text1Length, text2Length);\n    if (text1 === text2) {\n      return textLength;\n    }\n    let best = 0;\n    let length = 1;\n    while (true) {\n      const pattern = text1.substring(textLength - length);\n      const found = text2.indexOf(pattern);\n      if (found === -1) {\n        return best;\n      }\n      length += found;\n      if (found === 0 || text1.substring(textLength - length) === text2.substring(0, length)) {\n        best = length;\n        length++;\n      }\n    }\n  }\n  diff_halfMatch_(text1, text2) {\n    if (this.diffTimeout <= 0) {\n      return null;\n    }\n    const longtext = text1.length > text2.length ? text1 : text2;\n    const shorttext = text1.length > text2.length ? text2 : text1;\n    if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\n      return null;\n    }\n    const hm1 = this.diff_halfMatchI_(longtext, shorttext, Math.ceil(longtext.length / 4));\n    const hm2 = this.diff_halfMatchI_(longtext, shorttext, Math.ceil(longtext.length / 2));\n    let hm;\n    if (!hm1 && !hm2) {\n      return null;\n    } else if (!hm2) {\n      hm = hm1;\n    } else if (!hm1) {\n      hm = hm2;\n    } else {\n      hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\n    }\n    let text1A;\n    let text1B;\n    let text2A;\n    let text2B;\n    const midCommon = hm[4];\n    if (text1.length > text2.length) {\n      text1A = hm[0];\n      text1B = hm[1];\n      text2A = hm[2];\n      text2B = hm[3];\n    } else {\n      text2A = hm[0];\n      text2B = hm[1];\n      text1A = hm[2];\n      text1B = hm[3];\n    }\n    return [text1A, text1B, text2A, text2B, midCommon];\n  }\n  diff_halfMatchI_(longtext, shorttext, i) {\n    const seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\n    let bestCommon = \"\";\n    let bestLongtextA;\n    let bestLongtextB;\n    let bestShorttextA;\n    let bestShorttextB;\n    let j = shorttext.indexOf(seed, 0);\n    while (j !== -1) {\n      const prefixLength = this.diff_commonPrefix(longtext.substring(i), shorttext.substring(j));\n      const suffixLength = this.diff_commonSuffix(longtext.substring(0, i), shorttext.substring(0, j));\n      if (bestCommon.length < suffixLength + prefixLength) {\n        bestCommon = shorttext.substring(j - suffixLength, j) + shorttext.substring(j, j + prefixLength);\n        bestLongtextA = longtext.substring(0, i - suffixLength);\n        bestLongtextB = longtext.substring(i + prefixLength);\n        bestShorttextA = shorttext.substring(0, j - suffixLength);\n        bestShorttextB = shorttext.substring(j + prefixLength);\n      }\n      j = shorttext.indexOf(seed, j + 1);\n    }\n    if (bestCommon.length * 2 >= longtext.length) {\n      return [bestLongtextA, bestLongtextB, bestShorttextA, bestShorttextB, bestCommon];\n    }\n    return null;\n  }\n  diff_cleanupSemanticScore_(one, two) {\n    if (!one || !two) {\n      return 6;\n    }\n    const char1 = one.charAt(one.length - 1);\n    const char2 = two.charAt(0);\n    const nonAlphaNumeric1 = char1.match(NON_ALPHA_NUMERIC_REGEX);\n    const nonAlphaNumeric2 = char2.match(NON_ALPHA_NUMERIC_REGEX);\n    const whitespace1 = nonAlphaNumeric1 && char1.match(WHITESPACE_REGEX);\n    const whitespace2 = nonAlphaNumeric2 && char2.match(WHITESPACE_REGEX);\n    const lineBreak1 = whitespace1 && char1.match(LINEBREAK_REGEX);\n    const lineBreak2 = whitespace2 && char2.match(LINEBREAK_REGEX);\n    const blankLine1 = lineBreak1 && one.match(BLANKLINE_END_REGEX);\n    const blankLine2 = lineBreak2 && two.match(BLANKLINE_START_REGEX);\n    if (blankLine1 || blankLine2) {\n      return 5;\n    } else if (lineBreak1 || lineBreak2) {\n      return 4;\n    } else if (nonAlphaNumeric1 && !whitespace1 && whitespace2) {\n      return 3;\n    } else if (whitespace1 || whitespace2) {\n      return 2;\n    } else if (nonAlphaNumeric1 || nonAlphaNumeric2) {\n      return 1;\n    }\n    return 0;\n  }\n  match_bitap_(text, pattern, loc) {\n    if (pattern.length > this.matchMaxBits) {\n      throw new Error(\"Pattern too long for this browser\");\n    }\n    const s = this.match_alphabet_(pattern);\n    let scoreThreshold = this.matchThreshold;\n    let bestLoc = text.indexOf(pattern, loc);\n    if (bestLoc !== -1) {\n      scoreThreshold = math.min(this.match_bitapScore_(0, bestLoc, pattern, loc), scoreThreshold);\n      bestLoc = text.lastIndexOf(pattern, loc + pattern.length);\n      if (bestLoc !== -1) {\n        scoreThreshold = math.min(this.match_bitapScore_(0, bestLoc, pattern, loc), scoreThreshold);\n      }\n    }\n    const matchmask = 1 << pattern.length - 1;\n    bestLoc = -1;\n    let binMin;\n    let binMid;\n    let binMax = pattern.length + text.length;\n    let lastRD;\n    for (let d = 0; d < pattern.length; d++) {\n      binMin = 0;\n      binMid = binMax;\n      while (binMin < binMid) {\n        if (this.match_bitapScore_(d, loc + binMid, pattern, loc) <= scoreThreshold) {\n          binMin = binMid;\n        } else {\n          binMax = binMid;\n        }\n        binMid = Math.floor((binMax - binMin) / 2 + binMin);\n      }\n      binMax = binMid;\n      let start = math.max(1, loc - binMid + 1);\n      const finish = math.min(loc + binMid, text.length) + pattern.length;\n      const rd = Array(finish + 2);\n      rd[finish + 1] = (1 << d) - 1;\n      for (let j = finish; j >= start; j--) {\n        const charMatch = s[text.charAt(j - 1)];\n        if (d === 0) {\n          rd[j] = (rd[j + 1] << 1 | 1) & charMatch;\n        } else {\n          rd[j] = (rd[j + 1] << 1 | 1) & charMatch | ((lastRD[j + 1] | lastRD[j]) << 1 | 1) | lastRD[j + 1];\n        }\n        if (rd[j] & matchmask) {\n          const score = this.match_bitapScore_(d, j - 1, pattern, loc);\n          if (score <= scoreThreshold) {\n            scoreThreshold = score;\n            bestLoc = j - 1;\n            if (bestLoc > loc) {\n              start = math.max(1, 2 * loc - bestLoc);\n            } else {\n              break;\n            }\n          }\n        }\n      }\n      if (this.match_bitapScore_(d + 1, loc, pattern, loc) > scoreThreshold) {\n        break;\n      }\n      lastRD = rd;\n    }\n    return bestLoc;\n  }\n  match_bitapScore_(e, x, pattern, loc) {\n    const accuracy = e / pattern.length;\n    const proximity = Math.abs(loc - x);\n    if (!this.matchDistance) {\n      return proximity ? 1.0 : accuracy;\n    }\n    return accuracy + proximity / this.matchDistance;\n  }\n  match_alphabet_(pattern) {\n    const s = {};\n    for (let i = 0; i < pattern.length; i++) {\n      s[pattern.charAt(i)] = 0;\n    }\n    for (let i = 0; i < pattern.length; i++) {\n      s[pattern.charAt(i)] |= 1 << pattern.length - i - 1;\n    }\n    return s;\n  }\n  patch_addContext_(patch, text) {\n    if (text.length === 0) {\n      return;\n    }\n    if (patch.start2 == null) {\n      throw Error(\"patch not initialized\");\n    }\n    let pattern = text.substring(patch.start2, patch.start2 + patch.length1);\n    let padding = 0;\n    while (text.indexOf(pattern) !== text.lastIndexOf(pattern) && pattern.length < this.matchMaxBits - this.patchMargin - this.patchMargin) {\n      padding += this.patchMargin;\n      pattern = text.substring(patch.start2 - padding, patch.start2 + patch.length1 + padding);\n    }\n    padding += this.patchMargin;\n    const prefix = text.substring(patch.start2 - padding, patch.start2);\n    if (prefix) {\n      patch.diffs.unshift([DiffOperation.DIFF_EQUAL, prefix]);\n    }\n    const suffix = text.substring(patch.start2 + patch.length1, patch.start2 + patch.length1 + padding);\n    if (suffix) {\n      patch.diffs.push([DiffOperation.DIFF_EQUAL, suffix]);\n    }\n    patch.start1 -= prefix.length;\n    patch.start2 -= prefix.length;\n    patch.length1 += prefix.length + suffix.length;\n    patch.length2 += prefix.length + suffix.length;\n  }\n}","import { Component, inject } from '@angular/core';\r\nimport { faBan, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { NgClass } from '@angular/common';\r\n\r\n@Component({\r\n    selector: 'jhi-feedback-suggestions-pending-confirmation-dialog',\r\n    templateUrl: './feedback-suggestions-pending-confirmation-dialog.component.html',\r\n    imports: [FormsModule, TranslateDirective, FaIconComponent, NgClass],\r\n})\r\nexport class FeedbackSuggestionsPendingConfirmationDialogComponent {\r\n    private activeModal = inject(NgbActiveModal);\r\n\r\n    // Icons\r\n    faBan = faBan;\r\n    faTimes = faTimes;\r\n\r\n    /**\r\n     * Close the confirmation dialog\r\n     */\r\n    close(confirm: boolean): void {\r\n        this.activeModal.close(confirm);\r\n    }\r\n}\r\n","<form>\r\n    <div class=\"modal-header\">\r\n        <h4 class=\"modal-title\">\r\n            <span jhiTranslate=\"artemisApp.assessment.suggestionPendingDialog.title\"></span>\r\n        </h4>\r\n        <button type=\"button\" class=\"btn-close\" data-dismiss=\"modal\" aria-hidden=\"true\" (click)=\"close(false)\"></button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <p jhiTranslate=\"artemisApp.assessment.suggestionPendingDialog.description\"></p>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"close(false)\">\r\n            <fa-icon [icon]=\"faBan\" />&nbsp;<span jhiTranslate=\"entity.action.cancel\"></span>\r\n        </button>\r\n        <button type=\"submit\" ngClass=\"btn btn-primary\" (click)=\"close(true)\">\r\n            <span jhiTranslate=\"artemisApp.assessment.suggestionPendingDialog.discardAndSubmit\"></span>\r\n        </button>\r\n    </div>\r\n</form>\r\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild, inject } from '@angular/core';\r\nimport { IncludedInScoreBadgeComponent } from 'app/exercises/shared/exercise-headers/included-in-score-badge.component';\r\nimport { ResultComponent } from 'app/exercises/shared/result/result.component';\r\nimport { UnreferencedFeedbackComponent } from 'app/exercises/shared/unreferenced-feedback/unreferenced-feedback.component';\r\nimport { Observable, Subscription, firstValueFrom } from 'rxjs';\r\nimport dayjs from 'dayjs/esm';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ActivatedRoute, Router, RouterLink } from '@angular/router';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { ButtonSize } from 'app/shared/components/button.component';\r\nimport { DomainService } from 'app/exercises/programming/shared/code-editor/service/code-editor-domain.service';\r\nimport { ExerciseType, IncludedInOverallScore, getCourseFromExercise } from 'app/entities/exercise.model';\r\nimport { Result } from 'app/entities/result.model';\r\nimport { ProgrammingExercise } from 'app/entities/programming/programming-exercise.model';\r\nimport { DomainType, RepositoryType } from 'app/exercises/programming/shared/code-editor/model/code-editor.model';\r\nimport { ProgrammingExerciseStudentParticipation } from 'app/entities/participation/programming-exercise-student-participation.model';\r\nimport { Complaint } from 'app/entities/complaint.model';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { ProgrammingAssessmentManualResultService } from 'app/exercises/programming/assess/manual-result/programming-assessment-manual-result.service';\r\nimport { ProgrammingSubmission } from 'app/entities/programming/programming-submission.model';\r\nimport { Location, NgTemplateOutlet } from '@angular/common';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\nimport { ProgrammingSubmissionService } from 'app/exercises/programming/participate/programming-submission.service';\r\nimport { ComplaintService } from 'app/complaints/complaint.service';\r\nimport { CodeEditorContainerComponent } from 'app/exercises/programming/shared/code-editor/container/code-editor-container.component';\r\nimport { assessmentNavigateBack } from 'app/exercises/shared/navigate-back.util';\r\nimport { Feedback, FeedbackType } from 'app/entities/feedback.model';\r\nimport { StructuredGradingCriterionService } from 'app/exercises/shared/structured-grading-criterion/structured-grading-criterion.service';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\nimport { CodeEditorRepositoryFileService } from 'app/exercises/programming/shared/code-editor/service/code-editor-repository.service';\r\nimport { DiffMatchPatch } from 'diff-match-patch-typescript';\r\nimport { ProgrammingExerciseService } from 'app/exercises/programming/manage/services/programming-exercise.service';\r\nimport { TemplateProgrammingExerciseParticipation } from 'app/entities/participation/template-programming-exercise-participation.model';\r\nimport { getPositiveAndCappedTotalScore, getTotalMaxPoints } from 'app/exercises/shared/exercise/exercise.utils';\r\nimport { getExerciseDashboardLink, getLinkToSubmissionAssessment, getLocalRepositoryLink } from 'app/utils/navigation.utils';\r\nimport { SubmissionType, getLatestSubmissionResult } from 'app/entities/submission.model';\r\nimport { isAllowedToModifyFeedback } from 'app/assessment/assessment.service';\r\nimport { breakCircularResultBackReferences } from 'app/exercises/shared/result/result.utils';\r\nimport { faExternalLink, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { cloneDeep } from 'lodash-es';\r\nimport { AssessmentAfterComplaint } from 'app/complaints/complaints-for-tutor/complaints-for-tutor.component';\r\nimport { PROFILE_LOCALVC } from 'app/app.constants';\r\nimport { ProfileService } from 'app/shared/layouts/profiles/profile.service';\r\nimport { AthenaService } from 'app/assessment/athena.service';\r\nimport { FeedbackSuggestionsPendingConfirmationDialogComponent } from 'app/exercises/shared/feedback/feedback-suggestions-pending-confirmation-dialog/feedback-suggestions-pending-confirmation-dialog.component';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { AssessmentLayoutComponent } from 'app/assessment/assessment-layout/assessment-layout.component';\r\nimport { ProgrammingAssessmentRepoExportButtonComponent } from './repo-export/programming-assessment-repo-export-button.component';\r\nimport { AssessmentInstructionsComponent } from 'app/assessment/assessment-instructions/assessment-instructions/assessment-instructions.component';\r\n\r\n@Component({\r\n    selector: 'jhi-code-editor-tutor-assessment',\r\n    templateUrl: './code-editor-tutor-assessment-container.component.html',\r\n    imports: [\r\n        FaIconComponent,\r\n        TranslateDirective,\r\n        AssessmentLayoutComponent,\r\n        NgTemplateOutlet,\r\n        CodeEditorContainerComponent,\r\n        IncludedInScoreBadgeComponent,\r\n        RouterLink,\r\n        ProgrammingAssessmentRepoExportButtonComponent,\r\n        ResultComponent,\r\n        AssessmentInstructionsComponent,\r\n        UnreferencedFeedbackComponent,\r\n        // TODO: the extension point for Orion does not work with Angular 19, we need to find a different solution\r\n        // ExtensionPointDirective,\r\n    ],\r\n})\r\nexport class CodeEditorTutorAssessmentContainerComponent implements OnInit, OnDestroy {\r\n    private manualResultService = inject(ProgrammingAssessmentManualResultService);\r\n    private router = inject(Router);\r\n    private location = inject(Location);\r\n    private accountService = inject(AccountService);\r\n    private programmingSubmissionService = inject(ProgrammingSubmissionService);\r\n    private domainService = inject(DomainService);\r\n    private complaintService = inject(ComplaintService);\r\n    private route = inject(ActivatedRoute);\r\n    private alertService = inject(AlertService);\r\n    private structuredGradingCriterionService = inject(StructuredGradingCriterionService);\r\n    private repositoryFileService = inject(CodeEditorRepositoryFileService);\r\n    private programmingExerciseService = inject(ProgrammingExerciseService);\r\n    private profileService = inject(ProfileService);\r\n    private modalService = inject(NgbModal);\r\n    private athenaService = inject(AthenaService);\r\n\r\n    @ViewChild(CodeEditorContainerComponent, { static: false }) codeEditorContainer: CodeEditorContainerComponent;\r\n    ButtonSize = ButtonSize;\r\n    PROGRAMMING = ExerciseType.PROGRAMMING;\r\n    SUBMISSION_TYPE_ILLEGAL = SubmissionType.ILLEGAL;\r\n\r\n    readonly diffMatchPatch = new DiffMatchPatch();\r\n    readonly IncludedInOverallScore = IncludedInOverallScore;\r\n    readonly getCourseFromExercise = getCourseFromExercise;\r\n\r\n    paramSub: Subscription;\r\n    participation: ProgrammingExerciseStudentParticipation;\r\n    exercise: ProgrammingExercise;\r\n    submission?: ProgrammingSubmission;\r\n    manualResult?: Result;\r\n    userId: number;\r\n    // for assessment-layout\r\n    isTestRun = false;\r\n    saveBusy = false;\r\n    submitBusy = false;\r\n    cancelBusy = false;\r\n    nextSubmissionBusy = false;\r\n    isAssessor = false;\r\n    assessmentsAreValid = false;\r\n    complaint: Complaint;\r\n    private cancelConfirmationText: string;\r\n    private acceptComplaintWithoutMoreScoreText: string;\r\n    // Fatal error state: when the participation can't be retrieved, the code editor is unusable for the student\r\n    loadingParticipation = false;\r\n    participationCouldNotBeFetched = false;\r\n    showEditorInstructions = true;\r\n    hasAssessmentDueDatePassed: boolean;\r\n    correctionRound: number;\r\n    courseId: number;\r\n    examId = 0;\r\n    exerciseId: number;\r\n    exerciseGroupId: number;\r\n    exerciseDashboardLink: string[];\r\n    localRepositoryLink: string[];\r\n    loadingInitialSubmission = true;\r\n    highlightDifferences = false;\r\n\r\n    localVCEnabled = false;\r\n    isAtLeastEditor = false;\r\n\r\n    unreferencedFeedback: Feedback[] = [];\r\n    referencedFeedback: Feedback[] = [];\r\n    automaticFeedback: Feedback[] = [];\r\n    feedbackSuggestions: Feedback[] = []; // all pending Athena feedback suggestions (neither accepted nor rejected yet)\r\n    totalScoreBeforeAssessment: number;\r\n\r\n    isFirstAssessment = false;\r\n    lockLimitReached = false;\r\n\r\n    templateParticipation: TemplateProgrammingExerciseParticipation;\r\n    templateFileSession: { [fileName: string]: string } = {};\r\n\r\n    // extension points, see shared/extension-point\r\n    // TODO: the extension point for Orion does not work with Angular 19, we need to find a different solution\r\n    // @ContentChild('overrideCodeEditor') overrideCodeEditor: TemplateRef<any>;\r\n    // @ContentChild('overrideExportGoToRepository') overrideExportGoToRepository: TemplateRef<any>;\r\n    // listener, will get notified upon loading of feedback\r\n    @Output() onFeedbackLoaded = new EventEmitter();\r\n    // function override, if set will be executed instead of going to the next submission page\r\n    @Input() overrideNextSubmission?: (submissionId: number) => any = undefined;\r\n\r\n    // Icons\r\n    faTimesCircle = faTimesCircle;\r\n    faExternalLink = faExternalLink;\r\n\r\n    /**\r\n     * Get all feedback suggestions without a reference. They will be shown in cards below the build output.\r\n     */\r\n    get unreferencedFeedbackSuggestions() {\r\n        return this.feedbackSuggestions.filter((feedback) => !feedback.reference);\r\n    }\r\n\r\n    constructor() {\r\n        const translateService = inject(TranslateService);\r\n\r\n        translateService.get('artemisApp.assessment.messages.confirmCancel').subscribe((text) => (this.cancelConfirmationText = text));\r\n        translateService.get('artemisApp.assessment.messages.acceptComplaintWithoutMoreScore').subscribe((text) => (this.acceptComplaintWithoutMoreScoreText = text));\r\n    }\r\n\r\n    /**\r\n     * On init set up the route param subscription.\r\n     * Will load the participation according to participation id with the latest result and result details.\r\n     */\r\n    async ngOnInit(): Promise<void> {\r\n        // Used to check if the assessor is the current user\r\n        this.accountService.identity().then((user) => {\r\n            this.userId = user!.id!;\r\n        });\r\n        this.route.queryParamMap.subscribe((queryParams) => {\r\n            this.isTestRun = queryParams.get('testRun') === 'true';\r\n            this.correctionRound = Number(queryParams.get('correction-round'));\r\n        });\r\n        this.paramSub = this.route.params.subscribe((params) => {\r\n            this.loadingParticipation = true;\r\n            this.participationCouldNotBeFetched = false;\r\n\r\n            this.courseId = Number(params['courseId']);\r\n            this.exerciseId = Number(params['exerciseId']);\r\n            const examId = params['examId'];\r\n            if (examId) {\r\n                this.examId = Number(examId);\r\n                this.exerciseGroupId = Number(params['exerciseGroupId']);\r\n            }\r\n\r\n            this.exerciseDashboardLink = getExerciseDashboardLink(this.courseId, this.exerciseId, this.examId, this.isTestRun);\r\n\r\n            const submissionId = params['submissionId'];\r\n            const submissionObservable = submissionId === 'new' ? this.loadRandomSubmission(this.exerciseId) : this.loadSubmission(Number(submissionId));\r\n            submissionObservable\r\n                .pipe(\r\n                    tap({\r\n                        next: async (submission?: ProgrammingSubmission) => {\r\n                            await this.onSubmissionReceived(submissionId, submission);\r\n                        },\r\n                        error: (error: HttpErrorResponse) => {\r\n                            this.handleErrorResponse(error);\r\n                        },\r\n                        complete: () => (this.loadingParticipation = false),\r\n                    }),\r\n                    // The following is needed for highlighting changed code lines\r\n                    switchMap(() => this.programmingExerciseService.findWithTemplateAndSolutionParticipation(this.exercise.id!, false, true)),\r\n                    tap((response) => {\r\n                        const programmingExercise = response.body!;\r\n                        this.templateParticipation = programmingExercise.templateParticipation!;\r\n                        this.exercise.gradingCriteria = programmingExercise.gradingCriteria;\r\n                        this.isAtLeastEditor = !!this.exercise.isAtLeastEditor;\r\n                    }),\r\n                    switchMap(() => {\r\n                        // Get all files with content from template repository\r\n                        this.domainService.setDomain([DomainType.PARTICIPATION, this.templateParticipation]);\r\n                        const observable = this.repositoryFileService.getFilesWithContent();\r\n                        // Set back to student participation\r\n                        this.domainService.setDomain([DomainType.PARTICIPATION, this.participation]);\r\n                        this.localRepositoryLink = getLocalRepositoryLink(\r\n                            this.courseId,\r\n                            this.exerciseId,\r\n                            RepositoryType.USER,\r\n                            this.participation.id!,\r\n                            this.exerciseGroupId,\r\n                            this.examId,\r\n                        );\r\n                        return observable;\r\n                    }),\r\n                    tap((templateFilesObj) => {\r\n                        if (templateFilesObj) {\r\n                            this.templateFileSession = templateFilesObj;\r\n                        }\r\n                    }),\r\n                )\r\n                .subscribe();\r\n        });\r\n\r\n        this.profileService.getProfileInfo().subscribe((profileInfo) => {\r\n            this.localVCEnabled = profileInfo.activeProfiles.includes(PROFILE_LOCALVC);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * If a subscription exists for paramSub, unsubscribe\r\n     */\r\n    ngOnDestroy() {\r\n        if (this.paramSub) {\r\n            this.paramSub.unsubscribe();\r\n        }\r\n    }\r\n\r\n    private async onSubmissionReceived(submissionId: string, submission?: ProgrammingSubmission) {\r\n        if (!submission) {\r\n            // there are no unassessed submissions\r\n            this.submission = submission;\r\n            return;\r\n        }\r\n\r\n        // validate feedback here already so that overrides are possible for assessment note changes\r\n        // without touching the feedbacks\r\n        await this.handleReceivedSubmission(submission).then(() => this.validateFeedback());\r\n        if (submissionId === 'new') {\r\n            // Update the url with the new id, without reloading the page, to make the history consistent\r\n            const newUrl = window.location.hash.replace('#', '').replace('new', `${this.submission!.id}`);\r\n            this.location.go(newUrl);\r\n        }\r\n    }\r\n\r\n    private loadRandomSubmission(exerciseId: number): Observable<ProgrammingSubmission | undefined> {\r\n        return this.programmingSubmissionService.getSubmissionWithoutAssessment(exerciseId, true, this.correctionRound);\r\n    }\r\n\r\n    private loadSubmission(submissionId: number): Observable<ProgrammingSubmission> {\r\n        return this.programmingSubmissionService.lockAndGetProgrammingSubmissionParticipation(submissionId, this.correctionRound);\r\n    }\r\n\r\n    private async handleReceivedSubmission(submission: ProgrammingSubmission): Promise<void> {\r\n        this.loadingInitialSubmission = false;\r\n\r\n        // Set domain to correctly fetch data\r\n        this.domainService.setDomain([DomainType.PARTICIPATION, submission.participation!]);\r\n        this.submission = submission;\r\n        this.manualResult = getLatestSubmissionResult(this.submission);\r\n        if (!this.manualResult?.submission) {\r\n            this.manualResult!.submission = this.submission;\r\n        }\r\n        this.participation = submission.participation!;\r\n        this.exercise = this.participation.exercise as ProgrammingExercise;\r\n        /**\r\n         * CARE: Setting access rights for exercises should not happen this way and is a workaround.\r\n         *       The access rights should always be set when loading the exercise/course in the service!\r\n         * Problem: For a reason, which I do not understand, the exercise is undefined when the exercise is loaded\r\n         *       leading to {@link AccountService#setAccessRightsForExerciseAndReferencedCourse} skipping setting the\r\n         *       access rights.\r\n         *       This problem reoccurs in {@link FileUploadAssessmentComponent#initializePropertiesFromSubmission}\r\n         */\r\n        this.accountService.setAccessRightsForExercise(this.exercise);\r\n        this.hasAssessmentDueDatePassed = !!this.exercise?.assessmentDueDate && dayjs(this.exercise.assessmentDueDate).isBefore(dayjs());\r\n\r\n        this.checkPermissions();\r\n        this.handleFeedback();\r\n        this.getComplaint();\r\n        this.calculateTotalScore();\r\n        // Only load suggestions for new assessments, they don't make sense later.\r\n        // The assessment is new if it only contains automatic feedback.\r\n        if ((this.manualResult?.feedbacks?.length ?? 0) === this.automaticFeedback.length) {\r\n            await this.loadFeedbackSuggestions();\r\n        }\r\n    }\r\n\r\n    private handleErrorResponse(error: HttpErrorResponse): void {\r\n        this.loadingInitialSubmission = false;\r\n        this.participationCouldNotBeFetched = true;\r\n        if (error?.error?.errorKey === 'lockedSubmissionsLimitReached') {\r\n            this.lockLimitReached = true;\r\n        } else if (error?.error) {\r\n            this.onError(error?.error?.detail || 'Not Found');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Load the feedback suggestions for the current submission from Athena.\r\n     */\r\n    private async loadFeedbackSuggestions(): Promise<void> {\r\n        this.feedbackSuggestions = (await firstValueFrom(this.athenaService.getProgrammingFeedbackSuggestions(this.exercise, this.submission!.id!))) ?? [];\r\n        const allFeedback = [...this.referencedFeedback, ...this.unreferencedFeedback]; // pre-compute to not have to do this in the loop\r\n        // Don't show feedback suggestions that have the same description and reference - probably it is coming from an earlier suggestion anyway\r\n        this.feedbackSuggestions = this.feedbackSuggestions.filter((suggestion) =>\r\n            allFeedback.every((feedback) => feedback.detailText !== suggestion.detailText || feedback.reference !== suggestion.reference),\r\n        );\r\n    }\r\n\r\n    /**\r\n     * For a file, computes the diff between the template and the submission currently being viewed, then highlights changed or edited lines in the editor.\r\n     * If the file did not exist in the template, all lines will be highlighted.\r\n     * @param selectedFile The file that has been selected in the editor.\r\n     */\r\n    highlightChangedLines(selectedFile: string) {\r\n        if (selectedFile && this.codeEditorContainer?.selectedFile) {\r\n            if (!this.templateFileSession[selectedFile]) {\r\n                const lastLine = this.codeEditorContainer.getNumberOfLines() - 1;\r\n                this.highlightLines(0, lastLine);\r\n            } else {\r\n                // Calculation of the diff, see: https://github.com/google/diff-match-patch/wiki/Line-or-Word-Diffs\r\n                const diffArray = this.diffMatchPatch.diff_linesToChars(this.templateFileSession[selectedFile], this.codeEditorContainer.getText());\r\n                const lineText1 = diffArray.chars1;\r\n                const lineText2 = diffArray.chars2;\r\n                const lineArray = diffArray.lineArray;\r\n                const diffs = this.diffMatchPatch.diff_main(lineText1, lineText2, false);\r\n                this.diffMatchPatch.diff_charsToLines(diffs, lineArray);\r\n\r\n                // Setup counter to know on which range to highlight in the code editor\r\n                let counter = 0;\r\n                diffs.forEach((diffElement) => {\r\n                    // No changes\r\n                    if (diffElement[0] === 0) {\r\n                        const lines = diffElement[1].split(/\\r?\\n/);\r\n                        counter += lines.length - 1;\r\n                    }\r\n                    // Newly added\r\n                    if (diffElement[0] === 1) {\r\n                        const lines = diffElement[1].split(/\\r?\\n/).filter(Boolean);\r\n                        const firstLineToHighlight = counter;\r\n                        const lastLineToHighlight = counter + lines.length - 1;\r\n                        this.highlightLines(firstLineToHighlight, lastLineToHighlight);\r\n                        counter += lines.length;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    private highlightLines(firstLine: number, lastLine: number) {\r\n        // We add 1 to make the lines 1-based.\r\n        this.codeEditorContainer.highlightLines(firstLine + 1, lastLine + 1);\r\n    }\r\n\r\n    /**\r\n     * Save the assessment\r\n     */\r\n    save(): void {\r\n        this.saveBusy = true;\r\n        this.handleSaveOrSubmit(undefined, 'artemisApp.textAssessment.saveSuccessful');\r\n    }\r\n\r\n    /**\r\n     * Show confirmation dialog for discarding suggestions before submitting (if there are any)\r\n     * @return true if the user confirmed the discard (=> continue to submit), false otherwise\r\n     */\r\n    async discardPendingSubmissionsWithConfirmation(): Promise<boolean> {\r\n        if (this.feedbackSuggestions.length > 0) {\r\n            const modalRef = this.modalService.open(FeedbackSuggestionsPendingConfirmationDialogComponent, { size: 'lg', backdrop: 'static', animation: true });\r\n            const suggestionsDiscardConfirmed: boolean = await firstValueFrom(modalRef.closed);\r\n            if (!suggestionsDiscardConfirmed) {\r\n                return false;\r\n            }\r\n            this.feedbackSuggestions = []; // Discard all pending suggestions\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Submit the assessment\r\n     */\r\n    async submit(): Promise<void> {\r\n        if (!(await this.discardPendingSubmissionsWithConfirmation())) {\r\n            return;\r\n        }\r\n        this.submitBusy = true;\r\n        this.handleSaveOrSubmit(true, 'artemisApp.textAssessment.submitSuccessful');\r\n    }\r\n\r\n    /**\r\n     * Shared functionality for save and submit\r\n     *\r\n     * @param submit true if the user submits, undefined if the user saves\r\n     * @param translationKey key for the alert to be shown on success\r\n     */\r\n    private handleSaveOrSubmit(submit: boolean | undefined, translationKey: string) {\r\n        this.avoidCircularStructure();\r\n        this.manualResultService.saveAssessment(this.participation.id!, this.manualResult!, submit).subscribe({\r\n            next: (response) => this.handleSaveOrSubmitSuccessWithAlert(response, translationKey),\r\n            error: (error: HttpErrorResponse) => this.onError(`error.${error?.error?.errorKey}`),\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Cancel the assessment\r\n     */\r\n    cancel(): void {\r\n        this.cancelBusy = true;\r\n        const confirmCancel = window.confirm(this.cancelConfirmationText);\r\n        if (confirmCancel && this.exercise && this.submission) {\r\n            this.manualResultService.cancelAssessment(this.submission.id!).subscribe(() => this.navigateBack());\r\n        }\r\n        this.cancelBusy = false;\r\n    }\r\n\r\n    /**\r\n     * Go to next submission\r\n     */\r\n    nextSubmission() {\r\n        this.loadingParticipation = true;\r\n        this.submission = undefined;\r\n        this.programmingSubmissionService.getSubmissionWithoutAssessment(this.exercise.id!, true, this.correctionRound).subscribe({\r\n            next: (response?: ProgrammingSubmission) => {\r\n                this.loadingParticipation = false;\r\n\r\n                // there are no unassessed submissions\r\n                if (!response) {\r\n                    this.submission = undefined;\r\n                    return;\r\n                }\r\n\r\n                // if override set, skip navigation\r\n                if (this.overrideNextSubmission) {\r\n                    this.overrideNextSubmission(response.id!);\r\n                    return;\r\n                }\r\n\r\n                const url = getLinkToSubmissionAssessment(\r\n                    ExerciseType.PROGRAMMING,\r\n                    this.courseId,\r\n                    this.exerciseId,\r\n                    response.participation?.id,\r\n                    response.id!,\r\n                    this.examId,\r\n                    this.exerciseGroupId,\r\n                    undefined,\r\n                );\r\n                this.router.navigate(url, { queryParams: { 'correction-round': this.correctionRound } });\r\n            },\r\n            error: (error: HttpErrorResponse) => {\r\n                this.loadingParticipation = false;\r\n                if (error.error && error.error.errorKey === 'lockedSubmissionsLimitReached') {\r\n                    // the lock limit is reached\r\n                    this.onError('artemisApp.submission.lockedSubmissionsLimitReached');\r\n                } else {\r\n                    this.onError(error?.message);\r\n                }\r\n            },\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Sends the current (updated) assessment to the server to update the original assessment after a complaint was accepted.\r\n     * The corresponding complaint response is sent along with the updated assessment to prevent additional requests.\r\n     *\r\n     * @param assessmentAfterComplaint the response to the complaint that is sent to the server along with the assessment update along with onSuccess and onError callbacks\r\n     */\r\n    onUpdateAssessmentAfterComplaint(assessmentAfterComplaint: AssessmentAfterComplaint): void {\r\n        this.validateFeedback();\r\n        if (!this.assessmentsAreValid) {\r\n            this.alertService.error('artemisApp.programmingAssessment.invalidAssessments');\r\n            assessmentAfterComplaint.onError();\r\n            return;\r\n        }\r\n        if (!this.checkFeedbackChangeForAcceptedComplaint(assessmentAfterComplaint)) {\r\n            assessmentAfterComplaint.onError();\r\n            return;\r\n        }\r\n\r\n        this.setFeedbacksForManualResult();\r\n        this.manualResultService\r\n            .updateAfterComplaint(this.manualResult!.feedbacks!, assessmentAfterComplaint.complaintResponse, this.submission!.id!, this.manualResult!.assessmentNote?.note)\r\n            .subscribe({\r\n                next: (result: Result) => {\r\n                    assessmentAfterComplaint.onSuccess();\r\n                    this.participation.results![0] = this.manualResult = result;\r\n                    this.alertService.closeAll();\r\n                    this.alertService.success('artemisApp.assessment.messages.updateAfterComplaintSuccessful');\r\n                },\r\n                error: (httpErrorResponse: HttpErrorResponse) => {\r\n                    assessmentAfterComplaint.onError();\r\n                    this.alertService.closeAll();\r\n                    const error = httpErrorResponse.error;\r\n                    if (error && error.errorKey && error.errorKey === 'complaintLock') {\r\n                        this.alertService.error(error.message, error.params);\r\n                    } else {\r\n                        this.onError('artemisApp.assessment.messages.updateAfterComplaintFailed');\r\n                    }\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Navigates back to previous view\r\n     */\r\n    navigateBack() {\r\n        assessmentNavigateBack(this.location, this.router, this.exercise, this.submission, this.isTestRun);\r\n    }\r\n\r\n    /**\r\n     * Boolean which determines whether the user can override a result.\r\n     * If no exercise is loaded, for example during loading between exercises, we return false.\r\n     * Instructors can always override a result.\r\n     * Tutors can override their own results within the assessment due date, if there is no complaint about their assessment.\r\n     * They cannot override a result anymore, if there is a complaint. Another tutor must handle the complaint.\r\n     */\r\n    get canOverride(): boolean {\r\n        if (this.exercise) {\r\n            if (this.exercise.isAtLeastInstructor) {\r\n                // Instructors can override any assessment at any time.\r\n                return true;\r\n            }\r\n            if (this.complaint && this.isAssessor) {\r\n                // If there is a complaint, the original assessor cannot override the result anymore.\r\n                return false;\r\n            }\r\n            let isBeforeAssessmentDueDate = true;\r\n            // Add check as the assessmentDueDate must not be set for exercises\r\n            if (this.exercise.assessmentDueDate) {\r\n                isBeforeAssessmentDueDate = dayjs().isBefore(this.exercise.assessmentDueDate);\r\n            }\r\n            // tutors are allowed to override one of their assessments before the assessment due date.\r\n            return this.isAssessor && isBeforeAssessmentDueDate;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Updates the referenced feedbacks, which are the inline feedbacks added directly in the code.\r\n     * @param feedbacks Inline feedbacks directly in the code\r\n     */\r\n    onUpdateFeedback(feedbacks: Feedback[]) {\r\n        // Filter out other feedback than manual feedback\r\n        this.referencedFeedback = feedbacks.filter((feedbackElement) => feedbackElement.reference != undefined && feedbackElement.type === FeedbackType.MANUAL);\r\n        this.validateFeedback();\r\n    }\r\n\r\n    /**\r\n     * Remove a feedback suggestion because it was accepted or discarded.\r\n     * The actual feedback creation when accepting happens in code-editor-monaco-component/unreferenced-feedback because they have full control over the suggestion cards.\r\n     * @param feedback Feedback suggestion that is removed\r\n     */\r\n    removeSuggestion(feedback: Feedback) {\r\n        this.feedbackSuggestions = this.feedbackSuggestions.filter((feedbackSuggestion) => feedbackSuggestion !== feedback);\r\n    }\r\n\r\n    /**\r\n     * Show an error as an alert in the top of the editor html.\r\n     * Used by other components to display errors.\r\n     * The error must already be provided translated by the emitting component.\r\n     */\r\n    onError(error: string) {\r\n        this.alertService.error(error);\r\n        this.saveBusy = this.cancelBusy = this.submitBusy = this.nextSubmissionBusy = false;\r\n    }\r\n\r\n    /**\r\n     * Validate the feedback of the assessment\r\n     */\r\n    validateFeedback(): void {\r\n        this.calculateTotalScore();\r\n        if (this.exercise.allowComplaintsForAutomaticAssessments) {\r\n            // We don't need manual feedback here\r\n            this.assessmentsAreValid = true;\r\n            return;\r\n        }\r\n        const hasReferencedFeedback = Feedback.haveCredits(this.referencedFeedback);\r\n        const hasUnreferencedFeedback = Feedback.haveCreditsAndComments(this.unreferencedFeedback);\r\n        // When unreferenced feedback is set, it has to be valid (score + detailed text)\r\n        this.assessmentsAreValid = (hasReferencedFeedback && this.unreferencedFeedback.length === 0) || hasUnreferencedFeedback;\r\n    }\r\n\r\n    /**\r\n     * Defines whether the inline feedback should be read only or not\r\n     */\r\n    readOnly() {\r\n        return !isAllowedToModifyFeedback(this.isTestRun, this.isAssessor, this.hasAssessmentDueDatePassed, this.manualResult, this.complaint, this.exercise);\r\n    }\r\n\r\n    private handleSaveOrSubmitSuccessWithAlert(response: HttpResponse<Result>, translationKey: string): void {\r\n        if (!this.participation.results) {\r\n            this.participation.results = [];\r\n        }\r\n        this.participation.results[0] = this.manualResult = response.body!;\r\n        this.alertService.closeAll();\r\n        this.alertService.success(translationKey);\r\n        this.saveBusy = this.submitBusy = false;\r\n        this.checkPermissions();\r\n    }\r\n\r\n    /**\r\n     * Checks if there is a manual result and the user is the assessor. If there is no manual result, then the user is the assessor.\r\n     * Checks if the user is at least instructor in course.\r\n     */\r\n    private checkPermissions() {\r\n        if (this.manualResult?.assessor) {\r\n            this.isAssessor = this.manualResult.assessor.id === this.userId;\r\n        } else {\r\n            this.isAssessor = true;\r\n        }\r\n    }\r\n\r\n    private getComplaint(): void {\r\n        if (!this.submission) {\r\n            return;\r\n        }\r\n        this.complaintService.findBySubmissionId(this.submission.id!).subscribe({\r\n            next: (res) => {\r\n                if (!res.body) {\r\n                    return;\r\n                }\r\n                this.complaint = res.body;\r\n            },\r\n            error: (err: HttpErrorResponse) => {\r\n                this.onError(err?.message);\r\n            },\r\n        });\r\n    }\r\n\r\n    private handleFeedback(): void {\r\n        const feedbacks = this.manualResult?.feedbacks ?? [];\r\n        this.totalScoreBeforeAssessment = this.calculateTotalScoreOfFeedbacks(feedbacks);\r\n        this.automaticFeedback = feedbacks.filter((feedback) => feedback.type === FeedbackType.AUTOMATIC);\r\n        // When manual result only contains automatic feedback elements (when assessing for the first time), no manual assessment was yet saved or submitted.\r\n        if (feedbacks.length === this.automaticFeedback.length) {\r\n            this.isFirstAssessment = true;\r\n        }\r\n\r\n        this.unreferencedFeedback = feedbacks.filter((feedbackElement) => feedbackElement.reference == undefined && feedbackElement.type === FeedbackType.MANUAL_UNREFERENCED);\r\n        this.referencedFeedback = feedbacks.filter((feedbackElement) => feedbackElement.reference != undefined && feedbackElement.type === FeedbackType.MANUAL);\r\n        this.onFeedbackLoaded.emit();\r\n    }\r\n\r\n    checkFeedbackChangeForAcceptedComplaint(assessmentAfterComplaint: AssessmentAfterComplaint) {\r\n        if (!assessmentAfterComplaint.complaintResponse.complaint?.accepted) {\r\n            return true;\r\n        }\r\n        const allNewFeedbacks = [...this.referencedFeedback, ...this.unreferencedFeedback, ...this.automaticFeedback];\r\n        const newTotalScore = this.calculateTotalScoreOfFeedbacks(allNewFeedbacks);\r\n        if (this.totalScoreBeforeAssessment >= newTotalScore) {\r\n            return window.confirm(this.acceptComplaintWithoutMoreScoreText);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private setFeedbacksForManualResult() {\r\n        this.manualResult!.feedbacks = [...this.referencedFeedback, ...this.unreferencedFeedback, ...this.automaticFeedback];\r\n    }\r\n\r\n    private setAttributesForManualResult(totalScore: number) {\r\n        this.setFeedbacksForManualResult();\r\n        // Manual result is always rated and has feedback\r\n        this.manualResult!.rated = true;\r\n        this.isFirstAssessment = false;\r\n\r\n        this.manualResult!.score = (totalScore / this.exercise.maxPoints!) * 100;\r\n        // This is done to update the result string in result.component.ts\r\n        this.manualResult = cloneDeep(this.manualResult);\r\n    }\r\n\r\n    private avoidCircularStructure() {\r\n        if (this.manualResult) {\r\n            breakCircularResultBackReferences(this.manualResult);\r\n        }\r\n    }\r\n\r\n    private calculateTotalScore() {\r\n        const feedbacks = [...this.referencedFeedback, ...this.unreferencedFeedback, ...this.automaticFeedback];\r\n        const totalScore = this.calculateTotalScoreOfFeedbacks(feedbacks);\r\n        // Set attributes of manual result\r\n        this.setAttributesForManualResult(totalScore);\r\n    }\r\n\r\n    private calculateTotalScoreOfFeedbacks(feedbacks: Feedback[]): number {\r\n        const maxPoints = getTotalMaxPoints(this.exercise);\r\n        let totalScore = 0.0;\r\n        let scoreAutomaticTests = 0.0;\r\n        const gradingInstructions = {}; // { instructionId: noOfEncounters }\r\n\r\n        feedbacks.forEach((feedback) => {\r\n            // Check for feedback from automatic tests and store them separately\r\n            if (feedback.type === FeedbackType.AUTOMATIC && !Feedback.isStaticCodeAnalysisFeedback(feedback)) {\r\n                scoreAutomaticTests += feedback.credits!;\r\n            } else {\r\n                if (feedback.gradingInstruction) {\r\n                    totalScore = this.structuredGradingCriterionService.calculateScoreForGradingInstructions(feedback, totalScore, gradingInstructions);\r\n                } else {\r\n                    totalScore += feedback.credits!;\r\n                }\r\n            }\r\n        });\r\n\r\n        // Cap automatic test feedback to maxScore + bonus points of exercise\r\n        if (scoreAutomaticTests > maxPoints) {\r\n            scoreAutomaticTests = maxPoints;\r\n        }\r\n        totalScore += scoreAutomaticTests;\r\n        totalScore = getPositiveAndCappedTotalScore(totalScore, maxPoints);\r\n\r\n        return totalScore;\r\n    }\r\n}\r\n","@if (participationCouldNotBeFetched || lockLimitReached) {\r\n    <nav class=\"card\">\r\n        <div class=\"card-body\">\r\n            @if (participationCouldNotBeFetched) {\r\n                <span>\r\n                    <fa-icon [icon]=\"faTimesCircle\" class=\"text-danger\" />\r\n                    <span jhiTranslate=\"artemisApp.editor.errors.participationNotFound\"></span>\r\n                </span>\r\n            }\r\n            @if (lockLimitReached) {\r\n                <div>\r\n                    <fa-icon [icon]=\"faTimesCircle\" class=\"text-danger\" />\r\n                    <span jhiTranslate=\"artemisApp.submission.lockedSubmissionsLimitReached\"></span>\r\n                </div>\r\n            }\r\n        </div>\r\n    </nav>\r\n}\r\n<div [id]=\"'exercise-' + exercise?.id\">\r\n    <jhi-assessment-layout\r\n        (navigateBack)=\"navigateBack()\"\r\n        [isLoading]=\"loadingParticipation\"\r\n        [saveBusy]=\"saveBusy\"\r\n        [submitBusy]=\"submitBusy\"\r\n        [cancelBusy]=\"cancelBusy\"\r\n        [nextSubmissionBusy]=\"nextSubmissionBusy\"\r\n        [isTeamMode]=\"!!exercise?.teamMode\"\r\n        [isAssessor]=\"isAssessor\"\r\n        [isTestRun]=\"isTestRun\"\r\n        [exerciseDashboardLink]=\"exerciseDashboardLink\"\r\n        [isIllegalSubmission]=\"!!submission && submission.type! === SUBMISSION_TYPE_ILLEGAL\"\r\n        [canOverride]=\"canOverride\"\r\n        [result]=\"manualResult\"\r\n        [assessmentsAreValid]=\"assessmentsAreValid\"\r\n        [complaint]=\"complaint\"\r\n        [exercise]=\"exercise\"\r\n        [submission]=\"submission\"\r\n        [hasAssessmentDueDatePassed]=\"hasAssessmentDueDatePassed\"\r\n        [correctionRound]=\"correctionRound\"\r\n        [isProgrammingExercise]=\"true\"\r\n        (save)=\"save()\"\r\n        (onSubmit)=\"submit()\"\r\n        (onCancel)=\"cancel()\"\r\n        (nextSubmission)=\"nextSubmission()\"\r\n        (updateAssessmentAfterComplaint)=\"onUpdateAssessmentAfterComplaint($event)\"\r\n    >\r\n        @if (submission) {\r\n            <ng-container *ngTemplateOutlet=\"assessment\" />\r\n        } @else {\r\n            <ng-container *ngTemplateOutlet=\"noSubmission\" />\r\n        }\r\n    </jhi-assessment-layout>\r\n\r\n    <ng-template #assessment>\r\n        <!-- TODO: the extension point for Orion does not work with Angular 19, we need to find a different solution -->\r\n        <!--        <ng-container-->\r\n        <!--            *jhiExtensionPoint=\"-->\r\n        <!--                overrideCodeEditor;-->\r\n        <!--                context: { title: editorTitle, toolbar: editorToolbar, feedback: editorBottom, exercise: exercise, participation: participation }-->\r\n        <!--            \"-->\r\n        <!--        >-->\r\n        @if (!loadingParticipation && !participationCouldNotBeFetched) {\r\n            <jhi-code-editor-container\r\n                [editable]=\"false\"\r\n                [participation]=\"participation\"\r\n                [feedbackSuggestions]=\"feedbackSuggestions\"\r\n                [showEditorInstructions]=\"showEditorInstructions\"\r\n                [isTutorAssessment]=\"true\"\r\n                [highlightFileChanges]=\"true\"\r\n                [readOnlyManualFeedback]=\"readOnly()\"\r\n                [highlightDifferences]=\"highlightDifferences\"\r\n                [course]=\"getCourseFromExercise(exercise)\"\r\n                (onUpdateFeedback)=\"onUpdateFeedback($event)\"\r\n                (onAcceptSuggestion)=\"removeSuggestion($event)\"\r\n                (onDiscardSuggestion)=\"removeSuggestion($event)\"\r\n                (onFileLoad)=\"highlightChangedLines($event)\"\r\n            >\r\n                <div editorTitle *ngTemplateOutlet=\"editorTitle\"></div>\r\n                <div editorToolbar *ngTemplateOutlet=\"editorToolbar\"></div>\r\n                <ng-container editorSidebar *ngTemplateOutlet=\"editorSidebar\" />\r\n                <div class=\"mt-3\" *ngTemplateOutlet=\"editorBottom\" editorBottom></div>\r\n            </jhi-code-editor-container>\r\n        }\r\n        <!--        </ng-container>-->\r\n        <!-- The templates must be outside of the ng-container, otherwise it cannot be transferred via the context -->\r\n        <ng-template #editorTitle>\r\n            <span>\r\n                <span>{{ exercise?.title }}</span>\r\n                <span\r\n                    [jhiTranslate]=\"exercise.bonusPoints ? 'artemisApp.examParticipation.bonus' : 'artemisApp.examParticipation.points'\"\r\n                    [translateValues]=\"{ points: exercise.maxPoints, bonusPoints: exercise.bonusPoints }\"\r\n                ></span>\r\n                <span>\r\n                    @if (exercise.includedInOverallScore !== IncludedInOverallScore.INCLUDED_COMPLETELY) {\r\n                        <jhi-included-in-score-badge [includedInOverallScore]=\"exercise.includedInOverallScore\" />\r\n                    }\r\n                </span>\r\n            </span>\r\n        </ng-template>\r\n        <ng-template #editorToolbar>\r\n            <!-- TODO: the extension point for Orion does not work with Angular 19, we need to find a different solution -->\r\n            <!--            <ng-container *jhiExtensionPoint=\"overrideExportGoToRepository\">-->\r\n            @if (isAtLeastEditor && localVCEnabled && !isTestRun) {\r\n                <a class=\"btn btn-secondary btn-sm me-2 open-repository-button\" [routerLink]=\"localRepositoryLink\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <fa-icon [icon]=\"faExternalLink\" />\r\n                    <span jhiTranslate=\"artemisApp.exerciseAssessmentDashboard.programmingExercise.goToRepo\"></span>\r\n                </a>\r\n            }\r\n            <jhi-programming-assessment-repo-export\r\n                [programmingExercises]=\"[exercise]\"\r\n                [singleParticipantMode]=\"true\"\r\n                [participationIdList]=\"participation ? [participation!.id!] : []\"\r\n            />\r\n            @if (isAtLeastEditor && !localVCEnabled) {\r\n                <a\r\n                    class=\"ms-2 me-5\"\r\n                    href=\"{{ participation?.userIndependentRepositoryUri }}\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    jhiTranslate=\"artemisApp.exerciseAssessmentDashboard.programmingExercise.goToRepo\"\r\n                ></a>\r\n            }\r\n            <!--            </ng-container>-->\r\n            @if (participation) {\r\n                <jhi-result\r\n                    [result]=\"manualResult\"\r\n                    [showUngradedResults]=\"true\"\r\n                    [showBadge]=\"false\"\r\n                    [isBuilding]=\"false\"\r\n                    [participation]=\"participation\"\r\n                    [exercise]=\"exercise\"\r\n                    [short]=\"false\"\r\n                    class=\"me-1 my-1\"\r\n                />\r\n            }\r\n        </ng-template>\r\n        <ng-template #editorSidebar>\r\n            @if (exercise) {\r\n                <jhi-assessment-instructions\r\n                    class=\"card-body markdown-preview instructions-wrapper__content overflow-auto\"\r\n                    [exercise]=\"exercise!\"\r\n                    [programmingParticipation]=\"participation\"\r\n                    [gradingCriteria]=\"exercise.gradingCriteria\"\r\n                />\r\n            }\r\n        </ng-template>\r\n        <ng-template #editorBottom>\r\n            <div class=\"row mt-3\">\r\n                @if (manualResult && manualResult.id) {\r\n                    <jhi-unreferenced-feedback\r\n                        [(feedbacks)]=\"unreferencedFeedback\"\r\n                        [feedbackSuggestions]=\"unreferencedFeedbackSuggestions\"\r\n                        (feedbacksChange)=\"validateFeedback()\"\r\n                        [readOnly]=\"readOnly()\"\r\n                        [highlightDifferences]=\"highlightDifferences\"\r\n                        (onAcceptSuggestion)=\"removeSuggestion($event)\"\r\n                        (onDiscardSuggestion)=\"removeSuggestion($event)\"\r\n                        [resultId]=\"manualResult.id\"\r\n                    />\r\n                }\r\n            </div>\r\n        </ng-template>\r\n    </ng-template>\r\n\r\n    <ng-template #noSubmission>\r\n        @if (!loadingInitialSubmission) {\r\n            <div class=\"alert alert-warning text-center mt-4\" role=\"alert\">\r\n                <p jhiTranslate=\"artemisApp.programmingAssessment.notFound\"></p>\r\n                <a [routerLink]=\"exerciseDashboardLink\" class=\"btn btn-info btn-sm me-1 mb-1 assessment-dashboard\">\r\n                    <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.exerciseDashboard\"></span>\r\n                </a>\r\n            </div>\r\n        }\r\n    </ng-template>\r\n</div>\r\n","import { Component, Input } from '@angular/core';\r\nimport { ProgrammingExerciseStudentParticipation } from 'app/entities/participation/programming-exercise-student-participation.model';\r\nimport { Exercise } from 'app/entities/exercise.model';\r\nimport { AssessmentInstructionsComponent } from '../../assessment/assessment-instructions/assessment-instructions/assessment-instructions.component';\r\n\r\n@Component({\r\n    selector: 'jhi-orion-assessment-instructions',\r\n    template: `\r\n        <jhi-assessment-instructions [exercise]=\"exercise\" [programmingParticipation]=\"programmingParticipation\" [readOnly]=\"readOnly\">\r\n            <ng-template #overrideTitle />\r\n        </jhi-assessment-instructions>\r\n    `,\r\n    imports: [AssessmentInstructionsComponent],\r\n})\r\nexport class OrionAssessmentInstructionsComponent {\r\n    @Input() readOnly: boolean;\r\n    @Input() programmingParticipation?: ProgrammingExerciseStudentParticipation;\r\n    @Input() exercise: Exercise;\r\n}\r\n","import { Component, ViewChild, inject } from '@angular/core';\r\nimport { CodeEditorTutorAssessmentContainerComponent } from 'app/exercises/programming/assess/code-editor-tutor-assessment-container.component';\r\nimport { Feedback } from 'app/entities/feedback.model';\r\nimport { OrionConnectorService } from 'app/shared/orion/orion-connector.service';\r\nimport { OrionAssessmentService } from 'app/orion/assessment/orion-assessment.service';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { NgTemplateOutlet } from '@angular/common';\r\nimport { OrionAssessmentInstructionsComponent } from './orion-assessment-instructions.component';\r\n\r\n@Component({\r\n    selector: 'jhi-orion-course-management-exercises',\r\n    templateUrl: './orion-tutor-assessment.component.html',\r\n    imports: [CodeEditorTutorAssessmentContainerComponent, NgTemplateOutlet, OrionAssessmentInstructionsComponent],\r\n})\r\nexport class OrionTutorAssessmentComponent {\r\n    private orionConnectorService = inject(OrionConnectorService);\r\n    private alertService = inject(AlertService);\r\n    private orionAssessmentService = inject(OrionAssessmentService);\r\n\r\n    @ViewChild(CodeEditorTutorAssessmentContainerComponent) container: CodeEditorTutorAssessmentContainerComponent;\r\n\r\n    constructor() {\r\n        const orionConnectorService = this.orionConnectorService;\r\n\r\n        // Register this component as receiver of updates from Orion\r\n        orionConnectorService.activeAssessmentComponent = this;\r\n    }\r\n\r\n    /**\r\n     * Sends all current inline feedback to Orion\r\n     */\r\n    initializeFeedback() {\r\n        // eslint-disable-next-line @typescript-eslint/no-non-null-asserted-optional-chain\r\n        this.orionConnectorService.initializeAssessment(this.container.submission?.id!, this.container.referencedFeedback);\r\n    }\r\n\r\n    /**\r\n     * Relays the updated feedback from Orion to the container, if the submissionId matches\r\n     * @param submissionId to validate against\r\n     * @param feedback updated feedback from Orion\r\n     */\r\n    updateFeedback(submissionId: number, feedback: Feedback[]) {\r\n        if (submissionId !== this.container.submission?.id) {\r\n            this.alertService.error('artemisApp.orion.assessment.submissionIdDontMatch');\r\n        } else {\r\n            this.container.onUpdateFeedback(feedback);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Delegates to the {@link OrionAssessmentService} to make Orion load a new submission.\r\n     * Triggered on clicking the \"next submission\" button\r\n     */\r\n    openNextSubmission(submissionId: number) {\r\n        this.orionAssessmentService.sendSubmissionToOrionCancellable(this.container.exerciseId, submissionId, this.container.correctionRound, this.container.isTestRun);\r\n    }\r\n}\r\n","<jhi-code-editor-tutor-assessment (onFeedbackLoaded)=\"initializeFeedback()\" [overrideNextSubmission]=\"openNextSubmission.bind(this)\">\r\n    <ng-template #overrideCodeEditor let-title=\"title\" let-toolbar=\"toolbar\" let-exercise=\"exercise\" let-participation=\"participation\" let-feedback=\"feedback\">\r\n        <div class=\"d-flex flex-wrap align-items-center m-2\">\r\n            <h4 class=\"me-auto\"><ng-container *ngTemplateOutlet=\"title\" /></h4>\r\n            <ng-container *ngTemplateOutlet=\"toolbar\" />\r\n        </div>\r\n        @if (exercise) {\r\n            <jhi-orion-assessment-instructions\r\n                class=\"card-body markdown-preview instructions-wrapper__content overflow-auto\"\r\n                [exercise]=\"exercise!\"\r\n                [programmingParticipation]=\"participation\"\r\n            />\r\n        }\r\n        <ng-container *ngTemplateOutlet=\"feedback\" />\r\n    </ng-template>\r\n    <ng-template #overrideExportGoToRepository />\r\n</jhi-code-editor-tutor-assessment>\r\n","import { ActivatedRouteSnapshot, Resolve } from '@angular/router';\r\nimport { Injectable, inject } from '@angular/core';\r\n\r\nimport { ProgrammingExercise } from 'app/entities/programming/programming-exercise.model';\r\nimport { ProgrammingExerciseService } from 'app/exercises/programming/manage/services/programming-exercise.service';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { of } from 'rxjs';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ProgrammingExerciseResolve implements Resolve<ProgrammingExercise> {\r\n    private service = inject(ProgrammingExerciseService);\r\n\r\n    resolve(route: ActivatedRouteSnapshot) {\r\n        const exerciseId = route.params['exerciseId'] ? route.params['exerciseId'] : undefined;\r\n        if (exerciseId) {\r\n            return this.service.find(exerciseId, true).pipe(map((programmingExercise: HttpResponse<ProgrammingExercise>) => programmingExercise.body!));\r\n        }\r\n        return of(new ProgrammingExercise(undefined, undefined));\r\n    }\r\n}\r\n","import { Authority } from 'app/shared/constants/authority.constants';\r\nimport { UserRouteAccessService } from 'app/core/auth/user-route-access-service';\r\nimport { LocalVCGuard } from 'app/localvc/localvc-guard.service';\r\n\r\nexport const repositorySubRoutes = [\r\n    {\r\n        path: '',\r\n        loadComponent: () => import('app/localvc/repository-view/repository-view.component').then((m) => m.RepositoryViewComponent),\r\n        data: {\r\n            authorities: [Authority.ADMIN, Authority.INSTRUCTOR, Authority.EDITOR, Authority.TA],\r\n            pageTitle: 'artemisApp.repository.title',\r\n        },\r\n        canActivate: [UserRouteAccessService, LocalVCGuard],\r\n    },\r\n    {\r\n        path: 'commit-history',\r\n        loadComponent: () => import('app/localvc/commit-history/commit-history.component').then((m) => m.CommitHistoryComponent),\r\n        data: {\r\n            authorities: [Authority.ADMIN, Authority.INSTRUCTOR, Authority.EDITOR, Authority.TA],\r\n            pageTitle: 'artemisApp.repository.title',\r\n        },\r\n        canActivate: [UserRouteAccessService, LocalVCGuard],\r\n    },\r\n    {\r\n        path: 'commit-history/:commitHash',\r\n        loadComponent: () => import('app/localvc/commit-details-view/commit-details-view.component').then((m) => m.CommitDetailsViewComponent),\r\n        data: {\r\n            authorities: [Authority.ADMIN, Authority.INSTRUCTOR, Authority.EDITOR, Authority.TA],\r\n            pageTitle: 'artemisApp.repository.title',\r\n        },\r\n        canActivate: [UserRouteAccessService, LocalVCGuard],\r\n    },\r\n    {\r\n        path: 'vcs-access-log',\r\n        loadComponent: () => import('app/localvc/vcs-repository-access-log-view/vcs-repository-access-log-view.component').then((m) => m.VcsRepositoryAccessLogViewComponent),\r\n        data: {\r\n            authorities: [Authority.ADMIN, Authority.INSTRUCTOR],\r\n            pageTitle: 'artemisApp.repository.title',\r\n        },\r\n        canActivate: [UserRouteAccessService, LocalVCGuard],\r\n    },\r\n];\r\n"],"mappings":"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","names":["NON_ALPHA_NUMERIC_REGEX","WHITESPACE_REGEX","LINEBREAK_REGEX","BLANKLINE_END_REGEX","BLANKLINE_START_REGEX","DiffOperation","math_exports","__export","max","min","b","math","math_exports","PatchObject","coords1","coords2","text","op","x","DiffOperation","DiffMatchPatch","text1","text2","optChecklines","optDeadline","deadline","DiffOperation","checklines","commonlength","commonprefix","commonsuffix","diffs","pointermin","pointermax","math","pointermid","pointerstart","pointerend","changes","equalities","equalitiesLength","lastEquality","pointer","lengthInsertions1","lengthDeletions1","lengthInsertions2","lengthDeletions2","deletion","insertion","overlapLength1","overlapLength2","equality1","edit","equality2","commonOffset","commonString","bestEquality1","bestEdit","bestEquality2","bestScore","score","preIns","preDel","postIns","postDel","countDelete","countInsert","textDelete","textInsert","loc","chars1","chars2","lastChars1","lastChars2","x","html","patternAMP","patternLT","patternGT","patternPARA","op","text","levenshtein","insertions","deletions","data","delta","diffsLength","tokens","param","n","lineArray","lineHash","chars","j","pattern","a","optB","optC","patches","patch","PatchObject","patchDiffLength","charCount1","charCount2","prepatchText","postpatchText","diffType","diffText","patchesCopy","patchCopy","y","nullPadding","results","expectedLoc","startLoc","endLoc","index1","index2","mod","paddingLength","extraLength","patchSize","bigpatch","start1","start2","precontext","empty","postcontext","textline","textPointer","patchHeader","m","sign","line","rawLine","longtext","shorttext","i","hm","text1A","text1B","text2A","text2B","midCommon","diffsA","diffsB","linearray","subDiff","text1Length","text2Length","maxD","vOffset","vLength","v1","v2","front","k1Start","k1End","k2Start","k2End","d","k1","k1Offset","x1","y1","k2Offset","x2","k2","y2","maxLines","lineStart","lineEnd","lineArrayLength","textLength","best","length","found","hm1","hm2","seed","bestCommon","bestLongtextA","bestLongtextB","bestShorttextA","bestShorttextB","prefixLength","suffixLength","one","two","char1","char2","nonAlphaNumeric1","NON_ALPHA_NUMERIC_REGEX","nonAlphaNumeric2","whitespace1","WHITESPACE_REGEX","whitespace2","lineBreak1","LINEBREAK_REGEX","lineBreak2","blankLine1","BLANKLINE_END_REGEX","blankLine2","BLANKLINE_START_REGEX","s","scoreThreshold","bestLoc","matchmask","binMin","binMid","binMax","lastRD","start","finish","rd","charMatch","e","accuracy","proximity","padding","prefix","suffix","FeedbackSuggestionsPendingConfirmationDialogComponent","activeModal","inject","NgbActiveModal","faBan","faTimes","close","confirm","selectors","decls","vars","consts","template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelement","ɵɵelementEnd","ɵɵlistener","ɵɵadvance","ɵɵproperty","FormsModule","ɵNgNoValidate","NgControlStatusGroup","NgForm","TranslateDirective","FaIconComponent","NgClass","encapsulation","ɵɵtext","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r1","faTimesCircle","ɵɵtemplate","CodeEditorTutorAssessmentContainerComponent_Conditional_0_Conditional_5_Template","CodeEditorTutorAssessmentContainerComponent_Conditional_0_Conditional_6_Template","ɵɵconditional","participationCouldNotBeFetched","lockLimitReached","ɵɵelementContainer","CodeEditorTutorAssessmentContainerComponent_Conditional_5_ng_container_1_Template","assessment_r3","CodeEditorTutorAssessmentContainerComponent_Conditional_6_ng_container_1_Template","noSubmission_r4","ɵɵlistener","$event","ɵɵrestoreView","_r5","ɵɵnextContext","ɵɵresetView","onUpdateFeedback","removeSuggestion","highlightChangedLines","CodeEditorTutorAssessmentContainerComponent_ng_template_8_Conditional_8_div_3_Template","CodeEditorTutorAssessmentContainerComponent_ng_template_8_Conditional_8_div_5_Template","CodeEditorTutorAssessmentContainerComponent_ng_template_8_Conditional_8_ng_container_7_Template","CodeEditorTutorAssessmentContainerComponent_ng_template_8_Conditional_8_div_9_Template","participation","feedbackSuggestions","showEditorInstructions","readOnly","highlightDifferences","getCourseFromExercise","exercise","editorTitle_r6","editorToolbar_r7","editorSidebar_r8","editorBottom_r9","includedInOverallScore","CodeEditorTutorAssessmentContainerComponent_ng_template_8_ng_template_9_Conditional_10_Template","ɵɵtextInterpolate","title","bonusPoints","ɵɵpureFunction2","_c0","maxPoints","IncludedInOverallScore","INCLUDED_COMPLETELY","localRepositoryLink","faExternalLink","ɵɵpropertyInterpolate","userIndependentRepositoryUri","ɵɵsanitizeUrl","manualResult","CodeEditorTutorAssessmentContainerComponent_ng_template_8_ng_template_12_Conditional_3_Template","CodeEditorTutorAssessmentContainerComponent_ng_template_8_ng_template_12_Conditional_6_Template","CodeEditorTutorAssessmentContainerComponent_ng_template_8_ng_template_12_Conditional_7_Template","isAtLeastEditor","localVCEnabled","isTestRun","ɵɵpureFunction1","_c1","id","ɵɵpureFunction0","_c2","gradingCriteria","CodeEditorTutorAssessmentContainerComponent_ng_template_8_ng_template_15_Conditional_1_Template","ɵɵtwoWayListener","_r10","i0","ɵɵtwoWayBindingSet","unreferencedFeedback","validateFeedback","ɵɵtwoWayProperty","unreferencedFeedbackSuggestions","CodeEditorTutorAssessmentContainerComponent_ng_template_8_ng_template_18_Conditional_3_Template","CodeEditorTutorAssessmentContainerComponent_ng_template_8_Conditional_8_Template","CodeEditorTutorAssessmentContainerComponent_ng_template_8_ng_template_9_Template","ɵɵtemplateRefExtractor","CodeEditorTutorAssessmentContainerComponent_ng_template_8_ng_template_12_Template","CodeEditorTutorAssessmentContainerComponent_ng_template_8_ng_template_15_Template","CodeEditorTutorAssessmentContainerComponent_ng_template_8_ng_template_18_Template","loadingParticipation","exerciseDashboardLink","CodeEditorTutorAssessmentContainerComponent_ng_template_11_Conditional_1_Template","loadingInitialSubmission","CodeEditorTutorAssessmentContainerComponent","manualResultService","inject","ProgrammingAssessmentManualResultService","router","Router","location","Location","accountService","AccountService","programmingSubmissionService","ProgrammingSubmissionService","domainService","DomainService","complaintService","ComplaintService","route","ActivatedRoute","alertService","AlertService","structuredGradingCriterionService","StructuredGradingCriterionService","repositoryFileService","CodeEditorRepositoryFileService","programmingExerciseService","ProgrammingExerciseService","profileService","ProfileService","modalService","NgbModal","athenaService","AthenaService","codeEditorContainer","ButtonSize","PROGRAMMING","ExerciseType","SUBMISSION_TYPE_ILLEGAL","diffMatchPatch","DiffMatchPatch","paramSub","submission","userId","saveBusy","submitBusy","cancelBusy","nextSubmissionBusy","isAssessor","assessmentsAreValid","complaint","cancelConfirmationText","acceptComplaintWithoutMoreScoreText","hasAssessmentDueDatePassed","correctionRound","courseId","examId","exerciseId","exerciseGroupId","referencedFeedback","automaticFeedback","totalScoreBeforeAssessment","isFirstAssessment","templateParticipation","templateFileSession","onFeedbackLoaded","EventEmitter","overrideNextSubmission","undefined","filter","feedback","reference","constructor","translateService","TranslateService","get","subscribe","text","ngOnInit","__async","identity","then","user","queryParamMap","queryParams","Number","params","getExerciseDashboardLink","submissionId","loadRandomSubmission","loadSubmission","pipe","tap","next","onSubmissionReceived","error","handleErrorResponse","complete","switchMap","findWithTemplateAndSolutionParticipation","response","programmingExercise","body","setDomain","DomainType","PARTICIPATION","observable","getFilesWithContent","getLocalRepositoryLink","RepositoryType","USER","templateFilesObj","getProfileInfo","profileInfo","activeProfiles","includes","PROFILE_LOCALVC","ngOnDestroy","unsubscribe","handleReceivedSubmission","newUrl","window","hash","replace","go","getSubmissionWithoutAssessment","lockAndGetProgrammingSubmissionParticipation","getLatestSubmissionResult","setAccessRightsForExercise","assessmentDueDate","dayjs","isBefore","checkPermissions","handleFeedback","getComplaint","calculateTotalScore","feedbacks","length","loadFeedbackSuggestions","errorKey","onError","detail","firstValueFrom","getProgrammingFeedbackSuggestions","allFeedback","suggestion","every","detailText","selectedFile","diffArray","diff_linesToChars","getText","lineText1","chars1","lineText2","chars2","lineArray","diffs","diff_main","diff_charsToLines","counter","forEach","diffElement","lines","split","Boolean","firstLineToHighlight","lastLineToHighlight","highlightLines","lastLine","getNumberOfLines","firstLine","save","handleSaveOrSubmit","discardPendingSubmissionsWithConfirmation","modalRef","open","FeedbackSuggestionsPendingConfirmationDialogComponent","size","backdrop","animation","closed","submit","translationKey","avoidCircularStructure","saveAssessment","handleSaveOrSubmitSuccessWithAlert","cancel","confirm","cancelAssessment","navigateBack","nextSubmission","url","getLinkToSubmissionAssessment","navigate","message","onUpdateAssessmentAfterComplaint","assessmentAfterComplaint","checkFeedbackChangeForAcceptedComplaint","setFeedbacksForManualResult","updateAfterComplaint","complaintResponse","assessmentNote","note","result","onSuccess","results","closeAll","success","httpErrorResponse","assessmentNavigateBack","canOverride","isAtLeastInstructor","isBeforeAssessmentDueDate","feedbackElement","type","FeedbackType","MANUAL","feedbackSuggestion","allowComplaintsForAutomaticAssessments","hasReferencedFeedback","Feedback","haveCredits","hasUnreferencedFeedback","haveCreditsAndComments","isAllowedToModifyFeedback","assessor","findBySubmissionId","res","err","calculateTotalScoreOfFeedbacks","AUTOMATIC","MANUAL_UNREFERENCED","emit","accepted","allNewFeedbacks","newTotalScore","setAttributesForManualResult","totalScore","rated","score","cloneDeep","breakCircularResultBackReferences","getTotalMaxPoints","scoreAutomaticTests","gradingInstructions","isStaticCodeAnalysisFeedback","credits","gradingInstruction","calculateScoreForGradingInstructions","getPositiveAndCappedTotalScore","selectors","viewQuery","rf","ctx","CodeEditorContainerComponent","CodeEditorTutorAssessmentContainerComponent_Conditional_0_Template","_r1","CodeEditorTutorAssessmentContainerComponent_Conditional_5_Template","CodeEditorTutorAssessmentContainerComponent_Conditional_6_Template","CodeEditorTutorAssessmentContainerComponent_ng_template_8_Template","CodeEditorTutorAssessmentContainerComponent_ng_template_11_Template","teamMode","FaIconComponent","TranslateDirective","AssessmentLayoutComponent","NgTemplateOutlet","IncludedInScoreBadgeComponent","RouterLink","ProgrammingAssessmentRepoExportButtonComponent","ResultComponent","AssessmentInstructionsComponent","UnreferencedFeedbackComponent","encapsulation","OrionAssessmentInstructionsComponent","readOnly","programmingParticipation","exercise","selectors","inputs","decls","vars","consts","template","rf","ctx","ɵɵtext","ɵɵelementStart","ɵɵtemplate","OrionAssessmentInstructionsComponent_ng_template_3_Template","ɵɵtemplateRefExtractor","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","AssessmentInstructionsComponent","encapsulation","ɵɵelementContainer","ɵɵtext","ɵɵelement","ɵɵadvance","ɵɵproperty","exercise_r3","participation_r4","ɵɵelementStart","ɵɵtemplate","OrionTutorAssessmentComponent_ng_template_2_ng_container_4_Template","ɵɵelementEnd","OrionTutorAssessmentComponent_ng_template_2_ng_container_6_Template","OrionTutorAssessmentComponent_ng_template_2_Conditional_9_Template","OrionTutorAssessmentComponent_ng_template_2_ng_container_10_Template","title_r5","toolbar_r6","ɵɵconditional","feedback_r7","OrionTutorAssessmentComponent","orionConnectorService","inject","OrionConnectorService","alertService","AlertService","orionAssessmentService","OrionAssessmentService","container","constructor","activeAssessmentComponent","initializeFeedback","initializeAssessment","submission","id","referencedFeedback","updateFeedback","submissionId","feedback","error","onUpdateFeedback","openNextSubmission","sendSubmissionToOrionCancellable","exerciseId","correctionRound","isTestRun","selectors","viewQuery","rf","ctx","CodeEditorTutorAssessmentContainerComponent","ɵɵlistener","i0","ɵɵrestoreView","_r1","ɵɵresetView","OrionTutorAssessmentComponent_ng_template_2_Template","ɵɵtemplateRefExtractor","OrionTutorAssessmentComponent_ng_template_5_Template","bind","NgTemplateOutlet","OrionAssessmentInstructionsComponent","encapsulation","ProgrammingExerciseResolve","service","inject","ProgrammingExerciseService","resolve","route","exerciseId","params","undefined","find","pipe","map","programmingExercise","body","of","ProgrammingExercise","factory","ɵfac","providedIn","repositorySubRoutes","path","loadComponent","then","m","RepositoryViewComponent","data","authorities","Authority","ADMIN","INSTRUCTOR","EDITOR","TA","pageTitle","canActivate","UserRouteAccessService","LocalVCGuard","CommitHistoryComponent","CommitDetailsViewComponent","VcsRepositoryAccessLogViewComponent"],"x_google_ignoreList":[0,1,2,3,4,5]}