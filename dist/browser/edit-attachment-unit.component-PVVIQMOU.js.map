{
  "version": 3,
  "sources": ["src/main/webapp/app/lecture/lecture-unit/lecture-unit-management/edit-attachment-unit/edit-attachment-unit.component.ts", "src/main/webapp/app/lecture/lecture-unit/lecture-unit-management/edit-attachment-unit/edit-attachment-unit.component.html"],
  "sourcesContent": ["import { Component, OnInit, ViewChild, inject } from '@angular/core';\r\nimport { onError } from 'app/shared/util/global.utils';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { finalize, switchMap, take } from 'rxjs/operators';\r\nimport { AttachmentUnitService } from 'app/lecture/lecture-unit/lecture-unit-management/attachmentUnit.service';\r\nimport { AttachmentUnit } from 'app/entities/lecture-unit/attachmentUnit.model';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { AttachmentUnitFormComponent, AttachmentUnitFormData } from 'app/lecture/lecture-unit/lecture-unit-management/attachment-unit-form/attachment-unit-form.component';\r\nimport { Attachment, AttachmentType } from 'app/entities/attachment.model';\r\nimport { combineLatest } from 'rxjs';\r\nimport { objectToJsonBlob } from 'app/utils/blob-util';\r\nimport { LectureUnitLayoutComponent } from '../lecture-unit-layout/lecture-unit-layout.component';\r\n\r\n@Component({\r\n    selector: 'jhi-edit-attachment-unit',\r\n    templateUrl: './edit-attachment-unit.component.html',\r\n    imports: [LectureUnitLayoutComponent, AttachmentUnitFormComponent],\r\n})\r\nexport class EditAttachmentUnitComponent implements OnInit {\r\n    private activatedRoute = inject(ActivatedRoute);\r\n    private router = inject(Router);\r\n    private attachmentUnitService = inject(AttachmentUnitService);\r\n    private alertService = inject(AlertService);\r\n\r\n    @ViewChild('attachmentUnitForm') attachmentUnitForm: AttachmentUnitFormComponent;\r\n\r\n    isLoading = false;\r\n    attachmentUnit: AttachmentUnit;\r\n    attachment: Attachment;\r\n    formData: AttachmentUnitFormData;\r\n    lectureId: number;\r\n    notificationText: string;\r\n\r\n    ngOnInit(): void {\r\n        this.isLoading = true;\r\n        const lectureRoute = this.activatedRoute.parent!.parent!;\r\n        combineLatest([this.activatedRoute.paramMap, lectureRoute.paramMap])\r\n            .pipe(\r\n                take(1),\r\n                switchMap(([params, parentParams]) => {\r\n                    const attachmentUnitId = Number(params.get('attachmentUnitId'));\r\n                    this.lectureId = Number(parentParams.get('lectureId'));\r\n                    return this.attachmentUnitService.findById(attachmentUnitId, this.lectureId);\r\n                }),\r\n                finalize(() => {\r\n                    this.isLoading = false;\r\n                }),\r\n            )\r\n            .subscribe({\r\n                next: (attachmentUnitResponse: HttpResponse<AttachmentUnit>) => {\r\n                    this.attachmentUnit = attachmentUnitResponse.body!;\r\n                    this.attachment = this.attachmentUnit.attachment!;\r\n                    // breaking the connection to prevent errors in deserialization. will be reconnected on the server side\r\n                    this.attachmentUnit.attachment = undefined;\r\n                    this.attachment.attachmentUnit = undefined;\r\n\r\n                    this.formData = {\r\n                        formProperties: {\r\n                            name: this.attachment.name,\r\n                            description: this.attachmentUnit.description,\r\n                            releaseDate: this.attachment.releaseDate,\r\n                            version: this.attachment.version,\r\n                            competencyLinks: this.attachmentUnit.competencyLinks,\r\n                        },\r\n                        fileProperties: {\r\n                            fileName: this.attachment.link,\r\n                        },\r\n                    };\r\n                },\r\n                error: (res: HttpErrorResponse) => onError(this.alertService, res),\r\n            });\r\n    }\r\n\r\n    updateAttachmentUnit(attachmentUnitFormData: AttachmentUnitFormData) {\r\n        const { description, name, releaseDate, updateNotificationText, competencyLinks } = attachmentUnitFormData.formProperties;\r\n        const { file, fileName } = attachmentUnitFormData.fileProperties;\r\n\r\n        // optional update notification text for students\r\n        if (updateNotificationText) {\r\n            this.notificationText = updateNotificationText;\r\n        }\r\n\r\n        // === Setting attachment ===\r\n        this.attachment.name = name;\r\n        this.attachment.releaseDate = releaseDate;\r\n        this.attachment.attachmentType = AttachmentType.FILE;\r\n        // === Setting attachmentUnit ===\r\n        this.attachmentUnit.description = description;\r\n        this.attachmentUnit.competencyLinks = competencyLinks;\r\n\r\n        this.isLoading = true;\r\n\r\n        const formData = new FormData();\r\n        if (file) {\r\n            formData.append('file', file, fileName);\r\n        }\r\n        formData.append('attachment', objectToJsonBlob(this.attachment));\r\n        formData.append('attachmentUnit', objectToJsonBlob(this.attachmentUnit));\r\n\r\n        this.attachmentUnitService\r\n            .update(this.lectureId, this.attachmentUnit.id!, formData, this.notificationText)\r\n            .subscribe({\r\n                next: () => this.router.navigate(['../../../'], { relativeTo: this.activatedRoute }),\r\n                error: (res: HttpErrorResponse) => onError(this.alertService, res),\r\n            })\r\n            .add(() => (this.isLoading = false));\r\n    }\r\n}\r\n", "<jhi-lecture-unit-layout [isLoading]=\"isLoading\">\r\n    <jhi-attachment-unit-form #attachmentUnitForm [formData]=\"formData\" (formSubmitted)=\"updateAttachmentUnit($event)\" [isEditMode]=\"true\" />\r\n</jhi-lecture-unit-layout>\r\n"],
  "mappings": "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",
  "names": ["EditAttachmentUnitComponent", "activatedRoute", "inject", "ActivatedRoute", "router", "Router", "attachmentUnitService", "AttachmentUnitService", "alertService", "AlertService", "attachmentUnitForm", "isLoading", "attachmentUnit", "attachment", "formData", "lectureId", "notificationText", "ngOnInit", "lectureRoute", "parent", "combineLatest", "paramMap", "pipe", "take", "switchMap", "params", "parentParams", "attachmentUnitId", "Number", "get", "findById", "finalize", "subscribe", "next", "attachmentUnitResponse", "body", "undefined", "formProperties", "name", "description", "releaseDate", "version", "competencyLinks", "fileProperties", "fileName", "link", "error", "res", "onError", "updateAttachmentUnit", "attachmentUnitFormData", "updateNotificationText", "file", "attachmentType", "FormData", "append", "objectToJsonBlob", "update", "id", "navigate", "relativeTo", "add", "selectors", "viewQuery", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275listener", "$event", "i0", "\u0275\u0275restoreView", "_r1", "\u0275\u0275resetView", "\u0275\u0275elementEnd", "\u0275\u0275property", "\u0275\u0275advance", "LectureUnitLayoutComponent", "AttachmentUnitFormComponent", "encapsulation"]
}
