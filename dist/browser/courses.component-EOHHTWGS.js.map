{
  "version": 3,
  "sources": ["src/main/webapp/app/guided-tour/tours/course-overview-tour.ts", "src/main/webapp/app/overview/course-card.component.ts", "src/main/webapp/app/overview/course-card.component.html", "src/main/webapp/app/overview/courses.component.ts", "src/main/webapp/app/overview/courses.component.html"],
  "sourcesContent": ["import { Orientation, ResetParticipation } from 'app/guided-tour/guided-tour.constants';\r\nimport { GuidedTour } from 'app/guided-tour/guided-tour.model';\r\nimport { ImageTourStep, TextTourStep } from 'app/guided-tour/guided-tour-step.model';\r\nimport { Authority } from 'app/shared/constants/authority.constants';\r\n\r\n/**\r\n * This constant contains the guided tour configuration and steps for the course overview page\r\n */\r\nexport const courseOverviewTour: GuidedTour = {\r\n    settingsKey: 'course_overview_tour',\r\n    resetParticipation: ResetParticipation.NONE,\r\n    steps: [\r\n        new ImageTourStep({\r\n            headlineTranslateKey: 'tour.courseOverview.welcome.headline',\r\n            subHeadlineTranslateKey: 'tour.courseOverview.welcome.subHeadline',\r\n            contentTranslateKey: 'tour.courseOverview.welcome.content',\r\n            imageUrl: 'https://ase.in.tum.de/lehrstuhl_1/images/teaching/interactive/InteractiveLearning.png',\r\n        }),\r\n        new TextTourStep({\r\n            highlightSelector: '.guided-tour-overview',\r\n            headlineTranslateKey: 'tour.courseOverview.overviewMenu.headline',\r\n            contentTranslateKey: 'tour.courseOverview.overviewMenu.content',\r\n            highlightPadding: 10,\r\n            orientation: Orientation.BOTTOM,\r\n        }),\r\n        new TextTourStep({\r\n            highlightSelector: '.guided-tour-course-admin',\r\n            headlineTranslateKey: 'tour.courseOverview.courseAdminMenu.headline',\r\n            contentTranslateKey: 'tour.courseOverview.courseAdminMenu.content',\r\n            orientation: Orientation.BOTTOMRIGHT,\r\n            highlightPadding: 10,\r\n            permission: [Authority.ADMIN, Authority.INSTRUCTOR, Authority.EDITOR, Authority.TA],\r\n        }),\r\n        new TextTourStep({\r\n            highlightSelector: '.guided-tour-admin',\r\n            headlineTranslateKey: 'tour.courseOverview.adminMenu.headline',\r\n            contentTranslateKey: 'tour.courseOverview.adminMenu.content',\r\n            orientation: Orientation.BOTTOMRIGHT,\r\n            highlightPadding: 10,\r\n            permission: [Authority.ADMIN],\r\n        }),\r\n        new TextTourStep({\r\n            highlightSelector: '.guided-tour-notification',\r\n            headlineTranslateKey: 'tour.courseOverview.notificationMenu.headline',\r\n            contentTranslateKey: 'tour.courseOverview.notificationMenu.content',\r\n            orientation: Orientation.BOTTOMRIGHT,\r\n            highlightPadding: 10,\r\n        }),\r\n        new TextTourStep({\r\n            highlightSelector: '.guided-tour-account',\r\n            headlineTranslateKey: 'tour.courseOverview.accountMenu.headline',\r\n            contentTranslateKey: 'tour.courseOverview.accountMenu.content',\r\n            orientation: Orientation.BOTTOMRIGHT,\r\n            highlightPadding: 10,\r\n        }),\r\n        new TextTourStep({\r\n            highlightSelector: '.card.guided-tour',\r\n            headlineTranslateKey: 'tour.courseOverview.course.headline',\r\n            contentTranslateKey: 'tour.courseOverview.course.content',\r\n            orientation: Orientation.RIGHT,\r\n        }),\r\n        new TextTourStep({\r\n            highlightSelector: '.guided-tour .exercise-guided-tour',\r\n            headlineTranslateKey: 'tour.courseOverview.courseFooter.headline',\r\n            contentTranslateKey: 'tour.courseOverview.courseFooter.content',\r\n            orientation: Orientation.TOPLEFT,\r\n        }),\r\n        new TextTourStep({\r\n            highlightSelector: '.guided-tour-footer-about',\r\n            headlineTranslateKey: 'tour.courseOverview.contact.headline',\r\n            contentTranslateKey: 'tour.courseOverview.contact.content',\r\n            hintTranslateKey: 'tour.courseOverview.contact.hint',\r\n            highlightPadding: 5,\r\n            orientation: Orientation.TOPLEFT,\r\n        }),\r\n    ],\r\n};\r\n", "import { Component, Input, OnChanges, inject } from '@angular/core';\r\nimport { Router, RouterLink } from '@angular/router';\r\nimport { Color, NgxChartsModule, PieChartModule, ScaleType } from '@swimlane/ngx-charts';\r\nimport { ARTEMIS_DEFAULT_COLOR } from 'app/app.constants';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { Exercise } from 'app/entities/exercise.model';\r\nimport { ExerciseService } from 'app/exercises/shared/exercise/exercise.service';\r\nimport { CachingStrategy } from 'app/shared/image/secured-image.component';\r\nimport { roundValueSpecifiedByCourseSettings } from 'app/shared/util/utils';\r\nimport { GraphColors } from 'app/entities/statistics.model';\r\nimport { ScoresStorageService } from 'app/course/course-scores/scores-storage.service';\r\nimport { ScoreType } from 'app/shared/constants/score-type.constants';\r\nimport { CourseScores } from 'app/course/course-scores/course-scores';\r\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons';\r\nimport { CourseCardHeaderComponent } from './course-card-header/course-card-header.component';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\n\r\n@Component({\r\n    selector: 'jhi-overview-course-card',\r\n    templateUrl: './course-card.component.html',\r\n    styleUrls: ['course-card.scss'],\r\n    imports: [CourseCardHeaderComponent, NgxChartsModule, PieChartModule, TranslateDirective, RouterLink, FontAwesomeModule],\r\n})\r\nexport class CourseCardComponent implements OnChanges {\r\n    private router = inject(Router);\r\n    private scoresStorageService = inject(ScoresStorageService);\r\n    private exerciseService = inject(ExerciseService);\r\n\r\n    protected readonly faArrowRight = faArrowRight;\r\n\r\n    readonly ARTEMIS_DEFAULT_COLOR = ARTEMIS_DEFAULT_COLOR;\r\n    @Input() course: Course;\r\n    @Input() hasGuidedTour: boolean;\r\n\r\n    CachingStrategy = CachingStrategy;\r\n\r\n    nextRelevantExercise?: Exercise;\r\n    exerciseCount = 0;\r\n\r\n    totalRelativeScore: number;\r\n    totalReachableScore: number;\r\n    totalAbsoluteScore: number;\r\n\r\n    // ngx\r\n    ngxDoughnutData: any[] = [\r\n        { name: 'achievedPointsLabel', value: 0 },\r\n        { name: 'missingPointsLabel', value: 0 },\r\n    ];\r\n    ngxColor = {\r\n        name: 'vivid',\r\n        selectable: true,\r\n        group: ScaleType.Ordinal,\r\n        domain: [GraphColors.GREEN, GraphColors.RED],\r\n    } as Color;\r\n\r\n    ngOnChanges() {\r\n        if (this.course.exercises && this.course.exercises.length > 0) {\r\n            this.exerciseCount = this.course.exercises.length;\r\n\r\n            const nextExercisesWithAnyScore = this.exerciseService.getNextExercisesForDays(this.course.exercises!);\r\n            // filters out every already successful (100%) exercise, only exercises left that still need work\r\n            const nextExercises = nextExercisesWithAnyScore.filter((exercise: Exercise) => !exercise.studentParticipations?.[0]?.submissions?.[0]?.results?.[0]?.successful);\r\n\r\n            if (nextExercises.length > 0 && nextExercises[0]) {\r\n                this.nextRelevantExercise = nextExercises[0];\r\n            }\r\n\r\n            const totalScoresForCourse: CourseScores | undefined = this.scoresStorageService.getStoredTotalScores(this.course.id!);\r\n            if (totalScoresForCourse) {\r\n                this.totalRelativeScore = totalScoresForCourse.studentScores[ScoreType.CURRENT_RELATIVE_SCORE];\r\n                this.totalAbsoluteScore = totalScoresForCourse.studentScores[ScoreType.ABSOLUTE_SCORE];\r\n                this.totalReachableScore = totalScoresForCourse[ScoreType.REACHABLE_POINTS];\r\n            }\r\n\r\n            // Adjust for bonus points, i.e. when the student has achieved more than is reachable\r\n            const scoreNotReached = roundValueSpecifiedByCourseSettings(Math.max(0, this.totalReachableScore - this.totalAbsoluteScore), this.course);\r\n            this.ngxDoughnutData[0].value = this.totalAbsoluteScore;\r\n            this.ngxDoughnutData[1].value = scoreNotReached;\r\n            this.ngxDoughnutData = [...this.ngxDoughnutData];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Delegates the user to the corresponding course page when clicking on the chart\r\n     */\r\n    onSelect(): void {\r\n        this.router.navigate(['courses', this.course.id]);\r\n    }\r\n}\r\n", "<div class=\"card rounded-4 flex-grow-1\" [class.guided-tour]=\"hasGuidedTour\">\r\n    <jhi-course-card-header [courseId]=\"course.id!\" [courseTitle]=\"course.title!\" [courseIcon]=\"course.courseIcon!\" [courseColor]=\"course.color!\" [archiveMode]=\"false\" />\r\n    <div class=\"card-body rounded-bottom-4 border-lightgrey pt-3\">\r\n        <a class=\"stretched-link\" [routerLink]=\"['/courses', course.id!]\"></a>\r\n        <div class=\"d-flex flex-column justify-content-between gap-1\">\r\n            <div class=\"information-box-wrapper ms-1\">\r\n                <div class=\"row mt-1\">\r\n                    <div class=\"col-7\" [ngClass]=\"{ 'col-12': !(exerciseCount && (totalReachableScore || totalAbsoluteScore)) }\">\r\n                        @if (exerciseCount && (totalReachableScore || totalAbsoluteScore)) {\r\n                            <div class=\"align-self-center\">\r\n                                <div class=\"fw-bold text-secondary\" jhiTranslate=\"artemisApp.studentDashboard.cardScore\"></div>\r\n                                <div class=\"fw-bold\">\r\n                                    <div\r\n                                        jhiTranslate=\"artemisApp.studentDashboard.points\"\r\n                                        [translateValues]=\"{\r\n                                            totalAbsoluteScore: totalAbsoluteScore,\r\n                                            totalReachableScore: totalReachableScore,\r\n                                        }\"\r\n                                    ></div>\r\n                                </div>\r\n                            </div>\r\n                        } @else {\r\n                            <div class=\"fw-bold text-secondary\" jhiTranslate=\"artemisApp.studentDashboard.cardScore\"></div>\r\n                            <div class=\"fw-bold\">\r\n                                <span jhiTranslate=\"artemisApp.studentDashboard.noStatistics\"></span>\r\n                            </div>\r\n                        }\r\n                        <hr />\r\n                        <div class=\"fw-bold text-secondary\" jhiTranslate=\"artemisApp.studentDashboard.cardExerciseLabel\"></div>\r\n                        @if (nextRelevantExercise && nextRelevantExercise.id && course.id) {\r\n                            <a class=\"fw-bold btn-wrapper exercise-title exercise-guided-tour\" [routerLink]=\"['/courses', course.id, 'exercises', nextRelevantExercise.id]\">\r\n                                {{ nextRelevantExercise.title }}\r\n                            </a>\r\n                        } @else {\r\n                            <div class=\"fw-bold mb-3 exercise-guided-tour\">\r\n                                <span jhiTranslate=\"artemisApp.studentDashboard.cardNoExerciseLabel\"></span>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    @if (exerciseCount && (totalReachableScore || totalAbsoluteScore)) {\r\n                        <div class=\"align-self-center chart-container col-5 mb-2\">\r\n                            <div class=\"chart-text\">\r\n                                <h4 class=\"mb-0\">{{ totalRelativeScore }}%</h4>\r\n                            </div>\r\n                            <ngx-charts-pie-chart\r\n                                id=\"score-chart\"\r\n                                class=\"chart-level\"\r\n                                style=\"position: absolute\"\r\n                                [view]=\"[160, 160]\"\r\n                                [results]=\"ngxDoughnutData\"\r\n                                [arcWidth]=\"0.3\"\r\n                                [scheme]=\"ngxColor\"\r\n                                [doughnut]=\"true\"\r\n                                [animations]=\"false\"\r\n                                (select)=\"onSelect()\"\r\n                                (click)=\"onSelect()\"\r\n                            >\r\n                                <ng-template #tooltipTemplate let-model=\"model\">\r\n                                    <span jhiTranslate=\"artemisApp.courseOverview.statistics.{{ model.name }}\"></span>\r\n                                    <span>: {{ model.value }}</span>\r\n                                </ng-template>\r\n                            </ngx-charts-pie-chart>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            @if (course.isAtLeastTutor && course.id) {\r\n                <div class=\"d-flex justify-content-start align-items-center ms-1 mt-1\">\r\n                    <a class=\"fw-bold btn-wrapper\" [routerLink]=\"['/course-management', course.id]\">\r\n                        <span jhiTranslate=\"artemisApp.studentDashboard.cardManageCourse\"></span>\r\n                        <fa-icon class=\"ms-1\" [icon]=\"faArrowRight\" />\r\n                    </a>\r\n                </div>\r\n            }\r\n        </div>\r\n    </div>\r\n</div>\r\n", "import { Component, OnDestroy, OnInit, inject } from '@angular/core';\r\nimport { CoursesForDashboardDTO } from 'app/course/manage/courses-for-dashboard-dto';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { CourseManagementService } from '../course/manage/course-management.service';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { GuidedTourService } from 'app/guided-tour/guided-tour.service';\r\nimport { courseOverviewTour } from 'app/guided-tour/tours/course-overview-tour';\r\nimport { TeamService } from 'app/exercises/shared/team/team.service';\r\nimport { WebsocketService } from 'app/core/websocket/websocket.service';\r\nimport dayjs from 'dayjs/esm';\r\nimport { Exam } from 'app/entities/exam/exam.model';\r\nimport { Router, RouterLink } from '@angular/router';\r\nimport { faArrowDownAZ, faArrowUpAZ, faDoorOpen, faPenAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { CourseAccessStorageService } from 'app/course/course-access-storage.service';\r\nimport { CourseForDashboardDTO } from 'app/course/manage/course-for-dashboard-dto';\r\nimport { sortCourses } from 'app/shared/util/course.util';\r\nimport { TranslateDirective } from '../shared/language/translate.directive';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { SearchFilterComponent } from '../shared/search-filter/search-filter.component';\r\nimport { NgTemplateOutlet } from '@angular/common';\r\nimport { CourseCardComponent } from './course-card.component';\r\nimport { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\r\nimport { ArtemisTranslatePipe } from '../shared/pipes/artemis-translate.pipe';\r\nimport { SearchFilterPipe } from 'app/shared/pipes/search-filter.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-overview',\r\n    templateUrl: './courses.component.html',\r\n    styleUrls: ['./courses.component.scss'],\r\n    imports: [\r\n        TranslateDirective,\r\n        FaIconComponent,\r\n        SearchFilterComponent,\r\n        RouterLink,\r\n        NgTemplateOutlet,\r\n        CourseCardComponent,\r\n        ArtemisDatePipe,\r\n        ArtemisTranslatePipe,\r\n        SearchFilterPipe,\r\n    ],\r\n})\r\nexport class CoursesComponent implements OnInit, OnDestroy {\r\n    private courseService = inject(CourseManagementService);\r\n    private guidedTourService = inject(GuidedTourService);\r\n    private teamService = inject(TeamService);\r\n    private websocketService = inject(WebsocketService);\r\n    private router = inject(Router);\r\n    private courseAccessStorageService = inject(CourseAccessStorageService);\r\n\r\n    protected readonly faPenAlt = faPenAlt;\r\n    protected readonly faArrowDownAZ = faArrowDownAZ;\r\n    protected readonly faArrowUpAZ = faArrowUpAZ;\r\n    protected readonly faDoorOpen = faDoorOpen;\r\n\r\n    courses: Course[];\r\n    public nextRelevantCourse?: Course;\r\n    nextRelevantCourseForExam?: Course;\r\n    nextRelevantExams?: Exam[];\r\n\r\n    public recentlyAccessedCourses: Course[] = [];\r\n    public regularCourses: Course[] = [];\r\n\r\n    courseForGuidedTour?: Course;\r\n    quizExercisesChannels: string[] = [];\r\n    searchCourseText = '';\r\n\r\n    coursesLoaded = false;\r\n    isSortAscending = true;\r\n\r\n    async ngOnInit() {\r\n        this.loadAndFilterCourses();\r\n        (await this.teamService.teamAssignmentUpdates).subscribe();\r\n        this.courseService.enableCourseOverviewBackground();\r\n    }\r\n\r\n    /**\r\n     * Unsubscribe from all websocket subscriptions.\r\n     */\r\n    ngOnDestroy() {\r\n        if (this.quizExercisesChannels) {\r\n            this.quizExercisesChannels.forEach((channel) => this.websocketService.unsubscribe(channel));\r\n        }\r\n        this.courseService.disableCourseOverviewBackground();\r\n    }\r\n\r\n    loadAndFilterCourses() {\r\n        this.courseService.findAllForDashboard().subscribe({\r\n            next: (res: HttpResponse<CoursesForDashboardDTO>) => {\r\n                if (res.body) {\r\n                    this.coursesLoaded = true;\r\n                    const courses: Course[] = [];\r\n                    if (res.body.courses === undefined || res.body.courses.length === 0) {\r\n                        return;\r\n                    }\r\n                    res.body.courses.forEach((courseDto: CourseForDashboardDTO) => {\r\n                        courses.push(courseDto.course);\r\n                    });\r\n                    this.courses = sortCourses(courses);\r\n                    this.courseForGuidedTour = this.guidedTourService.enableTourForCourseOverview(this.courses, courseOverviewTour, true);\r\n\r\n                    this.nextRelevantExams = res.body.activeExams ?? [];\r\n                    this.sortCoursesInRecentlyAccessedAndRegularCourses();\r\n                }\r\n            },\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Sorts the courses into recently accessed and regular courses.\r\n     * If there are less than 5 courses, all courses are displayed in the regular courses section.\r\n     */\r\n    sortCoursesInRecentlyAccessedAndRegularCourses() {\r\n        if (this.courses.length <= 5) {\r\n            this.regularCourses = this.courses;\r\n        } else {\r\n            const lastAccessedCourseIds = this.courseAccessStorageService.getLastAccessedCourses(CourseAccessStorageService.STORAGE_KEY);\r\n            this.recentlyAccessedCourses = this.courses.filter((course) => lastAccessedCourseIds.includes(course.id!));\r\n            this.regularCourses = this.courses.filter((course) => !lastAccessedCourseIds.includes(course.id!));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the course for the next upcoming exam and returns the next upcoming exam or undefined\r\n     */\r\n    get nextRelevantExam(): Exam | undefined {\r\n        // TODO: support multiple relevant exams in the future\r\n        let relevantExam: Exam | undefined;\r\n        if (this.nextRelevantExams) {\r\n            if (this.nextRelevantExams.length === 0) {\r\n                return undefined;\r\n            } else if (this.nextRelevantExams.length === 1) {\r\n                relevantExam = this.nextRelevantExams[0];\r\n            } else {\r\n                relevantExam = this.nextRelevantExams.sort((a, b) => {\r\n                    return dayjs(a.startDate).valueOf() - dayjs(b.startDate).valueOf();\r\n                })[0];\r\n            }\r\n            this.nextRelevantCourseForExam = relevantExam.course!;\r\n        }\r\n        return relevantExam;\r\n    }\r\n\r\n    /**\r\n     * navigate to /courses/:courseid/exams/:examId\r\n     */\r\n    openExam(): void {\r\n        this.router.navigate(['courses', this.nextRelevantCourseForExam?.id, 'exams', this.nextRelevantExam!.id]);\r\n    }\r\n\r\n    setSearchValue(searchValue: string): void {\r\n        this.searchCourseText = searchValue;\r\n    }\r\n\r\n    /**\r\n     * Sorts the courses in alphabetical order\r\n     */\r\n    onSort(): void {\r\n        if (this.courses) {\r\n            this.isSortAscending = !this.isSortAscending;\r\n            this.regularCourses = [...sortCourses(this.regularCourses, this.isSortAscending)];\r\n            this.recentlyAccessedCourses = [...sortCourses(this.recentlyAccessedCourses, this.isSortAscending)];\r\n        }\r\n    }\r\n}\r\n", "@if (nextRelevantExam && nextRelevantCourseForExam) {\r\n    <div class=\"module-bg p-3 rounded-3 mb-3\">\r\n        <h3 class=\"col mb-3 fw-medium\" jhiTranslate=\"artemisApp.studentDashboard.examTitle\" [translateValues]=\"{ course: nextRelevantCourseForExam.title }\"></h3>\r\n        <div class=\"mb-3\">\r\n            <div class=\"d-flex justify-content-between align-items-center exam-container px-3\" (click)=\"openExam()\">\r\n                <div class=\"mb-4 mt-4 d-flex\" style=\"width: unset\">\r\n                    <fa-icon [icon]=\"faPenAlt\" size=\"2x\" />\r\n                    <h4 class=\"ms-2 fw-medium\">{{ nextRelevantExam.title }}</h4>\r\n                </div>\r\n                <div class=\"text-end mb-4 mt-4\" style=\"width: unset\">\r\n                    @if (nextRelevantExam.startDate) {\r\n                        <div jhiTranslate=\"artemisApp.exam.overview.start\" [translateValues]=\"{ start: nextRelevantExam.startDate | artemisDate }\"></div>\r\n                    }\r\n                    @if (nextRelevantExam.examMaxPoints) {\r\n                        <div jhiTranslate=\"artemisApp.exam.overview.maxPoints\" [translateValues]=\"{ points: nextRelevantExam.examMaxPoints }\"></div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n<div class=\"module-bg rounded-3 pb-3\">\r\n    <div class=\"d-flex justify-content-between p-3 rounded-3 align-items-center\">\r\n        <h3 class=\"fw-medium mb-0\">{{ 'artemisApp.studentDashboard.title' | artemisTranslate }} ({{ regularCourses.length + recentlyAccessedCourses.length }})</h3>\r\n        <div class=\"d-flex gap-3 align-items-center ms-1\">\r\n            <div class=\"text-primary d-inline-flex\">\r\n                <a id=\"test-sort\" (click)=\"onSort()\" class=\"d-inline-flex align-items-center\">\r\n                    <fa-icon [icon]=\"isSortAscending ? faArrowDownAZ : faArrowUpAZ\" />\r\n                    <span class=\"d-none d-md-inline ms-1\" jhiTranslate=\"artemisApp.studentDashboard.sort\"></span>\r\n                </a>\r\n            </div>\r\n            <jhi-search-filter (newSearchEvent)=\"setSearchValue($event)\" class=\"my-0\" />\r\n            @if (regularCourses.length) {\r\n                <div class=\"col-sm-auto d-flex\">\r\n                    <a class=\"btn btn-primary\" [routerLink]=\"['/courses/enroll']\">\r\n                        <fa-icon [icon]=\"faDoorOpen\" />\r\n                        <span class=\"d-none d-md-inline ms-1\" jhiTranslate=\"artemisApp.studentDashboard.enroll.title\"></span>\r\n                    </a>\r\n                </div>\r\n            }\r\n        </div>\r\n    </div>\r\n    @if (recentlyAccessedCourses.length) {\r\n        <div class=\"row\">\r\n            <h4 class=\"col m-3 fw-medium\" jhiTranslate=\"artemisApp.studentDashboard.recentlyAccessed\"></h4>\r\n        </div>\r\n        <ng-template *ngTemplateOutlet=\"courseCardTemplate; context: { $implicit: recentlyAccessedCourses }\" />\r\n        @if (regularCourses.length) {\r\n            <div class=\"row\">\r\n                <h4 class=\"col m-3 fw-medium\" jhiTranslate=\"artemisApp.studentDashboard.otherCourses\"></h4>\r\n            </div>\r\n        }\r\n    }\r\n    @if (coursesLoaded && !regularCourses.length && !recentlyAccessedCourses.length) {\r\n        <div class=\"mt-5 mb-5 d-flex flex-column gap-3\">\r\n            <h4 class=\"text-secondary text-center\" jhiTranslate=\"artemisApp.studentDashboard.noCourses\"></h4>\r\n            <div class=\"col-sm-auto d-flex justify-content-center\">\r\n                <a class=\"btn btn-primary\" [routerLink]=\"['/courses/enroll']\" jhiTranslate=\"artemisApp.studentDashboard.enroll.title\"></a>\r\n            </div>\r\n        </div>\r\n    } @else {\r\n        <ng-template *ngTemplateOutlet=\"courseCardTemplate; context: { $implicit: regularCourses }\" />\r\n    }\r\n</div>\r\n@if (coursesLoaded) {\r\n    <div class=\"d-flex justify-content-center mt-3\">\r\n        <div jhiTranslate=\"artemisApp.studentDashboard.archive.oldCourses\"></div>\r\n        <div>&nbsp;</div>\r\n        <a [routerLink]=\"['/courses/archive']\" jhiTranslate=\"artemisApp.studentDashboard.archive.here\"></a>\r\n    </div>\r\n}\r\n\r\n<ng-template #courseCardTemplate let-courses>\r\n    @if ((courses | searchFilter: ['title'] : searchCourseText).length > 0) {\r\n        <div class=\"container-fluid\">\r\n            <div class=\"course-grid justify-content-center align-items-center\">\r\n                @for (course of courses | searchFilter: ['title'] : searchCourseText; track course) {\r\n                    <div class=\"course-card-wrapper\">\r\n                        <jhi-overview-course-card [course]=\"course\" [hasGuidedTour]=\"course === courseForGuidedTour\" />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    } @else {\r\n        @if (coursesLoaded) {\r\n            <div class=\"d-flex justify-content-center\">\r\n                <span class=\"text-secondary\" jhiTranslate=\"artemisApp.studentDashboard.noCoursesFound\"></span>\r\n            </div>\r\n        }\r\n    }\r\n</ng-template>\r\n"],
  "mappings": "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",
  "names": ["courseOverviewTour", "settingsKey", "resetParticipation", "ResetParticipation", "NONE", "steps", "ImageTourStep", "headlineTranslateKey", "subHeadlineTranslateKey", "contentTranslateKey", "imageUrl", "TextTourStep", "highlightSelector", "highlightPadding", "orientation", "Orientation", "BOTTOM", "BOTTOMRIGHT", "permission", "Authority", "ADMIN", "INSTRUCTOR", "EDITOR", "TA", "RIGHT", "TOPLEFT", "hintTranslateKey", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "\u0275\u0275pureFunction2", "_c2", "ctx_r0", "totalAbsoluteScore", "totalReachableScore", "_c3", "course", "id", "nextRelevantExercise", "\u0275\u0275textInterpolate1", "title", "\u0275\u0275propertyInterpolate1", "model_r3", "name", "value", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r2", "\u0275\u0275nextContext", "\u0275\u0275resetView", "onSelect", "\u0275\u0275template", "CourseCardComponent_Conditional_25_ng_template_11_Template", "\u0275\u0275templateRefExtractor", "totalRelativeScore", "\u0275\u0275pureFunction0", "_c4", "ngxDoughnutData", "ngxColor", "\u0275\u0275pureFunction1", "_c5", "faArrowRight", "CourseCardComponent", "router", "inject", "Router", "scoresStorageService", "ScoresStorageService", "exerciseService", "ExerciseService", "ARTEMIS_DEFAULT_COLOR", "hasGuidedTour", "CachingStrategy", "exerciseCount", "selectable", "group", "ScaleType", "Ordinal", "domain", "GraphColors", "GREEN", "RED", "ngOnChanges", "exercises", "length", "nextExercises", "getNextExercisesForDays", "filter", "exercise", "studentParticipations", "submissions", "results", "successful", "totalScoresForCourse", "getStoredTotalScores", "studentScores", "ScoreType", "CURRENT_RELATIVE_SCORE", "ABSOLUTE_SCORE", "REACHABLE_POINTS", "scoreNotReached", "roundValueSpecifiedByCourseSettings", "Math", "max", "navigate", "selectors", "inputs", "features", "\u0275\u0275NgOnChangesFeature", "decls", "vars", "consts", "template", "rf", "ctx", "CourseCardComponent_Conditional_16_Template", "CourseCardComponent_Conditional_17_Template", "CourseCardComponent_Conditional_22_Template", "CourseCardComponent_Conditional_23_Template", "CourseCardComponent_Conditional_25_Template", "CourseCardComponent_Conditional_28_Template", "\u0275\u0275classProp", "courseIcon", "color", "_c0", "_c1", "\u0275\u0275conditional", "isAtLeastTutor", "CourseCardHeaderComponent", "NgxChartsModule", "NgClass", "PieChartComponent", "PieChartModule", "TranslateDirective", "RouterLink", "FontAwesomeModule", "FaIconComponent", "styles", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275property", "\u0275\u0275pureFunction1", "_c1", "\u0275\u0275pipeBind1", "ctx_r2", "nextRelevantExam", "startDate", "_c2", "examMaxPoints", "\u0275\u0275elementStart", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r2", "\u0275\u0275nextContext", "\u0275\u0275resetView", "openExam", "\u0275\u0275elementEnd", "\u0275\u0275template", "CoursesComponent_Conditional_0_Conditional_19_Template", "CoursesComponent_Conditional_0_Conditional_20_Template", "_c0", "nextRelevantCourseForExam", "title", "faPenAlt", "\u0275\u0275textInterpolate", "\u0275\u0275conditional", "\u0275\u0275pureFunction0", "_c3", "faDoorOpen", "CoursesComponent_Conditional_26_6_ng_template_0_Template", "CoursesComponent_Conditional_26_6_Template", "CoursesComponent_Conditional_26_Conditional_8_Template", "courseCardTemplate_r4", "_c4", "recentlyAccessedCourses", "regularCourses", "length", "CoursesComponent_Conditional_28_1_ng_template_0_Template", "CoursesComponent_Conditional_28_1_Template", "_c5", "course_r5", "courseForGuidedTour", "\u0275\u0275repeaterCreate", "CoursesComponent_ng_template_31_Conditional_1_For_6_Template", "\u0275\u0275repeaterTrackByIdentity", "\u0275\u0275repeater", "\u0275\u0275pipeBind3", "courses_r6", "_c6", "searchCourseText", "CoursesComponent_ng_template_31_Conditional_3_Conditional_1_Template", "coursesLoaded", "CoursesComponent_ng_template_31_Conditional_1_Template", "CoursesComponent_ng_template_31_Conditional_3_Template", "CoursesComponent", "courseService", "inject", "CourseManagementService", "guidedTourService", "GuidedTourService", "teamService", "TeamService", "websocketService", "WebsocketService", "router", "Router", "courseAccessStorageService", "CourseAccessStorageService", "faArrowDownAZ", "faArrowUpAZ", "courses", "nextRelevantCourse", "nextRelevantExams", "quizExercisesChannels", "isSortAscending", "ngOnInit", "__async", "loadAndFilterCourses", "teamAssignmentUpdates", "subscribe", "enableCourseOverviewBackground", "ngOnDestroy", "forEach", "channel", "unsubscribe", "disableCourseOverviewBackground", "findAllForDashboard", "next", "res", "body", "undefined", "courseDto", "push", "course", "sortCourses", "enableTourForCourseOverview", "courseOverviewTour", "activeExams", "sortCoursesInRecentlyAccessedAndRegularCourses", "lastAccessedCourseIds", "getLastAccessedCourses", "STORAGE_KEY", "filter", "includes", "id", "relevantExam", "sort", "a", "b", "dayjs", "valueOf", "navigate", "setSearchValue", "searchValue", "onSort", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "CoursesComponent_Conditional_0_Template", "i0", "_r1", "$event", "CoursesComponent_Conditional_23_Template", "CoursesComponent_Conditional_26_Template", "CoursesComponent_Conditional_27_Template", "CoursesComponent_Conditional_28_Template", "CoursesComponent_Conditional_30_Template", "CoursesComponent_ng_template_31_Template", "\u0275\u0275templateRefExtractor", "\u0275\u0275textInterpolate2", "TranslateDirective", "FaIconComponent", "SearchFilterComponent", "RouterLink", "NgTemplateOutlet", "CourseCardComponent", "ArtemisDatePipe", "ArtemisTranslatePipe", "SearchFilterPipe", "styles"]
}
