{
  "version": 3,
  "sources": ["src/main/webapp/app/guided-tour/tours/course-exercise-overview-tour.ts", "src/main/webapp/app/overview/course-exercises/course-exercises.component.ts", "src/main/webapp/app/overview/course-exercises/course-exercises.component.html"],
  "sourcesContent": ["import { GuidedTour } from 'app/guided-tour/guided-tour.model';\r\nimport { Orientation, ResetParticipation, UserInteractionEvent } from 'app/guided-tour/guided-tour.constants';\r\nimport { TextTourStep, UserInterActionTourStep, VideoTourStep } from 'app/guided-tour/guided-tour-step.model';\r\n\r\nexport const courseExerciseOverviewTour: GuidedTour = {\r\n    settingsKey: 'course_exercise_overview_tour',\r\n    resetParticipation: ResetParticipation.EXERCISE_PARTICIPATION,\r\n    steps: [\r\n        new VideoTourStep({\r\n            headlineTranslateKey: 'tour.courseExerciseOverview.installPrerequisites.headline',\r\n            contentTranslateKey: 'tour.courseExerciseOverview.installPrerequisites.content',\r\n            videoUrl: 'tour.courseExerciseOverview.installPrerequisites.videoUrl',\r\n        }),\r\n        new TextTourStep({\r\n            highlightSelector: '.tab-item.exercises',\r\n            headlineTranslateKey: 'tour.courseExerciseOverview.exercises.headline',\r\n            contentTranslateKey: 'tour.courseExerciseOverview.exercises.content',\r\n            highlightPadding: 10,\r\n            orientation: Orientation.RIGHT,\r\n        }),\r\n        new TextTourStep({\r\n            highlightSelector: '.guided-tour.tab-link.statistics',\r\n            headlineTranslateKey: 'tour.courseExerciseOverview.statistics.headline',\r\n            contentTranslateKey: 'tour.courseExerciseOverview.statistics.content',\r\n            highlightPadding: 10,\r\n            orientation: Orientation.RIGHT,\r\n        }),\r\n        new TextTourStep({\r\n            highlightSelector: '.guided-tour.exercise-row-container .control-label',\r\n            headlineTranslateKey: 'tour.courseExerciseOverview.exerciseRow.headline',\r\n            contentTranslateKey: 'tour.courseExerciseOverview.exerciseRow.content',\r\n            highlightPadding: 10,\r\n            orientation: Orientation.TOP,\r\n        }),\r\n        new TextTourStep({\r\n            highlightSelector: '.course-exercise-row.guided-tour',\r\n            headlineTranslateKey: 'tour.courseExerciseOverview.currentExercise.headline',\r\n            contentTranslateKey: 'tour.courseExerciseOverview.currentExercise.content',\r\n            highlightPadding: 10,\r\n            orientation: Orientation.TOP,\r\n        }),\r\n        new TextTourStep({\r\n            highlightSelector: '.course-exercise-row.guided-tour .exercise-row-icon',\r\n            headlineTranslateKey: 'tour.courseExerciseOverview.exerciseType.headline',\r\n            contentTranslateKey: 'tour.courseExerciseOverview.exerciseType.content',\r\n            highlightPadding: 10,\r\n            orientation: Orientation.TOPLEFT,\r\n        }),\r\n        new TextTourStep({\r\n            highlightSelector: '.course-exercise-row.guided-tour .exercise-tags',\r\n            headlineTranslateKey: 'tour.courseExerciseOverview.exerciseTags.headline',\r\n            contentTranslateKey: 'tour.courseExerciseOverview.exerciseTags.content',\r\n            highlightPadding: 10,\r\n            orientation: Orientation.TOP,\r\n        }),\r\n        new TextTourStep({\r\n            highlightSelector: '.guided-tour.course-information .guided-tour.panel-wrapper',\r\n            headlineTranslateKey: 'tour.courseExerciseOverview.courseInformation.headline',\r\n            contentTranslateKey: 'tour.courseExerciseOverview.courseInformation.content',\r\n            highlightPadding: 10,\r\n            orientation: Orientation.LEFT,\r\n        }),\r\n        new TextTourStep({\r\n            highlightSelector: '.guided-tour.course-information .guided-tour.exercise-panel .guided-tour.panel-wrapper',\r\n            headlineTranslateKey: 'tour.courseExerciseOverview.upcomingDueDates.headline',\r\n            contentTranslateKey: 'tour.courseExerciseOverview.upcomingDueDates.content',\r\n            highlightPadding: 10,\r\n            orientation: Orientation.LEFT,\r\n        }),\r\n        new UserInterActionTourStep({\r\n            highlightSelector: '.course-exercise-row.guided-tour .start-exercise',\r\n            headlineTranslateKey: 'tour.courseExerciseOverview.startExercise.headline',\r\n            contentTranslateKey: 'tour.courseExerciseOverview.startExercise.content',\r\n            highlightPadding: 5,\r\n            orientation: Orientation.TOPLEFT,\r\n            userInteractionEvent: UserInteractionEvent.CLICK,\r\n            triggerNextStep: true,\r\n        }),\r\n        new UserInterActionTourStep({\r\n            highlightSelector: '.course-exercise-row.guided-tour .start-exercise',\r\n            headlineTranslateKey: 'tour.courseExerciseOverview.startExerciseWait.headline',\r\n            contentTranslateKey: 'tour.courseExerciseOverview.startExerciseWait.content',\r\n            highlightPadding: 5,\r\n            orientation: Orientation.TOPLEFT,\r\n            userInteractionEvent: UserInteractionEvent.WAIT_FOR_SELECTOR,\r\n            triggerNextStep: true,\r\n        }),\r\n        new TextTourStep({\r\n            highlightSelector: '.course-exercise-row.guided-tour .code-button',\r\n            headlineTranslateKey: 'tour.courseExerciseOverview.repositoryCreated.headline',\r\n            contentTranslateKey: 'tour.courseExerciseOverview.repositoryCreated.content',\r\n            highlightPadding: 5,\r\n            orientation: Orientation.TOPLEFT,\r\n        }),\r\n        new VideoTourStep({\r\n            headlineTranslateKey: 'tour.courseExerciseOverview.cloneRepository.headline',\r\n            contentTranslateKey: 'tour.courseExerciseOverview.cloneRepository.content',\r\n            hintTranslateKey: 'tour.courseExerciseOverview.cloneRepository.hint',\r\n            videoUrl: 'tour.courseExerciseOverview.cloneRepository.videoUrl',\r\n        }),\r\n        new VideoTourStep({\r\n            headlineTranslateKey: 'tour.courseExerciseOverview.solveExercise.headline',\r\n            contentTranslateKey: 'tour.courseExerciseOverview.solveExercise.content',\r\n            videoUrl: 'tour.courseExerciseOverview.solveExercise.videoUrl',\r\n        }),\r\n        new TextTourStep({\r\n            highlightSelector: '.course-exercise-row.guided-tour',\r\n            headlineTranslateKey: 'tour.courseExerciseOverview.reviewResult.headline',\r\n            contentTranslateKey: 'tour.courseExerciseOverview.reviewResult.content',\r\n            highlightPadding: 10,\r\n            orientation: Orientation.TOP,\r\n        }),\r\n    ],\r\n};\r\n", "import { Component, OnDestroy, OnInit, inject } from '@angular/core';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { ActivatedRoute, Router, RouterOutlet } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { GuidedTourService } from 'app/guided-tour/guided-tour.service';\r\nimport { courseExerciseOverviewTour } from 'app/guided-tour/tours/course-exercise-overview-tour';\r\nimport { ProgrammingSubmissionService } from 'app/exercises/programming/participate/programming-submission.service';\r\nimport { Exercise } from 'app/entities/exercise.model';\r\nimport { CourseStorageService } from 'app/course/manage/course-storage.service';\r\nimport { AccordionGroups, CollapseState, SidebarCardElement, SidebarData, SidebarItemShowAlways } from 'app/types/sidebar';\r\nimport { CourseOverviewService } from '../course-overview.service';\r\nimport { LtiService } from 'app/shared/service/lti.service';\r\nimport { NgClass, NgStyle } from '@angular/common';\r\nimport { SidebarComponent } from 'app/shared/sidebar/sidebar.component';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\n\r\nconst DEFAULT_UNIT_GROUPS: AccordionGroups = {\r\n    future: { entityData: [] },\r\n    current: { entityData: [] },\r\n    dueSoon: { entityData: [] },\r\n    past: { entityData: [] },\r\n    noDate: { entityData: [] },\r\n};\r\n\r\nconst DEFAULT_COLLAPSE_STATE: CollapseState = {\r\n    future: true,\r\n    current: false,\r\n    dueSoon: false,\r\n    past: true,\r\n    noDate: true,\r\n};\r\n\r\nconst DEFAULT_SHOW_ALWAYS: SidebarItemShowAlways = {\r\n    future: false,\r\n    current: false,\r\n    dueSoon: false,\r\n    past: false,\r\n    noDate: false,\r\n};\r\n\r\n@Component({\r\n    selector: 'jhi-course-exercises',\r\n    templateUrl: './course-exercises.component.html',\r\n    styleUrls: ['../course-overview.scss'],\r\n    imports: [NgClass, SidebarComponent, NgStyle, RouterOutlet, TranslateDirective],\r\n})\r\nexport class CourseExercisesComponent implements OnInit, OnDestroy {\r\n    private courseStorageService = inject(CourseStorageService);\r\n    private route = inject(ActivatedRoute);\r\n    private guidedTourService = inject(GuidedTourService);\r\n    private programmingSubmissionService = inject(ProgrammingSubmissionService);\r\n    private router = inject(Router);\r\n    private courseOverviewService = inject(CourseOverviewService);\r\n    private ltiService = inject(LtiService);\r\n\r\n    private parentParamSubscription: Subscription;\r\n    private courseUpdatesSubscription: Subscription;\r\n    private ltiSubscription: Subscription;\r\n\r\n    course?: Course;\r\n    courseId: number;\r\n    sortedExercises?: Exercise[];\r\n    exerciseForGuidedTour?: Exercise;\r\n\r\n    exerciseSelected = true;\r\n    accordionExerciseGroups: AccordionGroups = DEFAULT_UNIT_GROUPS;\r\n    sidebarData: SidebarData;\r\n    sidebarExercises: SidebarCardElement[] = [];\r\n    isCollapsed = false;\r\n    isShownViaLti = false;\r\n\r\n    protected readonly DEFAULT_COLLAPSE_STATE = DEFAULT_COLLAPSE_STATE;\r\n    protected readonly DEFAULT_SHOW_ALWAYS = DEFAULT_SHOW_ALWAYS;\r\n\r\n    ngOnInit() {\r\n        this.isCollapsed = this.courseOverviewService.getSidebarCollapseStateFromStorage('exercise');\r\n        this.parentParamSubscription = this.route.parent!.params.subscribe((params) => {\r\n            this.courseId = Number(params.courseId);\r\n        });\r\n\r\n        this.course = this.courseStorageService.getCourse(this.courseId);\r\n        this.onCourseLoad();\r\n        this.prepareSidebarData();\r\n\r\n        this.courseUpdatesSubscription = this.courseStorageService.subscribeToCourseUpdates(this.courseId).subscribe((course: Course) => {\r\n            this.course = course;\r\n            this.prepareSidebarData();\r\n            this.onCourseLoad();\r\n        });\r\n\r\n        this.exerciseForGuidedTour = this.guidedTourService.enableTourForCourseExerciseComponent(this.course, courseExerciseOverviewTour, true);\r\n\r\n        this.ltiSubscription = this.ltiService.isShownViaLti$.subscribe((isShownViaLti) => {\r\n            this.isShownViaLti = isShownViaLti;\r\n        });\r\n\r\n        // If no exercise is selected navigate to the lastSelected or upcoming exercise\r\n        this.navigateToExercise();\r\n    }\r\n\r\n    navigateToExercise() {\r\n        const upcomingExercise = this.courseOverviewService.getUpcomingExercise(this.course?.exercises);\r\n        const lastSelectedExercise = this.getLastSelectedExercise();\r\n        let exerciseId = this.route.firstChild?.snapshot?.params.exerciseId;\r\n        if (!exerciseId) {\r\n            // Get the exerciseId from the URL\r\n            const url = this.router.url;\r\n            const urlParts = url.split('/');\r\n            const indexOfExercise = urlParts.indexOf('exercises');\r\n            if (indexOfExercise !== -1 && urlParts.length === indexOfExercise + 2) {\r\n                exerciseId = urlParts[indexOfExercise + 1];\r\n            }\r\n        }\r\n\r\n        if (!exerciseId && lastSelectedExercise) {\r\n            this.router.navigate([lastSelectedExercise], { relativeTo: this.route, replaceUrl: true });\r\n        } else if (!exerciseId && upcomingExercise) {\r\n            this.router.navigate([upcomingExercise.id], { relativeTo: this.route, replaceUrl: true });\r\n        } else {\r\n            this.exerciseSelected = !!exerciseId;\r\n        }\r\n    }\r\n\r\n    toggleSidebar() {\r\n        this.isCollapsed = !this.isCollapsed;\r\n        this.courseOverviewService.setSidebarCollapseState('exercise', this.isCollapsed);\r\n    }\r\n\r\n    getLastSelectedExercise(): string | null {\r\n        return sessionStorage.getItem('sidebar.lastSelectedItem.exercise.byCourse.' + this.courseId);\r\n    }\r\n\r\n    prepareSidebarData() {\r\n        if (!this.course?.exercises) {\r\n            return;\r\n        }\r\n        this.sortedExercises = this.courseOverviewService.sortExercises(this.course.exercises);\r\n        this.sidebarExercises = this.courseOverviewService.mapExercisesToSidebarCardElements(this.sortedExercises);\r\n        this.accordionExerciseGroups = this.courseOverviewService.groupExercisesByDueDate(this.sortedExercises);\r\n        this.updateSidebarData();\r\n    }\r\n\r\n    updateSidebarData() {\r\n        this.sidebarData = {\r\n            groupByCategory: true,\r\n            sidebarType: 'exercise',\r\n            storageId: 'exercise',\r\n            groupedData: this.accordionExerciseGroups,\r\n            ungroupedData: this.sidebarExercises,\r\n        };\r\n    }\r\n\r\n    private onCourseLoad() {\r\n        this.programmingSubmissionService.initializeCacheForStudent(this.course?.exercises, true);\r\n    }\r\n\r\n    onSubRouteDeactivate() {\r\n        if (this.route.firstChild) {\r\n            return;\r\n        }\r\n        this.navigateToExercise();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.courseUpdatesSubscription?.unsubscribe();\r\n        this.parentParamSubscription?.unsubscribe();\r\n        this.ltiSubscription?.unsubscribe();\r\n    }\r\n}\r\n", "<div class=\"d-flex horizontal-scroll\">\r\n    @if (course) {\r\n        @if (!isShownViaLti) {\r\n            <div [ngClass]=\"{ 'sidebar-collapsed': isCollapsed }\">\r\n                <jhi-sidebar\r\n                    [itemSelected]=\"exerciseSelected\"\r\n                    [courseId]=\"courseId\"\r\n                    [sidebarData]=\"sidebarData\"\r\n                    [collapseState]=\"DEFAULT_COLLAPSE_STATE\"\r\n                    [sidebarItemAlwaysShow]=\"DEFAULT_SHOW_ALWAYS\"\r\n                    [showFilter]=\"true\"\r\n                />\r\n            </div>\r\n        }\r\n\r\n        @if (exerciseSelected) {\r\n            <div\r\n                [ngClass]=\"{ 'exercise-content-sidebar-width': !isCollapsed }\"\r\n                class=\"exercise-content-width module-bg rounded-3\"\r\n                [ngStyle]=\"isShownViaLti ? { height: '90vh', position: 'relative' } : {}\"\r\n            >\r\n                <router-outlet (deactivate)=\"onSubRouteDeactivate()\" />\r\n            </div>\r\n        } @else {\r\n            <div class=\"vw-100 module-bg rounded-3 p-3 d-flex justify-content-between\">\r\n                <div class=\"col-12 text-center my-auto\" jhiTranslate=\"artemisApp.courseOverview.exerciseDetails.selectExercise\"></div>\r\n            </div>\r\n        }\r\n    }\r\n</div>\r\n"],
  "mappings": "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",
  "names": ["courseExerciseOverviewTour", "settingsKey", "resetParticipation", "ResetParticipation", "EXERCISE_PARTICIPATION", "steps", "VideoTourStep", "headlineTranslateKey", "contentTranslateKey", "videoUrl", "TextTourStep", "highlightSelector", "highlightPadding", "orientation", "Orientation", "RIGHT", "TOP", "TOPLEFT", "LEFT", "UserInterActionTourStep", "userInteractionEvent", "UserInteractionEvent", "CLICK", "triggerNextStep", "WAIT_FOR_SELECTOR", "hintTranslateKey", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "\u0275\u0275pureFunction1", "_c0", "ctx_r0", "isCollapsed", "exerciseSelected", "courseId", "sidebarData", "DEFAULT_COLLAPSE_STATE", "DEFAULT_SHOW_ALWAYS", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r2", "\u0275\u0275nextContext", "\u0275\u0275resetView", "onSubRouteDeactivate", "_c1", "isShownViaLti", "\u0275\u0275pureFunction0", "_c2", "_c3", "\u0275\u0275template", "CourseExercisesComponent_Conditional_2_Conditional_1_Template", "CourseExercisesComponent_Conditional_2_Conditional_2_Template", "CourseExercisesComponent_Conditional_2_Conditional_3_Template", "\u0275\u0275conditional", "DEFAULT_UNIT_GROUPS", "future", "entityData", "current", "dueSoon", "past", "noDate", "CourseExercisesComponent", "courseStorageService", "inject", "CourseStorageService", "route", "ActivatedRoute", "guidedTourService", "GuidedTourService", "programmingSubmissionService", "ProgrammingSubmissionService", "router", "Router", "courseOverviewService", "CourseOverviewService", "ltiService", "LtiService", "parentParamSubscription", "courseUpdatesSubscription", "ltiSubscription", "course", "sortedExercises", "exerciseForGuidedTour", "accordionExerciseGroups", "sidebarExercises", "ngOnInit", "getSidebarCollapseStateFromStorage", "parent", "params", "subscribe", "Number", "getCourse", "onCourseLoad", "prepareSidebarData", "subscribeToCourseUpdates", "enableTourForCourseExerciseComponent", "courseExerciseOverviewTour", "isShownViaLti$", "navigateToExercise", "upcomingExercise", "getUpcomingExercise", "exercises", "lastSelectedExercise", "getLastSelectedExercise", "exerciseId", "firstChild", "snapshot", "urlParts", "url", "split", "indexOfExercise", "indexOf", "length", "navigate", "relativeTo", "replaceUrl", "id", "toggleSidebar", "setSidebarCollapseState", "sessionStorage", "getItem", "sortExercises", "mapExercisesToSidebarCardElements", "groupExercisesByDueDate", "updateSidebarData", "groupByCategory", "sidebarType", "storageId", "groupedData", "ungroupedData", "initializeCacheForStudent", "ngOnDestroy", "unsubscribe", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "CourseExercisesComponent_Conditional_2_Template", "NgClass", "SidebarComponent", "NgStyle", "RouterOutlet", "TranslateDirective", "styles"]
}
