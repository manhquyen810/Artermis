import{a as A}from"./chunk-A5PTZAPN.js";import{b as R}from"./chunk-AU6UEH3U.js";import{a as g}from"./chunk-FGAONQTL.js";import{a as x}from"./chunk-HQ6UGNQX.js";import{a as D}from"./chunk-ZLJ76G5I.js";import{c as S}from"./chunk-CK7FH6VF.js";import{i as T}from"./chunk-PUNMJFMR.js";import{a as f,b as U}from"./chunk-XBLNBTXN.js";import{a as $}from"./chunk-G3JOQOSD.js";import{a as E}from"./chunk-5YQ3ACZE.js";import{a as d,b as p,c as G}from"./chunk-EELXLOHY.js";import{b as F}from"./chunk-R5BZWVRQ.js";import{p as b}from"./chunk-DID2YGL7.js";import{c as v}from"./chunk-CXQURQM5.js";import{L as a,O as h}from"./chunk-IOA4DPXY.js";import{Ea as n,L as y,g as C,ra as m,ya as l,z as s}from"./chunk-5LC5EQRR.js";var w=class{date;startTime;endTime;location},N=(()=>{class i{httpClient=n(h);tutorialGroupFreePeriodService=n(R);resourceURL="api/tutorialgroup";getOneOfTutorialGroup(e,r,t){return this.httpClient.get(`${this.resourceURL}/courses/${e}/tutorial-groups/${r}/sessions/${t}`,{observe:"response"}).pipe(s(o=>this.convertTutorialGroupSessionResponseDatesFromServer(o)))}update(e,r,t,o){let u=this.convertTutorialGroupSessionDatesFromClient(o);return this.httpClient.put(`${this.resourceURL}/courses/${e}/tutorial-groups/${r}/sessions/${t}`,u,{observe:"response"}).pipe(s(c=>this.convertTutorialGroupSessionResponseDatesFromServer(c)))}updateAttendanceCount(e,r,t,o){let u=new a;return o!=null&&(u=u.append("attendanceCount",o.toString())),this.httpClient.patch(`${this.resourceURL}/courses/${e}/tutorial-groups/${r}/sessions/${t}/attendance-count`,null,{observe:"response",params:u}).pipe(s(c=>this.convertTutorialGroupSessionResponseDatesFromServer(c)))}create(e,r,t){let o=this.convertTutorialGroupSessionDatesFromClient(t);return this.httpClient.post(`${this.resourceURL}/courses/${e}/tutorial-groups/${r}/sessions`,o,{observe:"response"}).pipe(s(u=>this.convertTutorialGroupSessionResponseDatesFromServer(u)))}cancel(e,r,t,o){return this.httpClient.post(`${this.resourceURL}/courses/${e}/tutorial-groups/${r}/sessions/${t}/cancel`,{status_explanation:o},{observe:"response"}).pipe(s(u=>this.convertTutorialGroupSessionResponseDatesFromServer(u)))}activate(e,r,t){return this.httpClient.post(`${this.resourceURL}/courses/${e}/tutorial-groups/${r}/sessions/${t}/activate`,{},{observe:"response"}).pipe(s(o=>this.convertTutorialGroupSessionResponseDatesFromServer(o)))}delete(e,r,t){return this.httpClient.delete(`${this.resourceURL}/courses/${e}/tutorial-groups/${r}/sessions/${t}`,{observe:"response"})}convertTutorialGroupSessionDatesFromServer(e){return e.start=p(e.start),e.end=p(e.end),e.tutorialGroupFreePeriod&&(e.tutorialGroupFreePeriod=this.tutorialGroupFreePeriodService.convertTutorialGroupFreePeriodDatesFromServer(e.tutorialGroupFreePeriod)),e}convertTutorialGroupSessionResponseDatesFromServer(e){return e.body&&this.convertTutorialGroupSessionDatesFromServer(e.body),e}convertTutorialGroupSessionDatesFromClient(e){return e&&Object.assign({},e,{date:G(e.date)})}static \u0275fac=function(r){return new(r||i)};static \u0275prov=l({token:i,factory:i.\u0275fac,providedIn:"root"})}return i})();var O=(()=>{class i{httpClient=n(h);tutorialGroupSessionService=n(N);tutorialGroupsConfigurationService=n(g);resourceURL="api/tutorialgroup";getUniqueCampusValues(e){return this.httpClient.get(`${this.resourceURL}/courses/${e}/tutorial-groups/campus-values`,{observe:"response"})}getUniqueLanguageValues(e){return this.httpClient.get(`${this.resourceURL}/courses/${e}/tutorial-groups/language-values`,{observe:"response"})}getAllForCourse(e){return this.httpClient.get(`${this.resourceURL}/courses/${e}/tutorial-groups`,{observe:"response"}).pipe(s(r=>this.convertTutorialGroupResponseArrayDatesFromServer(r)))}getOneOfCourse(e,r){return this.httpClient.get(`${this.resourceURL}/courses/${e}/tutorial-groups/${r}`,{observe:"response"}).pipe(s(t=>this.convertTutorialGroupResponseDatesFromServer(t)))}create(e,r){let t=this.convertTutorialGroupDatesFromClient(e);return this.httpClient.post(`${this.resourceURL}/courses/${r}/tutorial-groups`,t,{observe:"response"}).pipe(s(o=>this.convertTutorialGroupResponseDatesFromServer(o)))}update(e,r,t,o,u){let c=this.convertTutorialGroupDatesFromClient(t);return this.httpClient.put(`${this.resourceURL}/courses/${e}/tutorial-groups/${r}`,{tutorialGroup:c,notificationText:o,updateTutorialGroupChannelName:u??!1},{observe:"response"}).pipe(s(L=>this.convertTutorialGroupResponseDatesFromServer(L)))}deregisterStudent(e,r,t){return this.httpClient.delete(`${this.resourceURL}/courses/${e}/tutorial-groups/${r}/deregister/${t}`,{observe:"response"})}registerStudent(e,r,t){return this.httpClient.post(`${this.resourceURL}/courses/${e}/tutorial-groups/${r}/register/${t}`,{},{observe:"response"})}registerMultipleStudents(e,r,t){return this.httpClient.post(`${this.resourceURL}/courses/${e}/tutorial-groups/${r}/register-multiple`,t,{observe:"response"})}import(e,r){return this.httpClient.post(`${this.resourceURL}/courses/${e}/tutorial-groups/import`,r,{observe:"response"})}delete(e,r){return this.httpClient.delete(`${this.resourceURL}/courses/${e}/tutorial-groups/${r}`,{observe:"response"})}convertTutorialGroupArrayDatesFromServer(e){return e&&e.forEach(r=>{this.convertTutorialGroupDatesFromServer(r)}),e}convertTutorialGroupDatesFromServer(e){return e.tutorialGroupSchedule&&(e.tutorialGroupSchedule.validFromInclusive=p(e.tutorialGroupSchedule.validFromInclusive),e.tutorialGroupSchedule.validToInclusive=p(e.tutorialGroupSchedule.validToInclusive)),e.tutorialGroupSessions&&e.tutorialGroupSessions.map(r=>this.tutorialGroupSessionService.convertTutorialGroupSessionDatesFromServer(r)),e.nextSession&&(e.nextSession=this.tutorialGroupSessionService.convertTutorialGroupSessionDatesFromServer(e.nextSession)),e.course?.tutorialGroupsConfiguration&&(e.course.tutorialGroupsConfiguration=this.tutorialGroupsConfigurationService.convertTutorialGroupsConfigurationDatesFromServer(e.course?.tutorialGroupsConfiguration)),e}convertTutorialGroupResponseDatesFromServer(e){return e.body?.tutorialGroupSchedule&&(e.body.tutorialGroupSchedule.validFromInclusive=p(e.body.tutorialGroupSchedule.validFromInclusive),e.body.tutorialGroupSchedule.validToInclusive=p(e.body.tutorialGroupSchedule.validToInclusive)),e.body?.tutorialGroupSessions&&e.body.tutorialGroupSessions.map(r=>this.tutorialGroupSessionService.convertTutorialGroupSessionDatesFromServer(r)),e.body?.nextSession&&(e.body.nextSession=this.tutorialGroupSessionService.convertTutorialGroupSessionDatesFromServer(e?.body.nextSession)),e.body?.course?.tutorialGroupsConfiguration&&(e.body.course.tutorialGroupsConfiguration=this.tutorialGroupsConfigurationService.convertTutorialGroupsConfigurationDatesFromServer(e.body?.course?.tutorialGroupsConfiguration)),e}convertTutorialGroupResponseArrayDatesFromServer(e){return e.body&&e.body.forEach(r=>{this.convertTutorialGroupDatesFromServer(r)}),e}convertTutorialGroupDatesFromClient(e){return e.tutorialGroupSchedule?Object.assign({},e,{tutorialGroupSchedule:Object.assign({},e.tutorialGroupSchedule,{validFromInclusive:e.tutorialGroupSchedule.validFromInclusive.format("YYYY-MM-DD"),validToInclusive:e.tutorialGroupSchedule.validToInclusive.format("YYYY-MM-DD")})}):e}exportTutorialGroupsToCSV(e,r){let t={fields:r};return this.httpClient.get(`${this.resourceURL}/courses/${e}/tutorial-groups/export/csv`,{params:t,responseType:"blob"})}exportToJson(e,r){let t={fields:r};return this.httpClient.get(`${this.resourceURL}/courses/${e}/tutorial-groups/export/json`,{params:t,responseType:"text"})}static \u0275fac=function(r){return new(r||i)};static \u0275prov=l({token:i,factory:i.\u0275fac,providedIn:"root"})}return i})();var Se=(()=>{class i{http=n(h);courseStorageService=n(x);lectureService=n(D);accountService=n(F);entityTitleService=n(U);tutorialGroupsConfigurationService=n(g);tutorialGroupsService=n(O);scoresStorageService=n(A);resourceUrl="api/core/courses";coursesForNotifications=new C(void 0);fetchingCoursesForNotifications=!1;courseOverviewSubject=new C(!1);isCourseOverview$=this.courseOverviewSubject.asObservable();update(e,r,t){let o=i.convertCourseDatesFromClient(r),u=new FormData;return u.append("course",E(o)),t&&u.append("file",t,"placeholderName.png"),this.http.put(`${this.resourceUrl}/${e}`,u,{observe:"response"}).pipe(s(c=>this.processCourseEntityResponseType(c)))}updateOnlineCourseConfiguration(e,r){return this.http.put(`api/lti/courses/${e}/online-course-configuration`,r,{observe:"response"})}findAllOnlineCoursesWithRegistrationId(e){let r=new a().set("clientId",""+e);return this.http.get(`${this.resourceUrl}/for-lti-dashboard`,{params:r})}find(e){return this.http.get(`${this.resourceUrl}/${e}`,{observe:"response"}).pipe(s(r=>this.processCourseEntityResponseType(r)))}getCourseStatisticsForDetailView(e){return this.http.get(`${this.resourceUrl}/${e}/management-detail`,{observe:"response"}).pipe(y(r=>!!r.body))}getStatisticsData(e,r,t){let o={periodIndex:r};return t&&(o.periodSize=t),this.http.get(`${this.resourceUrl}/${e}/statistics`,{params:o})}getStatisticsForLifetimeOverview(e){return this.http.get(`${this.resourceUrl}/${e}/statistics-lifetime-overview`)}findWithExercises(e){return this.http.get(`${this.resourceUrl}/${e}/with-exercises`,{observe:"response"}).pipe(s(r=>this.processCourseEntityResponseType(r)))}findWithOrganizations(e){return this.http.get(`${this.resourceUrl}/${e}/with-organizations`,{observe:"response"}).pipe(s(r=>this.processCourseEntityResponseType(r)))}findAllForDropdown(){return this.http.get(`${this.resourceUrl}/for-dropdown`,{observe:"response"})}findAllForDashboard(){return this.fetchingCoursesForNotifications=!0,this.http.get(`${this.resourceUrl}/for-dashboard`,{observe:"response"}).pipe(s(e=>{if(e.body){let r=[];e.body.courses?.forEach(o=>{r.push(o.course),this.saveScoresInStorage(o)});let t=e.clone({body:r});this.processCourseEntityArrayResponseType(t),this.setCoursesForNotifications(t),this.courseStorageService.setCourses(t.body!==null?t.body:void 0)}return e}))}findOneForDashboard(e){let r=new a;return this.http.get(`${this.resourceUrl}/${e}/for-dashboard`,{params:r,observe:"response"}).pipe(s(t=>{if(t.body){let o=t.body;return this.saveScoresInStorage(o),t.clone({body:o.course})}return t}),s(t=>this.processCourseEntityResponseType(t)),m(t=>this.courseStorageService.updateCourse(t.body!==null?t.body:void 0)))}saveScoresInStorage(e){this.scoresStorageService.setStoredTotalScores(e.course.id,e.totalScores);let r=new Map;r.set(v.PROGRAMMING,e.programmingScores),r.set(v.MODELING,e.modelingScores),r.set(v.QUIZ,e.quizScores),r.set(v.TEXT,e.textScores),r.set(v.FILE_UPLOAD,e.fileUploadScores),this.scoresStorageService.setStoredScoresPerExerciseType(e.course.id,r),this.scoresStorageService.setStoredParticipationResults(e.participationResults)}findAllParticipationsWithResults(e){return this.http.get(`api/exercise/courses/${e}/participations`)}findAllResultsOfCourseForExerciseAndCurrentUser(e){return this.http.get(`${this.resourceUrl}/${e}/results`).pipe(s(r=>(this.accountService.setAccessRightsForCourseAndReferencedExercises(r),r)))}getCourseWithInterestingExercisesForTutors(e){let r=`${this.resourceUrl}/${e}/for-assessment-dashboard`;return this.http.get(r,{observe:"response"}).pipe(s(t=>this.processCourseEntityResponseType(t)))}getStatsForTutors(e){return this.http.get(`${this.resourceUrl}/${e}/stats-for-assessment-dashboard`,{observe:"response"})}findAllForRegistration(){return this.http.get(`${this.resourceUrl}/for-enrollment`,{observe:"response"}).pipe(s(e=>this.processCourseEntityArrayResponseType(e)))}findOneForRegistration(e){return this.http.get(`${this.resourceUrl}/${e}/for-enrollment`,{observe:"response"}).pipe(s(r=>this.processCourseEntityResponseType(r)))}registerForCourse(e){return this.http.post(`${this.resourceUrl}/${e}/enroll`,null,{observe:"response"}).pipe(s(r=>(r.body!=null&&this.accountService.syncGroups(r.body),r)))}unenrollFromCourse(e){return this.http.post(`${this.resourceUrl}/${e}/unenroll`,null,{observe:"response"}).pipe(s(r=>(r.body!=null&&this.accountService.syncGroups(r.body),r)))}getAllCoursesWithQuizExercises(){return this.fetchingCoursesForNotifications=!0,this.http.get(this.resourceUrl+"/courses-with-quiz",{observe:"response"}).pipe(s(e=>this.processCourseEntityArrayResponseType(e)),s(e=>this.setCoursesForNotifications(e)))}getWithUserStats(e){let r=$(e);return this.fetchingCoursesForNotifications=!0,this.http.get(`${this.resourceUrl}/with-user-stats`,{params:r,observe:"response"}).pipe(s(t=>this.processCourseEntityArrayResponseType(t)),s(t=>this.setCoursesForNotifications(t)))}getCourseOverview(e){let r=$(e);return this.fetchingCoursesForNotifications=!0,this.http.get(`${this.resourceUrl}/course-management-overview`,{params:r,observe:"response"}).pipe(m(t=>{t.body&&t.body.forEach(o=>this.accountService.setAccessRightsForCourse(o))}))}getCoursesForArchive(){return this.http.get(`${this.resourceUrl}/for-archive`,{observe:"response"})}getExercisesForManagementOverview(e){let r=new a;return r=r.append("onlyActive",e.toString()),this.http.get(`${this.resourceUrl}/exercises-for-management-overview`,{params:r,observe:"response"}).pipe(s(t=>this.processCourseEntityArrayResponseType(t)))}getStatsForManagementOverview(e){let r=new a;return r=r.append("onlyActive",e.toString()),this.http.get(`${this.resourceUrl}/stats-for-management-overview`,{params:r,observe:"response"})}findAllCategoriesOfCourse(e){return this.http.get(`${this.resourceUrl}/${e}/categories`,{observe:"response"})}getAllUsersInCourseGroup(e,r){return this.http.get(`${this.resourceUrl}/${e}/${r}`,{observe:"response"})}searchOtherUsersInCourse(e,r){let t=new a;return t=t.append("nameOfUser",r),this.http.get(`${this.resourceUrl}/${e}/search-other-users`,{params:t,observe:"response"})}searchUsers(e,r,t){let o=new a;return o=o.append("loginOrName",r),o=o.append("roles",t.join(",")),this.http.get(`${this.resourceUrl}/${e}/users/search`,{observe:"response",params:o})}searchMembersForUserMentions(e,r){let t=new a;return t=t.append("loginOrName",r),this.http.get(`${this.resourceUrl}/${e}/members/search`,{observe:"response",params:t})}searchStudents(e,r){let t=new a;return t=t.append("loginOrName",r),this.http.get(`${this.resourceUrl}/${e}/students/search`,{observe:"response",params:t})}downloadCourseArchive(e){let r=`${this.resourceUrl}/${e}/download-archive`;window.open(r,"_blank")}archiveCourse(e){return this.http.put(`${this.resourceUrl}/${e}/archive`,{},{observe:"response"})}cleanupCourse(e){return this.http.delete(`${this.resourceUrl}/${e}/cleanup`,{observe:"response"})}findAllLockedSubmissionsOfCourse(e){return this.http.get(`${this.resourceUrl}/${e}/locked-submissions`,{observe:"response"}).pipe(y(r=>!!r.body),m(r=>T(r.body)))}addUserToCourseGroup(e,r,t){return this.http.post(`${this.resourceUrl}/${e}/${r}/${t}`,{},{observe:"response"})}addUsersToGroupInCourse(e,r,t){return this.http.post(`${this.resourceUrl}/${e}/${t}`,r,{observe:"response"})}removeUserFromCourseGroup(e,r,t){return this.http.delete(`${this.resourceUrl}/${e}/${r}/${t}`,{observe:"response"})}getCoursesForNotifications(){return setTimeout(()=>{!this.fetchingCoursesForNotifications&&!this.coursesForNotifications.getValue()&&this.findAllForNotifications().subscribe({next:e=>{this.coursesForNotifications.next(e.body||void 0)},error:()=>this.fetchingCoursesForNotifications=!1})},500),this.coursesForNotifications}processCourseEntityResponseType(e){return this.convertTutorialGroupDatesFromServer(e),this.convertTutorialGroupConfigurationDateFromServer(e),this.convertCourseResponseDateFromServer(e),this.setCompetenciesIfNone(e),this.setAccessRightsCourseEntityResponseType(e),this.convertExerciseCategoriesFromServer(e),this.sendCourseTitleAndExerciseTitlesToTitleService(e?.body),e}processCourseEntityArrayResponseType(e){return this.convertTutorialGroupsDatesFromServer(e),this.convertTutorialGroupConfigurationsDateFromServer(e),this.convertCourseArrayResponseDatesFromServer(e),this.convertExerciseCategoryArrayFromServer(e),this.setAccessRightsCourseEntityArrayResponseType(e),e?.body?.forEach(this.sendCourseTitleAndExerciseTitlesToTitleService.bind(this)),e}setCoursesForNotifications(e){return e.body&&(this.coursesForNotifications.next(e.body),this.fetchingCoursesForNotifications=!1),e}static convertCourseDatesFromClient(e){return Object.assign({},e,{startDate:d(e.startDate),endDate:d(e.endDate),enrollmentStartDate:d(e.enrollmentStartDate),enrollmentEndDate:d(e.enrollmentEndDate),unenrollmentEndDate:d(e.unenrollmentEndDate)})}convertTutorialGroupDatesFromServer(e){return e.body?.tutorialGroups&&(e.body.tutorialGroups=this.tutorialGroupsService.convertTutorialGroupArrayDatesFromServer(e.body.tutorialGroups)),e}convertTutorialGroupsDatesFromServer(e){return e.body&&e.body.forEach(r=>{r.tutorialGroups&&(r.tutorialGroups=this.tutorialGroupsService.convertTutorialGroupArrayDatesFromServer(r.tutorialGroups))}),e}convertTutorialGroupConfigurationDateFromServer(e){return e.body?.tutorialGroupsConfiguration&&(e.body.tutorialGroupsConfiguration=this.tutorialGroupsConfigurationService.convertTutorialGroupsConfigurationDatesFromServer(e.body.tutorialGroupsConfiguration)),e}convertTutorialGroupConfigurationsDateFromServer(e){return e.body&&e.body.forEach(r=>{r.tutorialGroupsConfiguration&&(r.tutorialGroupsConfiguration=this.tutorialGroupsConfigurationService.convertTutorialGroupsConfigurationDatesFromServer(r.tutorialGroupsConfiguration))}),e}convertCourseResponseDateFromServer(e){return e.body&&this.setCourseDates(e.body),e}convertCourseArrayResponseDatesFromServer(e){return e.body&&e.body.forEach(r=>this.setCourseDates(r)),e}convertExerciseCategoriesFromServer(e){return e.body&&e.body.exercises&&e.body.exercises.forEach(r=>S.parseExerciseCategories(r)),e}convertExerciseCategoryArrayFromServer(e){return e.body&&e.body.forEach(r=>{r.exercises&&r.exercises.forEach(t=>S.parseExerciseCategories(t))}),e}setCourseDates(e){e.startDate=e.startDate?b(e.startDate):void 0,e.endDate=e.endDate?b(e.endDate):void 0,e.exercises=S.convertExercisesDateFromServer(e.exercises),e.lectures=this.lectureService.convertLectureArrayDatesFromServer(e.lectures)}setCompetenciesIfNone(e){return e.body&&(e.body.competencies=e.body.competencies||[],e.body.prerequisites=e.body.prerequisites||[]),e}setAccessRightsCourseEntityArrayResponseType(e){return e.body&&e.body.forEach(r=>{this.accountService.setAccessRightsForCourseAndReferencedExercises(r)}),e}setAccessRightsCourseEntityResponseType(e){return e.body&&this.accountService.setAccessRightsForCourseAndReferencedExercises(e.body),e}findAllForNotifications(){return this.fetchingCoursesForNotifications=!0,this.http.get(`${this.resourceUrl}/for-notifications`,{observe:"response"}).pipe(s(e=>this.processCourseEntityArrayResponseType(e)),s(e=>this.setCoursesForNotifications(e)))}sendCourseTitleAndExerciseTitlesToTitleService(e){this.entityTitleService.setTitle(f.COURSE,[e?.id],e?.title),e?.exercises?.forEach(r=>{this.entityTitleService.setExerciseTitle(r)}),e?.lectures?.forEach(r=>this.entityTitleService.setTitle(f.LECTURE,[r.id],r.title)),e?.exams?.forEach(r=>this.entityTitleService.setTitle(f.EXAM,[r.id],r.title)),e?.organizations?.forEach(r=>this.entityTitleService.setTitle(f.ORGANIZATION,[r.id],r.name))}getNumberOfAllowedComplaintsInCourse(e,r=!1){return this.http.get(`${this.resourceUrl}/${e}/allowed-complaints?teamMode=${r}`)??0}enableCourseOverviewBackground(){this.courseOverviewSubject.next(!0)}disableCourseOverviewBackground(){this.courseOverviewSubject.next(!1)}getSemesterCollapseStateFromStorage(e){let r=localStorage.getItem("semester.collapseState."+e);return r?JSON.parse(r):!1}setSemesterCollapseState(e,r){localStorage.setItem("semester.collapseState."+e,JSON.stringify(r))}static \u0275fac=function(r){return new(r||i)};static \u0275prov=l({token:i,factory:i.\u0275fac,providedIn:"root"})}return i})();export{w as a,N as b,O as c,Se as d};
//# sourceMappingURL=chunk-AR57MWOI.js.map
