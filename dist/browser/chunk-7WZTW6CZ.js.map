{
  "version": 3,
  "sources": ["src/main/webapp/app/entities/bonus.model.ts"],
  "sourcesContent": ["import { BaseEntity } from 'app/shared/model/base-entity';\r\nimport { GradingScale } from 'app/entities/grading-scale.model';\r\nimport { PlagiarismVerdict } from 'app/exercises/shared/plagiarism/types/PlagiarismVerdict';\r\n\r\nexport class Bonus implements BaseEntity {\r\n    public id?: number;\r\n    public bonusStrategy?: BonusStrategy;\r\n    public weight?: number;\r\n    public sourceGradingScale?: GradingScale;\r\n    public bonusToGradingScale?: GradingScale;\r\n}\r\n\r\nexport enum BonusStrategy {\r\n    GRADES_CONTINUOUS = 'GRADES_CONTINUOUS',\r\n    GRADES_DISCRETE = 'GRADES_DISCRETE',\r\n    POINTS = 'POINTS',\r\n}\r\n\r\nexport class BonusExample {\r\n    public examGrade?: number | string;\r\n    public bonusGrade?: number;\r\n    public finalPoints?: number;\r\n    public finalGrade?: number | string;\r\n    public exceedsMax = false;\r\n\r\n    constructor(\r\n        public studentPointsOfBonusTo: number,\r\n        public studentPointsOfBonusSource: number | undefined,\r\n    ) {}\r\n}\r\n\r\nexport class BonusResult {\r\n    public bonusStrategy?: BonusStrategy;\r\n    public bonusFromTitle?: string;\r\n    public studentPointsOfBonusSource?: number | undefined;\r\n    public bonusGrade?: number | string;\r\n    public finalPoints?: number;\r\n    public finalGrade?: number | string;\r\n    public mostSeverePlagiarismVerdict?: PlagiarismVerdict;\r\n    public achievedPresentationScore?: number;\r\n    public presentationScoreThreshold?: number;\r\n}\r\n"],
  "mappings": "AAIM,IAAOA,EAAP,KAAY,CACPC,GACAC,cACAC,OACAC,mBACAC,qBAGCC,EAAZ,SAAYA,EAAa,CACrBA,OAAAA,EAAA,kBAAA,oBACAA,EAAA,gBAAA,kBACAA,EAAA,OAAA,SAHQA,CAIZ,EAJYA,GAAa,CAAA,CAAA,EAMZC,EAAP,KAAmB,CAQVC,uBACAC,2BARJC,UACAC,WACAC,YACAC,WACAC,WAAa,GAEpBC,YACWP,EACAC,EAA8C,CAD9C,KAAAD,uBAAAA,EACA,KAAAC,2BAAAA,CACR",
  "names": ["Bonus", "id", "bonusStrategy", "weight", "sourceGradingScale", "bonusToGradingScale", "BonusStrategy", "BonusExample", "studentPointsOfBonusTo", "studentPointsOfBonusSource", "examGrade", "bonusGrade", "finalPoints", "finalGrade", "exceedsMax", "constructor"]
}
