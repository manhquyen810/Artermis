{
  "version": 3,
  "sources": ["src/main/webapp/app/shared/user-settings/vcs-access-tokens-settings/vcs-access-tokens-settings.component.ts", "src/main/webapp/app/shared/user-settings/vcs-access-tokens-settings/vcs-access-tokens-settings.component.html"],
  "sourcesContent": ["import { Component, OnDestroy, OnInit, inject } from '@angular/core';\r\nimport { User } from 'app/core/user/user.model';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\nimport { Subject, Subscription, tap } from 'rxjs';\r\nimport dayjs from 'dayjs/esm';\r\nimport { faBan, faCopy, faEdit, faSave, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { ButtonSize, ButtonType } from 'app/shared/components/button.component';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { TranslateDirective } from '../../language/translate.directive';\r\nimport { CdkCopyToClipboard } from '@angular/cdk/clipboard';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { DeleteButtonDirective } from '../../delete-dialog/delete-button.directive';\r\nimport { ButtonComponent } from '../../components/button.component';\r\nimport { FormDateTimePickerComponent } from '../../date-time-picker/date-time-picker.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\r\nimport { ArtemisTranslatePipe } from '../../pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-account-information',\r\n    templateUrl: './vcs-access-tokens-settings.component.html',\r\n    styleUrls: ['../user-settings.scss'],\r\n    imports: [\r\n        TranslateDirective,\r\n        CdkCopyToClipboard,\r\n        FaIconComponent,\r\n        DeleteButtonDirective,\r\n        ButtonComponent,\r\n        FormDateTimePickerComponent,\r\n        FormsModule,\r\n        ArtemisDatePipe,\r\n        ArtemisTranslatePipe,\r\n    ],\r\n})\r\nexport class VcsAccessTokensSettingsComponent implements OnInit, OnDestroy {\r\n    private accountService = inject(AccountService);\r\n    private alertService = inject(AlertService);\r\n\r\n    currentUser?: User;\r\n\r\n    readonly faEdit = faEdit;\r\n    readonly faSave = faSave;\r\n    readonly faTrash = faTrash;\r\n    readonly faCopy = faCopy;\r\n    readonly faBan = faBan;\r\n    private authStateSubscription: Subscription;\r\n    expiryDate?: dayjs.Dayjs;\r\n    validExpiryDate = false;\r\n    wasCopied = false;\r\n    edit = false;\r\n\r\n    private dialogErrorSource = new Subject<string>();\r\n\r\n    dialogError$ = this.dialogErrorSource.asObservable();\r\n\r\n    protected readonly ButtonType = ButtonType;\r\n    protected readonly ButtonSize = ButtonSize;\r\n\r\n    ngOnInit() {\r\n        this.authStateSubscription = this.accountService\r\n            .getAuthenticationState()\r\n            .pipe(\r\n                tap((user: User) => {\r\n                    this.currentUser = user;\r\n                    return this.currentUser;\r\n                }),\r\n            )\r\n            .subscribe();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.authStateSubscription.unsubscribe();\r\n    }\r\n\r\n    deleteVcsAccessToken() {\r\n        this.accountService.deleteUserVcsAccessToken().subscribe({\r\n            next: () => {\r\n                if (this.currentUser) {\r\n                    this.currentUser.vcsAccessTokenExpiryDate = undefined;\r\n                    this.currentUser.vcsAccessToken = undefined;\r\n                }\r\n                this.alertService.success('artemisApp.userSettings.vcsAccessTokensSettingsPage.deleteSuccess');\r\n            },\r\n            error: () => {\r\n                this.alertService.error('artemisApp.userSettings.vcsAccessTokensSettingsPage.deleteFailure');\r\n            },\r\n        });\r\n        this.dialogErrorSource.next('');\r\n    }\r\n\r\n    addNewVcsAccessToken() {\r\n        this.edit = true;\r\n    }\r\n\r\n    sendTokenCreationRequest() {\r\n        if (!this.expiryDate || this.expiryDate.isBefore(dayjs()) || this.expiryDate.isAfter(dayjs().add(1, 'year'))) {\r\n            this.alertService.error('artemisApp.userSettings.vcsAccessTokensSettingsPage.addFailure');\r\n            return;\r\n        }\r\n        this.accountService.addNewVcsAccessToken(this.expiryDate.toISOString()).subscribe({\r\n            next: (res) => {\r\n                if (this.currentUser) {\r\n                    const user = res.body as User;\r\n                    this.currentUser.vcsAccessToken = user.vcsAccessToken;\r\n                    this.currentUser.vcsAccessTokenExpiryDate = user.vcsAccessTokenExpiryDate;\r\n                    this.edit = false;\r\n                }\r\n                this.alertService.success('artemisApp.userSettings.vcsAccessTokensSettingsPage.addSuccess');\r\n            },\r\n            error: () => {\r\n                this.alertService.error('artemisApp.userSettings.vcsAccessTokensSettingsPage.addFailure');\r\n            },\r\n        });\r\n    }\r\n\r\n    /**\r\n     * set wasCopied for 3 seconds on success\r\n     */\r\n    onCopyFinished(successful: boolean) {\r\n        if (successful) {\r\n            this.wasCopied = true;\r\n            setTimeout(() => {\r\n                this.wasCopied = false;\r\n            }, 3000);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Validates if the expiry date is after current time\r\n     */\r\n    validateDate() {\r\n        this.validExpiryDate = !!this.expiryDate?.isAfter(dayjs()) && !!this.expiryDate?.isBefore(dayjs().add(1, 'year'));\r\n    }\r\n\r\n    /**\r\n     *  Cancel creation of a new token\r\n     */\r\n    cancelTokenCreation() {\r\n        this.edit = false;\r\n        this.expiryDate = undefined;\r\n        this.validExpiryDate = false;\r\n    }\r\n}\r\n", "<h1 jhiTranslate=\"artemisApp.userSettings.vcsAccessTokenSettings\">\r\n    <!--VCS access token Settings-->\r\n</h1>\r\n@if (currentUser) {\r\n    <div class=\"list-group d-block\">\r\n        <div class=\"list-group-item\">\r\n            <dt>\r\n                <span jhiTranslate=\"artemisApp.userSettings.vcsAccessTokensSettingsPage.infoText\"></span>\r\n            </dt>\r\n        </div>\r\n        @if (!edit) {\r\n            <div class=\"list-group-item\">\r\n                <dt>\r\n                    @if (this.currentUser?.vcsAccessToken) {\r\n                        <table class=\"table table-striped flex\">\r\n                            <thead class=\"thead-dark\">\r\n                                <tr>\r\n                                    <th class=\"col-2\">\r\n                                        <span jhiTranslate=\"artemisApp.userSettings.vcsAccessTokensSettingsPage.vcsAccessToken\"></span>\r\n                                    </th>\r\n                                    <th class=\"col-1\"></th>\r\n                                    <th class=\"col-4\">\r\n                                        <span jhiTranslate=\"artemisApp.userSettings.vcsAccessTokensSettingsPage.expiryDate\"></span>\r\n                                    </th>\r\n                                    <th class=\"col-4\">\r\n                                        <span jhiTranslate=\"artemisApp.userSettings.vcsAccessTokensSettingsPage.actions\"></span>\r\n                                    </th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>***************</td>\r\n                                    <td>\r\n                                        <button\r\n                                            [cdkCopyToClipboard]=\"currentUser!.vcsAccessToken || ''\"\r\n                                            (cdkCopyToClipboardCopied)=\"onCopyFinished($event)\"\r\n                                            [class.btn-success]=\"wasCopied\"\r\n                                            class=\"btn btn-secondary btn-sm me-2\"\r\n                                            id=\"copy-token-button\"\r\n                                            type=\"button\"\r\n                                        >\r\n                                            <fa-icon [icon]=\"faCopy\" />\r\n                                        </button>\r\n                                    </td>\r\n                                    <td>{{ this.currentUser?.vcsAccessTokenExpiryDate | artemisDate }}</td>\r\n                                    <td>\r\n                                        <button\r\n                                            class=\"btn btn-md flex-grow-1 d-flex align-items-center\"\r\n                                            id=\"delete-vcs-token-button\"\r\n                                            jhiDeleteButton\r\n                                            [renderButtonText]=\"false\"\r\n                                            (delete)=\"deleteVcsAccessToken()\"\r\n                                            deleteQuestion=\"artemisApp.userSettings.vcsAccessTokensSettingsPage.deleteVcsAccessTokenQuestion\"\r\n                                            [dialogError]=\"dialogError$\"\r\n                                        >\r\n                                            <fa-icon [icon]=\"faTrash\" />\r\n                                            <div jhiTranslate=\"entity.action.delete\" class=\"ms-2\"></div>\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    } @else {\r\n                        <div jhiTranslate=\"artemisApp.userSettings.vcsAccessTokensSettingsPage.noTokenSet\"></div>\r\n                    }\r\n                </dt>\r\n            </div>\r\n            @if (!this.currentUser?.vcsAccessToken) {\r\n                <div class=\"list-group-item\">\r\n                    <dt>\r\n                        <div class=\"btn-group\" role=\"group\" aria-label=\"Actions\">\r\n                            <jhi-button\r\n                                class=\"d-flex\"\r\n                                id=\"add-new-token-button\"\r\n                                [btnType]=\"ButtonType.PRIMARY\"\r\n                                [btnSize]=\"ButtonSize.SMALL\"\r\n                                [icon]=\"faEdit\"\r\n                                [title]=\"'artemisApp.userSettings.vcsAccessTokensSettingsPage.addToken'\"\r\n                                (onClick)=\"addNewVcsAccessToken()\"\r\n                            />\r\n                        </div>\r\n                    </dt>\r\n                </div>\r\n            }\r\n        }\r\n        @if (edit) {\r\n            <div class=\"list-group-item\">\r\n                <dt>\r\n                    <h4 jhiTranslate=\"artemisApp.userSettings.vcsAccessTokensSettingsPage.addTokenTitle\"></h4>\r\n\r\n                    <div class=\"row mb-3\">\r\n                        <div class=\"col-sm-6\">\r\n                            <jhi-date-time-picker\r\n                                [shouldDisplayTimeZoneWarning]=\"false\"\r\n                                labelName=\"{{ 'artemisApp.userSettings.vcsAccessTokensSettingsPage.expiryDate' | artemisTranslate }}\"\r\n                                [(ngModel)]=\"expiryDate\"\r\n                                (valueChange)=\"validateDate()\"\r\n                                [error]=\"!!expiryDate && !validExpiryDate\"\r\n                                name=\"expiryDate\"\r\n                                id=\"expiryDate\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"btn-group\" role=\"group\" aria-label=\"Actions\">\r\n                        <jhi-button\r\n                            class=\"me-1\"\r\n                            id=\"create-vcs-token-button\"\r\n                            [btnType]=\"ButtonType.PRIMARY\"\r\n                            [btnSize]=\"ButtonSize.SMALL\"\r\n                            [disabled]=\"!validExpiryDate\"\r\n                            [icon]=\"faSave\"\r\n                            [title]=\"'artemisApp.userSettings.vcsAccessTokensSettingsPage.createAccessToken'\"\r\n                            (onClick)=\"sendTokenCreationRequest()\"\r\n                        />\r\n                        <jhi-button\r\n                            id=\"cancel-vcs-token-creation-button\"\r\n                            [btnType]=\"ButtonType.SECONDARY\"\r\n                            [btnSize]=\"ButtonSize.SMALL\"\r\n                            [icon]=\"faBan\"\r\n                            [title]=\"'entity.action.cancel'\"\r\n                            (onClick)=\"cancelTokenCreation()\"\r\n                        />\r\n                    </div>\r\n                </dt>\r\n            </div>\r\n        }\r\n    </div>\r\n}\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275listener", "$event", "\u0275\u0275restoreView", "_r1", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "onCopyFinished", "deleteVcsAccessToken", "\u0275\u0275advance", "\u0275\u0275classProp", "wasCopied", "\u0275\u0275property", "currentUser", "vcsAccessToken", "faCopy", "\u0275\u0275textInterpolate", "\u0275\u0275pipeBind1", "vcsAccessTokenExpiryDate", "dialogError$", "faTrash", "_r3", "addNewVcsAccessToken", "ButtonType", "PRIMARY", "ButtonSize", "SMALL", "faEdit", "\u0275\u0275template", "VcsAccessTokensSettingsComponent_Conditional_4_Conditional_11_Conditional_5_Template", "VcsAccessTokensSettingsComponent_Conditional_4_Conditional_11_Conditional_6_Template", "VcsAccessTokensSettingsComponent_Conditional_4_Conditional_11_Conditional_9_Template", "\u0275\u0275conditional", "\u0275\u0275twoWayListener", "_r4", "i0", "\u0275\u0275twoWayBindingSet", "expiryDate", "validateDate", "sendTokenCreationRequest", "cancelTokenCreation", "\u0275\u0275propertyInterpolate", "\u0275\u0275twoWayProperty", "validExpiryDate", "faSave", "SECONDARY", "faBan", "VcsAccessTokensSettingsComponent_Conditional_4_Conditional_11_Template", "VcsAccessTokensSettingsComponent_Conditional_4_Conditional_12_Template", "edit", "VcsAccessTokensSettingsComponent", "accountService", "inject", "AccountService", "alertService", "AlertService", "authStateSubscription", "dialogErrorSource", "Subject", "asObservable", "ngOnInit", "getAuthenticationState", "pipe", "tap", "user", "subscribe", "ngOnDestroy", "unsubscribe", "deleteUserVcsAccessToken", "next", "undefined", "success", "error", "isBefore", "dayjs", "isAfter", "add", "toISOString", "res", "body", "successful", "setTimeout", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "VcsAccessTokensSettingsComponent_Conditional_4_Template", "TranslateDirective", "CdkCopyToClipboard", "FaIconComponent", "DeleteButtonDirective", "ButtonComponent", "FormDateTimePickerComponent", "FormsModule", "NgControlStatus", "NgModel", "ArtemisDatePipe", "ArtemisTranslatePipe", "styles"]
}
