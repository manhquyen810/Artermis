{
  "version": 3,
  "sources": ["src/main/webapp/app/course/tutorial-groups/shared/ngbTimeStringAdapter.ts", "src/main/webapp/app/course/tutorial-groups/shared/timeRangeValidator.ts"],
  "sourcesContent": ["import { Injectable } from '@angular/core';\r\nimport { NgbTimeAdapter, NgbTimeStruct } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Injectable()\r\nexport class NgbTimeStringAdapter extends NgbTimeAdapter<string> {\r\n    fromModel(value: string | null): NgbTimeStruct | null {\r\n        if (!value) {\r\n            return null;\r\n        }\r\n        const split = value.split(':');\r\n        return {\r\n            hour: parseInt(split[0], 10),\r\n            minute: parseInt(split[1], 10),\r\n            second: parseInt(split[2], 10),\r\n        };\r\n    }\r\n\r\n    toModel(time: NgbTimeStruct | null): string | null {\r\n        return time !== null ? `${pad(time.hour)}:${pad(time.minute)}:${pad(time.second)}` : null;\r\n    }\r\n}\r\n\r\nconst pad = (i: number): string => (i < 10 ? `0${i}` : `${i}`);\r\n", "import { AbstractControl, ValidationErrors } from '@angular/forms';\r\nimport dayjs from 'dayjs/esm';\r\n\r\nexport const validTimeRange = (control: AbstractControl): ValidationErrors | null => {\r\n    if (!control.get('startTime')!.value || !control.get('endTime')!.value) {\r\n        return null;\r\n    }\r\n\r\n    const startTime = control.get('startTime')!.value;\r\n    const endTime = control.get('endTime')!.value;\r\n\r\n    const startComparison = dayjs('1970-01-01 ' + startTime, 'YYYY-MM-DD HH:mm:ss');\r\n    const endComparison = dayjs('1970-01-01 ' + endTime, 'YYYY-MM-DD HH:mm:ss');\r\n    if (startComparison.isAfter(endComparison)) {\r\n        return {\r\n            invalidTimeRange: true,\r\n        };\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n"],
  "mappings": "iIAIA,IAAaA,GAAqB,IAAA,CAA5B,MAAOA,UAA6BC,CAAsB,CAC5DC,UAAUC,EAAoB,CAC1B,GAAI,CAACA,EACD,OAAO,KAEX,IAAMC,EAAQD,EAAMC,MAAM,GAAG,EAC7B,MAAO,CACHC,KAAMC,SAASF,EAAM,CAAC,EAAG,EAAE,EAC3BG,OAAQD,SAASF,EAAM,CAAC,EAAG,EAAE,EAC7BI,OAAQF,SAASF,EAAM,CAAC,EAAG,EAAE,EAErC,CAEAK,QAAQC,EAA0B,CAC9B,OAAOA,IAAS,KAAO,GAAGC,EAAID,EAAKL,IAAI,CAAC,IAAIM,EAAID,EAAKH,MAAM,CAAC,IAAII,EAAID,EAAKF,MAAM,CAAC,GAAK,IACzF,gEAfSR,CAAoB,IAAAY,GAApBZ,CAAoB,CAAA,CAAA,GAAA,6BAApBA,EAAoBa,QAApBb,EAAoBc,SAAA,CAAA,SAApBd,CAAqB,GAAA,EAkB5BW,EAAOI,GAAuBA,EAAI,GAAK,IAAIA,CAAC,GAAK,GAAGA,CAAC,GCnBpD,IAAMC,EAAkBC,GAAqD,CAChF,GAAI,CAACA,EAAQC,IAAI,WAAW,EAAGC,OAAS,CAACF,EAAQC,IAAI,SAAS,EAAGC,MAC7D,OAAO,KAGX,IAAMC,EAAYH,EAAQC,IAAI,WAAW,EAAGC,MACtCE,EAAUJ,EAAQC,IAAI,SAAS,EAAGC,MAElCG,EAAkBC,EAAM,cAAgBH,EAAW,qBAAqB,EACxEI,EAAgBD,EAAM,cAAgBF,EAAS,qBAAqB,EAC1E,OAAIC,EAAgBG,QAAQD,CAAa,EAC9B,CACHE,iBAAkB,IAGf,IAEf",
  "names": ["NgbTimeStringAdapter", "NgbTimeAdapter", "fromModel", "value", "split", "hour", "parseInt", "minute", "second", "toModel", "time", "pad", "__ngFactoryType__", "factory", "\u0275fac", "i", "validTimeRange", "control", "get", "value", "startTime", "endTime", "startComparison", "dayjs", "endComparison", "isAfter", "invalidTimeRange"]
}
