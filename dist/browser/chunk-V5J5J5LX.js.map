{
  "version": 3,
  "sources": ["src/main/webapp/app/guided-tour/tours/course-exercise-detail-tour.ts", "src/main/webapp/app/shared/difficulty-level/difficulty-level.component.ts", "src/main/webapp/app/shared/difficulty-level/difficulty-level.component.html", "src/main/webapp/app/exercises/shared/exercise-headers/exercise-headers-information/exercise-headers-information.component.ts", "src/main/webapp/app/exercises/shared/exercise-headers/exercise-headers-information/exercise-headers-information.component.html", "src/main/webapp/app/shared/components/reset-repo-button/reset-repo-button.component.ts", "src/main/webapp/app/shared/components/reset-repo-button/reset-repo-button.component.html", "src/main/webapp/app/exercises/shared/exercise-info/exercise-info.component.ts", "src/main/webapp/app/exercises/shared/exercise-info/exercise-info.component.html", "src/main/webapp/app/overview/exercise-details/lti-initializer-modal.component.ts", "src/main/webapp/app/overview/exercise-details/lti-initializer-modal.component.html", "src/main/webapp/app/overview/exercise-details/lti-initializer.component.ts", "src/main/webapp/app/overview/exercise-details/course-exercise-details.component.ts", "src/main/webapp/app/overview/exercise-details/course-exercise-details.component.html"],
  "sourcesContent": ["import { GuidedTour } from 'app/guided-tour/guided-tour.model';\r\nimport { TextTourStep, UserInterActionTourStep } from 'app/guided-tour/guided-tour-step.model';\r\nimport { Orientation, ResetParticipation, UserInteractionEvent } from 'app/guided-tour/guided-tour.constants';\r\nimport { clickOnElement } from 'app/guided-tour/guided-tour.utils';\r\n\r\nexport const programmingExerciseFail: GuidedTour = {\r\n    settingsKey: 'programming_exercise_fail_tour',\r\n    resetParticipation: ResetParticipation.EXERCISE_PARTICIPATION,\r\n    steps: [\r\n        new TextTourStep({\r\n            highlightSelector: 'jhi-programming-exercise-instructions-task-status .guided-tour.failed',\r\n            headlineTranslateKey: 'tour.programmingExercise.testFailure.headline',\r\n            contentTranslateKey: 'tour.programmingExercise.testFailure.content',\r\n            highlightPadding: 20,\r\n            orientation: Orientation.RIGHT,\r\n            skipStepIfNoSelector: true,\r\n        }),\r\n        new UserInterActionTourStep({\r\n            highlightSelector: 'jhi-programming-exercise-instructions-task-status .text-danger.guided-tour.test-status--linked',\r\n            headlineTranslateKey: 'tour.programmingExercise.testFailure.headline',\r\n            contentTranslateKey: 'tour.programmingExercise.testFailure.content',\r\n            highlightPadding: 5,\r\n            orientation: Orientation.RIGHT,\r\n            userInteractionEvent: UserInteractionEvent.CLICK,\r\n            skipStepIfNoSelector: true,\r\n        }),\r\n        new TextTourStep({\r\n            highlightSelector: '.modal-content',\r\n            headlineTranslateKey: 'tour.programmingExercise.testFailure.headline',\r\n            contentTranslateKey: 'tour.programmingExercise.testFailure.content',\r\n            highlightPadding: 20,\r\n            orientation: Orientation.BOTTOM,\r\n            closeAction: () => {\r\n                clickOnElement('.modal-header .close');\r\n            },\r\n            skipStepIfNoSelector: true,\r\n        }),\r\n        new TextTourStep({\r\n            headlineTranslateKey: 'tour.programmingExercise.resolveTasks.headline',\r\n            contentTranslateKey: 'tour.programmingExercise.resolveTasks.content',\r\n        }),\r\n    ],\r\n};\r\n\r\nexport const programmingExerciseSuccess: GuidedTour = {\r\n    settingsKey: 'programming_exercise_success_tour',\r\n    resetParticipation: ResetParticipation.EXERCISE_PARTICIPATION,\r\n    steps: [\r\n        new TextTourStep({\r\n            highlightSelector: '.guided-tour.instructions__content__markdown',\r\n            headlineTranslateKey: 'tour.programmingExercise.reviewResult.headline',\r\n            contentTranslateKey: 'tour.programmingExercise.reviewResult.content',\r\n            orientation: Orientation.TOP,\r\n        }),\r\n    ],\r\n};\r\n", "import { Component, Input, OnDestroy, OnInit, inject } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { DifficultyLevel } from 'app/entities/exercise.model';\r\nimport { Subscription } from 'rxjs';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nexport interface ColoredDifficultyLevel {\r\n    label: string;\r\n    color: string[];\r\n}\r\n@Component({\r\n    selector: 'jhi-difficulty-level',\r\n    templateUrl: './difficulty-level.component.html',\r\n    styleUrls: ['./difficulty-level.component.scss'],\r\n    imports: [CommonModule, NgbTooltipModule],\r\n})\r\nexport class DifficultyLevelComponent implements OnInit, OnDestroy {\r\n    private translateService = inject(TranslateService);\r\n\r\n    private translateSubscription: Subscription;\r\n    @Input() difficultyLevel: string;\r\n    coloredDifficultyLevel: ColoredDifficultyLevel = { label: '', color: [] };\r\n\r\n    ngOnInit(): void {\r\n        this.translateSubscription = this.translateService.onLangChange.subscribe(() => {\r\n            this.mapDifficultyLevelToColors(this.difficultyLevel);\r\n        });\r\n        this.coloredDifficultyLevel = this.mapDifficultyLevelToColors(this.difficultyLevel);\r\n    }\r\n\r\n    mapDifficultyLevelToColors(difficultyLevel: string): ColoredDifficultyLevel {\r\n        switch (difficultyLevel) {\r\n            case DifficultyLevel.EASY:\r\n                return { label: this.translateService.instant('artemisApp.exercise.easy'), color: [...Array(1).fill('success'), ...Array(2).fill('body')] };\r\n            case DifficultyLevel.MEDIUM:\r\n                return { label: this.translateService.instant('artemisApp.exercise.medium'), color: [...Array(2).fill('warning'), ...Array(1).fill('body')] };\r\n            case DifficultyLevel.HARD:\r\n                return { label: this.translateService.instant('artemisApp.exercise.hard'), color: [...Array(3).fill('danger')] };\r\n        }\r\n        return { label: this.translateService.instant('artemisApp.exercise.noLevel'), color: [...Array(3).fill('body')] };\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.translateSubscription?.unsubscribe();\r\n    }\r\n}\r\n", "<div id=\"difficulty-level\" class=\"d-inline-flex gap-1\" [ngbTooltip]=\"coloredDifficultyLevel.label\">\r\n    <div class=\"skill-bar rounded-end rounded-5\" [ngClass]=\"'bg-' + coloredDifficultyLevel.color[0]\"></div>\r\n    <div class=\"skill-bar\" [ngClass]=\"'bg-' + coloredDifficultyLevel.color[1]\"></div>\r\n    <div class=\"skill-bar rounded-start rounded-5\" [ngClass]=\"'bg-' + coloredDifficultyLevel.color[2]\"></div>\r\n</div>\r\n", "import { Component, Input, OnChanges, OnInit, inject } from '@angular/core';\r\nimport { SortService } from 'app/shared/service/sort.service';\r\nimport dayjs from 'dayjs/esm';\r\nimport { Exercise, IncludedInOverallScore, getCourseFromExercise } from 'app/entities/exercise.model';\r\nimport { SubmissionPolicy } from 'app/entities/submission-policy.model';\r\nimport { StudentParticipation } from 'app/entities/participation/student-participation.model';\r\nimport { getExerciseDueDate } from 'app/exercises/shared/exercise/exercise.utils';\r\nimport { ProgrammingExercise } from 'app/entities/programming/programming-exercise.model';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { SubmissionType } from 'app/entities/submission.model';\r\nimport { ProgrammingSubmission } from 'app/entities/programming/programming-submission.model';\r\nimport { roundValueSpecifiedByCourseSettings } from 'app/shared/util/utils';\r\nimport { InformationBox, InformationBoxComponent } from 'app/shared/information-box/information-box.component';\r\nimport { ComplaintService } from 'app/complaints/complaint.service';\r\nimport { isDateLessThanAWeekInTheFuture } from 'app/utils/date.utils';\r\nimport { DifficultyLevelComponent } from 'app/shared/difficulty-level/difficulty-level.component';\r\nimport { ArtemisServerDateService } from 'app/shared/server-date.service';\r\nimport { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\r\nimport { ArtemisTimeAgoPipe } from 'app/shared/pipes/artemis-time-ago.pipe';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ExerciseCategoriesComponent } from 'app/shared/exercise-categories/exercise-categories.component';\r\nimport { SubmissionResultStatusComponent } from 'app/overview/submission-result-status.component';\r\n\r\n@Component({\r\n    selector: 'jhi-exercise-headers-information',\r\n    templateUrl: './exercise-headers-information.component.html',\r\n    imports: [SubmissionResultStatusComponent, InformationBoxComponent, DifficultyLevelComponent, ExerciseCategoriesComponent, ArtemisDatePipe, ArtemisTimeAgoPipe, CommonModule],\r\n    styleUrls: ['./exercise-headers-information.component.scss'],\r\n    /* Our tsconfig file has `preserveWhitespaces: 'true'` which causes whitespace to affect content projection.\r\n    We need to set it to 'false 'for this component, otherwise the components with the selector [contentComponent]\r\n    will not be projected into their specific slot of the \"InformationBoxComponent\" component.*/\r\n    preserveWhitespaces: false,\r\n})\r\nexport class ExerciseHeadersInformationComponent implements OnInit, OnChanges {\r\n    private sortService = inject(SortService);\r\n    private serverDateService = inject(ArtemisServerDateService);\r\n\r\n    readonly IncludedInOverallScore = IncludedInOverallScore;\r\n    readonly dayjs = dayjs;\r\n\r\n    @Input() exercise: Exercise;\r\n    @Input() studentParticipation?: StudentParticipation;\r\n    @Input() course?: Course;\r\n    @Input() submissionPolicy?: SubmissionPolicy;\r\n\r\n    dueDate?: dayjs.Dayjs;\r\n    programmingExercise?: ProgrammingExercise;\r\n    individualComplaintDueDate?: dayjs.Dayjs;\r\n    now: dayjs.Dayjs;\r\n    achievedPoints: number = 0;\r\n    numberOfSubmissions: number;\r\n    informationBoxItems: InformationBox[] = [];\r\n\r\n    ngOnInit() {\r\n        this.dueDate = getExerciseDueDate(this.exercise, this.studentParticipation);\r\n        this.now = this.serverDateService.now();\r\n        if (this.course?.maxComplaintTimeDays) {\r\n            this.individualComplaintDueDate = ComplaintService.getIndividualComplaintDueDate(\r\n                this.exercise,\r\n                this.course.maxComplaintTimeDays,\r\n                this.studentParticipation?.results?.last(),\r\n                this.studentParticipation,\r\n            );\r\n        }\r\n        this.createInformationBoxItems();\r\n    }\r\n\r\n    ngOnChanges() {\r\n        this.course = this.course ?? getCourseFromExercise(this.exercise);\r\n\r\n        if (this.submissionPolicy?.active && this.submissionPolicy?.submissionLimit) {\r\n            this.updateSubmissionPolicyItem();\r\n        }\r\n        if (this.studentParticipation?.results?.length) {\r\n            // The updated participation by the websocket is not guaranteed to be sorted, find the newest result (highest id)\r\n            this.sortService.sortByProperty(this.studentParticipation.results, 'id', false);\r\n\r\n            const latestRatedResult = this.studentParticipation.results.filter((result) => result.rated).first();\r\n            if (latestRatedResult) {\r\n                this.achievedPoints = roundValueSpecifiedByCourseSettings((latestRatedResult.score! * this.exercise.maxPoints!) / 100, this.course) ?? 0;\r\n                this.updatePointsItem();\r\n            }\r\n        }\r\n    }\r\n\r\n    createInformationBoxItems() {\r\n        this.addPointsItems();\r\n        this.addDueDateItems();\r\n        this.addStartDateItem();\r\n        this.addSubmissionStatusItem();\r\n        this.addSubmissionPolicyItem();\r\n        this.addDifficultyItem();\r\n        this.addCategoryItems();\r\n    }\r\n\r\n    updatePointsItem() {\r\n        const pointsItemIndex = this.informationBoxItems.findIndex((item) => item.title === 'artemisApp.courseOverview.exerciseDetails.points');\r\n        if (pointsItemIndex !== -1) {\r\n            this.informationBoxItems[pointsItemIndex] = this.getPointsItem('points', this.exercise.maxPoints!, this.achievedPoints);\r\n        }\r\n    }\r\n\r\n    addPointsItems() {\r\n        const { maxPoints, bonusPoints } = this.exercise;\r\n        if (maxPoints) {\r\n            if (bonusPoints) {\r\n                let achievedBonusPoints: number = 0;\r\n                // If the student has more points than the max points, the bonus points are calculated\r\n                if (this.achievedPoints > maxPoints) {\r\n                    achievedBonusPoints = roundValueSpecifiedByCourseSettings(this.achievedPoints - maxPoints, this.course);\r\n                }\r\n                const achievedPoints = this.achievedPoints - achievedBonusPoints;\r\n                this.informationBoxItems.push(this.getPointsItem('points', maxPoints, achievedPoints));\r\n                this.informationBoxItems.push(this.getPointsItem('bonus', bonusPoints, achievedBonusPoints));\r\n            } else {\r\n                this.informationBoxItems.push(this.getPointsItem('points', maxPoints, this.achievedPoints));\r\n            }\r\n        }\r\n    }\r\n\r\n    addDueDateItems() {\r\n        const dueDateItem = this.getDueDateItem();\r\n        if (dueDateItem) {\r\n            this.informationBoxItems.push(dueDateItem);\r\n        }\r\n        // If the due date is in the past and the assessment due date is in the future, show the assessment due date\r\n        if (this.dueDate?.isBefore(this.now) && this.exercise.assessmentDueDate?.isAfter(this.now)) {\r\n            const assessmentDueItem: InformationBox = {\r\n                title: 'artemisApp.courseOverview.exerciseDetails.assessmentDue',\r\n                content: {\r\n                    type: 'dateTime',\r\n                    value: this.exercise.assessmentDueDate,\r\n                },\r\n                isContentComponent: true,\r\n                tooltip: 'artemisApp.courseOverview.exerciseDetails.assessmentDueTooltip',\r\n                tooltipParams: { date: this.exercise.assessmentDueDate.format('lll') },\r\n            };\r\n            this.informationBoxItems.push(assessmentDueItem);\r\n        }\r\n        // // If the assessment due date is in the past and the complaint due date is in the future, show the complaint due date\r\n        if (this.exercise.assessmentDueDate?.isBefore(this.now) && this.individualComplaintDueDate?.isAfter(this.now)) {\r\n            const complaintDueItem: InformationBox = {\r\n                title: 'artemisApp.courseOverview.exerciseDetails.complaintDue',\r\n                content: {\r\n                    type: 'dateTime',\r\n                    value: this.individualComplaintDueDate,\r\n                },\r\n                isContentComponent: true,\r\n                tooltip: 'artemisApp.courseOverview.exerciseDetails.complaintDueTooltip',\r\n                tooltipParams: { date: this.individualComplaintDueDate.format('lll') },\r\n            };\r\n            this.informationBoxItems.push(complaintDueItem);\r\n        }\r\n    }\r\n\r\n    getDueDateItem(): InformationBox | undefined {\r\n        if (this.dueDate) {\r\n            const isDueDateInThePast = this.dueDate.isBefore(this.now);\r\n            // If the due date is less than a day away, the color change to red\r\n            const dueDateStatusBadge = this.dueDate.isBetween(this.now.add(1, 'day'), this.now) ? 'danger' : 'body-color';\r\n            // If the due date is less than a week away, text is displayed relatively e.g. 'in 2 days'\r\n            const shouldDisplayDueDateRelative = isDateLessThanAWeekInTheFuture(this.dueDate, this.now);\r\n\r\n            if (isDueDateInThePast) {\r\n                return {\r\n                    title: 'artemisApp.courseOverview.exerciseDetails.submissionDueOver',\r\n                    content: {\r\n                        type: 'dateTime',\r\n                        value: this.dueDate,\r\n                    },\r\n                    isContentComponent: true,\r\n                };\r\n            }\r\n\r\n            return {\r\n                title: 'artemisApp.courseOverview.exerciseDetails.submissionDue',\r\n                content: {\r\n                    type: shouldDisplayDueDateRelative ? 'timeAgo' : 'dateTime',\r\n                    value: this.dueDate,\r\n                },\r\n                isContentComponent: true,\r\n                tooltip: shouldDisplayDueDateRelative ? 'artemisApp.courseOverview.exerciseDetails.submissionDueTooltip' : undefined,\r\n                contentColor: dueDateStatusBadge,\r\n                tooltipParams: { date: this.dueDate?.format('lll') },\r\n            };\r\n        }\r\n    }\r\n\r\n    addStartDateItem() {\r\n        if (this.exercise.startDate && this.now.isBefore(this.exercise.startDate)) {\r\n            // If the start date is less than a week away, text is displayed relatively e.g. 'in 2 days'\r\n            const shouldDisplayStartDateRelative = isDateLessThanAWeekInTheFuture(this.exercise.startDate, this.now);\r\n            const startDateItem: InformationBox = {\r\n                title: 'artemisApp.courseOverview.exerciseDetails.startDate',\r\n                content: {\r\n                    type: shouldDisplayStartDateRelative ? 'timeAgo' : 'dateTime',\r\n                    value: this.exercise.startDate,\r\n                },\r\n                isContentComponent: true,\r\n                tooltip: shouldDisplayStartDateRelative ? 'artemisApp.exerciseActions.startExerciseBeforeStartDate' : undefined,\r\n            };\r\n            this.informationBoxItems.push(startDateItem);\r\n        }\r\n    }\r\n\r\n    addDifficultyItem() {\r\n        if (this.exercise.difficulty) {\r\n            const difficultyItem: InformationBox = {\r\n                title: 'artemisApp.courseOverview.exerciseDetails.difficulty',\r\n                content: {\r\n                    type: 'difficultyLevel',\r\n                    value: this.exercise.difficulty,\r\n                },\r\n                isContentComponent: true,\r\n            };\r\n            this.informationBoxItems.push(difficultyItem);\r\n        }\r\n    }\r\n\r\n    addSubmissionStatusItem() {\r\n        const submissionStatusItem: InformationBox = {\r\n            title: 'artemisApp.courseOverview.exerciseDetails.status',\r\n            content: {\r\n                type: 'submissionStatus',\r\n                value: this.exercise,\r\n            },\r\n            isContentComponent: true,\r\n        };\r\n        this.informationBoxItems.push(submissionStatusItem);\r\n    }\r\n\r\n    addCategoryItems() {\r\n        const notReleased = this.exercise.releaseDate?.isAfter(this.now);\r\n\r\n        if (notReleased || this.exercise.includedInOverallScore !== IncludedInOverallScore.INCLUDED_COMPLETELY || this.exercise.categories?.length) {\r\n            const categoryItem: InformationBox = {\r\n                title: 'artemisApp.courseOverview.exerciseDetails.categories',\r\n                content: {\r\n                    type: 'categories',\r\n                    value: this.exercise,\r\n                },\r\n                isContentComponent: true,\r\n            };\r\n            this.informationBoxItems.push(categoryItem);\r\n        }\r\n    }\r\n\r\n    addSubmissionPolicyItem() {\r\n        if (this.submissionPolicy?.active && this.submissionPolicy?.submissionLimit) {\r\n            this.informationBoxItems.push(this.getSubmissionPolicyItem());\r\n        }\r\n    }\r\n\r\n    getSubmissionPolicyItem(): InformationBox {\r\n        return {\r\n            title: 'artemisApp.programmingExercise.submissionPolicy.submissionLimitTitle',\r\n            content: {\r\n                type: 'string',\r\n                value: `${this.numberOfSubmissions} /  ${this.submissionPolicy?.submissionLimit}`,\r\n            },\r\n            contentColor: this.submissionPolicy?.submissionLimit ? this.getSubmissionColor() : 'body-color',\r\n            tooltip: 'artemisApp.programmingExercise.submissionPolicy.submissionPolicyType.' + this.submissionPolicy?.type + '.tooltip',\r\n            tooltipParams: { points: this.submissionPolicy?.exceedingPenalty?.toString() },\r\n        };\r\n    }\r\n\r\n    getSubmissionColor(): string {\r\n        // default color should be 'body-color', thats why the default submissionsLeft is 2\r\n        const submissionsLeft = this.submissionPolicy?.submissionLimit ? this.submissionPolicy?.submissionLimit - this.numberOfSubmissions : 2;\r\n        let submissionColor = 'body-color';\r\n        if (submissionsLeft === 1) submissionColor = 'warning';\r\n        // 0 submissions left or limit is already reached\r\n        else if (submissionsLeft <= 0) submissionColor = 'danger';\r\n        return submissionColor;\r\n    }\r\n\r\n    getPointsItem(title: string, maxPoints: number, achievedPoints: number): InformationBox {\r\n        return {\r\n            title: 'artemisApp.courseOverview.exerciseDetails.' + title,\r\n            content: {\r\n                type: 'string',\r\n                value: `${achievedPoints} / ${maxPoints}`,\r\n            },\r\n        };\r\n    }\r\n\r\n    updateSubmissionPolicyItem() {\r\n        this.countSubmissions();\r\n\r\n        // need to push and pop the submission policy item to update the number of submissions\r\n        const submissionItemIndex = this.informationBoxItems.findIndex((item) => item.title === 'artemisApp.programmingExercise.submissionPolicy.submissionLimitTitle');\r\n        if (submissionItemIndex !== -1) {\r\n            this.informationBoxItems.splice(submissionItemIndex, 1, this.getSubmissionPolicyItem());\r\n        }\r\n    }\r\n\r\n    countSubmissions() {\r\n        const commitHashSet = new Set<string>();\r\n\r\n        this.studentParticipation?.results\r\n            ?.map((result) => result.submission)\r\n            .filter((submission) => submission?.type === SubmissionType.MANUAL)\r\n            .map((submission) => (submission as ProgrammingSubmission).commitHash)\r\n            .forEach((commitHash: string) => commitHashSet.add(commitHash));\r\n\r\n        this.numberOfSubmissions = commitHashSet.size;\r\n    }\r\n}\r\n", "@if (exercise) {\r\n    <div id=\"exercise-headers-information\" class=\"d-flex flex-row flex-wrap gap-2 overflow-auto\">\r\n        @for (informationBoxItem of informationBoxItems; track informationBoxItem) {\r\n            <jhi-information-box [informationBoxData]=\"informationBoxItem\">\r\n                @switch (informationBoxItem.content.type) {\r\n                    @case ('difficultyLevel') {\r\n                        <jhi-difficulty-level contentComponent [difficultyLevel]=\"informationBoxItem.content.value\" />\r\n                    }\r\n                    @case ('categories') {\r\n                        <jhi-exercise-categories\r\n                            contentComponent\r\n                            [exercise]=\"informationBoxItem.content.value\"\r\n                            [showTags]=\"{ difficulty: false, notReleased: true, includedInScore: true }\"\r\n                            [ngClass]=\"'badge-row'\"\r\n                            [isSmall]=\"true\"\r\n                        />\r\n                    }\r\n                    @case ('timeAgo') {\r\n                        <span [ngClass]=\"'text-' + informationBoxItem.contentColor\" contentComponent>{{ informationBoxItem.content.value | artemisTimeAgo }}</span>\r\n                    }\r\n                    @case ('dateTime') {\r\n                        <span contentComponent>{{ informationBoxItem.content.value | artemisDate }}</span>\r\n                    }\r\n                    @case ('submissionStatus') {\r\n                        <jhi-submission-result-status\r\n                            contentComponent\r\n                            class=\"text-truncate result\"\r\n                            [exercise]=\"informationBoxItem.content.value\"\r\n                            [studentParticipation]=\"studentParticipation\"\r\n                            [triggerLastGraded]=\"false\"\r\n                            [showCompletion]=\"false\"\r\n                            [showBadge]=\"false\"\r\n                            [showProgressBar]=\"true\"\r\n                        />\r\n                    }\r\n                }\r\n            </jhi-information-box>\r\n        }\r\n    </div>\r\n}\r\n", "import { Component, Input, OnInit, inject } from '@angular/core';\r\nimport { FeatureToggle } from 'app/shared/feature-toggle/feature-toggle.service';\r\nimport { faBackward } from '@fortawesome/free-solid-svg-icons';\r\nimport { ParticipationService } from 'app/exercises/shared/participation/participation.service';\r\nimport { ProgrammingExercise } from 'app/entities/programming/programming-exercise.model';\r\nimport { StudentParticipation } from 'app/entities/participation/student-participation.model';\r\nimport { ProgrammingExerciseParticipationService } from 'app/exercises/programming/manage/services/programming-exercise-participation.service';\r\nimport { InitializationState } from 'app/entities/participation/participation.model';\r\nimport { getExerciseDueDate } from 'app/exercises/shared/exercise/exercise.utils';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport dayjs from 'dayjs/esm';\r\nimport { ExerciseActionButtonComponent } from '../exercise-action-button.component';\r\nimport { FeatureToggleDirective } from '../../feature-toggle/feature-toggle.directive';\r\nimport { NgbPopover } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TranslateDirective } from '../../language/translate.directive';\r\nimport { ConfirmEntityNameComponent } from '../../confirm-entity-name/confirm-entity-name.component';\r\nimport { ArtemisTranslatePipe } from '../../pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-reset-repo-button',\r\n    templateUrl: './reset-repo-button.component.html',\r\n    styleUrls: ['./reset-repo-button.component.scss'],\r\n    imports: [ExerciseActionButtonComponent, FeatureToggleDirective, NgbPopover, FormsModule, TranslateDirective, ConfirmEntityNameComponent, ArtemisTranslatePipe],\r\n})\r\nexport class ResetRepoButtonComponent implements OnInit {\r\n    private participationService = inject(ParticipationService);\r\n    private programmingExerciseParticipationService = inject(ProgrammingExerciseParticipationService);\r\n    private alertService = inject(AlertService);\r\n\r\n    readonly FeatureToggle = FeatureToggle;\r\n    readonly INITIALIZED = InitializationState.INITIALIZED;\r\n\r\n    @Input() exercise: ProgrammingExercise;\r\n    @Input() participations: StudentParticipation[];\r\n    @Input() smallButtons: boolean;\r\n\r\n    gradedParticipation?: StudentParticipation;\r\n    practiceParticipation?: StudentParticipation;\r\n\r\n    beforeIndividualDueDate: boolean;\r\n\r\n    readonly faBackward = faBackward;\r\n\r\n    ngOnInit() {\r\n        this.gradedParticipation = this.participationService.getSpecificStudentParticipation(this.participations, false);\r\n        this.practiceParticipation = this.participationService.getSpecificStudentParticipation(this.participations, true);\r\n        const individualDueDate = getExerciseDueDate(this.exercise, this.gradedParticipation);\r\n        this.beforeIndividualDueDate = !individualDueDate || dayjs().isBefore(individualDueDate);\r\n    }\r\n\r\n    resetRepository(gradedParticipationId?: number) {\r\n        this.exercise.loading = true;\r\n        // eslint-disable-next-line @typescript-eslint/no-non-null-asserted-optional-chain\r\n        const participationId = this.practiceParticipation?.id ?? this.gradedParticipation?.id!;\r\n        this.programmingExerciseParticipationService\r\n            .resetRepository(participationId, gradedParticipationId)\r\n            .pipe(\r\n                finalize(() => {\r\n                    this.exercise.loading = false;\r\n                    this.alertService.success('artemisApp.exerciseActions.resetRepository.success');\r\n                    window.scrollTo(0, 0);\r\n                }),\r\n            )\r\n            .subscribe();\r\n    }\r\n}\r\n", "<ng-container>\r\n    @if (\r\n        (practiceParticipation?.initializationState === INITIALIZED && !beforeIndividualDueDate) ||\r\n        (gradedParticipation?.initializationState === INITIALIZED && beforeIndividualDueDate)\r\n    ) {\r\n        <button\r\n            jhi-exercise-action-button\r\n            class=\"btn-danger\"\r\n            [buttonIcon]=\"faBackward\"\r\n            [jhiFeatureToggle]=\"FeatureToggle.ProgrammingExercises\"\r\n            [buttonLabel]=\"'artemisApp.exerciseActions.resetRepository.label' | artemisTranslate\"\r\n            [buttonLoading]=\"!!exercise.loading\"\r\n            [smallButton]=\"smallButtons\"\r\n            [hideLabelMobile]=\"false\"\r\n            [ngbPopover]=\"popContent\"\r\n            [autoClose]=\"'outside'\"\r\n            placement=\"top-left\"\r\n            container=\"body\"\r\n        ></button>\r\n    }\r\n    <ng-template #popContent>\r\n        <form style=\"max-width: 660px\" #resetForm=\"ngForm\">\r\n            <h5>{{ 'artemisApp.exerciseActions.resetRepository.title' + (practiceParticipation ? 'Practice' : 'Graded') | artemisTranslate }}</h5>\r\n            <p jhiTranslate=\"artemisApp.exerciseActions.resetRepository.explanation\"></p>\r\n            @if (exercise.allowOfflineIde) {\r\n                <p jhiTranslate=\"artemisApp.exerciseActions.resetRepository.offlineIDEExplanation\"></p>\r\n            }\r\n            @if (gradedParticipation && practiceParticipation) {\r\n                <p jhiTranslate=\"artemisApp.exerciseActions.resetRepository.repositoryChoice\"></p>\r\n            }\r\n            <p\r\n                [jhiTranslate]=\"'artemisApp.exerciseActions.resetRepository.question' + (practiceParticipation ? 'Practice' : 'Graded')\"\r\n                [translateValues]=\"{ title: exercise.title }\"\r\n            >\r\n                Are you sure you want to delete?\r\n            </p>\r\n            @if (exercise.title) {\r\n                <jhi-confirm-entity-name\r\n                    confirmationText=\"artemisApp.exerciseActions.resetRepository.typeNameToConfirm\"\r\n                    [entityName]=\"exercise.title\"\r\n                    warningTextColor=\"text-danger\"\r\n                    name=\"confirmExerciseName\"\r\n                    ngModel\r\n                />\r\n            }\r\n            <div class=\"button-footer\">\r\n                <button class=\"btn btn-danger\" type=\"submit\" [disabled]=\"resetForm.invalid\" (click)=\"resetRepository()\">\r\n                    <span jhiTranslate=\"artemisApp.exerciseActions.resetRepository.resetToTemplate\"></span>\r\n                </button>\r\n                @if (gradedParticipation && practiceParticipation) {\r\n                    <button class=\"btn btn-danger ms-2\" type=\"submit\" [disabled]=\"resetForm.invalid\" (click)=\"resetRepository(gradedParticipation?.id)\">\r\n                        <span jhiTranslate=\"artemisApp.exerciseActions.resetRepository.resetToGradedParticipation\"></span>\r\n                    </button>\r\n                }\r\n            </div>\r\n        </form>\r\n    </ng-template>\r\n</ng-container>\r\n", "import { Component, Input, OnInit } from '@angular/core';\r\nimport { Exercise } from 'app/entities/exercise.model';\r\nimport { StudentParticipation } from 'app/entities/participation/student-participation.model';\r\nimport { getExerciseDueDate } from 'app/exercises/shared/exercise/exercise.utils';\r\nimport dayjs from 'dayjs/esm';\r\nimport { ComplaintService } from 'app/complaints/complaint.service';\r\nimport { AssessmentType } from 'app/entities/assessment-type.model';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { NgTemplateOutlet } from '@angular/common';\r\nimport { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-exercise-info',\r\n    templateUrl: './exercise-info.component.html',\r\n    styleUrls: ['../../../shared/side-panel/side-panel.scss'],\r\n    imports: [TranslateDirective, NgTemplateOutlet, ArtemisDatePipe, ArtemisTranslatePipe],\r\n})\r\nexport class ExerciseInfoComponent implements OnInit {\r\n    @Input() exercise: Exercise;\r\n    @Input() studentParticipation?: StudentParticipation;\r\n\r\n    dueDate?: dayjs.Dayjs;\r\n    individualComplaintDueDate?: dayjs.Dayjs;\r\n    canComplainLaterOn: boolean;\r\n\r\n    ngOnInit(): void {\r\n        this.dueDate = getExerciseDueDate(this.exercise, this.studentParticipation);\r\n        if (this.exercise.course?.maxComplaintTimeDays) {\r\n            this.individualComplaintDueDate = ComplaintService.getIndividualComplaintDueDate(\r\n                this.exercise,\r\n                this.exercise.course.maxComplaintTimeDays,\r\n                this.studentParticipation?.results?.last(),\r\n                this.studentParticipation,\r\n            );\r\n        }\r\n        // The student can either still submit or there is a submission where the student did not have the chance to complain yet\r\n        this.canComplainLaterOn =\r\n            ((this.dueDate && dayjs().isBefore(this.dueDate)) || (!!this.studentParticipation?.submissionCount && !this.individualComplaintDueDate)) &&\r\n            (this.exercise.allowComplaintsForAutomaticAssessments || this.exercise.assessmentType !== AssessmentType.AUTOMATIC);\r\n    }\r\n}\r\n", "<div class=\"panel-wrapper col-12 col-xxl-8\">\r\n    <div class=\"panel-header\" jhiTranslate=\"artemisApp.exercise.details\"></div>\r\n    <div class=\"vertLine\"></div>\r\n    <div class=\"panel-body\">\r\n        @if (exercise.releaseDate) {\r\n            <ng-template\r\n                [ngTemplateOutlet]=\"exerciseInfoItem\"\r\n                [ngTemplateOutletContext]=\"{ key: 'artemisApp.courseOverview.exerciseDetails.releaseDate', value: exercise.releaseDate, isDate: true }\"\r\n            />\r\n        }\r\n        @if (exercise.startDate) {\r\n            <ng-template\r\n                [ngTemplateOutlet]=\"exerciseInfoItem\"\r\n                [ngTemplateOutletContext]=\"{ key: 'artemisApp.courseOverview.exerciseDetails.startDate', value: exercise.startDate, isDate: true }\"\r\n            />\r\n        }\r\n        <ng-template\r\n            [ngTemplateOutlet]=\"exerciseInfoItem\"\r\n            [ngTemplateOutletContext]=\"{\r\n                key: 'artemisApp.courseOverview.exerciseDetails.submissionDue',\r\n                value: dueDate ? dueDate : 'artemisApp.courseOverview.exerciseList.noDueDate',\r\n                isDate: !!dueDate,\r\n            }\"\r\n        />\r\n        @if (exercise.exampleSolutionPublicationDate) {\r\n            <ng-template\r\n                [ngTemplateOutlet]=\"exerciseInfoItem\"\r\n                [ngTemplateOutletContext]=\"{\r\n                    key: 'artemisApp.courseOverview.exerciseDetails.exampleSolutionPublicationDate',\r\n                    value: exercise.exampleSolutionPublicationDate,\r\n                    isDate: true,\r\n                }\"\r\n            />\r\n        }\r\n        @if (exercise.assessmentDueDate) {\r\n            <ng-template\r\n                [ngTemplateOutlet]=\"exerciseInfoItem\"\r\n                [ngTemplateOutletContext]=\"{ key: 'artemisApp.courseOverview.exerciseDetails.assessmentDue', value: exercise.assessmentDueDate, isDate: true }\"\r\n            />\r\n        }\r\n        @if (individualComplaintDueDate) {\r\n            <ng-template\r\n                [ngTemplateOutlet]=\"exerciseInfoItem\"\r\n                [ngTemplateOutletContext]=\"{ key: 'artemisApp.courseOverview.exerciseDetails.complaintDue', value: individualComplaintDueDate, isDate: true }\"\r\n            />\r\n        }\r\n        @if (dueDate && !individualComplaintDueDate) {\r\n            <ng-template\r\n                [ngTemplateOutlet]=\"exerciseInfoItem\"\r\n                [ngTemplateOutletContext]=\"{\r\n                    key: 'artemisApp.courseOverview.exerciseDetails.complaintPossible',\r\n                    value: canComplainLaterOn ? 'global.generic.yes' : 'global.generic.no',\r\n                    isDate: false,\r\n                }\"\r\n            />\r\n        }\r\n    </div>\r\n</div>\r\n\r\n<ng-template #exerciseInfoItem let-key=\"key\" let-value=\"value\" let-isDate=\"isDate\">\r\n    <div class=\"row mb-1\">\r\n        <div class=\"col-6\">{{ key | artemisTranslate }}</div>\r\n        <div class=\"col-6\">{{ isDate ? (value | artemisDate) : (value | artemisTranslate) }}</div>\r\n    </div>\r\n</ng-template>\r\n", "import { Component, inject } from '@angular/core';\r\nimport { ActivatedRoute, Router, RouterLink } from '@angular/router';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CopyIconButtonComponent } from 'app/shared/components/copy-icon-button/copy-icon-button.component';\r\n\r\n@Component({\r\n    selector: 'jhi-lti-initializer-modal',\r\n    templateUrl: './lti-initializer-modal.component.html',\r\n    imports: [TranslateDirective, FormsModule, CopyIconButtonComponent, RouterLink],\r\n})\r\nexport class LtiInitializerModalComponent {\r\n    private activeModal = inject(NgbActiveModal);\r\n    private alertService = inject(AlertService);\r\n    private router = inject(Router);\r\n    private activatedRoute = inject(ActivatedRoute);\r\n\r\n    password: string;\r\n    loginName: string;\r\n    passwordResetLocation = ['account', 'reset', 'request'];\r\n\r\n    readAndUnderstood = false;\r\n\r\n    /**\r\n     * Closes the dialog, removes the query parameter and shows a helper message\r\n     */\r\n    clear(): void {\r\n        this.alertService.info('artemisApp.lti.startExercise');\r\n        this.router.navigate([], { relativeTo: this.activatedRoute, queryParams: { initialize: null }, queryParamsHandling: 'merge' });\r\n        this.activeModal.dismiss();\r\n    }\r\n}\r\n", "<div>\r\n    <div class=\"modal-header\">\r\n        <h4 class=\"modal-title\"><span jhiTranslate=\"artemisApp.lti.initialization.header\"></span></h4>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <span jhiTranslate=\"artemisApp.lti.initialization.body.welcome\"></span>\r\n        <div class=\"d-flex mb-3 mt-3\">\r\n            <label class=\"col-sm-2 col-form-label\" for=\"userLoginName\"> <span jhiTranslate=\"artemisApp.lti.initialization.body.loginLabel\"></span>: </label>\r\n            <input id=\"userLoginName\" type=\"text\" class=\"form-control\" disabled [(ngModel)]=\"loginName\" />\r\n            <jhi-copy-icon-button [copyText]=\"loginName\" />\r\n        </div>\r\n        <div class=\"d-flex mb-3 mt-3\">\r\n            <label class=\"col-sm-2 col-form-label\" for=\"userPassword\"> <span jhiTranslate=\"artemisApp.lti.initialization.body.passwordLabel\"></span>: </label>\r\n            <input id=\"userPassword\" type=\"text\" class=\"form-control\" disabled [(ngModel)]=\"password\" />\r\n            <jhi-copy-icon-button [copyText]=\"password\" />\r\n        </div>\r\n        <p>\r\n            <span jhiTranslate=\"artemisApp.lti.initialization.body.passwordHint\">\r\n                Make sure to remember your password as you will need it to log in manually or connect with our services for programming exercises.<br />\r\n                If you forget your password, you can reset it on the login page. You can also change your password now:\r\n            </span>\r\n            <a target=\"_blank\" [routerLink]=\"this.passwordResetLocation\" jhiTranslate=\"artemisApp.lti.initialization.body.passwordChange\"></a>\r\n        </p>\r\n        <p>\r\n            <input type=\"checkbox\" class=\"form-check-input\" (change)=\"readAndUnderstood = !readAndUnderstood\" [checked]=\"readAndUnderstood\" />\r\n            <strong jhiTranslate=\"artemisApp.lti.initialization.body.readAndUnderstood\"></strong>\r\n        </p>\r\n        <button\r\n            type=\"button\"\r\n            class=\"btn btn-primary\"\r\n            data-dismiss=\"modal\"\r\n            [disabled]=\"!readAndUnderstood\"\r\n            (click)=\"clear()\"\r\n            jhiTranslate=\"artemisApp.lti.initialization.body.confirm\"\r\n        ></button>\r\n    </div>\r\n</div>\r\n", "import { Component, OnInit, inject } from '@angular/core';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { LtiInitializerModalComponent } from 'app/overview/exercise-details/lti-initializer-modal.component';\r\nimport { UserService } from 'app/core/user/user.service';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\n\r\n@Component({\r\n    selector: 'jhi-lti-initializer',\r\n    template: '',\r\n})\r\nexport class LtiInitializerComponent implements OnInit {\r\n    private modalService = inject(NgbModal);\r\n    private userService = inject(UserService);\r\n    private alertService = inject(AlertService);\r\n    private router = inject(Router);\r\n    private activatedRoute = inject(ActivatedRoute);\r\n    private accountService = inject(AccountService);\r\n\r\n    modalRef: NgbModalRef | undefined;\r\n\r\n    ngOnInit() {\r\n        this.activatedRoute.queryParams.subscribe((queryParams) => {\r\n            if (queryParams['initialize'] !== undefined) {\r\n                this.userService.initializeLTIUser().subscribe((res) => {\r\n                    const password = res.body?.password;\r\n                    if (!password) {\r\n                        this.alertService.info('artemisApp.lti.initializationError');\r\n                        this.router.navigate([], {\r\n                            relativeTo: this.activatedRoute,\r\n                            queryParams: { initialize: null },\r\n                            queryParamsHandling: 'merge',\r\n                        });\r\n                        return;\r\n                    }\r\n                    this.modalRef = this.modalService.open(LtiInitializerModalComponent, { size: 'lg', backdrop: 'static', keyboard: false });\r\n                    this.modalRef.componentInstance.loginName = this.accountService.userIdentity?.login;\r\n                    this.modalRef.componentInstance.password = password;\r\n                });\r\n            }\r\n        });\r\n    }\r\n}\r\n", "import { Component, OnDestroy, OnInit, inject } from '@angular/core';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { ActivatedRoute, RouterLink } from '@angular/router';\r\nimport { Subscription, combineLatest } from 'rxjs';\r\nimport { filter, skip } from 'rxjs/operators';\r\nimport { Result } from 'app/entities/result.model';\r\nimport dayjs from 'dayjs/esm';\r\nimport { ParticipationService } from 'app/exercises/shared/participation/participation.service';\r\nimport { ParticipationWebsocketService } from 'app/overview/participation-websocket.service';\r\nimport { GuidedTourService } from 'app/guided-tour/guided-tour.service';\r\nimport { programmingExerciseFail, programmingExerciseSuccess } from 'app/guided-tour/tours/course-exercise-detail-tour';\r\nimport { ProfileService } from 'app/shared/layouts/profiles/profile.service';\r\nimport { Participation } from 'app/entities/participation/participation.model';\r\nimport { Exercise, ExerciseType, getIcon } from 'app/entities/exercise.model';\r\nimport { StudentParticipation } from 'app/entities/participation/student-participation.model';\r\nimport { ExampleSolutionInfo, ExerciseDetailsType, ExerciseService } from 'app/exercises/shared/exercise/exercise.service';\r\nimport { AssessmentType } from 'app/entities/assessment-type.model';\r\nimport { hasExerciseDueDatePassed } from 'app/exercises/shared/exercise/exercise.utils';\r\nimport { ProgrammingExercise } from 'app/entities/programming/programming-exercise.model';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { TeamAssignmentPayload } from 'app/entities/team.model';\r\nimport { TeamService } from 'app/exercises/shared/team/team.service';\r\nimport { QuizExercise, QuizStatus } from 'app/entities/quiz/quiz-exercise.model';\r\nimport { QuizExerciseService } from 'app/exercises/quiz/manage/quiz-exercise.service';\r\nimport { getFirstResultWithComplaintFromResults } from 'app/entities/submission.model';\r\nimport { ComplaintService } from 'app/complaints/complaint.service';\r\nimport { Complaint } from 'app/entities/complaint.model';\r\nimport { SubmissionPolicy } from 'app/entities/submission-policy.model';\r\nimport { ArtemisMarkdownService } from 'app/shared/markdown.service';\r\nimport { IconDefinition, faAngleDown, faAngleUp, faBook, faEye, faFileSignature, faListAlt, faSignal, faTable, faWrench } from '@fortawesome/free-solid-svg-icons';\r\nimport { PlagiarismVerdict } from 'app/exercises/shared/plagiarism/types/PlagiarismVerdict';\r\nimport { PlagiarismCaseInfo } from 'app/exercises/shared/plagiarism/types/PlagiarismCaseInfo';\r\nimport { MAX_RESULT_HISTORY_LENGTH } from 'app/overview/result-history/result-history.component';\r\nimport { isCommunicationEnabled, isMessagingEnabled } from 'app/entities/course.model';\r\nimport { ExerciseCacheService } from 'app/exercises/shared/exercise/exercise-cache.service';\r\nimport { IrisSettings } from 'app/entities/iris/settings/iris-settings.model';\r\nimport { AbstractScienceComponent } from 'app/shared/science/science.component';\r\nimport { ScienceEventType } from 'app/shared/science/science.model';\r\nimport { ICER_PAPER_FLAG, PROFILE_IRIS } from 'app/app.constants';\r\nimport { ChatServiceMode } from 'app/iris/iris-chat.service';\r\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { NgClass } from '@angular/common';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { NgbDropdown, NgbDropdownItem, NgbDropdownMenu, NgbDropdownToggle, NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { ExerciseDetailsStudentActionsComponent } from './exercise-details-student-actions.component';\r\nimport { ExerciseHeadersInformationComponent } from 'app/exercises/shared/exercise-headers/exercise-headers-information/exercise-headers-information.component';\r\nimport { ResultHistoryComponent } from '../result-history/result-history.component';\r\nimport { ResultComponent } from 'app/exercises/shared/result/result.component';\r\nimport { ProblemStatementComponent } from './problem-statement/problem-statement.component';\r\nimport { ResetRepoButtonComponent } from 'app/shared/components/reset-repo-button/reset-repo-button.component';\r\nimport { ModelingEditorComponent } from 'app/exercises/modeling/shared/modeling-editor.component';\r\nimport { ProgrammingExerciseExampleSolutionRepoDownloadComponent } from 'app/exercises/programming/shared/actions/programming-exercise-example-solution-repo-download.component';\r\nimport { ExerciseInfoComponent } from 'app/exercises/shared/exercise-info/exercise-info.component';\r\nimport { ComplaintsStudentViewComponent } from 'app/complaints/complaints-for-students/complaints-student-view.component';\r\nimport { RatingComponent } from 'app/exercises/shared/rating/rating.component';\r\nimport { IrisExerciseChatbotButtonComponent } from 'app/iris/exercise-chatbot/exercise-chatbot-button.component';\r\nimport { DiscussionSectionComponent } from '../discussion-section/discussion-section.component';\r\nimport { LtiInitializerComponent } from './lti-initializer.component';\r\nimport { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\n\r\ninterface InstructorActionItem {\r\n    routerLink: string;\r\n    icon?: IconDefinition;\r\n    translation: string;\r\n}\r\n@Component({\r\n    selector: 'jhi-course-exercise-details',\r\n    templateUrl: './course-exercise-details.component.html',\r\n    styleUrls: ['../course-overview.scss', './course-exercise-details.component.scss'],\r\n    providers: [ExerciseCacheService],\r\n    imports: [\r\n        NgClass,\r\n        FaIconComponent,\r\n        NgbDropdown,\r\n        NgbDropdownToggle,\r\n        NgbDropdownMenu,\r\n        NgbDropdownItem,\r\n        RouterLink,\r\n        TranslateDirective,\r\n        // TODO: the extension point for Orion does not work with Angular 19, we need to find a different solution\r\n        // ExtensionPointDirective,\r\n        ExerciseDetailsStudentActionsComponent,\r\n        ExerciseHeadersInformationComponent,\r\n        ResultHistoryComponent,\r\n        ResultComponent,\r\n        ProblemStatementComponent,\r\n        ResetRepoButtonComponent,\r\n        ModelingEditorComponent,\r\n        ProgrammingExerciseExampleSolutionRepoDownloadComponent,\r\n        NgbTooltip,\r\n        ExerciseInfoComponent,\r\n        ComplaintsStudentViewComponent,\r\n        RatingComponent,\r\n        IrisExerciseChatbotButtonComponent,\r\n        DiscussionSectionComponent,\r\n        LtiInitializerComponent,\r\n        ArtemisDatePipe,\r\n        ArtemisTranslatePipe,\r\n    ],\r\n})\r\nexport class CourseExerciseDetailsComponent extends AbstractScienceComponent implements OnInit, OnDestroy {\r\n    private exerciseService = inject(ExerciseService);\r\n    private participationWebsocketService = inject(ParticipationWebsocketService);\r\n    private participationService = inject(ParticipationService);\r\n    private route = inject(ActivatedRoute);\r\n    private profileService = inject(ProfileService);\r\n    private guidedTourService = inject(GuidedTourService);\r\n    private alertService = inject(AlertService);\r\n    private teamService = inject(TeamService);\r\n    private quizExerciseService = inject(QuizExerciseService);\r\n    private complaintService = inject(ComplaintService);\r\n    private artemisMarkdown = inject(ArtemisMarkdownService);\r\n    private accountService = inject(AccountService); // TODO TW: This \"feature\" is only temporary for a paper.\r\n\r\n    readonly AssessmentType = AssessmentType;\r\n    readonly PlagiarismVerdict = PlagiarismVerdict;\r\n    readonly QuizStatus = QuizStatus;\r\n    readonly QUIZ_ENDED_STATUS: (QuizStatus | undefined)[] = [QuizStatus.CLOSED, QuizStatus.OPEN_FOR_PRACTICE];\r\n    readonly QUIZ_EDITABLE_STATUS: (QuizStatus | undefined)[] = [QuizStatus.VISIBLE, QuizStatus.INVISIBLE];\r\n    readonly QUIZ = ExerciseType.QUIZ;\r\n    readonly PROGRAMMING = ExerciseType.PROGRAMMING;\r\n    readonly MODELING = ExerciseType.MODELING;\r\n    readonly TEXT = ExerciseType.TEXT;\r\n    readonly FILE_UPLOAD = ExerciseType.FILE_UPLOAD;\r\n    readonly dayjs = dayjs;\r\n    readonly ChatServiceMode = ChatServiceMode;\r\n\r\n    readonly isCommunicationEnabled = isCommunicationEnabled;\r\n    readonly isMessagingEnabled = isMessagingEnabled;\r\n\r\n    isChatGptWrapper: boolean = false; // TODO TW: This \"feature\" is only temporary for a paper.\r\n    public learningPathMode = false;\r\n    public exerciseId: number;\r\n    public courseId: number;\r\n    public exercise: Exercise;\r\n    resultWithComplaint?: Result;\r\n    latestRatedResult?: Result;\r\n    complaint?: Complaint;\r\n    showMoreResults = false;\r\n    public sortedHistoryResults: Result[];\r\n    private participationUpdateListener: Subscription;\r\n    private teamAssignmentUpdateListener: Subscription;\r\n    private submissionSubscription: Subscription;\r\n    studentParticipations: StudentParticipation[] = [];\r\n    gradedStudentParticipation?: StudentParticipation;\r\n    practiceStudentParticipation?: StudentParticipation;\r\n    isAfterAssessmentDueDate: boolean;\r\n    allowComplaintsForAutomaticAssessments: boolean;\r\n    baseResource: string;\r\n    submissionPolicy?: SubmissionPolicy;\r\n    exampleSolutionCollapsed: boolean;\r\n    plagiarismCaseInfo?: PlagiarismCaseInfo;\r\n    irisSettings?: IrisSettings;\r\n    paramsSubscription: Subscription;\r\n    profileSubscription?: Subscription;\r\n    isProduction = true;\r\n    isTestServer = false;\r\n    instructorActionItems: InstructorActionItem[] = [];\r\n    exerciseIcon: IconProp;\r\n\r\n    exampleSolutionInfo?: ExampleSolutionInfo;\r\n\r\n    // extension points, see shared/extension-point\r\n    // TODO: the extension point for Orion does not work with Angular 19, we need to find a different solution\r\n    // @ContentChild('overrideStudentActions') overrideStudentActions: TemplateRef<any>;\r\n\r\n    // Icons\r\n    faBook = faBook;\r\n    faEye = faEye;\r\n    faWrench = faWrench;\r\n    faTable = faTable;\r\n    faListAlt = faListAlt;\r\n    faAngleDown = faAngleDown;\r\n    faAngleUp = faAngleUp;\r\n\r\n    constructor() {\r\n        super(ScienceEventType.EXERCISE__OPEN);\r\n    }\r\n\r\n    ngOnInit() {\r\n        const courseIdParams$ = this.route.parent?.parent?.params;\r\n        const exerciseIdParams$ = this.route.params;\r\n        if (courseIdParams$) {\r\n            this.paramsSubscription = combineLatest([courseIdParams$, exerciseIdParams$]).subscribe(([courseIdParams, exerciseIdParams]) => {\r\n                const didExerciseChange = this.exerciseId !== parseInt(exerciseIdParams.exerciseId, 10);\r\n                const didCourseChange = this.courseId !== parseInt(courseIdParams.courseId, 10);\r\n\r\n                // if learningPathMode is enabled these attributes will be set by the parent\r\n                if (!this.learningPathMode) {\r\n                    this.exerciseId = parseInt(exerciseIdParams.exerciseId, 10);\r\n                    this.courseId = parseInt(courseIdParams.courseId, 10);\r\n                }\r\n                if (didExerciseChange || didCourseChange) {\r\n                    this.loadExercise();\r\n                }\r\n\r\n                // log event\r\n                if (this.exerciseId) {\r\n                    this.setResourceId(this.exerciseId);\r\n                }\r\n                this.logEvent();\r\n            });\r\n        }\r\n\r\n        this.profileSubscription = this.profileService.getProfileInfo()?.subscribe((profileInfo) => {\r\n            this.isProduction = profileInfo?.inProduction;\r\n            this.isTestServer = profileInfo.testServer ?? false;\r\n        });\r\n    }\r\n\r\n    loadExercise() {\r\n        this.irisSettings = undefined;\r\n        this.studentParticipations = this.participationWebsocketService.getParticipationsForExercise(this.exerciseId);\r\n        this.updateStudentParticipations();\r\n        this.resultWithComplaint = getFirstResultWithComplaintFromResults(this.gradedStudentParticipation?.results);\r\n        this.exerciseService.getExerciseDetails(this.exerciseId).subscribe((exerciseResponse: HttpResponse<ExerciseDetailsType>) => {\r\n            this.handleNewExercise(exerciseResponse.body!);\r\n            this.loadComplaintAndLatestRatedResult();\r\n        });\r\n    }\r\n\r\n    handleNewExercise(newExerciseDetails: ExerciseDetailsType) {\r\n        this.exercise = newExerciseDetails.exercise;\r\n\r\n        // TODO TW: This \"feature\" is only temporary for a paper.\r\n        if (this.exercise.problemStatement?.includes(ICER_PAPER_FLAG)) {\r\n            this.accountService.identity().then((user) => {\r\n                this.isChatGptWrapper = user && user.id ? user.id % 3 == 0 : false;\r\n            });\r\n        }\r\n\r\n        this.filterUnfinishedResults(this.exercise.studentParticipations);\r\n        this.mergeResultsAndSubmissionsForParticipations();\r\n        this.isAfterAssessmentDueDate = !this.exercise.assessmentDueDate || dayjs().isAfter(this.exercise.assessmentDueDate);\r\n        this.allowComplaintsForAutomaticAssessments = false;\r\n        this.plagiarismCaseInfo = newExerciseDetails.plagiarismCaseInfo;\r\n        if (this.exercise.type === ExerciseType.PROGRAMMING) {\r\n            const programmingExercise = this.exercise as ProgrammingExercise;\r\n            const isAfterDateForComplaint =\r\n                !this.exercise.dueDate ||\r\n                (hasExerciseDueDatePassed(this.exercise, this.gradedStudentParticipation) &&\r\n                    (!programmingExercise.buildAndTestStudentSubmissionsAfterDueDate || dayjs().isAfter(programmingExercise.buildAndTestStudentSubmissionsAfterDueDate)));\r\n\r\n            this.allowComplaintsForAutomaticAssessments = !!programmingExercise.allowComplaintsForAutomaticAssessments && isAfterDateForComplaint;\r\n            this.submissionPolicy = programmingExercise.submissionPolicy;\r\n\r\n            this.profileService.getProfileInfo().subscribe((profileInfo) => {\r\n                if (profileInfo?.activeProfiles?.includes(PROFILE_IRIS)) {\r\n                    this.irisSettings = newExerciseDetails.irisSettings;\r\n                }\r\n            });\r\n        }\r\n\r\n        this.showIfExampleSolutionPresent(newExerciseDetails.exercise);\r\n        this.subscribeForNewResults();\r\n        this.subscribeToTeamAssignmentUpdates();\r\n\r\n        this.baseResource = `/course-management/${this.courseId}/${this.exercise.type}-exercises/${this.exercise.id}/`;\r\n        if (this.exercise?.type) {\r\n            this.exerciseIcon = getIcon(this.exercise?.type);\r\n        }\r\n        this.createInstructorActions();\r\n    }\r\n\r\n    /**\r\n     * Sets example solution and related fields if exampleSolution exists on newExercise,\r\n     * otherwise clears the previously set example solution related fields.\r\n     *\r\n     * @param newExercise Exercise model that may have an exampleSolution.\r\n     */\r\n    showIfExampleSolutionPresent(newExercise: Exercise) {\r\n        this.exampleSolutionInfo = ExerciseService.extractExampleSolutionInfo(newExercise, this.artemisMarkdown);\r\n        // For TAs the example solution is collapsed on default to avoid spoiling, as the example solution is always shown to TAs\r\n        this.exampleSolutionCollapsed = !!newExercise?.isAtLeastTutor;\r\n    }\r\n\r\n    /**\r\n     * Filters out any unfinished Results\r\n     */\r\n    private filterUnfinishedResults(participations?: StudentParticipation[]) {\r\n        participations?.forEach((participation: Participation) => {\r\n            if (participation.results) {\r\n                participation.results = participation.results.filter((result: Result) => result.completionDate);\r\n            }\r\n        });\r\n    }\r\n\r\n    sortResults() {\r\n        if (this.studentParticipations?.length) {\r\n            this.studentParticipations.forEach((participation) => participation.results?.sort(this.resultSortFunction));\r\n            this.sortedHistoryResults = this.studentParticipations\r\n                .flatMap((participation) => participation.results ?? [])\r\n                .sort(this.resultSortFunction)\r\n                .filter((result) => !(result.assessmentType === AssessmentType.AUTOMATIC_ATHENA && !result.successful));\r\n        }\r\n    }\r\n\r\n    private resultSortFunction = (a: Result, b: Result) => {\r\n        const aValue = dayjs(a.completionDate!).valueOf();\r\n        const bValue = dayjs(b.completionDate!).valueOf();\r\n        return aValue - bValue;\r\n    };\r\n\r\n    mergeResultsAndSubmissionsForParticipations() {\r\n        // if there are new student participation(s) from the server, we need to update this.studentParticipation\r\n        if (this.exercise?.studentParticipations?.length) {\r\n            this.studentParticipations = this.participationService.mergeStudentParticipations(this.exercise.studentParticipations);\r\n            this.exercise.studentParticipations = this.studentParticipations;\r\n            this.updateStudentParticipations();\r\n            this.sortResults();\r\n            // Add exercise to studentParticipation, as the result component is dependent on its existence.\r\n            this.studentParticipations.forEach((participation) => (participation.exercise = this.exercise));\r\n        } else if (this.studentParticipations?.length && this.exercise) {\r\n            // otherwise we make sure that the student participation in exercise is correct\r\n            this.exercise.studentParticipations = this.studentParticipations;\r\n        }\r\n    }\r\n\r\n    subscribeForNewResults() {\r\n        if (this.exercise && this.studentParticipations?.length) {\r\n            this.studentParticipations.forEach((participation) => {\r\n                this.participationWebsocketService.addParticipation(participation, this.exercise);\r\n            });\r\n            if (this.latestRatedResult) {\r\n                if (this.latestRatedResult.successful) {\r\n                    this.guidedTourService.enableTourForExercise(this.exercise, programmingExerciseSuccess, true);\r\n                } else {\r\n                    this.guidedTourService.enableTourForExercise(this.exercise, programmingExerciseFail, true);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.participationUpdateListener?.unsubscribe();\r\n        this.participationUpdateListener = this.participationWebsocketService\r\n            .subscribeForParticipationChanges()\r\n            // Skip the first event, as it is the initial state. All data should already be loaded.\r\n            .pipe(skip(1))\r\n            .subscribe((changedParticipation: StudentParticipation) => {\r\n                if (changedParticipation && this.exercise && changedParticipation.exercise?.id === this.exercise.id) {\r\n                    // Notify student about late submission result\r\n                    if (\r\n                        changedParticipation.exercise?.dueDate &&\r\n                        hasExerciseDueDatePassed(changedParticipation.exercise, changedParticipation) &&\r\n                        changedParticipation.id === this.gradedStudentParticipation?.id &&\r\n                        (changedParticipation.results?.length || 0) > (this.gradedStudentParticipation?.results?.length || 0)\r\n                    ) {\r\n                        this.alertService.success('artemisApp.exercise.lateSubmissionResultReceived');\r\n                    }\r\n                    if (\r\n                        ((changedParticipation.results?.length || 0) > (this.gradedStudentParticipation?.results?.length || 0) ||\r\n                            changedParticipation.results?.last()?.completionDate === undefined) &&\r\n                        changedParticipation.results?.last()?.assessmentType === AssessmentType.AUTOMATIC_ATHENA &&\r\n                        changedParticipation.results?.last()?.successful !== undefined\r\n                    ) {\r\n                        if (changedParticipation.results?.last()?.successful === true) {\r\n                            this.alertService.success('artemisApp.exercise.athenaFeedbackSuccessful');\r\n                        } else {\r\n                            this.alertService.error('artemisApp.exercise.athenaFeedbackFailed');\r\n                        }\r\n                    }\r\n                    if (this.studentParticipations?.some((participation) => participation.id === changedParticipation.id)) {\r\n                        this.exercise.studentParticipations = this.studentParticipations.map((participation) =>\r\n                            participation.id === changedParticipation.id ? changedParticipation : participation,\r\n                        );\r\n                    } else {\r\n                        this.exercise.studentParticipations = [...this.studentParticipations, changedParticipation];\r\n                    }\r\n                    this.updateStudentParticipations();\r\n                    this.mergeResultsAndSubmissionsForParticipations();\r\n                }\r\n            });\r\n    }\r\n\r\n    private updateStudentParticipations() {\r\n        this.gradedStudentParticipation = this.participationService.getSpecificStudentParticipation(this.studentParticipations, false);\r\n        this.practiceStudentParticipation = this.participationService.getSpecificStudentParticipation(this.studentParticipations, true);\r\n    }\r\n\r\n    /**\r\n     * Receives team assignment changes and applies them if they belong to this exercise\r\n     */\r\n    async subscribeToTeamAssignmentUpdates() {\r\n        this.teamAssignmentUpdateListener = (await this.teamService.teamAssignmentUpdates)\r\n            .pipe(filter(({ exerciseId }: TeamAssignmentPayload) => exerciseId === this.exercise?.id))\r\n            .subscribe((teamAssignment) => {\r\n                this.exercise!.studentAssignedTeamId = teamAssignment.teamId;\r\n                this.exercise!.studentParticipations = teamAssignment.studentParticipations;\r\n            });\r\n    }\r\n\r\n    exerciseRatedBadge(result: Result): string {\r\n        return result.rated ? 'bg-success' : 'bg-info';\r\n    }\r\n\r\n    get hasMoreResults(): boolean {\r\n        if (!this.studentParticipations?.length || !this.sortedHistoryResults.length) {\r\n            return false;\r\n        }\r\n        return this.sortedHistoryResults.length > MAX_RESULT_HISTORY_LENGTH;\r\n    }\r\n\r\n    /**\r\n     * Loads and stores the complaint if any exists. Furthermore, loads the latest rated result and stores it.\r\n     */\r\n    loadComplaintAndLatestRatedResult(): void {\r\n        if (!this.gradedStudentParticipation?.submissions?.[0] || !this.sortedHistoryResults?.length) {\r\n            return;\r\n        }\r\n        this.complaintService.findBySubmissionId(this.gradedStudentParticipation!.submissions![0].id!).subscribe({\r\n            next: (res) => {\r\n                if (!res.body) {\r\n                    return;\r\n                }\r\n                this.complaint = res.body;\r\n            },\r\n            error: (err: HttpErrorResponse) => {\r\n                this.onError(err.message);\r\n            },\r\n        });\r\n\r\n        if (this.exercise!.type === ExerciseType.MODELING || this.exercise!.type === ExerciseType.TEXT) {\r\n            return;\r\n        }\r\n\r\n        const ratedResults = this.gradedStudentParticipation?.results?.filter((result: Result) => result.rated).sort(this.resultSortFunction);\r\n        if (ratedResults) {\r\n            const latestResult = ratedResults.last();\r\n            if (latestResult) {\r\n                latestResult.participation = this.gradedStudentParticipation;\r\n            }\r\n            this.latestRatedResult = latestResult;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the status of the exercise if it is a quiz exercise or undefined otherwise.\r\n     */\r\n    get quizExerciseStatus(): QuizStatus | undefined {\r\n        if (this.exercise!.type === ExerciseType.QUIZ) {\r\n            return this.quizExerciseService.getStatus(this.exercise as QuizExercise);\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    private onError(error: string) {\r\n        this.alertService.error(error);\r\n    }\r\n\r\n    /**\r\n     * Used to change the boolean value for the example solution dropdown menu\r\n     */\r\n    changeExampleSolution() {\r\n        this.exampleSolutionCollapsed = !this.exampleSolutionCollapsed;\r\n    }\r\n\r\n    // INSTRUCTOR ACTIONS\r\n    createInstructorActions() {\r\n        if (this.exercise?.isAtLeastTutor) {\r\n            this.instructorActionItems = this.createTutorActions();\r\n        }\r\n        if (this.exercise?.isAtLeastEditor) {\r\n            this.instructorActionItems.push(...this.createEditorActions());\r\n        }\r\n        if (this.exercise?.isAtLeastInstructor && this.QUIZ_ENDED_STATUS.includes(this.quizExerciseStatus)) {\r\n            this.instructorActionItems.push(this.getReEvaluateItem());\r\n        }\r\n    }\r\n\r\n    createTutorActions(): InstructorActionItem[] {\r\n        const tutorActionItems = [...this.getDefaultItems()];\r\n        if (this.exercise?.type === ExerciseType.QUIZ) {\r\n            tutorActionItems.push(...this.getQuizItems());\r\n        } else {\r\n            tutorActionItems.push(this.getParticipationItem());\r\n        }\r\n        return tutorActionItems;\r\n    }\r\n\r\n    getDefaultItems(): InstructorActionItem[] {\r\n        return [\r\n            {\r\n                routerLink: `${this.baseResource}`,\r\n                icon: faEye,\r\n                translation: 'entity.action.view',\r\n            },\r\n            {\r\n                routerLink: `${this.baseResource}scores`,\r\n                icon: faTable,\r\n                translation: 'entity.action.scores',\r\n            },\r\n        ];\r\n    }\r\n\r\n    getQuizItems(): InstructorActionItem[] {\r\n        return [\r\n            {\r\n                routerLink: `${this.baseResource}preview`,\r\n                icon: faEye,\r\n                translation: 'artemisApp.quizExercise.preview',\r\n            },\r\n            {\r\n                routerLink: `${this.baseResource}solution`,\r\n                icon: faEye,\r\n                translation: 'artemisApp.quizExercise.solution',\r\n            },\r\n        ];\r\n    }\r\n\r\n    getParticipationItem(): InstructorActionItem {\r\n        return {\r\n            routerLink: `${this.baseResource}participations`,\r\n            icon: faListAlt,\r\n            translation: 'artemisApp.exercise.participations',\r\n        };\r\n    }\r\n\r\n    createEditorActions(): InstructorActionItem[] {\r\n        const editorItems: InstructorActionItem[] = [];\r\n        if (this.exercise?.type === ExerciseType.QUIZ) {\r\n            editorItems.push(this.getStatisticItem('quiz-point-statistic'));\r\n            if (this.QUIZ_EDITABLE_STATUS.includes(this.quizExerciseStatus)) {\r\n                editorItems.push(this.getQuizEditItem());\r\n            }\r\n        } else if (this.exercise?.type === ExerciseType.MODELING) {\r\n            editorItems.push(this.getStatisticItem('exercise-statistics'));\r\n        } else if (this.exercise?.type === ExerciseType.PROGRAMMING) {\r\n            editorItems.push(this.getGradingItem());\r\n        }\r\n        return editorItems;\r\n    }\r\n\r\n    getStatisticItem(routerLink: string): InstructorActionItem {\r\n        return {\r\n            routerLink: `${this.baseResource}${routerLink}`,\r\n            icon: faSignal,\r\n            translation: 'artemisApp.courseOverview.exerciseDetails.instructorActions.statistics',\r\n        };\r\n    }\r\n\r\n    getGradingItem(): InstructorActionItem {\r\n        return {\r\n            routerLink: `${this.baseResource}grading/test-cases`,\r\n            icon: faFileSignature,\r\n            translation: 'artemisApp.programmingExercise.configureGrading.shortTitle',\r\n        };\r\n    }\r\n\r\n    getQuizEditItem(): InstructorActionItem {\r\n        return {\r\n            routerLink: `${this.baseResource}edit`,\r\n            icon: faWrench,\r\n            translation: 'entity.action.edit',\r\n        };\r\n    }\r\n\r\n    getReEvaluateItem(): InstructorActionItem {\r\n        return {\r\n            routerLink: `${this.baseResource}re-evaluate`,\r\n            icon: faWrench,\r\n            translation: 'entity.action.re-evaluate',\r\n        };\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.participationUpdateListener?.unsubscribe();\r\n        this.studentParticipations?.forEach((participation) => {\r\n            if (participation.id && this.exercise) {\r\n                this.participationWebsocketService.unsubscribeForLatestResultOfParticipation(participation.id, this.exercise);\r\n            }\r\n        });\r\n\r\n        this.teamAssignmentUpdateListener?.unsubscribe();\r\n        this.submissionSubscription?.unsubscribe();\r\n        this.paramsSubscription?.unsubscribe();\r\n        this.profileSubscription?.unsubscribe();\r\n    }\r\n}\r\n", "@if (exercise) {\r\n    <div id=\"course-exercise-details\" class=\"px-3 scrollable-content\" [ngClass]=\"{ 'content-height-dev': !isProduction || isTestServer }\">\r\n        <div class=\"d-flex align-items-center my-2 justify-content-between\">\r\n            <div class=\"d-flex\">\r\n                <h5 class=\"mb-0\" id=\"exercise-header\"><fa-icon class=\"me-2\" [icon]=\"exerciseIcon\" />{{ exercise.title }}</h5>\r\n            </div>\r\n            <div class=\"d-flex gap-1\">\r\n                @if (exercise.isAtLeastTutor) {\r\n                    <div ngbDropdown class=\"d-inline\">\r\n                        <button id=\"instructor-actions-dropdown\" class=\"btn btn-secondary\" ngbDropdownToggle>\r\n                            <fa-icon [icon]=\"faWrench\" />\r\n                            <span class=\"d-none d-md-inline\">\r\n                                {{ 'artemisApp.courseOverview.exerciseDetails.instructorActions.title' + (exercise.isAtLeastInstructor ? '' : 'Tutor') | artemisTranslate }}</span\r\n                            >\r\n                        </button>\r\n                        <div ngbDropdownMenu aria-labelledby=\"instructor-actions-dropdown\">\r\n                            @for (instructorActionItem of instructorActionItems; track instructorActionItem) {\r\n                                <a class=\"btn\" [routerLink]=\"instructorActionItem.routerLink\" ngbDropdownItem>\r\n                                    @if (instructorActionItem.icon) {\r\n                                        <fa-icon [fixedWidth]=\"true\" [icon]=\"instructorActionItem.icon\" class=\"ms-2 me-3\" />\r\n                                    }\r\n                                    <span [jhiTranslate]=\"instructorActionItem.translation\"></span>\r\n                                </a>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                }\r\n                <!-- TODO: the extension point for Orion does not work with Angular 19, we need to find a different solution -->\r\n                <!--                <jhi-exercise-details-student-actions-->\r\n                <!--                    class=\"col\"-->\r\n                <!--                    *jhiExtensionPoint=\"overrideStudentActions; context: { courseId: courseId, exercise: exercise }\"-->\r\n                <!--                    [courseId]=\"courseId\"-->\r\n                <!--                    [exercise]=\"exercise\"-->\r\n                <!--                />-->\r\n                <jhi-exercise-details-student-actions class=\"col\" [courseId]=\"courseId\" [exercise]=\"exercise\" />\r\n                @if (plagiarismCaseInfo && plagiarismCaseInfo.verdict !== PlagiarismVerdict.NO_PLAGIARISM) {\r\n                    <a class=\"col-auto btn btn-danger btn-sm me-2\" [routerLink]=\"['/courses', courseId, 'plagiarism-cases', plagiarismCaseInfo.id]\">\r\n                        @if (!plagiarismCaseInfo?.createdByContinuousPlagiarismControl) {\r\n                            <span jhiTranslate=\"artemisApp.plagiarism.plagiarismCases.plagiarismCase\"></span>\r\n                        }\r\n                        @if (plagiarismCaseInfo?.createdByContinuousPlagiarismControl) {\r\n                            <span jhiTranslate=\"artemisApp.plagiarism.plagiarismCases.plagiarismCaseSignificantSimilarity\"></span>\r\n                        }\r\n                    </a>\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n        <hr class=\"my-0\" />\r\n        <div class=\"my-3\">\r\n            <jhi-exercise-headers-information\r\n                [exercise]=\"exercise\"\r\n                [studentParticipation]=\"gradedStudentParticipation\"\r\n                [submissionPolicy]=\"submissionPolicy\"\r\n                [course]=\"exercise.course\"\r\n            />\r\n        </div>\r\n\r\n        <!-- <hr class=\"mt-0\" /> -->\r\n        <div class=\"row\">\r\n            <div class=\"col flex-grow-1\">\r\n                <!-- RESULTS START -->\r\n                @if ((this.sortedHistoryResults?.length && this.sortedHistoryResults.length > 1) || this.practiceStudentParticipation?.results?.length) {\r\n                    <div class=\"row\">\r\n                        <div class=\"row mb-2 mt-2 align-items-baseline d-none d-md-flex\">\r\n                            <div class=\"col-auto\">\r\n                                <h3 jhiTranslate=\"artemisApp.courseOverview.exerciseDetails.recentResults\"></h3>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <jhi-result-history [results]=\"sortedHistoryResults\" [exercise]=\"exercise\" />\r\n                        </div>\r\n                        <div class=\"row mb-2 mt-2 align-items-baseline\">\r\n                            <div class=\"col-auto\">\r\n                                <a class=\"text-primary\" (click)=\"showMoreResults = !showMoreResults\">\r\n                                    {{ 'artemisApp.courseOverview.exerciseDetails.' + (showMoreResults ? 'hideResults' : 'showResults') | artemisTranslate }}\r\n                                    <fa-icon [icon]=\"showMoreResults ? faAngleUp : faAngleDown\" />\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                        @if (showMoreResults) {\r\n                            <div class=\"row mb-2 mt-2 align-items-baseline\">\r\n                                <div class=\"col-auto\">\r\n                                    <h3 jhiTranslate=\"artemisApp.courseOverview.exerciseDetails.allResults\"></h3>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-12 col-md-12\">\r\n                                    @for (result of sortedHistoryResults; track result; let i = $index) {\r\n                                        <div>\r\n                                            @if (\r\n                                                result.submission &&\r\n                                                result.submission.submissionDate &&\r\n                                                (i === 0 ||\r\n                                                    !sortedHistoryResults[i - 1].submission ||\r\n                                                    !sortedHistoryResults[i - 1].submission?.submissionDate ||\r\n                                                    !dayjs(result.submission.submissionDate).isSame(sortedHistoryResults[i - 1].submission?.submissionDate, 'day'))\r\n                                            ) {\r\n                                                <h4 class=\"mt-2\">\r\n                                                    {{ result.submission.submissionDate | artemisDate: 'long-date' }}\r\n                                                </h4>\r\n                                            }\r\n                                            <jhi-result [result]=\"result\" [showUngradedResults]=\"true\" [showBadge]=\"true\" [exercise]=\"exercise\" />\r\n                                        </div>\r\n                                    }\r\n                                    @if (!sortedHistoryResults) {\r\n                                        <div class=\"no-results\" jhiTranslate=\"artemisApp.courseOverview.exerciseDetails.noResults\"></div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                }\r\n                <!-- RESULTS END -->\r\n                <jhi-problem-statement [exercise]=\"exercise\" [participation]=\"practiceStudentParticipation ?? gradedStudentParticipation!\" />\r\n                @if (exercise.type === PROGRAMMING && exercise.studentParticipations && exercise.studentParticipations.length) {\r\n                    <jhi-reset-repo-button [exercise]=\"exercise\" [participations]=\"exercise.studentParticipations\" [smallButtons]=\"false\" />\r\n                }\r\n                @if (exampleSolutionInfo?.exampleSolutionPublished) {\r\n                    <div class=\"row mb-2 mt-2 align-items-baseline\">\r\n                        <div class=\"control-label\" (click)=\"changeExampleSolution()\">\r\n                            <span class=\"h3 pe-2\" jhiTranslate=\"artemisApp.exercise.exampleSolution\"></span>\r\n                            <fa-icon class=\"pe-3\" [icon]=\"exampleSolutionCollapsed ? faAngleDown : faAngleUp\" />\r\n                        </div>\r\n                    </div>\r\n                    @if (!exampleSolutionCollapsed) {\r\n                        <dl class=\"row-md jh-entity-details markdown-preview\">\r\n                            @if (exampleSolutionInfo?.exampleSolutionUML && exampleSolutionInfo?.modelingExercise) {\r\n                                <dd>\r\n                                    <jhi-modeling-editor\r\n                                        [readOnly]=\"true\"\r\n                                        [diagramType]=\"exampleSolutionInfo?.modelingExercise?.diagramType\"\r\n                                        [umlModel]=\"exampleSolutionInfo?.exampleSolutionUML\"\r\n                                        [withExplanation]=\"!!exampleSolutionInfo?.modelingExercise?.exampleSolutionExplanation\"\r\n                                        [explanation]=\"exampleSolutionInfo?.modelingExercise?.exampleSolutionExplanation || ''\"\r\n                                    />\r\n                                </dd>\r\n                            }\r\n                            @if (exampleSolutionInfo?.exampleSolution) {\r\n                                <dd class=\"editor-outline-background\" [innerHTML]=\"exampleSolutionInfo?.exampleSolution\"></dd>\r\n                            }\r\n                            @if (exercise?.type === PROGRAMMING) {\r\n                                <dd class=\"editor-outline-background\">\r\n                                    <jhi-programming-exercise-example-solution-repo-download\r\n                                        class=\"ms-2\"\r\n                                        [exerciseId]=\"exercise.id!\"\r\n                                        [title]=\"'artemisApp.programmingExercise.export.downloadExampleSolution'\"\r\n                                    />\r\n                                </dd>\r\n                                @if (exampleSolutionInfo?.programmingExercise?.releaseTestsWithExampleSolution) {\r\n                                    <dd class=\"editor-outline-background\">\r\n                                        <jhi-programming-exercise-example-solution-repo-download\r\n                                            class=\"ms-2\"\r\n                                            [exerciseId]=\"exercise.id!\"\r\n                                            [includeTests]=\"true\"\r\n                                            [title]=\"'artemisApp.programmingExercise.export.downloadTestsWithExampleSolution'\"\r\n                                            ngbTooltip=\"{{ 'artemisApp.programmingExercise.studentDownloadTestsTooltip' | artemisTranslate }}\"\r\n                                        />\r\n                                    </dd>\r\n                                }\r\n                            }\r\n                        </dl>\r\n                    }\r\n                }\r\n                <jhi-exercise-info [exercise]=\"exercise\" [studentParticipation]=\"gradedStudentParticipation\" />\r\n                @if (\r\n                    exercise &&\r\n                    exercise.type === PROGRAMMING &&\r\n                    !!gradedStudentParticipation &&\r\n                    !!latestRatedResult &&\r\n                    (latestRatedResult.assessmentType === AssessmentType.MANUAL ||\r\n                        latestRatedResult.assessmentType === AssessmentType.SEMI_AUTOMATIC ||\r\n                        allowComplaintsForAutomaticAssessments)\r\n                ) {\r\n                    <jhi-complaint-student-view\r\n                        class=\"mb-2 mt-2 ms-3\"\r\n                        [exercise]=\"exercise\"\r\n                        [participation]=\"gradedStudentParticipation!\"\r\n                        [result]=\"resultWithComplaint ? resultWithComplaint! : latestRatedResult!\"\r\n                    />\r\n                }\r\n                @if (\r\n                    exercise?.type === PROGRAMMING &&\r\n                    gradedStudentParticipation &&\r\n                    latestRatedResult &&\r\n                    (latestRatedResult.assessmentType === AssessmentType.MANUAL || latestRatedResult.assessmentType === AssessmentType.SEMI_AUTOMATIC)\r\n                ) {\r\n                    <div class=\"row\">\r\n                        <jhi-rating class=\"mt-2 alert alert-info\" [result]=\"latestRatedResult\" />\r\n                    </div>\r\n                }\r\n                @if (exercise.type === PROGRAMMING && !exercise.exerciseGroup && irisSettings?.irisChatSettings?.enabled) {\r\n                    <jhi-exercise-chatbot-button [mode]=\"ChatServiceMode.EXERCISE\" [isChatGptWrapper]=\"isChatGptWrapper\" />\r\n                    <!-- TODO TW: This \"feature\" is only temporary for a paper. -->\r\n                }\r\n                @if (plagiarismCaseInfo?.verdict === PlagiarismVerdict.NO_PLAGIARISM) {\r\n                    <a class=\"btn btn-info btn-sm me-2\" [routerLink]=\"['/courses', courseId, 'plagiarism-cases', plagiarismCaseInfo?.id]\">\r\n                        <span jhiTranslate=\"artemisApp.plagiarism.plagiarismCases.resolvedPlagiarismCase\"></span>\r\n                    </a>\r\n                }\r\n            </div>\r\n            <div class=\"col d-flex flex-grow-1 justify-end\" style=\"max-width: min-content\">\r\n                @if (exercise.course && (isCommunicationEnabled(exercise.course) || isMessagingEnabled(exercise.course))) {\r\n                    <jhi-discussion-section [exercise]=\"exercise\" />\r\n                }\r\n            </div>\r\n        </div>\r\n        <jhi-lti-initializer />\r\n    </div>\r\n}\r\n"],
  "mappings": "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",
  "names": ["programmingExerciseFail", "settingsKey", "resetParticipation", "ResetParticipation", "EXERCISE_PARTICIPATION", "steps", "TextTourStep", "highlightSelector", "headlineTranslateKey", "contentTranslateKey", "highlightPadding", "orientation", "Orientation", "RIGHT", "skipStepIfNoSelector", "UserInterActionTourStep", "userInteractionEvent", "UserInteractionEvent", "CLICK", "BOTTOM", "closeAction", "clickOnElement", "programmingExerciseSuccess", "TOP", "DifficultyLevelComponent", "translateService", "inject", "TranslateService", "translateSubscription", "difficultyLevel", "coloredDifficultyLevel", "label", "color", "ngOnInit", "onLangChange", "subscribe", "mapDifficultyLevelToColors", "DifficultyLevel", "EASY", "instant", "Array", "fill", "MEDIUM", "HARD", "ngOnDestroy", "unsubscribe", "selectors", "inputs", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275property", "\u0275\u0275advance", "CommonModule", "NgClass", "NgbTooltipModule", "NgbTooltip", "styles", "\u0275\u0275element", "\u0275\u0275property", "informationBoxItem_r1", "content", "value", "\u0275\u0275pureFunction0", "_c0", "\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275elementEnd", "contentColor", "\u0275\u0275advance", "\u0275\u0275textInterpolate", "\u0275\u0275pipeBind1", "ctx_r1", "studentParticipation", "\u0275\u0275template", "ExerciseHeadersInformationComponent_Conditional_0_For_2_Case_1_Template", "ExerciseHeadersInformationComponent_Conditional_0_For_2_Case_2_Template", "ExerciseHeadersInformationComponent_Conditional_0_For_2_Case_3_Template", "ExerciseHeadersInformationComponent_Conditional_0_For_2_Case_4_Template", "ExerciseHeadersInformationComponent_Conditional_0_For_2_Case_5_Template", "\u0275\u0275conditional", "tmp_12_0", "type", "\u0275\u0275repeaterCreate", "ExerciseHeadersInformationComponent_Conditional_0_For_2_Template", "\u0275\u0275repeaterTrackByIdentity", "\u0275\u0275repeater", "informationBoxItems", "ExerciseHeadersInformationComponent", "sortService", "inject", "SortService", "serverDateService", "ArtemisServerDateService", "IncludedInOverallScore", "dayjs", "exercise", "course", "submissionPolicy", "dueDate", "programmingExercise", "individualComplaintDueDate", "now", "achievedPoints", "numberOfSubmissions", "ngOnInit", "getExerciseDueDate", "maxComplaintTimeDays", "ComplaintService", "getIndividualComplaintDueDate", "results", "last", "createInformationBoxItems", "ngOnChanges", "getCourseFromExercise", "active", "submissionLimit", "updateSubmissionPolicyItem", "length", "sortByProperty", "latestRatedResult", "filter", "result", "rated", "first", "roundValueSpecifiedByCourseSettings", "score", "maxPoints", "updatePointsItem", "addPointsItems", "addDueDateItems", "addStartDateItem", "addSubmissionStatusItem", "addSubmissionPolicyItem", "addDifficultyItem", "addCategoryItems", "pointsItemIndex", "findIndex", "item", "title", "getPointsItem", "bonusPoints", "achievedBonusPoints", "push", "dueDateItem", "getDueDateItem", "isBefore", "assessmentDueDate", "isAfter", "assessmentDueItem", "isContentComponent", "tooltip", "tooltipParams", "date", "format", "complaintDueItem", "isDueDateInThePast", "dueDateStatusBadge", "isBetween", "add", "shouldDisplayDueDateRelative", "isDateLessThanAWeekInTheFuture", "undefined", "startDate", "shouldDisplayStartDateRelative", "startDateItem", "difficulty", "difficultyItem", "submissionStatusItem", "releaseDate", "includedInOverallScore", "INCLUDED_COMPLETELY", "categories", "categoryItem", "getSubmissionPolicyItem", "getSubmissionColor", "points", "exceedingPenalty", "toString", "submissionsLeft", "submissionColor", "countSubmissions", "submissionItemIndex", "splice", "commitHashSet", "Set", "map", "submission", "commitHash", "forEach", "size", "selectors", "inputs", "features", "\u0275\u0275NgOnChangesFeature", "decls", "vars", "consts", "template", "rf", "ctx", "ExerciseHeadersInformationComponent_Conditional_0_Template", "SubmissionResultStatusComponent", "InformationBoxComponent", "DifficultyLevelComponent", "ExerciseCategoriesComponent", "ArtemisDatePipe", "ArtemisTimeAgoPipe", "CommonModule", "NgClass", "encapsulation", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275property", "ctx_r0", "faBackward", "FeatureToggle", "ProgrammingExercises", "\u0275\u0275pipeBind1", "exercise", "loading", "smallButtons", "popContent_r2", "title", "\u0275\u0275elementStart", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r4", "\u0275\u0275nextContext", "\u0275\u0275resetView", "resetRepository", "gradedParticipation", "id", "\u0275\u0275elementEnd", "resetForm_r5", "invalid", "\u0275\u0275template", "ResetRepoButtonComponent_ng_template_3_Conditional_10_Template", "ResetRepoButtonComponent_ng_template_3_Conditional_11_Template", "ResetRepoButtonComponent_ng_template_3_Conditional_15_Template", "_r3", "ResetRepoButtonComponent_ng_template_3_Conditional_23_Template", "\u0275\u0275textInterpolate", "practiceParticipation", "\u0275\u0275conditional", "allowOfflineIde", "\u0275\u0275pureFunction1", "_c0", "ResetRepoButtonComponent", "participationService", "inject", "ParticipationService", "programmingExerciseParticipationService", "ProgrammingExerciseParticipationService", "alertService", "AlertService", "INITIALIZED", "InitializationState", "participations", "beforeIndividualDueDate", "ngOnInit", "getSpecificStudentParticipation", "individualDueDate", "getExerciseDueDate", "dayjs", "isBefore", "gradedParticipationId", "participationId", "pipe", "finalize", "success", "window", "scrollTo", "subscribe", "selectors", "inputs", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275elementContainerStart", "ResetRepoButtonComponent_Conditional_2_Template", "ResetRepoButtonComponent_ng_template_3_Template", "\u0275\u0275templateRefExtractor", "initializationState", "ExerciseActionButtonComponent", "FeatureToggleDirective", "NgbPopover", "FormsModule", "\u0275NgNoValidate", "NgControlStatus", "NgControlStatusGroup", "NgModel", "NgForm", "TranslateDirective", "ConfirmEntityNameComponent", "ArtemisTranslatePipe", "styles", "\u0275\u0275text", "\u0275\u0275template", "ExerciseInfoComponent_Conditional_8_ng_template_1_Template", "\u0275\u0275advance", "\u0275\u0275property", "exerciseInfoItem_r2", "\u0275\u0275pureFunction1", "_c1", "ctx_r0", "exercise", "releaseDate", "ExerciseInfoComponent_Conditional_9_ng_template_1_Template", "_c2", "startDate", "ExerciseInfoComponent_Conditional_12_ng_template_1_Template", "_c3", "exampleSolutionPublicationDate", "ExerciseInfoComponent_Conditional_13_ng_template_1_Template", "_c4", "assessmentDueDate", "ExerciseInfoComponent_Conditional_14_ng_template_1_Template", "_c5", "individualComplaintDueDate", "ExerciseInfoComponent_Conditional_15_ng_template_1_Template", "_c6", "canComplainLaterOn", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275textInterpolate", "\u0275\u0275pipeBind1", "key_r3", "isDate_r5", "value_r4", "ExerciseInfoComponent", "studentParticipation", "dueDate", "ngOnInit", "getExerciseDueDate", "course", "maxComplaintTimeDays", "ComplaintService", "getIndividualComplaintDueDate", "results", "last", "dayjs", "isBefore", "submissionCount", "allowComplaintsForAutomaticAssessments", "assessmentType", "AssessmentType", "AUTOMATIC", "selectors", "inputs", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275element", "ExerciseInfoComponent_Conditional_8_Template", "ExerciseInfoComponent_Conditional_9_Template", "ExerciseInfoComponent_ng_template_10_Template", "ExerciseInfoComponent_Conditional_12_Template", "ExerciseInfoComponent_Conditional_13_Template", "ExerciseInfoComponent_Conditional_14_Template", "ExerciseInfoComponent_Conditional_15_Template", "ExerciseInfoComponent_ng_template_18_Template", "\u0275\u0275templateRefExtractor", "\u0275\u0275conditional", "\u0275\u0275pureFunction2", "_c0", "TranslateDirective", "NgTemplateOutlet", "ArtemisDatePipe", "ArtemisTranslatePipe", "styles", "LtiInitializerModalComponent", "activeModal", "inject", "NgbActiveModal", "alertService", "AlertService", "router", "Router", "activatedRoute", "ActivatedRoute", "password", "loginName", "passwordResetLocation", "readAndUnderstood", "clear", "info", "navigate", "relativeTo", "queryParams", "initialize", "queryParamsHandling", "dismiss", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275twoWayListener", "$event", "i0", "\u0275\u0275twoWayBindingSet", "\u0275\u0275listener", "\u0275\u0275advance", "\u0275\u0275twoWayProperty", "\u0275\u0275property", "TranslateDirective", "FormsModule", "DefaultValueAccessor", "NgControlStatus", "NgModel", "CopyIconButtonComponent", "RouterLink", "encapsulation", "LtiInitializerComponent", "modalService", "inject", "NgbModal", "userService", "UserService", "alertService", "AlertService", "router", "Router", "activatedRoute", "ActivatedRoute", "accountService", "AccountService", "modalRef", "ngOnInit", "queryParams", "subscribe", "undefined", "initializeLTIUser", "res", "password", "body", "info", "navigate", "relativeTo", "initialize", "queryParamsHandling", "open", "LtiInitializerModalComponent", "size", "backdrop", "keyboard", "componentInstance", "loginName", "userIdentity", "login", "selectors", "decls", "vars", "template", "rf", "ctx", "encapsulation", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275property", "instructorActionItem_r1", "icon", "\u0275\u0275elementStart", "\u0275\u0275template", "CourseExerciseDetailsComponent_Conditional_0_Conditional_14_For_15_Conditional_3_Template", "\u0275\u0275elementEnd", "routerLink", "\u0275\u0275conditional", "translation", "\u0275\u0275repeaterCreate", "CourseExerciseDetailsComponent_Conditional_0_Conditional_14_For_15_Template", "\u0275\u0275repeaterTrackByIdentity", "ctx_r1", "faWrench", "\u0275\u0275textInterpolate1", "\u0275\u0275pipeBind1", "exercise", "isAtLeastInstructor", "\u0275\u0275repeater", "instructorActionItems", "CourseExerciseDetailsComponent_Conditional_0_Conditional_17_Conditional_3_Template", "CourseExerciseDetailsComponent_Conditional_0_Conditional_17_Conditional_4_Template", "\u0275\u0275pureFunction2", "_c1", "courseId", "plagiarismCaseInfo", "id", "createdByContinuousPlagiarismControl", "\u0275\u0275pipeBind2", "result_r4", "submission", "submissionDate", "CourseExerciseDetailsComponent_Conditional_0_Conditional_33_Conditional_28_For_14_Conditional_3_Template", "\u0275$index_155_r5", "sortedHistoryResults", "dayjs", "isSame", "CourseExerciseDetailsComponent_Conditional_0_Conditional_33_Conditional_28_For_14_Template", "CourseExerciseDetailsComponent_Conditional_0_Conditional_33_Conditional_28_Conditional_15_Template", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r3", "\u0275\u0275nextContext", "\u0275\u0275resetView", "showMoreResults", "CourseExerciseDetailsComponent_Conditional_0_Conditional_33_Conditional_28_Template", "faAngleUp", "faAngleDown", "studentParticipations", "exampleSolutionInfo", "modelingExercise", "diagramType", "exampleSolutionUML", "exampleSolutionExplanation", "exampleSolution", "\u0275\u0275sanitizeHtml", "\u0275\u0275propertyInterpolate", "CourseExerciseDetailsComponent_Conditional_0_Conditional_37_Conditional_11_Conditional_5_Conditional_6_Template", "programmingExercise", "releaseTestsWithExampleSolution", "CourseExerciseDetailsComponent_Conditional_0_Conditional_37_Conditional_11_Conditional_3_Template", "CourseExerciseDetailsComponent_Conditional_0_Conditional_37_Conditional_11_Conditional_4_Template", "CourseExerciseDetailsComponent_Conditional_0_Conditional_37_Conditional_11_Conditional_5_Template", "type", "PROGRAMMING", "_r6", "changeExampleSolution", "CourseExerciseDetailsComponent_Conditional_0_Conditional_37_Conditional_11_Template", "exampleSolutionCollapsed", "gradedStudentParticipation", "resultWithComplaint", "latestRatedResult", "ChatServiceMode", "EXERCISE", "isChatGptWrapper", "CourseExerciseDetailsComponent_Conditional_0_Conditional_14_Template", "CourseExerciseDetailsComponent_Conditional_0_Conditional_17_Template", "CourseExerciseDetailsComponent_Conditional_0_Conditional_33_Template", "CourseExerciseDetailsComponent_Conditional_0_Conditional_36_Template", "CourseExerciseDetailsComponent_Conditional_0_Conditional_37_Template", "CourseExerciseDetailsComponent_Conditional_0_Conditional_40_Template", "CourseExerciseDetailsComponent_Conditional_0_Conditional_41_Template", "CourseExerciseDetailsComponent_Conditional_0_Conditional_42_Template", "CourseExerciseDetailsComponent_Conditional_0_Conditional_43_Template", "CourseExerciseDetailsComponent_Conditional_0_Conditional_47_Template", "\u0275\u0275pureFunction1", "_c0", "isProduction", "isTestServer", "exerciseIcon", "\u0275\u0275textInterpolate", "title", "isAtLeastTutor", "verdict", "PlagiarismVerdict", "NO_PLAGIARISM", "submissionPolicy", "course", "length", "practiceStudentParticipation", "results", "tmp_14_0", "undefined", "exampleSolutionPublished", "assessmentType", "AssessmentType", "MANUAL", "SEMI_AUTOMATIC", "allowComplaintsForAutomaticAssessments", "exerciseGroup", "irisSettings", "irisChatSettings", "enabled", "isCommunicationEnabled", "isMessagingEnabled", "CourseExerciseDetailsComponent", "AbstractScienceComponent", "exerciseService", "inject", "ExerciseService", "participationWebsocketService", "ParticipationWebsocketService", "participationService", "ParticipationService", "route", "ActivatedRoute", "profileService", "ProfileService", "guidedTourService", "GuidedTourService", "alertService", "AlertService", "teamService", "TeamService", "quizExerciseService", "QuizExerciseService", "complaintService", "ComplaintService", "artemisMarkdown", "ArtemisMarkdownService", "accountService", "AccountService", "QuizStatus", "QUIZ_ENDED_STATUS", "CLOSED", "OPEN_FOR_PRACTICE", "QUIZ_EDITABLE_STATUS", "VISIBLE", "INVISIBLE", "QUIZ", "ExerciseType", "MODELING", "TEXT", "FILE_UPLOAD", "learningPathMode", "exerciseId", "complaint", "participationUpdateListener", "teamAssignmentUpdateListener", "submissionSubscription", "isAfterAssessmentDueDate", "baseResource", "paramsSubscription", "profileSubscription", "faBook", "faEye", "faTable", "faListAlt", "constructor", "ScienceEventType", "EXERCISE__OPEN", "ngOnInit", "courseIdParams$", "parent", "params", "exerciseIdParams$", "combineLatest", "subscribe", "courseIdParams", "exerciseIdParams", "didExerciseChange", "parseInt", "didCourseChange", "loadExercise", "setResourceId", "logEvent", "getProfileInfo", "profileInfo", "inProduction", "testServer", "getParticipationsForExercise", "updateStudentParticipations", "getFirstResultWithComplaintFromResults", "getExerciseDetails", "exerciseResponse", "handleNewExercise", "body", "loadComplaintAndLatestRatedResult", "newExerciseDetails", "problemStatement", "includes", "ICER_PAPER_FLAG", "identity", "then", "user", "filterUnfinishedResults", "mergeResultsAndSubmissionsForParticipations", "assessmentDueDate", "isAfter", "isAfterDateForComplaint", "dueDate", "hasExerciseDueDatePassed", "buildAndTestStudentSubmissionsAfterDueDate", "activeProfiles", "PROFILE_IRIS", "showIfExampleSolutionPresent", "subscribeForNewResults", "subscribeToTeamAssignmentUpdates", "getIcon", "createInstructorActions", "newExercise", "extractExampleSolutionInfo", "participations", "forEach", "participation", "filter", "result", "completionDate", "sortResults", "sort", "resultSortFunction", "flatMap", "AUTOMATIC_ATHENA", "successful", "a", "b", "aValue", "valueOf", "bValue", "mergeStudentParticipations", "addParticipation", "enableTourForExercise", "programmingExerciseSuccess", "programmingExerciseFail", "unsubscribe", "subscribeForParticipationChanges", "pipe", "skip", "changedParticipation", "success", "last", "error", "some", "map", "getSpecificStudentParticipation", "__async", "teamAssignmentUpdates", "teamAssignment", "studentAssignedTeamId", "teamId", "exerciseRatedBadge", "rated", "hasMoreResults", "MAX_RESULT_HISTORY_LENGTH", "submissions", "findBySubmissionId", "next", "res", "err", "onError", "message", "ratedResults", "latestResult", "quizExerciseStatus", "getStatus", "createTutorActions", "isAtLeastEditor", "push", "createEditorActions", "getReEvaluateItem", "tutorActionItems", "getDefaultItems", "getQuizItems", "getParticipationItem", "editorItems", "getStatisticItem", "getQuizEditItem", "getGradingItem", "faSignal", "faFileSignature", "ngOnDestroy", "unsubscribeForLatestResultOfParticipation", "selectors", "features", "\u0275\u0275ProvidersFeature", "ExerciseCacheService", "\u0275\u0275InheritDefinitionFeature", "decls", "vars", "consts", "template", "rf", "ctx", "CourseExerciseDetailsComponent_Conditional_0_Template", "NgClass", "FaIconComponent", "NgbDropdown", "NgbDropdownToggle", "NgbDropdownMenu", "NgbDropdownItem", "RouterLink", "TranslateDirective", "ExerciseDetailsStudentActionsComponent", "ExerciseHeadersInformationComponent", "ResultHistoryComponent", "ResultComponent", "ProblemStatementComponent", "ResetRepoButtonComponent", "ModelingEditorComponent", "ProgrammingExerciseExampleSolutionRepoDownloadComponent", "NgbTooltip", "ExerciseInfoComponent", "ComplaintsStudentViewComponent", "RatingComponent", "IrisExerciseChatbotButtonComponent", "DiscussionSectionComponent", "LtiInitializerComponent", "ArtemisDatePipe", "ArtemisTranslatePipe", "styles"]
}
