{
  "version": 3,
  "sources": ["src/main/webapp/app/exercises/file-upload/manage/file-upload-exercise-update.component.ts", "src/main/webapp/app/exercises/file-upload/manage/file-upload-exercise-update.component.html"],
  "sourcesContent": ["import { AfterViewInit, ChangeDetectionStrategy, Component, OnDestroy, OnInit, ViewChild, inject } from '@angular/core';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { AlertService, AlertType } from 'app/core/util/alert.service';\r\nimport { DifficultyPickerComponent } from 'app/exercises/shared/difficulty-picker/difficulty-picker.component';\r\nimport { IncludedInOverallScorePickerComponent } from 'app/exercises/shared/included-in-overall-score-picker/included-in-overall-score-picker.component';\r\nimport { PresentationScoreComponent } from 'app/exercises/shared/presentation-score/presentation-score.component';\r\nimport { GradingInstructionsDetailsComponent } from 'app/exercises/shared/structured-grading-criterion/grading-instructions-details/grading-instructions-details.component';\r\nimport { FileUploadExerciseService } from './file-upload-exercise.service';\r\nimport { FileUploadExercise } from 'app/entities/file-upload-exercise.model';\r\nimport { CourseManagementService } from 'app/course/manage/course-management.service';\r\nimport { ExerciseService } from 'app/exercises/shared/exercise/exercise.service';\r\nimport { Exercise, ExerciseMode, IncludedInOverallScore, getCourseId, resetForImport } from 'app/entities/exercise.model';\r\nimport { ArtemisNavigationUtilService } from 'app/utils/navigation.utils';\r\nimport { ExerciseCategory } from 'app/entities/exercise-category.model';\r\nimport { cloneDeep } from 'lodash-es';\r\nimport { NgbModal, NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ExerciseUpdateWarningService } from 'app/exercises/shared/exercise-update-warning/exercise-update-warning.service';\r\nimport { onError } from 'app/shared/util/global.utils';\r\nimport { EditType, SaveExerciseCommand } from 'app/exercises/shared/exercise/exercise.utils';\r\nimport { faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { DocumentationType } from 'app/shared/components/documentation-button/documentation-button.component';\r\nimport { ExerciseGroupService } from 'app/exam/manage/exercise-groups/exercise-group.service';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\nimport { scrollToTopOfPage } from 'app/shared/util/utils';\r\nimport { FormDateTimePickerComponent } from 'app/shared/date-time-picker/date-time-picker.component';\r\nimport { ExerciseTitleChannelNameComponent } from 'app/exercises/shared/exercise-title-channel-name/exercise-title-channel-name.component';\r\nimport { TeamConfigFormGroupComponent } from 'app/exercises/shared/team-config-form-group/team-config-form-group.component';\r\nimport { FormsModule, NgModel } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { FormSectionStatus } from 'app/forms/form-status-bar/form-status-bar.component';\r\nimport { FormulaAction } from 'app/shared/monaco-editor/model/actions/formula.action';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { DocumentationButtonComponent } from 'app/shared/components/documentation-button/documentation-button.component';\r\nimport { FormStatusBarComponent } from 'app/forms/form-status-bar/form-status-bar.component';\r\nimport { HelpIconComponent } from 'app/shared/components/help-icon.component';\r\nimport { CategorySelectorComponent } from 'app/shared/category-selector/category-selector.component';\r\nimport { MarkdownEditorMonacoComponent } from 'app/shared/markdown-editor/monaco/markdown-editor-monaco.component';\r\nimport { CompetencySelectionComponent } from 'app/shared/competency-selection/competency-selection.component';\r\nimport { CustomMinDirective } from 'app/shared/validators/custom-min-validator.directive';\r\nimport { CustomMaxDirective } from 'app/shared/validators/custom-max-validator.directive';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { FormFooterComponent } from 'app/forms/form-footer/form-footer.component';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-file-upload-exercise-update',\r\n    templateUrl: './file-upload-exercise-update.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    imports: [\r\n        FormsModule,\r\n        TranslateDirective,\r\n        DocumentationButtonComponent,\r\n        FormStatusBarComponent,\r\n        ExerciseTitleChannelNameComponent,\r\n        HelpIconComponent,\r\n        CategorySelectorComponent,\r\n        DifficultyPickerComponent,\r\n        TeamConfigFormGroupComponent,\r\n        MarkdownEditorMonacoComponent,\r\n        CompetencySelectionComponent,\r\n        FormDateTimePickerComponent,\r\n        IncludedInOverallScorePickerComponent,\r\n        CustomMinDirective,\r\n        CustomMaxDirective,\r\n        FaIconComponent,\r\n        NgbTooltip,\r\n        PresentationScoreComponent,\r\n        GradingInstructionsDetailsComponent,\r\n        FormFooterComponent,\r\n        ArtemisTranslatePipe,\r\n    ],\r\n})\r\nexport class FileUploadExerciseUpdateComponent implements AfterViewInit, OnDestroy, OnInit {\r\n    private fileUploadExerciseService = inject(FileUploadExerciseService);\r\n    private modalService = inject(NgbModal);\r\n    private popupService = inject(ExerciseUpdateWarningService);\r\n    private activatedRoute = inject(ActivatedRoute);\r\n    private courseService = inject(CourseManagementService);\r\n    private exerciseService = inject(ExerciseService);\r\n    private alertService = inject(AlertService);\r\n    private navigationUtilService = inject(ArtemisNavigationUtilService);\r\n    private exerciseGroupService = inject(ExerciseGroupService);\r\n\r\n    protected readonly faQuestionCircle = faQuestionCircle;\r\n\r\n    readonly IncludedInOverallScore = IncludedInOverallScore;\r\n    readonly documentationType: DocumentationType = 'FileUpload';\r\n\r\n    @ViewChild('bonusPoints') bonusPoints: NgModel;\r\n    @ViewChild('points') points: NgModel;\r\n    @ViewChild('solutionPublicationDate') solutionPublicationDateField?: FormDateTimePickerComponent;\r\n    @ViewChild('releaseDate') releaseDateField?: FormDateTimePickerComponent;\r\n    @ViewChild('startDate') startDateField?: FormDateTimePickerComponent;\r\n    @ViewChild('dueDate') dueDateField?: FormDateTimePickerComponent;\r\n    @ViewChild('assessmentDueDate') assessmentDateField?: FormDateTimePickerComponent;\r\n    @ViewChild(ExerciseTitleChannelNameComponent) exerciseTitleChannelNameComponent: ExerciseTitleChannelNameComponent;\r\n    @ViewChild(TeamConfigFormGroupComponent) teamConfigFormGroupComponent: TeamConfigFormGroupComponent;\r\n\r\n    isExamMode: boolean;\r\n    fileUploadExercise: FileUploadExercise;\r\n    backupExercise: FileUploadExercise;\r\n    isSaving: boolean;\r\n    exerciseCategories: ExerciseCategory[];\r\n    existingCategories: ExerciseCategory[];\r\n    notificationText?: string;\r\n    domainActionsProblemStatement = [new FormulaAction()];\r\n    domainActionsExampleSolution = [new FormulaAction()];\r\n    isImport: boolean;\r\n    examCourseId?: number;\r\n\r\n    formStatusSections: FormSectionStatus[];\r\n\r\n    // Subscriptions\r\n    titleChannelNameComponentSubscription?: Subscription;\r\n    pointsSubscription?: Subscription;\r\n    bonusPointsSubscription?: Subscription;\r\n    teamSubscription?: Subscription;\r\n\r\n    get editType(): EditType {\r\n        if (this.isImport) {\r\n            return EditType.IMPORT;\r\n        }\r\n        return this.fileUploadExercise.id == undefined ? EditType.CREATE : EditType.UPDATE;\r\n    }\r\n\r\n    /**\r\n     * Initializes information relevant to file upload exercise\r\n     */\r\n    ngOnInit() {\r\n        scrollToTopOfPage();\r\n\r\n        this.isSaving = false;\r\n        this.activatedRoute.data.subscribe(({ fileUploadExercise }) => {\r\n            this.fileUploadExercise = fileUploadExercise;\r\n            this.backupExercise = cloneDeep(this.fileUploadExercise);\r\n            this.examCourseId = getCourseId(fileUploadExercise);\r\n        });\r\n\r\n        this.activatedRoute.url\r\n            .pipe(\r\n                tap(\r\n                    (segments) =>\r\n                        (this.isImport = segments.some((segment) => segment.path === 'import', (this.isExamMode = segments.some((segment) => segment.path === 'exercise-groups')))),\r\n                ),\r\n                switchMap(() => this.activatedRoute.params),\r\n                tap((params) => {\r\n                    this.handleExerciseSettings();\r\n                    this.handleImport(params);\r\n                }),\r\n            )\r\n            .subscribe();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.titleChannelNameComponentSubscription = this.exerciseTitleChannelNameComponent.titleChannelNameComponent.formValidChanges.subscribe(() =>\r\n            this.calculateFormSectionStatus(),\r\n        );\r\n        this.pointsSubscription = this.points?.valueChanges?.subscribe(() => this.calculateFormSectionStatus());\r\n        this.bonusPointsSubscription = this.bonusPoints?.valueChanges?.subscribe(() => this.calculateFormSectionStatus());\r\n        this.teamSubscription = this.teamConfigFormGroupComponent.formValidChanges.subscribe(() => this.calculateFormSectionStatus());\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.titleChannelNameComponentSubscription?.unsubscribe();\r\n        this.pointsSubscription?.unsubscribe();\r\n        this.bonusPointsSubscription?.unsubscribe();\r\n        this.teamSubscription?.unsubscribe();\r\n    }\r\n\r\n    calculateFormSectionStatus() {\r\n        this.formStatusSections = [\r\n            {\r\n                title: 'artemisApp.exercise.sections.general',\r\n                valid: this.exerciseTitleChannelNameComponent.titleChannelNameComponent.formValid,\r\n            },\r\n            { title: 'artemisApp.exercise.sections.mode', valid: this.teamConfigFormGroupComponent.formValid },\r\n            { title: 'artemisApp.exercise.sections.problem', valid: true, empty: !this.fileUploadExercise.problemStatement },\r\n            {\r\n                title: 'artemisApp.exercise.sections.solution',\r\n                valid: Boolean(this.isExamMode || (!this.fileUploadExercise.exampleSolutionPublicationDateError && this.solutionPublicationDateField?.dateInput.valid)),\r\n                empty: !this.fileUploadExercise.exampleSolution || (!this.isExamMode && !this.fileUploadExercise.exampleSolutionPublicationDate),\r\n            },\r\n            {\r\n                title: 'artemisApp.exercise.sections.grading',\r\n                valid: Boolean(\r\n                    this.points.valid &&\r\n                        this.bonusPoints.valid &&\r\n                        (this.isExamMode ||\r\n                            (!this.fileUploadExercise.startDateError &&\r\n                                !this.fileUploadExercise.dueDateError &&\r\n                                !this.fileUploadExercise.assessmentDueDateError &&\r\n                                this.releaseDateField?.dateInput.valid &&\r\n                                this.startDateField?.dateInput.valid &&\r\n                                this.dueDateField?.dateInput.valid &&\r\n                                this.assessmentDateField?.dateInput.valid)),\r\n                ),\r\n                empty:\r\n                    !this.isExamMode &&\r\n                    // if a dayjs object contains an empty date, it is considered \"invalid\"\r\n                    (!this.fileUploadExercise.startDate?.isValid() ||\r\n                        !this.fileUploadExercise.dueDate?.isValid() ||\r\n                        !this.fileUploadExercise.assessmentDueDate?.isValid() ||\r\n                        !this.fileUploadExercise.releaseDate?.isValid()),\r\n            },\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Return to the exercise overview page\r\n     */\r\n    previousState() {\r\n        this.navigationUtilService.navigateBackFromExerciseUpdate(this.fileUploadExercise);\r\n    }\r\n\r\n    private handleImport(params: Params) {\r\n        if (this.isImport) {\r\n            if (this.isExamMode) {\r\n                // The target exerciseId where we want to import into\r\n                const exerciseGroupId = params['exerciseGroupId'];\r\n                const courseId = params['courseId'];\r\n                const examId = params['examId'];\r\n\r\n                this.exerciseGroupService.find(courseId, examId, exerciseGroupId).subscribe((res) => (this.fileUploadExercise.exerciseGroup = res.body!));\r\n                // We reference exam exercises by their exercise group, not their course. Having both would lead to conflicts on the server\r\n                this.fileUploadExercise.course = undefined;\r\n            } else {\r\n                // The target course where we want to import into\r\n                const targetCourseId = params['courseId'];\r\n                this.courseService.find(targetCourseId).subscribe((res) => (this.fileUploadExercise.course = res.body!));\r\n                // We reference normal exercises by their course, having both would lead to conflicts on the server\r\n                this.fileUploadExercise.exerciseGroup = undefined;\r\n            }\r\n            resetForImport(this.fileUploadExercise);\r\n        }\r\n    }\r\n\r\n    private handleExerciseSettings() {\r\n        if (!this.isExamMode) {\r\n            this.exerciseCategories = this.fileUploadExercise.categories || [];\r\n            if (this.examCourseId) {\r\n                this.courseService.findAllCategoriesOfCourse(this.examCourseId).subscribe({\r\n                    next: (categoryRes: HttpResponse<string[]>) => {\r\n                        this.existingCategories = this.exerciseService.convertExerciseCategoriesAsStringFromServer(categoryRes.body!);\r\n                    },\r\n                    error: (error: HttpErrorResponse) => onError(this.alertService, error),\r\n                });\r\n            }\r\n        } else {\r\n            // Lock individual mode for exam exercises\r\n            this.fileUploadExercise.mode = ExerciseMode.INDIVIDUAL;\r\n            this.fileUploadExercise.teamAssignmentConfig = undefined;\r\n            this.fileUploadExercise.teamMode = false;\r\n            // Exam exercises cannot be not included into the total score\r\n            if (this.fileUploadExercise.includedInOverallScore === IncludedInOverallScore.NOT_INCLUDED) {\r\n                this.fileUploadExercise.includedInOverallScore = IncludedInOverallScore.INCLUDED_COMPLETELY;\r\n            }\r\n        }\r\n    }\r\n\r\n    save() {\r\n        this.isSaving = true;\r\n\r\n        new SaveExerciseCommand(this.modalService, this.popupService, this.fileUploadExerciseService, this.backupExercise, this.editType, this.alertService)\r\n            .save(this.fileUploadExercise, this.isExamMode, this.notificationText)\r\n            .subscribe({\r\n                next: (exercise: Exercise) => this.onSaveSuccess(exercise),\r\n                error: (res: HttpErrorResponse) => this.onSaveError(res),\r\n                complete: () => {\r\n                    this.isSaving = false;\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Validates if the date is correct\r\n     */\r\n    validateDate() {\r\n        this.exerciseService.validateDate(this.fileUploadExercise);\r\n        this.calculateFormSectionStatus();\r\n    }\r\n\r\n    /**\r\n     * Updates categories for file upload exercise\r\n     * @param categories list of exercise categories\r\n     */\r\n    updateCategories(categories: ExerciseCategory[]) {\r\n        this.fileUploadExercise.categories = categories;\r\n        this.exerciseCategories = categories;\r\n    }\r\n\r\n    private onSaveSuccess(exercise: Exercise) {\r\n        this.isSaving = false;\r\n\r\n        this.navigationUtilService.navigateForwardFromExerciseUpdateOrCreation(exercise);\r\n    }\r\n\r\n    private onSaveError(error: HttpErrorResponse) {\r\n        if (error.error && error.error.title) {\r\n            this.alertService.addErrorAlert(error.error.title, error.error.message, error.error.params);\r\n        }\r\n        const errorMessage = error.headers.get('X-artemisApp-alert')!;\r\n        this.alertService.addAlert({\r\n            type: AlertType.DANGER,\r\n            message: errorMessage,\r\n            disableTranslation: true,\r\n        });\r\n        this.isSaving = false;\r\n    }\r\n}\r\n", "<form name=\"editForm\" role=\"form\" novalidate #editForm=\"ngForm\">\r\n    <div class=\"d-flex align-items-center gap-2\">\r\n        @if (fileUploadExercise.id && !isImport) {\r\n            <h2 id=\"jhi-file-upload-exercise-heading-edit\" jhiTranslate=\"artemisApp.fileUploadExercise.home.editLabel\"></h2>\r\n        } @else if (!fileUploadExercise.id) {\r\n            <h2 id=\"jhi-file-upload-exercise-heading-create\" jhiTranslate=\"artemisApp.fileUploadExercise.home.createLabel\"></h2>\r\n        } @else if (isImport) {\r\n            <h2 id=\"jhi-file-upload-exercise-heading-import\" jhiTranslate=\"artemisApp.fileUploadExercise.home.importLabel\"></h2>\r\n        }\r\n        <jhi-documentation-button [type]=\"documentationType\" />\r\n    </div>\r\n    <jhi-form-status-bar [formStatusSections]=\"formStatusSections\" />\r\n    <h3 jhiTranslate=\"artemisApp.exercise.sections.general\" id=\"artemisApp.exercise.sections.general\"></h3>\r\n    <div>\r\n        <jhi-exercise-title-channel-name\r\n            [exercise]=\"fileUploadExercise\"\r\n            [course]=\"fileUploadExercise.course\"\r\n            [minTitleLength]=\"3\"\r\n            [isExamMode]=\"isExamMode\"\r\n            [isImport]=\"isImport\"\r\n        />\r\n        @if (!isExamMode) {\r\n            <div class=\"form-group position-relative\">\r\n                <label class=\"form-control-label\" jhiTranslate=\"artemisApp.exercise.categories\"></label>\r\n                <jhi-help-icon text=\"artemisApp.exercise.categoriesTooltip\" />\r\n                <jhi-category-selector [categories]=\"exerciseCategories\" [existingCategories]=\"existingCategories\" (selectedCategories)=\"updateCategories($event)\" />\r\n            </div>\r\n        }\r\n        <hr class=\"mb-5\" />\r\n        <h3 jhiTranslate=\"artemisApp.exercise.sections.mode\" id=\"artemisApp.exercise.sections.mode\"></h3>\r\n        <div class=\"form-group\">\r\n            <label class=\"form-control-label\" jhiTranslate=\"artemisApp.exercise.difficulty\"></label>\r\n            <div>\r\n                <jhi-difficulty-picker [exercise]=\"fileUploadExercise\" />\r\n            </div>\r\n        </div>\r\n        <jhi-team-config-form-group class=\"form-element\" [exercise]=\"fileUploadExercise\" [isImport]=\"isImport\" />\r\n        <hr class=\"mb-5\" />\r\n        <h3 jhiTranslate=\"artemisApp.exercise.sections.problem\" id=\"artemisApp.exercise.sections.problem\"></h3>\r\n        <div class=\"form-group\" id=\"field_problemStatement\">\r\n            <label class=\"form-control-label\" jhiTranslate=\"artemisApp.exercise.problemStatement\" for=\"field_problemStatement\"></label>\r\n            <jhi-markdown-editor-monaco\r\n                class=\"markdown-editor\"\r\n                [domainActions]=\"domainActionsProblemStatement\"\r\n                [(markdown)]=\"fileUploadExercise.problemStatement\"\r\n                (markdownChange)=\"calculateFormSectionStatus()\"\r\n            />\r\n        </div>\r\n        @if (!isExamMode) {\r\n            <div class=\"form-group\">\r\n                <jhi-competency-selection\r\n                    id=\"competencies\"\r\n                    [labelName]=\"'artemisApp.competency.link.title' | artemisTranslate\"\r\n                    [labelTooltip]=\"'artemisApp.competency.link.exercise' | artemisTranslate\"\r\n                    [(ngModel)]=\"fileUploadExercise.competencyLinks\"\r\n                    name=\"competencyLinks\"\r\n                />\r\n            </div>\r\n        }\r\n        <hr class=\"mb-5\" />\r\n        <h3 jhiTranslate=\"artemisApp.exercise.sections.solution\" id=\"artemisApp.exercise.sections.solution\"></h3>\r\n        <!-- TODO we want to have a file upload here and store a PDF, not a text. We could allow to add text in the sample_solution_explanation field -->\r\n        <div class=\"form-group\" id=\"field_exampleSolution\">\r\n            <label class=\"form-control-label\" jhiTranslate=\"artemisApp.exercise.exampleSolution\" for=\"field_exampleSolution\"></label>\r\n            <jhi-markdown-editor-monaco\r\n                class=\"markdown-editor\"\r\n                [domainActions]=\"domainActionsExampleSolution\"\r\n                [(markdown)]=\"fileUploadExercise.exampleSolution\"\r\n                (markdownChange)=\"calculateFormSectionStatus()\"\r\n            />\r\n        </div>\r\n        @if (!isExamMode) {\r\n            <div class=\"form-group\">\r\n                <jhi-date-time-picker\r\n                    #solutionPublicationDate\r\n                    class=\"form-element\"\r\n                    name=\"exampleSolutionPublicationDate\"\r\n                    labelName=\"{{ 'artemisApp.exercise.exampleSolutionPublicationDate' | artemisTranslate }}\"\r\n                    [(ngModel)]=\"fileUploadExercise.exampleSolutionPublicationDate\"\r\n                    [error]=\"fileUploadExercise.exampleSolutionPublicationDateError!\"\r\n                    (valueChange)=\"validateDate()\"\r\n                />\r\n                @if (fileUploadExercise.exampleSolutionPublicationDateError) {\r\n                    <span class=\"invalid-feedback\" jhiTranslate=\"artemisApp.exercise.exampleSolutionPublicationDateError\"></span>\r\n                }\r\n            </div>\r\n        }\r\n        <hr class=\"mb-5\" />\r\n        <h3 jhiTranslate=\"artemisApp.exercise.sections.grading\" id=\"artemisApp.exercise.sections.grading\"></h3>\r\n        @if (!isExamMode) {\r\n            <div class=\"d-flex\">\r\n                <div class=\"form-group flex-grow-1\">\r\n                    <jhi-date-time-picker\r\n                        #releaseDate\r\n                        class=\"form-element\"\r\n                        id=\"pick-releaseDate\"\r\n                        labelName=\"{{ 'artemisApp.exercise.releaseDate' | artemisTranslate }}\"\r\n                        [(ngModel)]=\"fileUploadExercise.releaseDate\"\r\n                        (valueChange)=\"validateDate()\"\r\n                        [error]=\"false\"\r\n                        name=\"releaseDate\"\r\n                    />\r\n                </div>\r\n                <div class=\"form-group flex-grow-1 ms-3\">\r\n                    <jhi-date-time-picker\r\n                        #startDate\r\n                        class=\"form-element\"\r\n                        id=\"pick-startDate\"\r\n                        name=\"startDate\"\r\n                        [startAt]=\"fileUploadExercise.releaseDate\"\r\n                        [min]=\"fileUploadExercise.releaseDate\"\r\n                        [error]=\"!!fileUploadExercise.startDateError\"\r\n                        labelName=\"{{ 'artemisApp.exercise.startDate' | artemisTranslate }}\"\r\n                        (valueChange)=\"validateDate()\"\r\n                        [(ngModel)]=\"fileUploadExercise.startDate\"\r\n                    />\r\n                    @if (fileUploadExercise.startDateError) {\r\n                        <span class=\"invalid-feedback\" jhiTranslate=\"artemisApp.exercise.startDateError\"></span>\r\n                    }\r\n                </div>\r\n            </div>\r\n        }\r\n        @if (!isExamMode) {\r\n            <div class=\"d-flex\">\r\n                <div class=\"form-group flex-grow-1\">\r\n                    <jhi-date-time-picker\r\n                        #dueDate\r\n                        class=\"form-element\"\r\n                        id=\"pick-dueDate\"\r\n                        name=\"dueDate\"\r\n                        [startAt]=\"fileUploadExercise.startDate\"\r\n                        [min]=\"fileUploadExercise.startDate\"\r\n                        [error]=\"!!fileUploadExercise.dueDateError\"\r\n                        labelName=\"{{ 'artemisApp.exercise.dueDate' | artemisTranslate }}\"\r\n                        (valueChange)=\"validateDate()\"\r\n                        [(ngModel)]=\"fileUploadExercise.dueDate\"\r\n                    />\r\n                    @if (fileUploadExercise.dueDateError) {\r\n                        <span class=\"invalid-feedback\" jhiTranslate=\"artemisApp.exercise.dueDateError\"></span>\r\n                    }\r\n                </div>\r\n                <div class=\"form-group flex-grow-1 ms-3\">\r\n                    <jhi-date-time-picker\r\n                        #assessmentDueDate\r\n                        class=\"form-element\"\r\n                        id=\"pick-assessmentDueDate\"\r\n                        name=\"assessmentDueDate\"\r\n                        [startAt]=\"fileUploadExercise.dueDate\"\r\n                        [min]=\"fileUploadExercise.dueDate\"\r\n                        [error]=\"!!fileUploadExercise.assessmentDueDateError\"\r\n                        labelName=\"{{ 'artemisApp.exercise.assessmentDueDate' | artemisTranslate }}\"\r\n                        (valueChange)=\"validateDate()\"\r\n                        [(ngModel)]=\"fileUploadExercise.assessmentDueDate\"\r\n                    />\r\n                    @if (fileUploadExercise.assessmentDueDateError) {\r\n                        <span class=\"invalid-feedback\" jhiTranslate=\"artemisApp.exercise.assessmentDueDateError\"></span>\r\n                    }\r\n                </div>\r\n            </div>\r\n        }\r\n        <div class=\"form-group\">\r\n            <label class=\"form-control-label\" jhiTranslate=\"artemisApp.exercise.includedInOverallScore{{ fileUploadExercise.course ? 'Course' : 'Exam' }}Label\"></label>\r\n            <div>\r\n                <jhi-included-in-overall-score-picker\r\n                    [(includedInOverallScore)]=\"fileUploadExercise.includedInOverallScore\"\r\n                    (includedInOverallScoreChange)=\"validateDate()\"\r\n                    [allowNotIncluded]=\"!isExamMode\"\r\n                />\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"form-control-label\" jhiTranslate=\"artemisApp.exercise.points\" for=\"field_points\"></label>\r\n                    <input\r\n                        required\r\n                        type=\"number\"\r\n                        class=\"form-control\"\r\n                        [customMin]=\"1\"\r\n                        [customMax]=\"9999\"\r\n                        name=\"points\"\r\n                        id=\"field_points\"\r\n                        [(ngModel)]=\"fileUploadExercise.maxPoints\"\r\n                        #points=\"ngModel\"\r\n                    />\r\n                    @if (points?.invalid && (points?.dirty || points?.touched) && points?.errors) {\r\n                        <div class=\"alert alert-danger\" jhiTranslate=\"artemisApp.exercise.pointsError\"></div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div class=\"col\">\r\n                <div class=\"form-group\" [hidden]=\"fileUploadExercise.includedInOverallScore! !== IncludedInOverallScore.INCLUDED_COMPLETELY\">\r\n                    <label class=\"form-control-label\" jhiTranslate=\"artemisApp.exercise.bonusPoints\" for=\"field_bonusPoints\"></label>\r\n                    <input\r\n                        type=\"number\"\r\n                        [required]=\"fileUploadExercise.includedInOverallScore === IncludedInOverallScore.INCLUDED_COMPLETELY\"\r\n                        class=\"form-control\"\r\n                        [customMin]=\"0\"\r\n                        [customMax]=\"9999\"\r\n                        name=\"bonusPoints\"\r\n                        id=\"field_bonusPoints\"\r\n                        [(ngModel)]=\"fileUploadExercise.bonusPoints\"\r\n                        #bonusPoints=\"ngModel\"\r\n                    />\r\n                    @if (bonusPoints?.invalid && (bonusPoints?.dirty || bonusPoints?.touched) && bonusPoints?.errors) {\r\n                        <div\r\n                            class=\"alert alert-danger\"\r\n                            [hidden]=\"fileUploadExercise.includedInOverallScore !== IncludedInOverallScore.INCLUDED_COMPLETELY\"\r\n                            jhiTranslate=\"artemisApp.exercise.bonusPointsError\"\r\n                        ></div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label class=\"form-control-label\" jhiTranslate=\"artemisApp.fileUploadExercise.filePattern\" for=\"field_filePattern\"></label>\r\n            <fa-icon [icon]=\"faQuestionCircle\" class=\"text-secondary\" ngbTooltip=\"{{ 'artemisApp.fileUploadExercise.filePatternInfo' | artemisTranslate }}\" />\r\n            <input required minlength=\"2\" type=\"text\" class=\"form-control\" name=\"filePattern\" id=\"field_filePattern\" [(ngModel)]=\"fileUploadExercise.filePattern\" />\r\n        </div>\r\n        <jhi-presentation-score-checkbox [exercise]=\"fileUploadExercise\" />\r\n        <div class=\"form-group\">\r\n            <label class=\"form-control-label\" jhiTranslate=\"artemisApp.exercise.assessmentInstructions\" for=\"gradingInstructions\"></label>\r\n            <jhi-grading-instructions-details id=\"gradingInstructions\" [exercise]=\"fileUploadExercise\" />\r\n        </div>\r\n    </div>\r\n    <jhi-form-footer\r\n        [isImport]=\"isImport\"\r\n        [isCreation]=\"!fileUploadExercise.id\"\r\n        [isSaving]=\"isSaving\"\r\n        [isDisabled]=\"\r\n            !!(editForm.form.invalid || fileUploadExercise.dueDateError || fileUploadExercise.assessmentDueDateError || fileUploadExercise.exampleSolutionPublicationDateError)\r\n        \"\r\n        (onCancel)=\"previousState()\"\r\n        (save)=\"save()\"\r\n        [(notificationText)]=\"notificationText\"\r\n    />\r\n</form>\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275elementStart", "\u0275\u0275listener", "$event", "\u0275\u0275restoreView", "_r2", "ctx_r2", "\u0275\u0275nextContext", "\u0275\u0275resetView", "updateCategories", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "exerciseCategories", "existingCategories", "\u0275\u0275twoWayListener", "_r4", "i0", "\u0275\u0275twoWayBindingSet", "fileUploadExercise", "competencyLinks", "\u0275\u0275pipeBind1", "\u0275\u0275twoWayProperty", "_r5", "exampleSolutionPublicationDate", "validateDate", "\u0275\u0275template", "FileUploadExerciseUpdateComponent_Conditional_60_Conditional_7_Template", "\u0275\u0275propertyInterpolate", "exampleSolutionPublicationDateError", "\u0275\u0275conditional", "_r6", "releaseDate", "startDate", "FileUploadExerciseUpdateComponent_Conditional_65_Conditional_16_Template", "startDateError", "_r7", "dueDate", "FileUploadExerciseUpdateComponent_Conditional_66_Conditional_9_Template", "assessmentDueDate", "FileUploadExerciseUpdateComponent_Conditional_66_Conditional_17_Template", "dueDateError", "assessmentDueDateError", "includedInOverallScore", "IncludedInOverallScore", "INCLUDED_COMPLETELY", "FileUploadExerciseUpdateComponent", "fileUploadExerciseService", "inject", "FileUploadExerciseService", "modalService", "NgbModal", "popupService", "ExerciseUpdateWarningService", "activatedRoute", "ActivatedRoute", "courseService", "CourseManagementService", "exerciseService", "ExerciseService", "alertService", "AlertService", "navigationUtilService", "ArtemisNavigationUtilService", "exerciseGroupService", "ExerciseGroupService", "faQuestionCircle", "documentationType", "bonusPoints", "points", "solutionPublicationDateField", "releaseDateField", "startDateField", "dueDateField", "assessmentDateField", "exerciseTitleChannelNameComponent", "teamConfigFormGroupComponent", "isExamMode", "backupExercise", "isSaving", "notificationText", "domainActionsProblemStatement", "FormulaAction", "domainActionsExampleSolution", "isImport", "examCourseId", "formStatusSections", "titleChannelNameComponentSubscription", "pointsSubscription", "bonusPointsSubscription", "teamSubscription", "editType", "EditType", "IMPORT", "id", "undefined", "CREATE", "UPDATE", "ngOnInit", "scrollToTopOfPage", "data", "subscribe", "cloneDeep", "getCourseId", "url", "pipe", "tap", "segments", "some", "segment", "path", "switchMap", "params", "handleExerciseSettings", "handleImport", "ngAfterViewInit", "titleChannelNameComponent", "formValidChanges", "calculateFormSectionStatus", "valueChanges", "ngOnDestroy", "unsubscribe", "title", "valid", "formValid", "empty", "problemStatement", "Boolean", "dateInput", "exampleSolution", "isValid", "previousState", "navigateBackFromExerciseUpdate", "exerciseGroupId", "courseId", "examId", "find", "res", "exerciseGroup", "body", "course", "targetCourseId", "resetForImport", "mode", "ExerciseMode", "INDIVIDUAL", "teamAssignmentConfig", "teamMode", "NOT_INCLUDED", "categories", "findAllCategoriesOfCourse", "next", "categoryRes", "convertExerciseCategoriesAsStringFromServer", "error", "onError", "save", "SaveExerciseCommand", "exercise", "onSaveSuccess", "onSaveError", "complete", "navigateForwardFromExerciseUpdateOrCreation", "addErrorAlert", "message", "errorMessage", "headers", "get", "addAlert", "type", "AlertType", "DANGER", "disableTranslation", "selectors", "viewQuery", "rf", "ctx", "ExerciseTitleChannelNameComponent", "TeamConfigFormGroupComponent", "FileUploadExerciseUpdateComponent_Conditional_5_Template", "FileUploadExerciseUpdateComponent_Conditional_6_Template", "FileUploadExerciseUpdateComponent_Conditional_7_Template", "FileUploadExerciseUpdateComponent_Conditional_19_Template", "_r1", "FileUploadExerciseUpdateComponent_Conditional_47_Template", "FileUploadExerciseUpdateComponent_Conditional_60_Template", "FileUploadExerciseUpdateComponent_Conditional_65_Template", "FileUploadExerciseUpdateComponent_Conditional_66_Template", "maxPoints", "FileUploadExerciseUpdateComponent_Conditional_88_Template", "FileUploadExerciseUpdateComponent_Conditional_100_Template", "filePattern", "\u0275\u0275propertyInterpolate1", "points_r9", "invalid", "dirty", "touched", "errors", "bonusPoints_r10", "editForm_r8", "form", "FormsModule", "\u0275NgNoValidate", "DefaultValueAccessor", "NumberValueAccessor", "NgControlStatus", "NgControlStatusGroup", "RequiredValidator", "MinLengthValidator", "NgModel", "NgForm", "TranslateDirective", "DocumentationButtonComponent", "FormStatusBarComponent", "HelpIconComponent", "CategorySelectorComponent", "DifficultyPickerComponent", "MarkdownEditorMonacoComponent", "CompetencySelectionComponent", "FormDateTimePickerComponent", "IncludedInOverallScorePickerComponent", "CustomMinDirective", "CustomMaxDirective", "FaIconComponent", "NgbTooltip", "PresentationScoreComponent", "GradingInstructionsDetailsComponent", "FormFooterComponent", "ArtemisTranslatePipe", "encapsulation", "changeDetection"]
}
