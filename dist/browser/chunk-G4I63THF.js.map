{
  "version": 3,
  "sources": ["src/main/webapp/app/entities/participation/participation.model.ts"],
  "sourcesContent": ["import { BaseEntity } from 'app/shared/model/base-entity';\r\nimport dayjs from 'dayjs/esm';\r\nimport { Exercise } from 'app/entities/exercise.model';\r\nimport { ProgrammingExerciseStudentParticipation } from 'app/entities/participation/programming-exercise-student-participation.model';\r\nimport { StudentParticipation } from 'app/entities/participation/student-participation.model';\r\nimport { SolutionProgrammingExerciseParticipation } from 'app/entities/participation/solution-programming-exercise-participation.model';\r\nimport { TemplateProgrammingExerciseParticipation } from 'app/entities/participation/template-programming-exercise-participation.model';\r\nimport { Submission } from 'app/entities/submission.model';\r\nimport { Result } from 'app/entities/result.model';\r\n\r\nexport enum InitializationState {\r\n    /**\r\n     * The InitializationState enumeration.\r\n     * INITIALIZED: The participation is set up for submissions from the student\r\n     * FINISHED: Text- / Modelling: At least one submission is done. Quiz: No further submissions should be possible\r\n     */\r\n    UNINITIALIZED = 'UNINITIALIZED',\r\n    REPO_COPIED = 'REPO_COPIED',\r\n    REPO_CONFIGURED = 'REPO_CONFIGURED',\r\n    BUILD_PLAN_COPIED = 'BUILD_PLAN_COPIED',\r\n    BUILD_PLAN_CONFIGURED = 'BUILD_PLAN_CONFIGURED',\r\n    INITIALIZED = 'INITIALIZED',\r\n    FINISHED = 'FINISHED',\r\n    INACTIVE = 'INACTIVE',\r\n}\r\n\r\n// IMPORTANT NOTICE: The following strings have to be consistent with the ones defined in Participation.java\r\nexport enum ParticipationType {\r\n    STUDENT = 'student',\r\n    PROGRAMMING = 'programming',\r\n    TEMPLATE = 'template',\r\n    SOLUTION = 'solution',\r\n}\r\n\r\nexport abstract class Participation implements BaseEntity {\r\n    public id?: number;\r\n\r\n    public initializationState?: InitializationState;\r\n    public initializationDate?: dayjs.Dayjs;\r\n    public individualDueDate?: dayjs.Dayjs;\r\n    public presentationScore?: number;\r\n    /**\r\n     * @deprecated This property will be removed in Artemis 8.0. Use `submissions.results` instead.\r\n     */\r\n    public results?: Result[];\r\n    public submissions?: Submission[];\r\n    public exercise?: Exercise;\r\n    public type?: ParticipationType;\r\n\r\n    // workaround for strict template here, only used in case of StudentParticipation\r\n    public participantName?: string;\r\n    public participantIdentifier?: string;\r\n\r\n    // transient\r\n    public submissionCount?: number;\r\n\r\n    constructor(type: ParticipationType) {\r\n        this.type = type;\r\n    }\r\n}\r\n\r\n/**\r\n * Gets the exercise of a given participation, if possible.\r\n *\r\n * This is needed as different participation types may use different exercise attributes (e.g. not 'exercise' but 'programmingExercise').\r\n */\r\nexport const getExercise = (participation: Participation): Exercise | undefined => {\r\n    if (participation) {\r\n        switch (participation.type) {\r\n            case ParticipationType.PROGRAMMING:\r\n                return (participation as ProgrammingExerciseStudentParticipation).exercise;\r\n            case ParticipationType.STUDENT:\r\n                return (participation as StudentParticipation).exercise;\r\n            case ParticipationType.SOLUTION: // it could be stored in both programmingExercise or exercise\r\n                return (participation as SolutionProgrammingExerciseParticipation).programmingExercise ?? (participation as SolutionProgrammingExerciseParticipation).exercise;\r\n            case ParticipationType.TEMPLATE: // it could be stored in both programmingExercise or exercise\r\n                return (participation as TemplateProgrammingExerciseParticipation).programmingExercise ?? (participation as TemplateProgrammingExerciseParticipation).exercise;\r\n        }\r\n    }\r\n};\r\n"],
  "mappings": "AAUA,IAAYA,EAAZ,SAAYA,EAAmB,CAM3BA,OAAAA,EAAA,cAAA,gBACAA,EAAA,YAAA,cACAA,EAAA,gBAAA,kBACAA,EAAA,kBAAA,oBACAA,EAAA,sBAAA,wBACAA,EAAA,YAAA,cACAA,EAAA,SAAA,WACAA,EAAA,SAAA,WAbQA,CAcZ,EAdYA,GAAmB,CAAA,CAAA,EAiBnBC,EAAZ,SAAYA,EAAiB,CACzBA,OAAAA,EAAA,QAAA,UACAA,EAAA,YAAA,cACAA,EAAA,SAAA,WACAA,EAAA,SAAA,WAJQA,CAKZ,EALYA,GAAiB,CAAA,CAAA,EAOPC,EAAhB,KAA6B,CACxBC,GAEAC,oBACAC,mBACAC,kBACAC,kBAIAC,QACAC,YACAC,SACAC,KAGAC,gBACAC,sBAGAC,gBAEPC,YAAYJ,EAAuB,CAC/B,KAAKA,KAAOA,CAChB,GAQSK,EAAeC,GAAsD,CAC9E,GAAIA,EACA,OAAQA,EAAcN,KAAI,CACtB,KAAKV,EAAkBiB,YACnB,OAAQD,EAA0DP,SACtE,KAAKT,EAAkBkB,QACnB,OAAQF,EAAuCP,SACnD,KAAKT,EAAkBmB,SACnB,OAAQH,EAA2DI,qBAAwBJ,EAA2DP,SAC1J,KAAKT,EAAkBqB,SACnB,OAAQL,EAA2DI,qBAAwBJ,EAA2DP,QAC9J,CAER",
  "names": ["InitializationState", "ParticipationType", "Participation", "id", "initializationState", "initializationDate", "individualDueDate", "presentationScore", "results", "submissions", "exercise", "type", "participantName", "participantIdentifier", "submissionCount", "constructor", "getExercise", "participation", "PROGRAMMING", "STUDENT", "SOLUTION", "programmingExercise", "TEMPLATE"]
}
