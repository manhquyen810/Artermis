{
  "version": 3,
  "sources": ["src/main/webapp/app/lecture/lecture-unit/lecture-unit-management/edit-text-unit/edit-text-unit.component.ts", "src/main/webapp/app/lecture/lecture-unit/lecture-unit-management/edit-text-unit/edit-text-unit.component.html"],
  "sourcesContent": ["import { Component, OnInit, inject } from '@angular/core';\r\nimport { TextUnit } from 'app/entities/lecture-unit/textUnit.model';\r\nimport { TextUnitFormData } from 'app/lecture/lecture-unit/lecture-unit-management/text-unit-form/text-unit-form.component';\r\nimport { TextUnitService } from 'app/lecture/lecture-unit/lecture-unit-management/textUnit.service';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { onError } from 'app/shared/util/global.utils';\r\nimport { finalize, switchMap, take } from 'rxjs/operators';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { combineLatest } from 'rxjs';\r\nimport { LectureUnitLayoutComponent } from '../lecture-unit-layout/lecture-unit-layout.component';\r\nimport { TextUnitFormComponent } from '../text-unit-form/text-unit-form.component';\r\n\r\n@Component({\r\n    selector: 'jhi-edit-text-unit',\r\n    templateUrl: './edit-text-unit.component.html',\r\n    imports: [LectureUnitLayoutComponent, TextUnitFormComponent],\r\n})\r\nexport class EditTextUnitComponent implements OnInit {\r\n    private activatedRoute = inject(ActivatedRoute);\r\n    private router = inject(Router);\r\n    private textUnitService = inject(TextUnitService);\r\n    private alertService = inject(AlertService);\r\n\r\n    isLoading = false;\r\n    textUnit: TextUnit;\r\n    formData: TextUnitFormData;\r\n    lectureId: number;\r\n\r\n    ngOnInit(): void {\r\n        this.isLoading = true;\r\n        const lectureRoute = this.activatedRoute.parent!.parent!;\r\n        combineLatest([this.activatedRoute.paramMap, lectureRoute.paramMap])\r\n            .pipe(\r\n                take(1),\r\n                switchMap(([params, parentParams]) => {\r\n                    const textUnitId = Number(params.get('textUnitId'));\r\n                    this.lectureId = Number(parentParams.get('lectureId'));\r\n                    return this.textUnitService.findById(textUnitId, this.lectureId);\r\n                }),\r\n                finalize(() => (this.isLoading = false)),\r\n            )\r\n            .subscribe({\r\n                next: (textUnitResponse: HttpResponse<TextUnit>) => {\r\n                    this.textUnit = textUnitResponse.body!;\r\n\r\n                    this.formData = {\r\n                        name: this.textUnit.name,\r\n                        releaseDate: this.textUnit.releaseDate,\r\n                        content: this.textUnit.content,\r\n                        competencyLinks: this.textUnit.competencyLinks,\r\n                    };\r\n                },\r\n                error: (res: HttpErrorResponse) => onError(this.alertService, res),\r\n            });\r\n    }\r\n\r\n    updateTextUnit(formData: TextUnitFormData) {\r\n        const { name, releaseDate, content, competencyLinks } = formData;\r\n        this.textUnit.name = name;\r\n        this.textUnit.releaseDate = releaseDate;\r\n        this.textUnit.content = content;\r\n        this.textUnit.competencyLinks = competencyLinks;\r\n\r\n        this.isLoading = true;\r\n        this.textUnitService\r\n            .update(this.textUnit, this.lectureId)\r\n            .pipe(\r\n                finalize(() => {\r\n                    this.isLoading = false;\r\n                    // navigate back to unit-management from :courseId/lectures/:lectureId/unit-management/text-units/:textUnitId/edit\r\n                    this.router.navigate(['../../../'], { relativeTo: this.activatedRoute });\r\n                }),\r\n            )\r\n            .subscribe({\r\n                error: (res: HttpErrorResponse) => onError(this.alertService, res),\r\n            });\r\n    }\r\n}\r\n", "<jhi-lecture-unit-layout [isLoading]=\"isLoading\">\r\n    <jhi-text-unit-form [formData]=\"formData\" (formSubmitted)=\"updateTextUnit($event)\" [isEditMode]=\"true\" />\r\n</jhi-lecture-unit-layout>\r\n"],
  "mappings": "y4EAkBA,IAAaA,GAAqB,IAAA,CAA5B,MAAOA,CAAqB,CACtBC,eAAiBC,EAAOC,CAAc,EACtCC,OAASF,EAAOG,CAAM,EACtBC,gBAAkBJ,EAAOK,CAAe,EACxCC,aAAeN,EAAOO,CAAY,EAE1CC,UAAY,GACZC,SACAC,SACAC,UAEAC,UAAQ,CACJ,KAAKJ,UAAY,GACjB,IAAMK,EAAe,KAAKd,eAAee,OAAQA,OACjDC,EAAc,CAAC,KAAKhB,eAAeiB,SAAUH,EAAaG,QAAQ,CAAC,EAC9DC,KACGC,EAAK,CAAC,EACNC,EAAU,CAAC,CAACC,EAAQC,CAAY,IAAK,CACjC,IAAMC,EAAaC,OAAOH,EAAOI,IAAI,YAAY,CAAC,EAClD,YAAKb,UAAYY,OAAOF,EAAaG,IAAI,WAAW,CAAC,EAC9C,KAAKpB,gBAAgBqB,SAASH,EAAY,KAAKX,SAAS,CACnE,CAAC,EACDe,EAAS,IAAO,KAAKlB,UAAY,EAAM,CAAC,EAE3CmB,UAAU,CACPC,KAAOC,GAA4C,CAC/C,KAAKpB,SAAWoB,EAAiBC,KAEjC,KAAKpB,SAAW,CACZqB,KAAM,KAAKtB,SAASsB,KACpBC,YAAa,KAAKvB,SAASuB,YAC3BC,QAAS,KAAKxB,SAASwB,QACvBC,gBAAiB,KAAKzB,SAASyB,gBAEvC,EACAC,MAAQC,GAA2BC,EAAQ,KAAK/B,aAAc8B,CAAG,EACpE,CACT,CAEAE,eAAe5B,EAA0B,CACrC,GAAM,CAAEqB,KAAAA,EAAMC,YAAAA,EAAaC,QAAAA,EAASC,gBAAAA,CAAe,EAAKxB,EACxD,KAAKD,SAASsB,KAAOA,EACrB,KAAKtB,SAASuB,YAAcA,EAC5B,KAAKvB,SAASwB,QAAUA,EACxB,KAAKxB,SAASyB,gBAAkBA,EAEhC,KAAK1B,UAAY,GACjB,KAAKJ,gBACAmC,OAAO,KAAK9B,SAAU,KAAKE,SAAS,EACpCM,KACGS,EAAS,IAAK,CACV,KAAKlB,UAAY,GAEjB,KAAKN,OAAOsC,SAAS,CAAC,WAAW,EAAG,CAAEC,WAAY,KAAK1C,cAAc,CAAE,CAC3E,CAAC,CAAC,EAEL4B,UAAU,CACPQ,MAAQC,GAA2BC,EAAQ,KAAK/B,aAAc8B,CAAG,EACpE,CACT,4CA3DStC,EAAqB,2BAArBA,EAAqB4C,UAAA,CAAA,CAAA,oBAAA,CAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,WAAA,EAAA,CAAA,EAAA,gBAAA,WAAA,YAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,IClBlCE,EAAA,EAAA,0BAAA,CAAA,EACIC,EAAA,EAAA;KAAA,EAAAD,EAAA,EAAA,qBAAA,CAAA,EAA0CE,EAAA,gBAAA,SAAAC,EAAA,CAAA,OAAiBJ,EAAAV,eAAAc,CAAA,CAAsB,CAAA,EAAjFC,EAAA,EACJH,EAAA,EAAA;CAAA,EAAAG,EAAA,EACAH,EAAA,EAAA;CAAA,SAHyBI,EAAA,YAAAN,EAAAxC,SAAA,EACD+C,EAAA,CAAA,EAAAD,EAAA,WAAAN,EAAAtC,QAAA,EAAqB,aAAA,EAAA,kBDe/B8C,EAA4BC,CAAqB,EAAAC,cAAA,CAAA,CAAA,SAElD5D,CAAqB,GAAA",
  "names": ["EditTextUnitComponent", "activatedRoute", "inject", "ActivatedRoute", "router", "Router", "textUnitService", "TextUnitService", "alertService", "AlertService", "isLoading", "textUnit", "formData", "lectureId", "ngOnInit", "lectureRoute", "parent", "combineLatest", "paramMap", "pipe", "take", "switchMap", "params", "parentParams", "textUnitId", "Number", "get", "findById", "finalize", "subscribe", "next", "textUnitResponse", "body", "name", "releaseDate", "content", "competencyLinks", "error", "res", "onError", "updateTextUnit", "update", "navigate", "relativeTo", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275listener", "$event", "\u0275\u0275elementEnd", "\u0275\u0275property", "\u0275\u0275advance", "LectureUnitLayoutComponent", "TextUnitFormComponent", "encapsulation"]
}
