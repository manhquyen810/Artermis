import{c as t}from"./chunk-CK7FH6VF.js";import{a as c}from"./chunk-G3JOQOSD.js";import{O as h}from"./chunk-IOA4DPXY.js";import{Ea as a,ya as u,z as o}from"./chunk-5LC5EQRR.js";import{a as l}from"./chunk-3E746U5Y.js";var E=(()=>{class n{http=a(h);exerciseService=a(t);resourceUrl="api/text/text-exercises";create(r){let e=t.convertExerciseDatesFromClient(r);return e=t.setBonusPointsConstrainedByIncludedInOverallScore(e),e.categories=t.stringifyExerciseCategories(e),this.http.post(this.resourceUrl,e,{observe:"response"}).pipe(o(s=>this.exerciseService.processExerciseEntityResponse(s)))}import(r){let e=t.convertExerciseDatesFromClient(r);return e=t.setBonusPointsConstrainedByIncludedInOverallScore(e),e.categories=t.stringifyExerciseCategories(e),this.http.post(`${this.resourceUrl}/import/${r.id}`,e,{observe:"response"}).pipe(o(s=>this.exerciseService.processExerciseEntityResponse(s)))}update(r,e){let s=c(e),i=t.convertExerciseDatesFromClient(r);return i=t.setBonusPointsConstrainedByIncludedInOverallScore(i),i.categories=t.stringifyExerciseCategories(i),this.http.put(this.resourceUrl,i,{params:s,observe:"response"}).pipe(o(p=>this.exerciseService.processExerciseEntityResponse(p)))}find(r,e=!1){return this.http.get(`${this.resourceUrl}/${r}`,{observe:"response",params:{withPlagiarismDetectionConfig:e}}).pipe(o(s=>this.exerciseService.processExerciseEntityResponse(s)))}query(r){let e=c(r);return this.http.get(this.resourceUrl,{params:e,observe:"response"}).pipe(o(s=>this.exerciseService.processExerciseEntityArrayResponse(s)))}delete(r){return this.http.delete(`${this.resourceUrl}/${r}`,{observe:"response"})}checkPlagiarism(r,e){return this.http.get(`${this.resourceUrl}/${r}/check-plagiarism`,{observe:"response",params:l({},e?.toParams())}).pipe(o(s=>s.body))}getLatestPlagiarismResult(r){return this.http.get(`${this.resourceUrl}/${r}/plagiarism-result`,{observe:"response"}).pipe(o(e=>e.body))}reevaluateAndUpdate(r,e){let s=c(e),i=t.convertExerciseDatesFromClient(r);return i=t.setBonusPointsConstrainedByIncludedInOverallScore(i),i.categories=t.stringifyExerciseCategories(i),this.http.put(`${this.resourceUrl}/${r.id}/re-evaluate`,i,{params:s,observe:"response"}).pipe(o(p=>this.exerciseService.processExerciseEntityResponse(p)))}calculateTutorEffort(r,e){return this.http.get(`api/assessment/courses/${e}/exercises/${r}/tutor-effort`,{observe:"response"}).pipe(o(s=>s.body))}static \u0275fac=function(e){return new(e||n)};static \u0275prov=u({token:n,factory:n.\u0275fac,providedIn:"root"})}return n})();export{E as a};
//# sourceMappingURL=chunk-3FYXV53Z.js.map
