{
  "version": 3,
  "sources": ["src/main/webapp/app/course/manage/course-lti-configuration/edit-course-lti-configuration.component.ts", "src/main/webapp/app/course/manage/course-lti-configuration/edit-course-lti-configuration.component.html"],
  "sourcesContent": ["import { Component, ElementRef, OnInit, ViewChild, inject } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { combineLatest, finalize } from 'rxjs';\r\nimport { HasAnyAuthorityDirective } from 'app/shared/auth/has-any-authority.directive';\r\nimport { OnlineCourseConfiguration } from 'app/entities/online-course-configuration.model';\r\nimport { FormControl, FormGroup, FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { faBan, faSave } from '@fortawesome/free-solid-svg-icons';\r\nimport { regexValidator } from 'app/shared/form/shortname-validator.directive';\r\nimport { LOGIN_PATTERN } from 'app/shared/constants/input.constants';\r\nimport { CourseManagementService } from 'app/course/manage/course-management.service';\r\nimport { LtiPlatformConfiguration } from 'app/admin/lti-configuration/lti-configuration.model';\r\nimport { LtiConfigurationService } from 'app/admin/lti-configuration/lti-configuration.service';\r\nimport { ITEMS_PER_PAGE } from 'app/shared/constants/pagination.constants';\r\nimport { HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { NgbDropdown, NgbDropdownButtonItem, NgbDropdownItem, NgbDropdownMenu, NgbDropdownToggle, NgbPagination, NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { KeyValuePipe } from '@angular/common';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\nimport { RemoveKeysPipe } from 'app/shared/pipes/remove-keys.pipe';\r\nimport { ItemCountComponent } from 'app/shared/pagination/item-count.component';\r\nimport { HelpIconComponent } from 'app/shared/components/help-icon.component';\r\n\r\n@Component({\r\n    selector: 'jhi-edit-course-lti-configuration',\r\n    templateUrl: './edit-course-lti-configuration.component.html',\r\n    imports: [\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        TranslateDirective,\r\n        NgbDropdown,\r\n        NgbDropdownToggle,\r\n        NgbDropdownMenu,\r\n        NgbDropdownButtonItem,\r\n        NgbDropdownItem,\r\n        NgbTooltip,\r\n        NgbPagination,\r\n        FaIconComponent,\r\n        KeyValuePipe,\r\n        ArtemisTranslatePipe,\r\n        RemoveKeysPipe,\r\n        ItemCountComponent,\r\n        HelpIconComponent,\r\n        // NOTE: this is actually used in the html template, otherwise *jhiHasAnyAuthority would not work\r\n        HasAnyAuthorityDirective,\r\n    ],\r\n})\r\nexport class EditCourseLtiConfigurationComponent implements OnInit {\r\n    private route = inject(ActivatedRoute);\r\n    private courseService = inject(CourseManagementService);\r\n    private router = inject(Router);\r\n    private ltiConfigurationService = inject(LtiConfigurationService);\r\n\r\n    @ViewChild('scrollableContent') scrollableContent: ElementRef;\r\n\r\n    course: Course;\r\n    onlineCourseConfiguration: OnlineCourseConfiguration;\r\n    onlineCourseConfigurationForm: FormGroup;\r\n    ltiConfiguredPlatforms: LtiPlatformConfiguration[] = [];\r\n\r\n    page = 1;\r\n    itemsPerPage = ITEMS_PER_PAGE;\r\n    totalItems = 0;\r\n\r\n    isSaving = false;\r\n    loading = false;\r\n\r\n    // Icons\r\n    faBan = faBan;\r\n    faSave = faSave;\r\n\r\n    /**\r\n     * Gets the configuration for the course encoded in the route and prepares the form\r\n     */\r\n    ngOnInit() {\r\n        this.route.data.subscribe(({ course }) => {\r\n            if (course) {\r\n                this.course = course;\r\n                this.onlineCourseConfiguration = course.onlineCourseConfiguration;\r\n            }\r\n        });\r\n\r\n        this.onlineCourseConfigurationForm = new FormGroup({\r\n            id: new FormControl(this.onlineCourseConfiguration.id),\r\n            userPrefix: new FormControl(this.onlineCourseConfiguration?.userPrefix, { validators: [regexValidator(LOGIN_PATTERN)] }),\r\n            requireExistingUser: new FormControl(this.onlineCourseConfiguration.requireExistingUser),\r\n            ltiPlatformConfiguration: new FormControl(''),\r\n        });\r\n\r\n        this.loadInitialPlatforms();\r\n    }\r\n\r\n    loadInitialPlatforms() {\r\n        combineLatest({ data: this.route.data, params: this.route.queryParamMap }).subscribe(({ params }) => {\r\n            const page = params.get('page');\r\n            this.page = page !== null ? +page : 1;\r\n            this.loadData();\r\n        });\r\n    }\r\n\r\n    loadData(): void {\r\n        this.ltiConfigurationService\r\n            .query({\r\n                page: this.page - 1,\r\n                size: this.itemsPerPage,\r\n                sort: ['id', 'asc'],\r\n            })\r\n            .subscribe((res: HttpResponse<LtiPlatformConfiguration[]>) => this.onSuccess(res.body, res.headers));\r\n    }\r\n\r\n    transition(): void {\r\n        this.router.navigate(['/admin/lti-configuration'], {\r\n            queryParams: {\r\n                page: this.page,\r\n                sort: ['id', 'asc'],\r\n            },\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Save the changes to the online course configuration\r\n     */\r\n    save() {\r\n        this.isSaving = true;\r\n        const onlineCourseConfiguration = this.onlineCourseConfigurationForm.getRawValue();\r\n        this.courseService\r\n            .updateOnlineCourseConfiguration(this.course.id!, onlineCourseConfiguration)\r\n            .pipe(\r\n                finalize(() => {\r\n                    this.isSaving = false;\r\n                }),\r\n            )\r\n            .subscribe({\r\n                next: () => this.onSaveSuccess(),\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Action on successful online course configuration or edit\r\n     */\r\n    private onSaveSuccess() {\r\n        this.isSaving = false;\r\n        this.navigateToLtiConfigurationPage();\r\n    }\r\n\r\n    private onSuccess(platforms: LtiPlatformConfiguration[] | null, headers: HttpHeaders): void {\r\n        this.totalItems = Number(headers.get('X-Total-Count'));\r\n        this.ltiConfiguredPlatforms = platforms || [];\r\n    }\r\n    /**\r\n     * Gets the user prefix\r\n     */\r\n    get userPrefix() {\r\n        return this.onlineCourseConfigurationForm.get('userPrefix')!;\r\n    }\r\n\r\n    /**\r\n     * Returns to the lti configuration page\r\n     */\r\n    navigateToLtiConfigurationPage() {\r\n        this.router.navigate(['course-management', this.course.id!.toString(), 'lti-configuration']);\r\n    }\r\n\r\n    setPlatform(platform: LtiPlatformConfiguration) {\r\n        this.onlineCourseConfiguration.ltiPlatformConfiguration = platform;\r\n        this.onlineCourseConfigurationForm.get('ltiPlatformConfiguration')?.setValue(platform);\r\n    }\r\n\r\n    getLtiPlatform(platform: LtiPlatformConfiguration) {\r\n        const customName = platform.customName ? platform.customName : '';\r\n        const originalUrl = platform.originalUrl ? platform.originalUrl : '';\r\n\r\n        return customName + ' ' + originalUrl;\r\n    }\r\n}\r\n", "<form [formGroup]=\"onlineCourseConfigurationForm\" (ngSubmit)=\"save()\" #formDir=\"ngForm\">\r\n    <div class=\"modal-header\">\r\n        <h4 class=\"modal-title\" id=\"myProgrammingExerciseLabel\" jhiTranslate=\"artemisApp.lti.edit.configurationForCourse\" [translateValues]=\"{ title: course?.title }\">\r\n            LTI Configuration for course {{ course?.title }}\r\n        </h4>\r\n    </div>\r\n    <h4 class=\"modal-title mt-4\" id=\"generalConfiguration\" jhiTranslate=\"artemisApp.lti.generalConfiguration\"></h4>\r\n    <div class=\"form-group mt-2\">\r\n        <label class=\"form-control-label\" jhiTranslate=\"artemisApp.lti.userPrefix\" for=\"field_userPrefix\"></label>\r\n        <jhi-help-icon text=\"artemisApp.lti.edit.userPrefixTooltip\" />\r\n        <input required type=\"text\" class=\"form-control\" name=\"userPrefix\" id=\"field_userPrefix\" formControlName=\"userPrefix\" />\r\n        @if (userPrefix.invalid && (userPrefix.dirty || userPrefix.touched)) {\r\n            @if ((userPrefix.errors! | keyvalue | removekeys: ['required']).length > 0) {\r\n                <div class=\"alert alert-danger\">\r\n                    @for (e of userPrefix.errors! | keyvalue | removekeys: ['required']; track e) {\r\n                        <div>\r\n                            <div [jhiTranslate]=\"'artemisApp.lti.edit.form.userPrefix' + '.' + e.key\"></div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            }\r\n        }\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <input\r\n            type=\"checkbox\"\r\n            class=\"form-check-input\"\r\n            name=\"requireExistingUser\"\r\n            id=\"field_requireExistingUser\"\r\n            [checked]=\"course.onlineCourseConfiguration?.requireExistingUser\"\r\n            formControlName=\"requireExistingUser\"\r\n        />\r\n        <label class=\"form-control-label\" jhiTranslate=\"artemisApp.lti.requireExistingUser\" for=\"field_requireExistingUser\"></label>\r\n        <jhi-help-icon text=\"artemisApp.lti.edit.requireExistingUserTooltip\" />\r\n    </div>\r\n    <div *jhiHasAnyAuthority=\"'ROLE_ADMIN'\">\r\n        <h4 class=\"modal-title mt-4\" id=\"lti13\" jhiTranslate=\"artemisApp.lti.version13\"></h4>\r\n        <div class=\"form-group mt-2\">\r\n            <span jhiTranslate=\"artemisApp.lti13.externalToolSettings\"></span>\r\n            <jhi-help-icon text=\"artemisApp.lti13.editExternalToolSettingsTooltip\" />\r\n            <div class=\"form-group\">\r\n                <div ngbDropdown class=\"d-inline-block me-2\">\r\n                    <button class=\"btn btn-outline-primary\" ngbDropdownToggle type=\"button\">\r\n                        {{\r\n                            onlineCourseConfiguration.ltiPlatformConfiguration\r\n                                ? getLtiPlatform(onlineCourseConfiguration.ltiPlatformConfiguration)\r\n                                : ('artemisApp.lti13.selectExternalTool' | artemisTranslate)\r\n                        }}\r\n                    </button>\r\n                    <div ngbDropdownMenu>\r\n                        @for (platform of ltiConfiguredPlatforms; track platform) {\r\n                            <button\r\n                                type=\"button\"\r\n                                (click)=\"setPlatform(platform)\"\r\n                                [class.selected]=\"platform.id === onlineCourseConfiguration.ltiPlatformConfiguration?.id\"\r\n                                [ngbTooltip]=\"platform.customName\"\r\n                                ngbDropdownItem\r\n                            >\r\n                                {{ getLtiPlatform(platform) }}\r\n                            </button>\r\n                        }\r\n                        <div>\r\n                            <div class=\"row justify-content-center\">\r\n                                <jhi-item-count [params]=\"{ page: page, totalItems: totalItems, itemsPerPage: itemsPerPage }\" />\r\n                            </div>\r\n                            <div class=\"row justify-content-center\">\r\n                                <ngb-pagination\r\n                                    [collectionSize]=\"totalItems\"\r\n                                    [(page)]=\"page\"\r\n                                    [pageSize]=\"itemsPerPage\"\r\n                                    [maxSize]=\"5\"\r\n                                    [rotate]=\"true\"\r\n                                    [boundaryLinks]=\"true\"\r\n                                    (pageChange)=\"transition()\"\r\n                                    [disabled]=\"false\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"mt-3 d-flex\">\r\n        <button type=\"button\" id=\"cancel-save\" class=\"btn btn-secondary\" (click)=\"navigateToLtiConfigurationPage()\">\r\n            <fa-icon [icon]=\"faBan\" />&nbsp;<span jhiTranslate=\"entity.action.cancel\"></span>\r\n        </button>\r\n        <button type=\"submit\" id=\"save-entity\" [disabled]=\"onlineCourseConfigurationForm.invalid || isSaving\" class=\"btn btn-primary ms-2\">\r\n            <fa-icon [icon]=\"faSave\" />&nbsp;<span jhiTranslate=\"entity.action.save\"></span>\r\n        </button>\r\n    </div>\r\n</form>\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "e_r2", "key", "\u0275\u0275repeaterCreate", "EditCourseLtiConfigurationComponent_Conditional_19_Conditional_1_For_4_Template", "\u0275\u0275repeaterTrackByIdentity", "\u0275\u0275repeater", "\u0275\u0275pipeBind2", "\u0275\u0275pipeBind1", "ctx_r2", "userPrefix", "errors", "\u0275\u0275pureFunction0", "_c2", "\u0275\u0275template", "EditCourseLtiConfigurationComponent_Conditional_19_Conditional_1_Template", "\u0275\u0275conditional", "length", "\u0275\u0275listener", "platform_r6", "\u0275\u0275restoreView", "_r5", "$implicit", "\u0275\u0275nextContext", "\u0275\u0275resetView", "setPlatform", "\u0275\u0275classProp", "id", "onlineCourseConfiguration", "ltiPlatformConfiguration", "customName", "\u0275\u0275textInterpolate1", "getLtiPlatform", "EditCourseLtiConfigurationComponent_div_30_For_21_Template", "\u0275\u0275twoWayListener", "$event", "_r4", "i0", "\u0275\u0275twoWayBindingSet", "page", "transition", "ltiConfiguredPlatforms", "\u0275\u0275pureFunction3", "_c3", "totalItems", "itemsPerPage", "\u0275\u0275twoWayProperty", "EditCourseLtiConfigurationComponent", "route", "inject", "ActivatedRoute", "courseService", "CourseManagementService", "router", "Router", "ltiConfigurationService", "LtiConfigurationService", "scrollableContent", "course", "onlineCourseConfigurationForm", "ITEMS_PER_PAGE", "isSaving", "loading", "faBan", "faSave", "ngOnInit", "data", "subscribe", "FormGroup", "FormControl", "validators", "regexValidator", "LOGIN_PATTERN", "requireExistingUser", "loadInitialPlatforms", "combineLatest", "params", "queryParamMap", "get", "loadData", "query", "size", "sort", "res", "onSuccess", "body", "headers", "navigate", "queryParams", "save", "getRawValue", "updateOnlineCourseConfiguration", "pipe", "finalize", "next", "onSaveSuccess", "navigateToLtiConfigurationPage", "platforms", "Number", "toString", "platform", "setValue", "originalUrl", "selectors", "viewQuery", "rf", "ctx", "_r1", "EditCourseLtiConfigurationComponent_Conditional_19_Template", "EditCourseLtiConfigurationComponent_div_30_Template", "\u0275\u0275pureFunction1", "_c1", "title", "invalid", "dirty", "touched", "FormsModule", "\u0275NgNoValidate", "DefaultValueAccessor", "CheckboxControlValueAccessor", "NgControlStatus", "NgControlStatusGroup", "RequiredValidator", "ReactiveFormsModule", "FormGroupDirective", "FormControlName", "TranslateDirective", "NgbDropdown", "NgbDropdownToggle", "NgbDropdownMenu", "NgbDropdownButtonItem", "NgbDropdownItem", "NgbTooltip", "NgbPagination", "FaIconComponent", "KeyValuePipe", "ArtemisTranslatePipe", "RemoveKeysPipe", "ItemCountComponent", "HelpIconComponent", "HasAnyAuthorityDirective", "encapsulation"]
}
