{
  "version": 3,
  "sources": ["src/main/webapp/app/exam/manage/student-exams/student-exam-detail-table-row/student-exam-detail-table-row.component.ts", "src/main/webapp/app/exam/manage/student-exams/student-exam-detail-table-row/student-exam-detail-table-row.component.html", "src/main/webapp/app/exam/manage/student-exams/student-exam-detail.component.ts", "src/main/webapp/app/exam/manage/student-exams/student-exam-detail.component.html"],
  "sourcesContent": ["import { Component, Input, OnChanges } from '@angular/core';\r\nimport { Exercise, ExerciseType, IncludedInOverallScore, getIcon } from 'app/entities/exercise.model';\r\nimport { Submission } from 'app/entities/submission.model';\r\nimport { StudentParticipation } from 'app/entities/participation/student-participation.model';\r\nimport { getLinkToSubmissionAssessment } from 'app/utils/navigation.utils';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { Result } from 'app/entities/result.model';\r\nimport { StudentExam } from 'app/entities/student-exam.model';\r\nimport { faFolderOpen } from '@fortawesome/free-solid-svg-icons';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { RouterLink } from '@angular/router';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: '[jhi-student-exam-detail-table-row]',\r\n    templateUrl: './student-exam-detail-table-row.component.html',\r\n    providers: [],\r\n    imports: [FaIconComponent, TranslateDirective, RouterLink, ArtemisTranslatePipe],\r\n})\r\nexport class StudentExamDetailTableRowComponent implements OnChanges {\r\n    @Input() exercise: Exercise;\r\n    @Input() examId: number;\r\n    @Input() isTestRun: boolean;\r\n    @Input() course: Course;\r\n    @Input() busy: boolean;\r\n    @Input() studentExam: StudentExam;\r\n    @Input() achievedPointsPerExercise: { [exerciseId: number]: number };\r\n\r\n    courseId: number;\r\n    studentParticipation: StudentParticipation;\r\n    submission: Submission;\r\n    result: Result;\r\n    openingAssessmentEditorForNewSubmission = false;\r\n    readonly ExerciseType = ExerciseType;\r\n    getIcon = getIcon;\r\n\r\n    // Icons\r\n    faFolderOpen = faFolderOpen;\r\n\r\n    ngOnChanges() {\r\n        if (this.exercise.studentParticipations?.[0]) {\r\n            this.studentParticipation = this.exercise.studentParticipations![0];\r\n            // eslint-disable-next-line @typescript-eslint/no-non-null-asserted-optional-chain\r\n            if (this.studentParticipation.submissions?.length! > 0) {\r\n                this.submission = this.studentParticipation.submissions![0];\r\n            }\r\n            // eslint-disable-next-line @typescript-eslint/no-non-null-asserted-optional-chain\r\n            if (this.studentParticipation.results?.length! > 0) {\r\n                this.result = this.studentParticipation.results![0];\r\n            }\r\n        }\r\n        if (this.course && this.course.id) {\r\n            this.courseId = this.course.id!;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * get the link for the assessment of a specific submission of the current exercise\r\n     * @param exercise\r\n     * @param submission\r\n     * @param resultId\r\n     */\r\n    getAssessmentLink(exercise: Exercise, submission?: Submission, resultId?: number) {\r\n        let route;\r\n        if (!exercise || !exercise.type) {\r\n            return;\r\n        }\r\n\r\n        if (submission) {\r\n            this.openingAssessmentEditorForNewSubmission = true;\r\n            route = getLinkToSubmissionAssessment(\r\n                exercise.type,\r\n                this.courseId,\r\n                exercise.id!,\r\n                this.studentParticipation?.id,\r\n                submission.id!,\r\n                this.examId,\r\n                exercise.exerciseGroup?.id,\r\n                resultId,\r\n            );\r\n            this.openingAssessmentEditorForNewSubmission = false;\r\n        }\r\n        return route;\r\n    }\r\n\r\n    /**\r\n     * Gets the bonus points from the given exercise according to its includedInOverallScore value.\r\n     * @param exercise exercise with or without bonus points\r\n     */\r\n    getBonusPoints(exercise?: Exercise): number | undefined {\r\n        if (!exercise) {\r\n            return 0;\r\n        }\r\n        switch (exercise.includedInOverallScore) {\r\n            case IncludedInOverallScore.INCLUDED_COMPLETELY:\r\n                return exercise.bonusPoints;\r\n            case IncludedInOverallScore.INCLUDED_AS_BONUS:\r\n                return exercise.maxPoints;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets the max points from the given exercise according to its includedInOverallScore value.\r\n     * @param exercise relevant exercise\r\n     */\r\n    getMaxPoints(exercise?: Exercise): number | undefined {\r\n        if (!exercise) {\r\n            return 0;\r\n        }\r\n        switch (exercise.includedInOverallScore) {\r\n            case IncludedInOverallScore.INCLUDED_COMPLETELY:\r\n                return exercise.maxPoints;\r\n            case IncludedInOverallScore.INCLUDED_AS_BONUS:\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n}\r\n", "<td class=\"align-middle\">\r\n    {{ exercise?.id }}\r\n</td>\r\n<td class=\"align-middle\" style=\"font-size: 1.35rem\">\r\n    @if (exercise && exercise.type) {\r\n        <fa-icon [icon]=\"getIcon(exercise.type)\" />\r\n    }\r\n</td>\r\n<td class=\"align-middle\">\r\n    {{ exercise?.title }}\r\n</td>\r\n<td class=\"align-middle\">\r\n    @if (exercise && achievedPointsPerExercise?.[exercise.id!] !== undefined) {\r\n        <ng-container class=\"score\">\r\n            {{ achievedPointsPerExercise?.[exercise.id!] }}\r\n        </ng-container>\r\n    } @else {\r\n        {{ 'N/A' }}\r\n    }\r\n</td>\r\n<td class=\"align-middle\">\r\n    {{ getMaxPoints(exercise) }}\r\n</td>\r\n<td class=\"align-middle\">\r\n    {{ getBonusPoints(exercise) }}\r\n</td>\r\n<td class=\"align-middle\">\r\n    @if (result?.assessor) {\r\n        {{ result.assessor?.name }}\r\n    } @else {}\r\n</td>\r\n<td class=\"align-middle\">\r\n    @if (result?.hasComplaint) {\r\n        <span jhiTranslate=\"global.generic.yes\"></span>\r\n    } @else {\r\n        <span jhiTranslate=\"global.generic.no\"></span>\r\n    }\r\n</td>\r\n<td>\r\n    @if (course?.isAtLeastInstructor && exercise.type !== ExerciseType.QUIZ && studentExam.submitted) {\r\n        <div>\r\n            @if (result && exercise.type !== ExerciseType.PROGRAMMING) {\r\n                <div>\r\n                    <!-- in case of existing result-->\r\n                    <a\r\n                        [class.disabled]=\"busy\"\r\n                        [queryParams]=\"{ testRun: this.isTestRun }\"\r\n                        [routerLink]=\"getAssessmentLink(exercise, submission, result.id)\"\r\n                        class=\"btn btn-primary btn-sm mb-1\"\r\n                    >\r\n                        <fa-icon [fixedWidth]=\"true\" [icon]=\"faFolderOpen\" />\r\n                        <span jhiTranslate=\"artemisApp.studentExamDetail.openLatestAssessment\"></span>\r\n                    </a>\r\n                </div>\r\n            }\r\n            @if (submission && result === undefined && exercise.type !== ExerciseType.PROGRAMMING) {\r\n                <div>\r\n                    <!-- in case of new result-->\r\n                    <a\r\n                        [class.disabled]=\"busy\"\r\n                        [queryParams]=\"{ testRun: this.isTestRun }\"\r\n                        [routerLink]=\"getAssessmentLink(exercise, submission)\"\r\n                        class=\"btn btn-primary btn-sm mb-1\"\r\n                    >\r\n                        <fa-icon [fixedWidth]=\"true\" [icon]=\"faFolderOpen\" />\r\n                        {{ 'artemisApp.assessment.dashboard.actions.assess' | artemisTranslate }}\r\n                    </a>\r\n                </div>\r\n            }\r\n            @if (exercise.type === ExerciseType.PROGRAMMING) {\r\n                <div>\r\n                    <a [class.disabled]=\"busy\" [routerLink]=\"getAssessmentLink(exercise)\" class=\"btn btn-primary btn-sm mb-1\">\r\n                        <fa-icon [fixedWidth]=\"true\" [icon]=\"faFolderOpen\" />\r\n                        {{ 'artemisApp.examManagement.assessmentDashboard' | artemisTranslate }}\r\n                    </a>\r\n                </div>\r\n            }\r\n        </div>\r\n    }\r\n</td>\r\n", "import { Component, OnDestroy, OnInit, inject } from '@angular/core';\r\nimport { ActivatedRoute, RouterLink } from '@angular/router';\r\nimport { StudentExam } from 'app/entities/student-exam.model';\r\nimport { StudentExamService } from 'app/exam/manage/student-exams/student-exam.service';\r\nimport { Course } from 'app/entities/course.model';\r\nimport { User } from 'app/core/user/user.model';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { TestExamWorkingTimeComponent } from 'app/exam/shared/testExam-workingTime/test-exam-working-time.component';\r\nimport { WorkingTimeControlComponent } from 'app/exam/shared/working-time-control/working-time-control.component';\r\nimport dayjs from 'dayjs/esm';\r\nimport { NgbModal, NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { getLatestSubmissionResult, setLatestSubmissionResult } from 'app/entities/submission.model';\r\nimport { GradeType } from 'app/entities/grading-scale.model';\r\nimport { faSave } from '@fortawesome/free-solid-svg-icons';\r\nimport { Exercise } from 'app/entities/exercise.model';\r\nimport { StudentExamWithGradeDTO } from 'app/exam/exam-scores/exam-score-dtos.model';\r\nimport { combineLatest, takeWhile } from 'rxjs';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { StudentExamDetailTableRowComponent } from './student-exam-detail-table-row/student-exam-detail-table-row.component';\r\nimport { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-student-exam-detail',\r\n    templateUrl: './student-exam-detail.component.html',\r\n    styleUrls: ['./student-exam-detail.component.scss'],\r\n    imports: [\r\n        TranslateDirective,\r\n        FormsModule,\r\n        WorkingTimeControlComponent,\r\n        FaIconComponent,\r\n        TestExamWorkingTimeComponent,\r\n        NgbTooltip,\r\n        RouterLink,\r\n        StudentExamDetailTableRowComponent,\r\n        ArtemisDatePipe,\r\n        ArtemisTranslatePipe,\r\n    ],\r\n})\r\nexport class StudentExamDetailComponent implements OnInit, OnDestroy {\r\n    private route = inject(ActivatedRoute);\r\n    private studentExamService = inject(StudentExamService);\r\n    private alertService = inject(AlertService);\r\n    private modalService = inject(NgbModal);\r\n\r\n    examId: number;\r\n    courseId: number;\r\n    studentExam: StudentExam;\r\n    achievedPointsPerExercise: { [exerciseId: number]: number };\r\n    course: Course;\r\n    student: User;\r\n    isSavingWorkingTime = false;\r\n    isTestRun = false;\r\n    isTestExam: boolean;\r\n    maxTotalPoints = 0;\r\n    achievedTotalPoints = 0;\r\n    bonusTotalPoints = 0;\r\n    isSaving = false;\r\n\r\n    gradingScaleExists = false;\r\n    grade?: string;\r\n    gradeAfterBonus?: string;\r\n    isBonus = false;\r\n    passed = false;\r\n\r\n    // Icons\r\n    faSave = faSave;\r\n\r\n    workingTimeSeconds = 0;\r\n\r\n    private componentActive = true;\r\n\r\n    /**\r\n     * Initialize the courseId and studentExam\r\n     */\r\n    ngOnInit(): void {\r\n        combineLatest([this.route.data, this.route.params, this.route.url])\r\n            .pipe(takeWhile(() => this.componentActive))\r\n            .subscribe(([data, params, url]) => {\r\n                this.examId = params.examId;\r\n                this.courseId = params.courseId;\r\n                const studentExamWithGrade = data.studentExam as StudentExamWithGradeDTO;\r\n                this.setStudentExamWithGrade(studentExamWithGrade);\r\n                this.isTestExam = studentExamWithGrade.studentExam?.exam?.testExam || false;\r\n                this.isTestRun = url[1]?.toString() === 'test-runs';\r\n            });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.componentActive = false;\r\n    }\r\n\r\n    /**\r\n     * Save the defined working time\r\n     */\r\n    saveWorkingTime() {\r\n        this.isSavingWorkingTime = true;\r\n        this.studentExamService.updateWorkingTime(this.courseId, this.studentExam.exam!.id!, this.studentExam.id!, this.workingTimeSeconds).subscribe({\r\n            next: (res) => {\r\n                if (res.body) {\r\n                    this.setStudentExam(res.body);\r\n                }\r\n                this.isSavingWorkingTime = false;\r\n                this.alertService.success('artemisApp.studentExamDetail.saveWorkingTimeSuccessful');\r\n            },\r\n            error: () => {\r\n                this.alertService.error('artemisApp.studentExamDetail.workingTimeCouldNotBeSaved');\r\n                this.isSavingWorkingTime = false;\r\n            },\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Sets the student exam, initialised the component which allows changing the working time and sets the score of the student.\r\n     * @param studentExamWithGrade\r\n     */\r\n    private setStudentExamWithGrade(studentExamWithGrade: StudentExamWithGradeDTO) {\r\n        if (!studentExamWithGrade.studentExam) {\r\n            // This should not happen, the server endpoint should return studentExamWithGrade.studentExam.\r\n            throw new Error('studentExamWithGrade.studentExam is undefined');\r\n        }\r\n\r\n        const studentExam = studentExamWithGrade.studentExam;\r\n\r\n        if (studentExam.examSessions) {\r\n            // show the oldest session first (sessions are created sequentially so we can sort after id)\r\n            studentExam.examSessions.sort((s1, s2) => s1.id! - s2.id!);\r\n        }\r\n\r\n        this.setStudentExam(studentExam);\r\n\r\n        this.achievedPointsPerExercise = studentExamWithGrade.achievedPointsPerExercise;\r\n\r\n        this.maxTotalPoints = studentExamWithGrade.maxPoints ?? 0;\r\n        this.achievedTotalPoints = studentExamWithGrade.studentResult.overallPointsAchieved ?? 0;\r\n        this.bonusTotalPoints = studentExamWithGrade.maxBonusPoints ?? 0;\r\n\r\n        this.setExamGrade(studentExamWithGrade);\r\n    }\r\n\r\n    /**\r\n     * Sets grade related information if a grading scale exists for the exam\r\n     */\r\n    setExamGrade(studentExamWithGrade: StudentExamWithGradeDTO) {\r\n        if (studentExamWithGrade?.studentResult?.overallGrade != undefined) {\r\n            this.gradingScaleExists = true;\r\n            this.grade = studentExamWithGrade.studentResult.overallGrade;\r\n            this.gradeAfterBonus = studentExamWithGrade.studentResult.gradeWithBonus?.finalGrade?.toString();\r\n            this.passed = !!studentExamWithGrade.studentResult.hasPassed;\r\n            this.isBonus = studentExamWithGrade.gradeType === GradeType.BONUS;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the student exam, initialised the component which allows changing the working time and sets the score of the student.\r\n     * @param studentExam\r\n     */\r\n    private setStudentExam(studentExam: StudentExam) {\r\n        this.studentExam = studentExam;\r\n\r\n        this.student = studentExam.user!;\r\n        this.course = studentExam.exam!.course!;\r\n\r\n        this.workingTimeSeconds = studentExam.workingTime ?? 0;\r\n\r\n        studentExam.exercises?.forEach((exercise) => this.initExercise(exercise));\r\n    }\r\n\r\n    /**\r\n     * Gets the correct explanation label for the grade depending on whether it is a bonus or it has bonus.\r\n     */\r\n    get gradeExplanation() {\r\n        if (this.isBonus) {\r\n            return 'artemisApp.studentExams.bonus';\r\n        } else if (this.gradeAfterBonus != undefined) {\r\n            return 'artemisApp.studentExams.gradeBeforeBonus';\r\n        } else {\r\n            return 'artemisApp.studentExams.grade';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Updates the points tallies based on the student’s results in the exercise.\r\n     *\r\n     * Also makes sure that the latest result is correctly connected to the student’s submission.\r\n     * @param exercise which should be included in the total points calculations.\r\n     */\r\n    private initExercise(exercise: Exercise) {\r\n        if (exercise.studentParticipations?.[0]?.submissions?.[0]) {\r\n            exercise.studentParticipations[0].submissions[0].results = exercise.studentParticipations[0].results;\r\n            setLatestSubmissionResult(exercise?.studentParticipations[0].submissions?.[0], getLatestSubmissionResult(exercise?.studentParticipations[0].submissions?.[0]));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if the user should be able to edit the inputs.\r\n     */\r\n    get isWorkingTimeFormDisabled(): boolean {\r\n        return this.isSavingWorkingTime || (this.isTestRun && !!this.studentExam.submitted) || !this.studentExam.exam;\r\n    }\r\n\r\n    get individualEndDate(): dayjs.Dayjs | undefined {\r\n        return dayjs(this.studentExam.exam!.startDate).add(this.workingTimeSeconds, 'seconds');\r\n    }\r\n\r\n    /**\r\n     * Checks if the exam is over considering the individual working time of the student and the grace period\r\n     */\r\n    get isExamOver(): boolean {\r\n        if (this.studentExam.exam) {\r\n            const individualExamEndDate = dayjs(this.studentExam.exam.startDate).add(this.studentExam.workingTime!, 'seconds').add(this.studentExam.exam.gracePeriod!, 'seconds');\r\n\r\n            return individualExamEndDate.isBefore(dayjs());\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * switch the 'submitted' state of the studentExam.\r\n     */\r\n    toggle() {\r\n        this.isSaving = true;\r\n        if (this.studentExam.exam && this.studentExam.exam.id) {\r\n            this.studentExamService.toggleSubmittedState(this.courseId, this.studentExam.exam.id, this.studentExam.id!, this.studentExam.submitted!).subscribe({\r\n                next: (res) => {\r\n                    if (res.body) {\r\n                        this.studentExam.submissionDate = res.body.submissionDate;\r\n                        this.studentExam.submitted = res.body.submitted;\r\n                    }\r\n                    this.alertService.success('artemisApp.studentExamDetail.toggleSuccessful');\r\n                    this.isSaving = false;\r\n                },\r\n                error: () => {\r\n                    this.alertService.error('artemisApp.studentExamDetail.toggleFailed');\r\n                    this.isSaving = false;\r\n                },\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Open a modal that requires the user's confirmation.\r\n     * @param content the modal content\r\n     */\r\n    openConfirmationModal(content: any) {\r\n        this.modalService.open(content).result.then((result: string) => {\r\n            if (result === 'confirm') {\r\n                this.toggle();\r\n            }\r\n        });\r\n    }\r\n}\r\n", "<div class=\"d-flex pb-3 border-bottom\">\r\n    <div class=\"d-flex flex-column justify-content-center\">\r\n        @if (isTestExam) {\r\n            <h4 class=\"mb-0\" jhiTranslate=\"artemisApp.studentExamDetail.studentTestExam\" [translateValues]=\"{ examTitle: studentExam.exam!.title! }\">\r\n                Student test exam ({{ studentExam.exam!.title! }})\r\n            </h4>\r\n        } @else if (isTestRun) {\r\n            <h4 class=\"mb-0\" jhiTranslate=\"artemisApp.studentExamDetail.testRun\" [translateValues]=\"{ examTitle: studentExam.exam!.title! }\">\r\n                Test Run ({{ studentExam.exam!.title! }})\r\n            </h4>\r\n        } @else {\r\n            <h4 class=\"mb-0\" jhiTranslate=\"artemisApp.studentExamDetail.studentExam\" [translateValues]=\"{ examTitle: studentExam.exam!.title! }\">\r\n                Student exam ({{ studentExam.exam!.title! }})\r\n            </h4>\r\n        }\r\n    </div>\r\n</div>\r\n<br />\r\n@if (student && studentExam) {\r\n    <div>\r\n        <div class=\"mb-3\">\r\n            <h5><span jhiTranslate=\"artemisApp.studentExamDetail.student\"></span></h5>\r\n            <ol class=\"list-without-numeration ms-4\">\r\n                <li>\r\n                    <strong jhiTranslate=\"artemisApp.studentExamDetail.name\"></strong>\r\n                    {{ student.name }}\r\n                </li>\r\n                <li>\r\n                    <strong jhiTranslate=\"artemisApp.studentExamDetail.login\"></strong>\r\n                    {{ student.login }}\r\n                </li>\r\n                <li>\r\n                    <strong jhiTranslate=\"artemisApp.studentExamDetail.email\"></strong>\r\n                    {{ student.email }}\r\n                </li>\r\n                <li>\r\n                    <strong jhiTranslate=\"artemisApp.studentExamDetail.matriculationNumber\"></strong>\r\n                    {{ student.visibleRegistrationNumber }}\r\n                </li>\r\n            </ol>\r\n        </div>\r\n        @if (!isTestExam) {\r\n            <div class=\"mb-3\">\r\n                <h5 jhiTranslate=\"artemisApp.studentExams.workingTime\"></h5>\r\n                <form #form=\"ngForm\" (ngSubmit)=\"saveWorkingTime()\" class=\"ms-4\">\r\n                    <jhi-working-time-control\r\n                        name=\"workingTime\"\r\n                        [relative]=\"true\"\r\n                        [disabled]=\"isWorkingTimeFormDisabled\"\r\n                        [(ngModel)]=\"workingTimeSeconds\"\r\n                        [exam]=\"studentExam.exam\"\r\n                        durationLabelText=\"artemisApp.studentExams.setWorkingTime\"\r\n                        relativeLabelText=\"artemisApp.studentExams.setWorkingTimeRelative\"\r\n                    />\r\n                    @if (workingTimeSeconds !== studentExam.workingTime) {\r\n                        <p>\r\n                            {{ 'artemisApp.studentExamDetail.endOfIndividualWorkingTime' | artemisTranslate }} {{ individualEndDate | artemisDate: 'long-date' }}\r\n                            -\r\n                            {{ individualEndDate | artemisDate: 'time' : true }}\r\n                        </p>\r\n                    }\r\n                    <button id=\"save\" type=\"submit\" class=\"btn btn-primary mt-2\" [disabled]=\"!form.valid || isWorkingTimeFormDisabled\">\r\n                        <fa-icon [icon]=\"faSave\" />\r\n                        <span jhiTranslate=\"entity.action.save\"></span>\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        }\r\n        @if (isTestExam) {\r\n            <div class=\"mb-3\">\r\n                <h5 jhiTranslate=\"artemisApp.studentExams.workingTime\"></h5>\r\n                <span jhiTranslate=\"artemisApp.studentExams.usedWorkingTime\"></span>:\r\n                <jhi-test-exam-working-time [studentExam]=\"studentExam\" />\r\n            </div>\r\n        }\r\n        <div class=\"mb-3\">\r\n            <h5><span jhiTranslate=\"artemisApp.studentExams.participationStatus\"></span></h5>\r\n            <div class=\"me-2 ms-4\">\r\n                <ol class=\"list-without-numeration\">\r\n                    <li>\r\n                        <strong>{{ 'artemisApp.studentExams.started' | artemisTranslate }}:</strong>\r\n                        {{ (studentExam.started ? 'global.generic.yes' : 'global.generic.no') | artemisTranslate }}\r\n                    </li>\r\n                    <li>\r\n                        <strong>{{ 'artemisApp.studentExams.submitted' | artemisTranslate }}:</strong>\r\n                        {{ (studentExam.submitted ? 'global.generic.yes' : 'global.generic.no') | artemisTranslate }}\r\n                    </li>\r\n                    <li>\r\n                        <strong>{{ 'artemisApp.studentExams.submissionDate' | artemisTranslate }}:</strong>\r\n                        {{ studentExam.submissionDate | artemisDate: 'long' : true }}\r\n                    </li>\r\n                    @if (gradingScaleExists) {\r\n                        <li>\r\n                            <strong>{{ gradeExplanation | artemisTranslate }}:</strong>\r\n                            {{ grade }}\r\n                        </li>\r\n                    }\r\n                    @if (gradeAfterBonus !== undefined) {\r\n                        <li>\r\n                            <strong>{{ 'artemisApp.studentExams.gradeAfterBonus' | artemisTranslate }}:</strong>\r\n                            {{ gradeAfterBonus }}\r\n                        </li>\r\n                    }\r\n                    @if (gradingScaleExists && !isBonus) {\r\n                        <li>\r\n                            <strong>{{ 'artemisApp.studentExams.passed' | artemisTranslate }}:</strong>\r\n                            {{ (passed ? 'global.generic.yes' : 'global.generic.no') | artemisTranslate }}\r\n                        </li>\r\n                    }\r\n                </ol>\r\n                <div\r\n                    [ngbTooltip]=\"!isExamOver ? ('artemisApp.studentExamDetail.disabledChangeSubmissionStateButtonExplanation' | artemisTranslate) : ''\"\r\n                    placement=\"right\"\r\n                    class=\"d-inline\"\r\n                >\r\n                    @if (course?.isAtLeastInstructor) {\r\n                        <button\r\n                            class=\"btn btn-danger\"\r\n                            type=\"button\"\r\n                            (click)=\"openConfirmationModal(toggleSubmitPopUp)\"\r\n                            [disabled]=\"!isExamOver || isSaving\"\r\n                            id=\"adjust-submitted-state-button\"\r\n                        >\r\n                            @if (!studentExam.submitted) {\r\n                                <span jhiTranslate=\"entity.action.toggleToSubmitted\"></span>\r\n                            } @else {\r\n                                <span jhiTranslate=\"entity.action.toggleToUnsubmitted\"></span>\r\n                            }\r\n                        </button>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <ng-template #toggleSubmitPopUp let-modal>\r\n            <div class=\"modal-header\">\r\n                <h4 class=\"modal-title\">\r\n                    @if (studentExam.submitted) {\r\n                        <span jhiTranslate=\"artemisApp.studentExams.confirmDialog.titleToUnsubmitted\"></span>\r\n                    } @else {\r\n                        @if (!studentExam.submitted) {\r\n                            <span jhiTranslate=\"artemisApp.studentExams.confirmDialog.titleToSubmitted\"></span>\r\n                        }\r\n                    }\r\n                </h4>\r\n                <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"modal.dismiss()\"></button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p jhiTranslate=\"artemisApp.studentExams.confirmDialog.question\"></p>\r\n                @if (!studentExam.submitted) {\r\n                    <p jhiTranslate=\"artemisApp.studentExams.confirmDialog.submitText\"></p>\r\n                } @else {\r\n                    <p jhiTranslate=\"artemisApp.studentExams.confirmDialog.unSubmitText\"></p>\r\n                    <p jhiTranslate=\"artemisApp.studentExams.confirmDialog.warningRemove\"></p>\r\n                }\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"modal.close('confirm')\">\r\n                    @if (!studentExam.submitted) {\r\n                        <span jhiTranslate=\"artemisApp.studentExams.confirmDialog.submit\"></span>\r\n                    } @else {\r\n                        <span jhiTranslate=\"artemisApp.studentExams.confirmDialog.unsubmit\"></span>\r\n                    }\r\n                </button>\r\n            </div>\r\n        </ng-template>\r\n        <div class=\"mb-3\">\r\n            <h5><span jhiTranslate=\"artemisApp.studentExams.summary\"></span></h5>\r\n            <div class=\"d-flex flex-row\">\r\n                @if (course?.isAtLeastInstructor) {\r\n                    <a class=\"btn btn-primary summery ms-4\" [routerLink]=\"'./summary'\">\r\n                        <span jhiTranslate=\"artemisApp.exam.summary\"></span>\r\n                    </a>\r\n                    <div ngbTooltip=\"{{ 'artemisApp.examTimeline.disabledTooltip' | artemisTranslate }}\" [disableTooltip]=\"studentExam?.submitted!\">\r\n                        <button class=\"btn btn-primary mb-auto ms-5\" [routerLink]=\"'./exam-timeline'\" [disabled]=\"!studentExam.submitted\">\r\n                            <span jhiTranslate=\"artemisApp.examTimeline.breadcrumb\"></span>\r\n                        </button>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n        <div class=\"mb-3 mt-3\">\r\n            <h5><span jhiTranslate=\"artemisApp.studentExams.examSessions\"></span></h5>\r\n            @if (studentExam.examSessions && studentExam.examSessions.length > 0) {\r\n                <div class=\"exam-session-table-wrapper\">\r\n                    <table class=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th class=\"d-md-table-cell\">\r\n                                    <span jhiTranslate=\"artemisApp.examSession.id\"></span>\r\n                                </th>\r\n                                <th>\r\n                                    <span jhiTranslate=\"artemisApp.examSession.sessionToken\"></span>\r\n                                </th>\r\n                                <th class=\"user-agent\">\r\n                                    <span jhiTranslate=\"artemisApp.examSession.userAgent\"></span>\r\n                                </th>\r\n                                <th>\r\n                                    <span jhiTranslate=\"artemisApp.examSession.browserFingerprintHash\"></span>\r\n                                </th>\r\n                                <th>\r\n                                    <span jhiTranslate=\"artemisApp.examSession.instanceId\"></span>\r\n                                </th>\r\n                                <th>\r\n                                    <span jhiTranslate=\"artemisApp.examSession.ipAddress\"></span>\r\n                                </th>\r\n                                <th>\r\n                                    <span jhiTranslate=\"artemisApp.examSession.createdDate\"></span>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            @for (session of studentExam.examSessions; track session) {\r\n                                <tr>\r\n                                    <td>{{ session.id }}</td>\r\n                                    <td>{{ session.sessionToken }}</td>\r\n                                    <td>{{ session.userAgent }}</td>\r\n                                    <td>{{ session.browserFingerprintHash }}</td>\r\n                                    <td>{{ session.instanceId }}</td>\r\n                                    <td>{{ session.ipAddress }}</td>\r\n                                    <td>{{ session.createdDate | artemisDate }}</td>\r\n                                </tr>\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            } @else {\r\n                <div jhiTranslate=\"artemisApp.studentExamDetail.noSessions\" class=\"ms-4\"></div>\r\n            }\r\n        </div>\r\n        <div class=\"mb-3 mt-3\">\r\n            <h5 jhiTranslate=\"artemisApp.studentExamDetail.exercises\"></h5>\r\n            <table class=\"table table-striped\">\r\n                <thead>\r\n                    <tr>\r\n                        <th class=\"d-md-table-cell\">\r\n                            <span jhiTranslate=\"artemisApp.studentExamDetail.id\"></span>\r\n                        </th>\r\n                        <th>\r\n                            <span jhiTranslate=\"artemisApp.studentExamDetail.type\"></span>\r\n                        </th>\r\n                        <th>\r\n                            <span jhiTranslate=\"artemisApp.studentExamDetail.title\"></span>\r\n                        </th>\r\n                        <th>\r\n                            <span jhiTranslate=\"artemisApp.studentExamDetail.result\"></span>\r\n                        </th>\r\n                        <th>\r\n                            <span jhiTranslate=\"artemisApp.exam.examSummary.points.maxPoints\"></span>\r\n                        </th>\r\n                        <th>\r\n                            <span jhiTranslate=\"artemisApp.exam.examSummary.points.maxBonus\"></span>\r\n                        </th>\r\n                        <th>\r\n                            <span jhiTranslate=\"artemisApp.studentExamDetail.reviewer\"></span>\r\n                        </th>\r\n                        <th>\r\n                            <span jhiTranslate=\"artemisApp.studentExamDetail.hasComplaint\"></span>\r\n                        </th>\r\n                        <th>\r\n                            <span jhiTranslate=\"artemisApp.assessment.dashboard.columns.action\"></span>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    @for (exercise of studentExam.exercises; track exercise) {\r\n                        <tr\r\n                            jhi-student-exam-detail-table-row\r\n                            [course]=\"course\"\r\n                            [examId]=\"examId\"\r\n                            [exercise]=\"exercise\"\r\n                            [busy]=\"isSaving\"\r\n                            [isTestRun]=\"isTestRun\"\r\n                            [studentExam]=\"studentExam\"\r\n                            [achievedPointsPerExercise]=\"achievedPointsPerExercise\"\r\n                        ></tr>\r\n                    }\r\n                    <tr>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td class=\"align-middle\">\r\n                            <span class=\"text-decoration-underline\" jhiTranslate=\"artemisApp.examScores.overallPointsColumn\"></span>\r\n                        </td>\r\n                        <td class=\"align-middle\">\r\n                            <u> {{ achievedTotalPoints }} </u>\r\n                        </td>\r\n                        <td class=\"align-middle\">\r\n                            <u> {{ maxTotalPoints }} </u>\r\n                        </td>\r\n                        <td class=\"align-middle\">\r\n                            <u> {{ bonusTotalPoints }} </u>\r\n                        </td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n}\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275property", "ctx_r0", "getIcon", "exercise", "type", "\u0275\u0275elementContainerStart", "\u0275\u0275textInterpolate1", "achievedPointsPerExercise", "id", "result", "assessor", "name", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275classProp", "busy", "\u0275\u0275pureFunction1", "_c1", "isTestRun", "getAssessmentLink", "submission", "faFolderOpen", "\u0275\u0275pipeBind1", "\u0275\u0275template", "StudentExamDetailTableRowComponent_Conditional_33_Conditional_3_Template", "StudentExamDetailTableRowComponent_Conditional_33_Conditional_4_Template", "StudentExamDetailTableRowComponent_Conditional_33_Conditional_5_Template", "\u0275\u0275conditional", "ExerciseType", "PROGRAMMING", "undefined", "StudentExamDetailTableRowComponent", "examId", "course", "studentExam", "courseId", "studentParticipation", "openingAssessmentEditorForNewSubmission", "ngOnChanges", "studentParticipations", "submissions", "length", "results", "resultId", "route", "getLinkToSubmissionAssessment", "exerciseGroup", "getBonusPoints", "includedInOverallScore", "IncludedInOverallScore", "INCLUDED_COMPLETELY", "bonusPoints", "INCLUDED_AS_BONUS", "maxPoints", "getMaxPoints", "selectors", "inputs", "features", "\u0275\u0275ProvidersFeature", "\u0275\u0275NgOnChangesFeature", "attrs", "_c0", "decls", "vars", "consts", "template", "rf", "ctx", "StudentExamDetailTableRowComponent_Conditional_5_Template", "StudentExamDetailTableRowComponent_Conditional_12_Template", "StudentExamDetailTableRowComponent_Conditional_13_Template", "StudentExamDetailTableRowComponent_Conditional_23_Template", "StudentExamDetailTableRowComponent_Conditional_24_Template", "StudentExamDetailTableRowComponent_Conditional_28_Template", "StudentExamDetailTableRowComponent_Conditional_29_Template", "StudentExamDetailTableRowComponent_Conditional_33_Template", "title", "hasComplaint", "isAtLeastInstructor", "QUIZ", "submitted", "FaIconComponent", "TranslateDirective", "RouterLink", "ArtemisTranslatePipe", "encapsulation", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "\u0275\u0275pureFunction1", "_c0", "ctx_r0", "studentExam", "exam", "title", "\u0275\u0275textInterpolate1", "\u0275\u0275textInterpolate3", "\u0275\u0275pipeBind1", "\u0275\u0275pipeBind2", "individualEndDate", "\u0275\u0275pipeBind3", "\u0275\u0275element", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r2", "\u0275\u0275nextContext", "\u0275\u0275resetView", "saveWorkingTime", "\u0275\u0275twoWayListener", "$event", "i0", "\u0275\u0275twoWayBindingSet", "workingTimeSeconds", "\u0275\u0275template", "StudentExamDetailComponent_Conditional_11_Conditional_32_Conditional_10_Template", "isWorkingTimeFormDisabled", "\u0275\u0275twoWayProperty", "\u0275\u0275conditional", "workingTime", "form_r3", "valid", "faSave", "gradeExplanation", "grade", "gradeAfterBonus", "passed", "_r4", "toggleSubmitPopUp_r5", "\u0275\u0275reference", "openConfirmationModal", "StudentExamDetailComponent_Conditional_11_Conditional_74_Conditional_3_Template", "StudentExamDetailComponent_Conditional_11_Conditional_74_Conditional_4_Template", "isExamOver", "isSaving", "submitted", "StudentExamDetailComponent_Conditional_11_ng_template_78_Conditional_6_Conditional_1_Template", "StudentExamDetailComponent_Conditional_11_ng_template_78_Conditional_5_Template", "StudentExamDetailComponent_Conditional_11_ng_template_78_Conditional_6_Template", "modal_r7", "_r6", "$implicit", "dismiss", "StudentExamDetailComponent_Conditional_11_ng_template_78_Conditional_15_Template", "StudentExamDetailComponent_Conditional_11_ng_template_78_Conditional_16_Template", "close", "StudentExamDetailComponent_Conditional_11_ng_template_78_Conditional_22_Template", "StudentExamDetailComponent_Conditional_11_ng_template_78_Conditional_23_Template", "\u0275\u0275propertyInterpolate", "\u0275\u0275textInterpolate", "session_r8", "id", "sessionToken", "userAgent", "browserFingerprintHash", "instanceId", "ipAddress", "createdDate", "\u0275\u0275repeaterCreate", "StudentExamDetailComponent_Conditional_11_Conditional_96_For_49_Template", "\u0275\u0275repeaterTrackByIdentity", "\u0275\u0275repeater", "examSessions", "course", "examId", "exercise_r9", "isTestRun", "achievedPointsPerExercise", "StudentExamDetailComponent_Conditional_11_Conditional_32_Template", "StudentExamDetailComponent_Conditional_11_Conditional_33_Template", "StudentExamDetailComponent_Conditional_11_Conditional_67_Template", "StudentExamDetailComponent_Conditional_11_Conditional_68_Template", "StudentExamDetailComponent_Conditional_11_Conditional_69_Template", "StudentExamDetailComponent_Conditional_11_Conditional_74_Template", "StudentExamDetailComponent_Conditional_11_ng_template_78_Template", "\u0275\u0275templateRefExtractor", "StudentExamDetailComponent_Conditional_11_Conditional_88_Template", "StudentExamDetailComponent_Conditional_11_Conditional_96_Template", "StudentExamDetailComponent_Conditional_11_Conditional_97_Template", "StudentExamDetailComponent_Conditional_11_For_159_Template", "student", "name", "login", "email", "visibleRegistrationNumber", "isTestExam", "started", "submissionDate", "gradingScaleExists", "undefined", "isBonus", "isAtLeastInstructor", "length", "exercises", "achievedTotalPoints", "maxTotalPoints", "bonusTotalPoints", "StudentExamDetailComponent", "route", "inject", "ActivatedRoute", "studentExamService", "StudentExamService", "alertService", "AlertService", "modalService", "NgbModal", "courseId", "isSavingWorkingTime", "componentActive", "ngOnInit", "combineLatest", "data", "params", "url", "pipe", "takeWhile", "subscribe", "studentExamWithGrade", "setStudentExamWithGrade", "testExam", "toString", "ngOnDestroy", "updateWorkingTime", "next", "res", "body", "setStudentExam", "success", "error", "Error", "sort", "s1", "s2", "maxPoints", "studentResult", "overallPointsAchieved", "maxBonusPoints", "setExamGrade", "overallGrade", "gradeWithBonus", "finalGrade", "hasPassed", "gradeType", "GradeType", "BONUS", "user", "forEach", "exercise", "initExercise", "studentParticipations", "submissions", "results", "setLatestSubmissionResult", "getLatestSubmissionResult", "dayjs", "startDate", "add", "gracePeriod", "isBefore", "toggle", "toggleSubmittedState", "content", "open", "result", "then", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "StudentExamDetailComponent_Conditional_4_Template", "StudentExamDetailComponent_Conditional_5_Template", "StudentExamDetailComponent_Conditional_6_Template", "StudentExamDetailComponent_Conditional_11_Template", "TranslateDirective", "FormsModule", "\u0275NgNoValidate", "NgControlStatus", "NgControlStatusGroup", "NgModel", "NgForm", "WorkingTimeControlComponent", "FaIconComponent", "TestExamWorkingTimeComponent", "NgbTooltip", "RouterLink", "StudentExamDetailTableRowComponent", "ArtemisDatePipe", "ArtemisTranslatePipe", "styles"]
}
