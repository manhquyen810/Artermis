{
  "version": 3,
  "sources": ["src/main/webapp/app/entities/programming/programming-exercise-participation.model.ts", "src/main/webapp/app/exercises/programming/manage/status/programming-exercise-instructor-status.component.ts", "src/main/webapp/app/exercises/programming/manage/status/programming-exercise-instructor-status.component.html"],
  "sourcesContent": ["export enum ProgrammingExerciseParticipationType {\r\n    TEMPLATE = 'TEMPLATE',\r\n    SOLUTION = 'SOLUTION',\r\n    ASSIGNMENT = 'ASSIGNMENT',\r\n}\r\n", "import { Component, Input, OnChanges, OnDestroy, SimpleChanges, inject } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { ParticipationWebsocketService } from 'app/overview/participation-websocket.service';\r\nimport { Result } from 'app/entities/result.model';\r\nimport { Participation } from 'app/entities/participation/participation.model';\r\nimport { ProgrammingExercise } from 'app/entities/programming/programming-exercise.model';\r\nimport { ProgrammingExerciseParticipationType } from 'app/entities/programming/programming-exercise-participation.model';\r\nimport { findLatestResult } from 'app/shared/util/utils';\r\nimport { SolutionProgrammingExerciseParticipation } from 'app/entities/participation/solution-programming-exercise-participation.model';\r\nimport { TemplateProgrammingExerciseParticipation } from 'app/entities/participation/template-programming-exercise-participation.model';\r\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\r\nimport { hasParticipationChanged } from 'app/exercises/shared/participation/participation.utils';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-programming-exercise-instructor-status',\r\n    templateUrl: './programming-exercise-instructor-status.component.html',\r\n    imports: [FaIconComponent, NgbTooltip, ArtemisTranslatePipe],\r\n})\r\nexport class ProgrammingExerciseInstructorStatusComponent implements OnChanges, OnDestroy {\r\n    private participationWebsocketService = inject(ParticipationWebsocketService);\r\n\r\n    ProgrammingExerciseParticipationType = ProgrammingExerciseParticipationType;\r\n\r\n    @Input()\r\n    participationType: ProgrammingExerciseParticipationType;\r\n    @Input()\r\n    participation: SolutionProgrammingExerciseParticipation | TemplateProgrammingExerciseParticipation | Participation;\r\n    @Input()\r\n    exercise: ProgrammingExercise;\r\n\r\n    latestResult?: Result;\r\n    resultSubscription: Subscription;\r\n\r\n    // Icons\r\n    faExclamationTriangle = faExclamationTriangle;\r\n\r\n    /**\r\n     * When the participation changes, get the latestResult from it and setup the result subscription for new results.\r\n     * @param changes\r\n     */\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (hasParticipationChanged(changes)) {\r\n            this.latestResult = findLatestResult(this.participation.results);\r\n            this.updateResultSubscription();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * If there is an existing subscription, unsubscribe.\r\n     * Create a new subscription for the provided participation.\r\n     */\r\n    updateResultSubscription() {\r\n        if (this.resultSubscription) {\r\n            this.resultSubscription.unsubscribe();\r\n        }\r\n\r\n        this.resultSubscription = this.participationWebsocketService\r\n            .subscribeForLatestResultOfParticipation(this.participation.id!, false, this.exercise.id)\r\n            .pipe(filter((result) => !!result))\r\n            .subscribe((result) => (this.latestResult = result));\r\n    }\r\n\r\n    /**\r\n     * If there is an existing subscription, unsubscribe.\r\n     */\r\n    ngOnDestroy(): void {\r\n        if (this.resultSubscription) {\r\n            this.resultSubscription.unsubscribe();\r\n        }\r\n    }\r\n}\r\n", "@if (participationType === ProgrammingExerciseParticipationType.TEMPLATE && latestResult && latestResult.score! > 0) {\r\n    <fa-icon\r\n        id=\"instructor-status-template\"\r\n        [icon]=\"faExclamationTriangle\"\r\n        class=\"text-warning\"\r\n        [ngbTooltip]=\"'artemisApp.programmingExercise.status.templateFulfillsTest' | artemisTranslate\"\r\n    />\r\n}\r\n@if (participationType === ProgrammingExerciseParticipationType.SOLUTION && latestResult && !latestResult.successful) {\r\n    <fa-icon\r\n        id=\"instructor-status-solution\"\r\n        [icon]=\"faExclamationTriangle\"\r\n        class=\"text-warning\"\r\n        [ngbTooltip]=\"'artemisApp.programmingExercise.status.solutionFailsTest' | artemisTranslate\"\r\n    />\r\n}\r\n"],
  "mappings": "iaAAA,IAAYA,EAAZ,SAAYA,EAAoC,CAC5CA,OAAAA,EAAA,SAAA,WACAA,EAAA,SAAA,WACAA,EAAA,WAAA,aAHQA,CAIZ,EAJYA,GAAoC,CAAA,CAAA,2BEC5CC,EAAA,EAAA;KAAA,EAAAC,EAAA,EAAA,UAAA,CAAA,0BAMJD,EAAA,EAAA;CAAA,kBAJQE,EAAA,EAAAC,EAAA,OAAAC,EAAAC,qBAAA,EAA8B,aAAAC,EAAA,EAAA,EAAA,4DAAA,CAAA,4BAMlCN,EAAA,EAAA;KAAA,EAAAC,EAAA,EAAA,UAAA,CAAA,0BAMJD,EAAA,EAAA;CAAA,kBAJQE,EAAA,EAAAC,EAAA,OAAAC,EAAAC,qBAAA,EAA8B,aAAAC,EAAA,EAAA,EAAA,yDAAA,CAAA,GDWtC,IAAaC,GAA4C,IAAA,CAAnD,MAAOA,CAA4C,CAC7CC,8BAAgCC,EAAOC,CAA6B,EAE5EC,qCAAuCA,EAGvCC,kBAEAC,cAEAC,SAEAC,aACAC,mBAGAX,sBAAwBA,EAMxBY,YAAYC,EAAsB,CAC1BC,EAAwBD,CAAO,IAC/B,KAAKH,aAAeK,EAAiB,KAAKP,cAAcQ,OAAO,EAC/D,KAAKC,yBAAwB,EAErC,CAMAA,0BAAwB,CAChB,KAAKN,oBACL,KAAKA,mBAAmBO,YAAW,EAGvC,KAAKP,mBAAqB,KAAKR,8BAC1BgB,wCAAwC,KAAKX,cAAcY,GAAK,GAAO,KAAKX,SAASW,EAAE,EACvFC,KAAKC,EAAQC,GAAW,CAAC,CAACA,CAAM,CAAC,EACjCC,UAAWD,GAAY,KAAKb,aAAea,CAAO,CAC3D,CAKAE,aAAW,CACH,KAAKd,oBACL,KAAKA,mBAAmBO,YAAW,CAE3C,4CAnDShB,EAA4C,2BAA5CA,EAA4CwB,UAAA,CAAA,CAAA,4CAAA,CAAA,EAAAC,OAAA,CAAApB,kBAAA,oBAAAC,cAAA,gBAAAC,SAAA,UAAA,EAAAmB,SAAA,CAAAC,CAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,KAAA,6BAAA,EAAA,eAAA,EAAA,OAAA,YAAA,EAAA,CAAA,KAAA,6BAAA,EAAA,eAAA,EAAA,OAAA,YAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,GCtBzDE,EAAA,EAAAC,EAAA,EAAA,CAAA,EAAsH,EAAAC,EAAA,EAAA,CAAA,QAAtHC,EAAAJ,EAAA5B,oBAAA4B,EAAA7B,qCAAAkC,UAAAL,EAAAzB,cAAAyB,EAAAzB,aAAA+B,MAAA,EAAA,EAAA,EAAA,EAQA5C,EAAA,EAAA0C,EAAAJ,EAAA5B,oBAAA4B,EAAA7B,qCAAAoC,UAAAP,EAAAzB,cAAA,CAAAyB,EAAAzB,aAAAiC,WAAA,EAAA,EAAA,kBDYcC,EAAiBC,EAAYC,CAAoB,EAAAC,cAAA,CAAA,CAAA,SAElD7C,CAA4C,GAAA",
  "names": ["ProgrammingExerciseParticipationType", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275property", "ctx_r0", "faExclamationTriangle", "\u0275\u0275pipeBind1", "ProgrammingExerciseInstructorStatusComponent", "participationWebsocketService", "inject", "ParticipationWebsocketService", "ProgrammingExerciseParticipationType", "participationType", "participation", "exercise", "latestResult", "resultSubscription", "ngOnChanges", "changes", "hasParticipationChanged", "findLatestResult", "results", "updateResultSubscription", "unsubscribe", "subscribeForLatestResultOfParticipation", "id", "pipe", "filter", "result", "subscribe", "ngOnDestroy", "selectors", "inputs", "features", "\u0275\u0275NgOnChangesFeature", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275template", "ProgrammingExerciseInstructorStatusComponent_Conditional_0_Template", "ProgrammingExerciseInstructorStatusComponent_Conditional_1_Template", "\u0275\u0275conditional", "TEMPLATE", "score", "SOLUTION", "successful", "FaIconComponent", "NgbTooltip", "ArtemisTranslatePipe", "encapsulation"]
}
