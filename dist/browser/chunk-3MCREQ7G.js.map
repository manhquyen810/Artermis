{
  "version": 3,
  "sources": ["src/main/webapp/app/exercises/programming/manage/services/submission-policy.service.ts"],
  "sourcesContent": ["import { Injectable, inject } from '@angular/core';\r\nimport { HttpClient, HttpParams, HttpResponse } from '@angular/common/http';\r\nimport { Observable, map } from 'rxjs';\r\nimport { SubmissionPolicy } from 'app/entities/submission-policy.model';\r\n\r\nexport interface ISubmissionPolicyService {\r\n    addSubmissionPolicyToProgrammingExercise: (submissionPolicy: SubmissionPolicy, exerciseId: number) => Observable<SubmissionPolicy>;\r\n    getSubmissionPolicyOfProgrammingExercise: (exerciseId: number) => Observable<SubmissionPolicy | undefined>;\r\n    removeSubmissionPolicyFromProgrammingExercise: (exerciseId: number) => Observable<HttpResponse<void>>;\r\n    enableSubmissionPolicyOfProgrammingExercise: (exerciseId: number) => Observable<HttpResponse<void>>;\r\n    disableSubmissionPolicyOfProgrammingExercise: (exerciseId: number) => Observable<HttpResponse<void>>;\r\n    updateSubmissionPolicyToProgrammingExercise: (submissionPolicy: SubmissionPolicy, exerciseId: number) => Observable<SubmissionPolicy>;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SubmissionPolicyService implements ISubmissionPolicyService {\r\n    private http = inject(HttpClient);\r\n\r\n    public baseResourceUrl = 'api/programming/programming-exercises/{exerciseId}/submission-policy';\r\n\r\n    /**\r\n     * Returns the observable of the submission policy of the programming exercise with the id that\r\n     * is passed as argument.\r\n     *\r\n     * @param exerciseId of the programming exercise for which the submission policy should be loaded\r\n     */\r\n    getSubmissionPolicyOfProgrammingExercise(exerciseId: number): Observable<SubmissionPolicy | undefined> {\r\n        return this.http.get<SubmissionPolicy | undefined>(this.requestUrl(exerciseId)).pipe(\r\n            // using any as it can be null\r\n            map((response: any) => {\r\n                // Ensure that null is replaced by undefined\r\n                return response === null ? undefined : response;\r\n            }),\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Adds the passed submission policy to the programming exercise with the passed id and returns an\r\n     * observable of the added submission policy.\r\n     *\r\n     * @param submissionPolicy that should be added to the programming exercise\r\n     * @param exerciseId of the programming exercise to which the passed submission policy should be added\r\n     */\r\n    addSubmissionPolicyToProgrammingExercise(submissionPolicy: SubmissionPolicy, exerciseId: number): Observable<SubmissionPolicy> {\r\n        submissionPolicy.active = false;\r\n        return this.http.post<SubmissionPolicy>(this.requestUrl(exerciseId), submissionPolicy);\r\n    }\r\n\r\n    /**\r\n     * Removes the submission policy of the programming exercise with the passed exerciseId and\r\n     * returns an observable of the http response.\r\n     *\r\n     * @param exerciseId of the programming exercise from which the submission policy should be removed\r\n     */\r\n    removeSubmissionPolicyFromProgrammingExercise(exerciseId: number): Observable<HttpResponse<void>> {\r\n        return this.http.delete<void>(this.requestUrl(exerciseId), { observe: 'response' });\r\n    }\r\n\r\n    /**\r\n     * Activates the submission policy of the programming exercise with the passed exerciseId and\r\n     * returns an observable of the http response.\r\n     *\r\n     * @param exerciseId of the programming exercise for which the submission policy should be activated\r\n     */\r\n    enableSubmissionPolicyOfProgrammingExercise(exerciseId: number): Observable<HttpResponse<void>> {\r\n        const params = new HttpParams().set('activate', 'true');\r\n        return this.http.put<void>(this.requestUrl(exerciseId), null, { observe: 'response', params });\r\n    }\r\n\r\n    /**\r\n     * Deactivates the submission policy of the programming exercise with the passed exerciseId and\r\n     * returns an observable of the http response.\r\n     *\r\n     * @param exerciseId of the programming exercise for which the submission policy should be deactivated\r\n     */\r\n    disableSubmissionPolicyOfProgrammingExercise(exerciseId: number): Observable<HttpResponse<void>> {\r\n        const params = new HttpParams().set('activate', 'false');\r\n        return this.http.put<void>(this.requestUrl(exerciseId), null, { observe: 'response', params });\r\n    }\r\n\r\n    /**\r\n     * Updates the submission policy to the programming exercise with the passed id and returns an\r\n     * observable of the new submission policy.\r\n     *\r\n     * @param submissionPolicy that should be the new submission policy of the programming exercise\r\n     * @param exerciseId of the programming exercise of which the submission policy should be updated\r\n     */\r\n    updateSubmissionPolicyToProgrammingExercise(submissionPolicy: SubmissionPolicy, exerciseId: number): Observable<SubmissionPolicy> {\r\n        return this.http.patch<SubmissionPolicy>(this.requestUrl(exerciseId), submissionPolicy);\r\n    }\r\n\r\n    getParticipationSubmissionCount(participationId: number): Observable<number> {\r\n        return this.http.get<number>(`api/programming/participations/${participationId}/submission-count`);\r\n    }\r\n\r\n    /**\r\n     * Returns the appropriate request URL for a given exerciseId.\r\n     *\r\n     * @param exerciseId that is to be included in the request URL\r\n     */\r\n    private requestUrl(exerciseId: number): string {\r\n        return this.baseResourceUrl.replace('{exerciseId}', exerciseId + '');\r\n    }\r\n}\r\n"],
  "mappings": "uGAeA,IAAaA,GAAuB,IAAA,CAA9B,MAAOA,CAAuB,CACxBC,KAAOC,EAAOC,CAAU,EAEzBC,gBAAkB,uEAQzBC,yCAAyCC,EAAkB,CACvD,OAAO,KAAKL,KAAKM,IAAkC,KAAKC,WAAWF,CAAU,CAAC,EAAEG,KAE5EC,EAAKC,GAEMA,IAAa,KAAOC,OAAYD,CAC1C,CAAC,CAEV,CASAE,yCAAyCC,EAAoCR,EAAkB,CAC3FQ,OAAAA,EAAiBC,OAAS,GACnB,KAAKd,KAAKe,KAAuB,KAAKR,WAAWF,CAAU,EAAGQ,CAAgB,CACzF,CAQAG,8CAA8CX,EAAkB,CAC5D,OAAO,KAAKL,KAAKiB,OAAa,KAAKV,WAAWF,CAAU,EAAG,CAAEa,QAAS,UAAU,CAAE,CACtF,CAQAC,4CAA4Cd,EAAkB,CAC1D,IAAMe,EAAS,IAAIC,EAAU,EAAGC,IAAI,WAAY,MAAM,EACtD,OAAO,KAAKtB,KAAKuB,IAAU,KAAKhB,WAAWF,CAAU,EAAG,KAAM,CAAEa,QAAS,WAAYE,OAAAA,CAAM,CAAE,CACjG,CAQAI,6CAA6CnB,EAAkB,CAC3D,IAAMe,EAAS,IAAIC,EAAU,EAAGC,IAAI,WAAY,OAAO,EACvD,OAAO,KAAKtB,KAAKuB,IAAU,KAAKhB,WAAWF,CAAU,EAAG,KAAM,CAAEa,QAAS,WAAYE,OAAAA,CAAM,CAAE,CACjG,CASAK,4CAA4CZ,EAAoCR,EAAkB,CAC9F,OAAO,KAAKL,KAAK0B,MAAwB,KAAKnB,WAAWF,CAAU,EAAGQ,CAAgB,CAC1F,CAEAc,gCAAgCC,EAAuB,CACnD,OAAO,KAAK5B,KAAKM,IAAY,kCAAkCsB,CAAe,mBAAmB,CACrG,CAOQrB,WAAWF,EAAkB,CACjC,OAAO,KAAKF,gBAAgB0B,QAAQ,eAAgBxB,EAAa,EAAE,CACvE,4CAvFSN,EAAuB,6BAAvBA,EAAuB+B,QAAvB/B,EAAuBgC,UAAAC,WADV,MAAM,CAAA,SACnBjC,CAAuB,GAAA",
  "names": ["SubmissionPolicyService", "http", "inject", "HttpClient", "baseResourceUrl", "getSubmissionPolicyOfProgrammingExercise", "exerciseId", "get", "requestUrl", "pipe", "map", "response", "undefined", "addSubmissionPolicyToProgrammingExercise", "submissionPolicy", "active", "post", "removeSubmissionPolicyFromProgrammingExercise", "delete", "observe", "enableSubmissionPolicyOfProgrammingExercise", "params", "HttpParams", "set", "put", "disableSubmissionPolicyOfProgrammingExercise", "updateSubmissionPolicyToProgrammingExercise", "patch", "getParticipationSubmissionCount", "participationId", "replace", "factory", "\u0275fac", "providedIn"]
}
