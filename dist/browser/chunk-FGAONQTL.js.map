{
  "version": 3,
  "sources": ["src/main/webapp/app/course/tutorial-groups/services/tutorial-groups-configuration.service.ts"],
  "sourcesContent": ["import { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Injectable, inject } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { convertDateFromServer, toISO8601DateString } from 'app/utils/date.utils';\r\nimport { map } from 'rxjs/operators';\r\nimport { TutorialGroupsConfiguration } from 'app/entities/tutorial-group/tutorial-groups-configuration.model';\r\n\r\ntype EntityResponseType = HttpResponse<TutorialGroupsConfiguration>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class TutorialGroupsConfigurationService {\r\n    private httpClient = inject(HttpClient);\r\n\r\n    private resourceURL = 'api/tutorialgroup';\r\n\r\n    getOneOfCourse(courseId: number) {\r\n        return this.httpClient\r\n            .get<TutorialGroupsConfiguration>(`${this.resourceURL}/courses/${courseId}/tutorial-groups-configuration`, { observe: 'response' })\r\n            .pipe(map((res: EntityResponseType) => this.convertTutorialGroupsConfigurationResponseDatesFromServer(res)));\r\n    }\r\n    create(tutorialGroupsConfiguration: TutorialGroupsConfiguration, courseId: number, period: Date[]): Observable<EntityResponseType> {\r\n        const copy = this.convertTutorialGroupsConfigurationDatesFromClient(tutorialGroupsConfiguration, period);\r\n        return this.httpClient\r\n            .post<TutorialGroupsConfiguration>(`${this.resourceURL}/courses/${courseId}/tutorial-groups-configuration`, copy, { observe: 'response' })\r\n            .pipe(map((res: EntityResponseType) => this.convertTutorialGroupsConfigurationResponseDatesFromServer(res)));\r\n    }\r\n\r\n    update(courseId: number, tutorialGroupConfigurationId: number, tutorialGroupsConfiguration: TutorialGroupsConfiguration, period: Date[]): Observable<EntityResponseType> {\r\n        const copy = this.convertTutorialGroupsConfigurationDatesFromClient(tutorialGroupsConfiguration, period);\r\n        return this.httpClient\r\n            .put<TutorialGroupsConfiguration>(`${this.resourceURL}/courses/${courseId}/tutorial-groups-configuration/${tutorialGroupConfigurationId}`, copy, {\r\n                observe: 'response',\r\n            })\r\n            .pipe(map((res: EntityResponseType) => this.convertTutorialGroupsConfigurationResponseDatesFromServer(res)));\r\n    }\r\n\r\n    convertTutorialGroupsConfigurationDatesFromServer(tutorialGroupsConfiguration: TutorialGroupsConfiguration): TutorialGroupsConfiguration {\r\n        tutorialGroupsConfiguration.tutorialPeriodStartInclusive = convertDateFromServer(tutorialGroupsConfiguration.tutorialPeriodStartInclusive);\r\n        tutorialGroupsConfiguration.tutorialPeriodEndInclusive = convertDateFromServer(tutorialGroupsConfiguration.tutorialPeriodEndInclusive);\r\n        if (tutorialGroupsConfiguration.tutorialGroupFreePeriods) {\r\n            tutorialGroupsConfiguration.tutorialGroupFreePeriods.forEach((tutorialGroupFreePeriod) => {\r\n                tutorialGroupFreePeriod.start = convertDateFromServer(tutorialGroupFreePeriod.start);\r\n                tutorialGroupFreePeriod.end = convertDateFromServer(tutorialGroupFreePeriod.end);\r\n            });\r\n        }\r\n        return tutorialGroupsConfiguration;\r\n    }\r\n\r\n    private convertTutorialGroupsConfigurationResponseDatesFromServer(res: HttpResponse<TutorialGroupsConfiguration>): HttpResponse<TutorialGroupsConfiguration> {\r\n        if (res.body) {\r\n            res.body.tutorialPeriodStartInclusive = convertDateFromServer(res.body!.tutorialPeriodStartInclusive);\r\n            res.body!.tutorialPeriodEndInclusive = convertDateFromServer(res.body!.tutorialPeriodEndInclusive);\r\n            if (res.body!.tutorialGroupFreePeriods) {\r\n                res.body!.tutorialGroupFreePeriods.forEach((tutorialGroupFreePeriod) => {\r\n                    tutorialGroupFreePeriod.start = convertDateFromServer(tutorialGroupFreePeriod.start);\r\n                    tutorialGroupFreePeriod.end = convertDateFromServer(tutorialGroupFreePeriod.end);\r\n                });\r\n            }\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n    private convertTutorialGroupsConfigurationDatesFromClient(tutorialGroupsConfiguration: TutorialGroupsConfiguration, period: Date[]): TutorialGroupsConfiguration {\r\n        return Object.assign({}, tutorialGroupsConfiguration, {\r\n            tutorialPeriodStartInclusive: toISO8601DateString(period[0]),\r\n            tutorialPeriodEndInclusive: toISO8601DateString(period[1]),\r\n            useTutorialGroupChannels: tutorialGroupsConfiguration.useTutorialGroupChannels,\r\n            usePublicTutorialGroupChannels: tutorialGroupsConfiguration.usePublicTutorialGroupChannels,\r\n        });\r\n    }\r\n}\r\n"],
  "mappings": "+IAUA,IAAaA,GAAkC,IAAA,CAAzC,MAAOA,CAAkC,CACnCC,WAAaC,EAAOC,CAAU,EAE9BC,YAAc,oBAEtBC,eAAeC,EAAgB,CAC3B,OAAO,KAAKL,WACPM,IAAiC,GAAG,KAAKH,WAAW,YAAYE,CAAQ,iCAAkC,CAAEE,QAAS,UAAU,CAAE,EACjIC,KAAKC,EAAKC,GAA4B,KAAKC,0DAA0DD,CAAG,CAAC,CAAC,CACnH,CACAE,OAAOC,EAA0DR,EAAkBS,EAAc,CAC7F,IAAMC,EAAO,KAAKC,kDAAkDH,EAA6BC,CAAM,EACvG,OAAO,KAAKd,WACPiB,KAAkC,GAAG,KAAKd,WAAW,YAAYE,CAAQ,iCAAkCU,EAAM,CAAER,QAAS,UAAU,CAAE,EACxIC,KAAKC,EAAKC,GAA4B,KAAKC,0DAA0DD,CAAG,CAAC,CAAC,CACnH,CAEAQ,OAAOb,EAAkBc,EAAsCN,EAA0DC,EAAc,CACnI,IAAMC,EAAO,KAAKC,kDAAkDH,EAA6BC,CAAM,EACvG,OAAO,KAAKd,WACPoB,IAAiC,GAAG,KAAKjB,WAAW,YAAYE,CAAQ,kCAAkCc,CAA4B,GAAIJ,EAAM,CAC7IR,QAAS,WACZ,EACAC,KAAKC,EAAKC,GAA4B,KAAKC,0DAA0DD,CAAG,CAAC,CAAC,CACnH,CAEAW,kDAAkDR,EAAwD,CACtGA,OAAAA,EAA4BS,6BAA+BC,EAAsBV,EAA4BS,4BAA4B,EACzIT,EAA4BW,2BAA6BD,EAAsBV,EAA4BW,0BAA0B,EACjIX,EAA4BY,0BAC5BZ,EAA4BY,yBAAyBC,QAASC,GAA2B,CACrFA,EAAwBC,MAAQL,EAAsBI,EAAwBC,KAAK,EACnFD,EAAwBE,IAAMN,EAAsBI,EAAwBE,GAAG,CACnF,CAAC,EAEEhB,CACX,CAEQF,0DAA0DD,EAA8C,CAC5G,OAAIA,EAAIoB,OACJpB,EAAIoB,KAAKR,6BAA+BC,EAAsBb,EAAIoB,KAAMR,4BAA4B,EACpGZ,EAAIoB,KAAMN,2BAA6BD,EAAsBb,EAAIoB,KAAMN,0BAA0B,EAC7Fd,EAAIoB,KAAML,0BACVf,EAAIoB,KAAML,yBAAyBC,QAASC,GAA2B,CACnEA,EAAwBC,MAAQL,EAAsBI,EAAwBC,KAAK,EACnFD,EAAwBE,IAAMN,EAAsBI,EAAwBE,GAAG,CACnF,CAAC,GAIFnB,CACX,CAEQM,kDAAkDH,EAA0DC,EAAc,CAC9H,OAAOiB,OAAOC,OAAO,CAAA,EAAInB,EAA6B,CAClDS,6BAA8BW,EAAoBnB,EAAO,CAAC,CAAC,EAC3DU,2BAA4BS,EAAoBnB,EAAO,CAAC,CAAC,EACzDoB,yBAA0BrB,EAA4BqB,yBACtDC,+BAAgCtB,EAA4BsB,+BAC/D,CACL,4CA5DSpC,EAAkC,6BAAlCA,EAAkCqC,QAAlCrC,EAAkCsC,UAAAC,WADrB,MAAM,CAAA,SACnBvC,CAAkC,GAAA",
  "names": ["TutorialGroupsConfigurationService", "httpClient", "inject", "HttpClient", "resourceURL", "getOneOfCourse", "courseId", "get", "observe", "pipe", "map", "res", "convertTutorialGroupsConfigurationResponseDatesFromServer", "create", "tutorialGroupsConfiguration", "period", "copy", "convertTutorialGroupsConfigurationDatesFromClient", "post", "update", "tutorialGroupConfigurationId", "put", "convertTutorialGroupsConfigurationDatesFromServer", "tutorialPeriodStartInclusive", "convertDateFromServer", "tutorialPeriodEndInclusive", "tutorialGroupFreePeriods", "forEach", "tutorialGroupFreePeriod", "start", "end", "body", "Object", "assign", "toISO8601DateString", "useTutorialGroupChannels", "usePublicTutorialGroupChannels", "factory", "\u0275fac", "providedIn"]
}
