{
  "version": 3,
  "sources": ["src/main/webapp/app/utils/text.utils.ts"],
  "sourcesContent": ["export const escapeString = (input: string): string => input.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#039;');\r\n\r\nexport const convertToHtmlLinebreaks = (input: string): string => input.replace(/(?:\\r\\n|\\r|\\n)/g, '<br>');\r\n\r\n/**\r\n * If the string has more characters than the defined maximum length, the string is cut and an ellipsis is added.\r\n * @param input The string to shorten (if needed)\r\n * @param maxLength The maximum length in characters\r\n */\r\nexport const abbreviateString = (input: string, maxLength: number): string => {\r\n    return input.length > maxLength ? input.substring(0, maxLength) + 'â€¦' : input;\r\n};\r\n\r\n/**\r\n * Returns a pseudo-random numeric value for a given string using a simple hash function.\r\n * @param {string} str - The string used for the hash function.\r\n */\r\nexport const deterministicRandomValueFromString = (str: string): number => {\r\n    let seed = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        seed = str.charCodeAt(i) + ((seed << 5) - seed);\r\n    }\r\n    const m = 0x80000000;\r\n    const a = 1103515245;\r\n    const c = 42718;\r\n\r\n    seed = (a * seed + c) % m;\r\n\r\n    return seed / (m - 1);\r\n};\r\n\r\n/**\r\n * Returns 2 capitalized initials of a given string.\r\n * If it has multiple names, it takes the first and last (Albert Berta Muster -> AM)\r\n * If it has one name, it'll return a deterministic random other string (Albert -> AB)\r\n * If it consists of a single letter it will return the single letter.\r\n * @param {string} username - The string used to generate the initials.\r\n */\r\nexport const getInitialsFromString = (username: string): string => {\r\n    const parts = username.trim().split(/\\s+/);\r\n\r\n    let initials = '';\r\n\r\n    if (parts.length > 1) {\r\n        // Takes first and last word in string and returns their initials.\r\n        initials = parts[0][0] + parts[parts.length - 1][0];\r\n    } else {\r\n        // If only one single word, it will take the first letter and a random second.\r\n        initials = parts[0][0];\r\n        const remainder = parts[0].slice(1);\r\n        const secondInitial = remainder.match(/[a-zA-Z0-9]/);\r\n        if (secondInitial) {\r\n            initials += secondInitial[Math.floor(deterministicRandomValueFromString(username) * secondInitial.length)];\r\n        }\r\n    }\r\n\r\n    return initials.toUpperCase();\r\n};\r\n\r\n/**\r\n * Add tab to the value of textarea instead of moving to the next element in DOM\r\n * @param event the tab event\r\n * @param editor the text area as HTML element\r\n */\r\nexport const onTextEditorTab = (editor: HTMLTextAreaElement, event: Event) => {\r\n    event.preventDefault();\r\n    const value = editor.value;\r\n    const start = editor.selectionStart;\r\n    const end = editor.selectionEnd;\r\n\r\n    editor.value = value.substring(0, start) + '\\t' + value.substring(end);\r\n    editor.selectionStart = editor.selectionEnd = start + 1;\r\n};\r\n"],
  "mappings": "AAAO,IAAMA,EAAgBC,GAA0BA,EAAMC,QAAQ,KAAM,OAAO,EAAEA,QAAQ,KAAM,MAAM,EAAEA,QAAQ,KAAM,MAAM,EAAEA,QAAQ,KAAM,QAAQ,EAAEA,QAAQ,KAAM,QAAQ,EAEjKC,EAA2BF,GAA0BA,EAAMC,QAAQ,kBAAmB,MAAM,EAO5FE,EAAmBA,CAACH,EAAeI,IACrCJ,EAAMK,OAASD,EAAYJ,EAAMM,UAAU,EAAGF,CAAS,EAAI,SAAMJ,EAO/DO,EAAsCC,GAAuB,CACtE,IAAIC,EAAO,EACX,QAASC,EAAI,EAAGA,EAAIF,EAAIH,OAAQK,IAC5BD,EAAOD,EAAIG,WAAWD,CAAC,IAAMD,GAAQ,GAAKA,GAE9C,IAAMG,EAAI,WAIVH,OAAAA,GAHU,WAGEA,EAFF,OAEcG,EAEjBH,GAAQG,EAAI,EACvB,EASaC,EAAyBC,GAA4B,CAC9D,IAAMC,EAAQD,EAASE,KAAI,EAAGC,MAAM,KAAK,EAErCC,EAAW,GAEf,GAAIH,EAAMV,OAAS,EAEfa,EAAWH,EAAM,CAAC,EAAE,CAAC,EAAIA,EAAMA,EAAMV,OAAS,CAAC,EAAE,CAAC,MAC/C,CAEHa,EAAWH,EAAM,CAAC,EAAE,CAAC,EAErB,IAAMI,EADYJ,EAAM,CAAC,EAAEK,MAAM,CAAC,EACFC,MAAM,aAAa,EAC/CF,IACAD,GAAYC,EAAcG,KAAKC,MAAMhB,EAAmCO,CAAQ,EAAIK,EAAcd,MAAM,CAAC,EAEjH,CAEA,OAAOa,EAASM,YAAW,CAC/B,EAOaC,EAAkBA,CAACC,EAA6BC,IAAgB,CACzEA,EAAMC,eAAc,EACpB,IAAMC,EAAQH,EAAOG,MACfC,EAAQJ,EAAOK,eACfC,EAAMN,EAAOO,aAEnBP,EAAOG,MAAQA,EAAMvB,UAAU,EAAGwB,CAAK,EAAI,IAAOD,EAAMvB,UAAU0B,CAAG,EACrEN,EAAOK,eAAiBL,EAAOO,aAAeH,EAAQ,CAC1D",
  "names": ["escapeString", "input", "replace", "convertToHtmlLinebreaks", "abbreviateString", "maxLength", "length", "substring", "deterministicRandomValueFromString", "str", "seed", "i", "charCodeAt", "m", "getInitialsFromString", "username", "parts", "trim", "split", "initials", "secondInitial", "slice", "match", "Math", "floor", "toUpperCase", "onTextEditorTab", "editor", "event", "preventDefault", "value", "start", "selectionStart", "end", "selectionEnd"]
}
