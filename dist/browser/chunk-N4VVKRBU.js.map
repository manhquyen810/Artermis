{
  "version": 3,
  "sources": ["src/main/webapp/app/exercises/programming/shared/service/build-log.service.ts"],
  "sourcesContent": ["import { Injectable, inject } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { BuildLogEntry } from 'app/entities/programming/build-log.model';\r\n\r\nexport interface IBuildLogService {\r\n    getBuildLogs: (participationId: number, resultId?: number) => Observable<BuildLogEntry[]>;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class BuildLogService implements IBuildLogService {\r\n    private http = inject(HttpClient);\r\n\r\n    private assignmentResourceUrl = 'api/programming/repository';\r\n\r\n    /**\r\n     * Retrieves the build logs for a given participation and optionally, a given result.\r\n     * @param participationId The identifier of the participation.\r\n     * @param resultId The identifier of an optional result to specify which submission to use\r\n     */\r\n    getBuildLogs(participationId: number, resultId?: number): Observable<BuildLogEntry[]> {\r\n        let params = new HttpParams();\r\n        if (resultId) {\r\n            params = params.set('resultId', resultId);\r\n        }\r\n        return this.http.get<BuildLogEntry[]>(`${this.assignmentResourceUrl}/${participationId}/buildlogs`, { params });\r\n    }\r\n}\r\n"],
  "mappings": "gGAUA,IAAaA,GAAe,IAAA,CAAtB,MAAOA,CAAe,CAChBC,KAAOC,EAAOC,CAAU,EAExBC,sBAAwB,6BAOhCC,aAAaC,EAAyBC,EAAiB,CACnD,IAAIC,EAAS,IAAIC,EACjB,OAAIF,IACAC,EAASA,EAAOE,IAAI,WAAYH,CAAQ,GAErC,KAAKN,KAAKU,IAAqB,GAAG,KAAKP,qBAAqB,IAAIE,CAAe,aAAc,CAAEE,OAAAA,CAAM,CAAE,CAClH,4CAhBSR,EAAe,6BAAfA,EAAeY,QAAfZ,EAAea,UAAAC,WADF,MAAM,CAAA,SACnBd,CAAe,GAAA",
  "names": ["BuildLogService", "http", "inject", "HttpClient", "assignmentResourceUrl", "getBuildLogs", "participationId", "resultId", "params", "HttpParams", "set", "get", "factory", "\u0275fac", "providedIn"]
}
