{
  "version": 3,
  "sources": ["src/main/webapp/app/shared/feature-toggle/feature-toggle-hide.directive.ts"],
  "sourcesContent": ["import { Directive, HostBinding, Input, OnDestroy, OnInit, inject } from '@angular/core';\r\nimport { FeatureToggle, FeatureToggleService } from 'app/shared/feature-toggle/feature-toggle.service';\r\nimport { Subscription } from 'rxjs/internal/Subscription';\r\n\r\n@Directive({ selector: '[jhiFeatureToggleHide]' })\r\nexport class FeatureToggleHideDirective implements OnInit, OnDestroy {\r\n    private featureToggleService = inject(FeatureToggleService);\r\n\r\n    @Input('jhiFeatureToggleHide') feature?: FeatureToggle;\r\n\r\n    private featureActive = true;\r\n\r\n    private featureToggleActiveSubscription: Subscription;\r\n\r\n    ngOnInit() {\r\n        if (this.feature) {\r\n            this.featureToggleActiveSubscription = this.featureToggleService.getFeatureToggleActive(this.feature).subscribe((active) => {\r\n                this.featureActive = active;\r\n            });\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.featureToggleActiveSubscription?.unsubscribe();\r\n    }\r\n\r\n    /**\r\n     * This will hide the element if the feature is inactive.\r\n     */\r\n    @HostBinding('class.d-none')\r\n    get hidden(): boolean {\r\n        return !this.featureActive;\r\n    }\r\n}\r\n"],
  "mappings": "iGAKA,IAAaA,GAA0B,IAAA,CAAjC,MAAOA,CAA0B,CAC3BC,qBAAuBC,EAAOC,CAAoB,EAE3BC,QAEvBC,cAAgB,GAEhBC,gCAERC,UAAQ,CACA,KAAKH,UACL,KAAKE,gCAAkC,KAAKL,qBAAqBO,uBAAuB,KAAKJ,OAAO,EAAEK,UAAWC,GAAU,CACvH,KAAKL,cAAgBK,CACzB,CAAC,EAET,CAEAC,aAAW,CACP,KAAKL,iCAAiCM,YAAW,CACrD,CAKA,IACIC,QAAM,CACN,MAAO,CAAC,KAAKR,aACjB,4CA3BSL,EAA0B,2BAA1BA,EAA0Bc,UAAA,CAAA,CAAA,GAAA,uBAAA,EAAA,CAAA,EAAAC,SAAA,EAAAC,aAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,GAA1BE,EAAA,SAAAD,EAAAL,MAAA,kEAAAb,CAA0B,GAAA",
  "names": ["FeatureToggleHideDirective", "featureToggleService", "inject", "FeatureToggleService", "feature", "featureActive", "featureToggleActiveSubscription", "ngOnInit", "getFeatureToggleActive", "subscribe", "active", "ngOnDestroy", "unsubscribe", "hidden", "selectors", "hostVars", "hostBindings", "rf", "ctx", "\u0275\u0275classProp"]
}
