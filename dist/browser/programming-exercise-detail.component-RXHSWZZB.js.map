{
  "version": 3,
  "sources": ["src/main/webapp/app/exercises/programming/shared/actions/programming-exercise-instructor-exercise-download.component.ts", "src/main/webapp/app/exercises/programming/manage/programming-exercise-detail.component.ts", "src/main/webapp/app/exercises/programming/manage/programming-exercise-detail.component.html"],
  "sourcesContent": ["import { Component, Input, inject } from '@angular/core';\r\nimport { ButtonSize, ButtonType } from 'app/shared/components/button.component';\r\nimport { FeatureToggle } from 'app/shared/feature-toggle/feature-toggle.service';\r\nimport { ProgrammingExerciseService } from 'app/exercises/programming/manage/services/programming-exercise.service';\r\nimport { downloadZipFileFromResponse } from 'app/shared/util/download.util';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { faDownload } from '@fortawesome/free-solid-svg-icons';\r\nimport { ButtonComponent } from 'app/shared/components/button.component';\r\n\r\n@Component({\r\n    selector: 'jhi-programming-exercise-instructor-exercise-download',\r\n    template: `\r\n        <jhi-button\r\n            [disabled]=\"!exerciseId\"\r\n            [btnType]=\"ButtonType.INFO\"\r\n            [btnSize]=\"ButtonSize.SMALL\"\r\n            [shouldSubmit]=\"false\"\r\n            [featureToggle]=\"[FeatureToggle.ProgrammingExercises, FeatureToggle.Exports]\"\r\n            [icon]=\"faDownload\"\r\n            [title]=\"'artemisApp.programmingExercise.export.downloadExercise'\"\r\n            (onClick)=\"exportExercise()\"\r\n        />\r\n    `,\r\n    imports: [ButtonComponent],\r\n})\r\nexport class ProgrammingExerciseInstructorExerciseDownloadComponent {\r\n    private programmingExerciseService = inject(ProgrammingExerciseService);\r\n    private alertService = inject(AlertService);\r\n\r\n    ButtonType = ButtonType;\r\n    ButtonSize = ButtonSize;\r\n    readonly FeatureToggle = FeatureToggle;\r\n\r\n    @Input()\r\n    exerciseId: number;\r\n\r\n    // Icons\r\n    faDownload = faDownload;\r\n\r\n    exportExercise() {\r\n        if (this.exerciseId) {\r\n            this.programmingExerciseService.exportInstructorExercise(this.exerciseId).subscribe(\r\n                (response) => {\r\n                    downloadZipFileFromResponse(response);\r\n                    this.alertService.success('artemisApp.programmingExercise.export.successMessageExercise');\r\n                },\r\n                () => this.alertService.error('error.exportFailed'),\r\n            );\r\n        }\r\n    }\r\n}\r\n", "import { Component, OnDestroy, OnInit, ViewEncapsulation, inject } from '@angular/core';\r\nimport { ActivatedRoute, Router, RouterLink } from '@angular/router';\r\nimport { SafeHtml } from '@angular/platform-browser';\r\nimport { ProgrammingExerciseBuildConfig } from 'app/entities/programming/programming-exercise-build.config';\r\nimport { ExerciseDetailStatisticsComponent } from 'app/exercises/shared/statistics/exercise-detail-statistics.component';\r\nimport { Subject, Subscription, of } from 'rxjs';\r\nimport { ProgrammingExercise, ProgrammingLanguage } from 'app/entities/programming/programming-exercise.model';\r\nimport { ProgrammingExerciseService } from 'app/exercises/programming/manage/services/programming-exercise.service';\r\nimport { AlertService, AlertType } from 'app/core/util/alert.service';\r\nimport { ProgrammingExerciseParticipationType } from 'app/entities/programming/programming-exercise-participation.model';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { ActionType } from 'app/shared/delete-dialog/delete-dialog.model';\r\nimport { FeatureToggle } from 'app/shared/feature-toggle/feature-toggle.service';\r\nimport { ExerciseService } from 'app/exercises/shared/exercise/exercise.service';\r\nimport { ExerciseType, IncludedInOverallScore } from 'app/entities/exercise.model';\r\nimport { NgbModal, NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ConfirmAutofocusModalComponent } from 'app/shared/components/confirm-autofocus-modal.component';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ProfileService } from 'app/shared/layouts/profiles/profile.service';\r\nimport { ExerciseManagementStatisticsDto } from 'app/exercises/shared/statistics/exercise-management-statistics-dto';\r\nimport { StatisticsService } from 'app/shared/statistics-graph/statistics.service';\r\nimport dayjs from 'dayjs/esm';\r\nimport { AssessmentType } from 'app/entities/assessment-type.model';\r\nimport { EventManager } from 'app/core/util/event-manager.service';\r\nimport { createBuildPlanUrl } from 'app/exercises/programming/shared/utils/programming-exercise.utils';\r\nimport { ConsistencyCheckComponent } from 'app/shared/consistency-check/consistency-check.component';\r\nimport { SubmissionPolicyService } from 'app/exercises/programming/manage/services/submission-policy.service';\r\nimport {\r\n    faBook,\r\n    faChartBar,\r\n    faCheckDouble,\r\n    faExclamationTriangle,\r\n    faEye,\r\n    faFileSignature,\r\n    faListAlt,\r\n    faPencilAlt,\r\n    faRobot,\r\n    faTable,\r\n    faTrash,\r\n    faUndo,\r\n    faUserCheck,\r\n    faUsers,\r\n    faWrench,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { ButtonSize } from 'app/shared/components/button.component';\r\nimport { ProgrammingLanguageFeatureService } from 'app/exercises/programming/shared/service/programming-language-feature/programming-language-feature.service';\r\nimport { DocumentationButtonComponent, DocumentationType } from 'app/shared/components/documentation-button/documentation-button.component';\r\nimport { ConsistencyCheckService } from 'app/shared/consistency-check/consistency-check.service';\r\nimport { hasEditableBuildPlan } from 'app/shared/layouts/profiles/profile-info.model';\r\nimport { PROFILE_IRIS, PROFILE_LOCALCI, PROFILE_LOCALVC } from 'app/app.constants';\r\nimport { ArtemisMarkdownService } from 'app/shared/markdown.service';\r\nimport { DetailOverviewListComponent, DetailOverviewSection, DetailType } from 'app/detail-overview-list/detail-overview-list.component';\r\nimport { IrisSettingsService } from 'app/iris/settings/shared/iris-settings.service';\r\nimport { IrisSubSettingsType } from 'app/entities/iris/settings/iris-sub-settings.model';\r\nimport { Detail } from 'app/detail-overview-list/detail.model';\r\nimport { Competency } from 'app/entities/competency.model';\r\nimport { AeolusService } from 'app/exercises/programming/shared/service/aeolus.service';\r\nimport { catchError, mergeMap, tap } from 'rxjs/operators';\r\nimport { ProgrammingExerciseGitDiffReport } from 'app/entities/programming-exercise-git-diff-report.model';\r\nimport { BuildLogStatisticsDTO } from 'app/entities/programming/build-log-statistics-dto';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { OrionFilterDirective } from 'app/shared/orion/orion-filter.directive';\r\nimport { FeatureToggleLinkDirective } from 'app/shared/feature-toggle/feature-toggle-link.directive';\r\nimport { ProgrammingExerciseInstructorExerciseDownloadComponent } from '../shared/actions/programming-exercise-instructor-exercise-download.component';\r\nimport { FeatureToggleDirective } from 'app/shared/feature-toggle/feature-toggle.directive';\r\nimport { ProgrammingExerciseResetButtonDirective } from './reset/programming-exercise-reset-button.directive';\r\nimport { DeleteButtonDirective } from 'app/shared/delete-dialog/delete-button.directive';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\nimport { RepositoryType } from 'app/exercises/programming/shared/code-editor/model/code-editor.model';\r\n\r\n@Component({\r\n    selector: 'jhi-programming-exercise-detail',\r\n    templateUrl: './programming-exercise-detail.component.html',\r\n    styleUrls: ['./programming-exercise-detail.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    imports: [\r\n        TranslateDirective,\r\n        DocumentationButtonComponent,\r\n        RouterLink,\r\n        FaIconComponent,\r\n        OrionFilterDirective,\r\n        FeatureToggleLinkDirective,\r\n        NgbTooltip,\r\n        ProgrammingExerciseInstructorExerciseDownloadComponent,\r\n        FeatureToggleDirective,\r\n        ProgrammingExerciseResetButtonDirective,\r\n        DeleteButtonDirective,\r\n        ExerciseDetailStatisticsComponent,\r\n        DetailOverviewListComponent,\r\n        ArtemisTranslatePipe,\r\n    ],\r\n})\r\nexport class ProgrammingExerciseDetailComponent implements OnInit, OnDestroy {\r\n    private activatedRoute = inject(ActivatedRoute);\r\n    private accountService = inject(AccountService);\r\n    private programmingExerciseService = inject(ProgrammingExerciseService);\r\n    exerciseService = inject(ExerciseService);\r\n    private artemisMarkdown = inject(ArtemisMarkdownService);\r\n    private alertService = inject(AlertService);\r\n    private programmingExerciseSubmissionPolicyService = inject(SubmissionPolicyService);\r\n    private eventManager = inject(EventManager);\r\n    modalService = inject(NgbModal);\r\n    private translateService = inject(TranslateService);\r\n    private profileService = inject(ProfileService);\r\n    private statisticsService = inject(StatisticsService);\r\n    private router = inject(Router);\r\n    private programmingLanguageFeatureService = inject(ProgrammingLanguageFeatureService);\r\n    private consistencyCheckService = inject(ConsistencyCheckService);\r\n    private irisSettingsService = inject(IrisSettingsService);\r\n    private aeolusService = inject(AeolusService);\r\n\r\n    protected readonly dayjs = dayjs;\r\n    protected readonly ActionType = ActionType;\r\n    protected readonly ProgrammingExerciseParticipationType = ProgrammingExerciseParticipationType;\r\n    protected readonly FeatureToggle = FeatureToggle;\r\n    protected readonly ProgrammingLanguage = ProgrammingLanguage;\r\n    protected readonly PROGRAMMING = ExerciseType.PROGRAMMING;\r\n    protected readonly ButtonSize = ButtonSize;\r\n    protected readonly AssessmentType = AssessmentType;\r\n    protected readonly RepositoryType = RepositoryType;\r\n    protected readonly documentationType: DocumentationType = 'Programming';\r\n\r\n    protected readonly faUndo = faUndo;\r\n    protected readonly faTrash = faTrash;\r\n    protected readonly faBook = faBook;\r\n    protected readonly faWrench = faWrench;\r\n    protected readonly faCheckDouble = faCheckDouble;\r\n    protected readonly faTable = faTable;\r\n    protected readonly faExclamationTriangle = faExclamationTriangle;\r\n    protected readonly faFileSignature = faFileSignature;\r\n    protected readonly faListAlt = faListAlt;\r\n    protected readonly faChartBar = faChartBar;\r\n    protected readonly faPencilAlt = faPencilAlt;\r\n    protected readonly faUsers = faUsers;\r\n    protected readonly faEye = faEye;\r\n    protected readonly faUserCheck = faUserCheck;\r\n    protected readonly faRobot = faRobot;\r\n\r\n    programmingExercise: ProgrammingExercise;\r\n    programmingExerciseBuildConfig?: ProgrammingExerciseBuildConfig;\r\n    competencies: Competency[];\r\n    isExamExercise: boolean;\r\n    supportsAuxiliaryRepositories: boolean;\r\n    baseResource: string;\r\n    shortBaseResource: string;\r\n    teamBaseResource: string;\r\n    loadingTemplateParticipationResults = true;\r\n    loadingSolutionParticipationResults = true;\r\n    lockingOrUnlockingRepositories = false;\r\n    courseId: number;\r\n    doughnutStats: ExerciseManagementStatisticsDto;\r\n    formattedGradingInstructions: SafeHtml;\r\n    // Used to hide links to repositories and build plans when the \"localvc\" profile is active.\r\n    // Also used to hide the buttons to lock and unlock all repositories as that does not do anything in the local VCS.\r\n    localVCEnabled = false;\r\n    localCIEnabled = false;\r\n    irisEnabled = false;\r\n    irisChatEnabled = false;\r\n\r\n    isAdmin = false;\r\n    addedLineCount: number;\r\n    removedLineCount: number;\r\n    isLoadingDiffReport: boolean;\r\n    isBuildPlanEditable = false;\r\n\r\n    plagiarismCheckSupported = false; // default value\r\n\r\n    private activatedRouteSubscription: Subscription;\r\n    private templateAndSolutionParticipationSubscription: Subscription;\r\n    private irisSettingsSubscription: Subscription;\r\n    private exerciseStatisticsSubscription: Subscription;\r\n\r\n    private dialogErrorSource = new Subject<string>();\r\n    dialogError$ = this.dialogErrorSource.asObservable();\r\n\r\n    exerciseDetailSections: DetailOverviewSection[];\r\n\r\n    ngOnInit() {\r\n        this.checkBuildPlanEditable();\r\n\r\n        this.activatedRouteSubscription = this.activatedRoute.data.subscribe(({ programmingExercise }) => {\r\n            this.programmingExercise = programmingExercise;\r\n            this.programmingExerciseBuildConfig = programmingExercise.buildConfig;\r\n            this.competencies = programmingExercise.competencies;\r\n            const exerciseId = this.programmingExercise.id!;\r\n            this.isExamExercise = !!this.programmingExercise.exerciseGroup;\r\n            this.courseId = this.isExamExercise ? this.programmingExercise.exerciseGroup!.exam!.course!.id! : this.programmingExercise.course!.id!;\r\n            this.isAdmin = this.accountService.isAdmin();\r\n            this.formattedGradingInstructions = this.artemisMarkdown.safeHtmlForMarkdown(this.programmingExercise.gradingInstructions);\r\n\r\n            if (!this.isExamExercise) {\r\n                this.baseResource = `/course-management/${this.courseId}/programming-exercises/${exerciseId}/`;\r\n                this.shortBaseResource = `/course-management/${this.courseId}/`;\r\n                this.teamBaseResource = `/course-management/${this.courseId}/exercises/${exerciseId}/`;\r\n            } else {\r\n                this.baseResource =\r\n                    `/course-management/${this.courseId}/exams/${this.programmingExercise.exerciseGroup?.exam?.id}` +\r\n                    `/exercise-groups/${this.programmingExercise.exerciseGroup?.id}/programming-exercises/${exerciseId}/`;\r\n                this.shortBaseResource = `/course-management/${this.courseId}/exams/${this.programmingExercise.exerciseGroup?.exam?.id}/`;\r\n                this.teamBaseResource =\r\n                    `/course-management/${this.courseId}/exams/${this.programmingExercise.exerciseGroup?.exam?.id}` +\r\n                    `/exercise-groups/${this.programmingExercise.exerciseGroup?.id}/exercises/${this.programmingExercise.exerciseGroup?.exam?.id}/`;\r\n            }\r\n\r\n            this.templateAndSolutionParticipationSubscription = this.programmingExerciseService\r\n                .findWithTemplateAndSolutionParticipationAndLatestResults(programmingExercise.id!)\r\n                .pipe(\r\n                    tap((updatedProgrammingExercise) => {\r\n                        this.programmingExercise = updatedProgrammingExercise.body!;\r\n                        this.loadingTemplateParticipationResults = false;\r\n                        this.loadingSolutionParticipationResults = false;\r\n                    }),\r\n                    mergeMap(() => this.profileService.getProfileInfo()),\r\n                    tap((profileInfo) => {\r\n                        if (profileInfo) {\r\n                            if (this.programmingExercise.projectKey && this.programmingExercise.templateParticipation?.buildPlanId) {\r\n                                this.programmingExercise.templateParticipation.buildPlanUrl = createBuildPlanUrl(\r\n                                    profileInfo.buildPlanURLTemplate,\r\n                                    this.programmingExercise.projectKey,\r\n                                    this.programmingExercise.templateParticipation.buildPlanId,\r\n                                );\r\n                            }\r\n                            if (this.programmingExercise.projectKey && this.programmingExercise.solutionParticipation?.buildPlanId) {\r\n                                this.programmingExercise.solutionParticipation.buildPlanUrl = createBuildPlanUrl(\r\n                                    profileInfo.buildPlanURLTemplate,\r\n                                    this.programmingExercise.projectKey,\r\n                                    this.programmingExercise.solutionParticipation.buildPlanId,\r\n                                );\r\n                            }\r\n                            this.supportsAuxiliaryRepositories =\r\n                                this.programmingLanguageFeatureService.getProgrammingLanguageFeature(programmingExercise.programmingLanguage)?.auxiliaryRepositoriesSupported ??\r\n                                false;\r\n                            this.localVCEnabled = profileInfo.activeProfiles.includes(PROFILE_LOCALVC);\r\n                            this.localCIEnabled = profileInfo.activeProfiles.includes(PROFILE_LOCALCI);\r\n                            this.irisEnabled = profileInfo.activeProfiles.includes(PROFILE_IRIS);\r\n                            if (this.irisEnabled && !this.isExamExercise) {\r\n                                this.irisSettingsSubscription = this.irisSettingsService.getCombinedCourseSettings(this.courseId).subscribe((settings) => {\r\n                                    this.irisChatEnabled = settings?.irisChatSettings?.enabled ?? false;\r\n                                });\r\n                            }\r\n                        }\r\n                    }),\r\n                    mergeMap(() => this.programmingExerciseSubmissionPolicyService.getSubmissionPolicyOfProgrammingExercise(exerciseId)),\r\n                    tap((submissionPolicy) => {\r\n                        this.programmingExercise.submissionPolicy = submissionPolicy;\r\n                    }),\r\n                    mergeMap(() => this.programmingExerciseService.getDiffReport(exerciseId)),\r\n                    catchError(() => {\r\n                        this.alertService.error('artemisApp.programmingExercise.diffReportError');\r\n                        return of(undefined);\r\n                    }),\r\n                    tap((gitDiffReport) => {\r\n                        this.processGitDiffReport(gitDiffReport);\r\n                    }),\r\n                )\r\n                // split pipe to keep type checks\r\n                .pipe(\r\n                    mergeMap(() =>\r\n                        this.programmingExercise.isAtLeastEditor ? this.programmingExerciseService.getBuildLogStatistics(exerciseId!) : of([] as BuildLogStatisticsDTO),\r\n                    ),\r\n                    tap((buildLogStatistics) => {\r\n                        if (this.programmingExercise.isAtLeastEditor) {\r\n                            this.programmingExercise.buildLogStatistics = buildLogStatistics;\r\n                        }\r\n                    }),\r\n                )\r\n                .subscribe({\r\n                    next: () => {\r\n                        this.checkAndAlertInconsistencies();\r\n                        this.plagiarismCheckSupported =\r\n                            this.programmingLanguageFeatureService.getProgrammingLanguageFeature(programmingExercise.programmingLanguage)?.plagiarismCheckSupported ?? false;\r\n\r\n                        /** we make sure to await the results of the subscriptions (switchMap) to only call {@link getExerciseDetails} once */\r\n                        this.exerciseDetailSections = this.getExerciseDetails();\r\n                    },\r\n                    error: (error) => {\r\n                        this.alertService.error(error.message);\r\n                    },\r\n                });\r\n\r\n            this.exerciseStatisticsSubscription = this.statisticsService.getExerciseStatistics(exerciseId!).subscribe((statistics: ExerciseManagementStatisticsDto) => {\r\n                this.doughnutStats = statistics;\r\n            });\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.dialogErrorSource.unsubscribe();\r\n        this.activatedRouteSubscription?.unsubscribe();\r\n        this.templateAndSolutionParticipationSubscription?.unsubscribe();\r\n        this.irisSettingsSubscription?.unsubscribe();\r\n        this.exerciseStatisticsSubscription?.unsubscribe();\r\n    }\r\n\r\n    /**\r\n     * <strong>BE CAREFUL WHEN CALLING THIS METHOD!</strong><br>\r\n     * This method can cause child components to re-render, which can lead to re-initializations resulting\r\n     * in unnecessary requests putting load on the server.\r\n     *\r\n     * <strong>When adding a new call to this method, make sure that no duplicated and unnecessary requests are made.</strong>\r\n     */\r\n    getExerciseDetails(): DetailOverviewSection[] {\r\n        const exercise = this.programmingExercise;\r\n        exercise.buildConfig = this.programmingExerciseBuildConfig;\r\n        return [\r\n            this.getExerciseDetailsGeneralSection(exercise),\r\n            this.getExerciseDetailsModeSection(exercise),\r\n            this.getExerciseDetailsLanguageSection(exercise),\r\n            this.getExerciseDetailsProblemSection(exercise),\r\n            this.getExerciseDetailsGradingSection(exercise),\r\n        ] as DetailOverviewSection[];\r\n    }\r\n\r\n    getExerciseDetailsGeneralSection(exercise: ProgrammingExercise): DetailOverviewSection {\r\n        return {\r\n            headline: 'artemisApp.programmingExercise.wizardMode.detailedSteps.generalInfoStepTitle',\r\n            details: [\r\n                exercise.course && {\r\n                    type: DetailType.Link,\r\n                    title: 'artemisApp.exercise.course',\r\n                    data: { text: exercise.course?.title, routerLink: ['/course-management', exercise.course?.id] },\r\n                },\r\n                exercise.exerciseGroup && {\r\n                    type: DetailType.Link,\r\n                    title: 'artemisApp.exercise.course',\r\n                    data: { text: exercise.exerciseGroup?.exam?.course?.id, routerLink: ['/course-management', exercise.exerciseGroup?.exam?.course?.id] },\r\n                },\r\n                exercise.exerciseGroup && {\r\n                    type: DetailType.Link,\r\n                    title: 'artemisApp.exercise.exam',\r\n                    data: {\r\n                        text: exercise.exerciseGroup?.exam?.title,\r\n                        routerLink: ['/course-management', exercise.exerciseGroup?.exam?.course?.id, 'exams', exercise.exerciseGroup?.exam?.id],\r\n                    },\r\n                },\r\n                { type: DetailType.Text, title: 'artemisApp.exercise.title', data: { text: exercise.title } },\r\n                { type: DetailType.Text, title: 'artemisApp.exercise.shortName', data: { text: exercise.shortName } },\r\n                {\r\n                    type: DetailType.Text,\r\n                    title: 'artemisApp.exercise.categories',\r\n                    data: { text: exercise.categories?.map((category) => category.category?.toUpperCase()).join(', ') },\r\n                },\r\n            ],\r\n        };\r\n    }\r\n\r\n    getExerciseDetailsModeSection(exercise: ProgrammingExercise): DetailOverviewSection {\r\n        return {\r\n            headline: 'artemisApp.programmingExercise.wizardMode.detailedSteps.difficultyStepTitle',\r\n            details: [\r\n                {\r\n                    type: DetailType.Text,\r\n                    title: 'artemisApp.exercise.difficulty',\r\n                    data: { text: exercise.difficulty },\r\n                },\r\n                {\r\n                    type: DetailType.Text,\r\n                    title: 'artemisApp.exercise.mode',\r\n                    data: { text: exercise.mode },\r\n                },\r\n                exercise.teamAssignmentConfig && {\r\n                    type: DetailType.Text,\r\n                    title: 'artemisApp.exercise.teamAssignmentConfig.teamSize',\r\n                    data: { text: `Min. ${exercise.teamAssignmentConfig.minTeamSize}, Max. ${exercise.teamAssignmentConfig.maxTeamSize}` },\r\n                },\r\n                {\r\n                    type: DetailType.Boolean,\r\n                    title: 'artemisApp.programmingExercise.allowOfflineIde.title',\r\n                    data: { boolean: exercise.allowOfflineIde ?? false },\r\n                },\r\n                {\r\n                    type: DetailType.Boolean,\r\n                    title: 'artemisApp.programmingExercise.allowOnlineEditor.title',\r\n                    data: { boolean: exercise.allowOnlineEditor ?? false },\r\n                },\r\n                {\r\n                    type: DetailType.Boolean,\r\n                    title: 'artemisApp.programmingExercise.allowOnlineIde.title',\r\n                    data: { boolean: exercise.allowOnlineIde ?? false },\r\n                },\r\n            ],\r\n        };\r\n    }\r\n\r\n    getExerciseDetailsLanguageSection(exercise: ProgrammingExercise): DetailOverviewSection {\r\n        this.checkAndSetWindFile(exercise);\r\n        return {\r\n            headline: 'artemisApp.programmingExercise.wizardMode.detailedSteps.languageStepTitle',\r\n            details: [\r\n                {\r\n                    type: DetailType.Text,\r\n                    title: 'artemisApp.programmingExercise.programmingLanguage',\r\n                    data: { text: exercise.programmingLanguage?.toUpperCase() },\r\n                },\r\n                {\r\n                    type: DetailType.Boolean,\r\n                    title: 'artemisApp.programmingExercise.sequentialTestRuns.title',\r\n                    data: { boolean: exercise.buildConfig?.sequentialTestRuns },\r\n                },\r\n                {\r\n                    type: DetailType.ProgrammingRepositoryButtons,\r\n                    title: 'artemisApp.programmingExercise.templateRepositoryUri',\r\n                    data: {\r\n                        participation: exercise.templateParticipation,\r\n                        exerciseId: exercise.id,\r\n                        type: RepositoryType.TEMPLATE,\r\n                    },\r\n                },\r\n                {\r\n                    type: DetailType.ProgrammingRepositoryButtons,\r\n                    title: 'artemisApp.programmingExercise.solutionRepositoryUri',\r\n                    data: {\r\n                        participation: exercise.solutionParticipation,\r\n                        exerciseId: exercise.id,\r\n                        type: RepositoryType.SOLUTION,\r\n                    },\r\n                },\r\n                {\r\n                    type: DetailType.ProgrammingRepositoryButtons,\r\n                    title: 'artemisApp.programmingExercise.testRepositoryUri',\r\n                    data: {\r\n                        participation: { repositoryUri: exercise.testRepositoryUri },\r\n                        exerciseId: exercise.id,\r\n                        type: RepositoryType.TESTS,\r\n                    },\r\n                },\r\n                this.supportsAuxiliaryRepositories &&\r\n                    !!exercise.auxiliaryRepositories?.length && {\r\n                        type: DetailType.ProgrammingAuxiliaryRepositoryButtons,\r\n                        title: 'artemisApp.programmingExercise.auxiliaryRepositories',\r\n                        data: {\r\n                            auxiliaryRepositories: exercise.auxiliaryRepositories,\r\n                            exerciseId: exercise.id,\r\n                        },\r\n                    },\r\n                exercise.isAtLeastEditor &&\r\n                    this.localCIEnabled && {\r\n                        type: DetailType.ProgrammingCheckoutDirectories,\r\n                        title: 'artemisApp.programmingExercise.checkoutDirectories',\r\n                        data: {\r\n                            exercise: exercise,\r\n                            programmingLanguage: exercise.programmingLanguage,\r\n                            isLocal: true,\r\n                        },\r\n                    },\r\n                !this.localCIEnabled && {\r\n                    type: DetailType.Link,\r\n                    title: 'artemisApp.programmingExercise.templateBuildPlanId',\r\n                    data: {\r\n                        href: exercise.templateParticipation?.buildPlanUrl,\r\n                        text: exercise.templateParticipation?.buildPlanId,\r\n                    },\r\n                },\r\n                !this.localCIEnabled && {\r\n                    type: DetailType.Link,\r\n                    title: 'artemisApp.programmingExercise.solutionBuildPlanId',\r\n                    data: {\r\n                        href: exercise.solutionParticipation?.buildPlanUrl,\r\n                        text: exercise.solutionParticipation?.buildPlanId,\r\n                    },\r\n                },\r\n                {\r\n                    type: DetailType.ProgrammingTestStatus,\r\n                    title: 'artemisApp.programmingExercise.templateResult',\r\n                    data: {\r\n                        exercise,\r\n                        participation: exercise.templateParticipation,\r\n                        loading: this.loadingTemplateParticipationResults,\r\n                        submissionRouterLink: exercise.templateParticipation && this.getParticipationSubmissionLink(exercise.templateParticipation.id!),\r\n                        onParticipationChange: () => this.onParticipationChange(),\r\n                        type: ProgrammingExerciseParticipationType.TEMPLATE,\r\n                    },\r\n                },\r\n                {\r\n                    type: DetailType.ProgrammingTestStatus,\r\n                    title: 'artemisApp.programmingExercise.solutionResult',\r\n                    data: {\r\n                        exercise,\r\n                        participation: exercise.solutionParticipation,\r\n                        loading: this.loadingSolutionParticipationResults,\r\n                        submissionRouterLink: exercise.solutionParticipation && this.getParticipationSubmissionLink(exercise.solutionParticipation.id!),\r\n                        onParticipationChange: () => this.onParticipationChange(),\r\n                        type: ProgrammingExerciseParticipationType.SOLUTION,\r\n                    },\r\n                },\r\n                this.addedLineCount !== undefined &&\r\n                    this.removedLineCount !== undefined && {\r\n                        type: DetailType.ProgrammingDiffReport,\r\n                        title: 'artemisApp.programmingExercise.diffReport.title',\r\n                        titleHelpText: 'artemisApp.programmingExercise.diffReport.detailedTooltip',\r\n                        data: {\r\n                            addedLineCount: this.addedLineCount,\r\n                            removedLineCount: this.removedLineCount,\r\n                            isLoadingDiffReport: this.isLoadingDiffReport,\r\n                            gitDiffReport: exercise.gitDiffReport,\r\n                        },\r\n                    },\r\n                !!exercise.buildConfig?.buildScript &&\r\n                    !!exercise.buildConfig?.windfile?.metadata?.docker?.image && {\r\n                        type: DetailType.Text,\r\n                        title: 'artemisApp.programmingExercise.dockerImage',\r\n                        data: { text: exercise.buildConfig?.windfile?.metadata?.docker?.image },\r\n                    },\r\n                !!exercise.buildConfig?.buildScript &&\r\n                    !!exercise.buildConfig?.windfile?.metadata?.docker?.image && {\r\n                        type: DetailType.Markdown,\r\n                        title: 'artemisApp.programmingExercise.script',\r\n                        titleHelpText: 'artemisApp.programmingExercise.revertToTemplateBuildPlan',\r\n                        data: { innerHtml: this.artemisMarkdown.safeHtmlForMarkdown('```bash\\n' + exercise.buildConfig?.buildScript + '\\n```') },\r\n                    },\r\n                {\r\n                    type: DetailType.Text,\r\n                    title: 'artemisApp.programmingExercise.packageName',\r\n                    data: { text: exercise.packageName },\r\n                },\r\n            ],\r\n        };\r\n    }\r\n\r\n    getExerciseDetailsProblemSection(exercise: ProgrammingExercise): DetailOverviewSection {\r\n        const hasCompetencies = !!this.competencies?.length;\r\n        const details: Detail[] = [\r\n            {\r\n                title: hasCompetencies ? 'artemisApp.programmingExercise.wizardMode.detailedSteps.problemStepTitle' : undefined,\r\n                type: DetailType.ProgrammingProblemStatement,\r\n                data: { exercise: exercise },\r\n            },\r\n        ];\r\n\r\n        if (hasCompetencies) {\r\n            details.push({\r\n                title: 'artemisApp.competency.link.title',\r\n                type: DetailType.Text,\r\n                data: { text: this.competencies?.map((competency) => competency.title).join(', ') },\r\n            });\r\n        }\r\n\r\n        return {\r\n            headline: 'artemisApp.programmingExercise.wizardMode.detailedSteps.problemStepTitle',\r\n            details: details,\r\n        };\r\n    }\r\n\r\n    getExerciseDetailsGradingSection(exercise: ProgrammingExercise): DetailOverviewSection {\r\n        const includedInScoreIsBoolean = exercise.includedInOverallScore != IncludedInOverallScore.INCLUDED_AS_BONUS;\r\n        const includedInScore: Detail = includedInScoreIsBoolean\r\n            ? {\r\n                  type: DetailType.Boolean,\r\n                  title: 'artemisApp.exercise.includedInOverallScore',\r\n                  data: { boolean: exercise.includedInOverallScore === IncludedInOverallScore.INCLUDED_COMPLETELY },\r\n              }\r\n            : {\r\n                  type: DetailType.Text,\r\n                  title: 'artemisApp.exercise.includedInOverallScore',\r\n                  data: { text: 'BONUS' },\r\n              };\r\n        return {\r\n            headline: 'artemisApp.programmingExercise.wizardMode.detailedSteps.gradingStepTitle',\r\n            details: [\r\n                { type: DetailType.Text, title: 'artemisApp.exercise.points', data: { text: exercise.maxPoints } },\r\n                !!exercise.bonusPoints && { type: DetailType.Text, title: 'artemisApp.exercise.bonusPoints', data: { text: exercise.bonusPoints } },\r\n                includedInScore,\r\n                { type: DetailType.Boolean, title: 'artemisApp.exercise.presentationScoreEnabled.title', data: { boolean: exercise.presentationScoreEnabled } },\r\n                { type: DetailType.Boolean, title: 'artemisApp.programmingExercise.enableStaticCodeAnalysis.title', data: { boolean: exercise.staticCodeAnalysisEnabled } },\r\n                exercise.staticCodeAnalysisEnabled && {\r\n                    type: DetailType.Text,\r\n                    title: 'artemisApp.programmingExercise.maxStaticCodeAnalysisPenalty.title',\r\n                    data: { text: exercise.maxStaticCodeAnalysisPenalty },\r\n                },\r\n                {\r\n                    type: DetailType.Text,\r\n                    title: 'artemisApp.programmingExercise.submissionPolicy.submissionPolicyType.title',\r\n                    data: {\r\n                        text: this.translateService.instant(\r\n                            'artemisApp.programmingExercise.submissionPolicy.submissionPolicyType.' +\r\n                                (!exercise.submissionPolicy ? 'none' : exercise.submissionPolicy.type!) +\r\n                                '.title',\r\n                        ),\r\n                    },\r\n                },\r\n                exercise.submissionPolicy && {\r\n                    type: DetailType.Text,\r\n                    title: 'artemisApp.programmingExercise.submissionPolicy.submissionLimitTitle',\r\n                    data: { text: exercise.submissionPolicy.submissionLimit },\r\n                },\r\n                exercise.submissionPolicy &&\r\n                    !!exercise.submissionPolicy.exceedingPenalty && {\r\n                        type: DetailType.Text,\r\n                        title: 'artemisApp.programmingExercise.submissionPolicy.submissionPenalty.detailLabel',\r\n                        data: { text: exercise.submissionPolicy.exceedingPenalty },\r\n                    },\r\n                { type: DetailType.ProgrammingTimeline, title: 'artemisApp.programmingExercise.timeline.timelineLabel', data: { exercise, isExamMode: this.isExamExercise } },\r\n                {\r\n                    type: DetailType.Boolean,\r\n                    title: 'artemisApp.programmingExercise.timeline.complaintOnAutomaticAssessment',\r\n                    data: { boolean: exercise.allowComplaintsForAutomaticAssessments },\r\n                },\r\n                { type: DetailType.Boolean, title: 'artemisApp.programmingExercise.timeline.manualFeedbackRequests', data: { boolean: exercise.allowFeedbackRequests } },\r\n                { type: DetailType.Boolean, title: 'artemisApp.programmingExercise.showTestNamesToStudents', data: { boolean: exercise.showTestNamesToStudents } },\r\n                {\r\n                    type: DetailType.Boolean,\r\n                    title: 'artemisApp.programmingExercise.timeline.releaseTestsWithExampleSolution',\r\n                    data: { boolean: exercise.releaseTestsWithExampleSolution },\r\n                },\r\n                { type: DetailType.Boolean, title: 'artemisApp.exercise.feedbackSuggestionsEnabled', data: { boolean: !!exercise.feedbackSuggestionModule } },\r\n                { type: DetailType.Markdown, title: 'artemisApp.exercise.assessmentInstructions', data: { innerHtml: this.formattedGradingInstructions } },\r\n                exercise.gradingCriteria && {\r\n                    type: DetailType.GradingCriteria,\r\n                    title: 'artemisApp.exercise.structuredAssessmentInstructions',\r\n                    data: { gradingCriteria: exercise.gradingCriteria },\r\n                },\r\n                this.irisEnabled &&\r\n                    this.irisChatEnabled &&\r\n                    exercise.course &&\r\n                    !this.isExamExercise && {\r\n                        type: DetailType.ProgrammingIrisEnabled,\r\n                        title: 'artemisApp.iris.settings.subSettings.enabled.chat',\r\n                        data: { exercise, disabled: !exercise.isAtLeastInstructor, subSettingsType: IrisSubSettingsType.CHAT },\r\n                    },\r\n                exercise.buildLogStatistics && {\r\n                    type: DetailType.ProgrammingBuildStatistics,\r\n                    title: 'artemisApp.programmingExercise.buildLogStatistics.title',\r\n                    titleHelpText: 'artemisApp.programmingExercise.buildLogStatistics.tooltip',\r\n                    data: { buildLogStatistics: exercise.buildLogStatistics },\r\n                },\r\n            ],\r\n        };\r\n    }\r\n\r\n    private checkBuildPlanEditable() {\r\n        this.profileService.getProfileInfo().subscribe((profileInfo) => (this.isBuildPlanEditable = hasEditableBuildPlan(profileInfo)));\r\n    }\r\n\r\n    onParticipationChange(): void {\r\n        this.loadGitDiffReport();\r\n    }\r\n\r\n    combineTemplateCommits() {\r\n        this.programmingExerciseService.combineTemplateRepositoryCommits(this.programmingExercise.id!).subscribe({\r\n            next: () => {\r\n                this.alertService.success('artemisApp.programmingExercise.combineTemplateCommitsSuccess');\r\n            },\r\n            error: () => {\r\n                this.alertService.error('artemisApp.programmingExercise.combineTemplateCommitsError');\r\n            },\r\n        });\r\n    }\r\n\r\n    generateStructureOracle() {\r\n        this.programmingExerciseService.generateStructureOracle(this.programmingExercise.id!).subscribe({\r\n            next: (res) => {\r\n                this.alertService.addAlert({\r\n                    type: AlertType.SUCCESS,\r\n                    message: res,\r\n                    disableTranslation: true,\r\n                });\r\n            },\r\n            error: (error) => {\r\n                const errorMessage = error.headers.get('X-artemisApp-alert');\r\n                this.alertService.addAlert({\r\n                    type: AlertType.DANGER,\r\n                    message: errorMessage,\r\n                    disableTranslation: true,\r\n                });\r\n            },\r\n        });\r\n    }\r\n\r\n    deleteProgrammingExercise(event: { [key: string]: boolean }) {\r\n        this.programmingExerciseService.delete(this.programmingExercise.id!, event.deleteStudentReposBuildPlans, event.deleteBaseReposBuildPlans).subscribe({\r\n            next: () => {\r\n                this.eventManager.broadcast({\r\n                    name: 'programmingExerciseListModification',\r\n                    content: 'Deleted a programming exercise',\r\n                });\r\n                this.dialogErrorSource.next('');\r\n\r\n                if (!this.isExamExercise) {\r\n                    this.router.navigateByUrl(`/course-management/${this.courseId}/exercises`);\r\n                } else {\r\n                    this.router.navigateByUrl(`/course-management/${this.courseId}/exams/${this.programmingExercise.exerciseGroup?.exam?.id}/exercise-groups`);\r\n                }\r\n            },\r\n            error: (error: HttpErrorResponse) => this.dialogErrorSource.next(error.message),\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Unlock all repositories immediately. Asks for confirmation.\r\n     */\r\n    handleUnlockAllRepositories() {\r\n        const modalRef = this.modalService.open(ConfirmAutofocusModalComponent, { keyboard: true, size: 'lg' });\r\n        modalRef.componentInstance.title = 'artemisApp.programmingExercise.unlockAllRepositories';\r\n        modalRef.componentInstance.text = this.translateService.instant('artemisApp.programmingExercise.unlockAllRepositoriesModalText');\r\n        modalRef.result.then(() => {\r\n            this.unlockAllRepositories();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Unlocks all repositories that belong to the exercise\r\n     */\r\n    unlockAllRepositories() {\r\n        this.lockingOrUnlockingRepositories = true;\r\n        this.programmingExerciseService.unlockAllRepositories(this.programmingExercise.id!).subscribe({\r\n            next: (res) => {\r\n                this.alertService.addAlert({\r\n                    type: AlertType.SUCCESS,\r\n                    message: 'artemisApp.programmingExercise.unlockAllRepositoriesSuccess',\r\n                    translationParams: { number: res?.body },\r\n                });\r\n                this.lockingOrUnlockingRepositories = false;\r\n            },\r\n            error: (err: HttpErrorResponse) => {\r\n                this.lockingOrUnlockingRepositories = false;\r\n                this.onError(err);\r\n            },\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Lock all repositories immediately. Asks for confirmation.\r\n     */\r\n    handleLockAllRepositories() {\r\n        const modalRef = this.modalService.open(ConfirmAutofocusModalComponent, { keyboard: true, size: 'lg' });\r\n        modalRef.componentInstance.title = 'artemisApp.programmingExercise.lockAllRepositories';\r\n        modalRef.componentInstance.text = this.translateService.instant('artemisApp.programmingExercise.lockAllRepositoriesModalText');\r\n        modalRef.result.then(() => {\r\n            this.lockAllRepositories();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Locks all repositories that belong to the exercise\r\n     */\r\n    private lockAllRepositories() {\r\n        this.lockingOrUnlockingRepositories = true;\r\n        this.programmingExerciseService.lockAllRepositories(this.programmingExercise.id!).subscribe({\r\n            next: (res) => {\r\n                this.alertService.addAlert({\r\n                    type: AlertType.SUCCESS,\r\n                    message: 'artemisApp.programmingExercise.lockAllRepositoriesSuccess',\r\n                    translationParams: { number: res?.body },\r\n                });\r\n                this.lockingOrUnlockingRepositories = false;\r\n            },\r\n            error: (err: HttpErrorResponse) => {\r\n                this.lockingOrUnlockingRepositories = false;\r\n                this.onError(err);\r\n            },\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Opens modal and executes a consistency check for the given programming exercise\r\n     * @param exercise the programming exercise to check\r\n     */\r\n    checkConsistencies(exercise: ProgrammingExercise) {\r\n        const modalRef = this.modalService.open(ConsistencyCheckComponent, { keyboard: true, size: 'lg' });\r\n        modalRef.componentInstance.exercisesToCheck = Array.of(exercise);\r\n    }\r\n\r\n    /**\r\n     * Executes a consistency check for this programming exercise and alerts the user if any inconsistencies are found\r\n     * This is only run if the user is at least an instructor in the course\r\n     */\r\n    checkAndAlertInconsistencies() {\r\n        if (this.programmingExercise.isAtLeastEditor) {\r\n            this.consistencyCheckService.checkConsistencyForProgrammingExercise(this.programmingExercise.id!).subscribe((inconsistencies) => {\r\n                if (inconsistencies.length) {\r\n                    this.alertService.warning('artemisApp.consistencyCheck.inconsistenciesFoundAlert');\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if the build configuration is available and sets the windfile if it is, helpful for reliably displaying\r\n     * the build configuration in the UI\r\n     * @param exercise the programming exercise to check\r\n     */\r\n    checkAndSetWindFile(exercise: ProgrammingExercise) {\r\n        if (exercise.buildConfig && exercise.buildConfig?.buildPlanConfiguration && !exercise.buildConfig?.windfile) {\r\n            exercise.buildConfig!.windfile = this.aeolusService.parseWindFile(exercise.buildConfig?.buildPlanConfiguration);\r\n        }\r\n    }\r\n\r\n    private onError(error: HttpErrorResponse) {\r\n        this.alertService.error(error.message);\r\n    }\r\n\r\n    /**\r\n     * Generates the link to any participation's submissions, used for the link to template and solution submissions\r\n     * @param participationId of the participation\r\n     */\r\n    getParticipationSubmissionLink(participationId: number) {\r\n        const link = [this.baseResource, 'participations', participationId];\r\n        // For unknown reason normal exercises append /submissions to the submission view whereas exam exercises do not\r\n        if (!this.isExamExercise) {\r\n            link.push('submissions');\r\n        }\r\n        return link;\r\n    }\r\n\r\n    /**\r\n     * Calculates the added and removed lines of the diff\r\n     * @param gitDiffReport\r\n     * @returns whether the report has changed compared to the last run\r\n     */\r\n    private processGitDiffReport(gitDiffReport: ProgrammingExerciseGitDiffReport | undefined): boolean {\r\n        const isGitDiffReportUpdated =\r\n            gitDiffReport &&\r\n            (this.programmingExercise.gitDiffReport?.templateRepositoryCommitHash !== gitDiffReport.templateRepositoryCommitHash ||\r\n                this.programmingExercise.gitDiffReport?.solutionRepositoryCommitHash !== gitDiffReport.solutionRepositoryCommitHash);\r\n        if (!isGitDiffReportUpdated) {\r\n            return false;\r\n        }\r\n\r\n        this.programmingExercise.gitDiffReport = gitDiffReport;\r\n        gitDiffReport.programmingExercise = this.programmingExercise;\r\n        const calculateLineCount = (\r\n            entries: {\r\n                lineCount?: number;\r\n                previousLineCount?: number;\r\n            }[] = [],\r\n            key: 'lineCount' | 'previousLineCount',\r\n        ) => entries.map((entry) => entry[key] ?? 0).reduce((sum, count) => sum + count, 0);\r\n        this.addedLineCount = calculateLineCount(gitDiffReport.entries, 'lineCount');\r\n        this.removedLineCount = calculateLineCount(gitDiffReport.entries, 'previousLineCount');\r\n\r\n        return true;\r\n    }\r\n\r\n    loadGitDiffReport() {\r\n        this.programmingExerciseService.getDiffReport(this.programmingExercise.id!).subscribe({\r\n            next: (gitDiffReport) => {\r\n                this.processGitDiffReport(gitDiffReport);\r\n            },\r\n            error: () => {\r\n                this.alertService.error('artemisApp.programmingExercise.diffReportError');\r\n            },\r\n        });\r\n    }\r\n}\r\n", "<div class=\"row justify-content-center programming-exercise-detail-wrapper-class\">\r\n    <div class=\"col-md-8\">\r\n        @if (programmingExercise) {\r\n            <div>\r\n                <div class=\"d-flex align-items-center\">\r\n                    <h2><span jhiTranslate=\"artemisApp.programmingExercise.detail.title\"></span> {{ programmingExercise.id }}</h2>\r\n                    <jhi-documentation-button [type]=\"documentationType\" />\r\n                </div>\r\n                <hr />\r\n                <div class=\"button-header\">\r\n                    <div class=\"d-flex flex-wrap gap-2\">\r\n                        @if (programmingExercise.isAtLeastEditor) {\r\n                            <a [routerLink]=\"[baseResource, 'edit']\" class=\"btn btn-warning btn-sm\">\r\n                                <fa-icon [icon]=\"faWrench\" />&nbsp;\r\n                                <span jhiTranslate=\"entity.action.edit\"></span>\r\n                            </a>\r\n                            <!-- Edit in editor button -->\r\n                            @if (programmingExercise.templateParticipation) {\r\n                                <a\r\n                                    [jhiFeatureToggleLink]=\"FeatureToggle.ProgrammingExercises\"\r\n                                    jhiOrionFilter\r\n                                    [showInOrionWindow]=\"false\"\r\n                                    [routerLink]=\"[baseResource, 'code-editor', RepositoryType.TEMPLATE, programmingExercise.templateParticipation.id!]\"\r\n                                    class=\"btn btn-warning btn-sm\"\r\n                                >\r\n                                    <fa-icon [icon]=\"faPencilAlt\" />\r\n                                    <span jhiTranslate=\"entity.action.editInEditor\"></span>\r\n                                </a>\r\n                            }\r\n                            <!-- Edit build plan button -->\r\n                            @if (isBuildPlanEditable) {\r\n                                <a\r\n                                    [jhiFeatureToggleLink]=\"FeatureToggle.ProgrammingExercises\"\r\n                                    jhiOrionFilter\r\n                                    [showInOrionWindow]=\"false\"\r\n                                    [routerLink]=\"[baseResource, 'edit-build-plan']\"\r\n                                    class=\"btn btn-warning btn-sm\"\r\n                                >\r\n                                    <fa-icon [icon]=\"faPencilAlt\" />\r\n                                    <span jhiTranslate=\"entity.action.editBuildPlan\"></span>\r\n                                </a>\r\n                            }\r\n                            <a [routerLink]=\"[baseResource, 'grading', 'test-cases']\" class=\"btn btn-warning btn-sm\">\r\n                                <fa-icon [icon]=\"faFileSignature\" />\r\n                                <span jhiTranslate=\"artemisApp.programmingExercise.configureGrading.shortTitle\"></span>\r\n                            </a>\r\n                        }\r\n                        @if (irisEnabled && programmingExercise.isAtLeastInstructor && programmingExercise.course && !isExamExercise) {\r\n                            <a\r\n                                [routerLink]=\"['/course-management', programmingExercise.course.id!, 'programming-exercises', programmingExercise.id, 'iris-settings']\"\r\n                                ngbTooltip=\"{{ 'artemisApp.iris.settings.button.programmingExercise.tooltip' | artemisTranslate }}\"\r\n                                class=\"btn btn-warning btn-sm\"\r\n                            >\r\n                                <fa-icon [icon]=\"faRobot\" />\r\n                                <span jhiTranslate=\"artemisApp.iris.settings.button.programmingExercise.title\"></span>\r\n                            </a>\r\n                        }\r\n                        @if (programmingExercise.isAtLeastTutor) {\r\n                            <a [routerLink]=\"[baseResource, 'participations']\" class=\"btn btn-primary btn-sm\">\r\n                                <fa-icon [icon]=\"faListAlt\" />\r\n                                <span jhiTranslate=\"artemisApp.exercise.participations\"></span>\r\n                            </a>\r\n                        }\r\n                        <!-- Teams -->\r\n                        @if (programmingExercise.teamMode && programmingExercise.isAtLeastTutor) {\r\n                            <a [routerLink]=\"[teamBaseResource, 'teams']\" class=\"btn btn-primary btn-sm\">\r\n                                <fa-icon [icon]=\"faUsers\" />\r\n                                <span jhiTranslate=\"artemisApp.exercise.teams\"></span>\r\n                            </a>\r\n                        }\r\n                        @if (programmingExercise.assessmentType === AssessmentType.SEMI_AUTOMATIC || programmingExercise.allowComplaintsForAutomaticAssessments) {\r\n                            <a [routerLink]=\"[shortBaseResource, 'assessment-dashboard', programmingExercise.id]\" class=\"btn btn-info btn-sm\">\r\n                                <fa-icon [icon]=\"faUserCheck\" />\r\n                                <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.exercise.exerciseAssessmentDashboard\"></span>\r\n                            </a>\r\n                        }\r\n                        @if (programmingExercise.isAtLeastEditor && plagiarismCheckSupported) {\r\n                            <a [jhiFeatureToggleLink]=\"FeatureToggle.ProgrammingExercises\" class=\"btn btn-info btn-sm\" routerLink=\"plagiarism\">\r\n                                <span jhiTranslate=\"artemisApp.programmingExercise.checkPlagiarism\"></span>\r\n                            </a>\r\n                        }\r\n                        @if (programmingExercise.isAtLeastTutor) {\r\n                            <a [routerLink]=\"baseResource + 'scores'\" class=\"btn btn-info btn-sm\">\r\n                                <fa-icon [icon]=\"faTable\" />\r\n                                <span jhiTranslate=\"entity.action.scores\"></span>\r\n                            </a>\r\n                            @if (programmingExercise.course && !isExamExercise) {\r\n                                <a\r\n                                    [routerLink]=\"['/course-management', programmingExercise.course!.id!, 'programming-exercises', programmingExercise.id!, 'exercise-statistics']\"\r\n                                    class=\"btn btn-info btn-sm\"\r\n                                >\r\n                                    <fa-icon [icon]=\"faChartBar\" />&nbsp;<span jhiTranslate=\"statistics.statistics-title\"></span>\r\n                                </a>\r\n                            }\r\n                        }\r\n                    </div>\r\n                    <hr />\r\n                    <div>\r\n                        @if (programmingExercise.isAtLeastInstructor) {\r\n                            <jhi-programming-exercise-instructor-exercise-download [exerciseId]=\"programmingExercise.id!\" class=\"me-1\" />\r\n                        }\r\n                        @if (programmingExercise.isAtLeastEditor) {\r\n                            <span class=\"me-1\">\r\n                                <button\r\n                                    [jhiFeatureToggle]=\"FeatureToggle.ProgrammingExercises\"\r\n                                    type=\"button\"\r\n                                    (click)=\"combineTemplateCommits()\"\r\n                                    class=\"btn btn-secondary btn-sm\"\r\n                                    ngbTooltip=\"{{ 'artemisApp.programmingExercise.combineTemplateCommitsWarning' | artemisTranslate }}\"\r\n                                >\r\n                                    <span jhiTranslate=\"artemisApp.programmingExercise.combineTemplateCommits\"></span>\r\n                                </button>\r\n                            </span>\r\n                        }\r\n                        @if (programmingExercise.programmingLanguage === ProgrammingLanguage.JAVA && programmingExercise.isAtLeastEditor) {\r\n                            <span class=\"me-1\">\r\n                                <button\r\n                                    [jhiFeatureToggle]=\"FeatureToggle.ProgrammingExercises\"\r\n                                    type=\"button\"\r\n                                    (click)=\"generateStructureOracle()\"\r\n                                    class=\"btn btn-secondary btn-sm\"\r\n                                    ngbTooltip=\"{{ 'artemisApp.programmingExercise.structureTestOracleWarning' | artemisTranslate }}\"\r\n                                >\r\n                                    <span jhiTranslate=\"artemisApp.programmingExercise.structureTestOracle\"></span>\r\n                                </button>\r\n                            </span>\r\n                        }\r\n                        @if (programmingExercise.isAtLeastInstructor && !localVCEnabled) {\r\n                            <button\r\n                                id=\"unlockAllRepositoriesButton\"\r\n                                class=\"btn btn-danger btn-sm me-1\"\r\n                                (click)=\"handleUnlockAllRepositories()\"\r\n                                [disabled]=\"lockingOrUnlockingRepositories\"\r\n                            >\r\n                                @if (lockingOrUnlockingRepositories) {\r\n                                    <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                                }\r\n                                <fa-icon [icon]=\"faExclamationTriangle\" class=\"text-warning\" />\r\n                                <span jhiTranslate=\"artemisApp.programmingExercise.unlockAllRepositories\"></span>\r\n                            </button>\r\n                            <button\r\n                                id=\"lockAllRepositoriesButton\"\r\n                                class=\"btn btn-danger btn-sm me-1\"\r\n                                (click)=\"handleLockAllRepositories()\"\r\n                                [disabled]=\"lockingOrUnlockingRepositories\"\r\n                            >\r\n                                @if (lockingOrUnlockingRepositories) {\r\n                                    <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                                }\r\n                                <fa-icon [icon]=\"faExclamationTriangle\" class=\"text-warning\" />\r\n                                <span jhiTranslate=\"artemisApp.programmingExercise.lockAllRepositories\"></span>\r\n                            </button>\r\n                        }\r\n                        @if (programmingExercise.isAtLeastEditor) {\r\n                            <button\r\n                                [jhiFeatureToggle]=\"FeatureToggle.ProgrammingExercises\"\r\n                                (click)=\"checkConsistencies(programmingExercise)\"\r\n                                class=\"btn btn-outline-primary btn-sm me-1\"\r\n                                style=\"margin-bottom: 10px\"\r\n                            >\r\n                                <fa-icon [icon]=\"faCheckDouble\" />\r\n                                <span jhiTranslate=\"artemisApp.consistencyCheck.button\"></span>\r\n                            </button>\r\n                            <button\r\n                                [jhiFeatureToggle]=\"FeatureToggle.ProgrammingExercises\"\r\n                                jhiProgrammingExerciseResetButton\r\n                                [programmingExercise]=\"programmingExercise\"\r\n                                class=\"me-1\"\r\n                            >\r\n                                <fa-icon [icon]=\"faUndo\" />\r\n                                <span jhiTranslate=\"entity.action.reset\"></span>\r\n                            </button>\r\n                        }\r\n                        @if (programmingExercise.course !== undefined && programmingExercise.isAtLeastInstructor) {\r\n                            <button\r\n                                jhiDeleteButton\r\n                                [entityTitle]=\"programmingExercise.title || ''\"\r\n                                deleteQuestion=\"{{\r\n                                    localVCEnabled ? 'artemisApp.programmingExercise.delete.questionLocalVC.single' : 'artemisApp.programmingExercise.delete.question'\r\n                                }}\"\r\n                                (delete)=\"deleteProgrammingExercise($event)\"\r\n                                [dialogError]=\"dialogError$\"\r\n                                [additionalChecks]=\"\r\n                                    localCIEnabled\r\n                                        ? {}\r\n                                        : {\r\n                                              deleteStudentReposBuildPlans: 'artemisApp.programmingExercise.delete.studentReposBuildPlans',\r\n                                              deleteBaseReposBuildPlans: 'artemisApp.programmingExercise.delete.baseReposBuildPlans',\r\n                                          }\r\n                                \"\r\n                                deleteConfirmationText=\"artemisApp.exercise.delete.typeNameToConfirm\"\r\n                                class=\"me-1\"\r\n                            >\r\n                                <fa-icon [icon]=\"faTrash\" />\r\n                            </button>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                @if (!programmingExercise.releaseDate || dayjs(programmingExercise.releaseDate).isBefore(dayjs())) {\r\n                    <div class=\"mt-3\">\r\n                        <jhi-exercise-detail-statistics\r\n                            [exercise]=\"programmingExercise\"\r\n                            [doughnutStats]=\"doughnutStats\"\r\n                            [exerciseType]=\"PROGRAMMING\"\r\n                            class=\"d-flex justify-content-around\"\r\n                        />\r\n                    </div>\r\n                }\r\n                @if (exerciseDetailSections) {\r\n                    <jhi-detail-overview-list [sections]=\"exerciseDetailSections\" />\r\n                }\r\n            </div>\r\n        }\r\n    </div>\r\n</div>\r\n"],
  "mappings": "qpKAyBaA,IAAsD,IAAA,CAA7D,MAAOA,CAAsD,CACvDC,2BAA6BC,EAAOC,CAA0B,EAC9DC,aAAeF,EAAOG,CAAY,EAE1CC,WAAaA,GACbC,WAAaA,EACJC,cAAgBA,EAGzBC,WAGAC,WAAaA,GAEbC,gBAAc,CACN,KAAKF,YACL,KAAKR,2BAA2BW,yBAAyB,KAAKH,UAAU,EAAEI,UACrEC,GAAY,CACTC,GAA4BD,CAAQ,EACpC,KAAKV,aAAaY,QAAQ,8DAA8D,CAC5F,EACA,IAAM,KAAKZ,aAAaa,MAAM,oBAAoB,CAAC,CAG/D,4CAxBSjB,EAAsD,2BAAtDA,EAAsDkB,UAAA,CAAA,CAAA,uDAAA,CAAA,EAAAC,OAAA,CAAAV,WAAA,YAAA,EAAAW,MAAA,EAAAC,KAAA,GAAAC,OAAA,CAAA,CAAA,EAAA,UAAA,WAAA,UAAA,UAAA,eAAA,gBAAA,OAAA,OAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,IAb3DE,EAAA,EAAA;SAAA,EAAAC,EAAA,EAAA,aAAA,CAAA,EAQIC,EAAA,UAAA,UAAA,CAAA,OAAWH,EAAAd,eAAA,CAAgB,CAAA,EAR/BkB,EAAA,EAUJH,EAAA,EAAA;KAAA,SATQI,EAAA,EAAAC,EAAA,WAAA,CAAAN,EAAAhB,UAAA,EAAwB,UAAAgB,EAAAnB,WAAA0B,IAAA,EACG,UAAAP,EAAAlB,WAAA0B,KAAA,EACC,eAAA,EAAA,EACN,gBAAAC,EAAA,EAAAC,GAAAV,EAAAjB,cAAA4B,qBAAAX,EAAAjB,cAAA6B,OAAA,CAAA,EACuD,OAAAZ,EAAAf,UAAA,EAC1D,QAAA,wDAAA,kBAKjB4B,EAAe,EAAAC,cAAA,CAAA,CAAA,SAEhBvC,CAAsD,GAAA,6kBEPnCwC,EAAA,EAAA;iCAAA,EAAAC,EAAA,EAAA,IAAA,EAAA,EAOID,EAAA,EAAA;qCAAA,EAAAE,EAAA,EAAA,UAAA,CAAA,EACAF,EAAA,EAAA;qCAAA,EAAAE,EAAA,EAAA,OAAA,EAAA,EACJF,EAAA,EAAA;iCAAA,EAAAG,EAAA,EACJH,EAAA,EAAA;6BAAA,mBATQI,EAAA,EAAAC,EAAA,uBAAAC,EAAAC,cAAAC,oBAAA,EAA2D,oBAAA,EAAA,EAEhC,aAAAC,EAAA,EAAAC,GAAAJ,EAAAK,aAAAL,EAAAM,eAAAC,SAAAP,EAAAQ,oBAAAC,sBAAAC,EAAA,CAAA,EAIlBZ,EAAA,CAAA,EAAAC,EAAA,OAAAC,EAAAW,WAAA,6BAMbjB,EAAA,EAAA;iCAAA,EAAAC,EAAA,EAAA,IAAA,EAAA,EAOID,EAAA,EAAA;qCAAA,EAAAE,EAAA,EAAA,UAAA,CAAA,EACAF,EAAA,EAAA;qCAAA,EAAAE,EAAA,EAAA,OAAA,EAAA,EACJF,EAAA,EAAA;iCAAA,EAAAG,EAAA,EACJH,EAAA,EAAA;6BAAA,mBATQI,EAAA,EAAAC,EAAA,uBAAAC,EAAAC,cAAAC,oBAAA,EAA2D,oBAAA,EAAA,EAEhC,aAAAU,EAAA,EAAAC,GAAAb,EAAAK,YAAA,CAAA,EAIlBP,EAAA,CAAA,EAAAC,EAAA,OAAAC,EAAAW,WAAA,6BA1BjBjB,EAAA,EAAA;6BAAA,EAAAC,EAAA,EAAA,IAAA,CAAA,EACID,EAAA,EAAA;iCAAA,EAAAE,EAAA,EAAA,UAAA,CAAA,EAA6BF,EAAA,EAAA;iCAAA,EAC7BE,EAAA,EAAA,OAAA,CAAA,EACJF,EAAA,EAAA;6BAAA,EAAAG,EAAA,EACAH,EAAA,EAAA;6BAAA,EACAA,EAAA,EAAA;6BAAA,EAAAoB,EAAA,EAAAC,GAAA,EAAA,CAAA,EAAiD,GAAAC,GAAA,EAAA,CAAA,EAyBjDrB,EAAA,GAAA,IAAA,CAAA,EACID,EAAA,GAAA;iCAAA,EAAAE,EAAA,GAAA,UAAA,CAAA,EACAF,EAAA,GAAA;iCAAA,EAAAE,EAAA,GAAA,OAAA,EAAA,EACJF,EAAA,GAAA;6BAAA,EAAAG,EAAA,EACJH,EAAA,GAAA;yBAAA,mBAlCOI,EAAA,EAAAC,EAAA,aAAAa,EAAA,EAAAK,GAAAjB,EAAAK,YAAA,CAAA,EACUP,EAAA,CAAA,EAAAC,EAAA,OAAAC,EAAAkB,QAAA,EAIbpB,EAAA,CAAA,EAAAqB,EAAAnB,EAAAQ,oBAAAC,sBAAA,EAAA,EAAA,EAaAX,EAAA,EAAAqB,EAAAnB,EAAAoB,oBAAA,GAAA,EAAA,EAYGtB,EAAA,EAAAC,EAAA,aAAAa,EAAA,EAAAS,GAAArB,EAAAK,YAAA,CAAA,EACUP,EAAA,CAAA,EAAAC,EAAA,OAAAC,EAAAsB,eAAA,6BAKb5B,EAAA,EAAA;6BAAA,EAAAC,EAAA,EAAA,IAAA,EAAA,0BAKID,EAAA,EAAA;iCAAA,EAAAE,EAAA,EAAA,UAAA,CAAA,EACAF,EAAA,EAAA;iCAAA,EAAAE,EAAA,EAAA,OAAA,EAAA,EACJF,EAAA,EAAA;6BAAA,EAAAG,EAAA,EACJH,EAAA,EAAA;yBAAA,mBANQI,EAAA,EAAAyB,EAAA,aAAAC,EAAA,EAAA,EAAA,6DAAA,CAAA,EADAzB,EAAA,aAAA0B,EAAA,EAAAC,GAAA1B,EAAAQ,oBAAAmB,OAAAjB,GAAAV,EAAAQ,oBAAAE,EAAA,CAAA,EAISZ,EAAA,CAAA,EAAAC,EAAA,OAAAC,EAAA4B,OAAA,6BAKblC,EAAA,EAAA;6BAAA,EAAAC,EAAA,EAAA,IAAA,EAAA,EACID,EAAA,EAAA;iCAAA,EAAAE,EAAA,EAAA,UAAA,CAAA,EACAF,EAAA,EAAA;iCAAA,EAAAE,EAAA,EAAA,OAAA,EAAA,EACJF,EAAA,EAAA;6BAAA,EAAAG,EAAA,EACJH,EAAA,EAAA;yBAAA,mBAJOI,EAAA,EAAAC,EAAA,aAAAa,EAAA,EAAAiB,GAAA7B,EAAAK,YAAA,CAAA,EACUP,EAAA,CAAA,EAAAC,EAAA,OAAAC,EAAA8B,SAAA,6BAMbpC,EAAA,EAAA;6BAAA,EAAAC,EAAA,EAAA,IAAA,EAAA,EACID,EAAA,EAAA;iCAAA,EAAAE,EAAA,EAAA,UAAA,CAAA,EACAF,EAAA,EAAA;iCAAA,EAAAE,EAAA,EAAA,OAAA,EAAA,EACJF,EAAA,EAAA;6BAAA,EAAAG,EAAA,EACJH,EAAA,EAAA;yBAAA,mBAJOI,EAAA,EAAAC,EAAA,aAAAa,EAAA,EAAAmB,GAAA/B,EAAAgC,gBAAA,CAAA,EACUlC,EAAA,CAAA,EAAAC,EAAA,OAAAC,EAAAiC,OAAA,6BAKbvC,EAAA,EAAA;6BAAA,EAAAC,EAAA,EAAA,IAAA,EAAA,EACID,EAAA,EAAA;iCAAA,EAAAE,EAAA,EAAA,UAAA,CAAA,EACAF,EAAA,EAAA;iCAAA,EAAAE,EAAA,EAAA,OAAA,EAAA,EACJF,EAAA,EAAA;6BAAA,EAAAG,EAAA,EACJH,EAAA,EAAA;yBAAA,mBAJOI,EAAA,EAAAC,EAAA,aAAA0B,EAAA,EAAAS,GAAAlC,EAAAmC,kBAAAnC,EAAAQ,oBAAAE,EAAA,CAAA,EACUZ,EAAA,CAAA,EAAAC,EAAA,OAAAC,EAAAoC,WAAA,6BAKb1C,EAAA,EAAA;6BAAA,EAAAC,EAAA,EAAA,IAAA,EAAA,EACID,EAAA,EAAA;iCAAA,EAAAE,EAAA,EAAA,OAAA,EAAA,EACJF,EAAA,EAAA;6BAAA,EAAAG,EAAA,EACJH,EAAA,EAAA;yBAAA,mBAHOI,EAAA,EAAAC,EAAA,uBAAAC,EAAAC,cAAAC,oBAAA,6BAUCR,EAAA,EAAA;iCAAA,EAAAC,EAAA,EAAA,IAAA,EAAA,EAIID,EAAA,EAAA;qCAAA,EAAAE,EAAA,EAAA,UAAA,CAAA,EAA+BF,EAAA,EAAA,MAAA,EAAME,EAAA,EAAA,OAAA,EAAA,EACzCF,EAAA,EAAA;iCAAA,EAAAG,EAAA,EACJH,EAAA,EAAA;6BAAA,mBALQI,EAAA,EAAAC,EAAA,aAAA0B,EAAA,EAAAY,GAAArC,EAAAQ,oBAAAmB,OAAAjB,GAAAV,EAAAQ,oBAAAE,EAAA,CAAA,EAGSZ,EAAA,CAAA,EAAAC,EAAA,OAAAC,EAAAsC,UAAA,6BATjB5C,EAAA,EAAA;6BAAA,EAAAC,EAAA,EAAA,IAAA,EAAA,EACID,EAAA,EAAA;iCAAA,EAAAE,EAAA,EAAA,UAAA,CAAA,EACAF,EAAA,EAAA;iCAAA,EAAAE,EAAA,EAAA,OAAA,EAAA,EACJF,EAAA,EAAA;6BAAA,EAAAG,EAAA,EACAH,EAAA,EAAA;6BAAA,EAAAoB,EAAA,EAAAyB,GAAA,EAAA,CAAA,mBAJGzC,EAAA,EAAAC,EAAA,aAAAC,EAAAK,aAAA,QAAA,EACUP,EAAA,CAAA,EAAAC,EAAA,OAAAC,EAAAwC,OAAA,EAGb1C,EAAA,CAAA,EAAAqB,EAAAnB,EAAAQ,oBAAAmB,QAAA,CAAA3B,EAAAyC,eAAA,EAAA,EAAA,6BAaA/C,EAAA,EAAA;6BAAA,EAAAE,EAAA,EAAA,wDAAA,EAAA,EACJF,EAAA,EAAA;yBAAA,mBAD2DI,EAAA,EAAAC,EAAA,aAAAC,EAAAQ,oBAAAE,EAAA,sCAGvDhB,EAAA,EAAA;6BAAA,EAAAC,EAAA,EAAA,OAAA,EAAA,EACID,EAAA,EAAA;iCAAA,EAAAC,EAAA,EAAA,SAAA,EAAA,0BAGI+C,EAAA,QAAA,UAAA,CAAAC,EAAAC,CAAA,EAAA,IAAA5C,EAAA6C,EAAA,CAAA,EAAA,OAAAC,EAAS9C,EAAA+C,uBAAA,CAAwB,CAAA,CAAA,EAIjCrD,EAAA,EAAA;qCAAA,EAAAE,EAAA,EAAA,OAAA,EAAA,EACJF,EAAA,EAAA;iCAAA,EAAAG,EAAA,EACJH,EAAA,EAAA;6BAAA,EAAAG,EAAA,EACJH,EAAA,EAAA;yBAAA,qBALYI,EAAA,CAAA,EAAAyB,EAAA,aAAAC,EAAA,EAAA,EAAA,8DAAA,CAAA,EAJAzB,EAAA,mBAAAC,EAAAC,cAAAC,oBAAA,sCAWRR,EAAA,EAAA;6BAAA,EAAAC,EAAA,EAAA,OAAA,EAAA,EACID,EAAA,EAAA;iCAAA,EAAAC,EAAA,EAAA,SAAA,EAAA,0BAGI+C,EAAA,QAAA,UAAA,CAAAC,EAAAK,CAAA,EAAA,IAAAhD,EAAA6C,EAAA,CAAA,EAAA,OAAAC,EAAS9C,EAAAiD,wBAAA,CAAyB,CAAA,CAAA,EAIlCvD,EAAA,EAAA;qCAAA,EAAAE,EAAA,EAAA,OAAA,EAAA,EACJF,EAAA,EAAA;iCAAA,EAAAG,EAAA,EACJH,EAAA,EAAA;6BAAA,EAAAG,EAAA,EACJH,EAAA,EAAA;yBAAA,qBALYI,EAAA,CAAA,EAAAyB,EAAA,aAAAC,EAAA,EAAA,EAAA,2DAAA,CAAA,EAJAzB,EAAA,mBAAAC,EAAAC,cAAAC,oBAAA,0BAkBAR,EAAA,EAAA;qCAAA,EAAAE,EAAA,EAAA,OAAA,EAAA,EACJF,EAAA,EAAA;iCAAA,0BAWIA,EAAA,EAAA;qCAAA,EAAAE,EAAA,EAAA,OAAA,EAAA,EACJF,EAAA,EAAA;iCAAA,sCApBJA,EAAA,EAAA;6BAAA,EAAAC,EAAA,EAAA,SAAA,EAAA,EAGI+C,EAAA,QAAA,UAAA,CAAAC,EAAAO,CAAA,EAAA,IAAAlD,EAAA6C,EAAA,CAAA,EAAA,OAAAC,EAAS9C,EAAAmD,4BAAA,CAA6B,CAAA,CAAA,EAGtCzD,EAAA,EAAA;iCAAA,EAAAoB,EAAA,EAAAsC,GAAA,EAAA,CAAA,EAGAxD,EAAA,EAAA,UAAA,EAAA,EACAF,EAAA,EAAA;iCAAA,EAAAE,EAAA,EAAA,OAAA,EAAA,EACJF,EAAA,EAAA;6BAAA,EAAAG,EAAA,EACAH,EAAA,EAAA;6BAAA,EAAAC,EAAA,EAAA,SAAA,EAAA,EAGI+C,EAAA,QAAA,UAAA,CAAAC,EAAAO,CAAA,EAAA,IAAAlD,EAAA6C,EAAA,CAAA,EAAA,OAAAC,EAAS9C,EAAAqD,0BAAA,CAA2B,CAAA,CAAA,EAGpC3D,EAAA,GAAA;iCAAA,EAAAoB,EAAA,GAAAwC,GAAA,EAAA,CAAA,EAGA1D,EAAA,GAAA,UAAA,EAAA,EACAF,EAAA,GAAA;iCAAA,EAAAE,EAAA,GAAA,OAAA,EAAA,EACJF,EAAA,GAAA;6BAAA,EAAAG,EAAA,EACJH,EAAA,GAAA;yBAAA,qBApBQI,EAAA,EAAAC,EAAA,WAAAC,EAAAuD,8BAAA,EAEAzD,EAAA,CAAA,EAAAqB,EAAAnB,EAAAuD,+BAAA,EAAA,EAAA,EAGSzD,EAAA,EAAAC,EAAA,OAAAC,EAAAwD,qBAAA,EAOT1D,EAAA,CAAA,EAAAC,EAAA,WAAAC,EAAAuD,8BAAA,EAEAzD,EAAA,CAAA,EAAAqB,EAAAnB,EAAAuD,+BAAA,GAAA,EAAA,EAGSzD,EAAA,EAAAC,EAAA,OAAAC,EAAAwD,qBAAA,sCAKb9D,EAAA,EAAA;6BAAA,EAAAC,EAAA,EAAA,SAAA,EAAA,EAEI+C,EAAA,QAAA,UAAA,CAAAC,EAAAc,CAAA,EAAA,IAAAzD,EAAA6C,EAAA,CAAA,EAAA,OAAAC,EAAS9C,EAAA0D,mBAAA1D,EAAAQ,mBAAA,CAAuC,CAAA,CAAA,EAIhDd,EAAA,EAAA;iCAAA,EAAAE,EAAA,EAAA,UAAA,CAAA,EACAF,EAAA,EAAA;iCAAA,EAAAE,EAAA,EAAA,OAAA,EAAA,EACJF,EAAA,EAAA;6BAAA,EAAAG,EAAA,EACAH,EAAA,EAAA;6BAAA,EAAAC,EAAA,EAAA,SAAA,EAAA,EAMID,EAAA,EAAA;iCAAA,EAAAE,EAAA,GAAA,UAAA,CAAA,EACAF,EAAA,GAAA;iCAAA,EAAAE,EAAA,GAAA,OAAA,EAAA,EACJF,EAAA,GAAA;6BAAA,EAAAG,EAAA,EACJH,EAAA,GAAA;yBAAA,qBAjBQI,EAAA,EAAAC,EAAA,mBAAAC,EAAAC,cAAAC,oBAAA,EAKSJ,EAAA,CAAA,EAAAC,EAAA,OAAAC,EAAA2D,aAAA,EAIT7D,EAAA,CAAA,EAAAC,EAAA,mBAAAC,EAAAC,cAAAC,oBAAA,EAAuD,sBAAAF,EAAAQ,mBAAA,EAK9CV,EAAA,CAAA,EAAAC,EAAA,OAAAC,EAAA4D,MAAA,sCAKblE,EAAA,EAAA;6BAAA,EAAAC,EAAA,EAAA,SAAA,EAAA,EAMI+C,EAAA,SAAA,SAAAmB,EAAA,CAAAlB,EAAAmB,CAAA,EAAA,IAAA9D,EAAA6C,EAAA,CAAA,EAAA,OAAAC,EAAU9C,EAAA+D,0BAAAF,CAAA,CAAiC,CAAA,CAAA,EAa3CnE,EAAA,EAAA;iCAAA,EAAAE,EAAA,EAAA,UAAA,CAAA,EACJF,EAAA,EAAA;6BAAA,EAAAG,EAAA,EACJH,EAAA,EAAA;yBAAA,qBAlBQI,EAAA,EAAAyB,EAAA,iBAAAvB,EAAAgE,eAAA,+DAAA,gDAAA,EADAjE,EAAA,cAAAC,EAAAQ,oBAAAyD,OAAA,EAAA,EAA+C,cAAAjE,EAAAkE,YAAA,EAKnB,mBAAAlE,EAAAmE,eAAAC,EAAA,EAAAC,EAAA,EAAAD,EAAA,EAAAE,EAAA,CAAA,EAYnBxE,EAAA,CAAA,EAAAC,EAAA,OAAAC,EAAAuE,OAAA,6BAMrB7E,EAAA,EAAA;qBAAA,EAAAC,EAAA,EAAA,MAAA,EAAA,EACID,EAAA,EAAA;yBAAA,EAAAE,EAAA,EAAA,iCAAA,EAAA,EAMJF,EAAA,EAAA;qBAAA,EAAAG,EAAA,EACJH,EAAA,EAAA;iBAAA,mBANYI,EAAA,CAAA,EAAAC,EAAA,WAAAC,EAAAQ,mBAAA,EAAgC,gBAAAR,EAAAwE,aAAA,EACD,eAAAxE,EAAAyE,WAAA,6BAOvC/E,EAAA,EAAA;qBAAA,EAAAE,EAAA,EAAA,2BAAA,EAAA,EACJF,EAAA,EAAA;iBAAA,mBAD8BI,EAAA,EAAAC,EAAA,WAAAC,EAAA0E,sBAAA,6BA9MlChF,EAAA,EAAA;aAAA,EAAAC,EAAA,EAAA,KAAA,EACID,EAAA,EAAA;iBAAA,EAAAC,EAAA,EAAA,MAAA,CAAA,EACID,EAAA,EAAA;qBAAA,EAAAC,EAAA,EAAA,IAAA,EAAIC,EAAA,EAAA,OAAA,CAAA,EAAyEF,EAAA,CAAA,EAA4BG,EAAA,EACzGH,EAAA,EAAA;qBAAA,EAAAE,EAAA,EAAA,2BAAA,CAAA,EACJF,EAAA,GAAA;iBAAA,EAAAG,EAAA,EACAH,EAAA,GAAA;iBAAA,EAAAE,EAAA,GAAA,IAAA,EACAF,EAAA,GAAA;iBAAA,EAAAC,EAAA,GAAA,MAAA,CAAA,EACID,EAAA,GAAA;qBAAA,EAAAC,EAAA,GAAA,MAAA,CAAA,EACID,EAAA,GAAA;yBAAA,EAAAoB,EAAA,GAAA6D,GAAA,GAAA,EAAA,EAA2C,GAAAC,GAAA,EAAA,CAAA,EAoCoE,GAAAC,GAAA,EAAA,CAAA,EAUrE,GAAAC,GAAA,EAAA,CAAA,EAOgC,GAAAC,GAAA,EAAA,CAAA,EAMgE,GAAAC,GAAA,EAAA,CAAA,EAMnE,GAAAC,GAAA,EAAA,CAAA,EAmB3EpF,EAAA,EACAH,EAAA,GAAA;qBAAA,EAAAE,EAAA,GAAA,IAAA,EACAF,EAAA,GAAA;qBAAA,EAAAC,EAAA,GAAA,KAAA,EACID,EAAA,GAAA;yBAAA,EAAAoB,EAAA,GAAAoE,GAAA,EAAA,CAAA,EAA+C,GAAAC,GAAA,GAAA,CAAA,EAGJ,GAAAC,GAAA,GAAA,CAAA,EAawE,GAAAC,GAAA,GAAA,CAAA,EAajD,GAAAC,GAAA,GAAA,CAAA,EA0BvB,GAAAC,GAAA,EAAA,CAAA,EA2C/C1F,EAAA,EACJH,EAAA,GAAA;iBAAA,EAAAG,EAAA,EACAH,EAAA,GAAA;iBAAA,EAAAoB,EAAA,GAAA0E,GAAA,EAAA,CAAA,EAAoG,GAAAC,GAAA,EAAA,CAAA,EAaxG5F,EAAA,EACJH,EAAA,GAAA;SAAA,kBA/MyFI,EAAA,CAAA,EAAA4F,EAAA,IAAA1F,EAAAQ,oBAAAE,GAAA,EAAA,EACnDZ,EAAA,CAAA,EAAAC,EAAA,OAAAC,EAAA2F,iBAAA,EAKtB7F,EAAA,CAAA,EAAAqB,EAAAnB,EAAAQ,oBAAAoF,gBAAA,GAAA,EAAA,EAoCA9F,EAAA,EAAAqB,EAAAnB,EAAA6F,aAAA7F,EAAAQ,oBAAAsF,qBAAA9F,EAAAQ,oBAAAmB,QAAA,CAAA3B,EAAAyC,eAAA,GAAA,EAAA,EAUA3C,EAAA,EAAAqB,EAAAnB,EAAAQ,oBAAAuF,eAAA,GAAA,EAAA,EAOAjG,EAAA,EAAAqB,EAAAnB,EAAAQ,oBAAAwF,UAAAhG,EAAAQ,oBAAAuF,eAAA,GAAA,EAAA,EAMAjG,EAAA,EAAAqB,EAAAnB,EAAAQ,oBAAAyF,iBAAAjG,EAAAkG,eAAAC,gBAAAnG,EAAAQ,oBAAA4F,uCAAA,GAAA,EAAA,EAMAtG,EAAA,EAAAqB,EAAAnB,EAAAQ,oBAAAoF,iBAAA5F,EAAAqG,yBAAA,GAAA,EAAA,EAKAvG,EAAA,EAAAqB,EAAAnB,EAAAQ,oBAAAuF,eAAA,GAAA,EAAA,EAiBAjG,EAAA,CAAA,EAAAqB,EAAAnB,EAAAQ,oBAAAsF,oBAAA,GAAA,EAAA,EAGAhG,EAAA,EAAAqB,EAAAnB,EAAAQ,oBAAAoF,gBAAA,GAAA,EAAA,EAaA9F,EAAA,EAAAqB,EAAAnB,EAAAQ,oBAAA8F,sBAAAtG,EAAAuG,oBAAAC,MAAAxG,EAAAQ,oBAAAoF,gBAAA,GAAA,EAAA,EAaA9F,EAAA,EAAAqB,EAAAnB,EAAAQ,oBAAAsF,qBAAA,CAAA9F,EAAAgE,eAAA,GAAA,EAAA,EA0BAlE,EAAA,EAAAqB,EAAAnB,EAAAQ,oBAAAoF,gBAAA,GAAA,EAAA,EAoBA9F,EAAA,EAAAqB,EAAAnB,EAAAQ,oBAAAmB,SAAA8E,QAAAzG,EAAAQ,oBAAAsF,oBAAA,GAAA,EAAA,EAyBRhG,EAAA,CAAA,EAAAqB,EAAA,CAAAnB,EAAAQ,oBAAAkG,aAAA1G,EAAA2G,MAAA3G,EAAAQ,oBAAAkG,WAAA,EAAAE,SAAA5G,EAAA2G,MAAA,CAAA,EAAA,GAAA,EAAA,EAUA7G,EAAA,EAAAqB,EAAAnB,EAAA0E,uBAAA,GAAA,EAAA,GDlHhB,IAAamC,IAAkC,IAAA,CAAzC,MAAOA,CAAkC,CACnCC,eAAiBC,EAAOC,CAAc,EACtCC,eAAiBF,EAAOG,EAAc,EACtCC,2BAA6BJ,EAAOK,CAA0B,EACtEC,gBAAkBN,EAAOO,EAAe,EAChCC,gBAAkBR,EAAOS,EAAsB,EAC/CC,aAAeV,EAAOW,CAAY,EAClCC,2CAA6CZ,EAAOa,EAAuB,EAC3EC,aAAed,EAAOe,EAAY,EAC1CC,aAAehB,EAAOiB,CAAQ,EACtBC,iBAAmBlB,EAAOmB,CAAgB,EAC1CC,eAAiBpB,EAAOqB,EAAc,EACtCC,kBAAoBtB,EAAOuB,EAAiB,EAC5CC,OAASxB,EAAOyB,CAAM,EACtBC,kCAAoC1B,EAAO2B,EAAiC,EAC5EC,wBAA0B5B,EAAO6B,EAAuB,EACxDC,oBAAsB9B,EAAO+B,EAAmB,EAChDC,cAAgBhC,EAAOiC,EAAa,EAEzBrC,MAAQA,EACRsC,WAAaA,GACbC,qCAAuCA,EACvCjJ,cAAgBA,EAChBsG,oBAAsBA,GACtB9B,YAAc0E,GAAa1E,YAC3B2E,WAAaA,EACblD,eAAiBA,GACjB5F,eAAiBA,EACjBqF,kBAAuC,cAEvC/B,OAASA,GACTW,QAAUA,GACV8E,OAASA,GACTnI,SAAWA,GACXyC,cAAgBA,GAChBnB,QAAUA,GACVgB,sBAAwBA,GACxBlC,gBAAkBA,GAClBQ,UAAYA,GACZQ,WAAaA,GACb3B,YAAcA,EACdsB,QAAUA,GACVqH,MAAQA,GACRlH,YAAcA,GACdR,QAAUA,GAE7BpB,oBACA+I,+BACAC,aACA/G,eACAgH,8BACApJ,aACA8B,kBACAH,iBACA0H,oCAAsC,GACtCC,oCAAsC,GACtCpG,+BAAiC,GACjCqG,SACApF,cACAqF,6BAGA7F,eAAiB,GACjBG,eAAiB,GACjB0B,YAAc,GACdiE,gBAAkB,GAElBC,QAAU,GACVC,eACAC,iBACAC,oBACA9I,oBAAsB,GAEtBiF,yBAA2B,GAEnB8D,2BACAC,6CACAC,yBACAC,+BAEAC,kBAAoB,IAAIC,EAChCtG,aAAe,KAAKqG,kBAAkBE,aAAY,EAElD/F,uBAEAgG,UAAQ,CACJ,KAAKC,uBAAsB,EAE3B,KAAKR,2BAA6B,KAAKrD,eAAe8D,KAAKC,UAAU,CAAC,CAAErK,oBAAAA,CAAmB,IAAM,CAC7F,KAAKA,oBAAsBA,EAC3B,KAAK+I,+BAAiC/I,EAAoBsK,YAC1D,KAAKtB,aAAehJ,EAAoBgJ,aACxC,IAAMuB,EAAa,KAAKvK,oBAAoBE,GAC5C,KAAK+B,eAAiB,CAAC,CAAC,KAAKjC,oBAAoBwK,cACjD,KAAKpB,SAAW,KAAKnH,eAAiB,KAAKjC,oBAAoBwK,cAAeC,KAAMtJ,OAAQjB,GAAM,KAAKF,oBAAoBmB,OAAQjB,GACnI,KAAKqJ,QAAU,KAAK9C,eAAe8C,QAAO,EAC1C,KAAKF,6BAA+B,KAAKtC,gBAAgB2D,oBAAoB,KAAK1K,oBAAoB2K,mBAAmB,EAEpH,KAAK1I,gBAKN,KAAKpC,aACD,sBAAsB,KAAKuJ,QAAQ,UAAU,KAAKpJ,oBAAoBwK,eAAeC,MAAMvK,EAAE,oBACzE,KAAKF,oBAAoBwK,eAAetK,EAAE,0BAA0BqK,CAAU,IACtG,KAAK5I,kBAAoB,sBAAsB,KAAKyH,QAAQ,UAAU,KAAKpJ,oBAAoBwK,eAAeC,MAAMvK,EAAE,IACtH,KAAKsB,iBACD,sBAAsB,KAAK4H,QAAQ,UAAU,KAAKpJ,oBAAoBwK,eAAeC,MAAMvK,EAAE,oBACzE,KAAKF,oBAAoBwK,eAAetK,EAAE,cAAc,KAAKF,oBAAoBwK,eAAeC,MAAMvK,EAAE,MAVhI,KAAKL,aAAe,sBAAsB,KAAKuJ,QAAQ,0BAA0BmB,CAAU,IAC3F,KAAK5I,kBAAoB,sBAAsB,KAAKyH,QAAQ,IAC5D,KAAK5H,iBAAmB,sBAAsB,KAAK4H,QAAQ,cAAcmB,CAAU,KAWvF,KAAKX,6CAA+C,KAAKjD,2BACpDiE,yDAAyD5K,EAAoBE,EAAG,EAChF2K,KACGC,EAAKC,GAA8B,CAC/B,KAAK/K,oBAAsB+K,EAA2BC,KACtD,KAAK9B,oCAAsC,GAC3C,KAAKC,oCAAsC,EAC/C,CAAC,EACD8B,EAAS,IAAM,KAAKtD,eAAeuD,eAAc,CAAE,EACnDJ,EAAKK,GAAe,CACZA,IACI,KAAKnL,oBAAoBoL,YAAc,KAAKpL,oBAAoBC,uBAAuBoL,cACvF,KAAKrL,oBAAoBC,sBAAsBqL,aAAeC,EAC1DJ,EAAYK,qBACZ,KAAKxL,oBAAoBoL,WACzB,KAAKpL,oBAAoBC,sBAAsBoL,WAAW,GAG9D,KAAKrL,oBAAoBoL,YAAc,KAAKpL,oBAAoByL,uBAAuBJ,cACvF,KAAKrL,oBAAoByL,sBAAsBH,aAAeC,EAC1DJ,EAAYK,qBACZ,KAAKxL,oBAAoBoL,WACzB,KAAKpL,oBAAoByL,sBAAsBJ,WAAW,GAGlE,KAAKpC,8BACD,KAAKhB,kCAAkCyD,8BAA8B1L,EAAoB8F,mBAAmB,GAAG6F,gCAC/G,GACJ,KAAKnI,eAAiB2H,EAAYS,eAAeC,SAASC,EAAe,EACzE,KAAKnI,eAAiBwH,EAAYS,eAAeC,SAASE,EAAe,EACzE,KAAK1G,YAAc8F,EAAYS,eAAeC,SAASG,EAAY,EAC/D,KAAK3G,aAAe,CAAC,KAAKpD,iBAC1B,KAAK4H,yBAA2B,KAAKxB,oBAAoB4D,0BAA0B,KAAK7C,QAAQ,EAAEiB,UAAW6B,GAAY,CACrH,KAAK5C,gBAAkB4C,GAAUC,kBAAkBC,SAAW,EAClE,CAAC,GAGb,CAAC,EACDnB,EAAS,IAAM,KAAK9D,2CAA2CkF,yCAAyC9B,CAAU,CAAC,EACnHO,EAAKwB,GAAoB,CACrB,KAAKtM,oBAAoBsM,iBAAmBA,CAChD,CAAC,EACDrB,EAAS,IAAM,KAAKtE,2BAA2B4F,cAAchC,CAAU,CAAC,EACxEiC,EAAW,KACP,KAAKvF,aAAawF,MAAM,gDAAgD,EACjEC,EAAGzG,MAAS,EACtB,EACD6E,EAAK6B,GAAiB,CAClB,KAAKC,qBAAqBD,CAAa,CAC3C,CAAC,CAAC,EAGL9B,KACGI,EAAS,IACL,KAAKjL,oBAAoBoF,gBAAkB,KAAKuB,2BAA2BkG,sBAAsBtC,CAAW,EAAImC,EAAG,CAAA,CAA2B,CAAC,EAEnJ5B,EAAKgC,GAAsB,CACnB,KAAK9M,oBAAoBoF,kBACzB,KAAKpF,oBAAoB8M,mBAAqBA,EAEtD,CAAC,CAAC,EAELzC,UAAU,CACP0C,KAAMA,IAAK,CACP,KAAKC,6BAA4B,EACjC,KAAKnH,yBACD,KAAKoC,kCAAkCyD,8BAA8B1L,EAAoB8F,mBAAmB,GAAGD,0BAA4B,GAG/I,KAAK3B,uBAAyB,KAAK+I,mBAAkB,CACzD,EACAR,MAAQA,GAAS,CACb,KAAKxF,aAAawF,MAAMA,EAAMS,OAAO,CACzC,EACH,EAEL,KAAKpD,+BAAiC,KAAKjC,kBAAkBsF,sBAAsB5C,CAAW,EAAEF,UAAW+C,GAA+C,CACtJ,KAAKpJ,cAAgBoJ,CACzB,CAAC,CACL,CAAC,CACL,CAEAC,aAAW,CACP,KAAKtD,kBAAkBuD,YAAW,EAClC,KAAK3D,4BAA4B2D,YAAW,EAC5C,KAAK1D,8CAA8C0D,YAAW,EAC9D,KAAKzD,0BAA0ByD,YAAW,EAC1C,KAAKxD,gCAAgCwD,YAAW,CACpD,CASAL,oBAAkB,CACd,IAAMM,EAAW,KAAKvN,oBACtBuN,OAAAA,EAASjD,YAAc,KAAKvB,+BACrB,CACH,KAAKyE,iCAAiCD,CAAQ,EAC9C,KAAKE,8BAA8BF,CAAQ,EAC3C,KAAKG,kCAAkCH,CAAQ,EAC/C,KAAKI,iCAAiCJ,CAAQ,EAC9C,KAAKK,iCAAiCL,CAAQ,CAAC,CAEvD,CAEAC,iCAAiCD,EAA6B,CAC1D,MAAO,CACHM,SAAU,+EACVC,QAAS,CACLP,EAASpM,QAAU,CACf4M,KAAMC,EAAWC,KACjBxK,MAAO,6BACP2G,KAAM,CAAE8D,KAAMX,EAASpM,QAAQsC,MAAO0K,WAAY,CAAC,qBAAsBZ,EAASpM,QAAQjB,EAAE,CAAC,GAEjGqN,EAAS/C,eAAiB,CACtBuD,KAAMC,EAAWC,KACjBxK,MAAO,6BACP2G,KAAM,CAAE8D,KAAMX,EAAS/C,eAAeC,MAAMtJ,QAAQjB,GAAIiO,WAAY,CAAC,qBAAsBZ,EAAS/C,eAAeC,MAAMtJ,QAAQjB,EAAE,CAAC,GAExIqN,EAAS/C,eAAiB,CACtBuD,KAAMC,EAAWC,KACjBxK,MAAO,2BACP2G,KAAM,CACF8D,KAAMX,EAAS/C,eAAeC,MAAMhH,MACpC0K,WAAY,CAAC,qBAAsBZ,EAAS/C,eAAeC,MAAMtJ,QAAQjB,GAAI,QAASqN,EAAS/C,eAAeC,MAAMvK,EAAE,IAG9H,CAAE6N,KAAMC,EAAWI,KAAM3K,MAAO,4BAA6B2G,KAAM,CAAE8D,KAAMX,EAAS9J,KAAK,CAAE,EAC3F,CAAEsK,KAAMC,EAAWI,KAAM3K,MAAO,gCAAiC2G,KAAM,CAAE8D,KAAMX,EAASc,SAAS,CAAE,EACnG,CACIN,KAAMC,EAAWI,KACjB3K,MAAO,iCACP2G,KAAM,CAAE8D,KAAMX,EAASe,YAAYC,IAAKC,GAAaA,EAASA,UAAUC,YAAW,CAAE,EAAEC,KAAK,IAAI,CAAC,EACpG,EAGb,CAEAjB,8BAA8BF,EAA6B,CACvD,MAAO,CACHM,SAAU,8EACVC,QAAS,CACL,CACIC,KAAMC,EAAWI,KACjB3K,MAAO,iCACP2G,KAAM,CAAE8D,KAAMX,EAASoB,UAAU,GAErC,CACIZ,KAAMC,EAAWI,KACjB3K,MAAO,2BACP2G,KAAM,CAAE8D,KAAMX,EAASqB,IAAI,GAE/BrB,EAASsB,sBAAwB,CAC7Bd,KAAMC,EAAWI,KACjB3K,MAAO,oDACP2G,KAAM,CAAE8D,KAAM,QAAQX,EAASsB,qBAAqBC,WAAW,UAAUvB,EAASsB,qBAAqBE,WAAW,EAAE,GAExH,CACIhB,KAAMC,EAAWgB,QACjBvL,MAAO,uDACP2G,KAAM,CAAE6E,QAAS1B,EAAS2B,iBAAmB,EAAK,GAEtD,CACInB,KAAMC,EAAWgB,QACjBvL,MAAO,yDACP2G,KAAM,CAAE6E,QAAS1B,EAAS4B,mBAAqB,EAAK,GAExD,CACIpB,KAAMC,EAAWgB,QACjBvL,MAAO,sDACP2G,KAAM,CAAE6E,QAAS1B,EAAS6B,gBAAkB,EAAK,EACpD,EAGb,CAEA1B,kCAAkCH,EAA6B,CAC3D,YAAK8B,oBAAoB9B,CAAQ,EAC1B,CACHM,SAAU,4EACVC,QAAS,CACL,CACIC,KAAMC,EAAWI,KACjB3K,MAAO,qDACP2G,KAAM,CAAE8D,KAAMX,EAASzH,qBAAqB2I,YAAW,CAAE,GAE7D,CACIV,KAAMC,EAAWgB,QACjBvL,MAAO,0DACP2G,KAAM,CAAE6E,QAAS1B,EAASjD,aAAagF,kBAAkB,GAE7D,CACIvB,KAAMC,EAAWuB,6BACjB9L,MAAO,uDACP2G,KAAM,CACFoF,cAAejC,EAAStN,sBACxBsK,WAAYgD,EAASrN,GACrB6N,KAAMjO,EAAeC,WAG7B,CACIgO,KAAMC,EAAWuB,6BACjB9L,MAAO,uDACP2G,KAAM,CACFoF,cAAejC,EAAS9B,sBACxBlB,WAAYgD,EAASrN,GACrB6N,KAAMjO,EAAe2P,WAG7B,CACI1B,KAAMC,EAAWuB,6BACjB9L,MAAO,mDACP2G,KAAM,CACFoF,cAAe,CAAEE,cAAenC,EAASoC,iBAAiB,EAC1DpF,WAAYgD,EAASrN,GACrB6N,KAAMjO,EAAe8P,QAG7B,KAAK3G,+BACD,CAAC,CAACsE,EAASsC,uBAAuBC,QAAU,CACxC/B,KAAMC,EAAW+B,sCACjBtM,MAAO,uDACP2G,KAAM,CACFyF,sBAAuBtC,EAASsC,sBAChCtF,WAAYgD,EAASrN,KAGjCqN,EAASnI,iBACL,KAAKzB,gBAAkB,CACnBoK,KAAMC,EAAWgC,+BACjBvM,MAAO,qDACP2G,KAAM,CACFmD,SAAUA,EACVzH,oBAAqByH,EAASzH,oBAC9BmK,QAAS,KAGrB,CAAC,KAAKtM,gBAAkB,CACpBoK,KAAMC,EAAWC,KACjBxK,MAAO,qDACP2G,KAAM,CACF8F,KAAM3C,EAAStN,uBAAuBqL,aACtC4C,KAAMX,EAAStN,uBAAuBoL,cAG9C,CAAC,KAAK1H,gBAAkB,CACpBoK,KAAMC,EAAWC,KACjBxK,MAAO,qDACP2G,KAAM,CACF8F,KAAM3C,EAAS9B,uBAAuBH,aACtC4C,KAAMX,EAAS9B,uBAAuBJ,cAG9C,CACI0C,KAAMC,EAAWmC,sBACjB1M,MAAO,gDACP2G,KAAM,CACFmD,SAAAA,EACAiC,cAAejC,EAAStN,sBACxBmQ,QAAS,KAAKlH,oCACdmH,qBAAsB9C,EAAStN,uBAAyB,KAAKqQ,+BAA+B/C,EAAStN,sBAAsBC,EAAG,EAC9HqQ,sBAAuBA,IAAM,KAAKA,sBAAqB,EACvDxC,KAAMrF,EAAqC3I,WAGnD,CACIgO,KAAMC,EAAWmC,sBACjB1M,MAAO,gDACP2G,KAAM,CACFmD,SAAAA,EACAiC,cAAejC,EAAS9B,sBACxB2E,QAAS,KAAKjH,oCACdkH,qBAAsB9C,EAAS9B,uBAAyB,KAAK6E,+BAA+B/C,EAAS9B,sBAAsBvL,EAAG,EAC9HqQ,sBAAuBA,IAAM,KAAKA,sBAAqB,EACvDxC,KAAMrF,EAAqC+G,WAGnD,KAAKjG,iBAAmBvD,QACpB,KAAKwD,mBAAqBxD,QAAa,CACnC8H,KAAMC,EAAWwC,sBACjB/M,MAAO,kDACPgN,cAAe,4DACfrG,KAAM,CACFZ,eAAgB,KAAKA,eACrBC,iBAAkB,KAAKA,iBACvBC,oBAAqB,KAAKA,oBAC1BiD,cAAeY,EAASZ,gBAGpC,CAAC,CAACY,EAASjD,aAAaoG,aACpB,CAAC,CAACnD,EAASjD,aAAaqG,UAAUC,UAAUC,QAAQC,OAAS,CACzD/C,KAAMC,EAAWI,KACjB3K,MAAO,6CACP2G,KAAM,CAAE8D,KAAMX,EAASjD,aAAaqG,UAAUC,UAAUC,QAAQC,KAAK,GAE7E,CAAC,CAACvD,EAASjD,aAAaoG,aACpB,CAAC,CAACnD,EAASjD,aAAaqG,UAAUC,UAAUC,QAAQC,OAAS,CACzD/C,KAAMC,EAAW+C,SACjBtN,MAAO,wCACPgN,cAAe,2DACfrG,KAAM,CAAE4G,UAAW,KAAKjK,gBAAgB2D,oBAAoB,YAAc6C,EAASjD,aAAaoG,YAAc,OAAO,CAAC,GAE9H,CACI3C,KAAMC,EAAWI,KACjB3K,MAAO,6CACP2G,KAAM,CAAE8D,KAAMX,EAAS0D,WAAW,EACrC,EAGb,CAEAtD,iCAAiCJ,EAA6B,CAC1D,IAAM2D,EAAkB,CAAC,CAAC,KAAKlI,cAAc8G,OACvChC,EAAoB,CACtB,CACIrK,MAAOyN,EAAkB,2EAA6EjL,OACtG8H,KAAMC,EAAWmD,4BACjB/G,KAAM,CAAEmD,SAAUA,CAAQ,EAC7B,EAGL,OAAI2D,GACApD,EAAQsD,KAAK,CACT3N,MAAO,mCACPsK,KAAMC,EAAWI,KACjBhE,KAAM,CAAE8D,KAAM,KAAKlF,cAAcuF,IAAK8C,GAAeA,EAAW5N,KAAK,EAAEiL,KAAK,IAAI,CAAC,EACpF,EAGE,CACHb,SAAU,2EACVC,QAASA,EAEjB,CAEAF,iCAAiCL,EAA6B,CAE1D,IAAM+D,EAD2B/D,EAASgE,wBAA0BC,EAAuBC,kBAErF,CACI1D,KAAMC,EAAWgB,QACjBvL,MAAO,6CACP2G,KAAM,CAAE6E,QAAS1B,EAASgE,yBAA2BC,EAAuBE,mBAAmB,GAEnG,CACI3D,KAAMC,EAAWI,KACjB3K,MAAO,6CACP2G,KAAM,CAAE8D,KAAM,OAAO,GAE/B,MAAO,CACHL,SAAU,2EACVC,QAAS,CACL,CAAEC,KAAMC,EAAWI,KAAM3K,MAAO,6BAA8B2G,KAAM,CAAE8D,KAAMX,EAASoE,SAAS,CAAE,EAChG,CAAC,CAACpE,EAASqE,aAAe,CAAE7D,KAAMC,EAAWI,KAAM3K,MAAO,kCAAmC2G,KAAM,CAAE8D,KAAMX,EAASqE,WAAW,CAAE,EACjIN,EACA,CAAEvD,KAAMC,EAAWgB,QAASvL,MAAO,qDAAsD2G,KAAM,CAAE6E,QAAS1B,EAASsE,wBAAwB,CAAE,EAC7I,CAAE9D,KAAMC,EAAWgB,QAASvL,MAAO,gEAAiE2G,KAAM,CAAE6E,QAAS1B,EAASuE,yBAAyB,CAAE,EACzJvE,EAASuE,2BAA6B,CAClC/D,KAAMC,EAAWI,KACjB3K,MAAO,oEACP2G,KAAM,CAAE8D,KAAMX,EAASwE,4BAA4B,GAEvD,CACIhE,KAAMC,EAAWI,KACjB3K,MAAO,6EACP2G,KAAM,CACF8D,KAAM,KAAKzG,iBAAiBuK,QACxB,yEACMzE,EAASjB,iBAA4BiB,EAASjB,iBAAiByB,KAAnC,QAC9B,QAAQ,IAIxBR,EAASjB,kBAAoB,CACzByB,KAAMC,EAAWI,KACjB3K,MAAO,uEACP2G,KAAM,CAAE8D,KAAMX,EAASjB,iBAAiB2F,eAAe,GAE3D1E,EAASjB,kBACL,CAAC,CAACiB,EAASjB,iBAAiB4F,kBAAoB,CAC5CnE,KAAMC,EAAWI,KACjB3K,MAAO,gFACP2G,KAAM,CAAE8D,KAAMX,EAASjB,iBAAiB4F,gBAAgB,GAEhE,CAAEnE,KAAMC,EAAWmE,oBAAqB1O,MAAO,wDAAyD2G,KAAM,CAAEmD,SAAAA,EAAU6E,WAAY,KAAKnQ,cAAc,CAAE,EAC3J,CACI8L,KAAMC,EAAWgB,QACjBvL,MAAO,yEACP2G,KAAM,CAAE6E,QAAS1B,EAAS3H,sCAAsC,GAEpE,CAAEmI,KAAMC,EAAWgB,QAASvL,MAAO,iEAAkE2G,KAAM,CAAE6E,QAAS1B,EAAS8E,qBAAqB,CAAE,EACtJ,CAAEtE,KAAMC,EAAWgB,QAASvL,MAAO,yDAA0D2G,KAAM,CAAE6E,QAAS1B,EAAS+E,uBAAuB,CAAE,EAChJ,CACIvE,KAAMC,EAAWgB,QACjBvL,MAAO,0EACP2G,KAAM,CAAE6E,QAAS1B,EAASgF,+BAA+B,GAE7D,CAAExE,KAAMC,EAAWgB,QAASvL,MAAO,iDAAkD2G,KAAM,CAAE6E,QAAS,CAAC,CAAC1B,EAASiF,wBAAwB,CAAE,EAC3I,CAAEzE,KAAMC,EAAW+C,SAAUtN,MAAO,6CAA8C2G,KAAM,CAAE4G,UAAW,KAAK3H,4BAA4B,CAAE,EACxIkE,EAASkF,iBAAmB,CACxB1E,KAAMC,EAAW0E,gBACjBjP,MAAO,uDACP2G,KAAM,CAAEqI,gBAAiBlF,EAASkF,eAAe,GAErD,KAAKpN,aACD,KAAKiE,iBACLiE,EAASpM,QACT,CAAC,KAAKc,gBAAkB,CACpB8L,KAAMC,EAAW2E,uBACjBlP,MAAO,oDACP2G,KAAM,CAAEmD,SAAAA,EAAUqF,SAAU,CAACrF,EAASjI,oBAAqBuN,gBAAiBC,GAAoBC,IAAI,GAE5GxF,EAAST,oBAAsB,CAC3BiB,KAAMC,EAAWgF,2BACjBvP,MAAO,0DACPgN,cAAe,4DACfrG,KAAM,CAAE0C,mBAAoBS,EAAST,kBAAkB,EAC1D,EAGb,CAEQ3C,wBAAsB,CAC1B,KAAKxC,eAAeuD,eAAc,EAAGb,UAAWc,GAAiB,KAAKvK,oBAAsBqS,GAAqB9H,CAAW,CAAE,CAClI,CAEAoF,uBAAqB,CACjB,KAAK2C,kBAAiB,CAC1B,CAEA3Q,wBAAsB,CAClB,KAAKoE,2BAA2BwM,iCAAiC,KAAKnT,oBAAoBE,EAAG,EAAEmK,UAAU,CACrG0C,KAAMA,IAAK,CACP,KAAK9F,aAAamM,QAAQ,8DAA8D,CAC5F,EACA3G,MAAOA,IAAK,CACR,KAAKxF,aAAawF,MAAM,4DAA4D,CACxF,EACH,CACL,CAEAhK,yBAAuB,CACnB,KAAKkE,2BAA2BlE,wBAAwB,KAAKzC,oBAAoBE,EAAG,EAAEmK,UAAU,CAC5F0C,KAAOsG,GAAO,CACV,KAAKpM,aAAaqM,SAAS,CACvBvF,KAAMwF,EAAUC,QAChBtG,QAASmG,EACTI,mBAAoB,GACvB,CACL,EACAhH,MAAQA,GAAS,CACb,IAAMiH,EAAejH,EAAMkH,QAAQC,IAAI,oBAAoB,EAC3D,KAAK3M,aAAaqM,SAAS,CACvBvF,KAAMwF,EAAUM,OAChB3G,QAASwG,EACTD,mBAAoB,GACvB,CACL,EACH,CACL,CAEAlQ,0BAA0BuQ,EAAiC,CACvD,KAAKnN,2BAA2BoN,OAAO,KAAK/T,oBAAoBE,GAAK4T,EAAME,6BAA8BF,EAAMG,yBAAyB,EAAE5J,UAAU,CAChJ0C,KAAMA,IAAK,CACP,KAAK1F,aAAa6M,UAAU,CACxBC,KAAM,sCACNC,QAAS,iCACZ,EACD,KAAKrK,kBAAkBgD,KAAK,EAAE,EAEzB,KAAK9K,eAGN,KAAK8F,OAAOsM,cAAc,sBAAsB,KAAKjL,QAAQ,UAAU,KAAKpJ,oBAAoBwK,eAAeC,MAAMvK,EAAE,kBAAkB,EAFzI,KAAK6H,OAAOsM,cAAc,sBAAsB,KAAKjL,QAAQ,YAAY,CAIjF,EACAqD,MAAQA,GAA6B,KAAK1C,kBAAkBgD,KAAKN,EAAMS,OAAO,EACjF,CACL,CAKAvK,6BAA2B,CACvB,IAAM2R,EAAW,KAAK/M,aAAagN,KAAKC,EAAgC,CAAEC,SAAU,GAAMC,KAAM,IAAI,CAAE,EACtGJ,EAASK,kBAAkBlR,MAAQ,uDACnC6Q,EAASK,kBAAkBzG,KAAO,KAAKzG,iBAAiBuK,QAAQ,+DAA+D,EAC/HsC,EAASM,OAAOC,KAAK,IAAK,CACtB,KAAKC,sBAAqB,CAC9B,CAAC,CACL,CAKAA,uBAAqB,CACjB,KAAK/R,+BAAiC,GACtC,KAAK4D,2BAA2BmO,sBAAsB,KAAK9U,oBAAoBE,EAAG,EAAEmK,UAAU,CAC1F0C,KAAOsG,GAAO,CACV,KAAKpM,aAAaqM,SAAS,CACvBvF,KAAMwF,EAAUC,QAChBtG,QAAS,8DACT6H,kBAAmB,CAAEC,OAAQ3B,GAAKrI,IAAI,EACzC,EACD,KAAKjI,+BAAiC,EAC1C,EACA0J,MAAQwI,GAA0B,CAC9B,KAAKlS,+BAAiC,GACtC,KAAKmS,QAAQD,CAAG,CACpB,EACH,CACL,CAKApS,2BAAyB,CACrB,IAAMyR,EAAW,KAAK/M,aAAagN,KAAKC,EAAgC,CAAEC,SAAU,GAAMC,KAAM,IAAI,CAAE,EACtGJ,EAASK,kBAAkBlR,MAAQ,qDACnC6Q,EAASK,kBAAkBzG,KAAO,KAAKzG,iBAAiBuK,QAAQ,6DAA6D,EAC7HsC,EAASM,OAAOC,KAAK,IAAK,CACtB,KAAKM,oBAAmB,CAC5B,CAAC,CACL,CAKQA,qBAAmB,CACvB,KAAKpS,+BAAiC,GACtC,KAAK4D,2BAA2BwO,oBAAoB,KAAKnV,oBAAoBE,EAAG,EAAEmK,UAAU,CACxF0C,KAAOsG,GAAO,CACV,KAAKpM,aAAaqM,SAAS,CACvBvF,KAAMwF,EAAUC,QAChBtG,QAAS,4DACT6H,kBAAmB,CAAEC,OAAQ3B,GAAKrI,IAAI,EACzC,EACD,KAAKjI,+BAAiC,EAC1C,EACA0J,MAAQwI,GAA0B,CAC9B,KAAKlS,+BAAiC,GACtC,KAAKmS,QAAQD,CAAG,CACpB,EACH,CACL,CAMA/R,mBAAmBqK,EAA6B,CAC5C,IAAM+G,EAAW,KAAK/M,aAAagN,KAAKa,GAA2B,CAAEX,SAAU,GAAMC,KAAM,IAAI,CAAE,EACjGJ,EAASK,kBAAkBU,iBAAmBC,MAAM5I,GAAGa,CAAQ,CACnE,CAMAP,8BAA4B,CACpB,KAAKhN,oBAAoBoF,iBACzB,KAAK+C,wBAAwBoN,uCAAuC,KAAKvV,oBAAoBE,EAAG,EAAEmK,UAAWmL,GAAmB,CACxHA,EAAgB1F,QAChB,KAAK7I,aAAawO,QAAQ,uDAAuD,CAEzF,CAAC,CAET,CAOApG,oBAAoB9B,EAA6B,CACzCA,EAASjD,aAAeiD,EAASjD,aAAaoL,wBAA0B,CAACnI,EAASjD,aAAaqG,WAC/FpD,EAASjD,YAAaqG,SAAW,KAAKpI,cAAcoN,cAAcpI,EAASjD,aAAaoL,sBAAsB,EAEtH,CAEQR,QAAQzI,EAAwB,CACpC,KAAKxF,aAAawF,MAAMA,EAAMS,OAAO,CACzC,CAMAoD,+BAA+BsF,EAAuB,CAClD,IAAMC,EAAO,CAAC,KAAKhW,aAAc,iBAAkB+V,CAAe,EAElE,OAAK,KAAK3T,gBACN4T,EAAKzE,KAAK,aAAa,EAEpByE,CACX,CAOQjJ,qBAAqBD,EAA2D,CAKpF,GAAI,EAHAA,IACC,KAAK3M,oBAAoB2M,eAAemJ,+BAAiCnJ,EAAcmJ,8BACpF,KAAK9V,oBAAoB2M,eAAeoJ,+BAAiCpJ,EAAcoJ,+BAE3F,MAAO,GAGX,KAAK/V,oBAAoB2M,cAAgBA,EACzCA,EAAc3M,oBAAsB,KAAKA,oBACzC,IAAMgW,EAAqBA,CACvBC,EAGM,CAAA,EACNC,KACCD,EAAQ1H,IAAK4H,GAAUA,EAAMD,EAAG,GAAK,CAAC,EAAEE,OAAO,CAACC,EAAKC,KAAUD,EAAMC,GAAO,CAAC,EAClF,YAAK9M,eAAiBwM,EAAmBrJ,EAAcsJ,QAAS,WAAW,EAC3E,KAAKxM,iBAAmBuM,EAAmBrJ,EAAcsJ,QAAS,mBAAmB,EAE9E,EACX,CAEA/C,mBAAiB,CACb,KAAKvM,2BAA2B4F,cAAc,KAAKvM,oBAAoBE,EAAG,EAAEmK,UAAU,CAClF0C,KAAOJ,GAAiB,CACpB,KAAKC,qBAAqBD,CAAa,CAC3C,EACAF,MAAOA,IAAK,CACR,KAAKxF,aAAawF,MAAM,gDAAgD,CAC5E,EACH,CACL,4CA9uBSpG,EAAkC,2BAAlCA,EAAkCkQ,UAAA,CAAA,CAAA,iCAAA,CAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,MAAA,yBAAA,2CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,SAAA,oBAAA,EAAA,CAAA,eAAA,6CAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,EAAA,eAAA,EAAA,CAAA,EAAA,SAAA,YAAA,OAAA,EAAA,CAAA,EAAA,MAAA,cAAA,SAAA,EAAA,YAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,eAAA,oBAAA,EAAA,CAAA,eAAA,4DAAA,EAAA,CAAA,iBAAA,GAAA,EAAA,MAAA,cAAA,SAAA,EAAA,uBAAA,oBAAA,YAAA,EAAA,CAAA,eAAA,4BAAA,EAAA,CAAA,eAAA,6BAAA,EAAA,CAAA,EAAA,MAAA,cAAA,SAAA,EAAA,aAAA,YAAA,EAAA,CAAA,eAAA,2DAAA,EAAA,CAAA,EAAA,MAAA,cAAA,SAAA,EAAA,YAAA,EAAA,CAAA,eAAA,oCAAA,EAAA,CAAA,eAAA,2BAAA,EAAA,CAAA,EAAA,MAAA,WAAA,SAAA,EAAA,YAAA,EAAA,CAAA,eAAA,kDAAA,EAAA,SAAA,aAAA,EAAA,CAAA,aAAA,aAAA,EAAA,MAAA,WAAA,SAAA,EAAA,sBAAA,EAAA,CAAA,eAAA,gDAAA,EAAA,CAAA,eAAA,sBAAA,EAAA,CAAA,eAAA,6BAAA,EAAA,CAAA,EAAA,OAAA,EAAA,YAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,OAAA,SAAA,EAAA,MAAA,gBAAA,SAAA,EAAA,QAAA,mBAAA,YAAA,EAAA,CAAA,eAAA,uDAAA,EAAA,CAAA,eAAA,oDAAA,EAAA,CAAA,KAAA,8BAAA,EAAA,MAAA,aAAA,SAAA,OAAA,EAAA,QAAA,UAAA,EAAA,CAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,eAAA,sDAAA,EAAA,CAAA,KAAA,4BAAA,EAAA,MAAA,aAAA,SAAA,OAAA,EAAA,QAAA,UAAA,EAAA,CAAA,eAAA,oDAAA,EAAA,CAAA,OAAA,SAAA,cAAA,OAAA,EAAA,iBAAA,mBAAA,EAAA,CAAA,EAAA,MAAA,sBAAA,SAAA,OAAA,EAAA,gBAAA,OAAA,EAAA,QAAA,kBAAA,EAAA,CAAA,eAAA,oCAAA,EAAA,CAAA,oCAAA,GAAA,EAAA,OAAA,EAAA,mBAAA,qBAAA,EAAA,CAAA,eAAA,qBAAA,EAAA,CAAA,kBAAA,GAAA,yBAAA,+CAAA,EAAA,OAAA,EAAA,SAAA,cAAA,iBAAA,cAAA,kBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,EAAA,SAAA,yBAAA,EAAA,WAAA,gBAAA,cAAA,EAAA,CAAA,EAAA,UAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,IC9F/CzX,EAAA,EAAA,MAAA,CAAA,EACID,EAAA,EAAA;KAAA,EAAAC,EAAA,EAAA,MAAA,CAAA,EACID,EAAA,EAAA;SAAA,EAAAoB,EAAA,EAAAwW,GAAA,GAAA,EAAA,EAmNJzX,EAAA,EACJH,EAAA,EAAA;CAAA,EAAAG,EAAA,EACAH,EAAA,EAAA;CAAA,SArNQI,EAAA,CAAA,EAAAqB,EAAAkW,EAAA7W,oBAAA,EAAA,EAAA,kBD4EA+W,GACAC,GACAC,EACAC,GACAC,GACAC,GACAC,EACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,EAAoB,EAAAC,OAAA,CAAA;CAAA,EAAAC,cAAA,CAAA,CAAA,SAGfzR,CAAkC,GAAA",
  "names": ["ProgrammingExerciseInstructorExerciseDownloadComponent", "programmingExerciseService", "inject", "ProgrammingExerciseService", "alertService", "AlertService", "ButtonType", "ButtonSize", "FeatureToggle", "exerciseId", "faDownload", "exportExercise", "exportInstructorExercise", "subscribe", "response", "downloadZipFileFromResponse", "success", "error", "selectors", "inputs", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275listener", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "INFO", "SMALL", "\u0275\u0275pureFunction2", "_c0", "ProgrammingExercises", "Exports", "ButtonComponent", "encapsulation", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "ctx_r0", "FeatureToggle", "ProgrammingExercises", "\u0275\u0275pureFunction3", "_c2", "baseResource", "RepositoryType", "TEMPLATE", "programmingExercise", "templateParticipation", "id", "faPencilAlt", "\u0275\u0275pureFunction1", "_c3", "\u0275\u0275template", "ProgrammingExerciseDetailComponent_Conditional_4_Conditional_18_Conditional_9_Template", "ProgrammingExerciseDetailComponent_Conditional_4_Conditional_18_Conditional_10_Template", "_c0", "faWrench", "\u0275\u0275conditional", "isBuildPlanEditable", "_c1", "faFileSignature", "\u0275\u0275propertyInterpolate", "\u0275\u0275pipeBind1", "\u0275\u0275pureFunction2", "_c4", "course", "faRobot", "_c5", "faListAlt", "_c6", "teamBaseResource", "faUsers", "_c7", "shortBaseResource", "faUserCheck", "_c8", "faChartBar", "ProgrammingExerciseDetailComponent_Conditional_4_Conditional_24_Conditional_8_Template", "faTable", "isExamExercise", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r2", "\u0275\u0275nextContext", "\u0275\u0275resetView", "combineTemplateCommits", "_r3", "generateStructureOracle", "_r4", "handleUnlockAllRepositories", "ProgrammingExerciseDetailComponent_Conditional_4_Conditional_33_Conditional_3_Template", "handleLockAllRepositories", "ProgrammingExerciseDetailComponent_Conditional_4_Conditional_33_Conditional_11_Template", "lockingOrUnlockingRepositories", "faExclamationTriangle", "_r5", "checkConsistencies", "faCheckDouble", "faUndo", "$event", "_r6", "deleteProgrammingExercise", "localVCEnabled", "title", "dialogError$", "localCIEnabled", "\u0275\u0275pureFunction0", "_c9", "_c10", "faTrash", "doughnutStats", "PROGRAMMING", "exerciseDetailSections", "ProgrammingExerciseDetailComponent_Conditional_4_Conditional_18_Template", "ProgrammingExerciseDetailComponent_Conditional_4_Conditional_19_Template", "ProgrammingExerciseDetailComponent_Conditional_4_Conditional_20_Template", "ProgrammingExerciseDetailComponent_Conditional_4_Conditional_21_Template", "ProgrammingExerciseDetailComponent_Conditional_4_Conditional_22_Template", "ProgrammingExerciseDetailComponent_Conditional_4_Conditional_23_Template", "ProgrammingExerciseDetailComponent_Conditional_4_Conditional_24_Template", "ProgrammingExerciseDetailComponent_Conditional_4_Conditional_30_Template", "ProgrammingExerciseDetailComponent_Conditional_4_Conditional_31_Template", "ProgrammingExerciseDetailComponent_Conditional_4_Conditional_32_Template", "ProgrammingExerciseDetailComponent_Conditional_4_Conditional_33_Template", "ProgrammingExerciseDetailComponent_Conditional_4_Conditional_34_Template", "ProgrammingExerciseDetailComponent_Conditional_4_Conditional_35_Template", "ProgrammingExerciseDetailComponent_Conditional_4_Conditional_38_Template", "ProgrammingExerciseDetailComponent_Conditional_4_Conditional_39_Template", "\u0275\u0275textInterpolate1", "documentationType", "isAtLeastEditor", "irisEnabled", "isAtLeastInstructor", "isAtLeastTutor", "teamMode", "assessmentType", "AssessmentType", "SEMI_AUTOMATIC", "allowComplaintsForAutomaticAssessments", "plagiarismCheckSupported", "programmingLanguage", "ProgrammingLanguage", "JAVA", "undefined", "releaseDate", "dayjs", "isBefore", "ProgrammingExerciseDetailComponent", "activatedRoute", "inject", "ActivatedRoute", "accountService", "AccountService", "programmingExerciseService", "ProgrammingExerciseService", "exerciseService", "ExerciseService", "artemisMarkdown", "ArtemisMarkdownService", "alertService", "AlertService", "programmingExerciseSubmissionPolicyService", "SubmissionPolicyService", "eventManager", "EventManager", "modalService", "NgbModal", "translateService", "TranslateService", "profileService", "ProfileService", "statisticsService", "StatisticsService", "router", "Router", "programmingLanguageFeatureService", "ProgrammingLanguageFeatureService", "consistencyCheckService", "ConsistencyCheckService", "irisSettingsService", "IrisSettingsService", "aeolusService", "AeolusService", "ActionType", "ProgrammingExerciseParticipationType", "ExerciseType", "ButtonSize", "faBook", "faEye", "programmingExerciseBuildConfig", "competencies", "supportsAuxiliaryRepositories", "loadingTemplateParticipationResults", "loadingSolutionParticipationResults", "courseId", "formattedGradingInstructions", "irisChatEnabled", "isAdmin", "addedLineCount", "removedLineCount", "isLoadingDiffReport", "activatedRouteSubscription", "templateAndSolutionParticipationSubscription", "irisSettingsSubscription", "exerciseStatisticsSubscription", "dialogErrorSource", "Subject", "asObservable", "ngOnInit", "checkBuildPlanEditable", "data", "subscribe", "buildConfig", "exerciseId", "exerciseGroup", "exam", "safeHtmlForMarkdown", "gradingInstructions", "findWithTemplateAndSolutionParticipationAndLatestResults", "pipe", "tap", "updatedProgrammingExercise", "body", "mergeMap", "getProfileInfo", "profileInfo", "projectKey", "buildPlanId", "buildPlanUrl", "createBuildPlanUrl", "buildPlanURLTemplate", "solutionParticipation", "getProgrammingLanguageFeature", "auxiliaryRepositoriesSupported", "activeProfiles", "includes", "PROFILE_LOCALVC", "PROFILE_LOCALCI", "PROFILE_IRIS", "getCombinedCourseSettings", "settings", "irisChatSettings", "enabled", "getSubmissionPolicyOfProgrammingExercise", "submissionPolicy", "getDiffReport", "catchError", "error", "of", "gitDiffReport", "processGitDiffReport", "getBuildLogStatistics", "buildLogStatistics", "next", "checkAndAlertInconsistencies", "getExerciseDetails", "message", "getExerciseStatistics", "statistics", "ngOnDestroy", "unsubscribe", "exercise", "getExerciseDetailsGeneralSection", "getExerciseDetailsModeSection", "getExerciseDetailsLanguageSection", "getExerciseDetailsProblemSection", "getExerciseDetailsGradingSection", "headline", "details", "type", "DetailType", "Link", "text", "routerLink", "Text", "shortName", "categories", "map", "category", "toUpperCase", "join", "difficulty", "mode", "teamAssignmentConfig", "minTeamSize", "maxTeamSize", "Boolean", "boolean", "allowOfflineIde", "allowOnlineEditor", "allowOnlineIde", "checkAndSetWindFile", "sequentialTestRuns", "ProgrammingRepositoryButtons", "participation", "SOLUTION", "repositoryUri", "testRepositoryUri", "TESTS", "auxiliaryRepositories", "length", "ProgrammingAuxiliaryRepositoryButtons", "ProgrammingCheckoutDirectories", "isLocal", "href", "ProgrammingTestStatus", "loading", "submissionRouterLink", "getParticipationSubmissionLink", "onParticipationChange", "ProgrammingDiffReport", "titleHelpText", "buildScript", "windfile", "metadata", "docker", "image", "Markdown", "innerHtml", "packageName", "hasCompetencies", "ProgrammingProblemStatement", "push", "competency", "includedInScore", "includedInOverallScore", "IncludedInOverallScore", "INCLUDED_AS_BONUS", "INCLUDED_COMPLETELY", "maxPoints", "bonusPoints", "presentationScoreEnabled", "staticCodeAnalysisEnabled", "maxStaticCodeAnalysisPenalty", "instant", "submissionLimit", "exceedingPenalty", "ProgrammingTimeline", "isExamMode", "allowFeedbackRequests", "showTestNamesToStudents", "releaseTestsWithExampleSolution", "feedbackSuggestionModule", "gradingCriteria", "GradingCriteria", "ProgrammingIrisEnabled", "disabled", "subSettingsType", "IrisSubSettingsType", "CHAT", "ProgrammingBuildStatistics", "hasEditableBuildPlan", "loadGitDiffReport", "combineTemplateRepositoryCommits", "success", "res", "addAlert", "AlertType", "SUCCESS", "disableTranslation", "errorMessage", "headers", "get", "DANGER", "event", "delete", "deleteStudentReposBuildPlans", "deleteBaseReposBuildPlans", "broadcast", "name", "content", "navigateByUrl", "modalRef", "open", "ConfirmAutofocusModalComponent", "keyboard", "size", "componentInstance", "result", "then", "unlockAllRepositories", "translationParams", "number", "err", "onError", "lockAllRepositories", "ConsistencyCheckComponent", "exercisesToCheck", "Array", "checkConsistencyForProgrammingExercise", "inconsistencies", "warning", "buildPlanConfiguration", "parseWindFile", "participationId", "link", "templateRepositoryCommitHash", "solutionRepositoryCommitHash", "calculateLineCount", "entries", "key", "entry", "reduce", "sum", "count", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "ProgrammingExerciseDetailComponent_Conditional_4_Template", "TranslateDirective", "DocumentationButtonComponent", "RouterLink", "FaIconComponent", "OrionFilterDirective", "FeatureToggleLinkDirective", "NgbTooltip", "ProgrammingExerciseInstructorExerciseDownloadComponent", "FeatureToggleDirective", "ProgrammingExerciseResetButtonDirective", "DeleteButtonDirective", "ExerciseDetailStatisticsComponent", "DetailOverviewListComponent", "ArtemisTranslatePipe", "styles", "encapsulation"]
}
