{
  "version": 3,
  "sources": ["src/main/webapp/app/exercises/shared/example-submission/example-submission-import/example-submission-import-paging.service.ts", "src/main/webapp/app/exercises/shared/example-submission/example-submission-import/example-submission-import.component.ts", "src/main/webapp/app/exercises/shared/example-submission/example-submission-import/example-submission-import.component.html", "src/main/webapp/app/exercises/shared/example-submission/example-submissions.component.ts", "src/main/webapp/app/exercises/shared/example-submission/example-submissions.component.html"],
  "sourcesContent": ["import { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Injectable, inject } from '@angular/core';\r\nimport { Submission } from 'app/entities/submission.model';\r\nimport { PagingService } from 'app/exercises/shared/manage/paging.service';\r\nimport { SearchResult, SearchTermPageableSearch } from 'app/shared/table/pageable-table';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\ntype EntityResponseType = SearchResult<Submission>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ExampleSubmissionImportPagingService extends PagingService<Submission> {\r\n    private http = inject(HttpClient);\r\n\r\n    private static readonly RESOURCE_URL = 'api/exercise/exercises';\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Gets all submissions with exerciseId\r\n     * @param pageable   pageable search containing information required for pagination and sorting\r\n     * @param options exerciseId id of exercise which submissions belongs to\r\n     */\r\n    override search(pageable: SearchTermPageableSearch, options: { exerciseId: number }): Observable<EntityResponseType> {\r\n        const params = this.createHttpParams(pageable);\r\n        return this.http\r\n            .get(`${ExampleSubmissionImportPagingService.RESOURCE_URL}/${options.exerciseId}/submissions-for-import`, { params, observe: 'response' })\r\n            .pipe(map((resp: HttpResponse<EntityResponseType>) => resp && resp.body!));\r\n    }\r\n}\r\n", "import { Component, inject } from '@angular/core';\r\nimport { faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { Exercise, ExerciseType } from 'app/entities/exercise.model';\r\nimport { Submission } from 'app/entities/submission.model';\r\nimport { ExampleSubmissionService } from 'app/exercises/shared/example-submission/example-submission.service';\r\nimport { ImportComponent } from 'app/shared/import/import.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { SortDirective } from 'app/shared/sort/sort.directive';\r\nimport { SortByDirective } from 'app/shared/sort/sort-by.directive';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { NgbPagination, NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ResultComponent } from '../../result/result.component';\r\nimport { ButtonComponent } from 'app/shared/components/button.component';\r\nimport { ArtemisDatePipe } from 'app/shared/pipes/artemis-date.pipe';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\nimport { ExampleSubmissionImportPagingService } from 'app/exercises/shared/example-submission/example-submission-import/example-submission-import-paging.service';\r\n\r\n@Component({\r\n    selector: 'jhi-example-submission-import',\r\n    templateUrl: './example-submission-import.component.html',\r\n    imports: [\r\n        FormsModule,\r\n        TranslateDirective,\r\n        SortDirective,\r\n        SortByDirective,\r\n        FaIconComponent,\r\n        NgbTooltip,\r\n        ResultComponent,\r\n        ButtonComponent,\r\n        NgbPagination,\r\n        ArtemisDatePipe,\r\n        ArtemisTranslatePipe,\r\n    ],\r\n})\r\nexport class ExampleSubmissionImportComponent extends ImportComponent<Submission> {\r\n    private exampleSubmissionService = inject(ExampleSubmissionService);\r\n\r\n    exercise: Exercise;\r\n\r\n    readonly faQuestionCircle = faQuestionCircle;\r\n    readonly ExerciseType = ExerciseType;\r\n\r\n    constructor() {\r\n        const pagingService = inject(ExampleSubmissionImportPagingService);\r\n        super(pagingService);\r\n    }\r\n\r\n    get searchTermEntered() {\r\n        return !!(this.state?.searchTerm?.length && this.state.searchTerm.length > 0);\r\n    }\r\n\r\n    protected override onSearchResult() {\r\n        this.content?.resultsOnPage?.forEach((submission) => {\r\n            submission.submissionSize = this.exampleSubmissionService.getSubmissionSize(submission, this.exercise);\r\n        });\r\n    }\r\n\r\n    protected override createOptions(): object | undefined {\r\n        return { exerciseId: this.exercise.id! };\r\n    }\r\n}\r\n", "<form>\r\n    <div class=\"modal-header\">\r\n        <h4 class=\"modal-title\" jhiTranslate=\"artemisApp.exampleSubmission.useAsExampleSubmissionLabel\"></h4>\r\n        <button type=\"button\" class=\"btn-close\" data-dismiss=\"modal\" aria-hidden=\"true\" (click)=\"clear()\"></button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <div class=\"form-group form-inline\">\r\n            <label class=\"form-control-label\" jhiTranslate=\"artemisApp.exampleSubmission.searchSubmission\" for=\"searchParticipant\"></label>\r\n            <input\r\n                class=\"form-control ms-2\"\r\n                type=\"text\"\r\n                name=\"searchParticipant\"\r\n                id=\"searchParticipant\"\r\n                [(ngModel)]=\"searchTerm\"\r\n                placeholder=\"{{ 'artemisApp.exercise.name' | artemisTranslate }}\"\r\n            />\r\n            @if (loading) {\r\n                <span class=\"ms-3\" jhiTranslate=\"artemisApp.exercise.import.loading\"></span>\r\n            }\r\n        </div>\r\n        @if (content.resultsOnPage && content.resultsOnPage.length > 0) {\r\n            <div class=\"table-responsive\">\r\n                <table class=\"table table-striped\">\r\n                    <thead class=\"thead-dark\">\r\n                        <tr jhiSort [(predicate)]=\"sortedColumn\" [(ascending)]=\"listSorting\" (sortChange)=\"sortRows()\">\r\n                            <th jhiSortBy=\"ID\">\r\n                                <span>#</span>\r\n                            </th>\r\n                            <th jhiSortBy=\"STUDENT_NAME\">\r\n                                <span jhiTranslate=\"artemisApp.exercise.name\"></span>\r\n                                <fa-icon [icon]=\"faSort\" />\r\n                            </th>\r\n                            <th>\r\n                                <span jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionDate\"></span>\r\n                            </th>\r\n                            <th>\r\n                                <span jhiTranslate=\"artemisApp.assessment.dashboard.columns.result\"></span>\r\n                            </th>\r\n                            <th style=\"display: table-caption\">\r\n                                <span jhiTranslate=\"artemisApp.exampleSubmission.submissionSize\"></span>\r\n                                @if (exercise && exercise.type === ExerciseType.TEXT) {\r\n                                    <fa-icon\r\n                                        [icon]=\"faQuestionCircle\"\r\n                                        class=\"text-secondary ps-1\"\r\n                                        [ngbTooltip]=\"'artemisApp.exampleSubmission.textSubmissionSizeHint' | artemisTranslate\"\r\n                                    />\r\n                                }\r\n                                @if (exercise && exercise.type === ExerciseType.MODELING) {\r\n                                    <fa-icon\r\n                                        [icon]=\"faQuestionCircle\"\r\n                                        class=\"text-secondary ps-1\"\r\n                                        [ngbTooltip]=\"'artemisApp.exampleSubmission.modelingSubmissionSizeHint' | artemisTranslate\"\r\n                                    />\r\n                                }\r\n                            </th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        @for (submission of content.resultsOnPage; track submission; let i = $index) {\r\n                            <tr>\r\n                                <td>{{ i + 1 }}</td>\r\n                                <td>{{ submission.participation?.participantName }}</td>\r\n                                <td>{{ submission.submissionDate | artemisDate }}</td>\r\n                                <td>\r\n                                    <jhi-result [exercise]=\"exercise\" [participation]=\"submission.participation!\" />\r\n                                </td>\r\n                                <td>\r\n                                    {{ submission.submissionSize }}\r\n                                </td>\r\n                                <td>\r\n                                    <jhi-button (onClick)=\"selectImport(submission)\" [title]=\"'artemisApp.exercise.import.table.doImport'\" />\r\n                                </td>\r\n                            </tr>\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        } @else {\r\n            @if (searchTermEntered) {\r\n                <p jhiTranslate=\"artemisApp.assessment.dashboard.empty\"></p>\r\n            }\r\n            @if (!searchTermEntered) {\r\n                <p jhiTranslate=\"artemisApp.assessment.dashboard.emptySearch\"></p>\r\n            }\r\n        }\r\n        <div class=\"d-flex justify-content-between p-2\">\r\n            <ngb-pagination [maxSize]=\"10\" [rotate]=\"true\" [collectionSize]=\"total\" [(page)]=\"state.page\" [pageSize]=\"state.pageSize\" (pageChange)=\"onPageChange($event)\" />\r\n        </div>\r\n    </div>\r\n</form>\r\n", "import { Component, OnDestroy, OnInit, inject } from '@angular/core';\r\nimport { ActivatedRoute, RouterLink } from '@angular/router';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { ExampleSubmissionService } from 'app/exercises/shared/example-submission/example-submission.service';\r\nimport { Exercise, ExerciseType, getCourseFromExercise } from 'app/entities/exercise.model';\r\nimport { NgbModal, NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ExampleSubmissionImportComponent } from 'app/exercises/shared/example-submission/example-submission-import/example-submission-import.component';\r\nimport { Submission } from 'app/entities/submission.model';\r\nimport { onError } from 'app/shared/util/global.utils';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\nimport { faExclamationTriangle, faFont, faPlus, faQuestionCircle, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { ResultComponent } from '../result/result.component';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    templateUrl: 'example-submissions.component.html',\r\n    imports: [TranslateDirective, RouterLink, FaIconComponent, NgbTooltip, ResultComponent, ArtemisTranslatePipe],\r\n})\r\nexport class ExampleSubmissionsComponent implements OnInit, OnDestroy {\r\n    private alertService = inject(AlertService);\r\n    private exampleSubmissionService = inject(ExampleSubmissionService);\r\n    private activatedRoute = inject(ActivatedRoute);\r\n    private modalService = inject(NgbModal);\r\n    private accountService = inject(AccountService);\r\n\r\n    exercise: Exercise;\r\n    readonly exerciseType = ExerciseType;\r\n    createdExampleAssessment: boolean[];\r\n\r\n    // Icons\r\n    faPlus = faPlus;\r\n    faTimes = faTimes;\r\n    faFont = faFont;\r\n    faQuestionCircle = faQuestionCircle;\r\n    faExclamationTriangle = faExclamationTriangle;\r\n\r\n    /**\r\n     * Initializes all relevant data for the exercise\r\n     */\r\n    ngOnInit() {\r\n        // Get the exercise\r\n        this.activatedRoute.data.subscribe(({ exercise }) => {\r\n            exercise.course = getCourseFromExercise(exercise);\r\n            this.accountService.setAccessRightsForCourse(exercise.course);\r\n            this.exercise = exercise;\r\n\r\n            this.createdExampleAssessment =\r\n                this.exercise.exampleSubmissions?.map((exampleSubmission) => exampleSubmission.submission?.results?.some((result) => result.exampleResult) ?? false) ?? [];\r\n        });\r\n        this.exercise?.exampleSubmissions?.forEach((exampleSubmission) => {\r\n            if (exampleSubmission.submission) {\r\n                exampleSubmission.submission.submissionSize = this.exampleSubmissionService.getSubmissionSize(exampleSubmission.submission, this.exercise);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Closes open modal on component destroy\r\n     */\r\n    ngOnDestroy() {\r\n        if (this.modalService?.hasOpenModals()) {\r\n            this.modalService.dismissAll();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Deletes example submission\r\n     * @param index in the example submissions array\r\n     */\r\n    deleteExampleSubmission(index: number) {\r\n        const submissionId = this.exercise.exampleSubmissions![index].id!;\r\n        this.exampleSubmissionService.delete(submissionId).subscribe({\r\n            next: () => {\r\n                this.exercise.exampleSubmissions!.splice(index, 1);\r\n                this.createdExampleAssessment.splice(index, 1);\r\n            },\r\n            error: (error: HttpErrorResponse) => {\r\n                this.alertService.error(error.message);\r\n            },\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Navigates to the detail view of the example submission\r\n     * @param exampleSubmissionId id of the submission or new for a new submission\r\n     */\r\n    getLinkToExampleSubmission(exampleSubmissionId: number | 'new') {\r\n        if (!this.exercise.exerciseGroup) {\r\n            return ['/course-management', this.exercise.course!.id, this.exercise.type + '-exercises', this.exercise.id, 'example-submissions', exampleSubmissionId];\r\n        } else {\r\n            return [\r\n                '/course-management',\r\n                this.exercise.course!.id,\r\n                'exams',\r\n                this.exercise.exerciseGroup!.exam!.id,\r\n                'exercise-groups',\r\n                this.exercise.exerciseGroup!.id,\r\n                this.exercise.type + '-exercises',\r\n                this.exercise.id,\r\n                'example-submissions',\r\n                exampleSubmissionId,\r\n            ];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Opens the import module for example submission\r\n     * Then invokes import api for selected submission\r\n     */\r\n    openImportModal() {\r\n        const exampleSubmissionImportModalRef = this.modalService.open(ExampleSubmissionImportComponent, {\r\n            size: 'lg',\r\n            backdrop: 'static',\r\n        });\r\n        exampleSubmissionImportModalRef.componentInstance.exercise = this.exercise;\r\n        exampleSubmissionImportModalRef.result.then((selectedSubmission: Submission) => {\r\n            this.exampleSubmissionService.import(selectedSubmission.id!, this.exercise.id!).subscribe({\r\n                next: () => {\r\n                    this.alertService.success('artemisApp.exampleSubmission.submitSuccessful');\r\n                    location.reload();\r\n                },\r\n                error: (error: HttpErrorResponse) => onError(this.alertService, error),\r\n            });\r\n        });\r\n    }\r\n}\r\n", "<div>\r\n    @if (exercise && exercise.id && exercise.course && exercise.course.id) {\r\n        <div class=\"row\">\r\n            <div class=\"col-12 col-sm\">\r\n                <h4>\r\n                    <span jhiTranslate=\"artemisApp.exampleSubmission.exampleSubmissions\"></span>\r\n                </h4>\r\n            </div>\r\n            <div class=\"col-12 col-sm-auto d-flex flex-btn-group-container me-1 mb-1\">\r\n                @if (exercise.course.isAtLeastEditor) {\r\n                    <a class=\"btn btn-primary me-1 mb-1\" [routerLink]=\"getLinkToExampleSubmission('new')\">\r\n                        <fa-icon [icon]=\"faPlus\" />\r\n                        <fa-icon class=\"d-xl-none\" [icon]=\"faFont\" />\r\n                        <span class=\"d-none d-xl-inline\" jhiTranslate=\"artemisApp.modelingExercise.createExampleSubmission\" id=\"create-example-submission\"></span>\r\n                    </a>\r\n                }\r\n                @if (exercise.course.isAtLeastEditor) {\r\n                    <a class=\"btn btn-primary me-1 mb-1\" (click)=\"openImportModal()\">\r\n                        <fa-icon [icon]=\"faPlus\" />\r\n                        <fa-icon class=\"d-xl-none\" [icon]=\"faFont\" />\r\n                        <span class=\"d-none d-xl-inline\" jhiTranslate=\"artemisApp.exampleSubmission.useAsExampleSubmission\"></span>\r\n                    </a>\r\n                }\r\n            </div>\r\n        </div>\r\n    }\r\n    <br />\r\n    <div class=\"table-responsive\">\r\n        @if (exercise && exercise.id && exercise.course && exercise.course.id) {\r\n            <table class=\"table table-striped\">\r\n                <thead>\r\n                    <tr>\r\n                        <th><span jhiTranslate=\"global.field.id\"></span></th>\r\n                        <th><span jhiTranslate=\"artemisApp.exercise.title\"></span></th>\r\n                        <th><span jhiTranslate=\"artemisApp.assessment.dashboard.columns.result\"></span></th>\r\n                        <th>\r\n                            <span jhiTranslate=\"artemisApp.exampleSubmission.submissionSize\"></span>\r\n                            @if (exercise.type === exerciseType.TEXT) {\r\n                                <fa-icon\r\n                                    [icon]=\"faQuestionCircle\"\r\n                                    class=\"text-secondary ps-1\"\r\n                                    [ngbTooltip]=\"'artemisApp.exampleSubmission.textSubmissionSizeHint' | artemisTranslate\"\r\n                                />\r\n                            }\r\n                            @if (exercise.type === exerciseType.MODELING) {\r\n                                <fa-icon\r\n                                    [icon]=\"faQuestionCircle\"\r\n                                    class=\"text-secondary ps-1\"\r\n                                    [ngbTooltip]=\"'artemisApp.exampleSubmission.modelingSubmissionSizeHint' | artemisTranslate\"\r\n                                />\r\n                            }\r\n                        </th>\r\n                        <th><span jhiTranslate=\"artemisApp.exampleSubmission.assessmentTraining\"></span></th>\r\n                        <th><span jhiTranslate=\"artemisApp.exampleSubmission.exampleAssessmentCreated\"></span></th>\r\n                        @if (exercise.course.isAtLeastEditor) {\r\n                            <th></th>\r\n                        }\r\n                    </tr>\r\n                </thead>\r\n                <tbody class=\"markdown-preview\">\r\n                    @for (exampleSubmission of exercise.exampleSubmissions; track exampleSubmission; let i = $index) {\r\n                        <tr>\r\n                            <td>\r\n                                <a [routerLink]=\"getLinkToExampleSubmission(exampleSubmission.id!)\" class=\"btn-link\">\r\n                                    {{ exampleSubmission.id }}\r\n                                </a>\r\n                            </td>\r\n                            <td>\r\n                                <a [routerLink]=\"getLinkToExampleSubmission(exampleSubmission.id!)\" class=\"btn-link\">\r\n                                    {{ 'artemisApp.exampleSubmission.exampleSubmission' | artemisTranslate }} {{ i + 1 }}\r\n                                </a>\r\n                            </td>\r\n                            <td>\r\n                                @if (exampleSubmission.submission && exampleSubmission.submission!.results && exampleSubmission.submission!.results!.length > 0) {\r\n                                    <jhi-result [result]=\"exampleSubmission.submission!.results![0]\" [exercise]=\"exercise\" />\r\n                                } @else {\r\n                                    <jhi-result />\r\n                                }\r\n                            </td>\r\n                            <td>\r\n                                {{ exampleSubmission.submission!.submissionSize }}\r\n                            </td>\r\n                            <td>{{ 'artemisApp.exampleSubmission.' + (exampleSubmission.usedForTutorial ? 'assessCorrectly' : 'readAndConfirm') | artemisTranslate }}</td>\r\n                            <td>\r\n                                @if (createdExampleAssessment[i]) {\r\n                                    <span jhiTranslate=\"global.generic.yes\"></span>\r\n                                }\r\n                                @if (!createdExampleAssessment[i]) {\r\n                                    <span class=\"text-danger\" jhiTranslate=\"global.generic.no\"></span>\r\n                                }\r\n                                @if (!createdExampleAssessment[i]) {\r\n                                    <fa-icon\r\n                                        [icon]=\"faExclamationTriangle\"\r\n                                        class=\"text-warning\"\r\n                                        [ngbTooltip]=\"'artemisApp.exampleSubmission.exampleAssessmentWarning' | artemisTranslate\"\r\n                                    />\r\n                                }\r\n                            </td>\r\n                            @if (exercise.course.isAtLeastEditor) {\r\n                                <td>\r\n                                    <button (click)=\"deleteExampleSubmission(i)\" class=\"btn btn-danger col-auto\">\r\n                                        <fa-icon [icon]=\"faTimes\" />\r\n                                        {{ 'entity.action.delete' | artemisTranslate }}\r\n                                    </button>\r\n                                </td>\r\n                            }\r\n                        </tr>\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        }\r\n    </div>\r\n</div>\r\n"],
  "mappings": "kjFAWA,IAAaA,IAAqC,IAAA,CAA5C,MAAOA,UAA6CC,EAAyB,CACvEC,KAAOC,EAAOC,CAAU,EAExB,OAAgBC,aAAe,yBAEvCC,aAAA,CACI,MAAK,CACT,CAOSC,OAAOC,EAAoCC,EAA+B,CAC/E,IAAMC,EAAS,KAAKC,iBAAiBH,CAAQ,EAC7C,OAAO,KAAKN,KACPU,IAAI,GAAGZ,EAAqCK,YAAY,IAAII,EAAQI,UAAU,0BAA2B,CAAEH,OAAAA,EAAQI,QAAS,UAAU,CAAE,EACxIC,KAAKC,EAAKC,GAA2CA,GAAQA,EAAKC,IAAK,CAAC,CACjF,4CAnBSlB,EAAoC,6BAApCA,EAAoCmB,QAApCnB,EAAoCoB,UAAAC,WADvB,MAAM,CAAA,SACnBrB,CAAqC,GAAA,yBEMlCsB,EAAA,EAAA;iBAAA,EAAAC,EAAA,EAAA,OAAA,CAAA,EACJD,EAAA,EAAA;aAAA,6BAuBwBA,EAAA,EAAA;qCAAA,EAAAC,EAAA,EAAA,UAAA,EAAA,0BAKJD,EAAA,EAAA;iCAAA,mBAJQE,EAAA,EAAAC,EAAA,OAAAC,EAAAC,gBAAA,EAAyB,aAAAC,EAAA,EAAA,EAAA,qDAAA,CAAA,6BAM7BN,EAAA,EAAA;qCAAA,EAAAC,EAAA,EAAA,UAAA,EAAA,0BAKJD,EAAA,EAAA;iCAAA,mBAJQE,EAAA,EAAAC,EAAA,OAAAC,EAAAC,gBAAA,EAAyB,aAAAC,EAAA,EAAA,EAAA,yDAAA,CAAA,sCAWrCN,EAAA,EAAA;6BAAA,EAAAO,EAAA,EAAA,IAAA,EACIP,EAAA,EAAA;iCAAA,EAAAO,EAAA,EAAA,IAAA,EAAIP,EAAA,CAAA,EAAWQ,EAAA,EACfR,EAAA,EAAA;iCAAA,EAAAO,EAAA,EAAA,IAAA,EAAIP,EAAA,CAAA,EAA+CQ,EAAA,EACnDR,EAAA,EAAA;iCAAA,EAAAO,EAAA,EAAA,IAAA,EAAIP,EAAA,EAAA,sBAA6CQ,EAAA,EACjDR,EAAA,GAAA;iCAAA,EAAAO,EAAA,GAAA,IAAA,EACIP,EAAA,GAAA;qCAAA,EAAAC,EAAA,GAAA,aAAA,EAAA,EACJD,EAAA,GAAA;iCAAA,EAAAQ,EAAA,EACAR,EAAA,GAAA;iCAAA,EAAAO,EAAA,GAAA,IAAA,EACIP,EAAA,EAAA,EACJQ,EAAA,EACAR,EAAA,GAAA;iCAAA,EAAAO,EAAA,GAAA,IAAA,EACIP,EAAA,GAAA;qCAAA,EAAAO,EAAA,GAAA,aAAA,EAAA,EAAYE,EAAA,UAAA,UAAA,CAAA,IAAAC,EAAAC,EAAAC,CAAA,EAAAC,UAAAT,EAAAU,EAAA,CAAA,EAAA,OAAAC,EAAWX,EAAAY,aAAAN,CAAA,CAAwB,CAAA,CAAA,EAA/CF,EAAA,EACJR,EAAA,GAAA;iCAAA,EAAAQ,EAAA,EACJR,EAAA,GAAA;6BAAA,EAAAQ,EAAA,EACJR,EAAA,GAAA;yBAAA,8CAbYE,EAAA,CAAA,EAAAe,EAAAC,EAAA,CAAA,EACAhB,EAAA,CAAA,EAAAe,EAAAP,EAAAS,eAAA,KAAA,KAAAT,EAAAS,cAAAC,eAAA,EACAlB,EAAA,CAAA,EAAAe,EAAAX,EAAA,GAAA,EAAAI,EAAAW,cAAA,CAAA,EAEYnB,EAAA,CAAA,EAAAC,EAAA,WAAAC,EAAAkB,QAAA,EAAqB,gBAAAZ,EAAAS,aAAA,EAGjCjB,EAAA,CAAA,EAAAqB,EAAA;sCAAAb,EAAAc,eAAA;iCAAA,EAGiDtB,EAAA,CAAA,EAAAC,EAAA,QAAA,2CAAA,sCAlDzEH,EAAA,EAAA;aAAA,EAAAO,EAAA,EAAA,MAAA,EAAA,EACIP,EAAA,EAAA;iBAAA,EAAAO,EAAA,EAAA,QAAA,EAAA,EACIP,EAAA,EAAA;qBAAA,EAAAO,EAAA,EAAA,QAAA,EAAA,EACIP,EAAA,EAAA;yBAAA,EAAAO,EAAA,EAAA,KAAA,EAAA,EAAYkB,EAAA,kBAAA,SAAAC,EAAA,CAAAf,EAAAgB,CAAA,EAAA,IAAAvB,EAAAU,EAAA,EAAAc,OAAAC,EAAAzB,EAAA0B,aAAAJ,CAAA,IAAAtB,EAAA0B,aAAAJ,GAAAX,EAAAW,CAAA,CAAA,CAAA,EAA4B,kBAAA,SAAAA,EAAA,CAAAf,EAAAgB,CAAA,EAAA,IAAAvB,EAAAU,EAAA,EAAAc,OAAAC,EAAAzB,EAAA2B,YAAAL,CAAA,IAAAtB,EAAA2B,YAAAL,GAAAX,EAAAW,CAAA,CAAA,CAAA,EAA6BjB,EAAA,aAAA,UAAA,CAAAE,EAAAgB,CAAA,EAAA,IAAAvB,EAAAU,EAAA,EAAA,OAAAC,EAAcX,EAAA4B,SAAA,CAAU,CAAA,CAAA,EACzFhC,EAAA,EAAA;6BAAA,EAAAO,EAAA,EAAA,KAAA,EAAA,EACIP,EAAA,GAAA;iCAAA,EAAAO,EAAA,GAAA,MAAA,EAAMP,EAAA,GAAA,GAAA,EAACQ,EAAA,EACXR,EAAA,GAAA;6BAAA,EAAAQ,EAAA,EACAR,EAAA,GAAA;6BAAA,EAAAO,EAAA,GAAA,KAAA,EAAA,EACIP,EAAA,GAAA;iCAAA,EAAAC,EAAA,GAAA,OAAA,EAAA,EACAD,EAAA,GAAA;iCAAA,EAAAC,EAAA,GAAA,UAAA,EAAA,EACJD,EAAA,GAAA;6BAAA,EAAAQ,EAAA,EACAR,EAAA,GAAA;6BAAA,EAAAO,EAAA,GAAA,IAAA,EACIP,EAAA,GAAA;iCAAA,EAAAC,EAAA,GAAA,OAAA,EAAA,EACJD,EAAA,GAAA;6BAAA,EAAAQ,EAAA,EACAR,EAAA,GAAA;6BAAA,EAAAO,EAAA,GAAA,IAAA,EACIP,EAAA,GAAA;iCAAA,EAAAC,EAAA,GAAA,OAAA,EAAA,EACJD,EAAA,GAAA;6BAAA,EAAAQ,EAAA,EACAR,EAAA,GAAA;6BAAA,EAAAO,EAAA,GAAA,KAAA,EAAA,EACIP,EAAA,GAAA;iCAAA,EAAAC,EAAA,GAAA,OAAA,EAAA,EACAD,EAAA,GAAA;iCAAA,EAAAiC,EAAA,GAAAC,GAAA,EAAA,CAAA,EAAuD,GAAAC,GAAA,EAAA,CAAA,EAc3D3B,EAAA,EACAR,EAAA,GAAA;6BAAA,EAAAC,EAAA,GAAA,IAAA,EACJD,EAAA,GAAA;yBAAA,EAAAQ,EAAA,EACJR,EAAA,GAAA;qBAAA,EAAAQ,EAAA,EACAR,EAAA,GAAA;qBAAA,EAAAO,EAAA,GAAA,OAAA,EACIP,EAAA,GAAA;yBAAA,EAAAoC,EAAA,GAAAC,GAAA,GAAA,EAAA,KAAA,KAAAC,CAAA,EAgBJ9B,EAAA,EACJR,EAAA,GAAA;iBAAA,EAAAQ,EAAA,EACJR,EAAA,GAAA;aAAA,EAAAQ,EAAA,EACJR,EAAA,GAAA;SAAA,oBAtD4BE,EAAA,CAAA,EAAAqC,EAAA,YAAAnC,EAAA0B,YAAA,EAA4B,YAAA1B,EAAA2B,WAAA,EAMvB7B,EAAA,EAAA,EAAAC,EAAA,OAAAC,EAAAoC,MAAA,EAUTtC,EAAA,EAAA,EAAAuC,EAAArC,EAAAkB,UAAAlB,EAAAkB,SAAAoB,OAAAtC,EAAAuC,aAAAC,KAAA,GAAA,EAAA,EAOA1C,EAAA,EAAAuC,EAAArC,EAAAkB,UAAAlB,EAAAkB,SAAAoB,OAAAtC,EAAAuC,aAAAE,SAAA,GAAA,EAAA,EAYR3C,EAAA,CAAA,EAAA4C,EAAA1C,EAAA2C,QAAAC,aAAA,0BAqBRhD,EAAA,EAAA;iBAAA,EAAAC,EAAA,EAAA,IAAA,EAAA,EACJD,EAAA,EAAA;aAAA,0BAEIA,EAAA,EAAA;iBAAA,EAAAC,EAAA,EAAA,IAAA,EAAA,EACJD,EAAA,EAAA;aAAA,6BALAA,EAAA,EAAA;aAAA,EAAAiC,EAAA,EAAAgB,GAAA,EAAA,CAAA,EAAyB,EAAAC,GAAA,EAAA,CAAA,kBAAzBhD,EAAA,EAAAuC,EAAArC,EAAA+C,kBAAA,EAAA,EAAA,EAGAjD,EAAA,EAAAuC,EAAArC,EAAA+C,kBAAA,GAAA,CAAA,GD/CZ,IAAaC,IAAiC,IAAA,CAAxC,MAAOA,UAAyCC,EAA2B,CACrEC,yBAA2BC,EAAOC,CAAwB,EAElElC,SAESjB,iBAAmBA,EACnBsC,aAAeA,EAExBc,aAAA,CACI,IAAMC,EAAgBH,EAAOI,EAAoC,EACjE,MAAMD,CAAa,CACvB,CAEA,IAAIP,mBAAiB,CACjB,MAAO,CAAC,EAAE,KAAKS,OAAOC,YAAYC,QAAU,KAAKF,MAAMC,WAAWC,OAAS,EAC/E,CAEmBC,gBAAc,CAC7B,KAAKhB,SAASC,eAAegB,QAASC,GAAc,CAChDA,EAAWzC,eAAiB,KAAK8B,yBAAyBY,kBAAkBD,EAAY,KAAK3C,QAAQ,CACzG,CAAC,CACL,CAEmB6C,eAAa,CAC5B,MAAO,CAAEC,WAAY,KAAK9C,SAAS+C,EAAG,CAC1C,4CAzBSjB,EAAgC,2BAAhCA,EAAgCkB,UAAA,CAAA,CAAA,+BAAA,CAAA,EAAAC,SAAA,CAAAC,CAAA,EAAAC,MAAA,GAAAC,KAAA,GAAAC,OAAA,CAAA,CAAA,EAAA,cAAA,EAAA,CAAA,eAAA,2DAAA,EAAA,aAAA,EAAA,CAAA,OAAA,SAAA,eAAA,QAAA,cAAA,OAAA,EAAA,YAAA,EAAA,OAAA,EAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,aAAA,aAAA,EAAA,CAAA,eAAA,gDAAA,MAAA,oBAAA,EAAA,oBAAA,EAAA,CAAA,OAAA,OAAA,OAAA,oBAAA,KAAA,oBAAA,EAAA,eAAA,OAAA,EAAA,gBAAA,UAAA,aAAA,EAAA,CAAA,EAAA,SAAA,0BAAA,KAAA,EAAA,CAAA,EAAA,aAAA,UAAA,SAAA,iBAAA,OAAA,UAAA,EAAA,CAAA,eAAA,qCAAA,EAAA,MAAA,EAAA,CAAA,EAAA,kBAAA,EAAA,CAAA,EAAA,QAAA,eAAA,EAAA,CAAA,EAAA,YAAA,EAAA,CAAA,UAAA,GAAA,EAAA,kBAAA,kBAAA,aAAA,YAAA,WAAA,EAAA,CAAA,YAAA,IAAA,EAAA,CAAA,YAAA,cAAA,EAAA,CAAA,eAAA,0BAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,eAAA,wDAAA,EAAA,CAAA,eAAA,gDAAA,EAAA,CAAA,EAAA,UAAA,eAAA,EAAA,CAAA,eAAA,6CAAA,EAAA,CAAA,EAAA,iBAAA,OAAA,EAAA,OAAA,YAAA,EAAA,CAAA,EAAA,WAAA,eAAA,EAAA,CAAA,EAAA,UAAA,OAAA,EAAA,CAAA,eAAA,uCAAA,EAAA,CAAA,eAAA,6CAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,ICnC7CtE,EAAA,EAAA,MAAA,EACIP,EAAA,EAAA;KAAA,EAAAO,EAAA,EAAA,MAAA,CAAA,EACIP,EAAA,EAAA;SAAA,EAAAC,EAAA,EAAA,KAAA,CAAA,EACAD,EAAA,EAAA;SAAA,EAAAO,EAAA,EAAA,SAAA,CAAA,EAAgFE,EAAA,QAAA,UAAA,CAAA,OAASqE,EAAAC,MAAA,CAAO,CAAA,EAAEvE,EAAA,EACtGR,EAAA,EAAA;KAAA,EAAAQ,EAAA,EACAR,EAAA,EAAA;KAAA,EAAAO,EAAA,EAAA,MAAA,CAAA,EACIP,EAAA,GAAA;SAAA,EAAAO,EAAA,GAAA,MAAA,CAAA,EACIP,EAAA,GAAA;aAAA,EAAAC,EAAA,GAAA,QAAA,CAAA,EACAD,EAAA,GAAA;aAAA,EAAAO,EAAA,GAAA,QAAA,CAAA,2BAKIkB,EAAA,gBAAA,SAAAC,EAAA,CAAAE,OAAAC,EAAAiD,EAAAjB,WAAAnC,CAAA,IAAAoD,EAAAjB,WAAAnC,GAAAA,CAAA,CAAA,EALJlB,EAAA,EAQAR,EAAA,GAAA;aAAA,EAAAiC,EAAA,GAAA+C,GAAA,EAAA,CAAA,EAGJxE,EAAA,EACAR,EAAA,GAAA;SAAA,EAAAiC,EAAA,GAAAgD,GAAA,GAAA,CAAA,EAAiE,GAAAC,GAAA,EAAA,CAAA,EAkEjE3E,EAAA,GAAA,MAAA,CAAA,EACIP,EAAA,GAAA;aAAA,EAAAO,EAAA,GAAA,iBAAA,CAAA,EAAwEkB,EAAA,aAAA,SAAAC,EAAA,CAAAE,OAAAC,EAAAiD,EAAAlB,MAAAuB,KAAAzD,CAAA,IAAAoD,EAAAlB,MAAAuB,KAAAzD,GAAAA,CAAA,CAAA,EAAkDjB,EAAA,aAAA,SAAAiB,EAAA,CAAA,OAAcoD,EAAAM,aAAA1D,CAAA,CAAoB,CAAA,EAA5JlB,EAAA,EACJR,EAAA,GAAA;SAAA,EAAAQ,EAAA,EACJR,EAAA,GAAA;KAAA,EAAAQ,EAAA,EACJR,EAAA,GAAA;CAAA,EAAAQ,EAAA,EACAR,EAAA,GAAA;CAAA,SA7EgBE,EAAA,EAAA,EAAAmF,EAAA,cAAA/E,EAAA,GAAA,EAAA,0BAAA,CAAA,EADAiC,EAAA,UAAAuC,EAAAjB,UAAA,EAGJ3D,EAAA,CAAA,EAAAuC,EAAAqC,EAAAQ,QAAA,GAAA,EAAA,EAIJpF,EAAA,CAAA,EAAAuC,EAAAqC,EAAA/B,QAAAC,eAAA8B,EAAA/B,QAAAC,cAAAc,OAAA,EAAA,GAAA,EAAA,EAmEoB5D,EAAA,CAAA,EAAAC,EAAA,UAAA,EAAA,EAAc,SAAA,EAAA,EAAgB,iBAAA2E,EAAAS,KAAA,EAA0BhD,EAAA,OAAAuC,EAAAlB,MAAAuB,IAAA,EAAsBhF,EAAA,WAAA2E,EAAAlB,MAAA4B,QAAA,kBDjElGC,GAAWC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACXC,EACAC,GACAC,GACAC,EACAC,EACAC,EACAC,GACAC,GACAC,GACAC,CAAoB,EAAAC,cAAA,CAAA,CAAA,SAGftD,CAAiC,GAAA,4BGzB1BuD,EAAA,EAAA;qBAAA,EAAAC,EAAA,EAAA,IAAA,CAAA,EACID,EAAA,EAAA;yBAAA,EAAAE,EAAA,EAAA,UAAA,CAAA,EACAF,EAAA,EAAA;yBAAA,EAAAE,EAAA,EAAA,UAAA,CAAA,EACAF,EAAA,EAAA;yBAAA,EAAAE,EAAA,EAAA,OAAA,CAAA,EACJF,EAAA,EAAA;qBAAA,EAAAG,EAAA,EACJH,EAAA,EAAA;iBAAA,mBALyCI,EAAA,EAAAC,EAAA,aAAAC,EAAAC,2BAAA,KAAA,CAAA,EACxBH,EAAA,CAAA,EAAAC,EAAA,OAAAC,EAAAE,MAAA,EACkBJ,EAAA,CAAA,EAAAC,EAAA,OAAAC,EAAAG,MAAA,sCAK/BT,EAAA,EAAA;qBAAA,EAAAC,EAAA,EAAA,IAAA,CAAA,EAAqCS,EAAA,QAAA,UAAA,CAAAC,EAAAC,CAAA,EAAA,IAAAN,EAAAO,EAAA,CAAA,EAAA,OAAAC,EAASR,EAAAS,gBAAA,CAAiB,CAAA,CAAA,EAC3Df,EAAA,EAAA;yBAAA,EAAAE,EAAA,EAAA,UAAA,CAAA,EACAF,EAAA,EAAA;yBAAA,EAAAE,EAAA,EAAA,UAAA,CAAA,EACAF,EAAA,EAAA;yBAAA,EAAAE,EAAA,EAAA,OAAA,EAAA,EACJF,EAAA,EAAA;qBAAA,EAAAG,EAAA,EACJH,EAAA,EAAA;iBAAA,qBAJiBI,EAAA,CAAA,EAAAC,EAAA,OAAAC,EAAAE,MAAA,EACkBJ,EAAA,CAAA,EAAAC,EAAA,OAAAC,EAAAG,MAAA,6BAjB3CT,EAAA,EAAA;SAAA,EAAAC,EAAA,EAAA,MAAA,CAAA,EACID,EAAA,EAAA;aAAA,EAAAC,EAAA,EAAA,MAAA,CAAA,EACID,EAAA,EAAA;iBAAA,EAAAC,EAAA,EAAA,IAAA,EACID,EAAA,EAAA;qBAAA,EAAAE,EAAA,EAAA,OAAA,CAAA,EACJF,EAAA,EAAA;iBAAA,EAAAG,EAAA,EACJH,EAAA,EAAA;aAAA,EAAAG,EAAA,EACAH,EAAA,GAAA;aAAA,EAAAC,EAAA,GAAA,MAAA,CAAA,EACID,EAAA,GAAA;iBAAA,EAAAgB,EAAA,GAAAC,GAAA,GAAA,CAAA,EAAuC,GAAAC,GAAA,GAAA,CAAA,EAc3Cf,EAAA,EACJH,EAAA,GAAA;SAAA,EAAAG,EAAA,EACJH,EAAA,GAAA;KAAA,kBAhBYI,EAAA,EAAA,EAAAe,EAAAb,EAAAc,SAAAC,OAAAC,gBAAA,GAAA,EAAA,EAOAlB,EAAA,EAAAe,EAAAb,EAAAc,SAAAC,OAAAC,gBAAA,GAAA,EAAA,6BAsBgBtB,EAAA,EAAA;iCAAA,EAAAE,EAAA,EAAA,UAAA,EAAA,0BAKJF,EAAA,EAAA;6BAAA,mBAJQI,EAAA,EAAAC,EAAA,OAAAC,EAAAiB,gBAAA,EAAyB,aAAAC,EAAA,EAAA,EAAA,qDAAA,CAAA,6BAM7BxB,EAAA,EAAA;iCAAA,EAAAE,EAAA,EAAA,UAAA,EAAA,0BAKJF,EAAA,EAAA;6BAAA,mBAJQI,EAAA,EAAAC,EAAA,OAAAC,EAAAiB,gBAAA,EAAyB,aAAAC,EAAA,EAAA,EAAA,yDAAA,CAAA,0BASjCxB,EAAA,EAAA;6BAAA,EAAAE,EAAA,EAAA,IAAA,EACJF,EAAA,EAAA;yBAAA,6BAkBYA,EAAA,EAAA;qCAAA,EAAAE,EAAA,EAAA,aAAA,EAAA,EACJF,EAAA,EAAA;iCAAA,mCADgBI,EAAA,EAAAC,EAAA,SAAAoB,EAAAC,WAAAC,QAAA,CAAA,CAAA,EAAoD,WAAArB,EAAAc,QAAA,0BAEhEpB,EAAA,EAAA;qCAAA,EAAAE,EAAA,EAAA,YAAA,EACJF,EAAA,EAAA;iCAAA,0BAQIA,EAAA,EAAA;qCAAA,EAAAE,EAAA,EAAA,OAAA,EAAA,EACJF,EAAA,EAAA;iCAAA,0BAEIA,EAAA,EAAA;qCAAA,EAAAE,EAAA,EAAA,OAAA,EAAA,EACJF,EAAA,EAAA;iCAAA,6BAEIA,EAAA,EAAA;qCAAA,EAAAE,EAAA,EAAA,UAAA,EAAA,0BAKJF,EAAA,EAAA;iCAAA,mBAJQI,EAAA,EAAAC,EAAA,OAAAC,EAAAsB,qBAAA,EAA8B,aAAAJ,EAAA,EAAA,EAAA,uDAAA,CAAA,sCAOtCxB,EAAA,EAAA;iCAAA,EAAAC,EAAA,EAAA,IAAA,EACID,EAAA,EAAA;qCAAA,EAAAC,EAAA,EAAA,SAAA,EAAA,EAAQS,EAAA,QAAA,UAAA,CAAAC,EAAAkB,CAAA,EAAA,IAAAC,EAAAjB,EAAA,EAAAkB,OAAAzB,EAAAO,EAAA,CAAA,EAAA,OAAAC,EAASR,EAAA0B,wBAAAF,CAAA,CAA0B,CAAA,CAAA,EACvC9B,EAAA,EAAA;yCAAA,EAAAE,EAAA,EAAA,UAAA,CAAA,EACAF,EAAA,CAAA,0BACJG,EAAA,EACJH,EAAA,EAAA;iCAAA,EAAAG,EAAA,EACJH,EAAA,EAAA;6BAAA,qBAJqBI,EAAA,CAAA,EAAAC,EAAA,OAAAC,EAAA2B,OAAA,EACT7B,EAAA,EAAA8B,EAAA;0CAAAV,EAAA,EAAA,EAAA,sBAAA,EAAA;qCAAA,6BAzChBxB,EAAA,EAAA;yBAAA,EAAAC,EAAA,EAAA,IAAA,EACID,EAAA,EAAA;6BAAA,EAAAC,EAAA,EAAA,IAAA,EACID,EAAA,EAAA;iCAAA,EAAAC,EAAA,EAAA,IAAA,EAAA,EACID,EAAA,CAAA,EACJG,EAAA,EACJH,EAAA,EAAA;6BAAA,EAAAG,EAAA,EACAH,EAAA,EAAA;6BAAA,EAAAC,EAAA,EAAA,IAAA,EACID,EAAA,GAAA;iCAAA,EAAAC,EAAA,GAAA,IAAA,EAAA,EACID,EAAA,EAAA,2BACJG,EAAA,EACJH,EAAA,GAAA;6BAAA,EAAAG,EAAA,EACAH,EAAA,GAAA;6BAAA,EAAAC,EAAA,GAAA,IAAA,EACID,EAAA,GAAA;iCAAA,EAAAgB,EAAA,GAAAmB,GAAA,EAAA,CAAA,EAAkI,GAAAC,GAAA,EAAA,CAAA,EAKtIjC,EAAA,EACAH,EAAA,GAAA;6BAAA,EAAAC,EAAA,GAAA,IAAA,EACID,EAAA,EAAA,EACJG,EAAA,EACAH,EAAA,GAAA;6BAAA,EAAAC,EAAA,GAAA,IAAA,EAAID,EAAA,EAAA,2BAAqIG,EAAA,EACzIH,EAAA,GAAA;6BAAA,EAAAC,EAAA,GAAA,IAAA,EACID,EAAA,GAAA;iCAAA,EAAAgB,EAAA,GAAAqB,GAAA,EAAA,CAAA,EAAmC,GAAAC,GAAA,EAAA,CAAA,EAGC,GAAAC,GAAA,EAAA,CAAA,EAUxCpC,EAAA,EACAH,EAAA,GAAA;6BAAA,EAAAgB,EAAA,GAAAwB,GAAA,GAAA,CAAA,EAQJrC,EAAA,EACJH,EAAA,GAAA;qBAAA,4CA5CeI,EAAA,CAAA,EAAAC,EAAA,aAAAC,EAAAC,2BAAAkB,EAAAgB,EAAA,CAAA,EACCrC,EAAA,EAAA8B,EAAA;sCAAAT,EAAAgB,GAAA;iCAAA,EAIDrC,EAAA,CAAA,EAAAC,EAAA,aAAAC,EAAAC,2BAAAkB,EAAAgB,EAAA,CAAA,EACCrC,EAAA,EAAAsC,EAAA;sCAAAlB,EAAA,GAAA,GAAA,gDAAA,EAAA,IAAAM,EAAA,EAAA;iCAAA,EAIJ1B,EAAA,CAAA,EAAAe,EAAAM,EAAAC,YAAAD,EAAAC,WAAAC,SAAAF,EAAAC,WAAAC,QAAAgB,OAAA,EAAA,GAAA,EAAA,EAOAvC,EAAA,CAAA,EAAA8B,EAAA;kCAAAT,EAAAC,WAAAkB,eAAA;6BAAA,EAEAxC,EAAA,CAAA,EAAAyC,EAAArB,EAAA,GAAA,GAAA,iCAAAC,EAAAqB,gBAAA,kBAAA,iBAAA,CAAA,EAEA1C,EAAA,CAAA,EAAAe,EAAAb,EAAAyC,yBAAAjB,CAAA,EAAA,GAAA,EAAA,EAGA1B,EAAA,EAAAe,EAAAb,EAAAyC,yBAAAjB,CAAA,EAAA,GAAA,EAAA,EAGA1B,EAAA,EAAAe,EAAAb,EAAAyC,yBAAAjB,CAAA,EAAA,GAAA,EAAA,EAQJ1B,EAAA,CAAA,EAAAe,EAAAb,EAAAc,SAAAC,OAAAC,gBAAA,GAAA,EAAA,6BArEhBtB,EAAA,EAAA;aAAA,EAAAC,EAAA,EAAA,QAAA,EAAA,EACID,EAAA,EAAA;iBAAA,EAAAC,EAAA,EAAA,OAAA,EACID,EAAA,EAAA;qBAAA,EAAAC,EAAA,EAAA,IAAA,EACID,EAAA,EAAA;yBAAA,EAAAC,EAAA,EAAA,IAAA,EAAIC,EAAA,EAAA,OAAA,EAAA,EAA4CC,EAAA,EAChDH,EAAA,EAAA;yBAAA,EAAAC,EAAA,GAAA,IAAA,EAAIC,EAAA,GAAA,OAAA,EAAA,EAAsDC,EAAA,EAC1DH,EAAA,GAAA;yBAAA,EAAAC,EAAA,GAAA,IAAA,EAAIC,EAAA,GAAA,OAAA,EAAA,EAA2EC,EAAA,EAC/EH,EAAA,GAAA;yBAAA,EAAAC,EAAA,GAAA,IAAA,EACID,EAAA,GAAA;6BAAA,EAAAE,EAAA,GAAA,OAAA,EAAA,EACAF,EAAA,GAAA;6BAAA,EAAAgB,EAAA,GAAAgC,GAAA,EAAA,CAAA,EAA2C,GAAAC,GAAA,EAAA,CAAA,EAc/C9C,EAAA,EACAH,EAAA,GAAA;yBAAA,EAAAC,EAAA,GAAA,IAAA,EAAIC,EAAA,GAAA,OAAA,EAAA,EAA4EC,EAAA,EAChFH,EAAA,GAAA;yBAAA,EAAAC,EAAA,GAAA,IAAA,EAAIC,EAAA,GAAA,OAAA,EAAA,EAAkFC,EAAA,EACtFH,EAAA,GAAA;yBAAA,EAAAgB,EAAA,GAAAkC,GAAA,EAAA,CAAA,EAGJ/C,EAAA,EACJH,EAAA,GAAA;iBAAA,EAAAG,EAAA,EACAH,EAAA,GAAA;iBAAA,EAAAC,EAAA,GAAA,QAAA,EAAA,EACID,EAAA,GAAA;qBAAA,EAAAmD,EAAA,GAAAC,GAAA,GAAA,GAAA,KAAA,KAAAC,CAAA,EAgDJlD,EAAA,EACJH,EAAA,GAAA;aAAA,EAAAG,EAAA,EACJH,EAAA,GAAA;SAAA,kBAzEoBI,EAAA,EAAA,EAAAe,EAAAb,EAAAc,SAAAkC,OAAAhD,EAAAiD,aAAAC,KAAA,GAAA,EAAA,EAOApD,EAAA,EAAAe,EAAAb,EAAAc,SAAAkC,OAAAhD,EAAAiD,aAAAE,SAAA,GAAA,EAAA,EAUJrD,EAAA,CAAA,EAAAe,EAAAb,EAAAc,SAAAC,OAAAC,gBAAA,GAAA,EAAA,EAMJlB,EAAA,CAAA,EAAAsD,EAAApD,EAAAc,SAAAuC,kBAAA,GDvCpB,IAAaC,IAA2B,IAAA,CAAlC,MAAOA,CAA2B,CAC5BC,aAAeC,EAAOC,EAAY,EAClCC,yBAA2BF,EAAOG,CAAwB,EAC1DC,eAAiBJ,EAAOK,CAAc,EACtCC,aAAeN,EAAOO,EAAQ,EAC9BC,eAAiBR,EAAOS,EAAc,EAE9CnD,SACSmC,aAAeiB,EACxBzB,yBAGAvC,OAASA,GACTyB,QAAUA,GACVxB,OAASA,GACTc,iBAAmBA,EACnBK,sBAAwBA,GAKxB6C,UAAQ,CAEJ,KAAKP,eAAeQ,KAAKC,UAAU,CAAC,CAAEvD,SAAAA,CAAQ,IAAM,CAChDA,EAASC,OAASuD,GAAsBxD,CAAQ,EAChD,KAAKkD,eAAeO,yBAAyBzD,EAASC,MAAM,EAC5D,KAAKD,SAAWA,EAEhB,KAAK2B,yBACD,KAAK3B,SAASuC,oBAAoBmB,IAAKC,GAAsBA,EAAkBrD,YAAYC,SAASqD,KAAMC,GAAWA,EAAOC,aAAa,GAAK,EAAK,GAAK,CAAA,CAChK,CAAC,EACD,KAAK9D,UAAUuC,oBAAoBwB,QAASJ,GAAqB,CACzDA,EAAkBrD,aAClBqD,EAAkBrD,WAAWkB,eAAiB,KAAKoB,yBAAyBoB,kBAAkBL,EAAkBrD,WAAY,KAAKN,QAAQ,EAEjJ,CAAC,CACL,CAKAiE,aAAW,CACH,KAAKjB,cAAckB,cAAa,GAChC,KAAKlB,aAAamB,WAAU,CAEpC,CAMAvD,wBAAwBwD,EAAa,CACjC,IAAMC,EAAe,KAAKrE,SAASuC,mBAAoB6B,CAAK,EAAE/C,GAC9D,KAAKuB,yBAAyB0B,OAAOD,CAAY,EAAEd,UAAU,CACzDgB,KAAMA,IAAK,CACP,KAAKvE,SAASuC,mBAAoBiC,OAAOJ,EAAO,CAAC,EACjD,KAAKzC,yBAAyB6C,OAAOJ,EAAO,CAAC,CACjD,EACAK,MAAQA,GAA4B,CAChC,KAAKhC,aAAagC,MAAMA,EAAMC,OAAO,CACzC,EACH,CACL,CAMAvF,2BAA2BwF,EAAmC,CAC1D,OAAK,KAAK3E,SAAS4E,cAGR,CACH,qBACA,KAAK5E,SAASC,OAAQoB,GACtB,QACA,KAAKrB,SAAS4E,cAAeC,KAAMxD,GACnC,kBACA,KAAKrB,SAAS4E,cAAevD,GAC7B,KAAKrB,SAASkC,KAAO,aACrB,KAAKlC,SAASqB,GACd,sBACAsD,CAAmB,EAZhB,CAAC,qBAAsB,KAAK3E,SAASC,OAAQoB,GAAI,KAAKrB,SAASkC,KAAO,aAAc,KAAKlC,SAASqB,GAAI,sBAAuBsD,CAAmB,CAe/J,CAMAhF,iBAAe,CACX,IAAMmF,EAAkC,KAAK9B,aAAa+B,KAAKC,GAAkC,CAC7FC,KAAM,KACNC,SAAU,SACb,EACDJ,EAAgCK,kBAAkBnF,SAAW,KAAKA,SAClE8E,EAAgCjB,OAAOuB,KAAMC,GAAkC,CAC3E,KAAKzC,yBAAyB0C,OAAOD,EAAmBhE,GAAK,KAAKrB,SAASqB,EAAG,EAAEkC,UAAU,CACtFgB,KAAMA,IAAK,CACP,KAAK9B,aAAa8C,QAAQ,+CAA+C,EACzEC,SAASC,OAAM,CACnB,EACAhB,MAAQA,GAA6BiB,GAAQ,KAAKjD,aAAcgC,CAAK,EACxE,CACL,CAAC,CACL,4CA1GSjC,EAA2B,2BAA3BA,EAA2BmD,UAAA,CAAA,CAAA,cAAA,CAAA,EAAAC,MAAA,GAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,kBAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,SAAA,QAAA,EAAA,CAAA,eAAA,iDAAA,EAAA,CAAA,EAAA,SAAA,cAAA,SAAA,2BAAA,OAAA,MAAA,EAAA,CAAA,EAAA,MAAA,cAAA,OAAA,OAAA,EAAA,YAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,eAAA,sDAAA,KAAA,4BAAA,EAAA,SAAA,aAAA,EAAA,CAAA,EAAA,MAAA,cAAA,OAAA,OAAA,EAAA,OAAA,EAAA,CAAA,eAAA,sDAAA,EAAA,SAAA,aAAA,EAAA,CAAA,EAAA,QAAA,eAAA,EAAA,CAAA,eAAA,iBAAA,EAAA,CAAA,eAAA,2BAAA,EAAA,CAAA,eAAA,gDAAA,EAAA,CAAA,eAAA,6CAAA,EAAA,CAAA,eAAA,iDAAA,EAAA,CAAA,eAAA,uDAAA,EAAA,CAAA,EAAA,kBAAA,EAAA,CAAA,EAAA,iBAAA,OAAA,EAAA,OAAA,YAAA,EAAA,CAAA,EAAA,WAAA,EAAA,YAAA,EAAA,CAAA,EAAA,SAAA,UAAA,EAAA,CAAA,eAAA,oBAAA,EAAA,CAAA,eAAA,oBAAA,EAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,OAAA,YAAA,EAAA,CAAA,EAAA,MAAA,aAAA,WAAA,EAAA,OAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,ICrBxCnH,EAAA,EAAA,KAAA,EACID,EAAA,EAAA;KAAA,EAAAgB,EAAA,EAAAsG,GAAA,GAAA,CAAA,EAyBApH,EAAA,EAAA,IAAA,EACAF,EAAA,EAAA;KAAA,EAAAC,EAAA,EAAA,MAAA,CAAA,EACID,EAAA,EAAA;SAAA,EAAAgB,EAAA,EAAAuG,GAAA,GAAA,CAAA,EAmFJpH,EAAA,EACJH,EAAA,EAAA;CAAA,EAAAG,EAAA,EACAH,EAAA,EAAA;CAAA,SAhHII,EAAA,CAAA,EAAAe,EAAAkG,EAAAjG,UAAAiG,EAAAjG,SAAAqB,IAAA4E,EAAAjG,SAAAC,QAAAgG,EAAAjG,SAAAC,OAAAoB,GAAA,EAAA,EAAA,EA2BIrC,EAAA,CAAA,EAAAe,EAAAkG,EAAAjG,UAAAiG,EAAAjG,SAAAqB,IAAA4E,EAAAjG,SAAAC,QAAAgG,EAAAjG,SAAAC,OAAAoB,GAAA,EAAA,EAAA,kBDTM+E,EAAoBC,EAAYC,EAAiBC,EAAYC,EAAiBC,CAAoB,EAAAC,cAAA,CAAA,CAAA,SAEnGlE,CAA2B,GAAA",
  "names": ["ExampleSubmissionImportPagingService", "PagingService", "http", "inject", "HttpClient", "RESOURCE_URL", "constructor", "search", "pageable", "options", "params", "createHttpParams", "get", "exerciseId", "observe", "pipe", "map", "resp", "body", "factory", "\u0275fac", "providedIn", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275advance", "\u0275\u0275property", "ctx_r1", "faQuestionCircle", "\u0275\u0275pipeBind1", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275listener", "submission_r4", "\u0275\u0275restoreView", "_r3", "$implicit", "\u0275\u0275nextContext", "\u0275\u0275resetView", "selectImport", "\u0275\u0275textInterpolate", "\u0275$index_106_r5", "participation", "participantName", "submissionDate", "exercise", "\u0275\u0275textInterpolate1", "submissionSize", "\u0275\u0275twoWayListener", "$event", "_r1", "i0", "\u0275\u0275twoWayBindingSet", "sortedColumn", "listSorting", "sortRows", "\u0275\u0275template", "ExampleSubmissionImportComponent_Conditional_20_Conditional_36_Template", "ExampleSubmissionImportComponent_Conditional_20_Conditional_37_Template", "\u0275\u0275repeaterCreate", "ExampleSubmissionImportComponent_Conditional_20_For_46_Template", "\u0275\u0275repeaterTrackByIdentity", "\u0275\u0275twoWayProperty", "faSort", "\u0275\u0275conditional", "type", "ExerciseType", "TEXT", "MODELING", "\u0275\u0275repeater", "content", "resultsOnPage", "ExampleSubmissionImportComponent_Conditional_21_Conditional_1_Template", "ExampleSubmissionImportComponent_Conditional_21_Conditional_2_Template", "searchTermEntered", "ExampleSubmissionImportComponent", "ImportComponent", "exampleSubmissionService", "inject", "ExampleSubmissionService", "constructor", "pagingService", "ExampleSubmissionImportPagingService", "state", "searchTerm", "length", "onSearchResult", "forEach", "submission", "getSubmissionSize", "createOptions", "exerciseId", "id", "selectors", "features", "\u0275\u0275InheritDefinitionFeature", "decls", "vars", "consts", "template", "rf", "ctx", "clear", "ExampleSubmissionImportComponent_Conditional_18_Template", "ExampleSubmissionImportComponent_Conditional_20_Template", "ExampleSubmissionImportComponent_Conditional_21_Template", "page", "onPageChange", "\u0275\u0275propertyInterpolate", "loading", "total", "pageSize", "FormsModule", "\u0275NgNoValidate", "DefaultValueAccessor", "NgControlStatus", "NgControlStatusGroup", "NgModel", "NgForm", "TranslateDirective", "SortDirective", "SortByDirective", "FaIconComponent", "NgbTooltip", "ResultComponent", "ButtonComponent", "NgbPagination", "ArtemisDatePipe", "ArtemisTranslatePipe", "encapsulation", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "ctx_r0", "getLinkToExampleSubmission", "faPlus", "faFont", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r2", "\u0275\u0275nextContext", "\u0275\u0275resetView", "openImportModal", "\u0275\u0275template", "ExampleSubmissionsComponent_Conditional_2_Conditional_13_Template", "ExampleSubmissionsComponent_Conditional_2_Conditional_14_Template", "\u0275\u0275conditional", "exercise", "course", "isAtLeastEditor", "faQuestionCircle", "\u0275\u0275pipeBind1", "exampleSubmission_r3", "submission", "results", "faExclamationTriangle", "_r4", "\u0275$index_126_r5", "$index", "deleteExampleSubmission", "faTimes", "\u0275\u0275textInterpolate1", "ExampleSubmissionsComponent_Conditional_7_For_35_Conditional_18_Template", "ExampleSubmissionsComponent_Conditional_7_For_35_Conditional_19_Template", "ExampleSubmissionsComponent_Conditional_7_For_35_Conditional_30_Template", "ExampleSubmissionsComponent_Conditional_7_For_35_Conditional_31_Template", "ExampleSubmissionsComponent_Conditional_7_For_35_Conditional_32_Template", "ExampleSubmissionsComponent_Conditional_7_For_35_Conditional_34_Template", "id", "\u0275\u0275textInterpolate2", "length", "submissionSize", "\u0275\u0275textInterpolate", "usedForTutorial", "createdExampleAssessment", "ExampleSubmissionsComponent_Conditional_7_Conditional_20_Template", "ExampleSubmissionsComponent_Conditional_7_Conditional_21_Template", "ExampleSubmissionsComponent_Conditional_7_Conditional_29_Template", "\u0275\u0275repeaterCreate", "ExampleSubmissionsComponent_Conditional_7_For_35_Template", "\u0275\u0275repeaterTrackByIdentity", "type", "exerciseType", "TEXT", "MODELING", "\u0275\u0275repeater", "exampleSubmissions", "ExampleSubmissionsComponent", "alertService", "inject", "AlertService", "exampleSubmissionService", "ExampleSubmissionService", "activatedRoute", "ActivatedRoute", "modalService", "NgbModal", "accountService", "AccountService", "ExerciseType", "ngOnInit", "data", "subscribe", "getCourseFromExercise", "setAccessRightsForCourse", "map", "exampleSubmission", "some", "result", "exampleResult", "forEach", "getSubmissionSize", "ngOnDestroy", "hasOpenModals", "dismissAll", "index", "submissionId", "delete", "next", "splice", "error", "message", "exampleSubmissionId", "exerciseGroup", "exam", "exampleSubmissionImportModalRef", "open", "ExampleSubmissionImportComponent", "size", "backdrop", "componentInstance", "then", "selectedSubmission", "import", "success", "location", "reload", "onError", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "ExampleSubmissionsComponent_Conditional_2_Template", "ExampleSubmissionsComponent_Conditional_7_Template", "TranslateDirective", "RouterLink", "FaIconComponent", "NgbTooltip", "ResultComponent", "ArtemisTranslatePipe", "encapsulation"]
}
