{
  "version": 3,
  "sources": ["src/main/webapp/app/exam/manage/suspicious-behavior/suspicious-sessions.service.ts", "src/main/webapp/app/course/plagiarism-cases/shared/plagiarism-results.service.ts", "src/main/webapp/app/exam/manage/suspicious-behavior/plagiarism-cases-overview/plagiarism-cases-overview.component.ts", "src/main/webapp/app/exam/manage/suspicious-behavior/plagiarism-cases-overview/plagiarism-cases-overview.component.html", "src/main/webapp/app/exam/manage/suspicious-behavior/suspicious-behavior.component.ts", "src/main/webapp/app/exam/manage/suspicious-behavior/suspicious-behavior.component.html"],
  "sourcesContent": ["import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable, inject } from '@angular/core';\r\nimport { SuspiciousExamSessions, SuspiciousSessionsAnalysisOptions } from 'app/entities/exam/exam-session.model';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class SuspiciousSessionsService {\r\n    private http = inject(HttpClient);\r\n\r\n    getSuspiciousSessions(courseId: number, examId: number, options: SuspiciousSessionsAnalysisOptions): Observable<SuspiciousExamSessions[]> {\r\n        let params = new HttpParams()\r\n            .set('differentStudentExamsSameIPAddress', options.sameIpAddressDifferentStudentExams.toString())\r\n            .set('differentStudentExamsSameBrowserFingerprint', options.sameBrowserFingerprintDifferentStudentExams.toString())\r\n            .set('sameStudentExamDifferentIPAddresses', options.differentIpAddressesSameStudentExam.toString())\r\n            .set('sameStudentExamDifferentBrowserFingerprints', options.differentIpAddressesSameStudentExam.toString())\r\n            .set('ipOutsideOfRange', options.ipAddressOutsideOfRange.toString());\r\n\r\n        // If subnet is provided, add it to the params\r\n        if (options.ipSubnet) {\r\n            params = params.set('ipSubnet', options.ipSubnet);\r\n        }\r\n        return this.http.get<SuspiciousExamSessions[]>(`api/exam/courses/${courseId}/exams/${examId}/suspicious-sessions`, { params });\r\n    }\r\n}\r\n", "import { Injectable, inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class PlagiarismResultsService {\r\n    private http = inject(HttpClient);\r\n\r\n    private resourceUrlExercises = 'api/plagiarism/exercises';\r\n\r\n    getNumberOfPlagiarismResultsForExercise(exerciseId: number): Observable<number> {\r\n        return this.http.get<number>(`${this.resourceUrlExercises}/${exerciseId}/potential-plagiarism-count`);\r\n    }\r\n}\r\n", "import { Component, inject, input } from '@angular/core';\r\nimport { Exercise, getExerciseUrlSegment } from 'app/entities/exercise.model';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\n\r\n@Component({\r\n    selector: 'jhi-plagiarism-cases-overview',\r\n    templateUrl: './plagiarism-cases-overview.component.html',\r\n    imports: [TranslateDirective],\r\n})\r\nexport class PlagiarismCasesOverviewComponent {\r\n    private router = inject(Router);\r\n\r\n    exercises = input.required<Exercise[]>();\r\n    plagiarismCasesPerExercise = input.required<Map<Exercise, number>>();\r\n    plagiarismResultsPerExercise = input.required<Map<Exercise, number>>();\r\n    anyPlagiarismCases = input(false);\r\n    courseId = input.required<number>();\r\n    examId = input.required<number>();\r\n\r\n    goToPlagiarismDetection(exercise: Exercise) {\r\n        const exerciseGroupId = exercise.exerciseGroup?.id;\r\n        const exerciseType = exercise.type;\r\n        this.router.navigate([\r\n            '/course-management',\r\n            this.courseId(),\r\n            'exams',\r\n            this.examId(),\r\n            'exercise-groups',\r\n            exerciseGroupId,\r\n            getExerciseUrlSegment(exerciseType),\r\n            exercise.id,\r\n            'plagiarism',\r\n        ]);\r\n    }\r\n    goToPlagiarismCases() {\r\n        this.router.navigate(['/course-management', this.courseId(), 'exams', this.examId(), 'plagiarism-cases']);\r\n    }\r\n}\r\n", "<h5 jhiTranslate=\"artemisApp.examManagement.plagiarismCasesOverview.title\"></h5>\r\n<table class=\"table\">\r\n    <thead>\r\n        <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\" jhiTranslate=\"artemisApp.examManagement.plagiarismCasesOverview.exerciseName\"></th>\r\n            <th scope=\"col\" jhiTranslate=\"artemisApp.examManagement.plagiarismCasesOverview.numberOfResults\"></th>\r\n            <th scope=\"col\" jhiTranslate=\"artemisApp.examManagement.plagiarismCasesOverview.numberOfCases\"></th>\r\n            <th scope=\"col\" jhiTranslate=\"artemisApp.examManagement.plagiarismCasesOverview.actions\"></th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        @for (exercise of exercises(); track exercise; let i = $index) {\r\n            <tr>\r\n                <th scope=\"row\">{{ i + 1 }}</th>\r\n                <td>{{ exercise.title }}</td>\r\n                <td>{{ plagiarismResultsPerExercise().get(exercise) }}</td>\r\n                <td>{{ plagiarismCasesPerExercise().get(exercise) }}</td>\r\n                <td>\r\n                    <button\r\n                        id=\"view-plagiarism-results-btn-{{ i }}\"\r\n                        class=\"btn btn-primary\"\r\n                        (click)=\"goToPlagiarismDetection(exercise)\"\r\n                        jhiTranslate=\"artemisApp.examManagement.plagiarismCasesOverview.viewResultsOrRunDetection\"\r\n                    ></button>\r\n                </td>\r\n            </tr>\r\n        }\r\n    </tbody>\r\n</table>\r\n@if (anyPlagiarismCases()) {\r\n    <button\r\n        class=\"btn btn-primary\"\r\n        id=\"view-plagiarism-cases-btn\"\r\n        (click)=\"goToPlagiarismCases()\"\r\n        jhiTranslate=\"artemisApp.examManagement.plagiarismCasesOverview.viewCases\"\r\n    ></button>\r\n}\r\n", "import { Component, OnInit, inject } from '@angular/core';\r\nimport { Exercise } from 'app/entities/exercise.model';\r\nimport { SuspiciousExamSessions, SuspiciousSessionsAnalysisOptions } from 'app/entities/exam/exam-session.model';\r\nimport { SuspiciousSessionsService } from 'app/exam/manage/suspicious-behavior/suspicious-sessions.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { PlagiarismCasesService } from 'app/course/plagiarism-cases/shared/plagiarism-cases.service';\r\nimport { ExamManagementService } from 'app/exam/manage/exam-management.service';\r\nimport { PlagiarismResultsService } from 'app/course/plagiarism-cases/shared/plagiarism-results.service';\r\nimport { DocumentationButtonComponent, DocumentationType } from 'app/shared/components/documentation-button/documentation-button.component';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { PlagiarismCasesOverviewComponent } from 'app/exam/manage/suspicious-behavior/plagiarism-cases-overview/plagiarism-cases-overview.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ButtonComponent } from 'app/shared/components/button.component';\r\nimport { HelpIconComponent } from 'app/shared/components/help-icon.component';\r\n\r\n@Component({\r\n    selector: 'jhi-suspicious-behavior',\r\n    templateUrl: './suspicious-behavior.component.html',\r\n    imports: [FormsModule, TranslateDirective, ArtemisTranslatePipe, PlagiarismCasesOverviewComponent, ButtonComponent, HelpIconComponent, DocumentationButtonComponent],\r\n})\r\nexport class SuspiciousBehaviorComponent implements OnInit {\r\n    private suspiciousSessionsService = inject(SuspiciousSessionsService);\r\n    private activatedRoute = inject(ActivatedRoute);\r\n    private plagiarismCasesService = inject(PlagiarismCasesService);\r\n    private examService = inject(ExamManagementService);\r\n    private plagiarismResultsService = inject(PlagiarismResultsService);\r\n    private router = inject(Router);\r\n\r\n    exercises: Exercise[] = [];\r\n    plagiarismCasesPerExercise: Map<Exercise, number> = new Map<Exercise, number>();\r\n    plagiarismResultsPerExercise: Map<Exercise, number> = new Map<Exercise, number>();\r\n    anyPlagiarismCases = false;\r\n    suspiciousSessions: SuspiciousExamSessions[] = [];\r\n    examId: number;\r\n    courseId: number;\r\n    checkboxCriterionDifferentStudentExamsSameIPAddressChecked = false;\r\n    checkboxCriterionDifferentStudentExamsSameBrowserFingerprintChecked = false;\r\n    checkboxCriterionSameStudentExamDifferentIPAddressesChecked = false;\r\n    checkboxCriterionSameStudentExamDifferentBrowserFingerprintsChecked = false;\r\n    checkboxCriterionIPOutsideOfASpecificRangeChecked = false;\r\n    ipSubnet?: string;\r\n    analyzing = false;\r\n    analyzed = false;\r\n    /** Regex to either match an IPv4 or IPv6 subnet\r\n     * Borrowed from https://www.regextester.com/93988 and https://www.regextester.com/93987\r\n     * */\r\n    readonly ipSubnetRegexPattern: RegExp = new RegExp(\r\n        '(^([0-9]{1,3}.){3}[0-9]{1,3}(/([0-9]|[1-2][0-9]|3[0-2]))?$)|(^s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:)))(%.+)?s*(\\\\/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))?$)',\r\n    );\r\n\r\n    readonly documentationType: DocumentationType = 'SuspiciousBehavior';\r\n\r\n    ngOnInit(): void {\r\n        this.examId = Number(this.activatedRoute.snapshot.paramMap.get('examId'));\r\n        this.courseId = Number(this.activatedRoute.snapshot.paramMap.get('courseId'));\r\n        this.examService.getExercisesWithPotentialPlagiarismForExam(this.courseId, this.examId).subscribe((res) => {\r\n            this.exercises = res;\r\n            this.retrievePlagiarismCases();\r\n        });\r\n    }\r\n\r\n    private retrievePlagiarismCases = () => {\r\n        this.exercises.forEach((exercise) => {\r\n            this.plagiarismCasesService.getNumberOfPlagiarismCasesForExercise(exercise).subscribe((res) => {\r\n                this.plagiarismCasesPerExercise.computeIfAbsent(exercise, () => res);\r\n                if (res > 0) this.anyPlagiarismCases = true;\r\n            });\r\n            this.plagiarismResultsService.getNumberOfPlagiarismResultsForExercise(exercise.id!).subscribe((res) => {\r\n                this.plagiarismResultsPerExercise.computeIfAbsent(exercise, () => res);\r\n            });\r\n        });\r\n    };\r\n\r\n    get analyzeButtonEnabled(): boolean {\r\n        return (\r\n            (this.checkboxCriterionDifferentStudentExamsSameIPAddressChecked ||\r\n                this.checkboxCriterionDifferentStudentExamsSameBrowserFingerprintChecked ||\r\n                this.checkboxCriterionSameStudentExamDifferentIPAddressesChecked ||\r\n                this.checkboxCriterionSameStudentExamDifferentBrowserFingerprintsChecked ||\r\n                this.checkboxCriterionIPOutsideOfASpecificRangeChecked) &&\r\n            (!this.checkboxCriterionIPOutsideOfASpecificRangeChecked || (this.checkboxCriterionIPOutsideOfASpecificRangeChecked && this.ipSubnetRegexPattern.test(this.ipSubnet!)))\r\n        );\r\n    }\r\n\r\n    goToSuspiciousSessions() {\r\n        this.router.navigate(['/course-management', this.courseId, 'exams', this.examId, 'suspicious-behavior', 'suspicious-sessions'], {\r\n            state: { suspiciousSessions: this.suspiciousSessions, ipSubnet: this.ipSubnet },\r\n        });\r\n    }\r\n\r\n    analyzeSessions() {\r\n        const options = new SuspiciousSessionsAnalysisOptions(\r\n            this.checkboxCriterionDifferentStudentExamsSameIPAddressChecked,\r\n            this.checkboxCriterionDifferentStudentExamsSameBrowserFingerprintChecked,\r\n            this.checkboxCriterionSameStudentExamDifferentIPAddressesChecked,\r\n            this.checkboxCriterionSameStudentExamDifferentBrowserFingerprintsChecked,\r\n            this.checkboxCriterionIPOutsideOfASpecificRangeChecked,\r\n            this.ipSubnet,\r\n        );\r\n        this.analyzing = true;\r\n        this.suspiciousSessionsService.getSuspiciousSessions(this.courseId, this.examId, options).subscribe({\r\n            next: (suspiciousSessions) => {\r\n                this.suspiciousSessions = suspiciousSessions;\r\n                this.analyzing = false;\r\n                this.analyzed = true;\r\n            },\r\n            error: () => {\r\n                this.analyzing = false;\r\n                this.analyzed = true;\r\n            },\r\n        });\r\n    }\r\n}\r\n", "<h5>\r\n    {{ 'artemisApp.examManagement.suspiciousBehavior.title' | artemisTranslate }}\r\n    <jhi-documentation-button [type]=\"documentationType\" />\r\n</h5>\r\n<p jhiTranslate=\"artemisApp.examManagement.suspiciousBehavior.suspiciousSessionDescription\"></p>\r\n<div>\r\n    <input class=\"form-check-input\" type=\"checkbox\" id=\"different-student-exams-same-ip\" [(ngModel)]=\"checkboxCriterionDifferentStudentExamsSameIPAddressChecked\" />\r\n    <label for=\"different-student-exams-same-ip\" jhiTranslate=\"artemisApp.examManagement.suspiciousBehavior.suspiciousSessionCriterionIpAddress\"></label>\r\n</div>\r\n<div>\r\n    <input\r\n        class=\"form-check-input\"\r\n        type=\"checkbox\"\r\n        id=\"different-student-exams-same-fingerprints\"\r\n        [(ngModel)]=\"checkboxCriterionDifferentStudentExamsSameBrowserFingerprintChecked\"\r\n    />\r\n    <label for=\"different-student-exams-same-fingerprints\" jhiTranslate=\"artemisApp.examManagement.suspiciousBehavior.suspiciousSessionCriterionBrowserFingerprint\"></label>\r\n</div>\r\n<div>\r\n    <input class=\"form-check-input\" type=\"checkbox\" id=\"same-student-exam-different-ips\" [(ngModel)]=\"checkboxCriterionSameStudentExamDifferentIPAddressesChecked\" />\r\n    <label for=\"same-student-exam-different-ips\" jhiTranslate=\"artemisApp.examManagement.suspiciousBehavior.suspiciousSessionCriterionDifferentIpAddress\"></label>\r\n</div>\r\n<div>\r\n    <input\r\n        class=\"form-check-input\"\r\n        type=\"checkbox\"\r\n        id=\"same-student-exam-different-fingerprints\"\r\n        [(ngModel)]=\"checkboxCriterionSameStudentExamDifferentBrowserFingerprintsChecked\"\r\n    />\r\n    <label for=\"same-student-exam-different-fingerprints\" jhiTranslate=\"artemisApp.examManagement.suspiciousBehavior.suspiciousSessionCriterionDifferentBrowserFingerprint\"></label>\r\n</div>\r\n<div>\r\n    <input class=\"form-check-input\" type=\"checkbox\" id=\"ip-outside-of-range\" [(ngModel)]=\"checkboxCriterionIPOutsideOfASpecificRangeChecked\" />\r\n    <label for=\"ip-outside-of-range\" jhiTranslate=\"artemisApp.examManagement.suspiciousBehavior.suspiciousSessionCriterionIpOutsideOfRange\"></label>\r\n</div>\r\n@if (checkboxCriterionIPOutsideOfASpecificRangeChecked) {\r\n    <div class=\"form-group col-6\">\r\n        <div class=\"d-flex\">\r\n            <label for=\"ip-subnet\" class=\"me-2\" jhiTranslate=\"artemisApp.examManagement.suspiciousBehavior.subnet\"></label>\r\n            <jhi-help-icon text=\"artemisApp.examManagement.suspiciousBehavior.subnetHelp\" />\r\n        </div>\r\n        <input type=\"text\" class=\"form-control\" id=\"ip-subnet\" [(ngModel)]=\"ipSubnet\" [pattern]=\"ipSubnetRegexPattern\" required />\r\n    </div>\r\n}\r\n<div class=\"mt-3 mb-3\">\r\n    <jhi-button [title]=\"'artemisApp.examManagement.suspiciousBehavior.analyzeSessions'\" [disabled]=\"!analyzeButtonEnabled\" [isLoading]=\"analyzing\" (onClick)=\"analyzeSessions()\" />\r\n</div>\r\n<div class=\"column\">\r\n    @if (analyzed) {\r\n        <p jhiTranslate=\"artemisApp.examManagement.suspiciousBehavior.suspiciousSessions.number\" [translateValues]=\"{ numberOfSuspiciousSessions: suspiciousSessions?.length }\"></p>\r\n    }\r\n    @if (suspiciousSessions.length !== 0) {\r\n        <button type=\"submit\" (click)=\"goToSuspiciousSessions()\" class=\"btn btn-primary mb-5\">\r\n            <span class=\"d-none d-md-inline\" id=\"view-sessions-btn\" jhiTranslate=\"artemisApp.examManagement.suspiciousBehavior.suspiciousSessions.view\"></span>\r\n        </button>\r\n    }\r\n</div>\r\n<jhi-plagiarism-cases-overview\r\n    [exercises]=\"exercises\"\r\n    [plagiarismCasesPerExercise]=\"plagiarismCasesPerExercise\"\r\n    [plagiarismResultsPerExercise]=\"plagiarismResultsPerExercise\"\r\n    [anyPlagiarismCases]=\"anyPlagiarismCases\"\r\n    [courseId]=\"courseId\"\r\n    [examId]=\"examId\"\r\n/>\r\n"],
  "mappings": "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",
  "names": ["SuspiciousSessionsService", "http", "inject", "HttpClient", "getSuspiciousSessions", "courseId", "examId", "options", "params", "HttpParams", "set", "sameIpAddressDifferentStudentExams", "toString", "sameBrowserFingerprintDifferentStudentExams", "differentIpAddressesSameStudentExam", "ipAddressOutsideOfRange", "ipSubnet", "get", "factory", "\u0275fac", "providedIn", "PlagiarismResultsService", "http", "inject", "HttpClient", "resourceUrlExercises", "getNumberOfPlagiarismResultsForExercise", "exerciseId", "get", "factory", "\u0275fac", "providedIn", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275listener", "exercise_r2", "\u0275\u0275restoreView", "_r1", "$implicit", "ctx_r2", "\u0275\u0275nextContext", "\u0275\u0275resetView", "goToPlagiarismDetection", "\u0275\u0275advance", "\u0275\u0275textInterpolate", "\u0275$index_34_r4", "title", "plagiarismResultsPerExercise", "get", "plagiarismCasesPerExercise", "\u0275\u0275propertyInterpolate1", "_r5", "goToPlagiarismCases", "PlagiarismCasesOverviewComponent", "router", "inject", "Router", "exercises", "input", "required", "anyPlagiarismCases", "courseId", "examId", "exercise", "exerciseGroupId", "exerciseGroup", "id", "exerciseType", "type", "navigate", "getExerciseUrlSegment", "selectors", "inputs", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275element", "\u0275\u0275repeaterCreate", "PlagiarismCasesOverviewComponent_For_24_Template", "\u0275\u0275repeaterTrackByIdentity", "\u0275\u0275template", "PlagiarismCasesOverviewComponent_Conditional_27_Template", "\u0275\u0275repeater", "\u0275\u0275conditional", "TranslateDirective", "encapsulation", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275twoWayListener", "$event", "\u0275\u0275restoreView", "_r1", "ctx_r1", "\u0275\u0275nextContext", "i0", "\u0275\u0275twoWayBindingSet", "ipSubnet", "\u0275\u0275resetView", "\u0275\u0275advance", "\u0275\u0275twoWayProperty", "\u0275\u0275property", "ipSubnetRegexPattern", "\u0275\u0275pureFunction1", "_c0", "suspiciousSessions", "length", "\u0275\u0275listener", "_r3", "goToSuspiciousSessions", "SuspiciousBehaviorComponent", "suspiciousSessionsService", "inject", "SuspiciousSessionsService", "activatedRoute", "ActivatedRoute", "plagiarismCasesService", "PlagiarismCasesService", "examService", "ExamManagementService", "plagiarismResultsService", "PlagiarismResultsService", "router", "Router", "exercises", "plagiarismCasesPerExercise", "Map", "plagiarismResultsPerExercise", "anyPlagiarismCases", "examId", "courseId", "checkboxCriterionDifferentStudentExamsSameIPAddressChecked", "checkboxCriterionDifferentStudentExamsSameBrowserFingerprintChecked", "checkboxCriterionSameStudentExamDifferentIPAddressesChecked", "checkboxCriterionSameStudentExamDifferentBrowserFingerprintsChecked", "checkboxCriterionIPOutsideOfASpecificRangeChecked", "analyzing", "analyzed", "RegExp", "documentationType", "ngOnInit", "Number", "snapshot", "paramMap", "get", "getExercisesWithPotentialPlagiarismForExam", "subscribe", "res", "retrievePlagiarismCases", "forEach", "exercise", "getNumberOfPlagiarismCasesForExercise", "computeIfAbsent", "getNumberOfPlagiarismResultsForExercise", "id", "analyzeButtonEnabled", "test", "navigate", "state", "analyzeSessions", "options", "SuspiciousSessionsAnalysisOptions", "getSuspiciousSessions", "next", "error", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275template", "SuspiciousBehaviorComponent_Conditional_43_Template", "SuspiciousBehaviorComponent_Conditional_51_Template", "SuspiciousBehaviorComponent_Conditional_52_Template", "\u0275\u0275textInterpolate1", "\u0275\u0275pipeBind1", "\u0275\u0275conditional", "FormsModule", "DefaultValueAccessor", "CheckboxControlValueAccessor", "NgControlStatus", "RequiredValidator", "PatternValidator", "NgModel", "TranslateDirective", "ArtemisTranslatePipe", "PlagiarismCasesOverviewComponent", "ButtonComponent", "HelpIconComponent", "DocumentationButtonComponent", "encapsulation"]
}
