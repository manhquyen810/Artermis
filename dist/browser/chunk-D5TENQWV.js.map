{
  "version": 3,
  "sources": ["src/main/webapp/app/exercises/shared/example-solution/example-solution.component.ts", "src/main/webapp/app/exercises/shared/example-solution/example-solution.component.html"],
  "sourcesContent": ["import { Component, Input, OnInit, inject } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Exercise } from 'app/entities/exercise.model';\r\nimport { ExampleSolutionInfo, ExerciseService } from 'app/exercises/shared/exercise/exercise.service';\r\nimport { ArtemisMarkdownService } from 'app/shared/markdown.service';\r\nimport { HeaderExercisePageWithDetailsComponent } from '../exercise-headers/header-exercise-page-with-details.component';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { ModelingEditorComponent } from '../../modeling/shared/modeling-editor.component';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\nimport { HtmlForMarkdownPipe } from 'app/shared/pipes/html-for-markdown.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-example-solution',\r\n    templateUrl: './example-solution.component.html',\r\n    imports: [HeaderExercisePageWithDetailsComponent, TranslateDirective, ModelingEditorComponent, ArtemisTranslatePipe, HtmlForMarkdownPipe],\r\n})\r\nexport class ExampleSolutionComponent implements OnInit {\r\n    private exerciseService = inject(ExerciseService);\r\n    private route = inject(ActivatedRoute);\r\n    private artemisMarkdown = inject(ArtemisMarkdownService);\r\n\r\n    private displayedExerciseId: number;\r\n    public exercise?: Exercise;\r\n    public exampleSolutionInfo?: ExampleSolutionInfo;\r\n\r\n    @Input() exerciseId?: number;\r\n    @Input() displayHeader = true;\r\n\r\n    ngOnInit() {\r\n        this.route.params.subscribe((params) => {\r\n            const exerciseId = this.exerciseId || parseInt(params['exerciseId'], 10);\r\n\r\n            const didExerciseChange = this.displayedExerciseId !== exerciseId;\r\n            this.displayedExerciseId = exerciseId;\r\n            if (didExerciseChange) {\r\n                this.loadExercise();\r\n            }\r\n        });\r\n    }\r\n\r\n    loadExercise() {\r\n        this.exercise = undefined;\r\n        this.exerciseService.getExerciseForExampleSolution(this.displayedExerciseId).subscribe((exerciseResponse: HttpResponse<Exercise>) => {\r\n            const newExercise = exerciseResponse.body!;\r\n            this.exercise = newExercise;\r\n            this.exampleSolutionInfo = ExerciseService.extractExampleSolutionInfo(newExercise, this.artemisMarkdown);\r\n        });\r\n    }\r\n}\r\n", "@if (exercise) {\r\n    <div>\r\n        @if (displayHeader) {\r\n            <jhi-header-exercise-page-with-details [exercise]=\"exercise!\" [course]=\"exercise?.exerciseGroup?.exam?.course\">\r\n                <span pagetitle>{{ exercise?.exerciseGroup ? exercise.exerciseGroup!.title : exercise!.title }}</span>\r\n            </jhi-header-exercise-page-with-details>\r\n        }\r\n        <div class=\"row\">\r\n            <div class=\"col pe-0 flex-grow-1\">\r\n                <!-- PROBLEM STATEMENT START -->\r\n                <div class=\"row mt-2 mb-2 align-items-baseline\" id=\"problem-statement\">\r\n                    <div class=\"col-12 col-md-12 markdown-preview problem-statement\">\r\n                        <h3 jhiTranslate=\"artemisApp.exercise.problemStatement\"></h3>\r\n                        <p\r\n                            [innerHTML]=\"\r\n                                exercise?.problemStatement ? (exercise.problemStatement | htmlForMarkdown) : ('artemisApp.exercise.emptyProblemStatement' | artemisTranslate)\r\n                            \"\r\n                        ></p>\r\n                    </div>\r\n                </div>\r\n                <!-- PROBLEM STATEMENT END -->\r\n                <div class=\"row mb-2 mt-2 align-items-baseline\">\r\n                    <h3 class=\"pe-2\" jhiTranslate=\"artemisApp.exercise.exampleSolution\"></h3>\r\n                </div>\r\n                <dl class=\"row-md jh-entity-details markdown-preview\">\r\n                    @if (exampleSolutionInfo?.exampleSolutionUML || exampleSolutionInfo?.exampleSolution) {\r\n                        @if (exampleSolutionInfo?.exampleSolutionUML && exampleSolutionInfo?.modelingExercise) {\r\n                            <dd class=\"editor-outline-background\">\r\n                                <jhi-modeling-editor\r\n                                    [readOnly]=\"true\"\r\n                                    [diagramType]=\"exampleSolutionInfo?.modelingExercise?.diagramType\"\r\n                                    [umlModel]=\"exampleSolutionInfo?.exampleSolutionUML\"\r\n                                    [withExplanation]=\"!!exampleSolutionInfo?.modelingExercise?.exampleSolutionExplanation\"\r\n                                    [explanation]=\"exampleSolutionInfo?.modelingExercise?.exampleSolutionExplanation || ''\"\r\n                                />\r\n                            </dd>\r\n                        }\r\n                        <dd [innerHTML]=\"exampleSolutionInfo?.exampleSolution\"></dd>\r\n                    } @else {\r\n                        <dd [innerHTML]=\"'artemisApp.exercise.emptyExampleSolution' | artemisTranslate\"></dd>\r\n                    }\r\n                </dl>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "ctx_r0", "exercise", "exerciseGroup", "exam", "course", "\u0275\u0275textInterpolate", "title", "\u0275\u0275element", "exampleSolutionInfo", "modelingExercise", "diagramType", "exampleSolutionUML", "exampleSolutionExplanation", "\u0275\u0275template", "ExampleSolutionComponent_Conditional_0_Conditional_29_Conditional_1_Template", "\u0275\u0275conditional", "exampleSolution", "\u0275\u0275sanitizeHtml", "\u0275\u0275pipeBind1", "ExampleSolutionComponent_Conditional_0_Conditional_3_Template", "ExampleSolutionComponent_Conditional_0_Conditional_29_Template", "ExampleSolutionComponent_Conditional_0_Conditional_30_Template", "displayHeader", "problemStatement", "ExampleSolutionComponent", "exerciseService", "inject", "ExerciseService", "route", "ActivatedRoute", "artemisMarkdown", "ArtemisMarkdownService", "displayedExerciseId", "exerciseId", "ngOnInit", "params", "subscribe", "parseInt", "didExerciseChange", "loadExercise", "undefined", "getExerciseForExampleSolution", "exerciseResponse", "newExercise", "body", "extractExampleSolutionInfo", "selectors", "inputs", "decls", "vars", "consts", "template", "rf", "ctx", "ExampleSolutionComponent_Conditional_0_Template", "HeaderExercisePageWithDetailsComponent", "TranslateDirective", "ModelingEditorComponent", "ArtemisTranslatePipe", "HtmlForMarkdownPipe", "encapsulation"]
}
