{
  "version": 3,
  "sources": ["src/main/webapp/app/admin/configuration/configuration.service.ts", "src/main/webapp/app/admin/configuration/configuration.component.ts", "src/main/webapp/app/admin/configuration/configuration.component.html"],
  "sourcesContent": ["import { Injectable, inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { Bean, Beans, ConfigProps, Env, PropertySource } from './configuration.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ConfigurationService {\r\n    private http = inject(HttpClient);\r\n\r\n    getBeans(): Observable<Bean[]> {\r\n        return this.http.get<ConfigProps>('management/configprops').pipe(\r\n            map((configProps) =>\r\n                Object.values(\r\n                    Object.values(configProps.contexts)\r\n                        .map((context) => context.beans)\r\n                        .reduce((allBeans: Beans, contextBeans: Beans) => ({ ...allBeans, ...contextBeans })),\r\n                ),\r\n            ),\r\n        );\r\n    }\r\n\r\n    getPropertySources(): Observable<PropertySource[]> {\r\n        return this.http.get<Env>('management/env').pipe(map((env) => env.propertySources));\r\n    }\r\n}\r\n", "import { Component, OnInit, inject } from '@angular/core';\r\n\r\nimport { ConfigurationService } from './configuration.service';\r\nimport { Bean, PropertySource } from './configuration.model';\r\nimport { faSort } from '@fortawesome/free-solid-svg-icons';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SortDirective } from 'app/shared/sort/sort.directive';\r\nimport { SortByDirective } from 'app/shared/sort/sort-by.directive';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { JsonPipe, KeyValuePipe } from '@angular/common';\r\n\r\n@Component({\r\n    selector: 'jhi-configuration',\r\n    templateUrl: './configuration.component.html',\r\n    imports: [TranslateDirective, FormsModule, SortDirective, SortByDirective, FaIconComponent, JsonPipe, KeyValuePipe],\r\n})\r\nexport class ConfigurationComponent implements OnInit {\r\n    private configurationService = inject(ConfigurationService);\r\n\r\n    allBeans!: Bean[];\r\n    beans: Bean[] = [];\r\n    beansFilter = '';\r\n    beansAscending = true;\r\n    propertySources: PropertySource[] = [];\r\n\r\n    // Icons\r\n    faSort = faSort;\r\n\r\n    ngOnInit(): void {\r\n        this.configurationService.getBeans().subscribe((beans) => {\r\n            this.allBeans = beans;\r\n            this.filterAndSortBeans();\r\n        });\r\n\r\n        this.configurationService.getPropertySources().subscribe((propertySources) => (this.propertySources = propertySources));\r\n    }\r\n\r\n    filterAndSortBeans(): void {\r\n        const beansAscendingValue = this.beansAscending ? -1 : 1;\r\n        const beansAscendingValueReverse = this.beansAscending ? 1 : -1;\r\n        this.beans = this.allBeans\r\n            .filter((bean) => !this.beansFilter || bean.prefix.toLowerCase().includes(this.beansFilter.toLowerCase()))\r\n            .sort((a, b) => (a.prefix < b.prefix ? beansAscendingValue : beansAscendingValueReverse));\r\n    }\r\n}\r\n", "@if (allBeans) {\r\n    <div>\r\n        <h2 id=\"configuration-page-heading\" jhiTranslate=\"configuration.title\" data-cy=\"configurationPageHeading\"></h2>\r\n        <span jhiTranslate=\"configuration.filter\"></span>\r\n        <input type=\"text\" [(ngModel)]=\"beansFilter\" (ngModelChange)=\"filterAndSortBeans()\" class=\"form-control\" />\r\n        <h3 id=\"spring-configuration\">Spring configuration</h3>\r\n        <table class=\"table table-striped table-bordered table-responsive d-table\" aria-describedby=\"spring-configuration\">\r\n            <thead>\r\n                <tr jhiSort predicate=\"prefix\" [(ascending)]=\"beansAscending\" (sortChange)=\"filterAndSortBeans()\">\r\n                    <th jhiSortBy=\"prefix\" scope=\"col\" class=\"w-40\"><span jhiTranslate=\"configuration.table.prefix\"></span> <fa-icon [icon]=\"faSort\" /></th>\r\n                    <th scope=\"col\" class=\"w-60\"><span jhiTranslate=\"configuration.table.properties\"></span></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                @for (bean of beans; track bean) {\r\n                    <tr>\r\n                        <td>\r\n                            <span>{{ bean.prefix }}</span>\r\n                        </td>\r\n                        <td>\r\n                            @for (property of bean.properties | keyvalue; track property) {\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-4\">{{ property.key }}</div>\r\n                                    <div class=\"col-md-8\">\r\n                                        <span class=\"float-end badge bg-secondary break\">{{ property.value | json }}</span>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </td>\r\n                    </tr>\r\n                }\r\n            </tbody>\r\n        </table>\r\n        @for (propertySource of propertySources; track propertySource; let i = $index) {\r\n            <div>\r\n                <h4 [id]=\"'property-source-' + i\">\r\n                    <span>{{ propertySource.name }}</span>\r\n                </h4>\r\n                <table class=\"table table-sm table-striped table-bordered table-responsive d-table\" [attr.aria-describedby]=\"'property-source-' + i\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\" class=\"w-40\">Property</th>\r\n                            <th scope=\"col\" class=\"w-60\">Value</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        @for (property of propertySource.properties | keyvalue; track property) {\r\n                            <tr>\r\n                                <td class=\"break\">{{ property.key }}</td>\r\n                                <td class=\"break\">\r\n                                    <span class=\"float-end badge bg-secondary break\">{{ property.value.value }}</span>\r\n                                </td>\r\n                            </tr>\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        }\r\n    </div>\r\n}\r\n"],
  "mappings": "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",
  "names": ["ConfigurationService", "http", "inject", "HttpClient", "getBeans", "get", "pipe", "map", "configProps", "Object", "values", "contexts", "context", "beans", "reduce", "allBeans", "contextBeans", "__spreadValues", "getPropertySources", "env", "propertySources", "factory", "\u0275fac", "providedIn", "\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275textInterpolate", "property_r3", "key", "\u0275\u0275pipeBind1", "value", "\u0275\u0275repeaterCreate", "ConfigurationComponent_Conditional_0_For_31_For_12_Template", "\u0275\u0275repeaterTrackByIdentity", "bean_r4", "prefix", "\u0275\u0275repeater", "properties", "property_r5", "ConfigurationComponent_Conditional_0_For_35_For_26_Template", "\u0275\u0275property", "\u0275$index_86_r7", "propertySource_r6", "name", "\u0275\u0275element", "\u0275\u0275twoWayListener", "$event", "\u0275\u0275restoreView", "_r1", "ctx_r1", "\u0275\u0275nextContext", "i0", "\u0275\u0275twoWayBindingSet", "beansFilter", "\u0275\u0275resetView", "\u0275\u0275listener", "filterAndSortBeans", "beansAscending", "ConfigurationComponent_Conditional_0_For_31_Template", "ConfigurationComponent_Conditional_0_For_35_Template", "\u0275\u0275twoWayProperty", "faSort", "beans", "propertySources", "ConfigurationComponent", "configurationService", "inject", "ConfigurationService", "allBeans", "ngOnInit", "getBeans", "subscribe", "getPropertySources", "beansAscendingValue", "beansAscendingValueReverse", "filter", "bean", "toLowerCase", "includes", "sort", "a", "b", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275template", "ConfigurationComponent_Conditional_0_Template", "\u0275\u0275conditional", "TranslateDirective", "FormsModule", "DefaultValueAccessor", "NgControlStatus", "NgModel", "SortDirective", "SortByDirective", "FaIconComponent", "JsonPipe", "KeyValuePipe", "encapsulation"]
}
