{
  "version": 3,
  "sources": ["src/main/webapp/app/grading-system/grading-key-overview/grading-key-overview.component.ts", "src/main/webapp/app/grading-system/grading-key-overview/grading-key-overview.component.html"],
  "sourcesContent": ["import { Component, OnInit, inject } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { GradeStep } from 'app/entities/grade-step.model';\r\nimport { ArtemisNavigationUtilService } from 'app/utils/navigation.utils';\r\nimport { faChevronLeft, faPrint } from '@fortawesome/free-solid-svg-icons';\r\nimport { ThemeService } from 'app/core/theme/theme.service';\r\nimport { loadGradingKeyUrlParams } from 'app/grading-system/grading-key-overview/grading-key-helper';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { GradingKeyTableComponent } from 'app/grading-system/grading-key-overview/grading-key/grading-key-table.component';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { ArtemisTranslatePipe } from 'app/shared/pipes/artemis-translate.pipe';\r\n\r\n@Component({\r\n    selector: 'jhi-grade-key-overview',\r\n    templateUrl: './grading-key-overview.component.html',\r\n    styleUrls: ['./grading-key-overview.scss'],\r\n    imports: [TranslateDirective, GradingKeyTableComponent, FaIconComponent, ArtemisTranslatePipe],\r\n})\r\nexport class GradingKeyOverviewComponent implements OnInit {\r\n    private route = inject(ActivatedRoute);\r\n    private navigationUtilService = inject(ArtemisNavigationUtilService);\r\n    private themeService = inject(ThemeService);\r\n\r\n    readonly faChevronLeft = faChevronLeft;\r\n    readonly faPrint = faPrint;\r\n\r\n    plagiarismGrade: string;\r\n    noParticipationGrade: string;\r\n\r\n    isExam = false;\r\n\r\n    courseId?: number;\r\n    examId?: number;\r\n\r\n    title?: string;\r\n    gradeSteps: GradeStep[] = [];\r\n    studentGradeOrBonusPointsOrGradeBonus?: string;\r\n    isBonus = false;\r\n    forBonus: boolean;\r\n\r\n    ngOnInit(): void {\r\n        const { courseId, examId, forBonus, isExam, studentGradeOrBonusPointsOrGradeBonus } = loadGradingKeyUrlParams(this.route);\r\n\r\n        this.courseId = courseId;\r\n        this.examId = examId;\r\n        this.forBonus = forBonus;\r\n        this.isExam = isExam;\r\n        this.studentGradeOrBonusPointsOrGradeBonus = studentGradeOrBonusPointsOrGradeBonus;\r\n    }\r\n\r\n    /**\r\n     * Navigates to the previous page (back button on the browser)\r\n     */\r\n    previousState() {\r\n        const fallbackUrl = ['courses', this.courseId!.toString()];\r\n        if (this.isExam) {\r\n            fallbackUrl.push('exams', this.examId!.toString());\r\n        } else {\r\n            fallbackUrl.push('statistics');\r\n        }\r\n        this.navigationUtilService.navigateBack(fallbackUrl);\r\n    }\r\n\r\n    /**\r\n     * Exports page as PDF\r\n     */\r\n    async printPDF() {\r\n        await this.themeService.print();\r\n    }\r\n}\r\n", "<div class=\"row justify-content-center\">\r\n    <div class=\"col-6\">\r\n        <h1 class=\"text-center mb-3\">\r\n            {{ (forBonus ? 'artemisApp.gradingSystem.titleBonus' : isExam ? 'artemisApp.gradingSystem.titleExam' : 'artemisApp.gradingSystem.titleCourse') | artemisTranslate }}\r\n            {{ title }}\r\n        </h1>\r\n        @if (!isExam) {\r\n            <h6 jhiTranslate=\"artemisApp.gradingSystem.overview.info\"></h6>\r\n        }\r\n        <jhi-grade-key-table />\r\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"previousState()\"><fa-icon [icon]=\"faChevronLeft\" />&nbsp;<span jhiTranslate=\"entity.action.back\"></span></button>\r\n        <button id=\"exportToPDFButton\" class=\"btn btn-primary\" style=\"float: right\" (click)=\"printPDF()\">\r\n            <fa-icon [icon]=\"faPrint\" />\r\n            <span jhiTranslate=\"artemisApp.exam.examSummary.exportPDF\"></span>\r\n        </button>\r\n    </div>\r\n</div>\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275text", "\u0275\u0275element", "GradingKeyOverviewComponent", "route", "inject", "ActivatedRoute", "navigationUtilService", "ArtemisNavigationUtilService", "themeService", "ThemeService", "faChevronLeft", "faPrint", "plagiarismGrade", "noParticipationGrade", "isExam", "courseId", "examId", "title", "gradeSteps", "studentGradeOrBonusPointsOrGradeBonus", "isBonus", "forBonus", "ngOnInit", "loadGradingKeyUrlParams", "previousState", "fallbackUrl", "toString", "push", "navigateBack", "printPDF", "__async", "print", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275elementEnd", "\u0275\u0275template", "GradingKeyOverviewComponent_Conditional_8_Template", "\u0275\u0275listener", "\u0275\u0275advance", "\u0275\u0275textInterpolate2", "\u0275\u0275pipeBind1", "\u0275\u0275conditional", "\u0275\u0275property", "TranslateDirective", "GradingKeyTableComponent", "FaIconComponent", "ArtemisTranslatePipe", "styles"]
}
