{
  "version": 3,
  "sources": ["src/main/webapp/app/exam/manage/exercise-groups/exercise-group-update.component.ts", "src/main/webapp/app/exam/manage/exercise-groups/exercise-group-update.component.html"],
  "sourcesContent": ["import { Component, OnInit, inject } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { AlertService } from 'app/core/util/alert.service';\r\nimport { Observable } from 'rxjs';\r\nimport { ExerciseGroup } from 'app/entities/exercise-group.model';\r\nimport { ExerciseGroupService } from 'app/exam/manage/exercise-groups/exercise-group.service';\r\nimport { Exam } from 'app/entities/exam/exam.model';\r\nimport { onError } from 'app/shared/util/global.utils';\r\nimport { faBan, faSave } from '@fortawesome/free-solid-svg-icons';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgbAlert } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\n\r\n@Component({\r\n    selector: 'jhi-exercise-group-update',\r\n    templateUrl: './exercise-group-update.component.html',\r\n    imports: [TranslateDirective, FormsModule, NgbAlert, FaIconComponent],\r\n})\r\nexport class ExerciseGroupUpdateComponent implements OnInit {\r\n    private route = inject(ActivatedRoute);\r\n    private router = inject(Router);\r\n    private exerciseGroupService = inject(ExerciseGroupService);\r\n    private alertService = inject(AlertService);\r\n\r\n    readonly alertType = 'info';\r\n    courseId: number;\r\n    exam: Exam;\r\n    exerciseGroup: ExerciseGroup;\r\n    isSaving = false;\r\n    // Icons\r\n    faBan = faBan;\r\n    faSave = faSave;\r\n\r\n    /**\r\n     * Initialize the courseId and exerciseGroup\r\n     */\r\n    ngOnInit(): void {\r\n        this.courseId = Number(this.route.snapshot.paramMap.get('courseId'));\r\n        this.route.data.subscribe(({ exam, exerciseGroup }) => {\r\n            this.exam = exam;\r\n            this.exerciseGroup = exerciseGroup;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Create the exercise group if no id is set.\r\n     * Update the exercise group if an id is set.\r\n     */\r\n    save() {\r\n        this.isSaving = true;\r\n        if (this.exerciseGroup.id !== undefined) {\r\n            this.subscribeToSaveResponse(this.exerciseGroupService.update(this.courseId, this.exam.id!, this.exerciseGroup));\r\n        } else {\r\n            this.exerciseGroup.exam = this.exam;\r\n            this.subscribeToSaveResponse(this.exerciseGroupService.create(this.courseId, this.exam.id!, this.exerciseGroup));\r\n        }\r\n    }\r\n\r\n    previousState() {\r\n        this.router.navigate(['course-management', this.courseId, 'exams', this.route.snapshot.paramMap.get('examId'), 'exercise-groups']);\r\n    }\r\n\r\n    private subscribeToSaveResponse(result: Observable<HttpResponse<ExerciseGroup>>) {\r\n        result.subscribe({\r\n            next: () => this.onSaveSuccess(),\r\n            error: (err: HttpErrorResponse) => this.onSaveError(err),\r\n        });\r\n    }\r\n\r\n    private onSaveSuccess() {\r\n        this.isSaving = false;\r\n        this.previousState();\r\n    }\r\n\r\n    private onSaveError(error: HttpErrorResponse) {\r\n        onError(this.alertService, error);\r\n        this.isSaving = false;\r\n    }\r\n}\r\n", "<div>\r\n    <h4 jhiTranslate=\"{{ exerciseGroup.id ? 'artemisApp.examManagement.exerciseGroup.update' : 'artemisApp.examManagement.exerciseGroup.create' }}\"></h4>\r\n    <form name=\"editForm\" role=\"form\" #editForm=\"ngForm\" (ngSubmit)=\"save()\">\r\n        <div class=\"form-group\">\r\n            <label class=\"form-check-label\" for=\"title\" jhiTranslate=\"artemisApp.examManagement.exerciseGroup.title\"></label>\r\n            <input class=\"form-control\" required type=\"text\" name=\"title\" id=\"title\" [(ngModel)]=\"exerciseGroup.title\" />\r\n        </div>\r\n        <div class=\"form-check\">\r\n            <input class=\"form-check-input\" type=\"checkbox\" id=\"isMandatory\" name=\"isMandatory\" [(ngModel)]=\"exerciseGroup.isMandatory\" />\r\n            <label class=\"form-check-label\" for=\"isMandatory\" jhiTranslate=\"artemisApp.examManagement.exerciseGroup.mandatory\"></label>\r\n        </div>\r\n        <ngb-alert [type]=\"alertType\" [dismissible]=\"false\">\r\n            <span jhiTranslate=\"artemisApp.examManagement.exerciseGroup.titleInfo\"></span>\r\n        </ngb-alert>\r\n        <div class=\"mt-3\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" (click)=\"previousState()\"><fa-icon [icon]=\"faBan\" />&nbsp;<span jhiTranslate=\"entity.action.cancel\"></span></button>\r\n            <button type=\"submit\" id=\"save-group\" [disabled]=\"editForm.form.invalid || isSaving\" class=\"btn btn-primary\">\r\n                <fa-icon [icon]=\"faSave\" />&nbsp;<span jhiTranslate=\"entity.action.save\"></span>\r\n            </button>\r\n        </div>\r\n    </form>\r\n</div>\r\n"],
  "mappings": "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",
  "names": ["ExerciseGroupUpdateComponent", "route", "inject", "ActivatedRoute", "router", "Router", "exerciseGroupService", "ExerciseGroupService", "alertService", "AlertService", "alertType", "courseId", "exam", "exerciseGroup", "isSaving", "faBan", "faSave", "ngOnInit", "Number", "snapshot", "paramMap", "get", "data", "subscribe", "save", "id", "undefined", "subscribeToSaveResponse", "update", "create", "previousState", "navigate", "result", "next", "onSaveSuccess", "error", "err", "onSaveError", "onError", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275element", "\u0275\u0275listener", "i0", "\u0275\u0275restoreView", "_r1", "\u0275\u0275resetView", "\u0275\u0275twoWayListener", "$event", "\u0275\u0275twoWayBindingSet", "title", "\u0275\u0275elementEnd", "isMandatory", "\u0275\u0275advance", "\u0275\u0275propertyInterpolate", "\u0275\u0275twoWayProperty", "\u0275\u0275property", "editForm_r2", "form", "invalid", "TranslateDirective", "FormsModule", "\u0275NgNoValidate", "DefaultValueAccessor", "CheckboxControlValueAccessor", "NgControlStatus", "NgControlStatusGroup", "RequiredValidator", "NgModel", "NgForm", "NgbAlert", "FaIconComponent", "encapsulation"]
}
