{
  "version": 3,
  "sources": ["src/main/webapp/app/course/competencies/create/create-prerequisite.component.ts", "src/main/webapp/app/course/competencies/create/create-prerequisite.component.html"],
  "sourcesContent": ["import { Component, inject } from '@angular/core';\r\nimport { onError } from 'app/shared/util/global.utils';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Prerequisite } from 'app/entities/prerequisite.model';\r\n\r\nimport { PrerequisiteFormComponent } from 'app/course/competencies/forms/prerequisite/prerequisite-form.component';\r\nimport { CreateCourseCompetencyComponent } from 'app/course/competencies/create/create-course-competency.component';\r\nimport { PrerequisiteService } from 'app/course/competencies/prerequisite.service';\r\n\r\nimport { CourseCompetencyFormData } from 'app/course/competencies/forms/course-competency-form.component';\r\nimport { DocumentationButtonComponent } from 'app/shared/components/documentation-button/documentation-button.component';\r\nimport { TranslateDirective } from 'app/shared/language/translate.directive';\r\n\r\n@Component({\r\n    selector: 'jhi-create-prerequisite',\r\n    templateUrl: './create-prerequisite.component.html',\r\n    imports: [PrerequisiteFormComponent, DocumentationButtonComponent, TranslateDirective],\r\n})\r\nexport class CreatePrerequisiteComponent extends CreateCourseCompetencyComponent {\r\n    private prerequisiteService = inject(PrerequisiteService);\r\n\r\n    prerequisiteToCreate: Prerequisite = new Prerequisite();\r\n\r\n    createPrerequisite(formData: CourseCompetencyFormData) {\r\n        if (!formData?.title) {\r\n            return;\r\n        }\r\n\r\n        const { title, description, softDueDate, taxonomy, masteryThreshold, optional } = formData;\r\n\r\n        this.prerequisiteToCreate.title = title;\r\n        this.prerequisiteToCreate.description = description;\r\n        this.prerequisiteToCreate.softDueDate = softDueDate;\r\n        this.prerequisiteToCreate.taxonomy = taxonomy;\r\n        this.prerequisiteToCreate.masteryThreshold = masteryThreshold;\r\n        this.prerequisiteToCreate.optional = optional;\r\n\r\n        this.isLoading = true;\r\n\r\n        this.prerequisiteService\r\n            .create(this.prerequisiteToCreate, this.courseId)\r\n            .pipe(\r\n                finalize(() => {\r\n                    this.isLoading = false;\r\n                }),\r\n            )\r\n            .subscribe({\r\n                next: () => {\r\n                    // currently at /course-management/{courseId}/prerequisite-management/create, going to /course-management/{courseId}/competency-management/, since prerequisite-management redirects to competency-management\r\n                    this.router.navigate(['../'], { relativeTo: this.activatedRoute });\r\n                },\r\n                error: (res: HttpErrorResponse) => onError(this.alertService, res),\r\n            });\r\n    }\r\n}\r\n", "@if (isLoading) {\r\n    <div class=\"d-flex justify-content-center\">\r\n        <div class=\"spinner-border\" role=\"status\">\r\n            <span class=\"sr-only\" jhiTranslate=\"loading\"></span>\r\n        </div>\r\n    </div>\r\n} @else {\r\n    <div class=\"container\">\r\n        <div class=\"d-flex align-items-center\">\r\n            <h3 jhiTranslate=\"artemisApp.prerequisite.create.title\"></h3>\r\n            <jhi-documentation-button [type]=\"documentationType\" />\r\n        </div>\r\n        <jhi-prerequisite-form\r\n            [isEditMode]=\"false\"\r\n            (formSubmitted)=\"createPrerequisite($event)\"\r\n            [courseId]=\"courseId\"\r\n            [lecturesOfCourseWithLectureUnits]=\"lecturesWithLectureUnits\"\r\n            [prerequisite]=\"prerequisiteToCreate\"\r\n        />\r\n    </div>\r\n}\r\n"],
  "mappings": "qiFCCIA,EAAA,EAAA;KAAA,EAAAC,EAAA,EAAA,MAAA,CAAA,EACID,EAAA,EAAA;SAAA,EAAAC,EAAA,EAAA,MAAA,CAAA,EACID,EAAA,EAAA;aAAA,EAAAE,EAAA,EAAA,OAAA,CAAA,EACJF,EAAA,EAAA;SAAA,EAAAG,EAAA,EACJH,EAAA,EAAA;KAAA,EAAAG,EAAA,EACJH,EAAA,EAAA;CAAA,qCACIA,EAAA,EAAA;KAAA,EAAAC,EAAA,EAAA,MAAA,CAAA,EACID,EAAA,EAAA;SAAA,EAAAC,EAAA,EAAA,MAAA,CAAA,EACID,EAAA,EAAA;aAAA,EAAAE,EAAA,EAAA,KAAA,CAAA,EACAF,EAAA,EAAA;aAAA,EAAAE,EAAA,EAAA,2BAAA,CAAA,EACJF,EAAA,EAAA;SAAA,EAAAG,EAAA,EACAH,EAAA,EAAA;SAAA,EAAAC,EAAA,GAAA,wBAAA,CAAA,EAEIG,EAAA,gBAAA,SAAAC,EAAA,CAAAC,EAAAC,CAAA,EAAA,IAAAC,EAAAC,EAAA,EAAA,OAAAC,EAAiBF,EAAAG,mBAAAN,CAAA,CAA0B,CAAA,CAAA,EAF/CF,EAAA,EAOJH,EAAA,GAAA;KAAA,EAAAG,EAAA,EACJH,EAAA,GAAA;CAAA,oBAVsCY,EAAA,CAAA,EAAAC,EAAA,OAAAL,EAAAM,iBAAA,EAG1BF,EAAA,CAAA,EAAAC,EAAA,aAAA,EAAA,EAAoB,WAAAL,EAAAO,QAAA,EAEC,mCAAAP,EAAAQ,wBAAA,EACwC,eAAAR,EAAAS,oBAAA,GDGzE,IAAaC,GAA4B,IAAA,CAAnC,MAAOA,UAAoCC,CAA+B,CACpEC,oBAAsBC,EAAOC,CAAmB,EAExDL,qBAAqC,IAAIM,EAEzCZ,mBAAmBa,EAAkC,CACjD,GAAI,CAACA,GAAUC,MACX,OAGJ,GAAM,CAAEA,MAAAA,EAAOC,YAAAA,EAAaC,YAAAA,EAAaC,SAAAA,EAAUC,iBAAAA,EAAkBC,SAAAA,CAAQ,EAAKN,EAElF,KAAKP,qBAAqBQ,MAAQA,EAClC,KAAKR,qBAAqBS,YAAcA,EACxC,KAAKT,qBAAqBU,YAAcA,EACxC,KAAKV,qBAAqBW,SAAWA,EACrC,KAAKX,qBAAqBY,iBAAmBA,EAC7C,KAAKZ,qBAAqBa,SAAWA,EAErC,KAAKC,UAAY,GAEjB,KAAKX,oBACAY,OAAO,KAAKf,qBAAsB,KAAKF,QAAQ,EAC/CkB,KACGC,EAAS,IAAK,CACV,KAAKH,UAAY,EACrB,CAAC,CAAC,EAELI,UAAU,CACPC,KAAMA,IAAK,CAEP,KAAKC,OAAOC,SAAS,CAAC,KAAK,EAAG,CAAEC,WAAY,KAAKC,cAAc,CAAE,CACrE,EACAC,MAAQC,GAA2BC,EAAQ,KAAKC,aAAcF,CAAG,EACpE,CACT,gEAnCSxB,CAA2B,IAAA2B,GAA3B3B,CAA2B,CAAA,CAAA,GAAA,2BAA3BA,EAA2B4B,UAAA,CAAA,CAAA,yBAAA,CAAA,EAAAC,SAAA,CAAAC,CAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,SAAA,wBAAA,EAAA,CAAA,OAAA,SAAA,EAAA,gBAAA,EAAA,CAAA,eAAA,UAAA,EAAA,SAAA,EAAA,CAAA,EAAA,WAAA,EAAA,CAAA,EAAA,SAAA,oBAAA,EAAA,CAAA,eAAA,sCAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,EAAA,gBAAA,aAAA,WAAA,mCAAA,cAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,GCnBxCE,EAAA,EAAAC,EAAA,EAAA,CAAA,EAAiB,EAAAC,EAAA,GAAA,CAAA,OAAjBC,EAAAJ,EAAAvB,UAAA,EAAA,CAAA,iBDiBc4B,EAA2BC,EAA8BC,CAAkB,EAAAC,cAAA,CAAA,CAAA,SAE5E5C,CAA4B,GAAA",
  "names": ["\u0275\u0275text", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275listener", "$event", "\u0275\u0275restoreView", "_r1", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "createPrerequisite", "\u0275\u0275advance", "\u0275\u0275property", "documentationType", "courseId", "lecturesWithLectureUnits", "prerequisiteToCreate", "CreatePrerequisiteComponent", "CreateCourseCompetencyComponent", "prerequisiteService", "inject", "PrerequisiteService", "Prerequisite", "formData", "title", "description", "softDueDate", "taxonomy", "masteryThreshold", "optional", "isLoading", "create", "pipe", "finalize", "subscribe", "next", "router", "navigate", "relativeTo", "activatedRoute", "error", "res", "onError", "alertService", "__ngFactoryType__", "selectors", "features", "\u0275\u0275InheritDefinitionFeature", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275template", "CreatePrerequisiteComponent_Conditional_0_Template", "CreatePrerequisiteComponent_Conditional_1_Template", "\u0275\u0275conditional", "PrerequisiteFormComponent", "DocumentationButtonComponent", "TranslateDirective", "encapsulation"]
}
